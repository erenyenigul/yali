; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_block_sparse_matrix_ez.ll'
source_filename = "block_sparse_matrix_ez.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.BlockSparseMatrixEZ = type { %class.Subscriptor, %class.BlockIndices, %class.BlockIndices, %class.Table }
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.BlockIndices = type { i32, %"class.std::vector" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%class.Table = type { %class.TableBase.base, [4 x i8] }
%class.TableBase.base = type <{ %class.Subscriptor, %class.SparseMatrixEZ*, i32, %class.TableIndices }>
%class.SparseMatrixEZ = type <{ %class.Subscriptor, i32, [4 x i8], %"class.std::vector.0", %"class.std::vector.5", i32, [4 x i8] }>
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl" }
%"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl" = type { %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data" }
%"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data" = type { %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"* }
%"struct.SparseMatrixEZ<double>::RowInfo" = type { i32, i16, i16 }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl" }
%"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl" = type { %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data" }
%"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data" = type { %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"* }
%"struct.SparseMatrixEZ<double>::Entry" = type { i32, double }
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%class.BlockSparseMatrixEZ.11 = type { %class.Subscriptor, %class.BlockIndices, %class.BlockIndices, %class.Table.12 }
%class.Table.12 = type { %class.TableBase.base.15, [4 x i8] }
%class.TableBase.base.15 = type <{ %class.Subscriptor, %class.SparseMatrixEZ.14*, i32, %class.TableIndices }>
%class.SparseMatrixEZ.14 = type <{ %class.Subscriptor, i32, [4 x i8], %"class.std::vector.17", %"class.std::vector.22", i32, [4 x i8] }>
%"class.std::vector.17" = type { %"struct.std::_Vector_base.18" }
%"struct.std::_Vector_base.18" = type { %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl" }
%"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl" = type { %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data" }
%"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data" = type { %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"* }
%"struct.SparseMatrixEZ<float>::RowInfo" = type { i32, i16, i16 }
%"class.std::vector.22" = type { %"struct.std::_Vector_base.23" }
%"struct.std::_Vector_base.23" = type { %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl" }
%"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl" = type { %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data" }
%"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data" = type { %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"* }
%"struct.SparseMatrixEZ<float>::Entry" = type { i32, float }
%"class.std::allocator" = type { i8 }
%class.TableBase = type <{ %class.Subscriptor, %class.SparseMatrixEZ*, i32, %class.TableIndices, [4 x i8] }>
%"class.internal::TableBaseAccessors::Accessor.10" = type { %class.TableBase*, %class.SparseMatrixEZ* }
%"class.internal::TableBaseAccessors::Accessor" = type { %class.TableBase*, %class.SparseMatrixEZ* }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"struct.std::pair" = type { i32, i32 }
%class.TableBase.13 = type <{ %class.Subscriptor, %class.SparseMatrixEZ.14*, i32, %class.TableIndices, [4 x i8] }>
%"class.internal::TableBaseAccessors::Accessor.29" = type { %class.TableBase.13*, %class.SparseMatrixEZ.14* }
%"class.internal::TableBaseAccessors::Accessor.28" = type { %class.TableBase.13*, %class.SparseMatrixEZ.14* }
%"class.__gnu_cxx::__normal_iterator" = type { i32* }
%"struct.std::__true_type" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.30" = type { i32* }
%"class.std::__pair_base" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.31" = type { %"struct.SparseMatrixEZ<double>::Entry"* }
%"class.std::allocator.7" = type { i8 }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.32" = type { %"struct.SparseMatrixEZ<float>::Entry"* }
%"class.std::allocator.24" = type { i8 }
%"class.__gnu_cxx::new_allocator.25" = type { i8 }

$_ZN19BlockSparseMatrixEZIdEC5Ev = comdat any

$_ZN12BlockIndicesC2Ej = comdat any

$_ZN5TableILi2E14SparseMatrixEZIdEEC2Ev = comdat any

$_ZN12BlockIndicesD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN19BlockSparseMatrixEZIdEC5Ejj = comdat any

$_ZN19BlockSparseMatrixEZIdEC5ERKS0_ = comdat any

$_ZN12BlockIndicesC2ERKS_ = comdat any

$_ZN5TableILi2E14SparseMatrixEZIdEEC2ERKS2_ = comdat any

$_ZN19BlockSparseMatrixEZIdEaSERKS0_ = comdat any

$_ZNK19BlockSparseMatrixEZIdE12n_block_rowsEv = comdat any

$_ZNK19BlockSparseMatrixEZIdE12n_block_colsEv = comdat any

$_ZNK19BlockSparseMatrixEZIdE5blockEjj = comdat any

$_ZN19BlockSparseMatrixEZIdE5blockEjj = comdat any

$_ZN19BlockSparseMatrixEZIdEaSEd = comdat any

$_ZN19BlockSparseMatrixEZIdE5clearEv = comdat any

$_ZN12BlockIndices6reinitEjj = comdat any

$_ZN5TableILi2E14SparseMatrixEZIdEE6reinitEjj = comdat any

$_ZN19BlockSparseMatrixEZIdE6reinitEjj = comdat any

$_ZN19BlockSparseMatrixEZIdE13collect_sizesEv = comdat any

$_ZNSaIjEC2Ev = comdat any

$_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_ = comdat any

$_ZNSaIjED2Ev = comdat any

$_ZN5TableILi2E14SparseMatrixEZIdEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEixEj = comdat any

$_ZNK14SparseMatrixEZIdE1mEv = comdat any

$_ZNSt6vectorIjSaIjEEixEm = comdat any

$_ZN12BlockIndices6reinitERKSt6vectorIjSaIjEE = comdat any

$_ZNK14SparseMatrixEZIdE1nEv = comdat any

$_ZNSt6vectorIjSaIjEED2Ev = comdat any

$_ZNK5TableILi2E14SparseMatrixEZIdEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb1ELj1EEixEj = comdat any

$_ZNK12BlockIndices4sizeEv = comdat any

$_ZNK19BlockSparseMatrixEZIdE5emptyEv = comdat any

$_ZNK19BlockSparseMatrixEZIdE6n_rowsEv = comdat any

$_ZNK12BlockIndices10total_sizeEv = comdat any

$_ZNK19BlockSparseMatrixEZIdE6n_colsEv = comdat any

$_ZNK19BlockSparseMatrixEZIdE1mEv = comdat any

$_ZNK19BlockSparseMatrixEZIdE1nEv = comdat any

$_ZN19BlockSparseMatrixEZIdE3setEjjd = comdat any

$_ZNK12BlockIndices15global_to_localEj = comdat any

$_ZN14SparseMatrixEZIdE3setEjjd = comdat any

$_ZN19BlockSparseMatrixEZIdE3addEjjd = comdat any

$_ZN14SparseMatrixEZIdE3addEjjd = comdat any

$_ZN19BlockSparseMatrixEZIfEC5Ev = comdat any

$_ZN5TableILi2E14SparseMatrixEZIfEEC2Ev = comdat any

$_ZN19BlockSparseMatrixEZIfEC5Ejj = comdat any

$_ZN19BlockSparseMatrixEZIfEC5ERKS0_ = comdat any

$_ZN5TableILi2E14SparseMatrixEZIfEEC2ERKS2_ = comdat any

$_ZN19BlockSparseMatrixEZIfEaSERKS0_ = comdat any

$_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv = comdat any

$_ZNK19BlockSparseMatrixEZIfE12n_block_colsEv = comdat any

$_ZNK19BlockSparseMatrixEZIfE5blockEjj = comdat any

$_ZN19BlockSparseMatrixEZIfE5blockEjj = comdat any

$_ZN19BlockSparseMatrixEZIfEaSEd = comdat any

$_ZN19BlockSparseMatrixEZIfE5clearEv = comdat any

$_ZN5TableILi2E14SparseMatrixEZIfEE6reinitEjj = comdat any

$_ZN19BlockSparseMatrixEZIfE6reinitEjj = comdat any

$_ZN19BlockSparseMatrixEZIfE13collect_sizesEv = comdat any

$_ZN5TableILi2E14SparseMatrixEZIfEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEixEj = comdat any

$_ZNK14SparseMatrixEZIfE1mEv = comdat any

$_ZNK14SparseMatrixEZIfE1nEv = comdat any

$_ZNK5TableILi2E14SparseMatrixEZIfEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb1ELj1EEixEj = comdat any

$_ZNK19BlockSparseMatrixEZIfE5emptyEv = comdat any

$_ZNK19BlockSparseMatrixEZIfE6n_rowsEv = comdat any

$_ZNK19BlockSparseMatrixEZIfE6n_colsEv = comdat any

$_ZNK19BlockSparseMatrixEZIfE1mEv = comdat any

$_ZNK19BlockSparseMatrixEZIfE1nEv = comdat any

$_ZN19BlockSparseMatrixEZIfE3setEjjf = comdat any

$_ZN14SparseMatrixEZIfE3setEjjf = comdat any

$_ZN19BlockSparseMatrixEZIfE3addEjjf = comdat any

$_ZN14SparseMatrixEZIfE3addEjjf = comdat any

$_ZN19BlockSparseMatrixEZIdED2Ev = comdat any

$_ZN19BlockSparseMatrixEZIdED0Ev = comdat any

$_ZN19BlockSparseMatrixEZIfED2Ev = comdat any

$_ZN19BlockSparseMatrixEZIfED0Ev = comdat any

$_ZNSt6vectorIjSaIjEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIjSaIjEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIjSaIjEE5beginEv = comdat any

$_ZNKSt6vectorIjSaIjEE3endEv = comdat any

$_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIjSaIjEED2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIjED2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_ = comdat any

$_ZSt12__niter_wrapIPjET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZSt12__niter_baseIPjET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIdEEC2ERKS2_ = comdat any

$_ZN5TableILi2E14SparseMatrixEZIdEED2Ev = comdat any

$_ZN5TableILi2E14SparseMatrixEZIdEED0Ev = comdat any

$_ZN12TableIndicesILi2EEC2Ev = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIdEE6reinitERK12TableIndicesILi2EE = comdat any

$_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIdEE4fillIS1_EEvPKT_ = comdat any

$_ZNK9TableBaseILi2E14SparseMatrixEZIdEE4dataEv = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIdEED2Ev = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIdEED0Ev = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIdEE12reset_valuesEv = comdat any

$_ZSt6fill_nIP14SparseMatrixEZIdEjS1_ET_S3_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIP14SparseMatrixEZIdEET_RKS3_S3_ = comdat any

$_ZSt10__fill_n_aIP14SparseMatrixEZIdEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_ = comdat any

$_ZSt12__niter_baseIP14SparseMatrixEZIdEET_S3_ = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZSt4copyIPK14SparseMatrixEZIdEPS1_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb0EPK14SparseMatrixEZIdEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__miter_baseIPK14SparseMatrixEZIdEET_S4_ = comdat any

$_ZSt13__copy_move_aILb0EPK14SparseMatrixEZIdEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__niter_baseIPK14SparseMatrixEZIdEET_S4_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK14SparseMatrixEZIdEPS4_EET0_T_S9_S8_ = comdat any

$_ZNSt6vectorIjSaIjEEC2IjEET_S3_RKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEEC2ERKS0_ = comdat any

$_ZNSt6vectorIjSaIjEE22_M_initialize_dispatchIjEEvT_S3_St11__true_type = comdat any

$_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_ = comdat any

$_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj = comdat any

$_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_ = comdat any

$_ZNSaIjEC2ERKS_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNSt6vectorIjSaIjEE6resizeEmj = comdat any

$_ZNKSt6vectorIjSaIjEEixEm = comdat any

$_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj = comdat any

$_ZNSt6vectorIjSaIjEE3endEv = comdat any

$_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj = comdat any

$_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZSt4fillIPjjEvT_S1_RKT0_ = comdat any

$_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIjSaIjEE5beginEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E = comdat any

$_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPjET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNKSt6vectorIjSaIjEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_ = comdat any

$_ZSt8_DestroyIPjEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_ = comdat any

$_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_ = comdat any

$_ZNSt4pairIjjEC2ERKjS2_ = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIfEEC2ERKS2_ = comdat any

$_ZN5TableILi2E14SparseMatrixEZIfEED2Ev = comdat any

$_ZN5TableILi2E14SparseMatrixEZIfEED0Ev = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIfEE6reinitERK12TableIndicesILi2EE = comdat any

$_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIfEE4fillIS1_EEvPKT_ = comdat any

$_ZNK9TableBaseILi2E14SparseMatrixEZIfEE4dataEv = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIfEED2Ev = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIfEED0Ev = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIfEE12reset_valuesEv = comdat any

$_ZSt6fill_nIP14SparseMatrixEZIfEjS1_ET_S3_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIP14SparseMatrixEZIfEET_RKS3_S3_ = comdat any

$_ZSt10__fill_n_aIP14SparseMatrixEZIfEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_ = comdat any

$_ZSt12__niter_baseIP14SparseMatrixEZIfEET_S3_ = comdat any

$_ZSt4copyIPK14SparseMatrixEZIfEPS1_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb0EPK14SparseMatrixEZIfEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__miter_baseIPK14SparseMatrixEZIfEET_S4_ = comdat any

$_ZSt13__copy_move_aILb0EPK14SparseMatrixEZIfEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__niter_baseIPK14SparseMatrixEZIfEET_S4_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK14SparseMatrixEZIfEPS4_EET0_T_S9_S8_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2Ev = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIdEEC2Ev = comdat any

$_ZN12TableIndicesILi2EEC2Ejj = comdat any

$_ZNK5TableILi2E14SparseMatrixEZIdEE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_ = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EE4sizeEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb1ELj1EEC2ERK9TableBaseILi2ES3_EPKS3_ = comdat any

$_ZN14SparseMatrixEZIdE6locateEjj = comdat any

$_ZN14SparseMatrixEZIdE8allocateEjj = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EEixEm = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEplEl = comdat any

$_ZN14SparseMatrixEZIdE5EntryC2Ev = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE9push_backERKS2_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZN9__gnu_cxxmiIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE3endEv = comdat any

$_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13copy_backwardIPN14SparseMatrixEZIdE5EntryES3_ET0_T_S5_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZSt4fillIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIdE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIdE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPN14SparseMatrixEZIdE5EntryES3_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN14SparseMatrixEZIdE5EntryES5_EET0_T_S7_S6_ = comdat any

$_ZSt10_ConstructIN14SparseMatrixEZIdE5EntryES2_EvPT_RKT0_ = comdat any

$_ZSt11__addressofIN14SparseMatrixEZIdE5EntryEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIdE5EntryEEEvT_S6_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPN14SparseMatrixEZIdE5EntryES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_ = comdat any

$_ZSt12__niter_wrapIPN14SparseMatrixEZIdE5EntryEET_RKS4_S4_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPN14SparseMatrixEZIdE5EntryES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIN14SparseMatrixEZIdE5EntryEEEPT_PKS6_S9_S7_ = comdat any

$_ZSt8__fill_aIPN14SparseMatrixEZIdE5EntryES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_ = comdat any

$_ZSt20uninitialized_fill_nIPN14SparseMatrixEZIdE5EntryEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN14SparseMatrixEZIdE5EntryEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE8max_sizeEv = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E8max_sizeERKS4_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8allocateEmPKv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE9constructEPS3_RKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E7destroyERS4_PS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE7destroyEPS3_ = comdat any

$_ZN9TableBaseILi2E14SparseMatrixEZIfEEC2Ev = comdat any

$_ZNK5TableILi2E14SparseMatrixEZIfEE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_ = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EE4sizeEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb1ELj1EEC2ERK9TableBaseILi2ES3_EPKS3_ = comdat any

$_ZN14SparseMatrixEZIfE6locateEjj = comdat any

$_ZN14SparseMatrixEZIfE8allocateEjj = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEplEl = comdat any

$_ZN14SparseMatrixEZIfE5EntryC2Ev = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE9push_backERKS2_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZN9__gnu_cxxmiIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE3endEv = comdat any

$_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13copy_backwardIPN14SparseMatrixEZIfE5EntryES3_ET0_T_S5_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZSt4fillIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIfE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIfE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPN14SparseMatrixEZIfE5EntryES3_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN14SparseMatrixEZIfE5EntryES5_EET0_T_S7_S6_ = comdat any

$_ZSt10_ConstructIN14SparseMatrixEZIfE5EntryES2_EvPT_RKT0_ = comdat any

$_ZSt11__addressofIN14SparseMatrixEZIfE5EntryEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIfE5EntryEEEvT_S6_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPN14SparseMatrixEZIfE5EntryES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_ = comdat any

$_ZSt12__niter_wrapIPN14SparseMatrixEZIfE5EntryEET_RKS4_S4_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPN14SparseMatrixEZIfE5EntryES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIN14SparseMatrixEZIfE5EntryEEEPT_PKS6_S9_S7_ = comdat any

$_ZSt8__fill_aIPN14SparseMatrixEZIfE5EntryES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_ = comdat any

$_ZSt20uninitialized_fill_nIPN14SparseMatrixEZIfE5EntryEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN14SparseMatrixEZIfE5EntryEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE8max_sizeEv = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E8max_sizeERKS4_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8allocateEmPKv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_ = comdat any

$_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE9constructEPS3_RKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E7destroyERS4_PS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE7destroyEPS3_ = comdat any

$_ZTV19BlockSparseMatrixEZIdE = comdat any

$_ZTV19BlockSparseMatrixEZIfE = comdat any

$_ZTS19BlockSparseMatrixEZIdE = comdat any

$_ZTI19BlockSparseMatrixEZIdE = comdat any

$_ZTS19BlockSparseMatrixEZIfE = comdat any

$_ZTI19BlockSparseMatrixEZIfE = comdat any

$_ZTV5TableILi2E14SparseMatrixEZIdEE = comdat any

$_ZTS5TableILi2E14SparseMatrixEZIdEE = comdat any

$_ZTS9TableBaseILi2E14SparseMatrixEZIdEE = comdat any

$_ZTI9TableBaseILi2E14SparseMatrixEZIdEE = comdat any

$_ZTI5TableILi2E14SparseMatrixEZIdEE = comdat any

$_ZTV9TableBaseILi2E14SparseMatrixEZIdEE = comdat any

$_ZTV5TableILi2E14SparseMatrixEZIfEE = comdat any

$_ZTS5TableILi2E14SparseMatrixEZIfEE = comdat any

$_ZTS9TableBaseILi2E14SparseMatrixEZIfEE = comdat any

$_ZTI9TableBaseILi2E14SparseMatrixEZIfEE = comdat any

$_ZTI5TableILi2E14SparseMatrixEZIfEE = comdat any

$_ZTV9TableBaseILi2E14SparseMatrixEZIfEE = comdat any

@_ZTV19BlockSparseMatrixEZIdE = weak_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI19BlockSparseMatrixEZIdE to i8*), i8* bitcast (void (%class.BlockSparseMatrixEZ*)* @_ZN19BlockSparseMatrixEZIdED2Ev to i8*), i8* bitcast (void (%class.BlockSparseMatrixEZ*)* @_ZN19BlockSparseMatrixEZIdED0Ev to i8*)] }, comdat, align 8
@_ZTV19BlockSparseMatrixEZIfE = weak_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI19BlockSparseMatrixEZIfE to i8*), i8* bitcast (void (%class.BlockSparseMatrixEZ.11*)* @_ZN19BlockSparseMatrixEZIfED2Ev to i8*), i8* bitcast (void (%class.BlockSparseMatrixEZ.11*)* @_ZN19BlockSparseMatrixEZIfED0Ev to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS19BlockSparseMatrixEZIdE = weak_odr constant [25 x i8] c"19BlockSparseMatrixEZIdE\00", comdat
@_ZTI11Subscriptor = external constant i8*
@_ZTI19BlockSparseMatrixEZIdE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS19BlockSparseMatrixEZIdE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTS19BlockSparseMatrixEZIfE = weak_odr constant [25 x i8] c"19BlockSparseMatrixEZIfE\00", comdat
@_ZTI19BlockSparseMatrixEZIfE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS19BlockSparseMatrixEZIfE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTV5TableILi2E14SparseMatrixEZIdEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI5TableILi2E14SparseMatrixEZIdEE to i8*), i8* bitcast (void (%class.Table*)* @_ZN5TableILi2E14SparseMatrixEZIdEED2Ev to i8*), i8* bitcast (void (%class.Table*)* @_ZN5TableILi2E14SparseMatrixEZIdEED0Ev to i8*)] }, comdat, align 8
@_ZTS5TableILi2E14SparseMatrixEZIdEE = linkonce_odr constant [32 x i8] c"5TableILi2E14SparseMatrixEZIdEE\00", comdat
@_ZTS9TableBaseILi2E14SparseMatrixEZIdEE = linkonce_odr constant [36 x i8] c"9TableBaseILi2E14SparseMatrixEZIdEE\00", comdat
@_ZTI9TableBaseILi2E14SparseMatrixEZIdEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTS9TableBaseILi2E14SparseMatrixEZIdEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTI5TableILi2E14SparseMatrixEZIdEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTS5TableILi2E14SparseMatrixEZIdEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E14SparseMatrixEZIdEE to i8*) }, comdat
@_ZTV9TableBaseILi2E14SparseMatrixEZIdEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E14SparseMatrixEZIdEE to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2E14SparseMatrixEZIdEED2Ev to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2E14SparseMatrixEZIdEED0Ev to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@_ZTV5TableILi2E14SparseMatrixEZIfEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI5TableILi2E14SparseMatrixEZIfEE to i8*), i8* bitcast (void (%class.Table.12*)* @_ZN5TableILi2E14SparseMatrixEZIfEED2Ev to i8*), i8* bitcast (void (%class.Table.12*)* @_ZN5TableILi2E14SparseMatrixEZIfEED0Ev to i8*)] }, comdat, align 8
@_ZTS5TableILi2E14SparseMatrixEZIfEE = linkonce_odr constant [32 x i8] c"5TableILi2E14SparseMatrixEZIfEE\00", comdat
@_ZTS9TableBaseILi2E14SparseMatrixEZIfEE = linkonce_odr constant [36 x i8] c"9TableBaseILi2E14SparseMatrixEZIfEE\00", comdat
@_ZTI9TableBaseILi2E14SparseMatrixEZIfEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTS9TableBaseILi2E14SparseMatrixEZIfEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTI5TableILi2E14SparseMatrixEZIfEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTS5TableILi2E14SparseMatrixEZIfEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E14SparseMatrixEZIfEE to i8*) }, comdat
@_ZTV9TableBaseILi2E14SparseMatrixEZIfEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E14SparseMatrixEZIfEE to i8*), i8* bitcast (void (%class.TableBase.13*)* @_ZN9TableBaseILi2E14SparseMatrixEZIfEED2Ev to i8*), i8* bitcast (void (%class.TableBase.13*)* @_ZN9TableBaseILi2E14SparseMatrixEZIfEED0Ev to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0

@_ZN19BlockSparseMatrixEZIdEC1Ev = weak_odr alias void (%class.BlockSparseMatrixEZ*), void (%class.BlockSparseMatrixEZ*)* @_ZN19BlockSparseMatrixEZIdEC2Ev
@_ZN19BlockSparseMatrixEZIdEC1Ejj = weak_odr alias void (%class.BlockSparseMatrixEZ*, i32, i32), void (%class.BlockSparseMatrixEZ*, i32, i32)* @_ZN19BlockSparseMatrixEZIdEC2Ejj
@_ZN19BlockSparseMatrixEZIdEC1ERKS0_ = weak_odr alias void (%class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ*), void (%class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ*)* @_ZN19BlockSparseMatrixEZIdEC2ERKS0_
@_ZN19BlockSparseMatrixEZIfEC1Ev = weak_odr alias void (%class.BlockSparseMatrixEZ.11*), void (%class.BlockSparseMatrixEZ.11*)* @_ZN19BlockSparseMatrixEZIfEC2Ev
@_ZN19BlockSparseMatrixEZIfEC1Ejj = weak_odr alias void (%class.BlockSparseMatrixEZ.11*, i32, i32), void (%class.BlockSparseMatrixEZ.11*, i32, i32)* @_ZN19BlockSparseMatrixEZIfEC2Ejj
@_ZN19BlockSparseMatrixEZIfEC1ERKS0_ = weak_odr alias void (%class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11*), void (%class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11*)* @_ZN19BlockSparseMatrixEZIfEC2ERKS0_

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdEC2Ev(%class.BlockSparseMatrixEZ*) unnamed_addr #0 comdat($_ZN19BlockSparseMatrixEZIdEC5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.BlockSparseMatrixEZ*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %2, align 8
  %5 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %2, align 8
  %6 = bitcast %class.BlockSparseMatrixEZ* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %6)
  %7 = bitcast %class.BlockSparseMatrixEZ* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 1
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %8, i32 0)
          to label %9 unwind label %14

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 2
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %10, i32 0)
          to label %11 unwind label %18

; <label>:11:                                     ; preds = %9
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 3
  invoke void @_ZN5TableILi2E14SparseMatrixEZIdEEC2Ev(%class.Table* %12)
          to label %13 unwind label %38

; <label>:13:                                     ; preds = %11
  ret void

; <label>:14:                                     ; preds = %1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %3, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %4, align 4
  br label %61

; <label>:18:                                     ; preds = %9
  %19 = load i32, i32* @x
  %20 = load i32, i32* @y
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %3, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %4, align 4
  %30 = load i32, i32* @x
  %31 = load i32, i32* @y
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %59

; <label>:38:                                     ; preds = %11
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %10)
          to label %42 unwind label %101

; <label>:42:                                     ; preds = %38
  %43 = load i32, i32* @x
  %44 = load i32, i32* @y
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %59

; <label>:59:                                     ; preds = %originalBBpart24, %originalBBpart2
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %8)
          to label %60 unwind label %101

; <label>:60:                                     ; preds = %59
  br label %61

; <label>:61:                                     ; preds = %60, %14
  %62 = bitcast %class.BlockSparseMatrixEZ* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %62)
          to label %63 unwind label %101

; <label>:63:                                     ; preds = %61
  %64 = load i32, i32* @x
  %65 = load i32, i32* @y
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i32, i32* @x
  %73 = load i32, i32* @y
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %80

; <label>:80:                                     ; preds = %originalBBpart28
  %81 = load i32, i32* @x
  %82 = load i32, i32* @y
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i8*, i8** %3, align 8
  %90 = load i32, i32* %4, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  %93 = load i32, i32* @x
  %94 = load i32, i32* @y
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %92

; <label>:101:                                    ; preds = %61, %59, %38
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  call void @__clang_call_terminate(i8* %103) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %3, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %4, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %107 = load i8*, i8** %3, align 8
  %108 = load i32, i32* %4, align 4
  %109 = insertvalue { i8*, i32 } undef, i8* %107, 0
  %110 = insertvalue { i8*, i32 } %109, i32 %108, 1
  br label %originalBB10
}

declare void @_ZN11SubscriptorC2Ev(%class.Subscriptor*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12BlockIndicesC2Ej(%class.BlockIndices*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.BlockIndices*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::allocator", align 1
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %class.BlockIndices*, %class.BlockIndices** %3, align 8
  %11 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %10, i32 0, i32 0
  %12 = load i32, i32* %4, align 4
  store i32 %12, i32* %11, align 8
  %13 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %10, i32 0, i32 1
  %14 = load i32, i32* %4, align 4
  %15 = add i32 %14, 1
  %16 = zext i32 %15 to i64
  store i32 0, i32* %5, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %6) #10
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector"* %13, i64 %16, i32* dereferenceable(4) %5, %"class.std::allocator"* dereferenceable(1) %6)
          to label %17 unwind label %64

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %6) #10
  store i32 0, i32* %9, align 4
  br label %18

; <label>:18:                                     ; preds = %originalBBpart24, %17
  %19 = load i32, i32* %9, align 4
  %20 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %10, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp ule i32 %19, %21
  br i1 %22, label %23, label %72

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.1
  %25 = load i32, i32* @y.2
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %10, i32 0, i32 1
  %33 = load i32, i32* %9, align 4
  %34 = zext i32 %33 to i64
  %35 = load i32, i32* @x.1
  %36 = load i32, i32* @y.2
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %43 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %32, i64 %34)
          to label %44 unwind label %68

; <label>:44:                                     ; preds = %originalBBpart2
  store i32 0, i32* %43, align 4
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i32, i32* @x.1
  %47 = load i32, i32* @y.2
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i32, i32* %9, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %9, align 4
  %56 = load i32, i32* @x.1
  %57 = load i32, i32* @y.2
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %18

; <label>:64:                                     ; preds = %2
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %7, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %8, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %6) #10
  br label %74

; <label>:68:                                     ; preds = %originalBBpart2
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %7, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %8, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %13)
          to label %73 unwind label %79

; <label>:72:                                     ; preds = %18
  ret void

; <label>:73:                                     ; preds = %68
  br label %74

; <label>:74:                                     ; preds = %73, %64
  %75 = load i8*, i8** %7, align 8
  %76 = load i32, i32* %8, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  resume { i8*, i32 } %78

; <label>:79:                                     ; preds = %68
  %80 = load i32, i32* @x.1
  %81 = load i32, i32* @y.2
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %79, %originalBB6alteredBB
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  call void @__clang_call_terminate(i8* %89) #9
  %90 = load i32, i32* @x.1
  %91 = load i32, i32* @y.2
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %23
  %98 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %10, i32 0, i32 1
  %99 = load i32, i32* %9, align 4
  %100 = zext i32 %99 to i64
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %101 = load i32, i32* %9, align 4
  %_ = shl i32 %101, 1
  %_2 = sub i32 0, %101
  %gen = add i32 %_2, 1
  %102 = add i32 %101, 1
  store i32 %102, i32* %9, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %79
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #9
  br label %originalBB6
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIdEEC2Ev(%class.Table*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIdEEC2Ev(%class.TableBase* %4)
  %5 = bitcast %class.Table* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2E14SparseMatrixEZIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12BlockIndicesD2Ev(%class.BlockIndices*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.BlockIndices*, align 8
  store %class.BlockIndices* %0, %class.BlockIndices** %2, align 8
  %3 = load %class.BlockIndices*, %class.BlockIndices** %2, align 8
  %4 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %3, i32 0, i32 1
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #2 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #10
  call void @_ZSt9terminatev() #9
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

declare void @_ZN11SubscriptorD2Ev(%class.Subscriptor*) unnamed_addr #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdEC2Ejj(%class.BlockSparseMatrixEZ*, i32, i32) unnamed_addr #0 comdat($_ZN19BlockSparseMatrixEZIdEC5Ejj) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.9
  %5 = load i32, i32* @y.10
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.BlockSparseMatrixEZ*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*
  %16 = alloca i32
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %17 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %12, align 8
  %18 = bitcast %class.BlockSparseMatrixEZ* %17 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %18)
  %19 = bitcast %class.BlockSparseMatrixEZ* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %17, i32 0, i32 1
  %21 = load i32, i32* %13, align 4
  %22 = load i32, i32* @x.9
  %23 = load i32, i32* @y.10
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %20, i32 %21)
          to label %30 unwind label %52

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.9
  %32 = load i32, i32* @y.10
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %17, i32 0, i32 2
  %40 = load i32, i32* %14, align 4
  %41 = load i32, i32* @x.9
  %42 = load i32, i32* @y.10
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %39, i32 %40)
          to label %49 unwind label %56

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %17, i32 0, i32 3
  invoke void @_ZN5TableILi2E14SparseMatrixEZIdEEC2Ev(%class.Table* %50)
          to label %51 unwind label %76

; <label>:51:                                     ; preds = %49
  ret void

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %15, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %16, align 4
  br label %115

; <label>:56:                                     ; preds = %originalBBpart24
  %57 = load i32, i32* @x.9
  %58 = load i32, i32* @y.10
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %15, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %16, align 4
  %68 = load i32, i32* @x.9
  %69 = load i32, i32* @y.10
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %97

; <label>:76:                                     ; preds = %49
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %15, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %16, align 4
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %39)
          to label %80 unwind label %139

; <label>:80:                                     ; preds = %76
  %81 = load i32, i32* @x.9
  %82 = load i32, i32* @y.10
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i32, i32* @x.9
  %90 = load i32, i32* @y.10
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %97

; <label>:97:                                     ; preds = %originalBBpart212, %originalBBpart28
  %98 = load i32, i32* @x.9
  %99 = load i32, i32* @y.10
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %97, %originalBB14alteredBB
  %106 = load i32, i32* @x.9
  %107 = load i32, i32* @y.10
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %20)
          to label %114 unwind label %139

; <label>:114:                                    ; preds = %originalBBpart216
  br label %115

; <label>:115:                                    ; preds = %114, %52
  %116 = load i32, i32* @x.9
  %117 = load i32, i32* @y.10
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = bitcast %class.BlockSparseMatrixEZ* %17 to %class.Subscriptor*
  %125 = load i32, i32* @x.9
  %126 = load i32, i32* @y.10
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %124)
          to label %133 unwind label %139

; <label>:133:                                    ; preds = %originalBBpart220
  br label %134

; <label>:134:                                    ; preds = %133
  %135 = load i8*, i8** %15, align 8
  %136 = load i32, i32* %16, align 4
  %137 = insertvalue { i8*, i32 } undef, i8* %135, 0
  %138 = insertvalue { i8*, i32 } %137, i32 %136, 1
  resume { i8*, i32 } %138

; <label>:139:                                    ; preds = %originalBBpart220, %originalBBpart216, %76
  %140 = landingpad { i8*, i32 }
          catch i8* null
  %141 = extractvalue { i8*, i32 } %140, 0
  call void @__clang_call_terminate(i8* %141) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %142 = alloca %class.BlockSparseMatrixEZ*, align 8
  %143 = alloca i32, align 4
  %144 = alloca i32, align 4
  %145 = alloca i8*
  %146 = alloca i32
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %142, align 8
  store i32 %1, i32* %143, align 4
  store i32 %2, i32* %144, align 4
  %147 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %142, align 8
  %148 = bitcast %class.BlockSparseMatrixEZ* %147 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %148)
  %149 = bitcast %class.BlockSparseMatrixEZ* %147 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %149, align 8
  %150 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %147, i32 0, i32 1
  %151 = load i32, i32* %143, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %152 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %17, i32 0, i32 2
  %153 = load i32, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %154 = landingpad { i8*, i32 }
          cleanup
  %155 = extractvalue { i8*, i32 } %154, 0
  store i8* %155, i8** %15, align 8
  %156 = extractvalue { i8*, i32 } %154, 1
  store i32 %156, i32* %16, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %97
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %157 = bitcast %class.BlockSparseMatrixEZ* %17 to %class.Subscriptor*
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdEC2ERKS0_(%class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ* dereferenceable(136)) unnamed_addr #0 comdat($_ZN19BlockSparseMatrixEZIdEC5ERKS0_) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.BlockSparseMatrixEZ*, align 8
  %4 = alloca %class.BlockSparseMatrixEZ*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %3, align 8
  store %class.BlockSparseMatrixEZ* %1, %class.BlockSparseMatrixEZ** %4, align 8
  %7 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %3, align 8
  %8 = bitcast %class.BlockSparseMatrixEZ* %7 to %class.Subscriptor*
  %9 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %10 = bitcast %class.BlockSparseMatrixEZ* %9 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor* %8, %class.Subscriptor* dereferenceable(24) %10)
  %11 = bitcast %class.BlockSparseMatrixEZ* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %7, i32 0, i32 1
  %13 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %14 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %13, i32 0, i32 1
  invoke void @_ZN12BlockIndicesC2ERKS_(%class.BlockIndices* %12, %class.BlockIndices* dereferenceable(32) %14)
          to label %15 unwind label %40

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %7, i32 0, i32 2
  %17 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %18 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %17, i32 0, i32 2
  invoke void @_ZN12BlockIndicesC2ERKS_(%class.BlockIndices* %16, %class.BlockIndices* dereferenceable(32) %18)
          to label %19 unwind label %44

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @x.11
  %21 = load i32, i32* @y.12
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %7, i32 0, i32 3
  %29 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %30 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %29, i32 0, i32 3
  %31 = load i32, i32* @x.11
  %32 = load i32, i32* @y.12
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN5TableILi2E14SparseMatrixEZIdEEC2ERKS2_(%class.Table* %28, %class.Table* dereferenceable(48) %30)
          to label %39 unwind label %48

; <label>:39:                                     ; preds = %originalBBpart2
  ret void

; <label>:40:                                     ; preds = %2
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %5, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %6, align 4
  br label %103

; <label>:44:                                     ; preds = %15
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %5, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %6, align 4
  br label %85

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = load i32, i32* @x.11
  %50 = load i32, i32* @y.12
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %5, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %6, align 4
  %60 = load i32, i32* @x.11
  %61 = load i32, i32* @y.12
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %16)
          to label %68 unwind label %111

; <label>:68:                                     ; preds = %originalBBpart24
  %69 = load i32, i32* @x.11
  %70 = load i32, i32* @y.12
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %68, %originalBB6alteredBB
  %77 = load i32, i32* @x.11
  %78 = load i32, i32* @y.12
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85

; <label>:85:                                     ; preds = %originalBBpart28, %44
  %86 = load i32, i32* @x.11
  %87 = load i32, i32* @y.12
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = load i32, i32* @x.11
  %95 = load i32, i32* @y.12
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %12)
          to label %102 unwind label %111

; <label>:102:                                    ; preds = %originalBBpart212
  br label %103

; <label>:103:                                    ; preds = %102, %40
  %104 = bitcast %class.BlockSparseMatrixEZ* %7 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %104)
          to label %105 unwind label %111

; <label>:105:                                    ; preds = %103
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i8*, i8** %5, align 8
  %108 = load i32, i32* %6, align 4
  %109 = insertvalue { i8*, i32 } undef, i8* %107, 0
  %110 = insertvalue { i8*, i32 } %109, i32 %108, 1
  resume { i8*, i32 } %110

; <label>:111:                                    ; preds = %103, %originalBBpart212, %originalBBpart24
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  call void @__clang_call_terminate(i8* %113) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %114 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %7, i32 0, i32 3
  %115 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %116 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %115, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %117 = landingpad { i8*, i32 }
          cleanup
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %5, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %6, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  br label %originalBB10
}

declare void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor*, %class.Subscriptor* dereferenceable(24)) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12BlockIndicesC2ERKS_(%class.BlockIndices*, %class.BlockIndices* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.BlockIndices*, align 8
  %4 = alloca %class.BlockIndices*, align 8
  store %class.BlockIndices* %0, %class.BlockIndices** %3, align 8
  store %class.BlockIndices* %1, %class.BlockIndices** %4, align 8
  %5 = load %class.BlockIndices*, %class.BlockIndices** %3, align 8
  %6 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %5, i32 0, i32 0
  %7 = load %class.BlockIndices*, %class.BlockIndices** %4, align 8
  %8 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %6, align 8
  %10 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %5, i32 0, i32 1
  %11 = load %class.BlockIndices*, %class.BlockIndices** %4, align 8
  %12 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %11, i32 0, i32 1
  call void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector"* %10, %"class.std::vector"* dereferenceable(24) %12)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIdEEC2ERKS2_(%class.Table*, %class.Table* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Table*, align 8
  %4 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %3, align 8
  store %class.Table* %1, %class.Table** %4, align 8
  %5 = load %class.Table*, %class.Table** %3, align 8
  %6 = bitcast %class.Table* %5 to %class.TableBase*
  %7 = load %class.Table*, %class.Table** %4, align 8
  %8 = bitcast %class.Table* %7 to %class.TableBase*
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIdEEC2ERKS2_(%class.TableBase* %6, %class.TableBase* dereferenceable(48) %8)
  %9 = bitcast %class.Table* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2E14SparseMatrixEZIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(136) %class.BlockSparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdEaSERKS0_(%class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ* dereferenceable(136)) #0 comdat align 2 {
  %3 = alloca %class.BlockSparseMatrixEZ*, align 8
  %4 = alloca %class.BlockSparseMatrixEZ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %3, align 8
  store %class.BlockSparseMatrixEZ* %1, %class.BlockSparseMatrixEZ** %4, align 8
  %7 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %3, align 8
  store i32 0, i32* %5, align 4
  br label %8

; <label>:8:                                      ; preds = %62, %2
  %9 = load i32, i32* @x.17
  %10 = load i32, i32* @y.18
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_rowsEv(%class.BlockSparseMatrixEZ* %7)
  %19 = icmp ult i32 %17, %18
  %20 = load i32, i32* @x.17
  %21 = load i32, i32* @y.18
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %65

; <label>:28:                                     ; preds = %originalBBpart2
  store i32 0, i32* %6, align 4
  br label %29

; <label>:29:                                     ; preds = %58, %28
  %30 = load i32, i32* %6, align 4
  %31 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_colsEv(%class.BlockSparseMatrixEZ* %7)
  %32 = icmp ult i32 %30, %31
  br i1 %32, label %33, label %61

; <label>:33:                                     ; preds = %29
  %34 = load i32, i32* @x.17
  %35 = load i32, i32* @y.18
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %43 = load i32, i32* %5, align 4
  %44 = load i32, i32* %6, align 4
  %45 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZNK19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %42, i32 %43, i32 %44)
  %46 = load i32, i32* %5, align 4
  %47 = load i32, i32* %6, align 4
  %48 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %7, i32 %46, i32 %47)
  %49 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSERKS0_(%class.SparseMatrixEZ* %48, %class.SparseMatrixEZ* dereferenceable(88) %45)
  %50 = load i32, i32* @x.17
  %51 = load i32, i32* @y.18
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* %6, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %29

; <label>:61:                                     ; preds = %29
  br label %62

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* %5, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %5, align 4
  br label %8

; <label>:65:                                     ; preds = %originalBBpart2
  ret %class.BlockSparseMatrixEZ* %7

originalBBalteredBB:                              ; preds = %originalBB, %8
  %66 = load i32, i32* %5, align 4
  %67 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_rowsEv(%class.BlockSparseMatrixEZ* %7)
  %68 = icmp ult i32 %66, %67
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %69 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %70 = load i32, i32* %5, align 4
  %71 = load i32, i32* %6, align 4
  %72 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZNK19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %69, i32 %70, i32 %71)
  %73 = load i32, i32* %5, align 4
  %74 = load i32, i32* %6, align 4
  %75 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %7, i32 %73, i32 %74)
  %76 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSERKS0_(%class.SparseMatrixEZ* %75, %class.SparseMatrixEZ* dereferenceable(88) %72)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_rowsEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %2, align 8
  %4 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %3, i32 0, i32 1
  %5 = call i32 @_ZNK12BlockIndices4sizeEv(%class.BlockIndices* %4)
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_colsEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = load i32, i32* @x.21
  %3 = load i32, i32* @y.22
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %10, align 8
  %11 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %10, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %11, i32 0, i32 2
  %13 = call i32 @_ZNK12BlockIndices4sizeEv(%class.BlockIndices* %12)
  %14 = load i32, i32* @x.21
  %15 = load i32, i32* @y.22
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %22, align 8
  %23 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %22, align 8
  %24 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %23, i32 0, i32 2
  %25 = call i32 @_ZNK12BlockIndices4sizeEv(%class.BlockIndices* %24)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(88) %class.SparseMatrixEZ* @_ZNK19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.BlockSparseMatrixEZ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.internal::TableBaseAccessors::Accessor.10", align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %9 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %8, i32 0, i32 3
  %10 = load i32, i32* %5, align 4
  call void @_ZNK5TableILi2E14SparseMatrixEZIdEEixEj(%"class.internal::TableBaseAccessors::Accessor.10"* sret %7, %class.Table* %9, i32 %10)
  %11 = load i32, i32* %6, align 4
  %12 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb1ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.10"* %7, i32 %11)
  ret %class.SparseMatrixEZ* %12
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.BlockSparseMatrixEZ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %4, align 8
  %9 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %8, i32 0, i32 3
  %10 = load i32, i32* %5, align 4
  call void @_ZN5TableILi2E14SparseMatrixEZIdEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %7, %class.Table* %9, i32 %10)
  %11 = load i32, i32* %6, align 4
  %12 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %7, i32 %11)
  ret %class.SparseMatrixEZ* %12
}

declare dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSERKS0_(%class.SparseMatrixEZ*, %class.SparseMatrixEZ* dereferenceable(88)) #1

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(136) %class.BlockSparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdEaSEd(%class.BlockSparseMatrixEZ*, double) #0 comdat align 2 {
  %3 = alloca %class.BlockSparseMatrixEZ*, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %3, align 8
  store double %1, double* %4, align 8
  %7 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %3, align 8
  store i32 0, i32* %5, align 4
  br label %8

; <label>:8:                                      ; preds = %originalBBpart2, %2
  %9 = load i32, i32* %5, align 4
  %10 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_rowsEv(%class.BlockSparseMatrixEZ* %7)
  %11 = icmp ult i32 %9, %10
  br i1 %11, label %12, label %45

; <label>:12:                                     ; preds = %8
  store i32 0, i32* %6, align 4
  br label %13

; <label>:13:                                     ; preds = %22, %12
  %14 = load i32, i32* %6, align 4
  %15 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_colsEv(%class.BlockSparseMatrixEZ* %7)
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %25

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* %5, align 4
  %19 = load i32, i32* %6, align 4
  %20 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %7, i32 %18, i32 %19)
  %21 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSEd(%class.SparseMatrixEZ* %20, double 0.000000e+00)
  br label %22

; <label>:22:                                     ; preds = %17
  %23 = load i32, i32* %6, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %6, align 4
  br label %13

; <label>:25:                                     ; preds = %13
  br label %26

; <label>:26:                                     ; preds = %25
  %27 = load i32, i32* @x.27
  %28 = load i32, i32* @y.28
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32, i32* %5, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %5, align 4
  %37 = load i32, i32* @x.27
  %38 = load i32, i32* @y.28
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %8

; <label>:45:                                     ; preds = %8
  %46 = load i32, i32* @x.27
  %47 = load i32, i32* @y.28
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %45, %originalBB5alteredBB
  %54 = load i32, i32* @x.27
  %55 = load i32, i32* @y.28
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  ret %class.BlockSparseMatrixEZ* %7

originalBBalteredBB:                              ; preds = %originalBB, %26
  %62 = load i32, i32* %5, align 4
  %_ = shl i32 %62, 1
  %_1 = sub i32 0, %62
  %gen = add i32 %_1, 1
  %_2 = shl i32 %62, 1
  %_3 = shl i32 %62, 1
  %_4 = shl i32 %62, 1
  %63 = add i32 %62, 1
  store i32 %63, i32* %5, align 4
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %45
  br label %originalBB5
}

declare dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSEd(%class.SparseMatrixEZ*, double) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdE5clearEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %2, align 8
  %4 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %3, i32 0, i32 1
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %4, i32 0, i32 0)
  %5 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %3, i32 0, i32 2
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %5, i32 0, i32 0)
  %6 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %3, i32 0, i32 3
  call void @_ZN5TableILi2E14SparseMatrixEZIdEE6reinitEjj(%class.Table* %6, i32 0, i32 0)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices*, i32, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.BlockIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector", align 8
  %8 = alloca %"class.std::allocator", align 1
  %9 = alloca i8*
  %10 = alloca i32
  store %class.BlockIndices* %0, %class.BlockIndices** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %11 = load %class.BlockIndices*, %class.BlockIndices** %4, align 8
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %6, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %8) #10
  invoke void @_ZNSt6vectorIjSaIjEEC2IjEET_S3_RKS0_(%"class.std::vector"* %7, i32 %12, i32 %13, %"class.std::allocator"* dereferenceable(1) %8)
          to label %14 unwind label %32

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.31
  %16 = load i32, i32* @y.32
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %8) #10
  %23 = load i32, i32* @x.31
  %24 = load i32, i32* @y.32
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN12BlockIndices6reinitERKSt6vectorIjSaIjEE(%class.BlockIndices* %11, %"class.std::vector"* dereferenceable(24) %7)
          to label %31 unwind label %36

; <label>:31:                                     ; preds = %originalBBpart2
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %7)
  ret void

; <label>:32:                                     ; preds = %3
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %9, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %10, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %8) #10
  br label %41

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %9, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %10, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %7)
          to label %40 unwind label %46

; <label>:40:                                     ; preds = %36
  br label %41

; <label>:41:                                     ; preds = %40, %32
  %42 = load i8*, i8** %9, align 8
  %43 = load i32, i32* %10, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

; <label>:46:                                     ; preds = %36
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %14
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %8) #10
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIdEE6reinitEjj(%class.Table*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.TableIndices, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.Table*, %class.Table** %4, align 8
  %9 = bitcast %class.Table* %8 to %class.TableBase*
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %6, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %7, i32 %10, i32 %11)
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE6reinitERK12TableIndicesILi2EE(%class.TableBase* %9, %class.TableIndices* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdE6reinitEjj(%class.BlockSparseMatrixEZ*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.35
  %5 = load i32, i32* @y.36
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.BlockSparseMatrixEZ*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %15 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %12, align 8
  %16 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %15, i32 0, i32 1
  %17 = load i32, i32* %13, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %16, i32 %17, i32 0)
  %18 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %15, i32 0, i32 2
  %19 = load i32, i32* %14, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %18, i32 %19, i32 0)
  %20 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %15, i32 0, i32 3
  %21 = load i32, i32* %13, align 4
  %22 = load i32, i32* %14, align 4
  call void @_ZN5TableILi2E14SparseMatrixEZIdEE6reinitEjj(%class.Table* %20, i32 %21, i32 %22)
  %23 = load i32, i32* @x.35
  %24 = load i32, i32* @y.36
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca %class.BlockSparseMatrixEZ*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %31, align 8
  store i32 %1, i32* %32, align 4
  store i32 %2, i32* %33, align 4
  %34 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %31, align 8
  %35 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %34, i32 0, i32 1
  %36 = load i32, i32* %32, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %35, i32 %36, i32 0)
  %37 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %34, i32 0, i32 2
  %38 = load i32, i32* %33, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %37, i32 %38, i32 0)
  %39 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %34, i32 0, i32 3
  %40 = load i32, i32* %32, align 4
  %41 = load i32, i32* %33, align 4
  call void @_ZN5TableILi2E14SparseMatrixEZIdEE6reinitEjj(%class.Table* %39, i32 %40, i32 %41)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdE13collect_sizesEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.BlockSparseMatrixEZ*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::allocator", align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.std::vector", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator", align 1
  %13 = alloca i32, align 4
  %14 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %2, align 8
  %21 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %2, align 8
  %22 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_rowsEv(%class.BlockSparseMatrixEZ* %21)
  store i32 %22, i32* %3, align 4
  %23 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_colsEv(%class.BlockSparseMatrixEZ* %21)
  store i32 %23, i32* %4, align 4
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  store i32 0, i32* %6, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %7) #10
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector"* %5, i64 %25, i32* dereferenceable(4) %6, %"class.std::allocator"* dereferenceable(1) %7)
          to label %26 unwind label %113

; <label>:26:                                     ; preds = %1
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %7) #10
  %27 = load i32, i32* %4, align 4
  %28 = zext i32 %27 to i64
  store i32 0, i32* %11, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %12) #10
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector"* %10, i64 %28, i32* dereferenceable(4) %11, %"class.std::allocator"* dereferenceable(1) %12)
          to label %29 unwind label %117

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* @x.37
  %31 = load i32, i32* @y.38
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %29, %originalBBalteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %12) #10
  store i32 0, i32* %13, align 4
  %38 = load i32, i32* @x.37
  %39 = load i32, i32* @y.38
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:46:                                     ; preds = %110, %originalBBpart2
  %47 = load i32, i32* %13, align 4
  %48 = load i32, i32* %3, align 4
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %50, label %141

; <label>:50:                                     ; preds = %46
  %51 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %21, i32 0, i32 3
  %52 = load i32, i32* %13, align 4
  invoke void @_ZN5TableILi2E14SparseMatrixEZIdEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %14, %class.Table* %51, i32 %52)
          to label %53 unwind label %121

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* @x.37
  %55 = load i32, i32* @y.38
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %53, %originalBB1alteredBB
  %62 = load i32, i32* @x.37
  %63 = load i32, i32* @y.38
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %70 = invoke dereferenceable(88) %class.SparseMatrixEZ* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %14, i32 0)
          to label %71 unwind label %121

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = invoke i32 @_ZNK14SparseMatrixEZIdE1mEv(%class.SparseMatrixEZ* %70)
          to label %73 unwind label %121

; <label>:73:                                     ; preds = %71
  %74 = load i32, i32* @x.37
  %75 = load i32, i32* @y.38
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = load i32, i32* %13, align 4
  %83 = zext i32 %82 to i64
  %84 = load i32, i32* @x.37
  %85 = load i32, i32* @y.38
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %92 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %5, i64 %83)
          to label %93 unwind label %121

; <label>:93:                                     ; preds = %originalBBpart28
  %94 = load i32, i32* @x.37
  %95 = load i32, i32* @y.38
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %93, %originalBB10alteredBB
  store i32 %72, i32* %92, align 4
  %102 = load i32, i32* @x.37
  %103 = load i32, i32* @y.38
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %110

; <label>:110:                                    ; preds = %originalBBpart212
  %111 = load i32, i32* %13, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %13, align 4
  br label %46

; <label>:113:                                    ; preds = %1
  %114 = landingpad { i8*, i32 }
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %8, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %9, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %7) #10
  br label %402

; <label>:117:                                    ; preds = %26
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %8, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %9, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %12) #10
  br label %400

; <label>:121:                                    ; preds = %375, %269, %267, %264, %262, %originalBBpart240, %originalBBpart28, %71, %originalBBpart24, %50
  %122 = load i32, i32* @x.37
  %123 = load i32, i32* @y.38
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %121, %originalBB14alteredBB
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %8, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %9, align 4
  %133 = load i32, i32* @x.37
  %134 = load i32, i32* @y.38
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %10)
          to label %399 unwind label %423

; <label>:141:                                    ; preds = %46
  %142 = load i32, i32* @x.37
  %143 = load i32, i32* @y.38
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %141, %originalBB18alteredBB
  store i32 1, i32* %15, align 4
  %150 = load i32, i32* @x.37
  %151 = load i32, i32* @y.38
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %158

; <label>:158:                                    ; preds = %236, %originalBBpart220
  %159 = load i32, i32* @x.37
  %160 = load i32, i32* @y.38
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %158, %originalBB22alteredBB
  %167 = load i32, i32* %15, align 4
  %168 = load i32, i32* %4, align 4
  %169 = icmp ult i32 %167, %168
  %170 = load i32, i32* @x.37
  %171 = load i32, i32* @y.38
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %169, label %178, label %239

; <label>:178:                                    ; preds = %originalBBpart224
  %179 = load i32, i32* @x.37
  %180 = load i32, i32* @y.38
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %178, %originalBB26alteredBB
  store i32 0, i32* %16, align 4
  %187 = load i32, i32* @x.37
  %188 = load i32, i32* @y.38
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %195

; <label>:195:                                    ; preds = %232, %originalBBpart228
  %196 = load i32, i32* @x.37
  %197 = load i32, i32* @y.38
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %195, %originalBB30alteredBB
  %204 = load i32, i32* %16, align 4
  %205 = load i32, i32* %3, align 4
  %206 = icmp ult i32 %204, %205
  %207 = load i32, i32* @x.37
  %208 = load i32, i32* @y.38
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %206, label %215, label %235

; <label>:215:                                    ; preds = %originalBBpart232
  %216 = load i32, i32* @x.37
  %217 = load i32, i32* @y.38
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %215, %originalBB34alteredBB
  %224 = load i32, i32* @x.37
  %225 = load i32, i32* @y.38
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %232

; <label>:232:                                    ; preds = %originalBBpart236
  %233 = load i32, i32* %16, align 4
  %234 = add i32 %233, 1
  store i32 %234, i32* %16, align 4
  br label %195

; <label>:235:                                    ; preds = %originalBBpart232
  br label %236

; <label>:236:                                    ; preds = %235
  %237 = load i32, i32* %15, align 4
  %238 = add i32 %237, 1
  store i32 %238, i32* %15, align 4
  br label %158

; <label>:239:                                    ; preds = %originalBBpart224
  %240 = load i32, i32* @x.37
  %241 = load i32, i32* @y.38
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %239, %originalBB38alteredBB
  %248 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %21, i32 0, i32 1
  %249 = load i32, i32* @x.37
  %250 = load i32, i32* @y.38
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  invoke void @_ZN12BlockIndices6reinitERKSt6vectorIjSaIjEE(%class.BlockIndices* %248, %"class.std::vector"* dereferenceable(24) %5)
          to label %257 unwind label %121

; <label>:257:                                    ; preds = %originalBBpart240
  store i32 0, i32* %17, align 4
  br label %258

; <label>:258:                                    ; preds = %originalBBpart254, %257
  %259 = load i32, i32* %17, align 4
  %260 = load i32, i32* %4, align 4
  %261 = icmp ult i32 %259, %260
  br i1 %261, label %262, label %293

; <label>:262:                                    ; preds = %258
  %263 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %21, i32 0, i32 3
  invoke void @_ZN5TableILi2E14SparseMatrixEZIdEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %18, %class.Table* %263, i32 0)
          to label %264 unwind label %121

; <label>:264:                                    ; preds = %262
  %265 = load i32, i32* %17, align 4
  %266 = invoke dereferenceable(88) %class.SparseMatrixEZ* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %18, i32 %265)
          to label %267 unwind label %121

; <label>:267:                                    ; preds = %264
  %268 = invoke i32 @_ZNK14SparseMatrixEZIdE1nEv(%class.SparseMatrixEZ* %266)
          to label %269 unwind label %121

; <label>:269:                                    ; preds = %267
  %270 = load i32, i32* %17, align 4
  %271 = zext i32 %270 to i64
  %272 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %10, i64 %271)
          to label %273 unwind label %121

; <label>:273:                                    ; preds = %269
  store i32 %268, i32* %272, align 4
  br label %274

; <label>:274:                                    ; preds = %273
  %275 = load i32, i32* @x.37
  %276 = load i32, i32* @y.38
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %274, %originalBB42alteredBB
  %283 = load i32, i32* %17, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %17, align 4
  %285 = load i32, i32* @x.37
  %286 = load i32, i32* @y.38
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart254, label %originalBB42alteredBB

originalBBpart254:                                ; preds = %originalBB42
  br label %258

; <label>:293:                                    ; preds = %258
  store i32 1, i32* %19, align 4
  br label %294

; <label>:294:                                    ; preds = %originalBBpart275, %293
  %295 = load i32, i32* @x.37
  %296 = load i32, i32* @y.38
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %294, %originalBB56alteredBB
  %303 = load i32, i32* %19, align 4
  %304 = load i32, i32* %3, align 4
  %305 = icmp ult i32 %303, %304
  %306 = load i32, i32* @x.37
  %307 = load i32, i32* @y.38
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %305, label %314, label %375

; <label>:314:                                    ; preds = %originalBBpart258
  store i32 0, i32* %20, align 4
  br label %315

; <label>:315:                                    ; preds = %352, %314
  %316 = load i32, i32* @x.37
  %317 = load i32, i32* @y.38
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %315, %originalBB60alteredBB
  %324 = load i32, i32* %20, align 4
  %325 = load i32, i32* %4, align 4
  %326 = icmp ult i32 %324, %325
  %327 = load i32, i32* @x.37
  %328 = load i32, i32* @y.38
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br i1 %326, label %335, label %355

; <label>:335:                                    ; preds = %originalBBpart262
  %336 = load i32, i32* @x.37
  %337 = load i32, i32* @y.38
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %335, %originalBB64alteredBB
  %344 = load i32, i32* @x.37
  %345 = load i32, i32* @y.38
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %352

; <label>:352:                                    ; preds = %originalBBpart266
  %353 = load i32, i32* %20, align 4
  %354 = add i32 %353, 1
  store i32 %354, i32* %20, align 4
  br label %315

; <label>:355:                                    ; preds = %originalBBpart262
  br label %356

; <label>:356:                                    ; preds = %355
  %357 = load i32, i32* @x.37
  %358 = load i32, i32* @y.38
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %356, %originalBB68alteredBB
  %365 = load i32, i32* %19, align 4
  %366 = add i32 %365, 1
  store i32 %366, i32* %19, align 4
  %367 = load i32, i32* @x.37
  %368 = load i32, i32* @y.38
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart275, label %originalBB68alteredBB

originalBBpart275:                                ; preds = %originalBB68
  br label %294

; <label>:375:                                    ; preds = %originalBBpart258
  %376 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %21, i32 0, i32 2
  invoke void @_ZN12BlockIndices6reinitERKSt6vectorIjSaIjEE(%class.BlockIndices* %376, %"class.std::vector"* dereferenceable(24) %10)
          to label %377 unwind label %121

; <label>:377:                                    ; preds = %375
  %378 = load i32, i32* @x.37
  %379 = load i32, i32* @y.38
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %377, %originalBB77alteredBB
  %386 = load i32, i32* @x.37
  %387 = load i32, i32* @y.38
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %10)
          to label %394 unwind label %395

; <label>:394:                                    ; preds = %originalBBpart279
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %5)
  ret void

; <label>:395:                                    ; preds = %originalBBpart279
  %396 = landingpad { i8*, i32 }
          cleanup
  %397 = extractvalue { i8*, i32 } %396, 0
  store i8* %397, i8** %8, align 8
  %398 = extractvalue { i8*, i32 } %396, 1
  store i32 %398, i32* %9, align 4
  br label %400

; <label>:399:                                    ; preds = %originalBBpart216
  br label %400

; <label>:400:                                    ; preds = %399, %395, %117
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %5)
          to label %401 unwind label %423

; <label>:401:                                    ; preds = %400
  br label %402

; <label>:402:                                    ; preds = %401, %113
  %403 = load i32, i32* @x.37
  %404 = load i32, i32* @y.38
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %402, %originalBB81alteredBB
  %411 = load i8*, i8** %8, align 8
  %412 = load i32, i32* %9, align 4
  %413 = insertvalue { i8*, i32 } undef, i8* %411, 0
  %414 = insertvalue { i8*, i32 } %413, i32 %412, 1
  %415 = load i32, i32* @x.37
  %416 = load i32, i32* @y.38
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  resume { i8*, i32 } %414

; <label>:423:                                    ; preds = %400, %originalBBpart216
  %424 = landingpad { i8*, i32 }
          catch i8* null
  %425 = extractvalue { i8*, i32 } %424, 0
  call void @__clang_call_terminate(i8* %425) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %29
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %12) #10
  store i32 0, i32* %13, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  %426 = load i32, i32* %13, align 4
  %427 = zext i32 %426 to i64
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %93
  store i32 %72, i32* %92, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %121
  %428 = landingpad { i8*, i32 }
          cleanup
  %429 = extractvalue { i8*, i32 } %428, 0
  store i8* %429, i8** %8, align 8
  %430 = extractvalue { i8*, i32 } %428, 1
  store i32 %430, i32* %9, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %141
  store i32 1, i32* %15, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %158
  %431 = load i32, i32* %15, align 4
  %432 = load i32, i32* %4, align 4
  %433 = icmp ult i32 %431, %432
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %178
  store i32 0, i32* %16, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %195
  %434 = load i32, i32* %16, align 4
  %435 = load i32, i32* %3, align 4
  %436 = icmp ult i32 %434, %435
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %215
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %239
  %437 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %21, i32 0, i32 1
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %274
  %438 = load i32, i32* %17, align 4
  %_ = sub i32 %438, 1
  %gen = mul i32 %_, 1
  %_43 = shl i32 %438, 1
  %_44 = sub i32 0, %438
  %gen45 = add i32 %_44, 1
  %_46 = sub i32 %438, 1
  %gen47 = mul i32 %_46, 1
  %_48 = shl i32 %438, 1
  %_49 = sub i32 %438, 1
  %gen50 = mul i32 %_49, 1
  %_51 = sub i32 %438, 1
  %gen52 = mul i32 %_51, 1
  %439 = add i32 %438, 1
  store i32 %439, i32* %17, align 4
  br label %originalBB42

originalBB56alteredBB:                            ; preds = %originalBB56, %294
  %440 = load i32, i32* %19, align 4
  %441 = load i32, i32* %3, align 4
  %442 = icmp ult i32 %440, %441
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %315
  %443 = load i32, i32* %20, align 4
  %444 = load i32, i32* %4, align 4
  %445 = icmp ult i32 %443, %444
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %335
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %356
  %446 = load i32, i32* %19, align 4
  %_69 = sub i32 %446, 1
  %gen70 = mul i32 %_69, 1
  %_71 = sub i32 %446, 1
  %gen72 = mul i32 %_71, 1
  %_73 = shl i32 %446, 1
  %447 = add i32 %446, 1
  store i32 %447, i32* %19, align 4
  br label %originalBB68

originalBB77alteredBB:                            ; preds = %originalBB77, %377
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %402
  %448 = load i8*, i8** %8, align 8
  %449 = load i32, i32* %9, align 4
  %450 = insertvalue { i8*, i32 } undef, i8* %448, 0
  %451 = insertvalue { i8*, i32 } %450, i32 %449, 1
  br label %originalBB81
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2Ev(%"class.std::allocator"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector"*, i64, i32* dereferenceable(4), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %15 = call i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base"* %12, i64 %15, %"class.std::allocator"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector"* %11, i64 %17, i32* dereferenceable(4) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* @x.41
  %22 = load i32, i32* @y.42
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %9, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %10, align 4
  %32 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %33 = load i32, i32* @x.41
  %34 = load i32, i32* @y.42
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base"* %32)
          to label %41 unwind label %47

; <label>:41:                                     ; preds = %originalBBpart2
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %9, align 8
  %44 = load i32, i32* %10, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load i32, i32* @x.41
  %49 = load i32, i32* @y.42
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #9
  %58 = load i32, i32* @x.41
  %59 = load i32, i32* @y.42
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %20
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %9, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %10, align 4
  %69 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  call void @__clang_call_terminate(i8* %71) #9
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjED2Ev(%"class.std::allocator"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %10, align 8
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %10, align 8
  %12 = bitcast %"class.std::allocator"* %11 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator"* %12) #10
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %21, align 8
  %22 = load %"class.std::allocator"*, %"class.std::allocator"** %21, align 8
  %23 = bitcast %"class.std::allocator"* %22 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator"* %23) #10
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIdEEixEj(%"class.internal::TableBaseAccessors::Accessor"* noalias sret, %class.Table*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  store %class.Table* %1, %class.Table** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table*, %class.Table** %4, align 8
  %7 = bitcast %class.Table* %6 to %class.TableBase*
  %8 = bitcast %class.Table* %6 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E14SparseMatrixEZIdEE6n_colsEv(%class.Table* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor"* %0, %class.TableBase* dereferenceable(48) %7, %class.SparseMatrixEZ* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(88) %class.SparseMatrixEZ* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"*, i32) #3 comdat align 2 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %12 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %11, align 8
  %14 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %13, i32 0, i32 1
  %15 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %15, i64 %17
  %19 = load i32, i32* @x.47
  %20 = load i32, i32* @y.48
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ* %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %28 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %27, align 8
  %30 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %29, i32 0, i32 1
  %31 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %30, align 8
  %32 = load i32, i32* %28, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %31, i64 %33
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK14SparseMatrixEZIdE1mEv(%class.SparseMatrixEZ*) #0 comdat align 2 {
  %2 = load i32, i32* @x.49
  %3 = load i32, i32* @y.50
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %10, align 8
  %11 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %10, align 8
  %12 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %11, i32 0, i32 3
  %13 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.0"* %12)
  %14 = trunc i64 %13 to i32
  %15 = load i32, i32* @x.49
  %16 = load i32, i32* @y.50
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %23, align 8
  %24 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %23, align 8
  %25 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %24, i32 0, i32 3
  %26 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.0"* %25)
  %27 = trunc i64 %26 to i32
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.51
  %4 = load i32, i32* @y.52
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %14 = bitcast %"class.std::vector"* %13 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = load i32, i32* @x.51
  %22 = load i32, i32* @y.52
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12BlockIndices6reinitERKSt6vectorIjSaIjEE(%class.BlockIndices*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.53
  %4 = load i32, i32* @y.54
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.BlockIndices*, align 8
  %12 = alloca %"class.std::vector"*, align 8
  %13 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %11, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %12, align 8
  %14 = load %class.BlockIndices*, %class.BlockIndices** %11, align 8
  %15 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 1
  %16 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %15)
  %17 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %18 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %17)
  %19 = add i64 %18, 1
  %20 = icmp ne i64 %16, %19
  %21 = load i32, i32* @x.53
  %22 = load i32, i32* @y.54
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %55

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.53
  %31 = load i32, i32* @y.54
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %39 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %38)
  %40 = trunc i64 %39 to i32
  %41 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 0
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 1
  %43 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, 1
  %46 = zext i32 %45 to i64
  call void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector"* %42, i64 %46, i32 0)
  %47 = load i32, i32* @x.53
  %48 = load i32, i32* @y.54
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br label %55

; <label>:55:                                     ; preds = %originalBBpart28, %originalBBpart2
  %56 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 1
  %57 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %56, i64 0)
  store i32 0, i32* %57, align 4
  store i32 1, i32* %13, align 4
  br label %58

; <label>:58:                                     ; preds = %97, %55
  %59 = load i32, i32* @x.53
  %60 = load i32, i32* @y.54
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %58, %originalBB10alteredBB
  %67 = load i32, i32* %13, align 4
  %68 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp ule i32 %67, %69
  %71 = load i32, i32* @x.53
  %72 = load i32, i32* @y.54
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %70, label %79, label %100

; <label>:79:                                     ; preds = %originalBBpart212
  %80 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 1
  %81 = load i32, i32* %13, align 4
  %82 = sub i32 %81, 1
  %83 = zext i32 %82 to i64
  %84 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %80, i64 %83)
  %85 = load i32, i32* %84, align 4
  %86 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %87 = load i32, i32* %13, align 4
  %88 = sub i32 %87, 1
  %89 = zext i32 %88 to i64
  %90 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector"* %86, i64 %89)
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %85, %91
  %93 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 1
  %94 = load i32, i32* %13, align 4
  %95 = zext i32 %94 to i64
  %96 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %93, i64 %95)
  store i32 %92, i32* %96, align 4
  br label %97

; <label>:97:                                     ; preds = %79
  %98 = load i32, i32* %13, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %13, align 4
  br label %58

; <label>:100:                                    ; preds = %originalBBpart212
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %101 = alloca %class.BlockIndices*, align 8
  %102 = alloca %"class.std::vector"*, align 8
  %103 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %101, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %102, align 8
  %104 = load %class.BlockIndices*, %class.BlockIndices** %101, align 8
  %105 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %104, i32 0, i32 1
  %106 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %105)
  %107 = load %"class.std::vector"*, %"class.std::vector"** %102, align 8
  %108 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %107)
  %_ = shl i64 %108, 1
  %109 = add i64 %108, 1
  %110 = icmp ne i64 %106, %109
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %111 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %112 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %111)
  %113 = trunc i64 %112 to i32
  %114 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 0
  store i32 %113, i32* %114, align 8
  %115 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 1
  %116 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %_2 = sub i32 %117, 1
  %gen = mul i32 %_2, 1
  %_3 = sub i32 0, %117
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 %117, 1
  %gen6 = mul i32 %_5, 1
  %118 = add i32 %117, 1
  %119 = zext i32 %118 to i64
  call void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector"* %115, i64 %119, i32 0)
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %58
  %120 = load i32, i32* %13, align 4
  %121 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %14, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = icmp ule i32 %120, %122
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK14SparseMatrixEZIdE1nEv(%class.SparseMatrixEZ*) #3 comdat align 2 {
  %2 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %2, align 8
  %3 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %2, align 8
  %4 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %17 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.57
  %20 = load i32, i32* @y.58
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.57
  %28 = load i32, i32* @y.58
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %10, i32* %15, %"class.std::allocator"* dereferenceable(1) %17)
          to label %35 unwind label %37

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base"* %36)
  ret void

; <label>:37:                                     ; preds = %originalBBpart2, %1
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %3, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %4, align 4
  %41 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base"* %41)
          to label %42 unwind label %48

; <label>:42:                                     ; preds = %37
  br label %43

; <label>:43:                                     ; preds = %42
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

; <label>:48:                                     ; preds = %37
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5TableILi2E14SparseMatrixEZIdEEixEj(%"class.internal::TableBaseAccessors::Accessor.10"* noalias sret, %class.Table*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  store %class.Table* %1, %class.Table** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table*, %class.Table** %4, align 8
  %7 = bitcast %class.Table* %6 to %class.TableBase*
  %8 = bitcast %class.Table* %6 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E14SparseMatrixEZIdEE6n_colsEv(%class.Table* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb1ELj1EEC2ERK9TableBaseILi2ES3_EPKS3_(%"class.internal::TableBaseAccessors::Accessor.10"* %0, %class.TableBase* dereferenceable(48) %7, %class.SparseMatrixEZ* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(88) %class.SparseMatrixEZ* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb1ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.10"*, i32) #3 comdat align 2 {
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.internal::TableBaseAccessors::Accessor.10"*, align 8
  %12 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.10"* %0, %"class.internal::TableBaseAccessors::Accessor.10"** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %"class.internal::TableBaseAccessors::Accessor.10"*, %"class.internal::TableBaseAccessors::Accessor.10"** %11, align 8
  %14 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.10", %"class.internal::TableBaseAccessors::Accessor.10"* %13, i32 0, i32 1
  %15 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %15, i64 %17
  %19 = load i32, i32* @x.61
  %20 = load i32, i32* @y.62
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ* %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %"class.internal::TableBaseAccessors::Accessor.10"*, align 8
  %28 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.10"* %0, %"class.internal::TableBaseAccessors::Accessor.10"** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %"class.internal::TableBaseAccessors::Accessor.10"*, %"class.internal::TableBaseAccessors::Accessor.10"** %27, align 8
  %30 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.10", %"class.internal::TableBaseAccessors::Accessor.10"* %29, i32 0, i32 1
  %31 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %30, align 8
  %32 = load i32, i32* %28, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %31, i64 %33
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK12BlockIndices4sizeEv(%class.BlockIndices*) #3 comdat align 2 {
  %2 = alloca %class.BlockIndices*, align 8
  store %class.BlockIndices* %0, %class.BlockIndices** %2, align 8
  %3 = load %class.BlockIndices*, %class.BlockIndices** %2, align 8
  %4 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr zeroext i1 @_ZNK19BlockSparseMatrixEZIdE5emptyEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = alloca i1, align 1
  %3 = alloca %class.BlockSparseMatrixEZ*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %3, align 8
  %6 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %3, align 8
  store i32 0, i32* %4, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart24, %1
  %8 = load i32, i32* %4, align 4
  %9 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_rowsEv(%class.BlockSparseMatrixEZ* %6)
  %10 = icmp ult i32 %8, %9
  br i1 %10, label %11, label %64

; <label>:11:                                     ; preds = %7
  store i32 0, i32* %5, align 4
  br label %12

; <label>:12:                                     ; preds = %25, %11
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @_ZNK19BlockSparseMatrixEZIdE12n_block_colsEv(%class.BlockSparseMatrixEZ* %6)
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %28

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* %4, align 4
  %18 = load i32, i32* %5, align 4
  %19 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZNK19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %6, i32 %17, i32 %18)
  %20 = call zeroext i1 @_ZNK14SparseMatrixEZIdE5emptyEv(%class.SparseMatrixEZ* %19)
  %21 = zext i1 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %16
  store i1 false, i1* %2, align 1
  br label %81

; <label>:24:                                     ; preds = %16
  br label %25

; <label>:25:                                     ; preds = %24
  %26 = load i32, i32* %5, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %5, align 4
  br label %12

; <label>:28:                                     ; preds = %12
  %29 = load i32, i32* @x.65
  %30 = load i32, i32* @y.66
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i32, i32* @x.65
  %38 = load i32, i32* @y.66
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.65
  %47 = load i32, i32* @y.66
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i32, i32* %4, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %4, align 4
  %56 = load i32, i32* @x.65
  %57 = load i32, i32* @y.66
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %7

; <label>:64:                                     ; preds = %7
  %65 = load i32, i32* @x.65
  %66 = load i32, i32* @y.66
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  store i1 true, i1* %2, align 1
  %73 = load i32, i32* @x.65
  %74 = load i32, i32* @y.66
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %81

; <label>:81:                                     ; preds = %originalBBpart28, %23
  %82 = load i1, i1* %2, align 1
  ret i1 %82

originalBBalteredBB:                              ; preds = %originalBB, %28
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %83 = load i32, i32* %4, align 4
  %_ = shl i32 %83, 1
  %_2 = sub i32 %83, 1
  %gen = mul i32 %_2, 1
  %84 = add i32 %83, 1
  store i32 %84, i32* %4, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  store i1 true, i1* %2, align 1
  br label %originalBB6
}

declare zeroext i1 @_ZNK14SparseMatrixEZIdE5emptyEv(%class.SparseMatrixEZ*) #1

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIdE6n_rowsEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = load i32, i32* @x.67
  %3 = load i32, i32* @y.68
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %10, align 8
  %11 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %10, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %11, i32 0, i32 1
  %13 = call i32 @_ZNK12BlockIndices10total_sizeEv(%class.BlockIndices* %12)
  %14 = load i32, i32* @x.67
  %15 = load i32, i32* @y.68
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %22, align 8
  %23 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %22, align 8
  %24 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %23, i32 0, i32 1
  %25 = call i32 @_ZNK12BlockIndices10total_sizeEv(%class.BlockIndices* %24)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK12BlockIndices10total_sizeEv(%class.BlockIndices*) #3 comdat align 2 {
  %2 = alloca %class.BlockIndices*, align 8
  store %class.BlockIndices* %0, %class.BlockIndices** %2, align 8
  %3 = load %class.BlockIndices*, %class.BlockIndices** %2, align 8
  %4 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %3, i32 0, i32 1
  %5 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %3, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector"* %4, i64 %7)
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIdE6n_colsEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = load i32, i32* @x.71
  %3 = load i32, i32* @y.72
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %10, align 8
  %11 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %10, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %11, i32 0, i32 2
  %13 = call i32 @_ZNK12BlockIndices10total_sizeEv(%class.BlockIndices* %12)
  %14 = load i32, i32* @x.71
  %15 = load i32, i32* @y.72
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %22, align 8
  %23 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %22, align 8
  %24 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %23, i32 0, i32 2
  %25 = call i32 @_ZNK12BlockIndices10total_sizeEv(%class.BlockIndices* %24)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIdE1mEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = load i32, i32* @x.73
  %3 = load i32, i32* @y.74
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %10, align 8
  %11 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %10, align 8
  %12 = call i32 @_ZNK19BlockSparseMatrixEZIdE6n_rowsEv(%class.BlockSparseMatrixEZ* %11)
  %13 = load i32, i32* @x.73
  %14 = load i32, i32* @y.74
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %21, align 8
  %22 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %21, align 8
  %23 = call i32 @_ZNK19BlockSparseMatrixEZIdE6n_rowsEv(%class.BlockSparseMatrixEZ* %22)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIdE1nEv(%class.BlockSparseMatrixEZ*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ*, align 8
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %2, align 8
  %4 = call i32 @_ZNK19BlockSparseMatrixEZIdE6n_colsEv(%class.BlockSparseMatrixEZ* %3)
  ret i32 %4
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdE3setEjjd(%class.BlockSparseMatrixEZ*, i32, i32, double) #0 comdat align 2 {
  %5 = load i32, i32* @x.77
  %6 = load i32, i32* @y.78
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.BlockSparseMatrixEZ*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %17 = alloca %"struct.std::pair", align 4
  %18 = alloca %"struct.std::pair", align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  store double %3, double* %16, align 8
  %19 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %13, align 8
  %20 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %19, i32 0, i32 1
  %21 = load i32, i32* %14, align 4
  %22 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %20, i32 %21)
  %23 = bitcast %"struct.std::pair"* %17 to i64*
  store i64 %22, i64* %23, align 4
  %24 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %19, i32 0, i32 2
  %25 = load i32, i32* %15, align 4
  %26 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %24, i32 %25)
  %27 = bitcast %"struct.std::pair"* %18 to i64*
  store i64 %26, i64* %27, align 4
  %28 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %19, i32 %29, i32 %31)
  %33 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = load double, double* %16, align 8
  call void @_ZN14SparseMatrixEZIdE3setEjjd(%class.SparseMatrixEZ* %32, i32 %34, i32 %36, double %37)
  %38 = load i32, i32* @x.77
  %39 = load i32, i32* @y.78
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %46 = alloca %class.BlockSparseMatrixEZ*, align 8
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca double, align 8
  %50 = alloca %"struct.std::pair", align 4
  %51 = alloca %"struct.std::pair", align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %46, align 8
  store i32 %1, i32* %47, align 4
  store i32 %2, i32* %48, align 4
  store double %3, double* %49, align 8
  %52 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %46, align 8
  %53 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %52, i32 0, i32 1
  %54 = load i32, i32* %47, align 4
  %55 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %53, i32 %54)
  %56 = bitcast %"struct.std::pair"* %50 to i64*
  store i64 %55, i64* %56, align 4
  %57 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %52, i32 0, i32 2
  %58 = load i32, i32* %48, align 4
  %59 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %57, i32 %58)
  %60 = bitcast %"struct.std::pair"* %51 to i64*
  store i64 %59, i64* %60, align 4
  %61 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %52, i32 %62, i32 %64)
  %66 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = load double, double* %49, align 8
  call void @_ZN14SparseMatrixEZIdE3setEjjd(%class.SparseMatrixEZ* %65, i32 %67, i32 %69, double %70)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices*, i32) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair", align 4
  %4 = alloca %class.BlockIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %class.BlockIndices*, %class.BlockIndices** %4, align 8
  %8 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sub i32 %9, 1
  store i32 %10, i32* %6, align 4
  br label %11

; <label>:11:                                     ; preds = %19, %2
  %12 = load i32, i32* %5, align 4
  %13 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %7, i32 0, i32 1
  %14 = load i32, i32* %6, align 4
  %15 = sext i32 %14 to i64
  %16 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector"* %13, i64 %15)
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %12, %17
  br i1 %18, label %19, label %22

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* %6, align 4
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %6, align 4
  br label %11

; <label>:22:                                     ; preds = %11
  %23 = load i32, i32* %6, align 4
  %24 = load i32, i32* %5, align 4
  %25 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %7, i32 0, i32 1
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector"* %25, i64 %27)
  %29 = load i32, i32* %28, align 4
  %30 = sub i32 %24, %29
  %31 = call i64 @_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_(i32 %23, i32 %30)
  %32 = bitcast %"struct.std::pair"* %3 to i64*
  store i64 %31, i64* %32, align 4
  %33 = bitcast %"struct.std::pair"* %3 to i64*
  %34 = load i64, i64* %33, align 4
  ret i64 %34
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14SparseMatrixEZIdE3setEjjd(%class.SparseMatrixEZ*, i32, i32, double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrixEZ*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %10 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store double %3, double* %8, align 8
  %11 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %5, align 8
  %12 = load double, double* %8, align 8
  %13 = fcmp oeq double %12, 0.000000e+00
  br i1 %13, label %14, label %40

; <label>:14:                                     ; preds = %4
  %15 = load i32, i32* @x.81
  %16 = load i32, i32* @y.82
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i32, i32* %6, align 4
  %24 = load i32, i32* %7, align 4
  %25 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZN14SparseMatrixEZIdE6locateEjj(%class.SparseMatrixEZ* %11, i32 %23, i32 %24)
  store %"struct.SparseMatrixEZ<double>::Entry"* %25, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %26 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %27 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %26, null
  %28 = load i32, i32* @x.81
  %29 = load i32, i32* @y.82
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %39

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %38 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %37, i32 0, i32 1
  store double 0.000000e+00, double* %38, align 8
  br label %39

; <label>:39:                                     ; preds = %36, %originalBBpart2
  br label %47

; <label>:40:                                     ; preds = %4
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %7, align 4
  %43 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZN14SparseMatrixEZIdE8allocateEjj(%class.SparseMatrixEZ* %11, i32 %41, i32 %42)
  store %"struct.SparseMatrixEZ<double>::Entry"* %43, %"struct.SparseMatrixEZ<double>::Entry"** %10, align 8
  %44 = load double, double* %8, align 8
  %45 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %10, align 8
  %46 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %45, i32 0, i32 1
  store double %44, double* %46, align 8
  br label %47

; <label>:47:                                     ; preds = %40, %39
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %14
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* %7, align 4
  %50 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZN14SparseMatrixEZIdE6locateEjj(%class.SparseMatrixEZ* %11, i32 %48, i32 %49)
  store %"struct.SparseMatrixEZ<double>::Entry"* %50, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %51 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %52 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %51, null
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIdE3addEjjd(%class.BlockSparseMatrixEZ*, i32, i32, double) #0 comdat align 2 {
  %5 = load i32, i32* @x.83
  %6 = load i32, i32* @y.84
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.BlockSparseMatrixEZ*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %17 = alloca %"struct.std::pair", align 4
  %18 = alloca %"struct.std::pair", align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  store double %3, double* %16, align 8
  %19 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %13, align 8
  %20 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %19, i32 0, i32 1
  %21 = load i32, i32* %14, align 4
  %22 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %20, i32 %21)
  %23 = bitcast %"struct.std::pair"* %17 to i64*
  store i64 %22, i64* %23, align 4
  %24 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %19, i32 0, i32 2
  %25 = load i32, i32* %15, align 4
  %26 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %24, i32 %25)
  %27 = bitcast %"struct.std::pair"* %18 to i64*
  store i64 %26, i64* %27, align 4
  %28 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %19, i32 %29, i32 %31)
  %33 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = load double, double* %16, align 8
  call void @_ZN14SparseMatrixEZIdE3addEjjd(%class.SparseMatrixEZ* %32, i32 %34, i32 %36, double %37)
  %38 = load i32, i32* @x.83
  %39 = load i32, i32* @y.84
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %46 = alloca %class.BlockSparseMatrixEZ*, align 8
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca double, align 8
  %50 = alloca %"struct.std::pair", align 4
  %51 = alloca %"struct.std::pair", align 4
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %46, align 8
  store i32 %1, i32* %47, align 4
  store i32 %2, i32* %48, align 4
  store double %3, double* %49, align 8
  %52 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %46, align 8
  %53 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %52, i32 0, i32 1
  %54 = load i32, i32* %47, align 4
  %55 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %53, i32 %54)
  %56 = bitcast %"struct.std::pair"* %50 to i64*
  store i64 %55, i64* %56, align 4
  %57 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %52, i32 0, i32 2
  %58 = load i32, i32* %48, align 4
  %59 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %57, i32 %58)
  %60 = bitcast %"struct.std::pair"* %51 to i64*
  store i64 %59, i64* %60, align 4
  %61 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN19BlockSparseMatrixEZIdE5blockEjj(%class.BlockSparseMatrixEZ* %52, i32 %62, i32 %64)
  %66 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = load double, double* %49, align 8
  call void @_ZN14SparseMatrixEZIdE3addEjjd(%class.SparseMatrixEZ* %65, i32 %67, i32 %69, double %70)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14SparseMatrixEZIdE3addEjjd(%class.SparseMatrixEZ*, i32, i32, double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrixEZ*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store double %3, double* %8, align 8
  %10 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %5, align 8
  %11 = load double, double* %8, align 8
  %12 = fcmp oeq double %11, 0.000000e+00
  br i1 %12, label %13, label %30

; <label>:13:                                     ; preds = %4
  %14 = load i32, i32* @x.85
  %15 = load i32, i32* @y.86
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.85
  %23 = load i32, i32* @y.86
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:30:                                     ; preds = %4
  %31 = load i32, i32* %6, align 4
  %32 = load i32, i32* %7, align 4
  %33 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZN14SparseMatrixEZIdE8allocateEjj(%class.SparseMatrixEZ* %10, i32 %31, i32 %32)
  store %"struct.SparseMatrixEZ<double>::Entry"* %33, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %34 = load double, double* %8, align 8
  %35 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %36 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %35, i32 0, i32 1
  %37 = load double, double* %36, align 8
  %38 = fadd double %37, %34
  store double %38, double* %36, align 8
  br label %39

; <label>:39:                                     ; preds = %30, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfEC2Ev(%class.BlockSparseMatrixEZ.11*) unnamed_addr #0 comdat($_ZN19BlockSparseMatrixEZIfEC5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %2, align 8
  %5 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %2, align 8
  %6 = bitcast %class.BlockSparseMatrixEZ.11* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %6)
  %7 = bitcast %class.BlockSparseMatrixEZ.11* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %5, i32 0, i32 1
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %8, i32 0)
          to label %9 unwind label %46

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.87
  %11 = load i32, i32* @y.88
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %5, i32 0, i32 2
  %19 = load i32, i32* @x.87
  %20 = load i32, i32* @y.88
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %18, i32 0)
          to label %27 unwind label %50

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.87
  %29 = load i32, i32* @y.88
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %5, i32 0, i32 3
  %37 = load i32, i32* @x.87
  %38 = load i32, i32* @y.88
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN5TableILi2E14SparseMatrixEZIfEEC2Ev(%class.Table.12* %36)
          to label %45 unwind label %54

; <label>:45:                                     ; preds = %originalBBpart24
  ret void

; <label>:46:                                     ; preds = %1
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %3, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %4, align 4
  br label %109

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  br label %75

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %3, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %4, align 4
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %18)
          to label %58 unwind label %133

; <label>:58:                                     ; preds = %54
  %59 = load i32, i32* @x.87
  %60 = load i32, i32* @y.88
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.87
  %68 = load i32, i32* @y.88
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

; <label>:75:                                     ; preds = %originalBBpart28, %50
  %76 = load i32, i32* @x.87
  %77 = load i32, i32* @y.88
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load i32, i32* @x.87
  %85 = load i32, i32* @y.88
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %8)
          to label %92 unwind label %133

; <label>:92:                                     ; preds = %originalBBpart212
  %93 = load i32, i32* @x.87
  %94 = load i32, i32* @y.88
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i32, i32* @x.87
  %102 = load i32, i32* @y.88
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %109

; <label>:109:                                    ; preds = %originalBBpart216, %46
  %110 = bitcast %class.BlockSparseMatrixEZ.11* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %110)
          to label %111 unwind label %133

; <label>:111:                                    ; preds = %109
  %112 = load i32, i32* @x.87
  %113 = load i32, i32* @y.88
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %111, %originalBB18alteredBB
  %120 = load i32, i32* @x.87
  %121 = load i32, i32* @y.88
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %128

; <label>:128:                                    ; preds = %originalBBpart220
  %129 = load i8*, i8** %3, align 8
  %130 = load i32, i32* %4, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  resume { i8*, i32 } %132

; <label>:133:                                    ; preds = %109, %originalBBpart212, %54
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  call void @__clang_call_terminate(i8* %135) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %9
  %136 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %5, i32 0, i32 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %137 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %5, i32 0, i32 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %111
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIfEEC2Ev(%class.Table.12*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table.12*, align 8
  store %class.Table.12* %0, %class.Table.12** %2, align 8
  %3 = load %class.Table.12*, %class.Table.12** %2, align 8
  %4 = bitcast %class.Table.12* %3 to %class.TableBase.13*
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIfEEC2Ev(%class.TableBase.13* %4)
  %5 = bitcast %class.Table.12* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2E14SparseMatrixEZIfEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfEC2Ejj(%class.BlockSparseMatrixEZ.11*, i32, i32) unnamed_addr #0 comdat($_ZN19BlockSparseMatrixEZIfEC5Ejj) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*
  %8 = alloca i32
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %9 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %10 = bitcast %class.BlockSparseMatrixEZ.11* %9 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %10)
  %11 = bitcast %class.BlockSparseMatrixEZ.11* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %9, i32 0, i32 1
  %13 = load i32, i32* %5, align 4
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %12, i32 %13)
          to label %14 unwind label %36

; <label>:14:                                     ; preds = %3
  %15 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %9, i32 0, i32 2
  %16 = load i32, i32* %6, align 4
  invoke void @_ZN12BlockIndicesC2Ej(%class.BlockIndices* %15, i32 %16)
          to label %17 unwind label %40

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* @x.91
  %19 = load i32, i32* @y.92
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %9, i32 0, i32 3
  %27 = load i32, i32* @x.91
  %28 = load i32, i32* @y.92
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN5TableILi2E14SparseMatrixEZIfEEC2Ev(%class.Table.12* %26)
          to label %35 unwind label %44

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

; <label>:36:                                     ; preds = %3
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %7, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %8, align 4
  br label %67

; <label>:40:                                     ; preds = %14
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %7, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %8, align 4
  br label %65

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i32, i32* @x.91
  %46 = load i32, i32* @y.92
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %7, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %8, align 4
  %56 = load i32, i32* @x.91
  %57 = load i32, i32* @y.92
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %15)
          to label %64 unwind label %107

; <label>:64:                                     ; preds = %originalBBpart24
  br label %65

; <label>:65:                                     ; preds = %64, %40
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %12)
          to label %66 unwind label %107

; <label>:66:                                     ; preds = %65
  br label %67

; <label>:67:                                     ; preds = %66, %36
  %68 = bitcast %class.BlockSparseMatrixEZ.11* %9 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %68)
          to label %69 unwind label %107

; <label>:69:                                     ; preds = %67
  %70 = load i32, i32* @x.91
  %71 = load i32, i32* @y.92
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = load i32, i32* @x.91
  %79 = load i32, i32* @y.92
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %86

; <label>:86:                                     ; preds = %originalBBpart28
  %87 = load i32, i32* @x.91
  %88 = load i32, i32* @y.92
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = load i8*, i8** %7, align 8
  %96 = load i32, i32* %8, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  %99 = load i32, i32* @x.91
  %100 = load i32, i32* @y.92
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %98

; <label>:107:                                    ; preds = %67, %65, %originalBBpart24
  %108 = load i32, i32* @x.91
  %109 = load i32, i32* @y.92
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %107, %originalBB14alteredBB
  %116 = landingpad { i8*, i32 }
          catch i8* null
  %117 = extractvalue { i8*, i32 } %116, 0
  call void @__clang_call_terminate(i8* %117) #9
  %118 = load i32, i32* @x.91
  %119 = load i32, i32* @y.92
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %17
  %126 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %9, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %7, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %8, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %130 = load i8*, i8** %7, align 8
  %131 = load i32, i32* %8, align 4
  %132 = insertvalue { i8*, i32 } undef, i8* %130, 0
  %133 = insertvalue { i8*, i32 } %132, i32 %131, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %107
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  call void @__clang_call_terminate(i8* %135) #9
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfEC2ERKS0_(%class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11* dereferenceable(136)) unnamed_addr #0 comdat($_ZN19BlockSparseMatrixEZIfEC5ERKS0_) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %4 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %3, align 8
  store %class.BlockSparseMatrixEZ.11* %1, %class.BlockSparseMatrixEZ.11** %4, align 8
  %7 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %3, align 8
  %8 = bitcast %class.BlockSparseMatrixEZ.11* %7 to %class.Subscriptor*
  %9 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %10 = bitcast %class.BlockSparseMatrixEZ.11* %9 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor* %8, %class.Subscriptor* dereferenceable(24) %10)
  %11 = bitcast %class.BlockSparseMatrixEZ.11* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %7, i32 0, i32 1
  %13 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %14 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %13, i32 0, i32 1
  invoke void @_ZN12BlockIndicesC2ERKS_(%class.BlockIndices* %12, %class.BlockIndices* dereferenceable(32) %14)
          to label %15 unwind label %56

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %7, i32 0, i32 2
  %17 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %18 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %17, i32 0, i32 2
  invoke void @_ZN12BlockIndicesC2ERKS_(%class.BlockIndices* %16, %class.BlockIndices* dereferenceable(32) %18)
          to label %19 unwind label %60

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @x.93
  %21 = load i32, i32* @y.94
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %7, i32 0, i32 3
  %29 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %30 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %29, i32 0, i32 3
  %31 = load i32, i32* @x.93
  %32 = load i32, i32* @y.94
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN5TableILi2E14SparseMatrixEZIfEEC2ERKS2_(%class.Table.12* %28, %class.Table.12* dereferenceable(48) %30)
          to label %39 unwind label %64

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* @x.93
  %41 = load i32, i32* @y.94
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* @x.93
  %49 = load i32, i32* @y.94
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:56:                                     ; preds = %2
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %5, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %6, align 4
  br label %71

; <label>:60:                                     ; preds = %15
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  br label %69

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %5, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %6, align 4
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %16)
          to label %68 unwind label %79

; <label>:68:                                     ; preds = %64
  br label %69

; <label>:69:                                     ; preds = %68, %60
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %12)
          to label %70 unwind label %79

; <label>:70:                                     ; preds = %69
  br label %71

; <label>:71:                                     ; preds = %70, %56
  %72 = bitcast %class.BlockSparseMatrixEZ.11* %7 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %72)
          to label %73 unwind label %79

; <label>:73:                                     ; preds = %71
  br label %74

; <label>:74:                                     ; preds = %73
  %75 = load i8*, i8** %5, align 8
  %76 = load i32, i32* %6, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  resume { i8*, i32 } %78

; <label>:79:                                     ; preds = %71, %69, %64
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  call void @__clang_call_terminate(i8* %81) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %82 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %7, i32 0, i32 3
  %83 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %84 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %83, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIfEEC2ERKS2_(%class.Table.12*, %class.Table.12* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Table.12*, align 8
  %4 = alloca %class.Table.12*, align 8
  store %class.Table.12* %0, %class.Table.12** %3, align 8
  store %class.Table.12* %1, %class.Table.12** %4, align 8
  %5 = load %class.Table.12*, %class.Table.12** %3, align 8
  %6 = bitcast %class.Table.12* %5 to %class.TableBase.13*
  %7 = load %class.Table.12*, %class.Table.12** %4, align 8
  %8 = bitcast %class.Table.12* %7 to %class.TableBase.13*
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIfEEC2ERKS2_(%class.TableBase.13* %6, %class.TableBase.13* dereferenceable(48) %8)
  %9 = bitcast %class.Table.12* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2E14SparseMatrixEZIfEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(136) %class.BlockSparseMatrixEZ.11* @_ZN19BlockSparseMatrixEZIfEaSERKS0_(%class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11* dereferenceable(136)) #0 comdat align 2 {
  %3 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %4 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %3, align 8
  store %class.BlockSparseMatrixEZ.11* %1, %class.BlockSparseMatrixEZ.11** %4, align 8
  %7 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %3, align 8
  store i32 0, i32* %5, align 4
  br label %8

; <label>:8:                                      ; preds = %62, %2
  %9 = load i32, i32* @x.97
  %10 = load i32, i32* @y.98
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11* %7)
  %19 = icmp ult i32 %17, %18
  %20 = load i32, i32* @x.97
  %21 = load i32, i32* @y.98
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %65

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.97
  %30 = load i32, i32* @y.98
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  store i32 0, i32* %6, align 4
  %37 = load i32, i32* @x.97
  %38 = load i32, i32* @y.98
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45

; <label>:45:                                     ; preds = %58, %originalBBpart24
  %46 = load i32, i32* %6, align 4
  %47 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_colsEv(%class.BlockSparseMatrixEZ.11* %7)
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %49, label %61

; <label>:49:                                     ; preds = %45
  %50 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %51 = load i32, i32* %5, align 4
  %52 = load i32, i32* %6, align 4
  %53 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11* %50, i32 %51, i32 %52)
  %54 = load i32, i32* %5, align 4
  %55 = load i32, i32* %6, align 4
  %56 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11* %7, i32 %54, i32 %55)
  %57 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN14SparseMatrixEZIfEaSERKS0_(%class.SparseMatrixEZ.14* %56, %class.SparseMatrixEZ.14* dereferenceable(88) %53)
  br label %58

; <label>:58:                                     ; preds = %49
  %59 = load i32, i32* %6, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %45

; <label>:61:                                     ; preds = %45
  br label %62

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* %5, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %5, align 4
  br label %8

; <label>:65:                                     ; preds = %originalBBpart2
  ret %class.BlockSparseMatrixEZ.11* %7

originalBBalteredBB:                              ; preds = %originalBB, %8
  %66 = load i32, i32* %5, align 4
  %67 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11* %7)
  %68 = icmp ult i32 %66, %67
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  store i32 0, i32* %6, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = load i32, i32* @x.99
  %3 = load i32, i32* @y.100
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %10, align 8
  %11 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %10, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %11, i32 0, i32 1
  %13 = call i32 @_ZNK12BlockIndices4sizeEv(%class.BlockIndices* %12)
  %14 = load i32, i32* @x.99
  %15 = load i32, i32* @y.100
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %22, align 8
  %23 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %22, align 8
  %24 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %23, i32 0, i32 1
  %25 = call i32 @_ZNK12BlockIndices4sizeEv(%class.BlockIndices* %24)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_colsEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %2, align 8
  %4 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %3, i32 0, i32 2
  %5 = call i32 @_ZNK12BlockIndices4sizeEv(%class.BlockIndices* %4)
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.internal::TableBaseAccessors::Accessor.29", align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %4, align 8
  %9 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %8, i32 0, i32 3
  %10 = load i32, i32* %5, align 4
  call void @_ZNK5TableILi2E14SparseMatrixEZIfEEixEj(%"class.internal::TableBaseAccessors::Accessor.29"* sret %7, %class.Table.12* %9, i32 %10)
  %11 = load i32, i32* %6, align 4
  %12 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb1ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.29"* %7, i32 %11)
  ret %class.SparseMatrixEZ.14* %12
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.105
  %5 = load i32, i32* @y.106
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.internal::TableBaseAccessors::Accessor.28", align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %16 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %12, align 8
  %17 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %16, i32 0, i32 3
  %18 = load i32, i32* %13, align 4
  call void @_ZN5TableILi2E14SparseMatrixEZIfEEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* sret %15, %class.Table.12* %17, i32 %18)
  %19 = load i32, i32* %14, align 4
  %20 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* %15, i32 %19)
  %21 = load i32, i32* @x.105
  %22 = load i32, i32* @y.106
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ.14* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %"class.internal::TableBaseAccessors::Accessor.28", align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %29, align 8
  store i32 %1, i32* %30, align 4
  store i32 %2, i32* %31, align 4
  %33 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %29, align 8
  %34 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %33, i32 0, i32 3
  %35 = load i32, i32* %30, align 4
  call void @_ZN5TableILi2E14SparseMatrixEZIfEEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* sret %32, %class.Table.12* %34, i32 %35)
  %36 = load i32, i32* %31, align 4
  %37 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* %32, i32 %36)
  br label %originalBB
}

declare dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN14SparseMatrixEZIfEaSERKS0_(%class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14* dereferenceable(88)) #1

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(136) %class.BlockSparseMatrixEZ.11* @_ZN19BlockSparseMatrixEZIfEaSEd(%class.BlockSparseMatrixEZ.11*, double) #0 comdat align 2 {
  %3 = load i32, i32* @x.107
  %4 = load i32, i32* @y.108
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %12 = alloca double, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %11, align 8
  store double %1, double* %12, align 8
  %15 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %11, align 8
  store i32 0, i32* %13, align 4
  %16 = load i32, i32* @x.107
  %17 = load i32, i32* @y.108
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24

; <label>:24:                                     ; preds = %74, %originalBBpart2
  %25 = load i32, i32* %13, align 4
  %26 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11* %15)
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %28, label %77

; <label>:28:                                     ; preds = %24
  %29 = load i32, i32* @x.107
  %30 = load i32, i32* @y.108
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* @x.107
  %38 = load i32, i32* @y.108
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45

; <label>:45:                                     ; preds = %54, %originalBBpart24
  %46 = load i32, i32* %14, align 4
  %47 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_colsEv(%class.BlockSparseMatrixEZ.11* %15)
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %49, label %57

; <label>:49:                                     ; preds = %45
  %50 = load i32, i32* %13, align 4
  %51 = load i32, i32* %14, align 4
  %52 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11* %15, i32 %50, i32 %51)
  %53 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN14SparseMatrixEZIfEaSEd(%class.SparseMatrixEZ.14* %52, double 0.000000e+00)
  br label %54

; <label>:54:                                     ; preds = %49
  %55 = load i32, i32* %14, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %14, align 4
  br label %45

; <label>:57:                                     ; preds = %45
  %58 = load i32, i32* @x.107
  %59 = load i32, i32* @y.108
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  %66 = load i32, i32* @x.107
  %67 = load i32, i32* @y.108
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

; <label>:74:                                     ; preds = %originalBBpart28
  %75 = load i32, i32* %13, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %13, align 4
  br label %24

; <label>:77:                                     ; preds = %24
  %78 = load i32, i32* @x.107
  %79 = load i32, i32* @y.108
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load i32, i32* @x.107
  %87 = load i32, i32* @y.108
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret %class.BlockSparseMatrixEZ.11* %15

originalBBalteredBB:                              ; preds = %originalBB, %2
  %94 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %95 = alloca double, align 8
  %96 = alloca i32, align 4
  %97 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %94, align 8
  store double %1, double* %95, align 8
  %98 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %94, align 8
  store i32 0, i32* %96, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  store i32 0, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  br label %originalBB10
}

declare dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN14SparseMatrixEZIfEaSEd(%class.SparseMatrixEZ.14*, double) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfE5clearEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %2, align 8
  %4 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %3, i32 0, i32 1
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %4, i32 0, i32 0)
  %5 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %3, i32 0, i32 2
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %5, i32 0, i32 0)
  %6 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %3, i32 0, i32 3
  call void @_ZN5TableILi2E14SparseMatrixEZIfEE6reinitEjj(%class.Table.12* %6, i32 0, i32 0)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIfEE6reinitEjj(%class.Table.12*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.12*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.TableIndices, align 4
  store %class.Table.12* %0, %class.Table.12** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.Table.12*, %class.Table.12** %4, align 8
  %9 = bitcast %class.Table.12* %8 to %class.TableBase.13*
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %6, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %7, i32 %10, i32 %11)
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIfEE6reinitERK12TableIndicesILi2EE(%class.TableBase.13* %9, %class.TableIndices* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfE6reinitEjj(%class.BlockSparseMatrixEZ.11*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.113
  %5 = load i32, i32* @y.114
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %15 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %12, align 8
  %16 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %15, i32 0, i32 1
  %17 = load i32, i32* %13, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %16, i32 %17, i32 0)
  %18 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %15, i32 0, i32 2
  %19 = load i32, i32* %14, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %18, i32 %19, i32 0)
  %20 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %15, i32 0, i32 3
  %21 = load i32, i32* %13, align 4
  %22 = load i32, i32* %14, align 4
  call void @_ZN5TableILi2E14SparseMatrixEZIfEE6reinitEjj(%class.Table.12* %20, i32 %21, i32 %22)
  %23 = load i32, i32* @x.113
  %24 = load i32, i32* @y.114
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %31, align 8
  store i32 %1, i32* %32, align 4
  store i32 %2, i32* %33, align 4
  %34 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %31, align 8
  %35 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %34, i32 0, i32 1
  %36 = load i32, i32* %32, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %35, i32 %36, i32 0)
  %37 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %34, i32 0, i32 2
  %38 = load i32, i32* %33, align 4
  call void @_ZN12BlockIndices6reinitEjj(%class.BlockIndices* %37, i32 %38, i32 0)
  %39 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %34, i32 0, i32 3
  %40 = load i32, i32* %32, align 4
  %41 = load i32, i32* %33, align 4
  call void @_ZN5TableILi2E14SparseMatrixEZIfEE6reinitEjj(%class.Table.12* %39, i32 %40, i32 %41)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfE13collect_sizesEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.115
  %3 = load i32, i32* @y.116
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::allocator", align 1
  %16 = alloca i8*
  %17 = alloca i32
  %18 = alloca %"class.std::vector", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.std::allocator", align 1
  %21 = alloca i32, align 4
  %22 = alloca %"class.internal::TableBaseAccessors::Accessor.28", align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.internal::TableBaseAccessors::Accessor.28", align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %10, align 8
  %29 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %10, align 8
  %30 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11* %29)
  store i32 %30, i32* %11, align 4
  %31 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_colsEv(%class.BlockSparseMatrixEZ.11* %29)
  store i32 %31, i32* %12, align 4
  %32 = load i32, i32* %11, align 4
  %33 = zext i32 %32 to i64
  store i32 0, i32* %14, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %15) #10
  %34 = load i32, i32* @x.115
  %35 = load i32, i32* @y.116
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector"* %13, i64 %33, i32* dereferenceable(4) %14, %"class.std::allocator"* dereferenceable(1) %15)
          to label %42 unwind label %145

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i32, i32* @x.115
  %44 = load i32, i32* @y.116
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %15) #10
  %51 = load i32, i32* %12, align 4
  %52 = zext i32 %51 to i64
  store i32 0, i32* %19, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %20) #10
  %53 = load i32, i32* @x.115
  %54 = load i32, i32* @y.116
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector"* %18, i64 %52, i32* dereferenceable(4) %19, %"class.std::allocator"* dereferenceable(1) %20)
          to label %61 unwind label %149

; <label>:61:                                     ; preds = %originalBBpart24
  %62 = load i32, i32* @x.115
  %63 = load i32, i32* @y.116
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %20) #10
  store i32 0, i32* %21, align 4
  %70 = load i32, i32* @x.115
  %71 = load i32, i32* @y.116
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %78

; <label>:78:                                     ; preds = %originalBBpart223, %originalBBpart28
  %79 = load i32, i32* %21, align 4
  %80 = load i32, i32* %11, align 4
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %82, label %189

; <label>:82:                                     ; preds = %78
  %83 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %29, i32 0, i32 3
  %84 = load i32, i32* %21, align 4
  invoke void @_ZN5TableILi2E14SparseMatrixEZIfEEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* sret %22, %class.Table.12* %83, i32 %84)
          to label %85 unwind label %169

; <label>:85:                                     ; preds = %82
  %86 = load i32, i32* @x.115
  %87 = load i32, i32* @y.116
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = load i32, i32* @x.115
  %95 = load i32, i32* @y.116
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %102 = invoke dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* %22, i32 0)
          to label %103 unwind label %169

; <label>:103:                                    ; preds = %originalBBpart212
  %104 = invoke i32 @_ZNK14SparseMatrixEZIfE1mEv(%class.SparseMatrixEZ.14* %102)
          to label %105 unwind label %169

; <label>:105:                                    ; preds = %103
  %106 = load i32, i32* @x.115
  %107 = load i32, i32* @y.116
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %105, %originalBB14alteredBB
  %114 = load i32, i32* %21, align 4
  %115 = zext i32 %114 to i64
  %116 = load i32, i32* @x.115
  %117 = load i32, i32* @y.116
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %124 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %13, i64 %115)
          to label %125 unwind label %169

; <label>:125:                                    ; preds = %originalBBpart216
  store i32 %104, i32* %124, align 4
  br label %126

; <label>:126:                                    ; preds = %125
  %127 = load i32, i32* @x.115
  %128 = load i32, i32* @y.116
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %126, %originalBB18alteredBB
  %135 = load i32, i32* %21, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %21, align 4
  %137 = load i32, i32* @x.115
  %138 = load i32, i32* @y.116
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart223, label %originalBB18alteredBB

originalBBpart223:                                ; preds = %originalBB18
  br label %78

; <label>:145:                                    ; preds = %originalBBpart2
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = extractvalue { i8*, i32 } %146, 0
  store i8* %147, i8** %16, align 8
  %148 = extractvalue { i8*, i32 } %146, 1
  store i32 %148, i32* %17, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %15) #10
  br label %354

; <label>:149:                                    ; preds = %originalBBpart24
  %150 = load i32, i32* @x.115
  %151 = load i32, i32* @y.116
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %149, %originalBB25alteredBB
  %158 = landingpad { i8*, i32 }
          cleanup
  %159 = extractvalue { i8*, i32 } %158, 0
  store i8* %159, i8** %16, align 8
  %160 = extractvalue { i8*, i32 } %158, 1
  store i32 %160, i32* %17, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %20) #10
  %161 = load i32, i32* @x.115
  %162 = load i32, i32* @y.116
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %352

; <label>:169:                                    ; preds = %originalBBpart247, %237, %235, %232, %230, %223, %originalBBpart216, %103, %originalBBpart212, %82
  %170 = load i32, i32* @x.115
  %171 = load i32, i32* @y.116
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %169, %originalBB29alteredBB
  %178 = landingpad { i8*, i32 }
          cleanup
  %179 = extractvalue { i8*, i32 } %178, 0
  store i8* %179, i8** %16, align 8
  %180 = extractvalue { i8*, i32 } %178, 1
  store i32 %180, i32* %17, align 4
  %181 = load i32, i32* @x.115
  %182 = load i32, i32* @y.116
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %18)
          to label %335 unwind label %375

; <label>:189:                                    ; preds = %78
  store i32 1, i32* %23, align 4
  br label %190

; <label>:190:                                    ; preds = %220, %189
  %191 = load i32, i32* @x.115
  %192 = load i32, i32* @y.116
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %190, %originalBB33alteredBB
  %199 = load i32, i32* %23, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp ult i32 %199, %200
  %202 = load i32, i32* @x.115
  %203 = load i32, i32* @y.116
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %201, label %210, label %223

; <label>:210:                                    ; preds = %originalBBpart235
  store i32 0, i32* %24, align 4
  br label %211

; <label>:211:                                    ; preds = %216, %210
  %212 = load i32, i32* %24, align 4
  %213 = load i32, i32* %11, align 4
  %214 = icmp ult i32 %212, %213
  br i1 %214, label %215, label %219

; <label>:215:                                    ; preds = %211
  br label %216

; <label>:216:                                    ; preds = %215
  %217 = load i32, i32* %24, align 4
  %218 = add i32 %217, 1
  store i32 %218, i32* %24, align 4
  br label %211

; <label>:219:                                    ; preds = %211
  br label %220

; <label>:220:                                    ; preds = %219
  %221 = load i32, i32* %23, align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %23, align 4
  br label %190

; <label>:223:                                    ; preds = %originalBBpart235
  %224 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %29, i32 0, i32 1
  invoke void @_ZN12BlockIndices6reinitERKSt6vectorIjSaIjEE(%class.BlockIndices* %224, %"class.std::vector"* dereferenceable(24) %13)
          to label %225 unwind label %169

; <label>:225:                                    ; preds = %223
  store i32 0, i32* %25, align 4
  br label %226

; <label>:226:                                    ; preds = %242, %225
  %227 = load i32, i32* %25, align 4
  %228 = load i32, i32* %12, align 4
  %229 = icmp ult i32 %227, %228
  br i1 %229, label %230, label %245

; <label>:230:                                    ; preds = %226
  %231 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %29, i32 0, i32 3
  invoke void @_ZN5TableILi2E14SparseMatrixEZIfEEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* sret %26, %class.Table.12* %231, i32 0)
          to label %232 unwind label %169

; <label>:232:                                    ; preds = %230
  %233 = load i32, i32* %25, align 4
  %234 = invoke dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* %26, i32 %233)
          to label %235 unwind label %169

; <label>:235:                                    ; preds = %232
  %236 = invoke i32 @_ZNK14SparseMatrixEZIfE1nEv(%class.SparseMatrixEZ.14* %234)
          to label %237 unwind label %169

; <label>:237:                                    ; preds = %235
  %238 = load i32, i32* %25, align 4
  %239 = zext i32 %238 to i64
  %240 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector"* %18, i64 %239)
          to label %241 unwind label %169

; <label>:241:                                    ; preds = %237
  store i32 %236, i32* %240, align 4
  br label %242

; <label>:242:                                    ; preds = %241
  %243 = load i32, i32* %25, align 4
  %244 = add i32 %243, 1
  store i32 %244, i32* %25, align 4
  br label %226

; <label>:245:                                    ; preds = %226
  store i32 1, i32* %27, align 4
  br label %246

; <label>:246:                                    ; preds = %292, %245
  %247 = load i32, i32* %27, align 4
  %248 = load i32, i32* %11, align 4
  %249 = icmp ult i32 %247, %248
  br i1 %249, label %250, label %295

; <label>:250:                                    ; preds = %246
  %251 = load i32, i32* @x.115
  %252 = load i32, i32* @y.116
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %250, %originalBB37alteredBB
  store i32 0, i32* %28, align 4
  %259 = load i32, i32* @x.115
  %260 = load i32, i32* @y.116
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %267

; <label>:267:                                    ; preds = %288, %originalBBpart239
  %268 = load i32, i32* %28, align 4
  %269 = load i32, i32* %12, align 4
  %270 = icmp ult i32 %268, %269
  br i1 %270, label %271, label %291

; <label>:271:                                    ; preds = %267
  %272 = load i32, i32* @x.115
  %273 = load i32, i32* @y.116
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %271, %originalBB41alteredBB
  %280 = load i32, i32* @x.115
  %281 = load i32, i32* @y.116
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %288

; <label>:288:                                    ; preds = %originalBBpart243
  %289 = load i32, i32* %28, align 4
  %290 = add i32 %289, 1
  store i32 %290, i32* %28, align 4
  br label %267

; <label>:291:                                    ; preds = %267
  br label %292

; <label>:292:                                    ; preds = %291
  %293 = load i32, i32* %27, align 4
  %294 = add i32 %293, 1
  store i32 %294, i32* %27, align 4
  br label %246

; <label>:295:                                    ; preds = %246
  %296 = load i32, i32* @x.115
  %297 = load i32, i32* @y.116
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %295, %originalBB45alteredBB
  %304 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %29, i32 0, i32 2
  %305 = load i32, i32* @x.115
  %306 = load i32, i32* @y.116
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  invoke void @_ZN12BlockIndices6reinitERKSt6vectorIjSaIjEE(%class.BlockIndices* %304, %"class.std::vector"* dereferenceable(24) %18)
          to label %313 unwind label %169

; <label>:313:                                    ; preds = %originalBBpart247
  %314 = load i32, i32* @x.115
  %315 = load i32, i32* @y.116
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %313, %originalBB49alteredBB
  %322 = load i32, i32* @x.115
  %323 = load i32, i32* @y.116
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %18)
          to label %330 unwind label %331

; <label>:330:                                    ; preds = %originalBBpart251
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %13)
  ret void

; <label>:331:                                    ; preds = %originalBBpart251
  %332 = landingpad { i8*, i32 }
          cleanup
  %333 = extractvalue { i8*, i32 } %332, 0
  store i8* %333, i8** %16, align 8
  %334 = extractvalue { i8*, i32 } %332, 1
  store i32 %334, i32* %17, align 4
  br label %352

; <label>:335:                                    ; preds = %originalBBpart231
  %336 = load i32, i32* @x.115
  %337 = load i32, i32* @y.116
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %335, %originalBB53alteredBB
  %344 = load i32, i32* @x.115
  %345 = load i32, i32* @y.116
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %352

; <label>:352:                                    ; preds = %originalBBpart255, %331, %originalBBpart227
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector"* %13)
          to label %353 unwind label %375

; <label>:353:                                    ; preds = %352
  br label %354

; <label>:354:                                    ; preds = %353, %145
  %355 = load i32, i32* @x.115
  %356 = load i32, i32* @y.116
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %354, %originalBB57alteredBB
  %363 = load i8*, i8** %16, align 8
  %364 = load i32, i32* %17, align 4
  %365 = insertvalue { i8*, i32 } undef, i8* %363, 0
  %366 = insertvalue { i8*, i32 } %365, i32 %364, 1
  %367 = load i32, i32* @x.115
  %368 = load i32, i32* @y.116
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  resume { i8*, i32 } %366

; <label>:375:                                    ; preds = %352, %originalBBpart231
  %376 = load i32, i32* @x.115
  %377 = load i32, i32* @y.116
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %375, %originalBB61alteredBB
  %384 = landingpad { i8*, i32 }
          catch i8* null
  %385 = extractvalue { i8*, i32 } %384, 0
  call void @__clang_call_terminate(i8* %385) #9
  %386 = load i32, i32* @x.115
  %387 = load i32, i32* @y.116
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %394 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %395 = alloca i32, align 4
  %396 = alloca i32, align 4
  %397 = alloca %"class.std::vector", align 8
  %398 = alloca i32, align 4
  %399 = alloca %"class.std::allocator", align 1
  %400 = alloca i8*
  %401 = alloca i32
  %402 = alloca %"class.std::vector", align 8
  %403 = alloca i32, align 4
  %404 = alloca %"class.std::allocator", align 1
  %405 = alloca i32, align 4
  %406 = alloca %"class.internal::TableBaseAccessors::Accessor.28", align 8
  %407 = alloca i32, align 4
  %408 = alloca i32, align 4
  %409 = alloca i32, align 4
  %410 = alloca %"class.internal::TableBaseAccessors::Accessor.28", align 8
  %411 = alloca i32, align 4
  %412 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %394, align 8
  %413 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %394, align 8
  %414 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11* %413)
  store i32 %414, i32* %395, align 4
  %415 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_colsEv(%class.BlockSparseMatrixEZ.11* %413)
  store i32 %415, i32* %396, align 4
  %416 = load i32, i32* %395, align 4
  %417 = zext i32 %416 to i64
  store i32 0, i32* %398, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %399) #10
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %15) #10
  %418 = load i32, i32* %12, align 4
  %419 = zext i32 %418 to i64
  store i32 0, i32* %19, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator"* %20) #10
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %20) #10
  store i32 0, i32* %21, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %105
  %420 = load i32, i32* %21, align 4
  %421 = zext i32 %420 to i64
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %126
  %422 = load i32, i32* %21, align 4
  %_ = shl i32 %422, 1
  %_19 = sub i32 0, %422
  %gen = add i32 %_19, 1
  %_20 = sub i32 0, %422
  %gen21 = add i32 %_20, 1
  %423 = add i32 %422, 1
  store i32 %423, i32* %21, align 4
  br label %originalBB18

originalBB25alteredBB:                            ; preds = %originalBB25, %149
  %424 = landingpad { i8*, i32 }
          cleanup
  %425 = extractvalue { i8*, i32 } %424, 0
  store i8* %425, i8** %16, align 8
  %426 = extractvalue { i8*, i32 } %424, 1
  store i32 %426, i32* %17, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %20) #10
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %169
  %427 = landingpad { i8*, i32 }
          cleanup
  %428 = extractvalue { i8*, i32 } %427, 0
  store i8* %428, i8** %16, align 8
  %429 = extractvalue { i8*, i32 } %427, 1
  store i32 %429, i32* %17, align 4
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %190
  %430 = load i32, i32* %23, align 4
  %431 = load i32, i32* %12, align 4
  %432 = icmp ult i32 %430, %431
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %250
  store i32 0, i32* %28, align 4
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %271
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %295
  %433 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %29, i32 0, i32 2
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %313
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %335
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %354
  %434 = load i8*, i8** %16, align 8
  %435 = load i32, i32* %17, align 4
  %436 = insertvalue { i8*, i32 } undef, i8* %434, 0
  %437 = insertvalue { i8*, i32 } %436, i32 %435, 1
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %375
  %438 = landingpad { i8*, i32 }
          catch i8* null
  %439 = extractvalue { i8*, i32 } %438, 0
  call void @__clang_call_terminate(i8* %439) #9
  br label %originalBB61
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIfEEixEj(%"class.internal::TableBaseAccessors::Accessor.28"* noalias sret, %class.Table.12*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.12*, align 8
  %5 = alloca i32, align 4
  store %class.Table.12* %1, %class.Table.12** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table.12*, %class.Table.12** %4, align 8
  %7 = bitcast %class.Table.12* %6 to %class.TableBase.13*
  %8 = bitcast %class.Table.12* %6 to %class.TableBase.13*
  %9 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %8, i32 0, i32 1
  %10 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E14SparseMatrixEZIfEE6n_colsEv(%class.Table.12* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor.28"* %0, %class.TableBase.13* dereferenceable(48) %7, %class.SparseMatrixEZ.14* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.28"*, i32) #3 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor.28"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.28"* %0, %"class.internal::TableBaseAccessors::Accessor.28"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor.28"*, %"class.internal::TableBaseAccessors::Accessor.28"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.28", %"class.internal::TableBaseAccessors::Accessor.28"* %5, i32 0, i32 1
  %7 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %7, i64 %9
  ret %class.SparseMatrixEZ.14* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK14SparseMatrixEZIfE1mEv(%class.SparseMatrixEZ.14*) #0 comdat align 2 {
  %2 = load i32, i32* @x.121
  %3 = load i32, i32* @y.122
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %10, align 8
  %11 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %10, align 8
  %12 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %11, i32 0, i32 3
  %13 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.17"* %12)
  %14 = trunc i64 %13 to i32
  %15 = load i32, i32* @x.121
  %16 = load i32, i32* @y.122
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %23, align 8
  %24 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %23, align 8
  %25 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %24, i32 0, i32 3
  %26 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.17"* %25)
  %27 = trunc i64 %26 to i32
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK14SparseMatrixEZIfE1nEv(%class.SparseMatrixEZ.14*) #3 comdat align 2 {
  %2 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %2, align 8
  %3 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %2, align 8
  %4 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5TableILi2E14SparseMatrixEZIfEEixEj(%"class.internal::TableBaseAccessors::Accessor.29"* noalias sret, %class.Table.12*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.12*, align 8
  %5 = alloca i32, align 4
  store %class.Table.12* %1, %class.Table.12** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table.12*, %class.Table.12** %4, align 8
  %7 = bitcast %class.Table.12* %6 to %class.TableBase.13*
  %8 = bitcast %class.Table.12* %6 to %class.TableBase.13*
  %9 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %8, i32 0, i32 1
  %10 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E14SparseMatrixEZIfEE6n_colsEv(%class.Table.12* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb1ELj1EEC2ERK9TableBaseILi2ES3_EPKS3_(%"class.internal::TableBaseAccessors::Accessor.29"* %0, %class.TableBase.13* dereferenceable(48) %7, %class.SparseMatrixEZ.14* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb1ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.29"*, i32) #3 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor.29"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.29"* %0, %"class.internal::TableBaseAccessors::Accessor.29"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor.29"*, %"class.internal::TableBaseAccessors::Accessor.29"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.29", %"class.internal::TableBaseAccessors::Accessor.29"* %5, i32 0, i32 1
  %7 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %7, i64 %9
  ret %class.SparseMatrixEZ.14* %10
}

; Function Attrs: noinline uwtable
define weak_odr zeroext i1 @_ZNK19BlockSparseMatrixEZIfE5emptyEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = alloca i1, align 1
  %3 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %3, align 8
  %6 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %3, align 8
  store i32 0, i32* %4, align 4
  br label %7

; <label>:7:                                      ; preds = %45, %1
  %8 = load i32, i32* @x.129
  %9 = load i32, i32* @y.130
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %4, align 4
  %17 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11* %6)
  %18 = icmp ult i32 %16, %17
  %19 = load i32, i32* @x.129
  %20 = load i32, i32* @y.130
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %48

; <label>:27:                                     ; preds = %originalBBpart2
  store i32 0, i32* %5, align 4
  br label %28

; <label>:28:                                     ; preds = %41, %27
  %29 = load i32, i32* %5, align 4
  %30 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_colsEv(%class.BlockSparseMatrixEZ.11* %6)
  %31 = icmp ult i32 %29, %30
  br i1 %31, label %32, label %44

; <label>:32:                                     ; preds = %28
  %33 = load i32, i32* %4, align 4
  %34 = load i32, i32* %5, align 4
  %35 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZNK19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11* %6, i32 %33, i32 %34)
  %36 = call zeroext i1 @_ZNK14SparseMatrixEZIfE5emptyEv(%class.SparseMatrixEZ.14* %35)
  %37 = zext i1 %36 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %32
  store i1 false, i1* %2, align 1
  br label %49

; <label>:40:                                     ; preds = %32
  br label %41

; <label>:41:                                     ; preds = %40
  %42 = load i32, i32* %5, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %5, align 4
  br label %28

; <label>:44:                                     ; preds = %28
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i32, i32* %4, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %4, align 4
  br label %7

; <label>:48:                                     ; preds = %originalBBpart2
  store i1 true, i1* %2, align 1
  br label %49

; <label>:49:                                     ; preds = %48, %39
  %50 = load i1, i1* %2, align 1
  ret i1 %50

originalBBalteredBB:                              ; preds = %originalBB, %7
  %51 = load i32, i32* %4, align 4
  %52 = call i32 @_ZNK19BlockSparseMatrixEZIfE12n_block_rowsEv(%class.BlockSparseMatrixEZ.11* %6)
  %53 = icmp ult i32 %51, %52
  br label %originalBB
}

declare zeroext i1 @_ZNK14SparseMatrixEZIfE5emptyEv(%class.SparseMatrixEZ.14*) #1

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIfE6n_rowsEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %2, align 8
  %4 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %3, i32 0, i32 1
  %5 = call i32 @_ZNK12BlockIndices10total_sizeEv(%class.BlockIndices* %4)
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIfE6n_colsEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %2, align 8
  %4 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %3, i32 0, i32 2
  %5 = call i32 @_ZNK12BlockIndices10total_sizeEv(%class.BlockIndices* %4)
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIfE1mEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = load i32, i32* @x.135
  %3 = load i32, i32* @y.136
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %10, align 8
  %11 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %10, align 8
  %12 = call i32 @_ZNK19BlockSparseMatrixEZIfE6n_rowsEv(%class.BlockSparseMatrixEZ.11* %11)
  %13 = load i32, i32* @x.135
  %14 = load i32, i32* @y.136
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %21, align 8
  %22 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %21, align 8
  %23 = call i32 @_ZNK19BlockSparseMatrixEZIfE6n_rowsEv(%class.BlockSparseMatrixEZ.11* %22)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK19BlockSparseMatrixEZIfE1nEv(%class.BlockSparseMatrixEZ.11*) #0 comdat align 2 {
  %2 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %2, align 8
  %3 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %2, align 8
  %4 = call i32 @_ZNK19BlockSparseMatrixEZIfE6n_colsEv(%class.BlockSparseMatrixEZ.11* %3)
  ret i32 %4
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfE3setEjjf(%class.BlockSparseMatrixEZ.11*, i32, i32, float) #0 comdat align 2 {
  %5 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca %"struct.std::pair", align 4
  %10 = alloca %"struct.std::pair", align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store float %3, float* %8, align 4
  %11 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %5, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %11, i32 0, i32 1
  %13 = load i32, i32* %6, align 4
  %14 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %12, i32 %13)
  %15 = bitcast %"struct.std::pair"* %9 to i64*
  store i64 %14, i64* %15, align 4
  %16 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %11, i32 0, i32 2
  %17 = load i32, i32* %7, align 4
  %18 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %16, i32 %17)
  %19 = bitcast %"struct.std::pair"* %10 to i64*
  store i64 %18, i64* %19, align 4
  %20 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11* %11, i32 %21, i32 %23)
  %25 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = load float, float* %8, align 4
  call void @_ZN14SparseMatrixEZIfE3setEjjf(%class.SparseMatrixEZ.14* %24, i32 %26, i32 %28, float %29)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14SparseMatrixEZIfE3setEjjf(%class.SparseMatrixEZ.14*, i32, i32, float) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrixEZ.14*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %10 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store float %3, float* %8, align 4
  %11 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %5, align 8
  %12 = load float, float* %8, align 4
  %13 = fpext float %12 to double
  %14 = fcmp oeq double %13, 0.000000e+00
  br i1 %14, label %15, label %41

; <label>:15:                                     ; preds = %4
  %16 = load i32, i32* %6, align 4
  %17 = load i32, i32* %7, align 4
  %18 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZN14SparseMatrixEZIfE6locateEjj(%class.SparseMatrixEZ.14* %11, i32 %16, i32 %17)
  store %"struct.SparseMatrixEZ<float>::Entry"* %18, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %19 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %20 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %19, null
  br i1 %20, label %21, label %40

; <label>:21:                                     ; preds = %15
  %22 = load i32, i32* @x.141
  %23 = load i32, i32* @y.142
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %31 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %30, i32 0, i32 1
  store float 0.000000e+00, float* %31, align 4
  %32 = load i32, i32* @x.141
  %33 = load i32, i32* @y.142
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:40:                                     ; preds = %originalBBpart2, %15
  br label %64

; <label>:41:                                     ; preds = %4
  %42 = load i32, i32* @x.141
  %43 = load i32, i32* @y.142
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* %6, align 4
  %51 = load i32, i32* %7, align 4
  %52 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZN14SparseMatrixEZIfE8allocateEjj(%class.SparseMatrixEZ.14* %11, i32 %50, i32 %51)
  store %"struct.SparseMatrixEZ<float>::Entry"* %52, %"struct.SparseMatrixEZ<float>::Entry"** %10, align 8
  %53 = load float, float* %8, align 4
  %54 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %10, align 8
  %55 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %54, i32 0, i32 1
  store float %53, float* %55, align 4
  %56 = load i32, i32* @x.141
  %57 = load i32, i32* @y.142
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %64

; <label>:64:                                     ; preds = %originalBBpart24, %40
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %21
  %65 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %66 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %65, i32 0, i32 1
  store float 0.000000e+00, float* %66, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %67 = load i32, i32* %6, align 4
  %68 = load i32, i32* %7, align 4
  %69 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZN14SparseMatrixEZIfE8allocateEjj(%class.SparseMatrixEZ.14* %11, i32 %67, i32 %68)
  store %"struct.SparseMatrixEZ<float>::Entry"* %69, %"struct.SparseMatrixEZ<float>::Entry"** %10, align 8
  %70 = load float, float* %8, align 4
  %71 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %10, align 8
  %72 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %71, i32 0, i32 1
  store float %70, float* %72, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN19BlockSparseMatrixEZIfE3addEjjf(%class.BlockSparseMatrixEZ.11*, i32, i32, float) #0 comdat align 2 {
  %5 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca %"struct.std::pair", align 4
  %10 = alloca %"struct.std::pair", align 4
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store float %3, float* %8, align 4
  %11 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %5, align 8
  %12 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %11, i32 0, i32 1
  %13 = load i32, i32* %6, align 4
  %14 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %12, i32 %13)
  %15 = bitcast %"struct.std::pair"* %9 to i64*
  store i64 %14, i64* %15, align 4
  %16 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %11, i32 0, i32 2
  %17 = load i32, i32* %7, align 4
  %18 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %16, i32 %17)
  %19 = bitcast %"struct.std::pair"* %10 to i64*
  store i64 %18, i64* %19, align 4
  %20 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN19BlockSparseMatrixEZIfE5blockEjj(%class.BlockSparseMatrixEZ.11* %11, i32 %21, i32 %23)
  %25 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = load float, float* %8, align 4
  call void @_ZN14SparseMatrixEZIfE3addEjjf(%class.SparseMatrixEZ.14* %24, i32 %26, i32 %28, float %29)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14SparseMatrixEZIfE3addEjjf(%class.SparseMatrixEZ.14*, i32, i32, float) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrixEZ.14*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store float %3, float* %8, align 4
  %10 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %5, align 8
  %11 = load float, float* %8, align 4
  %12 = fcmp oeq float %11, 0.000000e+00
  br i1 %12, label %13, label %14

; <label>:13:                                     ; preds = %4
  br label %23

; <label>:14:                                     ; preds = %4
  %15 = load i32, i32* %6, align 4
  %16 = load i32, i32* %7, align 4
  %17 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZN14SparseMatrixEZIfE8allocateEjj(%class.SparseMatrixEZ.14* %10, i32 %15, i32 %16)
  store %"struct.SparseMatrixEZ<float>::Entry"* %17, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %18 = load float, float* %8, align 4
  %19 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %20 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %19, i32 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fadd float %21, %18
  store float %22, float* %20, align 4
  br label %23

; <label>:23:                                     ; preds = %14, %13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN19BlockSparseMatrixEZIdED2Ev(%class.BlockSparseMatrixEZ*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.BlockSparseMatrixEZ*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %2, align 8
  %5 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %2, align 8
  %6 = bitcast %class.BlockSparseMatrixEZ* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 3
  invoke void @_ZN5TableILi2E14SparseMatrixEZIdEED2Ev(%class.Table* %7)
          to label %8 unwind label %30

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 2
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %9)
          to label %10 unwind label %35

; <label>:10:                                     ; preds = %8
  %11 = load i32, i32* @x.147
  %12 = load i32, i32* @y.148
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 1
  %20 = load i32, i32* @x.147
  %21 = load i32, i32* @y.148
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %19)
          to label %28 unwind label %56

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = bitcast %class.BlockSparseMatrixEZ* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %29)
  ret void

; <label>:30:                                     ; preds = %1
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %3, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %4, align 4
  %34 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 2
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %34)
          to label %55 unwind label %87

; <label>:35:                                     ; preds = %8
  %36 = load i32, i32* @x.147
  %37 = load i32, i32* @y.148
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %3, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %4, align 4
  %47 = load i32, i32* @x.147
  %48 = load i32, i32* @y.148
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %60

; <label>:55:                                     ; preds = %30
  br label %60

; <label>:56:                                     ; preds = %originalBBpart2
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %3, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %4, align 4
  br label %63

; <label>:60:                                     ; preds = %55, %originalBBpart24
  %61 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 1
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %61)
          to label %62 unwind label %87

; <label>:62:                                     ; preds = %60
  br label %63

; <label>:63:                                     ; preds = %62, %56
  %64 = bitcast %class.BlockSparseMatrixEZ* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %64)
          to label %65 unwind label %87

; <label>:65:                                     ; preds = %63
  br label %66

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.147
  %68 = load i32, i32* @y.148
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = load i8*, i8** %3, align 8
  %76 = load i32, i32* %4, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  %79 = load i32, i32* @x.147
  %80 = load i32, i32* @y.148
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %78

; <label>:87:                                     ; preds = %63, %60, %30
  %88 = load i32, i32* @x.147
  %89 = load i32, i32* @y.148
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %87, %originalBB10alteredBB
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  call void @__clang_call_terminate(i8* %97) #9
  %98 = load i32, i32* @x.147
  %99 = load i32, i32* @y.148
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %10
  %106 = getelementptr inbounds %class.BlockSparseMatrixEZ, %class.BlockSparseMatrixEZ* %5, i32 0, i32 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %3, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %4, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %110 = load i8*, i8** %3, align 8
  %111 = load i32, i32* %4, align 4
  %112 = insertvalue { i8*, i32 } undef, i8* %110, 0
  %113 = insertvalue { i8*, i32 } %112, i32 %111, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %87
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #9
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN19BlockSparseMatrixEZIdED0Ev(%class.BlockSparseMatrixEZ*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.BlockSparseMatrixEZ*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.BlockSparseMatrixEZ* %0, %class.BlockSparseMatrixEZ** %2, align 8
  %5 = load %class.BlockSparseMatrixEZ*, %class.BlockSparseMatrixEZ** %2, align 8
  invoke void @_ZN19BlockSparseMatrixEZIdED2Ev(%class.BlockSparseMatrixEZ* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.BlockSparseMatrixEZ* %5 to i8*
  call void @_ZdlPv(i8* %7) #11
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %class.BlockSparseMatrixEZ* %5 to i8*
  call void @_ZdlPv(i8* %12) #11
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN19BlockSparseMatrixEZIfED2Ev(%class.BlockSparseMatrixEZ.11*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.151
  %3 = load i32, i32* @y.152
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %10, align 8
  %13 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %10, align 8
  %14 = bitcast %class.BlockSparseMatrixEZ.11* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %13, i32 0, i32 3
  %16 = load i32, i32* @x.151
  %17 = load i32, i32* @y.152
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN5TableILi2E14SparseMatrixEZIfEED2Ev(%class.Table.12* %15)
          to label %24 unwind label %30

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %13, i32 0, i32 2
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %25)
          to label %26 unwind label %51

; <label>:26:                                     ; preds = %24
  %27 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %13, i32 0, i32 1
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %27)
          to label %28 unwind label %72

; <label>:28:                                     ; preds = %26
  %29 = bitcast %class.BlockSparseMatrixEZ.11* %13 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %29)
  ret void

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.151
  %32 = load i32, i32* @y.152
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %11, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %12, align 4
  %42 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %13, i32 0, i32 2
  %43 = load i32, i32* @x.151
  %44 = load i32, i32* @y.152
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %42)
          to label %71 unwind label %119

; <label>:51:                                     ; preds = %24
  %52 = load i32, i32* @x.151
  %53 = load i32, i32* @y.152
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %11, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %12, align 4
  %63 = load i32, i32* @x.151
  %64 = load i32, i32* @y.152
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %76

; <label>:71:                                     ; preds = %originalBBpart24
  br label %76

; <label>:72:                                     ; preds = %26
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %11, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %12, align 4
  br label %79

; <label>:76:                                     ; preds = %71, %originalBBpart28
  %77 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %13, i32 0, i32 1
  invoke void @_ZN12BlockIndicesD2Ev(%class.BlockIndices* %77)
          to label %78 unwind label %119

; <label>:78:                                     ; preds = %76
  br label %79

; <label>:79:                                     ; preds = %78, %72
  %80 = load i32, i32* @x.151
  %81 = load i32, i32* @y.152
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = bitcast %class.BlockSparseMatrixEZ.11* %13 to %class.Subscriptor*
  %89 = load i32, i32* @x.151
  %90 = load i32, i32* @y.152
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %88)
          to label %97 unwind label %119

; <label>:97:                                     ; preds = %originalBBpart212
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i32, i32* @x.151
  %100 = load i32, i32* @y.152
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  %107 = load i8*, i8** %11, align 8
  %108 = load i32, i32* %12, align 4
  %109 = insertvalue { i8*, i32 } undef, i8* %107, 0
  %110 = insertvalue { i8*, i32 } %109, i32 %108, 1
  %111 = load i32, i32* @x.151
  %112 = load i32, i32* @y.152
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  resume { i8*, i32 } %110

; <label>:119:                                    ; preds = %originalBBpart212, %76, %originalBBpart24
  %120 = landingpad { i8*, i32 }
          catch i8* null
  %121 = extractvalue { i8*, i32 } %120, 0
  call void @__clang_call_terminate(i8* %121) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %122 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %123 = alloca i8*
  %124 = alloca i32
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %122, align 8
  %125 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %122, align 8
  %126 = bitcast %class.BlockSparseMatrixEZ.11* %125 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV19BlockSparseMatrixEZIfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %125, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %11, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %12, align 4
  %131 = getelementptr inbounds %class.BlockSparseMatrixEZ.11, %class.BlockSparseMatrixEZ.11* %13, i32 0, i32 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %11, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %12, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  %135 = bitcast %class.BlockSparseMatrixEZ.11* %13 to %class.Subscriptor*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  %136 = load i8*, i8** %11, align 8
  %137 = load i32, i32* %12, align 4
  %138 = insertvalue { i8*, i32 } undef, i8* %136, 0
  %139 = insertvalue { i8*, i32 } %138, i32 %137, 1
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN19BlockSparseMatrixEZIfED0Ev(%class.BlockSparseMatrixEZ.11*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.153
  %3 = load i32, i32* @y.154
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %10, align 8
  %13 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %10, align 8
  %14 = load i32, i32* @x.153
  %15 = load i32, i32* @y.154
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN19BlockSparseMatrixEZIfED2Ev(%class.BlockSparseMatrixEZ.11* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.BlockSparseMatrixEZ.11* %13 to i8*
  call void @_ZdlPv(i8* %23) #11
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.153
  %26 = load i32, i32* @y.154
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %11, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %12, align 4
  %36 = bitcast %class.BlockSparseMatrixEZ.11* %13 to i8*
  call void @_ZdlPv(i8* %36) #11
  %37 = load i32, i32* @x.153
  %38 = load i32, i32* @y.154
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45

; <label>:45:                                     ; preds = %originalBBpart24
  %46 = load i8*, i8** %11, align 8
  %47 = load i32, i32* %12, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %1
  %50 = alloca %class.BlockSparseMatrixEZ.11*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %class.BlockSparseMatrixEZ.11* %0, %class.BlockSparseMatrixEZ.11** %50, align 8
  %53 = load %class.BlockSparseMatrixEZ.11*, %class.BlockSparseMatrixEZ.11** %50, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %11, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %12, align 4
  %57 = bitcast %class.BlockSparseMatrixEZ.11* %13 to i8*
  call void @_ZdlPv(i8* %57) #11
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %12 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %11)
  %13 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %14 = bitcast %"class.std::vector"* %13 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14)
  %16 = call dereferenceable(1) %"class.std::allocator"* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE17_S_select_on_copyERKS1_(%"class.std::allocator"* dereferenceable(1) %15)
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base"* %10, i64 %12, %"class.std::allocator"* dereferenceable(1) %16)
  %17 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %18 = invoke i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector"* %17)
          to label %19 unwind label %91

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.155
  %21 = load i32, i32* @y.156
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %18, i32** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %30 = load i32, i32* @x.155
  %31 = load i32, i32* @y.156
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %38 = invoke i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector"* %29)
          to label %39 unwind label %91

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* @x.155
  %41 = load i32, i32* @y.156
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store i32* %38, i32** %48, align 8
  %49 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %50 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %51, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %55 = load i32, i32* @x.155
  %56 = load i32, i32* @y.156
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %63 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %54)
          to label %64 unwind label %91

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = load i32, i32* @x.155
  %66 = load i32, i32* @y.156
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = load i32, i32* @x.155
  %78 = load i32, i32* @y.156
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %85 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E(i32* %74, i32* %76, i32* %53, %"class.std::allocator"* dereferenceable(1) %63)
          to label %86 unwind label %91

; <label>:86:                                     ; preds = %originalBBpart28
  %87 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %88 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %89, i32 0, i32 1
  store i32* %85, i32** %90, align 8
  ret void

; <label>:91:                                     ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2, %2
  %92 = load i32, i32* @x.155
  %93 = load i32, i32* @y.156
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %6, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %7, align 4
  %103 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %104 = load i32, i32* @x.155
  %105 = load i32, i32* @y.156
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base"* %103)
          to label %112 unwind label %150

; <label>:112:                                    ; preds = %originalBBpart212
  %113 = load i32, i32* @x.155
  %114 = load i32, i32* @y.156
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %112, %originalBB14alteredBB
  %121 = load i32, i32* @x.155
  %122 = load i32, i32* @y.156
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %129

; <label>:129:                                    ; preds = %originalBBpart216
  %130 = load i32, i32* @x.155
  %131 = load i32, i32* @y.156
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %129, %originalBB18alteredBB
  %138 = load i8*, i8** %6, align 8
  %139 = load i32, i32* %7, align 4
  %140 = insertvalue { i8*, i32 } undef, i8* %138, 0
  %141 = insertvalue { i8*, i32 } %140, i32 %139, 1
  %142 = load i32, i32* @x.155
  %143 = load i32, i32* @y.156
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  resume { i8*, i32 } %141

; <label>:150:                                    ; preds = %originalBBpart212
  %151 = load i32, i32* @x.155
  %152 = load i32, i32* @y.156
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %150, %originalBB22alteredBB
  %159 = landingpad { i8*, i32 }
          catch i8* null
  %160 = extractvalue { i8*, i32 } %159, 0
  call void @__clang_call_terminate(i8* %160) #9
  %161 = load i32, i32* @x.155
  %162 = load i32, i32* @y.156
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %169 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %18, i32** %169, align 8
  %170 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store i32* %38, i32** %171, align 8
  %172 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %172, i32 0, i32 0
  %174 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %173 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %174, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %178 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %181 = load i32*, i32** %180, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %182 = landingpad { i8*, i32 }
          cleanup
  %183 = extractvalue { i8*, i32 } %182, 0
  store i8* %183, i8** %6, align 8
  %184 = extractvalue { i8*, i32 } %182, 1
  store i32 %184, i32* %7, align 4
  %185 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %112
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %129
  %186 = load i8*, i8** %6, align 8
  %187 = load i32, i32* %7, align 4
  %188 = insertvalue { i8*, i32 } undef, i8* %186, 0
  %189 = insertvalue { i8*, i32 } %188, i32 %187, 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %150
  %190 = landingpad { i8*, i32 }
          catch i8* null
  %191 = extractvalue { i8*, i32 } %190, 0
  call void @__clang_call_terminate(i8* %191) #9
  br label %originalBB22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = ptrtoint i32* %8 to i64
  %15 = ptrtoint i32* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 4
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE17_S_select_on_copyERKS1_(%"class.std::allocator"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  ret %"class.std::allocator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %30

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.163
  %15 = load i32, i32* @y.164
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.163
  %23 = load i32, i32* @y.164
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:30:                                     ; preds = %3
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %7, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10) #10
  br label %34

; <label>:34:                                     ; preds = %30
  %35 = load i8*, i8** %7, align 8
  %36 = load i32, i32* %8, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.165
  %6 = load i32, i32* @y.166
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca i32*, align 8
  %16 = alloca %"class.std::allocator"*, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %0, i32** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store i32* %1, i32** %20, align 8
  store i32* %2, i32** %15, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %16, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load i32*, i32** %15, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %27, i32* %29, i32* %25)
  %31 = load i32, i32* @x.165
  %32 = load i32, i32* @y.166
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %30

originalBBalteredBB:                              ; preds = %originalBB, %4
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca i32*, align 8
  %42 = alloca %"class.std::allocator"*, align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store i32* %0, i32** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store i32* %1, i32** %46, align 8
  store i32* %2, i32** %41, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %42, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load i32*, i32** %41, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %53, i32* %55, i32* %51)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.167
  %3 = load i32, i32* @y.168
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.std::vector"*, align 8
  %12 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %14 = bitcast %"class.std::vector"* %13 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %10, i32** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = load i32, i32* @x.167
  %22 = load i32, i32* @y.168
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %33 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %35, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  store i32* %37, i32** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %29, i32** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, i32** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = ptrtoint i32* %13 to i64
  %19 = ptrtoint i32* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 4
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base"* %5, i32* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %23) #10
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.173
  %26 = load i32, i32* @y.174
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %36) #10
  %37 = load i32, i32* @x.173
  %38 = load i32, i32* @y.174
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %24
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %53) #10
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %7 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator"*
  %9 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator"* %8, %"class.std::allocator"* dereferenceable(1) %9) #10
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %16) #10
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %9, i32 0, i32 0
  store i32* %7, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %24 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %25, i32 0, i32 2
  store i32* %23, i32** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %4) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.183
  %4 = load i32, i32* @y.184
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %12 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %11, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %11, align 8
  %14 = load i32, i32* @x.183
  %15 = load i32, i32* @y.184
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %23 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %22, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.185
  %3 = load i32, i32* @y.186
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %10, align 8
  %12 = load i32, i32* @x.185
  %13 = load i32, i32* @y.186
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %9 to %"class.std::allocator"*
  %11 = load i64, i64* %4, align 8
  %12 = call i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi i32* [ %12, %8 ], [ null, %13 ]
  ret i32* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.189
  %4 = load i32, i32* @y.190
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator"*, %"class.std::allocator"** %11, align 8
  %14 = bitcast %"class.std::allocator"* %13 to %"class.__gnu_cxx::new_allocator"*
  %15 = load i64, i64* %12, align 8
  %16 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.189
  %18 = load i32, i32* @y.190
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator"*, %"class.std::allocator"** %25, align 8
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  %29 = load i64, i64* %26, align 8
  %30 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.191
  %5 = load i32, i32* @y.192
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %15) #10
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.191
  %20 = load i32, i32* @y.192
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28

; <label>:27:                                     ; preds = %originalBBpart2
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.191
  %30 = load i32, i32* @y.192
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64, i64* %13, align 8
  %38 = mul i64 %37, 4
  %39 = call i8* @_Znwm(i64 %38)
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* @x.191
  %42 = load i32, i32* @y.192
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  ret i32* %40

originalBBalteredBB:                              ; preds = %originalBB, %3
  %49 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %50 = alloca i64, align 8
  %51 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %49, align 8
  store i64 %1, i64* %50, align 8
  store i8* %2, i8** %51, align 8
  %52 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %49, align 8
  %53 = load i64, i64* %50, align 8
  %54 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %52) #10
  %55 = icmp ugt i64 %53, %54
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %56 = load i64, i64* %13, align 8
  %_ = sub i64 %56, 4
  %gen = mul i64 %_, 4
  %_2 = sub i64 0, %56
  %gen3 = add i64 %_2, 4
  %_4 = shl i64 %56, 4
  %_5 = sub i64 0, %56
  %gen6 = add i64 %_5, 4
  %_7 = sub i64 %56, 4
  %gen8 = mul i64 %_7, 4
  %_9 = shl i64 %56, 4
  %_10 = sub i64 %56, 4
  %gen11 = mul i64 %_10, 4
  %57 = mul i64 %56, 4
  %58 = call i8* @_Znwm(i64 %57)
  %59 = bitcast i8* %58 to i32*
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.193
  %3 = load i32, i32* @y.194
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %10, align 8
  %12 = load i32, i32* @x.193
  %13 = load i32, i32* @y.194
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 2305843009213693951

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %20, align 8
  br label %originalBB
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #4

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #5

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.195
  %5 = load i32, i32* @y.196
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store i32* %0, i32** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %1, i32** %19, align 8
  store i32* %2, i32** %14, align 8
  store i8 1, i8* %15, align 1
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load i32*, i32** %14, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_(i32* %26, i32* %28, i32* %24)
  %30 = load i32, i32* @x.195
  %31 = load i32, i32* @y.196
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %29

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca i32*, align 8
  %41 = alloca i8, align 1
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  store i32* %0, i32** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store i32* %1, i32** %45, align 8
  store i32* %2, i32** %40, align 8
  store i8 1, i8* %41, align 1
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator"* %42 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = load i32*, i32** %40, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_(i32* %52, i32* %54, i32* %50)
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = load i32, i32* @x.197
  %5 = load i32, i32* @y.198
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store i32* %0, i32** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %1, i32** %18, align 8
  store i32* %2, i32** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = load i32*, i32** %14, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %25, i32* %27, i32* %23)
  %29 = load i32, i32* @x.197
  %30 = load i32, i32* @y.198
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %28

originalBBalteredBB:                              ; preds = %originalBB, %3
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca i32*, align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store i32* %0, i32** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %39, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = load i32*, i32** %39, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %50, i32* %52, i32* %48)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.199
  %5 = load i32, i32* @y.200
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store i32* %0, i32** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %1, i32** %20, align 8
  store i32* %2, i32** %14, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %24)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store i32* %25, i32** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %30)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store i32* %31, i32** %32, align 8
  %33 = load i32*, i32** %14, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32* %35, i32* %37, i32* %33)
  %39 = load i32, i32* @x.199
  %40 = load i32, i32* @y.200
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %38

originalBBalteredBB:                              ; preds = %originalBB, %3
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %49 = alloca i32*, align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %47, i32 0, i32 0
  store i32* %0, i32** %54, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %48, i32 0, i32 0
  store i32* %1, i32** %55, align 8
  store i32* %2, i32** %49, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator"* %51 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %51, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %59)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  store i32* %60, i32** %61, align 8
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator"* %53 to i8*
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 8, i1 false)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %65)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  store i32* %66, i32** %67, align 8
  %68 = load i32*, i32** %49, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32* %70, i32* %72, i32* %68)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.201
  %5 = load i32, i32* @y.202
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store i32* %0, i32** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %1, i32** %18, align 8
  store i32* %2, i32** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %22)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %27)
  %29 = load i32*, i32** %14, align 8
  %30 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %29)
  %31 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %23, i32* %28, i32* %30)
  %32 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %14, i32* %31)
  %33 = load i32, i32* @x.201
  %34 = load i32, i32* @y.202
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca i32*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store i32* %0, i32** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store i32* %1, i32** %47, align 8
  store i32* %2, i32** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %45, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %56)
  %58 = load i32*, i32** %43, align 8
  %59 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %58)
  %60 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %52, i32* %57, i32* %59)
  %61 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %43, i32* %60)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32*) #3 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8), i32*) #3 comdat {
  %3 = load i32, i32* @x.205
  %4 = load i32, i32* @y.206
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32**, align 8
  %12 = alloca i32*, align 8
  store i32** %0, i32*** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* @x.205
  %15 = load i32, i32* @y.206
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca i32**, align 8
  %23 = alloca i32*, align 8
  store i32** %0, i32*** %22, align 8
  store i32* %1, i32** %23, align 8
  %24 = load i32*, i32** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32*) #0 comdat {
  %2 = load i32, i32* @x.209
  %3 = load i32, i32* @y.210
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %10)
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* @x.209
  %15 = load i32, i32* @y.210
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  store i32* %0, i32** %23, align 8
  %24 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %22)
  %25 = load i32*, i32** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjET_S1_(i32*) #3 comdat {
  %2 = load i32, i32* @x.211
  %3 = load i32, i32* @y.212
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* @x.211
  %13 = load i32, i32* @y.212
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i32*, align 8
  store i32* %0, i32** %20, align 8
  %21 = load i32*, i32** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #3 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = ptrtoint i32* %8 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %39

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.213
  %18 = load i32, i32* @y.214
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32*, i32** %6, align 8
  %26 = bitcast i32* %25 to i8*
  %27 = load i32*, i32** %4, align 8
  %28 = bitcast i32* %27 to i8*
  %29 = load i64, i64* %7, align 8
  %30 = mul i64 4, %29
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %26, i8* %28, i64 %30, i32 4, i1 false)
  %31 = load i32, i32* @x.213
  %32 = load i32, i32* @y.214
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %3
  %40 = load i32*, i32** %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = getelementptr inbounds i32, i32* %40, i64 %41
  ret i32* %42

originalBBalteredBB:                              ; preds = %originalBB, %16
  %43 = load i32*, i32** %6, align 8
  %44 = bitcast i32* %43 to i8*
  %45 = load i32*, i32** %4, align 8
  %46 = bitcast i32* %45 to i8*
  %47 = load i64, i64* %7, align 8
  %_ = sub i64 4, %47
  %gen = mul i64 %_, %47
  %_1 = sub i64 0, 4
  %gen2 = add i64 %_1, %47
  %_3 = shl i64 4, %47
  %48 = mul i64 4, %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %48, i32 4, i1 false)
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.215
  %3 = load i32, i32* @y.216
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.215
  %14 = load i32, i32* @y.216
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"*, i32** dereferenceable(8)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base"*, i32*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.219
  %5 = load i32, i32* @y.220
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %12, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = icmp ne i32* %16, null
  %18 = load i32, i32* @x.219
  %19 = load i32, i32* @y.220
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %31

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %27 to %"class.std::allocator"*
  %29 = load i32*, i32** %13, align 8
  %30 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator"* dereferenceable(1) %28, i32* %29, i64 %30)
  br label %31

; <label>:31:                                     ; preds = %26, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca i32*, align 8
  %34 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  store i32* %1, i32** %33, align 8
  store i64 %2, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  %36 = load i32*, i32** %33, align 8
  %37 = icmp ne i32* %36, null
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.221
  %5 = load i32, i32* @y.222
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator"*, %"class.std::allocator"** %12, align 8
  %16 = bitcast %"class.std::allocator"* %15 to %"class.__gnu_cxx::new_allocator"*
  %17 = load i32*, i32** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator"* %16, i32* %17, i64 %18)
  %19 = load i32, i32* @x.221
  %20 = load i32, i32* @y.222
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator"*, align 8
  %28 = alloca i32*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %27, align 8
  store i32* %1, i32** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %27, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load i32*, i32** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator"* %31, i32* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator"*, i32*, i64) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIdEEC2ERKS2_(%class.TableBase*, %class.TableBase* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.TableBase*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.TableBase* %1, %class.TableBase** %4, align 8
  %7 = load %class.TableBase*, %class.TableBase** %3, align 8
  %8 = bitcast %class.TableBase* %7 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %8)
  %9 = bitcast %class.TableBase* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E14SparseMatrixEZIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store %class.SparseMatrixEZ* null, %class.SparseMatrixEZ** %10, align 8
  %11 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %12)
          to label %13 unwind label %74

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.225
  %15 = load i32, i32* @y.226
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load %class.TableBase*, %class.TableBase** %4, align 8
  %23 = getelementptr inbounds %class.TableBase, %class.TableBase* %22, i32 0, i32 3
  %24 = load i32, i32* @x.225
  %25 = load i32, i32* @y.226
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE6reinitERK12TableIndicesILi2EE(%class.TableBase* %7, %class.TableIndices* dereferenceable(8) %23)
          to label %32 unwind label %74

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load %class.TableBase*, %class.TableBase** %4, align 8
  %34 = invoke i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv(%class.TableBase* %33)
          to label %35 unwind label %74

; <label>:35:                                     ; preds = %32
  %36 = icmp ne i32 %34, 0
  br i1 %36, label %37, label %79

; <label>:37:                                     ; preds = %35
  %38 = load i32, i32* @x.225
  %39 = load i32, i32* @y.226
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load %class.TableBase*, %class.TableBase** %4, align 8
  %47 = load i32, i32* @x.225
  %48 = load i32, i32* @y.226
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %55 = invoke %class.SparseMatrixEZ* @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE4dataEv(%class.TableBase* %46)
          to label %56 unwind label %74

; <label>:56:                                     ; preds = %originalBBpart24
  invoke void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE4fillIS1_EEvPKT_(%class.TableBase* %7, %class.SparseMatrixEZ* %55)
          to label %57 unwind label %74

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* @x.225
  %59 = load i32, i32* @y.226
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  %66 = load i32, i32* @x.225
  %67 = load i32, i32* @y.226
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %79

; <label>:74:                                     ; preds = %56, %originalBBpart24, %32, %originalBBpart2, %2
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %5, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %6, align 4
  %78 = bitcast %class.TableBase* %7 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %78)
          to label %96 unwind label %102

; <label>:79:                                     ; preds = %originalBBpart28, %35
  %80 = load i32, i32* @x.225
  %81 = load i32, i32* @y.226
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = load i32, i32* @x.225
  %89 = load i32, i32* @y.226
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

; <label>:96:                                     ; preds = %74
  br label %97

; <label>:97:                                     ; preds = %96
  %98 = load i8*, i8** %5, align 8
  %99 = load i32, i32* %6, align 4
  %100 = insertvalue { i8*, i32 } undef, i8* %98, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  resume { i8*, i32 } %101

; <label>:102:                                    ; preds = %74
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %13
  %105 = load %class.TableBase*, %class.TableBase** %4, align 8
  %106 = getelementptr inbounds %class.TableBase, %class.TableBase* %105, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %107 = load %class.TableBase*, %class.TableBase** %4, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIdEED2Ev(%class.Table*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.227
  %3 = load i32, i32* @y.228
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %10, align 8
  %11 = load %class.Table*, %class.Table** %10, align 8
  %12 = bitcast %class.Table* %11 to %class.TableBase*
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIdEED2Ev(%class.TableBase* %12)
  %13 = load i32, i32* @x.227
  %14 = load i32, i32* @y.228
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %21, align 8
  %22 = load %class.Table*, %class.Table** %21, align 8
  %23 = bitcast %class.Table* %22 to %class.TableBase*
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIdEED2Ev(%class.TableBase* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIdEED0Ev(%class.Table*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Table*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.Table* %0, %class.Table** %2, align 8
  %5 = load %class.Table*, %class.Table** %2, align 8
  invoke void @_ZN5TableILi2E14SparseMatrixEZIdEED2Ev(%class.Table* %5)
          to label %6 unwind label %24

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.229
  %8 = load i32, i32* @y.230
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %15) #11
  %16 = load i32, i32* @x.229
  %17 = load i32, i32* @y.230
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %28) #11
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %6
  %34 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %34) #11
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.231
  %3 = load i32, i32* @y.232
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %10, align 8
  %11 = load %class.TableIndices*, %class.TableIndices** %10, align 8
  %12 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %13 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %14 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %13, i32 0, i32 0
  %15 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 1
  store i32 0, i32* %15, align 4
  %16 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %17 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %16, i32 0, i32 0
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 0
  store i32 0, i32* %18, align 4
  %19 = load i32, i32* @x.231
  %20 = load i32, i32* @y.232
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %27, align 8
  %28 = load %class.TableIndices*, %class.TableIndices** %27, align 8
  %29 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %30 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %31 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %30, i32 0, i32 0
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 1
  store i32 0, i32* %32, align 4
  %33 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %34 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %33, i32 0, i32 0
  %35 = getelementptr inbounds [2 x i32], [2 x i32]* %34, i64 0, i64 0
  store i32 0, i32* %35, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE6reinitERK12TableIndicesILi2EE(%class.TableBase*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %class.TableIndices, align 4
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %9 = load %class.TableBase*, %class.TableBase** %3, align 8
  %10 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %11 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 3
  %12 = bitcast %class.TableIndices* %11 to i8*
  %13 = bitcast %class.TableIndices* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv(%class.TableBase* %9)
  store i32 %14, i32* %5, align 4
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %136

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.233
  %19 = load i32, i32* @y.234
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %27 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %26, align 8
  %28 = icmp ne %class.SparseMatrixEZ* %27, null
  %29 = load i32, i32* @x.233
  %30 = load i32, i32* @y.234
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %114

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.233
  %39 = load i32, i32* @y.234
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %47 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %46, align 8
  %48 = icmp eq %class.SparseMatrixEZ* %47, null
  %49 = load i32, i32* @x.233
  %50 = load i32, i32* @y.234
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %48, label %86, label %57

; <label>:57:                                     ; preds = %originalBBpart24
  %58 = bitcast %class.SparseMatrixEZ* %47 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 -8
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %47, i64 %61
  %63 = icmp eq %class.SparseMatrixEZ* %47, %62
  br i1 %63, label %69, label %64

; <label>:64:                                     ; preds = %67, %57
  %65 = phi %class.SparseMatrixEZ* [ %62, %57 ], [ %66, %67 ]
  %66 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %65, i64 -1
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %66)
          to label %67 unwind label %87

; <label>:67:                                     ; preds = %64
  %68 = icmp eq %class.SparseMatrixEZ* %66, %47
  br i1 %68, label %69, label %64

; <label>:69:                                     ; preds = %67, %57
  %70 = load i32, i32* @x.233
  %71 = load i32, i32* @y.234
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  call void @_ZdaPv(i8* %59) #11
  %78 = load i32, i32* @x.233
  %79 = load i32, i32* @y.234
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %86

; <label>:86:                                     ; preds = %originalBBpart28, %originalBBpart24
  br label %114

; <label>:87:                                     ; preds = %64
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %6, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %7, align 4
  %91 = icmp eq %class.SparseMatrixEZ* %47, %66
  br i1 %91, label %97, label %92

; <label>:92:                                     ; preds = %95, %87
  %93 = phi %class.SparseMatrixEZ* [ %66, %87 ], [ %94, %95 ]
  %94 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %93, i64 -1
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %94)
          to label %95 unwind label %348

; <label>:95:                                     ; preds = %92
  %96 = icmp eq %class.SparseMatrixEZ* %94, %47
  br i1 %96, label %97, label %92

; <label>:97:                                     ; preds = %95, %87
  %98 = load i32, i32* @x.233
  %99 = load i32, i32* @y.234
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %97, %originalBB10alteredBB
  call void @_ZdaPv(i8* %59) #11
  %106 = load i32, i32* @x.233
  %107 = load i32, i32* @y.234
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %343

; <label>:114:                                    ; preds = %86, %originalBBpart2
  %115 = load i32, i32* @x.233
  %116 = load i32, i32* @y.234
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %114, %originalBB14alteredBB
  %123 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  store %class.SparseMatrixEZ* null, %class.SparseMatrixEZ** %123, align 8
  %124 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  store i32 0, i32* %124, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %8)
  %125 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 3
  %126 = bitcast %class.TableIndices* %125 to i8*
  %127 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 8, i32 4, i1 false)
  %128 = load i32, i32* @x.233
  %129 = load i32, i32* @y.234
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %342

; <label>:136:                                    ; preds = %2
  %137 = load i32, i32* @x.233
  %138 = load i32, i32* @y.234
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %136, %originalBB18alteredBB
  %145 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  %146 = load i32, i32* %145, align 8
  %147 = load i32, i32* %5, align 4
  %148 = icmp ult i32 %146, %147
  %149 = load i32, i32* @x.233
  %150 = load i32, i32* @y.234
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %148, label %157, label %325

; <label>:157:                                    ; preds = %originalBBpart220
  %158 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %159 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %158, align 8
  %160 = icmp ne %class.SparseMatrixEZ* %159, null
  br i1 %160, label %161, label %270

; <label>:161:                                    ; preds = %157
  %162 = load i32, i32* @x.233
  %163 = load i32, i32* @y.234
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %161, %originalBB22alteredBB
  %170 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %171 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %170, align 8
  %172 = icmp eq %class.SparseMatrixEZ* %171, null
  %173 = load i32, i32* @x.233
  %174 = load i32, i32* @y.234
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %172, label %258, label %181

; <label>:181:                                    ; preds = %originalBBpart224
  %182 = load i32, i32* @x.233
  %183 = load i32, i32* @y.234
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %181, %originalBB26alteredBB
  %190 = bitcast %class.SparseMatrixEZ* %171 to i8*
  %191 = getelementptr inbounds i8, i8* %190, i64 -8
  %192 = bitcast i8* %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %171, i64 %193
  %195 = icmp eq %class.SparseMatrixEZ* %171, %194
  %196 = load i32, i32* @x.233
  %197 = load i32, i32* @y.234
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %195, label %241, label %204

; <label>:204:                                    ; preds = %originalBBpart236, %originalBBpart228
  %205 = phi %class.SparseMatrixEZ* [ %194, %originalBBpart228 ], [ %214, %originalBBpart236 ]
  %206 = load i32, i32* @x.233
  %207 = load i32, i32* @y.234
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %204, %originalBB30alteredBB
  %214 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %205, i64 -1
  %215 = load i32, i32* @x.233
  %216 = load i32, i32* @y.234
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %214)
          to label %223 unwind label %259

; <label>:223:                                    ; preds = %originalBBpart232
  %224 = load i32, i32* @x.233
  %225 = load i32, i32* @y.234
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %223, %originalBB34alteredBB
  %232 = icmp eq %class.SparseMatrixEZ* %214, %171
  %233 = load i32, i32* @x.233
  %234 = load i32, i32* @y.234
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %232, label %241, label %204

; <label>:241:                                    ; preds = %originalBBpart236, %originalBBpart228
  %242 = load i32, i32* @x.233
  %243 = load i32, i32* @y.234
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %241, %originalBB38alteredBB
  call void @_ZdaPv(i8* %191) #11
  %250 = load i32, i32* @x.233
  %251 = load i32, i32* @y.234
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %258

; <label>:258:                                    ; preds = %originalBBpart240, %originalBBpart224
  br label %270

; <label>:259:                                    ; preds = %originalBBpart232
  %260 = landingpad { i8*, i32 }
          cleanup
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %6, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %7, align 4
  %263 = icmp eq %class.SparseMatrixEZ* %171, %214
  br i1 %263, label %269, label %264

; <label>:264:                                    ; preds = %267, %259
  %265 = phi %class.SparseMatrixEZ* [ %214, %259 ], [ %266, %267 ]
  %266 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %265, i64 -1
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %266)
          to label %267 unwind label %348

; <label>:267:                                    ; preds = %264
  %268 = icmp eq %class.SparseMatrixEZ* %266, %171
  br i1 %268, label %269, label %264

; <label>:269:                                    ; preds = %267, %259
  call void @_ZdaPv(i8* %191) #11
  br label %343

; <label>:270:                                    ; preds = %258, %157
  %271 = load i32, i32* @x.233
  %272 = load i32, i32* @y.234
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %270, %originalBB42alteredBB
  %279 = load i32, i32* %5, align 4
  %280 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  store i32 %279, i32* %280, align 8
  %281 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  %282 = load i32, i32* %281, align 8
  %283 = zext i32 %282 to i64
  %284 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %283, i64 88)
  %285 = extractvalue { i64, i1 } %284, 1
  %286 = extractvalue { i64, i1 } %284, 0
  %287 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %286, i64 8)
  %288 = extractvalue { i64, i1 } %287, 1
  %289 = or i1 %285, %288
  %290 = extractvalue { i64, i1 } %287, 0
  %291 = select i1 %289, i64 -1, i64 %290
  %292 = call i8* @_Znam(i64 %291) #13
  %293 = bitcast i8* %292 to i64*
  store i64 %283, i64* %293, align 16
  %294 = getelementptr inbounds i8, i8* %292, i64 8
  %295 = bitcast i8* %294 to %class.SparseMatrixEZ*
  %296 = icmp eq i64 %283, 0
  %297 = load i32, i32* @x.233
  %298 = load i32, i32* @y.234
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %296, label %312, label %305

; <label>:305:                                    ; preds = %originalBBpart244
  %306 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %295, i64 %283
  br label %307

; <label>:307:                                    ; preds = %309, %305
  %308 = phi %class.SparseMatrixEZ* [ %295, %305 ], [ %310, %309 ]
  invoke void @_ZN14SparseMatrixEZIdEC1Ev(%class.SparseMatrixEZ* %308)
          to label %309 unwind label %314

; <label>:309:                                    ; preds = %307
  %310 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %308, i64 1
  %311 = icmp eq %class.SparseMatrixEZ* %310, %306
  br i1 %311, label %312, label %307

; <label>:312:                                    ; preds = %309, %originalBBpart244
  %313 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  store %class.SparseMatrixEZ* %295, %class.SparseMatrixEZ** %313, align 8
  br label %325

; <label>:314:                                    ; preds = %307
  %315 = landingpad { i8*, i32 }
          cleanup
  %316 = extractvalue { i8*, i32 } %315, 0
  store i8* %316, i8** %6, align 8
  %317 = extractvalue { i8*, i32 } %315, 1
  store i32 %317, i32* %7, align 4
  %318 = icmp eq %class.SparseMatrixEZ* %295, %308
  br i1 %318, label %324, label %319

; <label>:319:                                    ; preds = %322, %314
  %320 = phi %class.SparseMatrixEZ* [ %308, %314 ], [ %321, %322 ]
  %321 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %320, i64 -1
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %321)
          to label %322 unwind label %348

; <label>:322:                                    ; preds = %319
  %323 = icmp eq %class.SparseMatrixEZ* %321, %295
  br i1 %323, label %324, label %319

; <label>:324:                                    ; preds = %322, %314
  call void @_ZdaPv(i8* %292) #11
  br label %343

; <label>:325:                                    ; preds = %312, %originalBBpart220
  %326 = load i32, i32* @x.233
  %327 = load i32, i32* @y.234
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %325, %originalBB46alteredBB
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE12reset_valuesEv(%class.TableBase* %9)
  %334 = load i32, i32* @x.233
  %335 = load i32, i32* @y.234
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %342

; <label>:342:                                    ; preds = %originalBBpart248, %originalBBpart216
  ret void

; <label>:343:                                    ; preds = %324, %269, %originalBBpart212
  %344 = load i8*, i8** %6, align 8
  %345 = load i32, i32* %7, align 4
  %346 = insertvalue { i8*, i32 } undef, i8* %344, 0
  %347 = insertvalue { i8*, i32 } %346, i32 %345, 1
  resume { i8*, i32 } %347

; <label>:348:                                    ; preds = %319, %264, %92
  %349 = landingpad { i8*, i32 }
          catch i8* null
  %350 = extractvalue { i8*, i32 } %349, 0
  call void @__clang_call_terminate(i8* %350) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %17
  %351 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %352 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %351, align 8
  %353 = icmp ne %class.SparseMatrixEZ* %352, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %354 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %355 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %354, align 8
  %356 = icmp eq %class.SparseMatrixEZ* %355, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  call void @_ZdaPv(i8* %59) #11
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %97
  call void @_ZdaPv(i8* %59) #11
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %114
  %357 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  store %class.SparseMatrixEZ* null, %class.SparseMatrixEZ** %357, align 8
  %358 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  store i32 0, i32* %358, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %8)
  %359 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 3
  %360 = bitcast %class.TableIndices* %359 to i8*
  %361 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %360, i8* %361, i64 8, i32 4, i1 false)
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %136
  %362 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  %363 = load i32, i32* %362, align 8
  %364 = load i32, i32* %5, align 4
  %365 = icmp ult i32 %363, %364
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %161
  %366 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %367 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %366, align 8
  %368 = icmp eq %class.SparseMatrixEZ* %367, null
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %181
  %369 = bitcast %class.SparseMatrixEZ* %171 to i8*
  %370 = getelementptr inbounds i8, i8* %369, i64 -8
  %371 = bitcast i8* %370 to i64*
  %372 = load i64, i64* %371, align 8
  %373 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %171, i64 %372
  %374 = icmp eq %class.SparseMatrixEZ* %171, %373
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %204
  %375 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %205, i64 -1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %223
  %376 = icmp eq %class.SparseMatrixEZ* %214, %171
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %241
  call void @_ZdaPv(i8* %191) #11
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %270
  %377 = load i32, i32* %5, align 4
  %378 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  store i32 %377, i32* %378, align 8
  %379 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  %380 = load i32, i32* %379, align 8
  %381 = zext i32 %380 to i64
  %382 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %381, i64 88)
  %383 = extractvalue { i64, i1 } %382, 1
  %384 = extractvalue { i64, i1 } %382, 0
  %385 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %384, i64 8)
  %386 = extractvalue { i64, i1 } %385, 1
  %_ = sub i1 false, %383
  %gen = add i1 %_, %386
  %387 = or i1 %383, %386
  %388 = extractvalue { i64, i1 } %385, 0
  %389 = select i1 %387, i64 -1, i64 %388
  %390 = call i8* @_Znam(i64 %389) #13
  %391 = bitcast i8* %390 to i64*
  store i64 %381, i64* %391, align 16
  %392 = getelementptr inbounds i8, i8* %390, i64 8
  %393 = bitcast i8* %392 to %class.SparseMatrixEZ*
  %394 = icmp eq i64 %381, 0
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %325
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE12reset_valuesEv(%class.TableBase* %9)
  br label %originalBB46
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv(%class.TableBase*) #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %16, %1
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %19

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 3
  %11 = bitcast %class.TableIndices* %10 to %class.TableIndicesBase*
  %12 = load i32, i32* %4, align 4
  %13 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %11, i32 %12)
  %14 = load i32, i32* %3, align 4
  %15 = mul i32 %14, %13
  store i32 %15, i32* %3, align 4
  br label %16

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %4, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %6

; <label>:19:                                     ; preds = %6
  %20 = load i32, i32* @x.235
  %21 = load i32, i32* @y.236
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32, i32* %3, align 4
  %29 = load i32, i32* @x.235
  %30 = load i32, i32* @y.236
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %28

originalBBalteredBB:                              ; preds = %originalBB, %19
  %37 = load i32, i32* %3, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE4fillIS1_EEvPKT_(%class.TableBase*, %class.SparseMatrixEZ*) #0 comdat align 2 {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.SparseMatrixEZ*, align 8
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %4, align 8
  %5 = load %class.TableBase*, %class.TableBase** %3, align 8
  %6 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  %7 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  %8 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv(%class.TableBase* %5)
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %7, i64 %9
  %11 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  %12 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %11, align 8
  %13 = call %class.SparseMatrixEZ* @_ZSt4copyIPK14SparseMatrixEZIdEPS1_ET0_T_S6_S5_(%class.SparseMatrixEZ* %6, %class.SparseMatrixEZ* %10, %class.SparseMatrixEZ* %12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE4dataEv(%class.TableBase*) #3 comdat align 2 {
  %2 = load i32, i32* @x.239
  %3 = load i32, i32* @y.240
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %11 = load %class.TableBase*, %class.TableBase** %10, align 8
  %12 = getelementptr inbounds %class.TableBase, %class.TableBase* %11, i32 0, i32 1
  %13 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %12, align 8
  %14 = load i32, i32* @x.239
  %15 = load i32, i32* @y.240
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.TableBase*, align 8
  store %class.TableBase* %0, %class.TableBase** %22, align 8
  %23 = load %class.TableBase*, %class.TableBase** %22, align 8
  %24 = getelementptr inbounds %class.TableBase, %class.TableBase* %23, i32 0, i32 1
  %25 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIdEED2Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  %6 = bitcast %class.TableBase* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E14SparseMatrixEZIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  %8 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %7, align 8
  %9 = icmp ne %class.SparseMatrixEZ* %8, null
  br i1 %9, label %10, label %56

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.241
  %12 = load i32, i32* @y.242
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  %20 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %19, align 8
  %21 = icmp eq %class.SparseMatrixEZ* %20, null
  %22 = load i32, i32* @x.241
  %23 = load i32, i32* @y.242
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %43, label %30

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = bitcast %class.SparseMatrixEZ* %20 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 -8
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i64 %34
  %36 = icmp eq %class.SparseMatrixEZ* %20, %35
  br i1 %36, label %42, label %37

; <label>:37:                                     ; preds = %40, %30
  %38 = phi %class.SparseMatrixEZ* [ %35, %30 ], [ %39, %40 ]
  %39 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %38, i64 -1
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %39)
          to label %40 unwind label %44

; <label>:40:                                     ; preds = %37
  %41 = icmp eq %class.SparseMatrixEZ* %39, %20
  br i1 %41, label %42, label %37

; <label>:42:                                     ; preds = %40, %30
  call void @_ZdaPv(i8* %32) #11
  br label %43

; <label>:43:                                     ; preds = %42, %originalBBpart2
  br label %56

; <label>:44:                                     ; preds = %37
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %3, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %4, align 4
  %48 = icmp eq %class.SparseMatrixEZ* %20, %39
  br i1 %48, label %54, label %49

; <label>:49:                                     ; preds = %52, %44
  %50 = phi %class.SparseMatrixEZ* [ %39, %44 ], [ %51, %52 ]
  %51 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %50, i64 -1
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %51)
          to label %52 unwind label %64

; <label>:52:                                     ; preds = %49
  %53 = icmp eq %class.SparseMatrixEZ* %51, %20
  br i1 %53, label %54, label %49

; <label>:54:                                     ; preds = %52, %44
  call void @_ZdaPv(i8* %32) #11
  %55 = bitcast %class.TableBase* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %55)
          to label %58 unwind label %64

; <label>:56:                                     ; preds = %43, %1
  %57 = bitcast %class.TableBase* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %57)
  ret void

; <label>:58:                                     ; preds = %54
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %54, %49
  %65 = load i32, i32* @x.241
  %66 = load i32, i32* @y.242
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %64, %originalBB1alteredBB
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #9
  %75 = load i32, i32* @x.241
  %76 = load i32, i32* @y.242
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %10
  %83 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  %84 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %83, align 8
  %85 = icmp eq %class.SparseMatrixEZ* %84, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #9
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIdEED0Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.243
  %3 = load i32, i32* @y.244
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %13 = load %class.TableBase*, %class.TableBase** %10, align 8
  %14 = load i32, i32* @x.243
  %15 = load i32, i32* @y.244
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9TableBaseILi2E14SparseMatrixEZIdEED2Ev(%class.TableBase* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.TableBase* %13 to i8*
  call void @_ZdlPv(i8* %23) #11
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  %28 = bitcast %class.TableBase* %13 to i8*
  call void @_ZdlPv(i8* %28) #11
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %12, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %class.TableBase*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %34, align 8
  %37 = load %class.TableBase*, %class.TableBase** %34, align 8
  br label %originalBB
}

declare void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #7

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #5

declare void @_ZN14SparseMatrixEZIdEC1Ev(%class.SparseMatrixEZ*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIdEE12reset_valuesEv(%class.TableBase*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.245
  %3 = load i32, i32* @y.246
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  %11 = alloca %class.SparseMatrixEZ, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %14 = load %class.TableBase*, %class.TableBase** %10, align 8
  %15 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv(%class.TableBase* %14)
  %16 = icmp ne i32 %15, 0
  %17 = load i32, i32* @x.245
  %18 = load i32, i32* @y.246
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %52

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = getelementptr inbounds %class.TableBase, %class.TableBase* %14, i32 0, i32 1
  %27 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %26, align 8
  %28 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv(%class.TableBase* %14)
  call void @_ZN14SparseMatrixEZIdEC1Ev(%class.SparseMatrixEZ* %11)
  %29 = invoke %class.SparseMatrixEZ* @_ZSt6fill_nIP14SparseMatrixEZIdEjS1_ET_S3_T0_RKT1_(%class.SparseMatrixEZ* %27, i32 %28, %class.SparseMatrixEZ* dereferenceable(88) %11)
          to label %30 unwind label %31

; <label>:30:                                     ; preds = %25
  call void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %11)
  br label %52

; <label>:31:                                     ; preds = %25
  %32 = load i32, i32* @x.245
  %33 = load i32, i32* @y.246
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %12, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %13, align 4
  %43 = load i32, i32* @x.245
  %44 = load i32, i32* @y.246
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN14SparseMatrixEZIdED1Ev(%class.SparseMatrixEZ* %11)
          to label %51 unwind label %58

; <label>:51:                                     ; preds = %originalBBpart24
  br label %53

; <label>:52:                                     ; preds = %30, %originalBBpart2
  ret void

; <label>:53:                                     ; preds = %51
  %54 = load i8*, i8** %12, align 8
  %55 = load i32, i32* %13, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %61 = alloca %class.TableBase*, align 8
  %62 = alloca %class.SparseMatrixEZ, align 8
  %63 = alloca i8*
  %64 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %61, align 8
  %65 = load %class.TableBase*, %class.TableBase** %61, align 8
  %66 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIdEE10n_elementsEv(%class.TableBase* %65)
  %67 = icmp ne i32 %66, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %12, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %13, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt6fill_nIP14SparseMatrixEZIdEjS1_ET_S3_T0_RKT1_(%class.SparseMatrixEZ*, i32, %class.SparseMatrixEZ* dereferenceable(88)) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %6, align 8
  %7 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  %8 = call %class.SparseMatrixEZ* @_ZSt12__niter_baseIP14SparseMatrixEZIdEET_S3_(%class.SparseMatrixEZ* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %6, align 8
  %11 = call %class.SparseMatrixEZ* @_ZSt10__fill_n_aIP14SparseMatrixEZIdEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.SparseMatrixEZ* %8, i32 %9, %class.SparseMatrixEZ* dereferenceable(88) %10)
  %12 = call %class.SparseMatrixEZ* @_ZSt12__niter_wrapIP14SparseMatrixEZIdEET_RKS3_S3_(%class.SparseMatrixEZ** dereferenceable(8) %4, %class.SparseMatrixEZ* %11)
  ret %class.SparseMatrixEZ* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt12__niter_wrapIP14SparseMatrixEZIdEET_RKS3_S3_(%class.SparseMatrixEZ** dereferenceable(8), %class.SparseMatrixEZ*) #3 comdat {
  %3 = alloca %class.SparseMatrixEZ**, align 8
  %4 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ** %0, %class.SparseMatrixEZ*** %3, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %4, align 8
  %5 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  ret %class.SparseMatrixEZ* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt10__fill_n_aIP14SparseMatrixEZIdEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.SparseMatrixEZ*, i32, %class.SparseMatrixEZ* dereferenceable(88)) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.SparseMatrixEZ*, align 8
  %7 = alloca i32, align 4
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %6, align 8
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* %7, align 4
  br label %9

; <label>:9:                                      ; preds = %32, %3
  %10 = load i32, i32* @x.251
  %11 = load i32, i32* @y.252
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = load i32, i32* %7, align 4
  %19 = icmp ugt i32 %18, 0
  %20 = load i32, i32* @x.251
  %21 = load i32, i32* @y.252
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %37

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %6, align 8
  %30 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  %31 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSERKS0_(%class.SparseMatrixEZ* %30, %class.SparseMatrixEZ* dereferenceable(88) %29)
  br label %32

; <label>:32:                                     ; preds = %28
  %33 = load i32, i32* %7, align 4
  %34 = add i32 %33, -1
  store i32 %34, i32* %7, align 4
  %35 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  %36 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %35, i32 1
  store %class.SparseMatrixEZ* %36, %class.SparseMatrixEZ** %4, align 8
  br label %9

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  ret %class.SparseMatrixEZ* %38

originalBBalteredBB:                              ; preds = %originalBB, %9
  %39 = load i32, i32* %7, align 4
  %40 = icmp ugt i32 %39, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt12__niter_baseIP14SparseMatrixEZIdEET_S3_(%class.SparseMatrixEZ*) #3 comdat {
  %2 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %2, align 8
  %3 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %2, align 8
  ret %class.SparseMatrixEZ* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #3 comdat align 2 {
  %3 = load i32, i32* @x.255
  %4 = load i32, i32* @y.256
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TableIndicesBase*, align 8
  %12 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.TableIndicesBase*, %class.TableIndicesBase** %11, align 8
  %14 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @x.255
  %20 = load i32, i32* @y.256
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.TableIndicesBase*, align 8
  %28 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.TableIndicesBase*, %class.TableIndicesBase** %27, align 8
  %30 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %29, i32 0, i32 0
  %31 = load i32, i32* %28, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %30, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt4copyIPK14SparseMatrixEZIdEPS1_ET0_T_S6_S5_(%class.SparseMatrixEZ*, %class.SparseMatrixEZ*, %class.SparseMatrixEZ*) #0 comdat {
  %4 = load i32, i32* @x.257
  %5 = load i32, i32* @y.258
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrixEZ*, align 8
  %13 = alloca %class.SparseMatrixEZ*, align 8
  %14 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %12, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %13, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %14, align 8
  %15 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %12, align 8
  %16 = call %class.SparseMatrixEZ* @_ZSt12__miter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ* %15)
  %17 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %13, align 8
  %18 = call %class.SparseMatrixEZ* @_ZSt12__miter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ* %17)
  %19 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  %20 = call %class.SparseMatrixEZ* @_ZSt14__copy_move_a2ILb0EPK14SparseMatrixEZIdEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ* %16, %class.SparseMatrixEZ* %18, %class.SparseMatrixEZ* %19)
  %21 = load i32, i32* @x.257
  %22 = load i32, i32* @y.258
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca %class.SparseMatrixEZ*, align 8
  %30 = alloca %class.SparseMatrixEZ*, align 8
  %31 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %29, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %30, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %31, align 8
  %32 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %29, align 8
  %33 = call %class.SparseMatrixEZ* @_ZSt12__miter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ* %32)
  %34 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %30, align 8
  %35 = call %class.SparseMatrixEZ* @_ZSt12__miter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ* %34)
  %36 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %31, align 8
  %37 = call %class.SparseMatrixEZ* @_ZSt14__copy_move_a2ILb0EPK14SparseMatrixEZIdEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ* %33, %class.SparseMatrixEZ* %35, %class.SparseMatrixEZ* %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt14__copy_move_a2ILb0EPK14SparseMatrixEZIdEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ*, %class.SparseMatrixEZ*, %class.SparseMatrixEZ*) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ*, align 8
  %5 = alloca %class.SparseMatrixEZ*, align 8
  %6 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %4, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %5, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %6, align 8
  %7 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  %8 = call %class.SparseMatrixEZ* @_ZSt12__niter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ* %7)
  %9 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %5, align 8
  %10 = call %class.SparseMatrixEZ* @_ZSt12__niter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ* %9)
  %11 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %6, align 8
  %12 = call %class.SparseMatrixEZ* @_ZSt12__niter_baseIP14SparseMatrixEZIdEET_S3_(%class.SparseMatrixEZ* %11)
  %13 = call %class.SparseMatrixEZ* @_ZSt13__copy_move_aILb0EPK14SparseMatrixEZIdEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ* %8, %class.SparseMatrixEZ* %10, %class.SparseMatrixEZ* %12)
  %14 = call %class.SparseMatrixEZ* @_ZSt12__niter_wrapIP14SparseMatrixEZIdEET_RKS3_S3_(%class.SparseMatrixEZ** dereferenceable(8) %6, %class.SparseMatrixEZ* %13)
  ret %class.SparseMatrixEZ* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt12__miter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ*) #3 comdat {
  %2 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %2, align 8
  %3 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %2, align 8
  ret %class.SparseMatrixEZ* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt13__copy_move_aILb0EPK14SparseMatrixEZIdEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ*, %class.SparseMatrixEZ*, %class.SparseMatrixEZ*) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ*, align 8
  %5 = alloca %class.SparseMatrixEZ*, align 8
  %6 = alloca %class.SparseMatrixEZ*, align 8
  %7 = alloca i8, align 1
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %4, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %5, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %4, align 8
  %9 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %5, align 8
  %10 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %6, align 8
  %11 = call %class.SparseMatrixEZ* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK14SparseMatrixEZIdEPS4_EET0_T_S9_S8_(%class.SparseMatrixEZ* %8, %class.SparseMatrixEZ* %9, %class.SparseMatrixEZ* %10)
  ret %class.SparseMatrixEZ* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZSt12__niter_baseIPK14SparseMatrixEZIdEET_S4_(%class.SparseMatrixEZ*) #3 comdat {
  %2 = load i32, i32* @x.265
  %3 = load i32, i32* @y.266
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %10, align 8
  %11 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %10, align 8
  %12 = load i32, i32* @x.265
  %13 = load i32, i32* @y.266
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.SparseMatrixEZ*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %20, align 8
  %21 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK14SparseMatrixEZIdEPS4_EET0_T_S9_S8_(%class.SparseMatrixEZ*, %class.SparseMatrixEZ*, %class.SparseMatrixEZ*) #0 comdat align 2 {
  %4 = load i32, i32* @x.267
  %5 = load i32, i32* @y.268
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrixEZ*, align 8
  %13 = alloca %class.SparseMatrixEZ*, align 8
  %14 = alloca %class.SparseMatrixEZ*, align 8
  %15 = alloca i64, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %12, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %13, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %14, align 8
  %16 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %13, align 8
  %17 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %12, align 8
  %18 = ptrtoint %class.SparseMatrixEZ* %16 to i64
  %19 = ptrtoint %class.SparseMatrixEZ* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 88
  store i64 %21, i64* %15, align 8
  %22 = load i32, i32* @x.267
  %23 = load i32, i32* @y.268
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %57, %originalBBpart2
  %31 = load i64, i64* %15, align 8
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %60

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* @x.267
  %35 = load i32, i32* @y.268
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %33, %originalBB20alteredBB
  %42 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %12, align 8
  %43 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  %44 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSERKS0_(%class.SparseMatrixEZ* %43, %class.SparseMatrixEZ* dereferenceable(88) %42)
  %45 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %12, align 8
  %46 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %45, i32 1
  store %class.SparseMatrixEZ* %46, %class.SparseMatrixEZ** %12, align 8
  %47 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  %48 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %47, i32 1
  store %class.SparseMatrixEZ* %48, %class.SparseMatrixEZ** %14, align 8
  %49 = load i32, i32* @x.267
  %50 = load i32, i32* @y.268
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %57

; <label>:57:                                     ; preds = %originalBBpart222
  %58 = load i64, i64* %15, align 8
  %59 = add nsw i64 %58, -1
  store i64 %59, i64* %15, align 8
  br label %30

; <label>:60:                                     ; preds = %30
  %61 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  ret %class.SparseMatrixEZ* %61

originalBBalteredBB:                              ; preds = %originalBB, %3
  %62 = alloca %class.SparseMatrixEZ*, align 8
  %63 = alloca %class.SparseMatrixEZ*, align 8
  %64 = alloca %class.SparseMatrixEZ*, align 8
  %65 = alloca i64, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %62, align 8
  store %class.SparseMatrixEZ* %1, %class.SparseMatrixEZ** %63, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %64, align 8
  %66 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %63, align 8
  %67 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %62, align 8
  %68 = ptrtoint %class.SparseMatrixEZ* %66 to i64
  %69 = ptrtoint %class.SparseMatrixEZ* %67 to i64
  %_ = sub i64 0, %68
  %gen = add i64 %_, %69
  %_1 = sub i64 0, %68
  %gen2 = add i64 %_1, %69
  %_3 = sub i64 %68, %69
  %gen4 = mul i64 %_3, %69
  %_5 = sub i64 %68, %69
  %gen6 = mul i64 %_5, %69
  %_7 = sub i64 %68, %69
  %gen8 = mul i64 %_7, %69
  %70 = sub i64 %68, %69
  %_9 = shl i64 %70, 88
  %_10 = sub i64 %70, 88
  %gen11 = mul i64 %_10, 88
  %_12 = sub i64 %70, 88
  %gen13 = mul i64 %_12, 88
  %_14 = sub i64 %70, 88
  %gen15 = mul i64 %_14, 88
  %_16 = sub i64 0, %70
  %gen17 = add i64 %_16, 88
  %_18 = shl i64 %70, 88
  %_19 = shl i64 %70, 88
  %71 = sdiv exact i64 %70, 88
  store i64 %71, i64* %65, align 8
  br label %originalBB

originalBB20alteredBB:                            ; preds = %originalBB20, %33
  %72 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %12, align 8
  %73 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  %74 = call dereferenceable(88) %class.SparseMatrixEZ* @_ZN14SparseMatrixEZIdEaSERKS0_(%class.SparseMatrixEZ* %73, %class.SparseMatrixEZ* dereferenceable(88) %72)
  %75 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %12, align 8
  %76 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %75, i32 1
  store %class.SparseMatrixEZ* %76, %class.SparseMatrixEZ** %12, align 8
  %77 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  %78 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %77, i32 1
  store %class.SparseMatrixEZ* %78, %class.SparseMatrixEZ** %14, align 8
  br label %originalBB20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2IjEET_S3_RKS0_(%"class.std::vector"*, i32, i32, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"struct.std::__true_type", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %12 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %13 = bitcast %"class.std::vector"* %12 to %"struct.std::_Vector_base"*
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEEC2ERKS0_(%"struct.std::_Vector_base"* %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i32, i32* %6, align 4
  %16 = load i32, i32* %7, align 4
  invoke void @_ZNSt6vectorIjSaIjEE22_M_initialize_dispatchIjEEvT_S3_St11__true_type(%"class.std::vector"* %12, i32 %15, i32 %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %10, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %11, align 4
  %22 = bitcast %"class.std::vector"* %12 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base"* %22)
          to label %23 unwind label %29

; <label>:23:                                     ; preds = %18
  br label %24

; <label>:24:                                     ; preds = %23
  %25 = load i8*, i8** %10, align 8
  %26 = load i32, i32* %11, align 4
  %27 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

; <label>:29:                                     ; preds = %18
  %30 = landingpad { i8*, i32 }
          catch i8* null
  %31 = extractvalue { i8*, i32 } %30, 0
  call void @__clang_call_terminate(i8* %31) #9
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEEC2ERKS0_(%"struct.std::_Vector_base"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.271
  %4 = load i32, i32* @y.272
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base"*, align 8
  %12 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %11, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %12, align 8
  %13 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %11, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %15 = load %"class.std::allocator"*, %"class.std::allocator"** %12, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14, %"class.std::allocator"* dereferenceable(1) %15)
  %16 = load i32, i32* @x.271
  %17 = load i32, i32* @y.272
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"struct.std::_Vector_base"*, align 8
  %25 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %24, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %25, align 8
  %26 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %24, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %26, i32 0, i32 0
  %28 = load %"class.std::allocator"*, %"class.std::allocator"** %25, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %27, %"class.std::allocator"* dereferenceable(1) %28)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE22_M_initialize_dispatchIjEEvT_S3_St11__true_type(%"class.std::vector"*, i32, i32) #0 comdat align 2 {
  %4 = alloca %"struct.std::__true_type", align 1
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %8 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %9 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  %10 = load i32, i32* %6, align 4
  %11 = zext i32 %10 to i64
  %12 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  %13 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %12)
  %14 = call i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64 %11, %"class.std::allocator"* dereferenceable(1) %13)
  %15 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base"* %9, i64 %14)
  %16 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %17 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %18, i32 0, i32 0
  store i32* %15, i32** %19, align 8
  %20 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %21 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = load i32, i32* %6, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %29 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %30, i32 0, i32 2
  store i32* %27, i32** %31, align 8
  %32 = load i32, i32* %6, align 4
  %33 = zext i32 %32 to i64
  call void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector"* %8, i64 %33, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::allocator", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator"* %5, %"class.std::allocator"* dereferenceable(1) %9) #10
  %10 = invoke i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1) %5)
          to label %11 unwind label %14

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %5) #10
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %11
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0)) #12
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %6, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %7, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator"* %5) #10
  br label %20

; <label>:18:                                     ; preds = %11
  %19 = load i64, i64* %3, align 8
  ret i64 %19

; <label>:20:                                     ; preds = %14
  %21 = load i8*, i8** %6, align 8
  %22 = load i32, i32* %7, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = load i32, i32* @x.277
  %5 = load i32, i32* @y.278
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %16 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %17 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %18, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = load i64, i64* %13, align 8
  %22 = load i32*, i32** %14, align 8
  %23 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %24 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %23)
  %25 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %20, i64 %21, i32* dereferenceable(4) %22, %"class.std::allocator"* dereferenceable(1) %24)
  %26 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %27 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %28, i32 0, i32 1
  store i32* %25, i32** %29, align 8
  %30 = load i32, i32* @x.277
  %31 = load i32, i32* @y.278
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.std::vector"*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %38, align 8
  store i64 %1, i64* %39, align 8
  store i32* %2, i32** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %38, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %43 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i64, i64* %39, align 8
  %48 = load i32*, i32** %40, align 8
  %49 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %50 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %49)
  %51 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %46, i64 %47, i32* dereferenceable(4) %48, %"class.std::allocator"* dereferenceable(1) %50)
  %52 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %53 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %54, i32 0, i32 1
  store i32* %51, i32** %55, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  store i64 2305843009213693951, i64* %3, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2ERKS_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.281
  %4 = load i32, i32* @y.282
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator"*, align 8
  %12 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %11, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %12, align 8
  %13 = load %"class.std::allocator"*, %"class.std::allocator"** %11, align 8
  %14 = bitcast %"class.std::allocator"* %13 to %"class.__gnu_cxx::new_allocator"*
  %15 = load %"class.std::allocator"*, %"class.std::allocator"** %12, align 8
  %16 = bitcast %"class.std::allocator"* %15 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %14, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %16) #10
  %17 = load i32, i32* @x.281
  %18 = load i32, i32* @y.282
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator"*, align 8
  %26 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %25, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %26, align 8
  %27 = load %"class.std::allocator"*, %"class.std::allocator"** %25, align 8
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  %29 = load %"class.std::allocator"*, %"class.std::allocator"** %26, align 8
  %30 = bitcast %"class.std::allocator"* %29 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %28, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %30) #10
  br label %originalBB
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #10
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #3 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.285
  %13 = load i32, i32* @y.286
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i64*, i64** %5, align 8
  store i64* %20, i64** %3, align 8
  %21 = load i32, i32* @x.285
  %22 = load i32, i32* @y.286
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:29:                                     ; preds = %2
  %30 = load i64*, i64** %4, align 8
  store i64* %30, i64** %3, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %originalBBpart2
  %32 = load i64*, i64** %3, align 8
  ret i64* %32

originalBBalteredBB:                              ; preds = %originalBB, %11
  %33 = load i64*, i64** %5, align 8
  store i64* %33, i64** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  %12 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %4, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #3 comdat {
  %4 = load i32, i32* @x.295
  %5 = load i32, i32* @y.296
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store i32* %0, i32** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %17 = load i32*, i32** %14, align 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %15, align 4
  %19 = load i64, i64* %13, align 8
  store i64 %19, i64* %16, align 8
  %20 = load i32, i32* @x.295
  %21 = load i32, i32* @y.296
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %50, %originalBBpart2
  %29 = load i64, i64* %16, align 8
  %30 = icmp ugt i64 %29, 0
  br i1 %30, label %31, label %55

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* @x.295
  %33 = load i32, i32* @y.296
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* %15, align 4
  %41 = load i32*, i32** %12, align 8
  store i32 %40, i32* %41, align 4
  %42 = load i32, i32* @x.295
  %43 = load i32, i32* @y.296
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i64, i64* %16, align 8
  %52 = add i64 %51, -1
  store i64 %52, i64* %16, align 8
  %53 = load i32*, i32** %12, align 8
  %54 = getelementptr inbounds i32, i32* %53, i32 1
  store i32* %54, i32** %12, align 8
  br label %28

; <label>:55:                                     ; preds = %28
  %56 = load i32, i32* @x.295
  %57 = load i32, i32* @y.296
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32*, i32** %12, align 8
  %65 = load i32, i32* @x.295
  %66 = load i32, i32* @y.296
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32* %64

originalBBalteredBB:                              ; preds = %originalBB, %3
  %73 = alloca i32*, align 8
  %74 = alloca i64, align 8
  %75 = alloca i32*, align 8
  %76 = alloca i32, align 4
  %77 = alloca i64, align 8
  store i32* %0, i32** %73, align 8
  store i64 %1, i64* %74, align 8
  store i32* %2, i32** %75, align 8
  %78 = load i32*, i32** %75, align 8
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %76, align 4
  %80 = load i64, i64* %74, align 8
  store i64 %80, i64* %77, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %81 = load i32, i32* %15, align 4
  %82 = load i32*, i32** %12, align 8
  store i32 %81, i32* %82, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %83 = load i32*, i32** %12, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector"*, i64, i32) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %8)
  %11 = icmp ugt i64 %9, %10
  br i1 %11, label %12, label %20

; <label>:12:                                     ; preds = %3
  %13 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector"* %8)
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %7, i32 0, i32 0
  store i32* %13, i32** %14, align 8
  %15 = load i64, i64* %5, align 8
  %16 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %8)
  %17 = sub i64 %15, %16
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %7, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  call void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector"* %8, i32* %19, i64 %17, i32* dereferenceable(4) %6)
  br label %65

; <label>:20:                                     ; preds = %3
  %21 = load i64, i64* %5, align 8
  %22 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %8)
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %24, label %48

; <label>:24:                                     ; preds = %20
  %25 = load i32, i32* @x.297
  %26 = load i32, i32* @y.298
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %35, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = load i64, i64* %5, align 8
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  call void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector"* %8, i32* %39)
  %40 = load i32, i32* @x.297
  %41 = load i32, i32* @y.298
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:48:                                     ; preds = %originalBBpart2, %20
  %49 = load i32, i32* @x.297
  %50 = load i32, i32* @y.298
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i32, i32* @x.297
  %58 = load i32, i32* @y.298
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65

; <label>:65:                                     ; preds = %originalBBpart24, %12
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %24
  %66 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %66, i32 0, i32 0
  %68 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %67 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %68, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = load i64, i64* %5, align 8
  %72 = getelementptr inbounds i32, i32* %70, i64 %71
  call void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector"* %8, i32* %72)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector"*, i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  store i32* %1, i32** %20, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32* %3, i32** %8, align 8
  %21 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %389

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load i32*, i32** %28, align 8
  %30 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = ptrtoint i32* %29 to i64
  %36 = ptrtoint i32* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 4
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %152

; <label>:41:                                     ; preds = %24
  %42 = load i32*, i32** %8, align 8
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %9, align 4
  %44 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector"* %21)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %11, i32 0, i32 0
  store i32* %44, i32** %45, align 8
  %46 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %5)
  store i64 %46, i64* %10, align 8
  %47 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %49, i32 0, i32 1
  %51 = load i32*, i32** %50, align 8
  store i32* %51, i32** %12, align 8
  %52 = load i64, i64* %10, align 8
  %53 = load i64, i64* %7, align 8
  %54 = icmp ugt i64 %52, %53
  br i1 %54, label %55, label %114

; <label>:55:                                     ; preds = %41
  %56 = load i32, i32* @x.301
  %57 = load i32, i32* @y.302
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %55, %originalBBalteredBB
  %64 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %65 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load i32*, i32** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = sub i64 0, %69
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  %72 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %73 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %74, i32 0, i32 1
  %76 = load i32*, i32** %75, align 8
  %77 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %78 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %79, i32 0, i32 1
  %81 = load i32*, i32** %80, align 8
  %82 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %83 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %82)
  %84 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %71, i32* %76, i32* %81, %"class.std::allocator"* dereferenceable(1) %83)
  %85 = load i64, i64* %7, align 8
  %86 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %87 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %88, i32 0, i32 1
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 %85
  store i32* %91, i32** %89, align 8
  %92 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %93 = load i32*, i32** %92, align 8
  %94 = load i32*, i32** %12, align 8
  %95 = load i64, i64* %7, align 8
  %96 = sub i64 0, %95
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  %98 = load i32*, i32** %12, align 8
  %99 = call i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32* %93, i32* %97, i32* %98)
  %100 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %101 = load i32*, i32** %100, align 8
  %102 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %103 = load i32*, i32** %102, align 8
  %104 = load i64, i64* %7, align 8
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %101, i32* %105, i32* dereferenceable(4) %9)
  %106 = load i32, i32* @x.301
  %107 = load i32, i32* @y.302
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %151

; <label>:114:                                    ; preds = %41
  %115 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %116 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %117, i32 0, i32 1
  %119 = load i32*, i32** %118, align 8
  %120 = load i64, i64* %7, align 8
  %121 = load i64, i64* %10, align 8
  %122 = sub i64 %120, %121
  %123 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %124 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %123)
  %125 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %119, i64 %122, i32* dereferenceable(4) %9, %"class.std::allocator"* dereferenceable(1) %124)
  %126 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %126, i32 0, i32 0
  %128 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %127 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %128, i32 0, i32 1
  store i32* %125, i32** %129, align 8
  %130 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %131 = load i32*, i32** %130, align 8
  %132 = load i32*, i32** %12, align 8
  %133 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %133, i32 0, i32 0
  %135 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %134 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %135, i32 0, i32 1
  %137 = load i32*, i32** %136, align 8
  %138 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %139 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %138)
  %140 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %131, i32* %132, i32* %137, %"class.std::allocator"* dereferenceable(1) %139)
  %141 = load i64, i64* %10, align 8
  %142 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %142, i32 0, i32 0
  %144 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %143 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %144, i32 0, i32 1
  %146 = load i32*, i32** %145, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 %141
  store i32* %147, i32** %145, align 8
  %148 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %149 = load i32*, i32** %148, align 8
  %150 = load i32*, i32** %12, align 8
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %149, i32* %150, i32* dereferenceable(4) %9)
  br label %151

; <label>:151:                                    ; preds = %114, %originalBBpart2
  br label %372

; <label>:152:                                    ; preds = %24
  %153 = load i32, i32* @x.301
  %154 = load i32, i32* @y.302
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %152, %originalBB19alteredBB
  %161 = load i64, i64* %7, align 8
  %162 = call i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector"* %21, i64 %161, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %162, i64* %13, align 8
  %163 = call i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector"* %21)
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %15, i32 0, i32 0
  store i32* %163, i32** %164, align 8
  %165 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %15)
  store i64 %165, i64* %14, align 8
  %166 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %167 = load i64, i64* %13, align 8
  %168 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base"* %166, i64 %167)
  store i32* %168, i32** %16, align 8
  %169 = load i32*, i32** %16, align 8
  store i32* %169, i32** %17, align 8
  %170 = load i32*, i32** %16, align 8
  %171 = load i64, i64* %14, align 8
  %172 = getelementptr inbounds i32, i32* %170, i64 %171
  %173 = load i64, i64* %7, align 8
  %174 = load i32*, i32** %8, align 8
  %175 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %176 = load i32, i32* @x.301
  %177 = load i32, i32* @y.302
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  %184 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %175)
          to label %185 unwind label %251

; <label>:185:                                    ; preds = %originalBBpart221
  %186 = invoke i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %172, i64 %173, i32* dereferenceable(4) %174, %"class.std::allocator"* dereferenceable(1) %184)
          to label %187 unwind label %251

; <label>:187:                                    ; preds = %185
  store i32* null, i32** %17, align 8
  %188 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %188, i32 0, i32 0
  %190 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %189 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %191 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %190, i32 0, i32 0
  %192 = load i32*, i32** %191, align 8
  %193 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
          to label %194 unwind label %251

; <label>:194:                                    ; preds = %187
  %195 = load i32, i32* @x.301
  %196 = load i32, i32* @y.302
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %194, %originalBB23alteredBB
  %203 = load i32*, i32** %193, align 8
  %204 = load i32*, i32** %16, align 8
  %205 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %206 = load i32, i32* @x.301
  %207 = load i32, i32* @y.302
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  %214 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %205)
          to label %215 unwind label %251

; <label>:215:                                    ; preds = %originalBBpart225
  %216 = load i32, i32* @x.301
  %217 = load i32, i32* @y.302
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %215, %originalBB27alteredBB
  %224 = load i32, i32* @x.301
  %225 = load i32, i32* @y.302
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  %232 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %192, i32* %203, i32* %204, %"class.std::allocator"* dereferenceable(1) %214)
          to label %233 unwind label %251

; <label>:233:                                    ; preds = %originalBBpart229
  store i32* %232, i32** %17, align 8
  %234 = load i64, i64* %7, align 8
  %235 = load i32*, i32** %17, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  store i32* %236, i32** %17, align 8
  %237 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
          to label %238 unwind label %251

; <label>:238:                                    ; preds = %233
  %239 = load i32*, i32** %237, align 8
  %240 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %240, i32 0, i32 0
  %242 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %241 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %242, i32 0, i32 1
  %244 = load i32*, i32** %243, align 8
  %245 = load i32*, i32** %17, align 8
  %246 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %247 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %246)
          to label %248 unwind label %251

; <label>:248:                                    ; preds = %238
  %249 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %239, i32* %244, i32* %245, %"class.std::allocator"* dereferenceable(1) %247)
          to label %250 unwind label %251

; <label>:250:                                    ; preds = %248
  store i32* %249, i32** %17, align 8
  br label %322

; <label>:251:                                    ; preds = %248, %238, %233, %originalBBpart229, %originalBBpart225, %187, %185, %originalBBpart221
  %252 = landingpad { i8*, i32 }
          catch i8* null
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %18, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %19, align 4
  br label %255

; <label>:255:                                    ; preds = %251
  %256 = load i32, i32* @x.301
  %257 = load i32, i32* @y.302
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %255, %originalBB31alteredBB
  %264 = load i8*, i8** %18, align 8
  %265 = call i8* @__cxa_begin_catch(i8* %264) #10
  %266 = load i32*, i32** %17, align 8
  %267 = icmp ne i32* %266, null
  %268 = load i32, i32* @x.301
  %269 = load i32, i32* @y.302
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %267, label %293, label %276

; <label>:276:                                    ; preds = %originalBBpart233
  %277 = load i32*, i32** %16, align 8
  %278 = load i64, i64* %14, align 8
  %279 = getelementptr inbounds i32, i32* %277, i64 %278
  %280 = load i32*, i32** %16, align 8
  %281 = load i64, i64* %14, align 8
  %282 = getelementptr inbounds i32, i32* %280, i64 %281
  %283 = load i64, i64* %7, align 8
  %284 = getelementptr inbounds i32, i32* %282, i64 %283
  %285 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %286 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %285)
          to label %287 unwind label %289

; <label>:287:                                    ; preds = %276
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %279, i32* %284, %"class.std::allocator"* dereferenceable(1) %286)
          to label %288 unwind label %289

; <label>:288:                                    ; preds = %287
  br label %300

; <label>:289:                                    ; preds = %304, %300, %298, %293, %287, %276
  %290 = landingpad { i8*, i32 }
          cleanup
  %291 = extractvalue { i8*, i32 } %290, 0
  store i8* %291, i8** %18, align 8
  %292 = extractvalue { i8*, i32 } %290, 1
  store i32 %292, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %305 unwind label %395

; <label>:293:                                    ; preds = %originalBBpart233
  %294 = load i32*, i32** %16, align 8
  %295 = load i32*, i32** %17, align 8
  %296 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %297 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %296)
          to label %298 unwind label %289

; <label>:298:                                    ; preds = %293
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %294, i32* %295, %"class.std::allocator"* dereferenceable(1) %297)
          to label %299 unwind label %289

; <label>:299:                                    ; preds = %298
  br label %300

; <label>:300:                                    ; preds = %299, %288
  %301 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %302 = load i32*, i32** %16, align 8
  %303 = load i64, i64* %13, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base"* %301, i32* %302, i64 %303)
          to label %304 unwind label %289

; <label>:304:                                    ; preds = %300
  invoke void @__cxa_rethrow() #12
          to label %398 unwind label %289

; <label>:305:                                    ; preds = %289
  %306 = load i32, i32* @x.301
  %307 = load i32, i32* @y.302
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %305, %originalBB35alteredBB
  %314 = load i32, i32* @x.301
  %315 = load i32, i32* @y.302
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %390

; <label>:322:                                    ; preds = %250
  %323 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %323, i32 0, i32 0
  %325 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %324 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %325, i32 0, i32 0
  %327 = load i32*, i32** %326, align 8
  %328 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %329 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %328, i32 0, i32 0
  %330 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %329 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %331 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %330, i32 0, i32 1
  %332 = load i32*, i32** %331, align 8
  %333 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %334 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %333)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %327, i32* %332, %"class.std::allocator"* dereferenceable(1) %334)
  %335 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %336 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %337 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %336, i32 0, i32 0
  %338 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %337 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %338, i32 0, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %342 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %341, i32 0, i32 0
  %343 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %342 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %343, i32 0, i32 2
  %345 = load i32*, i32** %344, align 8
  %346 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %347 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %346, i32 0, i32 0
  %348 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %347 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %349 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %348, i32 0, i32 0
  %350 = load i32*, i32** %349, align 8
  %351 = ptrtoint i32* %345 to i64
  %352 = ptrtoint i32* %350 to i64
  %353 = sub i64 %351, %352
  %354 = sdiv exact i64 %353, 4
  call void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base"* %335, i32* %340, i64 %354)
  %355 = load i32*, i32** %16, align 8
  %356 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %357 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %356, i32 0, i32 0
  %358 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %357 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %358, i32 0, i32 0
  store i32* %355, i32** %359, align 8
  %360 = load i32*, i32** %17, align 8
  %361 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %361, i32 0, i32 0
  %363 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %362 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %364 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %363, i32 0, i32 1
  store i32* %360, i32** %364, align 8
  %365 = load i32*, i32** %16, align 8
  %366 = load i64, i64* %13, align 8
  %367 = getelementptr inbounds i32, i32* %365, i64 %366
  %368 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %369 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %368, i32 0, i32 0
  %370 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %369 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %371 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %370, i32 0, i32 2
  store i32* %367, i32** %371, align 8
  br label %372

; <label>:372:                                    ; preds = %322, %151
  %373 = load i32, i32* @x.301
  %374 = load i32, i32* @y.302
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %372, %originalBB39alteredBB
  %381 = load i32, i32* @x.301
  %382 = load i32, i32* @y.302
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %389

; <label>:389:                                    ; preds = %originalBBpart241, %4
  ret void

; <label>:390:                                    ; preds = %originalBBpart237
  %391 = load i8*, i8** %18, align 8
  %392 = load i32, i32* %19, align 4
  %393 = insertvalue { i8*, i32 } undef, i8* %391, 0
  %394 = insertvalue { i8*, i32 } %393, i32 %392, 1
  resume { i8*, i32 } %394

; <label>:395:                                    ; preds = %289
  %396 = landingpad { i8*, i32 }
          catch i8* null
  %397 = extractvalue { i8*, i32 } %396, 0
  call void @__clang_call_terminate(i8* %397) #9
  unreachable

; <label>:398:                                    ; preds = %304
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %55
  %399 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %400 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %399, i32 0, i32 0
  %401 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %400 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %401, i32 0, i32 1
  %403 = load i32*, i32** %402, align 8
  %404 = load i64, i64* %7, align 8
  %_ = shl i64 0, %404
  %_1 = sub i64 0, 0
  %gen = add i64 %_1, %404
  %_2 = sub i64 0, %404
  %gen3 = mul i64 %_2, %404
  %_4 = sub i64 0, %404
  %gen5 = mul i64 %_4, %404
  %_6 = sub i64 0, %404
  %gen7 = mul i64 %_6, %404
  %_8 = sub i64 0, 0
  %gen9 = add i64 %_8, %404
  %405 = sub i64 0, %404
  %406 = getelementptr inbounds i32, i32* %403, i64 %405
  %407 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %408 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %407, i32 0, i32 0
  %409 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %408 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %410 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %409, i32 0, i32 1
  %411 = load i32*, i32** %410, align 8
  %412 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %413 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %412, i32 0, i32 0
  %414 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %413 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %415 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %414, i32 0, i32 1
  %416 = load i32*, i32** %415, align 8
  %417 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %418 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %417)
  %419 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %406, i32* %411, i32* %416, %"class.std::allocator"* dereferenceable(1) %418)
  %420 = load i64, i64* %7, align 8
  %421 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %422 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %421, i32 0, i32 0
  %423 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %422 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %424 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %423, i32 0, i32 1
  %425 = load i32*, i32** %424, align 8
  %426 = getelementptr inbounds i32, i32* %425, i64 %420
  store i32* %426, i32** %424, align 8
  %427 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %428 = load i32*, i32** %427, align 8
  %429 = load i32*, i32** %12, align 8
  %430 = load i64, i64* %7, align 8
  %_10 = sub i64 0, 0
  %gen11 = add i64 %_10, %430
  %_12 = sub i64 0, 0
  %gen13 = add i64 %_12, %430
  %_14 = sub i64 0, 0
  %gen15 = add i64 %_14, %430
  %_16 = shl i64 0, %430
  %_17 = sub i64 0, %430
  %gen18 = mul i64 %_17, %430
  %431 = sub i64 0, %430
  %432 = getelementptr inbounds i32, i32* %429, i64 %431
  %433 = load i32*, i32** %12, align 8
  %434 = call i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32* %428, i32* %432, i32* %433)
  %435 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %436 = load i32*, i32** %435, align 8
  %437 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %438 = load i32*, i32** %437, align 8
  %439 = load i64, i64* %7, align 8
  %440 = getelementptr inbounds i32, i32* %438, i64 %439
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %436, i32* %440, i32* dereferenceable(4) %9)
  br label %originalBB

originalBB19alteredBB:                            ; preds = %originalBB19, %152
  %441 = load i64, i64* %7, align 8
  %442 = call i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector"* %21, i64 %441, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %442, i64* %13, align 8
  %443 = call i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector"* %21)
  %444 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %15, i32 0, i32 0
  store i32* %443, i32** %444, align 8
  %445 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %15)
  store i64 %445, i64* %14, align 8
  %446 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  %447 = load i64, i64* %13, align 8
  %448 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base"* %446, i64 %447)
  store i32* %448, i32** %16, align 8
  %449 = load i32*, i32** %16, align 8
  store i32* %449, i32** %17, align 8
  %450 = load i32*, i32** %16, align 8
  %451 = load i64, i64* %14, align 8
  %452 = getelementptr inbounds i32, i32* %450, i64 %451
  %453 = load i64, i64* %7, align 8
  %454 = load i32*, i32** %8, align 8
  %455 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %194
  %456 = load i32*, i32** %193, align 8
  %457 = load i32*, i32** %16, align 8
  %458 = bitcast %"class.std::vector"* %21 to %"struct.std::_Vector_base"*
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %215
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %255
  %459 = load i8*, i8** %18, align 8
  %460 = call i8* @__cxa_begin_catch(i8* %459) #10
  %461 = load i32*, i32** %17, align 8
  %462 = icmp ne i32* %461, null
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %305
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %372
  br label %originalBB39
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.303
  %3 = load i32, i32* @y.304
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %11 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %13 = bitcast %"class.std::vector"* %12 to %"struct.std::_Vector_base"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %10, i32** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* @x.303
  %20 = load i32, i32* @y.304
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %27, i32** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %27, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector"*, i32*) #0 comdat align 2 {
  %3 = load i32, i32* @x.305
  %4 = load i32, i32* @y.306
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector"*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  store i32* %1, i32** %12, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %17, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = load i32*, i32** %12, align 8
  %21 = ptrtoint i32* %19 to i64
  %22 = ptrtoint i32* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 4
  store i64 %24, i64* %13, align 8
  %25 = load i64, i64* %13, align 8
  %26 = icmp ne i64 %25, 0
  %27 = load i32, i32* @x.305
  %28 = load i32, i32* @y.306
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %65

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.305
  %37 = load i32, i32* @y.306
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %35, %originalBB10alteredBB
  %44 = load i32*, i32** %12, align 8
  %45 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %46 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %47, i32 0, i32 1
  %49 = load i32*, i32** %48, align 8
  %50 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %51 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %50)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %44, i32* %49, %"class.std::allocator"* dereferenceable(1) %51)
  %52 = load i32*, i32** %12, align 8
  %53 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %53, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %54 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %55, i32 0, i32 1
  store i32* %52, i32** %56, align 8
  %57 = load i32, i32* @x.305
  %58 = load i32, i32* @y.306
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %65

; <label>:65:                                     ; preds = %originalBBpart212, %originalBBpart2
  %66 = load i32, i32* @x.305
  %67 = load i32, i32* @y.306
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %65, %originalBB14alteredBB
  %74 = load i32, i32* @x.305
  %75 = load i32, i32* @y.306
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %82 = alloca %"class.std::vector"*, align 8
  %83 = alloca i32*, align 8
  %84 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %82, align 8
  store i32* %1, i32** %83, align 8
  %85 = load %"class.std::vector"*, %"class.std::vector"** %82, align 8
  %86 = bitcast %"class.std::vector"* %85 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %87 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %88, i32 0, i32 1
  %90 = load i32*, i32** %89, align 8
  %91 = load i32*, i32** %83, align 8
  %92 = ptrtoint i32* %90 to i64
  %93 = ptrtoint i32* %91 to i64
  %_ = sub i64 0, %92
  %gen = add i64 %_, %93
  %_1 = sub i64 %92, %93
  %gen2 = mul i64 %_1, %93
  %_3 = sub i64 %92, %93
  %gen4 = mul i64 %_3, %93
  %_5 = shl i64 %92, %93
  %_6 = sub i64 %92, %93
  %gen7 = mul i64 %_6, %93
  %94 = sub i64 %92, %93
  %_8 = shl i64 %94, 4
  %_9 = shl i64 %94, 4
  %95 = sdiv exact i64 %94, 4
  store i64 %95, i64* %84, align 8
  %96 = load i64, i64* %84, align 8
  %97 = icmp ne i64 %96, 0
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %35
  %98 = load i32*, i32** %12, align 8
  %99 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %99, i32 0, i32 0
  %101 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %100 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %101, i32 0, i32 1
  %103 = load i32*, i32** %102, align 8
  %104 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %105 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %104)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %98, i32* %103, %"class.std::allocator"* dereferenceable(1) %105)
  %106 = load i32*, i32** %12, align 8
  %107 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %108 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %107, i32 0, i32 0
  %109 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %108 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %109, i32 0, i32 1
  store i32* %106, i32** %110, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %65
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %1, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5)
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %8)
  %10 = load i32*, i32** %9, align 8
  %11 = ptrtoint i32* %7 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 4
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %13 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %9, i32* %10, i32* %11, %"class.std::allocator"* dereferenceable(1) %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.311
  %5 = load i32, i32* @y.312
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %15)
  %17 = load i32*, i32** %13, align 8
  %18 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %17)
  %19 = load i32*, i32** %14, align 8
  %20 = call i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %16, i32* %18, i32* %19)
  %21 = load i32, i32* @x.311
  %22 = load i32, i32* @y.312
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %32)
  %34 = load i32*, i32** %30, align 8
  %35 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %34)
  %36 = load i32*, i32** %31, align 8
  %37 = call i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %33, i32* %35, i32* %36)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPjjEvT_S1_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = load i32, i32* @x.315
  %5 = load i32, i32* @y.316
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %15)
  %17 = load i32*, i32** %13, align 8
  %18 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %17)
  %19 = load i32*, i32** %14, align 8
  call void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %16, i32* %18, i32* dereferenceable(4) %19)
  %20 = load i32, i32* @x.315
  %21 = load i32, i32* @y.316
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  store i32* %2, i32** %30, align 8
  %31 = load i32*, i32** %28, align 8
  %32 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %31)
  %33 = load i32*, i32** %29, align 8
  %34 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %33)
  %35 = load i32*, i32** %30, align 8
  call void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %32, i32* %34, i32* dereferenceable(4) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector"* %9)
  %11 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #12
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %9)
  %19 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %9)
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector"* %9)
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %46, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i32, i32* @x.317
  %28 = load i32, i32* @y.318
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i64, i64* %7, align 8
  %36 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector"* %9)
  %37 = icmp ugt i64 %35, %36
  %38 = load i32, i32* @x.317
  %39 = load i32, i32* @y.318
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %48

; <label>:46:                                     ; preds = %originalBBpart2, %17
  %47 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector"* %9)
  br label %66

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = load i32, i32* @x.317
  %50 = load i32, i32* @y.318
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i64, i64* %7, align 8
  %58 = load i32, i32* @x.317
  %59 = load i32, i32* @y.318
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66

; <label>:66:                                     ; preds = %originalBBpart24, %46
  %67 = phi i64 [ %47, %46 ], [ %57, %originalBBpart24 ]
  ret i64 %67

originalBBalteredBB:                              ; preds = %originalBB, %26
  %68 = load i64, i64* %7, align 8
  %69 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector"* %9)
  %70 = icmp ugt i64 %68, %69
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %71 = load i64, i64* %7, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.319
  %3 = load i32, i32* @y.320
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %11 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %13 = bitcast %"class.std::vector"* %12 to %"struct.std::_Vector_base"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %10, i32** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* @x.319
  %20 = load i32, i32* @y.320
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %27, i32** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %27, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %13 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %9, i32* %10, i32* %11, %"class.std::allocator"* dereferenceable(1) %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.323
  %5 = load i32, i32* @y.324
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = load i32*, i32** %13, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %15, i32* %16)
  %17 = load i32, i32* @x.323
  %18 = load i32, i32* @y.324
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %27 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %25, align 8
  store i32* %1, i32** %26, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %27, align 8
  %28 = load i32*, i32** %25, align 8
  %29 = load i32*, i32** %26, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %28, i32* %29)
  br label %originalBB
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32* %7, i32* %8, i32* %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.333
  %5 = load i32, i32* @y.334
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %15)
  %17 = load i32*, i32** %13, align 8
  %18 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %17)
  %19 = load i32*, i32** %14, align 8
  %20 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %19)
  %21 = call i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32* %16, i32* %18, i32* %20)
  %22 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %14, i32* %21)
  %23 = load i32, i32* @x.333
  %24 = load i32, i32* @y.334
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %22

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  store i32* %0, i32** %31, align 8
  store i32* %1, i32** %32, align 8
  store i32* %2, i32** %33, align 8
  %34 = load i32*, i32** %31, align 8
  %35 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %34)
  %36 = load i32*, i32** %32, align 8
  %37 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %36)
  %38 = load i32*, i32** %33, align 8
  %39 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %38)
  %40 = call i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32* %35, i32* %37, i32* %39)
  %41 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %33, i32* %40)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPjET_S1_(i32*) #3 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #3 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %11)
  %13 = call i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  %14 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %6, i32* %13)
  ret i32* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.341
  %5 = load i32, i32* @y.342
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8, align 1
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load i32*, i32** %12, align 8
  %17 = load i32*, i32** %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = call i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32* %16, i32* %17, i32* %18)
  %20 = load i32, i32* @x.341
  %21 = load i32, i32* @y.342
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8, align 1
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  store i32* %2, i32** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load i32*, i32** %28, align 8
  %33 = load i32*, i32** %29, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = call i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32* %32, i32* %33, i32* %34)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #3 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = ptrtoint i32* %8 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %26

; <label>:16:                                     ; preds = %3
  %17 = load i32*, i32** %6, align 8
  %18 = load i64, i64* %7, align 8
  %19 = sub i64 0, %18
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = bitcast i32* %20 to i8*
  %22 = load i32*, i32** %4, align 8
  %23 = bitcast i32* %22 to i8*
  %24 = load i64, i64* %7, align 8
  %25 = mul i64 4, %24
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %21, i8* %23, i64 %25, i32 4, i1 false)
  br label %26

; <label>:26:                                     ; preds = %16, %3
  %27 = load i32, i32* @x.343
  %28 = load i32, i32* @y.344
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32*, i32** %6, align 8
  %36 = load i64, i64* %7, align 8
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* @x.343
  %40 = load i32, i32* @y.344
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %38

originalBBalteredBB:                              ; preds = %originalBB, %26
  %47 = load i32*, i32** %6, align 8
  %48 = load i64, i64* %7, align 8
  %_ = shl i64 0, %48
  %_1 = sub i64 0, %48
  %gen = mul i64 %_1, %48
  %_2 = sub i64 0, %48
  %gen3 = mul i64 %_2, %48
  %_4 = shl i64 0, %48
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #3 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  br label %10

; <label>:10:                                     ; preds = %17, %3
  %11 = load i32*, i32** %4, align 8
  %12 = load i32*, i32** %5, align 8
  %13 = icmp ne i32* %11, %12
  br i1 %13, label %14, label %20

; <label>:14:                                     ; preds = %10
  %15 = load i32, i32* %7, align 4
  %16 = load i32*, i32** %4, align 8
  store i32 %15, i32* %16, align 4
  br label %17

; <label>:17:                                     ; preds = %14
  %18 = load i32*, i32** %4, align 8
  %19 = getelementptr inbounds i32, i32* %18, i32 1
  store i32* %19, i32** %4, align 8
  br label %10

; <label>:20:                                     ; preds = %10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.347
  %3 = load i32, i32* @y.348
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %10, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %12)
  %14 = call i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1) %13)
  %15 = load i32, i32* @x.347
  %16 = load i32, i32* @y.348
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %23, align 8
  %24 = load %"class.std::vector"*, %"class.std::vector"** %23, align 8
  %25 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %26 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %25)
  %27 = call i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1) %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #3 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.349
  %13 = load i32, i32* @y.350
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i64*, i64** %5, align 8
  store i64* %20, i64** %3, align 8
  %21 = load i32, i32* @x.349
  %22 = load i32, i32* @y.350
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:29:                                     ; preds = %2
  %30 = load i64*, i64** %4, align 8
  store i64* %30, i64** %3, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %originalBBpart2
  %32 = load i32, i32* @x.349
  %33 = load i32, i32* @y.350
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i64*, i64** %3, align 8
  %41 = load i32, i32* @x.349
  %42 = load i32, i32* @y.350
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64* %40

originalBBalteredBB:                              ; preds = %originalBB, %11
  %49 = load i64*, i64** %5, align 8
  store i64* %49, i64** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %50 = load i64*, i64** %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"*, i32** dereferenceable(8)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32*, i32*) #3 comdat align 2 {
  %3 = load i32, i32* @x.355
  %4 = load i32, i32* @y.356
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store i32* %0, i32** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32, i32* @x.355
  %14 = load i32, i32* @y.356
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  store i32* %0, i32** %21, align 8
  store i32* %1, i32** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_(i32, i32) #0 comdat {
  %3 = alloca %"struct.std::pair", align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  call void @_ZNSt4pairIjjEC2ERKjS2_(%"struct.std::pair"* %3, i32* dereferenceable(4) %4, i32* dereferenceable(4) %5)
  %6 = bitcast %"struct.std::pair"* %3 to i64*
  %7 = load i64, i64* %6, align 4
  ret i64 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIjjEC2ERKjS2_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #3 comdat align 2 {
  %4 = load i32, i32* @x.359
  %5 = load i32, i32* @y.360
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::pair"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  %16 = bitcast %"struct.std::pair"* %15 to %"class.std::__pair_base"*
  %17 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %15, i32 0, i32 0
  %18 = load i32*, i32** %13, align 8
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %15, i32 0, i32 1
  %21 = load i32*, i32** %14, align 8
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = load i32, i32* @x.359
  %24 = load i32, i32* @y.360
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca %"struct.std::pair"*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %31, align 8
  store i32* %1, i32** %32, align 8
  store i32* %2, i32** %33, align 8
  %34 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %35 = bitcast %"struct.std::pair"* %34 to %"class.std::__pair_base"*
  %36 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %34, i32 0, i32 0
  %37 = load i32*, i32** %32, align 8
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %36, align 4
  %39 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %34, i32 0, i32 1
  %40 = load i32*, i32** %33, align 8
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %39, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIfEEC2ERKS2_(%class.TableBase.13*, %class.TableBase.13* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase.13*, align 8
  %4 = alloca %class.TableBase.13*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.TableBase.13* %0, %class.TableBase.13** %3, align 8
  store %class.TableBase.13* %1, %class.TableBase.13** %4, align 8
  %7 = load %class.TableBase.13*, %class.TableBase.13** %3, align 8
  %8 = bitcast %class.TableBase.13* %7 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %8)
  %9 = bitcast %class.TableBase.13* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E14SparseMatrixEZIfEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %7, i32 0, i32 1
  store %class.SparseMatrixEZ.14* null, %class.SparseMatrixEZ.14** %10, align 8
  %11 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %7, i32 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %7, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %12)
          to label %13 unwind label %26

; <label>:13:                                     ; preds = %2
  %14 = load %class.TableBase.13*, %class.TableBase.13** %4, align 8
  %15 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %14, i32 0, i32 3
  invoke void @_ZN9TableBaseILi2E14SparseMatrixEZIfEE6reinitERK12TableIndicesILi2EE(%class.TableBase.13* %7, %class.TableIndices* dereferenceable(8) %15)
          to label %16 unwind label %26

; <label>:16:                                     ; preds = %13
  %17 = load %class.TableBase.13*, %class.TableBase.13** %4, align 8
  %18 = invoke i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv(%class.TableBase.13* %17)
          to label %19 unwind label %26

; <label>:19:                                     ; preds = %16
  %20 = icmp ne i32 %18, 0
  br i1 %20, label %21, label %47

; <label>:21:                                     ; preds = %19
  %22 = load %class.TableBase.13*, %class.TableBase.13** %4, align 8
  %23 = invoke %class.SparseMatrixEZ.14* @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE4dataEv(%class.TableBase.13* %22)
          to label %24 unwind label %26

; <label>:24:                                     ; preds = %21
  invoke void @_ZN9TableBaseILi2E14SparseMatrixEZIfEE4fillIS1_EEvPKT_(%class.TableBase.13* %7, %class.SparseMatrixEZ.14* %23)
          to label %25 unwind label %26

; <label>:25:                                     ; preds = %24
  br label %47

; <label>:26:                                     ; preds = %24, %21, %16, %13, %2
  %27 = load i32, i32* @x.361
  %28 = load i32, i32* @y.362
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %5, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %6, align 4
  %38 = bitcast %class.TableBase.13* %7 to %class.Subscriptor*
  %39 = load i32, i32* @x.361
  %40 = load i32, i32* @y.362
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %38)
          to label %48 unwind label %54

; <label>:47:                                     ; preds = %25, %19
  ret void

; <label>:48:                                     ; preds = %originalBBpart2
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i8*, i8** %5, align 8
  %51 = load i32, i32* %6, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53

; <label>:54:                                     ; preds = %originalBBpart2
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %26
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %5, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %6, align 4
  %60 = bitcast %class.TableBase.13* %7 to %class.Subscriptor*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIfEED2Ev(%class.Table.12*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table.12*, align 8
  store %class.Table.12* %0, %class.Table.12** %2, align 8
  %3 = load %class.Table.12*, %class.Table.12** %2, align 8
  %4 = bitcast %class.Table.12* %3 to %class.TableBase.13*
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIfEED2Ev(%class.TableBase.13* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E14SparseMatrixEZIfEED0Ev(%class.Table.12*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Table.12*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.Table.12* %0, %class.Table.12** %2, align 8
  %5 = load %class.Table.12*, %class.Table.12** %2, align 8
  invoke void @_ZN5TableILi2E14SparseMatrixEZIfEED2Ev(%class.Table.12* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.Table.12* %5 to i8*
  call void @_ZdlPv(i8* %7) #11
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %class.Table.12* %5 to i8*
  call void @_ZdlPv(i8* %12) #11
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIfEE6reinitERK12TableIndicesILi2EE(%class.TableBase.13*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase.13*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %class.TableIndices, align 4
  store %class.TableBase.13* %0, %class.TableBase.13** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %9 = load %class.TableBase.13*, %class.TableBase.13** %3, align 8
  %10 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %11 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 3
  %12 = bitcast %class.TableIndices* %11 to i8*
  %13 = bitcast %class.TableIndices* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv(%class.TableBase.13* %9)
  store i32 %14, i32* %5, align 4
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %104

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 1
  %19 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %18, align 8
  %20 = icmp ne %class.SparseMatrixEZ.14* %19, null
  br i1 %20, label %21, label %98

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @x.367
  %23 = load i32, i32* @y.368
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 1
  %31 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %30, align 8
  %32 = icmp eq %class.SparseMatrixEZ.14* %31, null
  %33 = load i32, i32* @x.367
  %34 = load i32, i32* @y.368
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %86, label %41

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = bitcast %class.SparseMatrixEZ.14* %31 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 -8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %31, i64 %45
  %47 = icmp eq %class.SparseMatrixEZ.14* %31, %46
  br i1 %47, label %85, label %48

; <label>:48:                                     ; preds = %originalBBpart28, %41
  %49 = phi %class.SparseMatrixEZ.14* [ %46, %41 ], [ %58, %originalBBpart28 ]
  %50 = load i32, i32* @x.367
  %51 = load i32, i32* @y.368
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %58 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %49, i64 -1
  %59 = load i32, i32* @x.367
  %60 = load i32, i32* @y.368
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %58)
          to label %67 unwind label %87

; <label>:67:                                     ; preds = %originalBBpart24
  %68 = load i32, i32* @x.367
  %69 = load i32, i32* @y.368
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %67, %originalBB6alteredBB
  %76 = icmp eq %class.SparseMatrixEZ.14* %58, %31
  %77 = load i32, i32* @x.367
  %78 = load i32, i32* @y.368
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %76, label %85, label %48

; <label>:85:                                     ; preds = %originalBBpart28, %41
  call void @_ZdaPv(i8* %43) #11
  br label %86

; <label>:86:                                     ; preds = %85, %originalBBpart2
  br label %98

; <label>:87:                                     ; preds = %originalBBpart24
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %6, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %7, align 4
  %91 = icmp eq %class.SparseMatrixEZ.14* %31, %58
  br i1 %91, label %97, label %92

; <label>:92:                                     ; preds = %95, %87
  %93 = phi %class.SparseMatrixEZ.14* [ %58, %87 ], [ %94, %95 ]
  %94 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %93, i64 -1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %94)
          to label %95 unwind label %268

; <label>:95:                                     ; preds = %92
  %96 = icmp eq %class.SparseMatrixEZ.14* %94, %31
  br i1 %96, label %97, label %92

; <label>:97:                                     ; preds = %95, %87
  call void @_ZdaPv(i8* %43) #11
  br label %263

; <label>:98:                                     ; preds = %86, %17
  %99 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 1
  store %class.SparseMatrixEZ.14* null, %class.SparseMatrixEZ.14** %99, align 8
  %100 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 2
  store i32 0, i32* %100, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %8)
  %101 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 3
  %102 = bitcast %class.TableIndices* %101 to i8*
  %103 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 8, i32 4, i1 false)
  br label %262

; <label>:104:                                    ; preds = %2
  %105 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = load i32, i32* %5, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %109, label %261

; <label>:109:                                    ; preds = %104
  %110 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 1
  %111 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %110, align 8
  %112 = icmp ne %class.SparseMatrixEZ.14* %111, null
  br i1 %112, label %113, label %174

; <label>:113:                                    ; preds = %109
  %114 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 1
  %115 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %114, align 8
  %116 = icmp eq %class.SparseMatrixEZ.14* %115, null
  br i1 %116, label %130, label %117

; <label>:117:                                    ; preds = %113
  %118 = bitcast %class.SparseMatrixEZ.14* %115 to i8*
  %119 = getelementptr inbounds i8, i8* %118, i64 -8
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %115, i64 %121
  %123 = icmp eq %class.SparseMatrixEZ.14* %115, %122
  br i1 %123, label %129, label %124

; <label>:124:                                    ; preds = %127, %117
  %125 = phi %class.SparseMatrixEZ.14* [ %122, %117 ], [ %126, %127 ]
  %126 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %125, i64 -1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %126)
          to label %127 unwind label %147

; <label>:127:                                    ; preds = %124
  %128 = icmp eq %class.SparseMatrixEZ.14* %126, %115
  br i1 %128, label %129, label %124

; <label>:129:                                    ; preds = %127, %117
  call void @_ZdaPv(i8* %119) #11
  br label %130

; <label>:130:                                    ; preds = %129, %113
  %131 = load i32, i32* @x.367
  %132 = load i32, i32* @y.368
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %130, %originalBB10alteredBB
  %139 = load i32, i32* @x.367
  %140 = load i32, i32* @y.368
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %174

; <label>:147:                                    ; preds = %124
  %148 = landingpad { i8*, i32 }
          cleanup
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %6, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %7, align 4
  %151 = icmp eq %class.SparseMatrixEZ.14* %115, %126
  br i1 %151, label %157, label %152

; <label>:152:                                    ; preds = %155, %147
  %153 = phi %class.SparseMatrixEZ.14* [ %126, %147 ], [ %154, %155 ]
  %154 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %153, i64 -1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %154)
          to label %155 unwind label %268

; <label>:155:                                    ; preds = %152
  %156 = icmp eq %class.SparseMatrixEZ.14* %154, %115
  br i1 %156, label %157, label %152

; <label>:157:                                    ; preds = %155, %147
  %158 = load i32, i32* @x.367
  %159 = load i32, i32* @y.368
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %157, %originalBB14alteredBB
  call void @_ZdaPv(i8* %119) #11
  %166 = load i32, i32* @x.367
  %167 = load i32, i32* @y.368
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %263

; <label>:174:                                    ; preds = %originalBBpart212, %109
  %175 = load i32, i32* %5, align 4
  %176 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 2
  store i32 %175, i32* %176, align 8
  %177 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 2
  %178 = load i32, i32* %177, align 8
  %179 = zext i32 %178 to i64
  %180 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %179, i64 88)
  %181 = extractvalue { i64, i1 } %180, 1
  %182 = extractvalue { i64, i1 } %180, 0
  %183 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %182, i64 8)
  %184 = extractvalue { i64, i1 } %183, 1
  %185 = or i1 %181, %184
  %186 = extractvalue { i64, i1 } %183, 0
  %187 = select i1 %185, i64 -1, i64 %186
  %188 = call i8* @_Znam(i64 %187) #13
  %189 = bitcast i8* %188 to i64*
  store i64 %179, i64* %189, align 16
  %190 = getelementptr inbounds i8, i8* %188, i64 8
  %191 = bitcast i8* %190 to %class.SparseMatrixEZ.14*
  %192 = icmp eq i64 %179, 0
  br i1 %192, label %216, label %193

; <label>:193:                                    ; preds = %174
  %194 = load i32, i32* @x.367
  %195 = load i32, i32* @y.368
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %193, %originalBB18alteredBB
  %202 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %191, i64 %179
  %203 = load i32, i32* @x.367
  %204 = load i32, i32* @y.368
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %211

; <label>:211:                                    ; preds = %213, %originalBBpart220
  %212 = phi %class.SparseMatrixEZ.14* [ %191, %originalBBpart220 ], [ %214, %213 ]
  invoke void @_ZN14SparseMatrixEZIfEC1Ev(%class.SparseMatrixEZ.14* %212)
          to label %213 unwind label %218

; <label>:213:                                    ; preds = %211
  %214 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %212, i64 1
  %215 = icmp eq %class.SparseMatrixEZ.14* %214, %202
  br i1 %215, label %216, label %211

; <label>:216:                                    ; preds = %213, %174
  %217 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 1
  store %class.SparseMatrixEZ.14* %191, %class.SparseMatrixEZ.14** %217, align 8
  br label %261

; <label>:218:                                    ; preds = %211
  %219 = load i32, i32* @x.367
  %220 = load i32, i32* @y.368
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %218, %originalBB22alteredBB
  %227 = landingpad { i8*, i32 }
          cleanup
  %228 = extractvalue { i8*, i32 } %227, 0
  store i8* %228, i8** %6, align 8
  %229 = extractvalue { i8*, i32 } %227, 1
  store i32 %229, i32* %7, align 4
  %230 = icmp eq %class.SparseMatrixEZ.14* %191, %212
  %231 = load i32, i32* @x.367
  %232 = load i32, i32* @y.368
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %230, label %244, label %239

; <label>:239:                                    ; preds = %242, %originalBBpart224
  %240 = phi %class.SparseMatrixEZ.14* [ %212, %originalBBpart224 ], [ %241, %242 ]
  %241 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %240, i64 -1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %241)
          to label %242 unwind label %268

; <label>:242:                                    ; preds = %239
  %243 = icmp eq %class.SparseMatrixEZ.14* %241, %191
  br i1 %243, label %244, label %239

; <label>:244:                                    ; preds = %242, %originalBBpart224
  %245 = load i32, i32* @x.367
  %246 = load i32, i32* @y.368
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %244, %originalBB26alteredBB
  call void @_ZdaPv(i8* %188) #11
  %253 = load i32, i32* @x.367
  %254 = load i32, i32* @y.368
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %263

; <label>:261:                                    ; preds = %216, %104
  call void @_ZN9TableBaseILi2E14SparseMatrixEZIfEE12reset_valuesEv(%class.TableBase.13* %9)
  br label %262

; <label>:262:                                    ; preds = %261, %98
  ret void

; <label>:263:                                    ; preds = %originalBBpart228, %originalBBpart216, %97
  %264 = load i8*, i8** %6, align 8
  %265 = load i32, i32* %7, align 4
  %266 = insertvalue { i8*, i32 } undef, i8* %264, 0
  %267 = insertvalue { i8*, i32 } %266, i32 %265, 1
  resume { i8*, i32 } %267

; <label>:268:                                    ; preds = %239, %152, %92
  %269 = landingpad { i8*, i32 }
          catch i8* null
  %270 = extractvalue { i8*, i32 } %269, 0
  call void @__clang_call_terminate(i8* %270) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %271 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %9, i32 0, i32 1
  %272 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %271, align 8
  %273 = icmp eq %class.SparseMatrixEZ.14* %272, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %274 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %49, i64 -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %67
  %275 = icmp eq %class.SparseMatrixEZ.14* %58, %31
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %130
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %157
  call void @_ZdaPv(i8* %119) #11
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %193
  %276 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %191, i64 %179
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %218
  %277 = landingpad { i8*, i32 }
          cleanup
  %278 = extractvalue { i8*, i32 } %277, 0
  store i8* %278, i8** %6, align 8
  %279 = extractvalue { i8*, i32 } %277, 1
  store i32 %279, i32* %7, align 4
  %280 = icmp eq %class.SparseMatrixEZ.14* %191, %212
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %244
  call void @_ZdaPv(i8* %188) #11
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv(%class.TableBase.13*) #3 comdat align 2 {
  %2 = alloca %class.TableBase.13*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase.13* %0, %class.TableBase.13** %2, align 8
  %5 = load %class.TableBase.13*, %class.TableBase.13** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %16, %1
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %19

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %5, i32 0, i32 3
  %11 = bitcast %class.TableIndices* %10 to %class.TableIndicesBase*
  %12 = load i32, i32* %4, align 4
  %13 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %11, i32 %12)
  %14 = load i32, i32* %3, align 4
  %15 = mul i32 %14, %13
  store i32 %15, i32* %3, align 4
  br label %16

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %4, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %6

; <label>:19:                                     ; preds = %6
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIfEE4fillIS1_EEvPKT_(%class.TableBase.13*, %class.SparseMatrixEZ.14*) #0 comdat align 2 {
  %3 = alloca %class.TableBase.13*, align 8
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.TableBase.13* %0, %class.TableBase.13** %3, align 8
  store %class.SparseMatrixEZ.14* %1, %class.SparseMatrixEZ.14** %4, align 8
  %5 = load %class.TableBase.13*, %class.TableBase.13** %3, align 8
  %6 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %7 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %8 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv(%class.TableBase.13* %5)
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %7, i64 %9
  %11 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %5, i32 0, i32 1
  %12 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %11, align 8
  %13 = call %class.SparseMatrixEZ.14* @_ZSt4copyIPK14SparseMatrixEZIfEPS1_ET0_T_S6_S5_(%class.SparseMatrixEZ.14* %6, %class.SparseMatrixEZ.14* %10, %class.SparseMatrixEZ.14* %12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE4dataEv(%class.TableBase.13*) #3 comdat align 2 {
  %2 = load i32, i32* @x.373
  %3 = load i32, i32* @y.374
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.13*, align 8
  store %class.TableBase.13* %0, %class.TableBase.13** %10, align 8
  %11 = load %class.TableBase.13*, %class.TableBase.13** %10, align 8
  %12 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %11, i32 0, i32 1
  %13 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %12, align 8
  %14 = load i32, i32* @x.373
  %15 = load i32, i32* @y.374
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ.14* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.TableBase.13*, align 8
  store %class.TableBase.13* %0, %class.TableBase.13** %22, align 8
  %23 = load %class.TableBase.13*, %class.TableBase.13** %22, align 8
  %24 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %23, i32 0, i32 1
  %25 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIfEED2Ev(%class.TableBase.13*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase.13*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase.13* %0, %class.TableBase.13** %2, align 8
  %5 = load %class.TableBase.13*, %class.TableBase.13** %2, align 8
  %6 = bitcast %class.TableBase.13* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E14SparseMatrixEZIfEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %5, i32 0, i32 1
  %8 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %7, align 8
  %9 = icmp ne %class.SparseMatrixEZ.14* %8, null
  br i1 %9, label %10, label %56

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %5, i32 0, i32 1
  %12 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %11, align 8
  %13 = icmp eq %class.SparseMatrixEZ.14* %12, null
  br i1 %13, label %27, label %14

; <label>:14:                                     ; preds = %10
  %15 = bitcast %class.SparseMatrixEZ.14* %12 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 -8
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %12, i64 %18
  %20 = icmp eq %class.SparseMatrixEZ.14* %12, %19
  br i1 %20, label %26, label %21

; <label>:21:                                     ; preds = %24, %14
  %22 = phi %class.SparseMatrixEZ.14* [ %19, %14 ], [ %23, %24 ]
  %23 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %22, i64 -1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %23)
          to label %24 unwind label %28

; <label>:24:                                     ; preds = %21
  %25 = icmp eq %class.SparseMatrixEZ.14* %23, %12
  br i1 %25, label %26, label %21

; <label>:26:                                     ; preds = %24, %14
  call void @_ZdaPv(i8* %16) #11
  br label %27

; <label>:27:                                     ; preds = %26, %10
  br label %56

; <label>:28:                                     ; preds = %21
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %3, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %4, align 4
  %32 = icmp eq %class.SparseMatrixEZ.14* %12, %23
  br i1 %32, label %54, label %33

; <label>:33:                                     ; preds = %originalBBpart2, %28
  %34 = phi %class.SparseMatrixEZ.14* [ %23, %28 ], [ %35, %originalBBpart2 ]
  %35 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %34, i64 -1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %35)
          to label %36 unwind label %80

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* @x.375
  %38 = load i32, i32* @y.376
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %36, %originalBBalteredBB
  %45 = icmp eq %class.SparseMatrixEZ.14* %35, %12
  %46 = load i32, i32* @x.375
  %47 = load i32, i32* @y.376
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %45, label %54, label %33

; <label>:54:                                     ; preds = %originalBBpart2, %28
  call void @_ZdaPv(i8* %16) #11
  %55 = bitcast %class.TableBase.13* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %55)
          to label %74 unwind label %80

; <label>:56:                                     ; preds = %27, %1
  %57 = load i32, i32* @x.375
  %58 = load i32, i32* @y.376
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %56, %originalBB1alteredBB
  %65 = bitcast %class.TableBase.13* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %65)
  %66 = load i32, i32* @x.375
  %67 = load i32, i32* @y.376
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:74:                                     ; preds = %54
  br label %75

; <label>:75:                                     ; preds = %74
  %76 = load i8*, i8** %3, align 8
  %77 = load i32, i32* %4, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  resume { i8*, i32 } %79

; <label>:80:                                     ; preds = %54, %33
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %36
  %83 = icmp eq %class.SparseMatrixEZ.14* %35, %12
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %56
  %84 = bitcast %class.TableBase.13* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %84)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIfEED0Ev(%class.TableBase.13*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.377
  %3 = load i32, i32* @y.378
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.13*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TableBase.13* %0, %class.TableBase.13** %10, align 8
  %13 = load %class.TableBase.13*, %class.TableBase.13** %10, align 8
  %14 = load i32, i32* @x.377
  %15 = load i32, i32* @y.378
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9TableBaseILi2E14SparseMatrixEZIfEED2Ev(%class.TableBase.13* %13)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = load i32, i32* @x.377
  %24 = load i32, i32* @y.378
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = bitcast %class.TableBase.13* %13 to i8*
  call void @_ZdlPv(i8* %31) #11
  %32 = load i32, i32* @x.377
  %33 = load i32, i32* @y.378
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %11, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %12, align 4
  %44 = bitcast %class.TableBase.13* %13 to i8*
  call void @_ZdlPv(i8* %44) #11
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %11, align 8
  %47 = load i32, i32* %12, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %1
  %50 = alloca %class.TableBase.13*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %class.TableBase.13* %0, %class.TableBase.13** %50, align 8
  %53 = load %class.TableBase.13*, %class.TableBase.13** %50, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %54 = bitcast %class.TableBase.13* %13 to i8*
  call void @_ZdlPv(i8* %54) #11
  br label %originalBB1
}

declare void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14*) unnamed_addr #1

declare void @_ZN14SparseMatrixEZIfEC1Ev(%class.SparseMatrixEZ.14*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIfEE12reset_valuesEv(%class.TableBase.13*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase.13*, align 8
  %3 = alloca %class.SparseMatrixEZ.14, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %class.TableBase.13* %0, %class.TableBase.13** %2, align 8
  %6 = load %class.TableBase.13*, %class.TableBase.13** %2, align 8
  %7 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv(%class.TableBase.13* %6)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %52

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.379
  %11 = load i32, i32* @y.380
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %6, i32 0, i32 1
  %19 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %18, align 8
  %20 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv(%class.TableBase.13* %6)
  call void @_ZN14SparseMatrixEZIfEC1Ev(%class.SparseMatrixEZ.14* %3)
  %21 = load i32, i32* @x.379
  %22 = load i32, i32* @y.380
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %29 = invoke %class.SparseMatrixEZ.14* @_ZSt6fill_nIP14SparseMatrixEZIfEjS1_ET_S3_T0_RKT1_(%class.SparseMatrixEZ.14* %19, i32 %20, %class.SparseMatrixEZ.14* dereferenceable(88) %3)
          to label %30 unwind label %31

; <label>:30:                                     ; preds = %originalBBpart2
  call void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %3)
  br label %52

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.379
  %33 = load i32, i32* @y.380
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %4, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %5, align 4
  %43 = load i32, i32* @x.379
  %44 = load i32, i32* @y.380
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN14SparseMatrixEZIfED1Ev(%class.SparseMatrixEZ.14* %3)
          to label %51 unwind label %58

; <label>:51:                                     ; preds = %originalBBpart24
  br label %53

; <label>:52:                                     ; preds = %30, %1
  ret void

; <label>:53:                                     ; preds = %51
  %54 = load i8*, i8** %4, align 8
  %55 = load i32, i32* %5, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* @x.379
  %60 = load i32, i32* @y.380
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  call void @__clang_call_terminate(i8* %68) #9
  %69 = load i32, i32* @x.379
  %70 = load i32, i32* @y.380
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %9
  %77 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %6, i32 0, i32 1
  %78 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %77, align 8
  %79 = call i32 @_ZNK9TableBaseILi2E14SparseMatrixEZIfEE10n_elementsEv(%class.TableBase.13* %6)
  call void @_ZN14SparseMatrixEZIfEC1Ev(%class.SparseMatrixEZ.14* %3)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %4, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %5, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  %83 = landingpad { i8*, i32 }
          catch i8* null
  %84 = extractvalue { i8*, i32 } %83, 0
  call void @__clang_call_terminate(i8* %84) #9
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt6fill_nIP14SparseMatrixEZIfEjS1_ET_S3_T0_RKT1_(%class.SparseMatrixEZ.14*, i32, %class.SparseMatrixEZ.14* dereferenceable(88)) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %6, align 8
  %7 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %8 = call %class.SparseMatrixEZ.14* @_ZSt12__niter_baseIP14SparseMatrixEZIfEET_S3_(%class.SparseMatrixEZ.14* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %11 = call %class.SparseMatrixEZ.14* @_ZSt10__fill_n_aIP14SparseMatrixEZIfEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.SparseMatrixEZ.14* %8, i32 %9, %class.SparseMatrixEZ.14* dereferenceable(88) %10)
  %12 = call %class.SparseMatrixEZ.14* @_ZSt12__niter_wrapIP14SparseMatrixEZIfEET_RKS3_S3_(%class.SparseMatrixEZ.14** dereferenceable(8) %4, %class.SparseMatrixEZ.14* %11)
  ret %class.SparseMatrixEZ.14* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt12__niter_wrapIP14SparseMatrixEZIfEET_RKS3_S3_(%class.SparseMatrixEZ.14** dereferenceable(8), %class.SparseMatrixEZ.14*) #3 comdat {
  %3 = alloca %class.SparseMatrixEZ.14**, align 8
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14** %0, %class.SparseMatrixEZ.14*** %3, align 8
  store %class.SparseMatrixEZ.14* %1, %class.SparseMatrixEZ.14** %4, align 8
  %5 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  ret %class.SparseMatrixEZ.14* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt10__fill_n_aIP14SparseMatrixEZIfEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.SparseMatrixEZ.14*, i32, %class.SparseMatrixEZ.14* dereferenceable(88)) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.SparseMatrixEZ.14*, align 8
  %7 = alloca i32, align 4
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %6, align 8
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* %7, align 4
  br label %9

; <label>:9:                                      ; preds = %16, %3
  %10 = load i32, i32* %7, align 4
  %11 = icmp ugt i32 %10, 0
  br i1 %11, label %12, label %21

; <label>:12:                                     ; preds = %9
  %13 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %14 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %15 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN14SparseMatrixEZIfEaSERKS0_(%class.SparseMatrixEZ.14* %14, %class.SparseMatrixEZ.14* dereferenceable(88) %13)
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* %7, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %7, align 4
  %19 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %20 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %19, i32 1
  store %class.SparseMatrixEZ.14* %20, %class.SparseMatrixEZ.14** %4, align 8
  br label %9

; <label>:21:                                     ; preds = %9
  %22 = load i32, i32* @x.385
  %23 = load i32, i32* @y.386
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %31 = load i32, i32* @x.385
  %32 = load i32, i32* @y.386
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ.14* %30

originalBBalteredBB:                              ; preds = %originalBB, %21
  %39 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt12__niter_baseIP14SparseMatrixEZIfEET_S3_(%class.SparseMatrixEZ.14*) #3 comdat {
  %2 = load i32, i32* @x.387
  %3 = load i32, i32* @y.388
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %10, align 8
  %11 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %10, align 8
  %12 = load i32, i32* @x.387
  %13 = load i32, i32* @y.388
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrixEZ.14* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %20, align 8
  %21 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt4copyIPK14SparseMatrixEZIfEPS1_ET0_T_S6_S5_(%class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  %5 = alloca %class.SparseMatrixEZ.14*, align 8
  %6 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %4, align 8
  store %class.SparseMatrixEZ.14* %1, %class.SparseMatrixEZ.14** %5, align 8
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %6, align 8
  %7 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %8 = call %class.SparseMatrixEZ.14* @_ZSt12__miter_baseIPK14SparseMatrixEZIfEET_S4_(%class.SparseMatrixEZ.14* %7)
  %9 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %5, align 8
  %10 = call %class.SparseMatrixEZ.14* @_ZSt12__miter_baseIPK14SparseMatrixEZIfEET_S4_(%class.SparseMatrixEZ.14* %9)
  %11 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %12 = call %class.SparseMatrixEZ.14* @_ZSt14__copy_move_a2ILb0EPK14SparseMatrixEZIfEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ.14* %8, %class.SparseMatrixEZ.14* %10, %class.SparseMatrixEZ.14* %11)
  ret %class.SparseMatrixEZ.14* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt14__copy_move_a2ILb0EPK14SparseMatrixEZIfEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  %5 = alloca %class.SparseMatrixEZ.14*, align 8
  %6 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %4, align 8
  store %class.SparseMatrixEZ.14* %1, %class.SparseMatrixEZ.14** %5, align 8
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %6, align 8
  %7 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %8 = call %class.SparseMatrixEZ.14* @_ZSt12__niter_baseIPK14SparseMatrixEZIfEET_S4_(%class.SparseMatrixEZ.14* %7)
  %9 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %5, align 8
  %10 = call %class.SparseMatrixEZ.14* @_ZSt12__niter_baseIPK14SparseMatrixEZIfEET_S4_(%class.SparseMatrixEZ.14* %9)
  %11 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %12 = call %class.SparseMatrixEZ.14* @_ZSt12__niter_baseIP14SparseMatrixEZIfEET_S3_(%class.SparseMatrixEZ.14* %11)
  %13 = call %class.SparseMatrixEZ.14* @_ZSt13__copy_move_aILb0EPK14SparseMatrixEZIfEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ.14* %8, %class.SparseMatrixEZ.14* %10, %class.SparseMatrixEZ.14* %12)
  %14 = call %class.SparseMatrixEZ.14* @_ZSt12__niter_wrapIP14SparseMatrixEZIfEET_RKS3_S3_(%class.SparseMatrixEZ.14** dereferenceable(8) %6, %class.SparseMatrixEZ.14* %13)
  ret %class.SparseMatrixEZ.14* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt12__miter_baseIPK14SparseMatrixEZIfEET_S4_(%class.SparseMatrixEZ.14*) #3 comdat {
  %2 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %2, align 8
  %3 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %2, align 8
  ret %class.SparseMatrixEZ.14* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt13__copy_move_aILb0EPK14SparseMatrixEZIfEPS1_ET1_T0_S6_S5_(%class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*) #0 comdat {
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  %5 = alloca %class.SparseMatrixEZ.14*, align 8
  %6 = alloca %class.SparseMatrixEZ.14*, align 8
  %7 = alloca i8, align 1
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %4, align 8
  store %class.SparseMatrixEZ.14* %1, %class.SparseMatrixEZ.14** %5, align 8
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %9 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %5, align 8
  %10 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %11 = call %class.SparseMatrixEZ.14* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK14SparseMatrixEZIfEPS4_EET0_T_S9_S8_(%class.SparseMatrixEZ.14* %8, %class.SparseMatrixEZ.14* %9, %class.SparseMatrixEZ.14* %10)
  ret %class.SparseMatrixEZ.14* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZSt12__niter_baseIPK14SparseMatrixEZIfEET_S4_(%class.SparseMatrixEZ.14*) #3 comdat {
  %2 = alloca %class.SparseMatrixEZ.14*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %2, align 8
  %3 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %2, align 8
  ret %class.SparseMatrixEZ.14* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.SparseMatrixEZ.14* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK14SparseMatrixEZIfEPS4_EET0_T_S9_S8_(%class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14*) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrixEZ.14*, align 8
  %5 = alloca %class.SparseMatrixEZ.14*, align 8
  %6 = alloca %class.SparseMatrixEZ.14*, align 8
  %7 = alloca i64, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %4, align 8
  store %class.SparseMatrixEZ.14* %1, %class.SparseMatrixEZ.14** %5, align 8
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %6, align 8
  %8 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %5, align 8
  %9 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %10 = ptrtoint %class.SparseMatrixEZ.14* %8 to i64
  %11 = ptrtoint %class.SparseMatrixEZ.14* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 88
  store i64 %13, i64* %7, align 8
  br label %14

; <label>:14:                                     ; preds = %25, %3
  %15 = load i64, i64* %7, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %28

; <label>:17:                                     ; preds = %14
  %18 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %19 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %20 = call dereferenceable(88) %class.SparseMatrixEZ.14* @_ZN14SparseMatrixEZIfEaSERKS0_(%class.SparseMatrixEZ.14* %19, %class.SparseMatrixEZ.14* dereferenceable(88) %18)
  %21 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %4, align 8
  %22 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %21, i32 1
  store %class.SparseMatrixEZ.14* %22, %class.SparseMatrixEZ.14** %4, align 8
  %23 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  %24 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %23, i32 1
  store %class.SparseMatrixEZ.14* %24, %class.SparseMatrixEZ.14** %6, align 8
  br label %25

; <label>:25:                                     ; preds = %17
  %26 = load i64, i64* %7, align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %7, align 8
  br label %14

; <label>:28:                                     ; preds = %14
  %29 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  ret %class.SparseMatrixEZ.14* %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIdEEC2Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  %6 = bitcast %class.TableBase* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %6)
  %7 = bitcast %class.TableBase* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E14SparseMatrixEZIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  store %class.SparseMatrixEZ* null, %class.SparseMatrixEZ** %8, align 8
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %3, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %4, align 4
  %16 = bitcast %class.TableBase* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %16)
          to label %17 unwind label %23

; <label>:17:                                     ; preds = %12
  br label %18

; <label>:18:                                     ; preds = %17
  %19 = load i8*, i8** %3, align 8
  %20 = load i32, i32* %4, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

; <label>:23:                                     ; preds = %12
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  call void @__clang_call_terminate(i8* %25) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices*, i32, i32) unnamed_addr #3 comdat align 2 {
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.TableIndices* %0, %class.TableIndices** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %8 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %9 = load i32, i32* %5, align 4
  %10 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %11 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %10, i32 0, i32 0
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %11, i64 0, i64 0
  store i32 %9, i32* %12, align 4
  %13 = load i32, i32* %6, align 4
  %14 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %15 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %14, i32 0, i32 0
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  store i32 %13, i32* %16, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2E14SparseMatrixEZIdEE6n_colsEv(%class.Table*) #3 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  %5 = getelementptr inbounds %class.TableBase, %class.TableBase* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor"*, %class.TableBase* dereferenceable(48), %class.SparseMatrixEZ*) unnamed_addr #3 comdat align 2 {
  %4 = load i32, i32* @x.409
  %5 = load i32, i32* @y.410
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %13 = alloca %class.TableBase*, align 8
  %14 = alloca %class.SparseMatrixEZ*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %12, align 8
  store %class.TableBase* %1, %class.TableBase** %13, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %14, align 8
  %15 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %12, align 8
  %16 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %15, i32 0, i32 0
  %17 = load %class.TableBase*, %class.TableBase** %13, align 8
  store %class.TableBase* %17, %class.TableBase** %16, align 8
  %18 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %15, i32 0, i32 1
  %19 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %14, align 8
  store %class.SparseMatrixEZ* %19, %class.SparseMatrixEZ** %18, align 8
  %20 = load i32, i32* @x.409
  %21 = load i32, i32* @y.410
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %29 = alloca %class.TableBase*, align 8
  %30 = alloca %class.SparseMatrixEZ*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %28, align 8
  store %class.TableBase* %1, %class.TableBase** %29, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %30, align 8
  %31 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %28, align 8
  %32 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %31, i32 0, i32 0
  %33 = load %class.TableBase*, %class.TableBase** %29, align 8
  store %class.TableBase* %33, %class.TableBase** %32, align 8
  %34 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %31, i32 0, i32 1
  %35 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %30, align 8
  store %class.SparseMatrixEZ* %35, %class.SparseMatrixEZ** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.0"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %7, align 8
  %9 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %12, align 8
  %14 = ptrtoint %"struct.SparseMatrixEZ<double>::RowInfo"* %8 to i64
  %15 = ptrtoint %"struct.SparseMatrixEZ<double>::RowInfo"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIdELb1ELj1EEC2ERK9TableBaseILi2ES3_EPKS3_(%"class.internal::TableBaseAccessors::Accessor.10"*, %class.TableBase* dereferenceable(48), %class.SparseMatrixEZ*) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.internal::TableBaseAccessors::Accessor.10"*, align 8
  %5 = alloca %class.TableBase*, align 8
  %6 = alloca %class.SparseMatrixEZ*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.10"* %0, %"class.internal::TableBaseAccessors::Accessor.10"** %4, align 8
  store %class.TableBase* %1, %class.TableBase** %5, align 8
  store %class.SparseMatrixEZ* %2, %class.SparseMatrixEZ** %6, align 8
  %7 = load %"class.internal::TableBaseAccessors::Accessor.10"*, %"class.internal::TableBaseAccessors::Accessor.10"** %4, align 8
  %8 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.10", %"class.internal::TableBaseAccessors::Accessor.10"* %7, i32 0, i32 0
  %9 = load %class.TableBase*, %class.TableBase** %5, align 8
  store %class.TableBase* %9, %class.TableBase** %8, align 8
  %10 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.10", %"class.internal::TableBaseAccessors::Accessor.10"* %7, i32 0, i32 1
  %11 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %6, align 8
  store %class.SparseMatrixEZ* %11, %class.SparseMatrixEZ** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZN14SparseMatrixEZIdE6locateEjj(%class.SparseMatrixEZ*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.415
  %5 = load i32, i32* @y.416
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %13 = alloca %class.SparseMatrixEZ*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"struct.SparseMatrixEZ<double>::RowInfo"*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  %20 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %13, align 8
  %21 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 3
  %22 = load i32, i32* %14, align 4
  %23 = zext i32 %22 to i64
  %24 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EEixEm(%"class.std::vector.0"* %21, i64 %23)
  store %"struct.SparseMatrixEZ<double>::RowInfo"* %24, %"struct.SparseMatrixEZ<double>::RowInfo"** %16, align 8
  %25 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %16, align 8
  %26 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %16, align 8
  %29 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %28, i32 0, i32 1
  %30 = load i16, i16* %29, align 4
  %31 = zext i16 %30 to i32
  %32 = add i32 %27, %31
  store i32 %32, i32* %17, align 4
  %33 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %16, align 8
  %34 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %18, align 4
  %36 = load i32, i32* @x.415
  %37 = load i32, i32* @y.416
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %44

; <label>:44:                                     ; preds = %99, %originalBBpart2
  %45 = load i32, i32* @x.415
  %46 = load i32, i32* @y.416
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB4, label %originalBB4alteredBB

originalBB4:                                      ; preds = %44, %originalBB4alteredBB
  %53 = load i32, i32* %18, align 4
  %54 = load i32, i32* %17, align 4
  %55 = icmp ult i32 %53, %54
  %56 = load i32, i32* @x.415
  %57 = load i32, i32* @y.416
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart26, label %originalBB4alteredBB

originalBBpart26:                                 ; preds = %originalBB4
  br i1 %55, label %64, label %102

; <label>:64:                                     ; preds = %originalBBpart26
  %65 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %66 = load i32, i32* %18, align 4
  %67 = zext i32 %66 to i64
  %68 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %65, i64 %67)
  store %"struct.SparseMatrixEZ<double>::Entry"* %68, %"struct.SparseMatrixEZ<double>::Entry"** %19, align 8
  %69 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %19, align 8
  %70 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = load i32, i32* %15, align 4
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %74, label %76

; <label>:74:                                     ; preds = %64
  %75 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %19, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %75, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  br label %103

; <label>:76:                                     ; preds = %64
  %77 = load i32, i32* @x.415
  %78 = load i32, i32* @y.416
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %76, %originalBB8alteredBB
  %85 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %19, align 8
  %86 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, -1
  %89 = load i32, i32* @x.415
  %90 = load i32, i32* @y.416
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br i1 %88, label %97, label %98

; <label>:97:                                     ; preds = %originalBBpart210
  store %"struct.SparseMatrixEZ<double>::Entry"* null, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  br label %103

; <label>:98:                                     ; preds = %originalBBpart210
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* %18, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %18, align 4
  br label %44

; <label>:102:                                    ; preds = %originalBBpart26
  store %"struct.SparseMatrixEZ<double>::Entry"* null, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  br label %103

; <label>:103:                                    ; preds = %102, %97, %74
  %104 = load i32, i32* @x.415
  %105 = load i32, i32* @y.416
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %103, %originalBB12alteredBB
  %112 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %113 = load i32, i32* @x.415
  %114 = load i32, i32* @y.416
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  ret %"struct.SparseMatrixEZ<double>::Entry"* %112

originalBBalteredBB:                              ; preds = %originalBB, %3
  %121 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %122 = alloca %class.SparseMatrixEZ*, align 8
  %123 = alloca i32, align 4
  %124 = alloca i32, align 4
  %125 = alloca %"struct.SparseMatrixEZ<double>::RowInfo"*, align 8
  %126 = alloca i32, align 4
  %127 = alloca i32, align 4
  %128 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %122, align 8
  store i32 %1, i32* %123, align 4
  store i32 %2, i32* %124, align 4
  %129 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %122, align 8
  %130 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %129, i32 0, i32 3
  %131 = load i32, i32* %123, align 4
  %132 = zext i32 %131 to i64
  %133 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EEixEm(%"class.std::vector.0"* %130, i64 %132)
  store %"struct.SparseMatrixEZ<double>::RowInfo"* %133, %"struct.SparseMatrixEZ<double>::RowInfo"** %125, align 8
  %134 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %125, align 8
  %135 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %134, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %125, align 8
  %138 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %137, i32 0, i32 1
  %139 = load i16, i16* %138, align 4
  %140 = zext i16 %139 to i32
  %_ = sub i32 0, %136
  %gen = add i32 %_, %140
  %_1 = sub i32 %136, %140
  %gen2 = mul i32 %_1, %140
  %_3 = shl i32 %136, %140
  %141 = add i32 %136, %140
  store i32 %141, i32* %126, align 4
  %142 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %125, align 8
  %143 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %142, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %127, align 4
  br label %originalBB

originalBB4alteredBB:                             ; preds = %originalBB4, %44
  %145 = load i32, i32* %18, align 4
  %146 = load i32, i32* %17, align 4
  %147 = icmp ult i32 %145, %146
  br label %originalBB4

originalBB8alteredBB:                             ; preds = %originalBB8, %76
  %148 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %19, align 8
  %149 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %148, i32 0, i32 0
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, -1
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %103
  %152 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  br label %originalBB12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZN14SparseMatrixEZIdE8allocateEjj(%class.SparseMatrixEZ*, i32, i32) #0 comdat align 2 {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %class.SparseMatrixEZ*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"struct.SparseMatrixEZ<double>::RowInfo"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %13 = alloca %"struct.SparseMatrixEZ<double>::Entry", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"struct.SparseMatrixEZ<double>::Entry", align 8
  %16 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %17 = alloca %"struct.SparseMatrixEZ<double>::Entry", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"struct.SparseMatrixEZ<double>::Entry", align 8
  store %class.SparseMatrixEZ* %0, %class.SparseMatrixEZ** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %20 = load %class.SparseMatrixEZ*, %class.SparseMatrixEZ** %5, align 8
  %21 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 3
  %22 = load i32, i32* %6, align 4
  %23 = zext i32 %22 to i64
  %24 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EEixEm(%"class.std::vector.0"* %21, i64 %23)
  store %"struct.SparseMatrixEZ<double>::RowInfo"* %24, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %25 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %26 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %29 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %28, i32 0, i32 1
  %30 = load i16, i16* %29, align 4
  %31 = zext i16 %30 to i32
  %32 = add i32 %27, %31
  store i32 %32, i32* %9, align 4
  %33 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %34 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %10, align 4
  %36 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %37 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %36, i32 0, i32 2
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp ne i32 %39, 65535
  br i1 %40, label %41, label %52

; <label>:41:                                     ; preds = %3
  %42 = load i32, i32* %7, align 4
  %43 = load i32, i32* %6, align 4
  %44 = icmp uge i32 %42, %43
  br i1 %44, label %45, label %52

; <label>:45:                                     ; preds = %41
  %46 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %47 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %46, i32 0, i32 2
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = load i32, i32* %10, align 4
  %51 = add i32 %50, %49
  store i32 %51, i32* %10, align 4
  br label %52

; <label>:52:                                     ; preds = %45, %41, %3
  br label %53

; <label>:53:                                     ; preds = %originalBBpart2, %52
  %54 = load i32, i32* %10, align 4
  %55 = load i32, i32* %9, align 4
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %57, label %66

; <label>:57:                                     ; preds = %53
  %58 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %59 = load i32, i32* %10, align 4
  %60 = zext i32 %59 to i64
  %61 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %58, i64 %60)
  %62 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = load i32, i32* %7, align 4
  %65 = icmp ult i32 %63, %64
  br label %66

; <label>:66:                                     ; preds = %57, %53
  %67 = phi i1 [ false, %53 ], [ %65, %57 ]
  br i1 %67, label %68, label %87

; <label>:68:                                     ; preds = %66
  %69 = load i32, i32* @x.417
  %70 = load i32, i32* @y.418
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %68, %originalBBalteredBB
  %77 = load i32, i32* %10, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %10, align 4
  %79 = load i32, i32* @x.417
  %80 = load i32, i32* @y.418
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %53

; <label>:87:                                     ; preds = %66
  %88 = load i32, i32* %10, align 4
  %89 = load i32, i32* %9, align 4
  %90 = icmp ne i32 %88, %89
  br i1 %90, label %91, label %105

; <label>:91:                                     ; preds = %87
  %92 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %93 = load i32, i32* %10, align 4
  %94 = zext i32 %93 to i64
  %95 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %92, i64 %94)
  %96 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = load i32, i32* %7, align 4
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %100, label %105

; <label>:100:                                    ; preds = %91
  %101 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %102 = load i32, i32* %10, align 4
  %103 = zext i32 %102 to i64
  %104 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %101, i64 %103)
  store %"struct.SparseMatrixEZ<double>::Entry"* %104, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  br label %332

; <label>:105:                                    ; preds = %91, %87
  %106 = load i32, i32* @x.417
  %107 = load i32, i32* @y.418
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %105, %originalBB1alteredBB
  %114 = load i32, i32* %6, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 3
  %117 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.0"* %116)
  %118 = sub i64 %117, 1
  %119 = icmp ne i64 %115, %118
  %120 = load i32, i32* @x.417
  %121 = load i32, i32* @y.418
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br i1 %119, label %128, label %175

; <label>:128:                                    ; preds = %originalBBpart28
  %129 = load i32, i32* %9, align 4
  %130 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 3
  %131 = load i32, i32* %6, align 4
  %132 = add i32 %131, 1
  %133 = zext i32 %132 to i64
  %134 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EEixEm(%"class.std::vector.0"* %130, i64 %133)
  %135 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %134, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp uge i32 %129, %136
  br i1 %137, label %138, label %174

; <label>:138:                                    ; preds = %128
  %139 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %140 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %141 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE5beginEv(%"class.std::vector.5"* %140)
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %12, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %141, %"struct.SparseMatrixEZ<double>::Entry"** %142, align 8
  %143 = load i32, i32* %9, align 4
  %144 = zext i32 %143 to i64
  %145 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.31"* %12, i64 %144)
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %145, %"struct.SparseMatrixEZ<double>::Entry"** %146, align 8
  %147 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 5
  %148 = load i32, i32* %147, align 8
  %149 = zext i32 %148 to i64
  call void @_ZN14SparseMatrixEZIdE5EntryC2Ev(%"struct.SparseMatrixEZ<double>::Entry"* %13)
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  %151 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %150, align 8
  call void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.5"* %139, %"struct.SparseMatrixEZ<double>::Entry"* %151, i64 %149, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %13)
  %152 = load i32, i32* %6, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %14, align 4
  br label %154

; <label>:154:                                    ; preds = %170, %138
  %155 = load i32, i32* %14, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 3
  %158 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.0"* %157)
  %159 = icmp ult i64 %156, %158
  br i1 %159, label %160, label %173

; <label>:160:                                    ; preds = %154
  %161 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 5
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 3
  %164 = load i32, i32* %14, align 4
  %165 = zext i32 %164 to i64
  %166 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EEixEm(%"class.std::vector.0"* %163, i64 %165)
  %167 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, %162
  store i32 %169, i32* %167, align 4
  br label %170

; <label>:170:                                    ; preds = %160
  %171 = load i32, i32* %14, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %14, align 4
  br label %154

; <label>:173:                                    ; preds = %154
  br label %174

; <label>:174:                                    ; preds = %173, %128
  br label %184

; <label>:175:                                    ; preds = %originalBBpart28
  %176 = load i32, i32* %9, align 4
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %179 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv(%"class.std::vector.5"* %178)
  %180 = icmp uge i64 %177, %179
  br i1 %180, label %181, label %183

; <label>:181:                                    ; preds = %175
  %182 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  call void @_ZN14SparseMatrixEZIdE5EntryC2Ev(%"struct.SparseMatrixEZ<double>::Entry"* %15)
  call void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE9push_backERKS2_(%"class.std::vector.5"* %182, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %15)
  br label %183

; <label>:183:                                    ; preds = %181, %175
  br label %184

; <label>:184:                                    ; preds = %183, %174
  %185 = load i32, i32* @x.417
  %186 = load i32, i32* @y.418
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %184, %originalBB10alteredBB
  %193 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %194 = load i32, i32* %10, align 4
  %195 = zext i32 %194 to i64
  %196 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %193, i64 %195)
  store %"struct.SparseMatrixEZ<double>::Entry"* %196, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %197 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %198 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %17 to i8*
  %199 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %198, i8* %199, i64 16, i32 8, i1 false)
  %200 = load i32, i32* %7, align 4
  %201 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %202 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %201, i32 0, i32 0
  store i32 %200, i32* %202, align 8
  %203 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %204 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %203, i32 0, i32 1
  store double 0.000000e+00, double* %204, align 8
  %205 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %206 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %205, i32 0, i32 1
  %207 = load i16, i16* %206, align 4
  %208 = add i16 %207, 1
  store i16 %208, i16* %206, align 4
  %209 = load i32, i32* %7, align 4
  %210 = load i32, i32* %6, align 4
  %211 = icmp eq i32 %209, %210
  %212 = load i32, i32* @x.417
  %213 = load i32, i32* @y.418
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart222, label %originalBB10alteredBB

originalBBpart222:                                ; preds = %originalBB10
  br i1 %211, label %220, label %229

; <label>:220:                                    ; preds = %originalBBpart222
  %221 = load i32, i32* %10, align 4
  %222 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %223 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %222, i32 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = sub i32 %221, %224
  %226 = trunc i32 %225 to i16
  %227 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %228 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %227, i32 0, i32 2
  store i16 %226, i16* %228, align 2
  br label %261

; <label>:229:                                    ; preds = %originalBBpart222
  %230 = load i32, i32* %7, align 4
  %231 = load i32, i32* %6, align 4
  %232 = icmp ult i32 %230, %231
  br i1 %232, label %233, label %244

; <label>:233:                                    ; preds = %229
  %234 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %235 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %234, i32 0, i32 2
  %236 = load i16, i16* %235, align 2
  %237 = zext i16 %236 to i32
  %238 = icmp ne i32 %237, 65535
  br i1 %238, label %239, label %244

; <label>:239:                                    ; preds = %233
  %240 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %241 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %240, i32 0, i32 2
  %242 = load i16, i16* %241, align 2
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 2
  br label %244

; <label>:244:                                    ; preds = %239, %233, %229
  %245 = load i32, i32* @x.417
  %246 = load i32, i32* @y.418
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %244, %originalBB24alteredBB
  %253 = load i32, i32* @x.417
  %254 = load i32, i32* @y.418
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br label %261

; <label>:261:                                    ; preds = %originalBBpart226, %220
  %262 = load i32, i32* %10, align 4
  %263 = load i32, i32* %9, align 4
  %264 = icmp eq i32 %262, %263
  br i1 %264, label %265, label %267

; <label>:265:                                    ; preds = %261
  %266 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %266, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  br label %332

; <label>:267:                                    ; preds = %261
  %268 = load i32, i32* %10, align 4
  %269 = add i32 %268, 1
  store i32 %269, i32* %18, align 4
  br label %270

; <label>:270:                                    ; preds = %305, %267
  %271 = load i32, i32* @x.417
  %272 = load i32, i32* @y.418
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %270, %originalBB28alteredBB
  %279 = load i32, i32* %18, align 4
  %280 = load i32, i32* %9, align 4
  %281 = icmp ult i32 %279, %280
  %282 = load i32, i32* @x.417
  %283 = load i32, i32* @y.418
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart231, label %originalBB28alteredBB

originalBBpart231:                                ; preds = %originalBB28
  br i1 %281, label %290, label %308

; <label>:290:                                    ; preds = %originalBBpart231
  %291 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %292 = load i32, i32* %18, align 4
  %293 = zext i32 %292 to i64
  %294 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %291, i64 %293)
  %295 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %19 to i8*
  %296 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %295, i8* %296, i64 16, i32 8, i1 false)
  %297 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %298 = load i32, i32* %18, align 4
  %299 = zext i32 %298 to i64
  %300 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %297, i64 %299)
  %301 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %300 to i8*
  %302 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %301, i8* %302, i64 16, i32 8, i1 false)
  %303 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %17 to i8*
  %304 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %303, i8* %304, i64 16, i32 8, i1 false)
  br label %305

; <label>:305:                                    ; preds = %290
  %306 = load i32, i32* %18, align 4
  %307 = add i32 %306, 1
  store i32 %307, i32* %18, align 4
  br label %270

; <label>:308:                                    ; preds = %originalBBpart231
  %309 = load i32, i32* @x.417
  %310 = load i32, i32* @y.418
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %308, %originalBB33alteredBB
  %317 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %318 = load i32, i32* %9, align 4
  %319 = zext i32 %318 to i64
  %320 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %317, i64 %319)
  %321 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %320 to i8*
  %322 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %321, i8* %322, i64 16, i32 8, i1 false)
  %323 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %323, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %324 = load i32, i32* @x.417
  %325 = load i32, i32* @y.418
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %332

; <label>:332:                                    ; preds = %originalBBpart235, %265, %100
  %333 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %333

originalBBalteredBB:                              ; preds = %originalBB, %68
  %334 = load i32, i32* %10, align 4
  %_ = sub i32 %334, 1
  %gen = mul i32 %_, 1
  %335 = add i32 %334, 1
  store i32 %335, i32* %10, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %105
  %336 = load i32, i32* %6, align 4
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 3
  %339 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.0"* %338)
  %_2 = sub i64 0, %339
  %gen3 = add i64 %_2, 1
  %_4 = shl i64 %339, 1
  %_5 = sub i64 0, %339
  %gen6 = add i64 %_5, 1
  %340 = sub i64 %339, 1
  %341 = icmp ne i64 %337, %340
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %184
  %342 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %343 = load i32, i32* %10, align 4
  %344 = zext i32 %343 to i64
  %345 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %342, i64 %344)
  store %"struct.SparseMatrixEZ<double>::Entry"* %345, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %346 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %347 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %17 to i8*
  %348 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %346 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %347, i8* %348, i64 16, i32 8, i1 false)
  %349 = load i32, i32* %7, align 4
  %350 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %351 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %350, i32 0, i32 0
  store i32 %349, i32* %351, align 8
  %352 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %353 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %352, i32 0, i32 1
  store double 0.000000e+00, double* %353, align 8
  %354 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %8, align 8
  %355 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %354, i32 0, i32 1
  %356 = load i16, i16* %355, align 4
  %_11 = shl i16 %356, 1
  %_12 = sub i16 0, %356
  %gen13 = add i16 %_12, 1
  %_14 = shl i16 %356, 1
  %_15 = sub i16 %356, 1
  %gen16 = mul i16 %_15, 1
  %_17 = sub i16 %356, 1
  %gen18 = mul i16 %_17, 1
  %_19 = sub i16 %356, 1
  %gen20 = mul i16 %_19, 1
  %357 = add i16 %356, 1
  store i16 %357, i16* %355, align 4
  %358 = load i32, i32* %7, align 4
  %359 = load i32, i32* %6, align 4
  %360 = icmp eq i32 %358, %359
  br label %originalBB10

originalBB24alteredBB:                            ; preds = %originalBB24, %244
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %270
  %361 = load i32, i32* %18, align 4
  %362 = load i32, i32* %9, align 4
  %363 = icmp ult i32 %361, %362
  br label %originalBB28

originalBB33alteredBB:                            ; preds = %originalBB33, %308
  %364 = getelementptr inbounds %class.SparseMatrixEZ, %class.SparseMatrixEZ* %20, i32 0, i32 4
  %365 = load i32, i32* %9, align 4
  %366 = zext i32 %365 to i64
  %367 = call dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"* %364, i64 %366)
  %368 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %367 to i8*
  %369 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %368, i8* %369, i64 16, i32 8, i1 false)
  %370 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %370, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  br label %originalBB33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.SparseMatrixEZ<double>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIdE7RowInfoESaIS2_EEixEm(%"class.std::vector.0"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::RowInfo, std::allocator<SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"struct.SparseMatrixEZ<double>::RowInfo"*, %"struct.SparseMatrixEZ<double>::RowInfo"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::RowInfo", %"struct.SparseMatrixEZ<double>::RowInfo"* %10, i64 %11
  ret %"struct.SparseMatrixEZ<double>::RowInfo"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EEixEm(%"class.std::vector.5"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %10, i64 %11
  ret %"struct.SparseMatrixEZ<double>::Entry"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.5"*, %"struct.SparseMatrixEZ<double>::Entry"*, i64, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat align 2 {
  %5 = load i32, i32* @x.423
  %6 = load i32, i32* @y.424
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %14 = alloca %"class.std::vector.5"*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %13, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %18, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %14, align 8
  store i64 %2, i64* %15, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %3, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %19 = load %"class.std::vector.5"*, %"class.std::vector.5"** %14, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %17 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = load i64, i64* %15, align 8
  %23 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %17, i32 0, i32 0
  %25 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %24, align 8
  call void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.5"* %19, %"struct.SparseMatrixEZ<double>::Entry"* %25, i64 %22, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %23)
  %26 = load i32, i32* @x.423
  %27 = load i32, i32* @y.424
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %35 = alloca %"class.std::vector.5"*, align 8
  %36 = alloca i64, align 8
  %37 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %34, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %39, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %35, align 8
  store i64 %2, i64* %36, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %3, %"struct.SparseMatrixEZ<double>::Entry"** %37, align 8
  %40 = load %"class.std::vector.5"*, %"class.std::vector.5"** %35, align 8
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %38 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load i64, i64* %36, align 8
  %44 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %37, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %38, i32 0, i32 0
  %46 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %45, align 8
  call void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.5"* %40, %"struct.SparseMatrixEZ<double>::Entry"* %46, i64 %43, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %44)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE5beginEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"struct.SparseMatrixEZ<double>::Entry"** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.31"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %7, i32 0, i32 0
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %9, i64 %10
  store %"struct.SparseMatrixEZ<double>::Entry"* %11, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %3, %"struct.SparseMatrixEZ<double>::Entry"** dereferenceable(8) %6)
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  %13 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN14SparseMatrixEZIdE5EntryC2Ev(%"struct.SparseMatrixEZ<double>::Entry"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %2, align 8
  %3 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %2, align 8
  %4 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %3, i32 0, i32 0
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %3, i32 0, i32 1
  store double 0.000000e+00, double* %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv(%"class.std::vector.5"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %9 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %14 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %8 to i64
  %15 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 16
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE9push_backERKS2_(%"class.std::vector.5"*, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %7 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %10, align 8
  %12 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %14, i32 0, i32 2
  %16 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %15, align 8
  %17 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %11, %16
  br i1 %17, label %18, label %34

; <label>:18:                                     ; preds = %2
  %19 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %20 to %"class.std::allocator.7"*
  %22 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %23 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %24, i32 0, i32 1
  %26 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %25, align 8
  %27 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_(%"class.std::allocator.7"* dereferenceable(1) %21, %"struct.SparseMatrixEZ<double>::Entry"* %26, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %27)
  %28 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %29 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %30, i32 0, i32 1
  %32 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %31, align 8
  %33 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %32, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %33, %"struct.SparseMatrixEZ<double>::Entry"** %31, align 8
  br label %40

; <label>:34:                                     ; preds = %2
  %35 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE3endEv(%"class.std::vector.5"* %6)
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %35, %"struct.SparseMatrixEZ<double>::Entry"** %36, align 8
  %37 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  %39 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %38, align 8
  call void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(%"class.std::vector.5"* %6, %"struct.SparseMatrixEZ<double>::Entry"* %39, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %37)
  br label %40

; <label>:40:                                     ; preds = %34, %18
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.5"*, %"struct.SparseMatrixEZ<double>::Entry"*, i64, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %9 = alloca %"struct.SparseMatrixEZ<double>::Entry", align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %16 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %17 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %20, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %3, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %21 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %486

; <label>:24:                                     ; preds = %4
  %25 = load i32, i32* @x.435
  %26 = load i32, i32* @y.436
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %35, i32 0, i32 2
  %37 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %36, align 8
  %38 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %38, i32 0, i32 0
  %40 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %39 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %40, i32 0, i32 1
  %42 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %41, align 8
  %43 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %37 to i64
  %44 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 16
  %47 = load i64, i64* %7, align 8
  %48 = icmp uge i64 %46, %47
  %49 = load i32, i32* @x.435
  %50 = load i32, i32* @y.436
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %48, label %57, label %185

; <label>:57:                                     ; preds = %originalBBpart2
  %58 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %59 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %9 to i8*
  %60 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 16, i32 8, i1 false)
  %61 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE3endEv(%"class.std::vector.5"* %21)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %61, %"struct.SparseMatrixEZ<double>::Entry"** %62, align 8
  %63 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %5)
  store i64 %63, i64* %10, align 8
  %64 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %65 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %67, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %68, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %69 = load i64, i64* %10, align 8
  %70 = load i64, i64* %7, align 8
  %71 = icmp ugt i64 %69, %70
  br i1 %71, label %72, label %115

; <label>:72:                                     ; preds = %57
  %73 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %74 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %75, i32 0, i32 1
  %77 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %76, align 8
  %78 = load i64, i64* %7, align 8
  %79 = sub i64 0, %78
  %80 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %77, i64 %79
  %81 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %82 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %83, i32 0, i32 1
  %85 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %84, align 8
  %86 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %87 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %88, i32 0, i32 1
  %90 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %89, align 8
  %91 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %92 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %91)
  %93 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"* %80, %"struct.SparseMatrixEZ<double>::Entry"* %85, %"struct.SparseMatrixEZ<double>::Entry"* %90, %"class.std::allocator.7"* dereferenceable(1) %92)
  %94 = load i64, i64* %7, align 8
  %95 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %95, i32 0, i32 0
  %97 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %96 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %98 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %97, i32 0, i32 1
  %99 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %98, align 8
  %100 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %99, i64 %94
  store %"struct.SparseMatrixEZ<double>::Entry"* %100, %"struct.SparseMatrixEZ<double>::Entry"** %98, align 8
  %101 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %102 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %101, align 8
  %103 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %104 = load i64, i64* %7, align 8
  %105 = sub i64 0, %104
  %106 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %103, i64 %105
  %107 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %108 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt13copy_backwardIPN14SparseMatrixEZIdE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %102, %"struct.SparseMatrixEZ<double>::Entry"* %106, %"struct.SparseMatrixEZ<double>::Entry"* %107)
  %109 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %110 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %109, align 8
  %111 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %112 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %111, align 8
  %113 = load i64, i64* %7, align 8
  %114 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %112, i64 %113
  call void @_ZSt4fillIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RKT0_(%"struct.SparseMatrixEZ<double>::Entry"* %110, %"struct.SparseMatrixEZ<double>::Entry"* %114, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %9)
  br label %168

; <label>:115:                                    ; preds = %57
  %116 = load i32, i32* @x.435
  %117 = load i32, i32* @y.436
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %115, %originalBB11alteredBB
  %124 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %124, i32 0, i32 0
  %126 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %125 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %126, i32 0, i32 1
  %128 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %127, align 8
  %129 = load i64, i64* %7, align 8
  %130 = load i64, i64* %10, align 8
  %131 = sub i64 %129, %130
  %132 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %133 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %132)
  %134 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIdE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.SparseMatrixEZ<double>::Entry"* %128, i64 %131, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %9, %"class.std::allocator.7"* dereferenceable(1) %133)
  %135 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %135, i32 0, i32 0
  %137 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %136 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %138 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %137, i32 0, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %134, %"struct.SparseMatrixEZ<double>::Entry"** %138, align 8
  %139 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %140 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %139, align 8
  %141 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %142 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %142, i32 0, i32 0
  %144 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %143 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %144, i32 0, i32 1
  %146 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %145, align 8
  %147 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %148 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %147)
  %149 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"* %140, %"struct.SparseMatrixEZ<double>::Entry"* %141, %"struct.SparseMatrixEZ<double>::Entry"* %146, %"class.std::allocator.7"* dereferenceable(1) %148)
  %150 = load i64, i64* %10, align 8
  %151 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %152 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %151, i32 0, i32 0
  %153 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %152 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %154 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %153, i32 0, i32 1
  %155 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %154, align 8
  %156 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %155, i64 %150
  store %"struct.SparseMatrixEZ<double>::Entry"* %156, %"struct.SparseMatrixEZ<double>::Entry"** %154, align 8
  %157 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %158 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %157, align 8
  %159 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  call void @_ZSt4fillIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RKT0_(%"struct.SparseMatrixEZ<double>::Entry"* %158, %"struct.SparseMatrixEZ<double>::Entry"* %159, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %9)
  %160 = load i32, i32* @x.435
  %161 = load i32, i32* @y.436
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart219, label %originalBB11alteredBB

originalBBpart219:                                ; preds = %originalBB11
  br label %168

; <label>:168:                                    ; preds = %originalBBpart219, %72
  %169 = load i32, i32* @x.435
  %170 = load i32, i32* @y.436
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %168, %originalBB21alteredBB
  %177 = load i32, i32* @x.435
  %178 = load i32, i32* @y.436
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %485

; <label>:185:                                    ; preds = %originalBBpart2
  %186 = load i32, i32* @x.435
  %187 = load i32, i32* @y.436
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %185, %originalBB25alteredBB
  %194 = load i64, i64* %7, align 8
  %195 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.5"* %21, i64 %194, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %195, i64* %13, align 8
  %196 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE5beginEv(%"class.std::vector.5"* %21)
  %197 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %15, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %196, %"struct.SparseMatrixEZ<double>::Entry"** %197, align 8
  %198 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %15)
  store i64 %198, i64* %14, align 8
  %199 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %200 = load i64, i64* %13, align 8
  %201 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %199, i64 %200)
  store %"struct.SparseMatrixEZ<double>::Entry"* %201, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %202 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %202, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %203 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %204 = load i64, i64* %14, align 8
  %205 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %203, i64 %204
  %206 = load i64, i64* %7, align 8
  %207 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %208 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %209 = load i32, i32* @x.435
  %210 = load i32, i32* @y.436
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  %217 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %208)
          to label %218 unwind label %316

; <label>:218:                                    ; preds = %originalBBpart227
  %219 = load i32, i32* @x.435
  %220 = load i32, i32* @y.436
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %218, %originalBB29alteredBB
  %227 = load i32, i32* @x.435
  %228 = load i32, i32* @y.436
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  %235 = invoke %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIdE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.SparseMatrixEZ<double>::Entry"* %205, i64 %206, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %207, %"class.std::allocator.7"* dereferenceable(1) %217)
          to label %236 unwind label %316

; <label>:236:                                    ; preds = %originalBBpart231
  %237 = load i32, i32* @x.435
  %238 = load i32, i32* @y.436
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %236, %originalBB33alteredBB
  store %"struct.SparseMatrixEZ<double>::Entry"* null, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %245 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %246 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %245, i32 0, i32 0
  %247 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %246 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %247, i32 0, i32 0
  %249 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %248, align 8
  %250 = load i32, i32* @x.435
  %251 = load i32, i32* @y.436
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  %258 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
          to label %259 unwind label %316

; <label>:259:                                    ; preds = %originalBBpart235
  %260 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %258, align 8
  %261 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %262 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %263 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %262)
          to label %264 unwind label %316

; <label>:264:                                    ; preds = %259
  %265 = invoke %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"* %249, %"struct.SparseMatrixEZ<double>::Entry"* %260, %"struct.SparseMatrixEZ<double>::Entry"* %261, %"class.std::allocator.7"* dereferenceable(1) %263)
          to label %266 unwind label %316

; <label>:266:                                    ; preds = %264
  %267 = load i32, i32* @x.435
  %268 = load i32, i32* @y.436
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %266, %originalBB37alteredBB
  store %"struct.SparseMatrixEZ<double>::Entry"* %265, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %275 = load i64, i64* %7, align 8
  %276 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %277 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %276, i64 %275
  store %"struct.SparseMatrixEZ<double>::Entry"* %277, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %278 = load i32, i32* @x.435
  %279 = load i32, i32* @y.436
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  %286 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
          to label %287 unwind label %316

; <label>:287:                                    ; preds = %originalBBpart239
  %288 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %286, align 8
  %289 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %290 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %289, i32 0, i32 0
  %291 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %290 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %292 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %291, i32 0, i32 1
  %293 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %292, align 8
  %294 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %295 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %296 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %295)
          to label %297 unwind label %316

; <label>:297:                                    ; preds = %287
  %298 = load i32, i32* @x.435
  %299 = load i32, i32* @y.436
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %297, %originalBB41alteredBB
  %306 = load i32, i32* @x.435
  %307 = load i32, i32* @y.436
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  %314 = invoke %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"* %288, %"struct.SparseMatrixEZ<double>::Entry"* %293, %"struct.SparseMatrixEZ<double>::Entry"* %294, %"class.std::allocator.7"* dereferenceable(1) %296)
          to label %315 unwind label %316

; <label>:315:                                    ; preds = %originalBBpart243
  store %"struct.SparseMatrixEZ<double>::Entry"* %314, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  br label %435

; <label>:316:                                    ; preds = %originalBBpart243, %287, %originalBBpart239, %264, %259, %originalBBpart235, %originalBBpart231, %originalBBpart227
  %317 = load i32, i32* @x.435
  %318 = load i32, i32* @y.436
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %316, %originalBB45alteredBB
  %325 = landingpad { i8*, i32 }
          catch i8* null
  %326 = extractvalue { i8*, i32 } %325, 0
  store i8* %326, i8** %18, align 8
  %327 = extractvalue { i8*, i32 } %325, 1
  store i32 %327, i32* %19, align 4
  %328 = load i32, i32* @x.435
  %329 = load i32, i32* @y.436
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %336

; <label>:336:                                    ; preds = %originalBBpart247
  %337 = load i8*, i8** %18, align 8
  %338 = call i8* @__cxa_begin_catch(i8* %337) #10
  %339 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %340 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %339, null
  br i1 %340, label %374, label %341

; <label>:341:                                    ; preds = %336
  %342 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %343 = load i64, i64* %14, align 8
  %344 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %342, i64 %343
  %345 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %346 = load i64, i64* %14, align 8
  %347 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %345, i64 %346
  %348 = load i64, i64* %7, align 8
  %349 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %347, i64 %348
  %350 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %351 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %350)
          to label %352 unwind label %370

; <label>:352:                                    ; preds = %341
  %353 = load i32, i32* @x.435
  %354 = load i32, i32* @y.436
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %352, %originalBB49alteredBB
  %361 = load i32, i32* @x.435
  %362 = load i32, i32* @y.436
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<double>::Entry"* %344, %"struct.SparseMatrixEZ<double>::Entry"* %349, %"class.std::allocator.7"* dereferenceable(1) %351)
          to label %369 unwind label %370

; <label>:369:                                    ; preds = %originalBBpart251
  br label %413

; <label>:370:                                    ; preds = %417, %413, %395, %originalBBpart255, %originalBBpart251, %341
  %371 = landingpad { i8*, i32 }
          cleanup
  %372 = extractvalue { i8*, i32 } %371, 0
  store i8* %372, i8** %18, align 8
  %373 = extractvalue { i8*, i32 } %371, 1
  store i32 %373, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %418 unwind label %492

; <label>:374:                                    ; preds = %336
  %375 = load i32, i32* @x.435
  %376 = load i32, i32* @y.436
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %374, %originalBB53alteredBB
  %383 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %384 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %385 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %386 = load i32, i32* @x.435
  %387 = load i32, i32* @y.436
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  %394 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %385)
          to label %395 unwind label %370

; <label>:395:                                    ; preds = %originalBBpart255
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<double>::Entry"* %383, %"struct.SparseMatrixEZ<double>::Entry"* %384, %"class.std::allocator.7"* dereferenceable(1) %394)
          to label %396 unwind label %370

; <label>:396:                                    ; preds = %395
  %397 = load i32, i32* @x.435
  %398 = load i32, i32* @y.436
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %396, %originalBB57alteredBB
  %405 = load i32, i32* @x.435
  %406 = load i32, i32* @y.436
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %413

; <label>:413:                                    ; preds = %originalBBpart259, %369
  %414 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %415 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %416 = load i64, i64* %13, align 8
  invoke void @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.6"* %414, %"struct.SparseMatrixEZ<double>::Entry"* %415, i64 %416)
          to label %417 unwind label %370

; <label>:417:                                    ; preds = %413
  invoke void @__cxa_rethrow() #12
          to label %495 unwind label %370

; <label>:418:                                    ; preds = %370
  %419 = load i32, i32* @x.435
  %420 = load i32, i32* @y.436
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %418, %originalBB61alteredBB
  %427 = load i32, i32* @x.435
  %428 = load i32, i32* @y.436
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %487

; <label>:435:                                    ; preds = %315
  %436 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %437 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %436, i32 0, i32 0
  %438 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %437 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %439 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %438, i32 0, i32 0
  %440 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %439, align 8
  %441 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %442 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %441, i32 0, i32 0
  %443 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %442 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %444 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %443, i32 0, i32 1
  %445 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %444, align 8
  %446 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %447 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %446)
  call void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<double>::Entry"* %440, %"struct.SparseMatrixEZ<double>::Entry"* %445, %"class.std::allocator.7"* dereferenceable(1) %447)
  %448 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %449 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %450 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %449, i32 0, i32 0
  %451 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %450 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %452 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %451, i32 0, i32 0
  %453 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %452, align 8
  %454 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %455 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %454, i32 0, i32 0
  %456 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %455 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %457 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %456, i32 0, i32 2
  %458 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %457, align 8
  %459 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %460 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %459, i32 0, i32 0
  %461 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %460 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %462 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %461, i32 0, i32 0
  %463 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %462, align 8
  %464 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %458 to i64
  %465 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %463 to i64
  %466 = sub i64 %464, %465
  %467 = sdiv exact i64 %466, 16
  call void @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.6"* %448, %"struct.SparseMatrixEZ<double>::Entry"* %453, i64 %467)
  %468 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %469 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %470 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %469, i32 0, i32 0
  %471 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %470 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %472 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %471, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %468, %"struct.SparseMatrixEZ<double>::Entry"** %472, align 8
  %473 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %474 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %475 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %474, i32 0, i32 0
  %476 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %475 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %477 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %476, i32 0, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %473, %"struct.SparseMatrixEZ<double>::Entry"** %477, align 8
  %478 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %479 = load i64, i64* %13, align 8
  %480 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %478, i64 %479
  %481 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %482 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %481, i32 0, i32 0
  %483 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %482 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %484 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %483, i32 0, i32 2
  store %"struct.SparseMatrixEZ<double>::Entry"* %480, %"struct.SparseMatrixEZ<double>::Entry"** %484, align 8
  br label %485

; <label>:485:                                    ; preds = %435, %originalBBpart223
  br label %486

; <label>:486:                                    ; preds = %485, %4
  ret void

; <label>:487:                                    ; preds = %originalBBpart263
  %488 = load i8*, i8** %18, align 8
  %489 = load i32, i32* %19, align 4
  %490 = insertvalue { i8*, i32 } undef, i8* %488, 0
  %491 = insertvalue { i8*, i32 } %490, i32 %489, 1
  resume { i8*, i32 } %491

; <label>:492:                                    ; preds = %370
  %493 = landingpad { i8*, i32 }
          catch i8* null
  %494 = extractvalue { i8*, i32 } %493, 0
  call void @__clang_call_terminate(i8* %494) #9
  unreachable

; <label>:495:                                    ; preds = %417
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %24
  %496 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %497 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %496, i32 0, i32 0
  %498 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %497 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %499 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %498, i32 0, i32 2
  %500 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %499, align 8
  %501 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %502 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %501, i32 0, i32 0
  %503 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %502 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %504 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %503, i32 0, i32 1
  %505 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %504, align 8
  %506 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %500 to i64
  %507 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %505 to i64
  %_ = shl i64 %506, %507
  %_1 = sub i64 %506, %507
  %gen = mul i64 %_1, %507
  %508 = sub i64 %506, %507
  %_2 = sub i64 0, %508
  %gen3 = add i64 %_2, 16
  %_4 = shl i64 %508, 16
  %_5 = shl i64 %508, 16
  %_6 = sub i64 %508, 16
  %gen7 = mul i64 %_6, 16
  %_8 = sub i64 0, %508
  %gen9 = add i64 %_8, 16
  %_10 = shl i64 %508, 16
  %509 = sdiv exact i64 %508, 16
  %510 = load i64, i64* %7, align 8
  %511 = icmp uge i64 %509, %510
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %115
  %512 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %513 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %512, i32 0, i32 0
  %514 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %513 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %515 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %514, i32 0, i32 1
  %516 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %515, align 8
  %517 = load i64, i64* %7, align 8
  %518 = load i64, i64* %10, align 8
  %_12 = sub i64 0, %517
  %gen13 = add i64 %_12, %518
  %_14 = shl i64 %517, %518
  %_15 = sub i64 0, %517
  %gen16 = add i64 %_15, %518
  %_17 = shl i64 %517, %518
  %519 = sub i64 %517, %518
  %520 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %521 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %520)
  %522 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIdE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.SparseMatrixEZ<double>::Entry"* %516, i64 %519, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %9, %"class.std::allocator.7"* dereferenceable(1) %521)
  %523 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %524 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %523, i32 0, i32 0
  %525 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %524 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %526 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %525, i32 0, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %522, %"struct.SparseMatrixEZ<double>::Entry"** %526, align 8
  %527 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %528 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %527, align 8
  %529 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %530 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %531 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %530, i32 0, i32 0
  %532 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %531 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %533 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %532, i32 0, i32 1
  %534 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %533, align 8
  %535 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %536 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %535)
  %537 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"* %528, %"struct.SparseMatrixEZ<double>::Entry"* %529, %"struct.SparseMatrixEZ<double>::Entry"* %534, %"class.std::allocator.7"* dereferenceable(1) %536)
  %538 = load i64, i64* %10, align 8
  %539 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %540 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %539, i32 0, i32 0
  %541 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %540 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %542 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %541, i32 0, i32 1
  %543 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %542, align 8
  %544 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %543, i64 %538
  store %"struct.SparseMatrixEZ<double>::Entry"* %544, %"struct.SparseMatrixEZ<double>::Entry"** %542, align 8
  %545 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %546 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %545, align 8
  %547 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  call void @_ZSt4fillIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RKT0_(%"struct.SparseMatrixEZ<double>::Entry"* %546, %"struct.SparseMatrixEZ<double>::Entry"* %547, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %9)
  br label %originalBB11

originalBB21alteredBB:                            ; preds = %originalBB21, %168
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %185
  %548 = load i64, i64* %7, align 8
  %549 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.5"* %21, i64 %548, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %549, i64* %13, align 8
  %550 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE5beginEv(%"class.std::vector.5"* %21)
  %551 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %15, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %550, %"struct.SparseMatrixEZ<double>::Entry"** %551, align 8
  %552 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %15)
  store i64 %552, i64* %14, align 8
  %553 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %554 = load i64, i64* %13, align 8
  %555 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %553, i64 %554)
  store %"struct.SparseMatrixEZ<double>::Entry"* %555, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %556 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %556, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %557 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %558 = load i64, i64* %14, align 8
  %559 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %557, i64 %558
  %560 = load i64, i64* %7, align 8
  %561 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %562 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %218
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %236
  store %"struct.SparseMatrixEZ<double>::Entry"* null, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %563 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %564 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %563, i32 0, i32 0
  %565 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %564 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %566 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %565, i32 0, i32 0
  %567 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %566, align 8
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %266
  store %"struct.SparseMatrixEZ<double>::Entry"* %265, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %568 = load i64, i64* %7, align 8
  %569 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %570 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %569, i64 %568
  store %"struct.SparseMatrixEZ<double>::Entry"* %570, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %297
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %316
  %571 = landingpad { i8*, i32 }
          catch i8* null
  %572 = extractvalue { i8*, i32 } %571, 0
  store i8* %572, i8** %18, align 8
  %573 = extractvalue { i8*, i32 } %571, 1
  store i32 %573, i32* %19, align 4
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %352
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %374
  %574 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  %575 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %17, align 8
  %576 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %396
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %418
  br label %originalBB61
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %1, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  %6 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5)
  %7 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  %9 = call dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %8)
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %11 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %7 to i64
  %12 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 16
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE3endEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"struct.SparseMatrixEZ<double>::Entry"** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %12 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %13 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIdE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.SparseMatrixEZ<double>::Entry"* %9, %"struct.SparseMatrixEZ<double>::Entry"* %10, %"struct.SparseMatrixEZ<double>::Entry"* %11, %"class.std::allocator.7"* dereferenceable(1) %12)
  ret %"struct.SparseMatrixEZ<double>::Entry"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt13copy_backwardIPN14SparseMatrixEZIdE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #0 comdat {
  %4 = load i32, i32* @x.445
  %5 = load i32, i32* @y.446
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %14 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  %15 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %16 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %15)
  %17 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %18 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %17)
  %19 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  %20 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt23__copy_move_backward_a2ILb0EPN14SparseMatrixEZIdE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %16, %"struct.SparseMatrixEZ<double>::Entry"* %18, %"struct.SparseMatrixEZ<double>::Entry"* %19)
  %21 = load i32, i32* @x.445
  %22 = load i32, i32* @y.446
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<double>::Entry"* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %30 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %31 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %30, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %31, align 8
  %32 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  %33 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %32)
  %34 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %30, align 8
  %35 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %34)
  %36 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %31, align 8
  %37 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt23__copy_move_backward_a2ILb0EPN14SparseMatrixEZIdE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %33, %"struct.SparseMatrixEZ<double>::Entry"* %35, %"struct.SparseMatrixEZ<double>::Entry"* %36)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.447
  %3 = load i32, i32* @y.448
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.447
  %14 = load i32, i32* @y.448
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<double>::Entry"** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RKT0_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat {
  %4 = load i32, i32* @x.449
  %5 = load i32, i32* @y.450
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %14 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  %15 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %16 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %15)
  %17 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %18 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %17)
  %19 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  call void @_ZSt8__fill_aIPN14SparseMatrixEZIdE5EntryES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"struct.SparseMatrixEZ<double>::Entry"* %16, %"struct.SparseMatrixEZ<double>::Entry"* %18, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %19)
  %20 = load i32, i32* @x.449
  %21 = load i32, i32* @y.450
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %29 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %30 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %28, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %30, align 8
  %31 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %28, align 8
  %32 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %31)
  %33 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  %34 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %33)
  %35 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %30, align 8
  call void @_ZSt8__fill_aIPN14SparseMatrixEZIdE5EntryES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"struct.SparseMatrixEZ<double>::Entry"* %32, %"struct.SparseMatrixEZ<double>::Entry"* %34, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIdE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.SparseMatrixEZ<double>::Entry"*, i64, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %12 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt20uninitialized_fill_nIPN14SparseMatrixEZIdE5EntryEmS2_ET_S4_T0_RKT1_(%"struct.SparseMatrixEZ<double>::Entry"* %9, i64 %10, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %11)
  ret %"struct.SparseMatrixEZ<double>::Entry"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.5"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.453
  %5 = load i32, i32* @y.454
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.5"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %18 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.5"* %17)
  %19 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv(%"class.std::vector.5"* %17)
  %20 = sub i64 %18, %19
  %21 = load i64, i64* %13, align 8
  %22 = icmp ult i64 %20, %21
  %23 = load i32, i32* @x.453
  %24 = load i32, i32* @y.454
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %33

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i8*, i8** %14, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %32) #12
  unreachable

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv(%"class.std::vector.5"* %17)
  %35 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv(%"class.std::vector.5"* %17)
  store i64 %35, i64* %16, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %13)
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, %37
  store i64 %38, i64* %15, align 8
  %39 = load i64, i64* %15, align 8
  %40 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv(%"class.std::vector.5"* %17)
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %33
  %43 = load i64, i64* %15, align 8
  %44 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.5"* %17)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %64

; <label>:46:                                     ; preds = %42, %33
  %47 = load i32, i32* @x.453
  %48 = load i32, i32* @y.454
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %46, %originalBB10alteredBB
  %55 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.5"* %17)
  %56 = load i32, i32* @x.453
  %57 = load i32, i32* @y.454
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %66

; <label>:64:                                     ; preds = %42
  %65 = load i64, i64* %15, align 8
  br label %66

; <label>:66:                                     ; preds = %64, %originalBBpart212
  %67 = phi i64 [ %55, %originalBBpart212 ], [ %65, %64 ]
  ret i64 %67

originalBBalteredBB:                              ; preds = %originalBB, %3
  %68 = alloca %"class.std::vector.5"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i8*, align 8
  %71 = alloca i64, align 8
  %72 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %68, align 8
  store i64 %1, i64* %69, align 8
  store i8* %2, i8** %70, align 8
  %73 = load %"class.std::vector.5"*, %"class.std::vector.5"** %68, align 8
  %74 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.5"* %73)
  %75 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE4sizeEv(%"class.std::vector.5"* %73)
  %_ = sub i64 %74, %75
  %gen = mul i64 %_, %75
  %_1 = shl i64 %74, %75
  %_2 = sub i64 %74, %75
  %gen3 = mul i64 %_2, %75
  %_4 = sub i64 0, %74
  %gen5 = add i64 %_4, %75
  %_6 = sub i64 %74, %75
  %gen7 = mul i64 %_6, %75
  %_8 = shl i64 %74, %75
  %_9 = shl i64 %74, %75
  %76 = sub i64 %74, %75
  %77 = load i64, i64* %69, align 8
  %78 = icmp ult i64 %76, %77
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %46
  %79 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.5"* %17)
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %9 to %"class.std::allocator.7"*
  %11 = load i64, i64* %4, align 8
  %12 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E8allocateERS4_m(%"class.std::allocator.7"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi %"struct.SparseMatrixEZ<double>::Entry"* [ %12, %8 ], [ null, %13 ]
  %16 = load i32, i32* @x.455
  %17 = load i32, i32* @y.456
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %24 = load i32, i32* @x.455
  %25 = load i32, i32* @y.456
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<double>::Entry"* %15

originalBBalteredBB:                              ; preds = %originalBB, %14
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %12 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %13 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIdE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.SparseMatrixEZ<double>::Entry"* %9, %"struct.SparseMatrixEZ<double>::Entry"* %10, %"struct.SparseMatrixEZ<double>::Entry"* %11, %"class.std::allocator.7"* dereferenceable(1) %12)
  ret %"struct.SparseMatrixEZ<double>::Entry"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  call void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %7, %"struct.SparseMatrixEZ<double>::Entry"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.6"*, %"struct.SparseMatrixEZ<double>::Entry"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.461
  %5 = load i32, i32* @y.462
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.6"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %12, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %12, align 8
  %16 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %17 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %16, null
  %18 = load i32, i32* @x.461
  %19 = load i32, i32* @y.462
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %47

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.461
  %28 = load i32, i32* @y.462
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %35 to %"class.std::allocator.7"*
  %37 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %38 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.7"* dereferenceable(1) %36, %"struct.SparseMatrixEZ<double>::Entry"* %37, i64 %38)
  %39 = load i32, i32* @x.461
  %40 = load i32, i32* @y.462
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %48 = alloca %"struct.std::_Vector_base.6"*, align 8
  %49 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %50 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %48, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %49, align 8
  store i64 %2, i64* %50, align 8
  %51 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %48, align 8
  %52 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %49, align 8
  %53 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %52, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %54 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %54 to %"class.std::allocator.7"*
  %56 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %57 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.7"* dereferenceable(1) %55, %"struct.SparseMatrixEZ<double>::Entry"* %56, i64 %57)
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"*, %"struct.SparseMatrixEZ<double>::Entry"** dereferenceable(8)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.463
  %4 = load i32, i32* @y.464
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %11, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"** %1, %"struct.SparseMatrixEZ<double>::Entry"*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %13, i32 0, i32 0
  %15 = load %"struct.SparseMatrixEZ<double>::Entry"**, %"struct.SparseMatrixEZ<double>::Entry"*** %12, align 8
  %16 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %15, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %16, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  %17 = load i32, i32* @x.463
  %18 = load i32, i32* @y.464
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %26 = alloca %"struct.SparseMatrixEZ<double>::Entry"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %25, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"** %1, %"struct.SparseMatrixEZ<double>::Entry"*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %27, i32 0, i32 0
  %29 = load %"struct.SparseMatrixEZ<double>::Entry"**, %"struct.SparseMatrixEZ<double>::Entry"*** %26, align 8
  %30 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %30, %"struct.SparseMatrixEZ<double>::Entry"** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIdE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %12 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt18uninitialized_copyIPN14SparseMatrixEZIdE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %9, %"struct.SparseMatrixEZ<double>::Entry"* %10, %"struct.SparseMatrixEZ<double>::Entry"* %11)
  ret %"struct.SparseMatrixEZ<double>::Entry"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt18uninitialized_copyIPN14SparseMatrixEZIdE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %11 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN14SparseMatrixEZIdE5EntryES5_EET0_T_S7_S6_(%"struct.SparseMatrixEZ<double>::Entry"* %8, %"struct.SparseMatrixEZ<double>::Entry"* %9, %"struct.SparseMatrixEZ<double>::Entry"* %10)
  ret %"struct.SparseMatrixEZ<double>::Entry"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN14SparseMatrixEZIdE5EntryES5_EET0_T_S7_S6_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %10, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %originalBBpart24, %3
  %12 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %13 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %14 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %12, %13
  br i1 %14, label %15, label %84

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.469
  %17 = load i32, i32* @y.470
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %25 = load i32, i32* @x.469
  %26 = load i32, i32* @y.470
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %33 = invoke %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt11__addressofIN14SparseMatrixEZIdE5EntryEEPT_RS3_(%"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %24)
          to label %34 unwind label %58

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  invoke void @_ZSt10_ConstructIN14SparseMatrixEZIdE5EntryES2_EvPT_RKT0_(%"struct.SparseMatrixEZ<double>::Entry"* %33, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %35)
          to label %36 unwind label %58

; <label>:36:                                     ; preds = %34
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* @x.469
  %39 = load i32, i32* @y.470
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %47 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %46, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %47, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %48 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %49 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %48, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %49, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %50 = load i32, i32* @x.469
  %51 = load i32, i32* @y.470
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %11

; <label>:58:                                     ; preds = %34, %originalBBpart2
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %8, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %9, align 4
  br label %62

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %8, align 8
  %64 = call i8* @__cxa_begin_catch(i8* %63) #10
  %65 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %66 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %65, %"struct.SparseMatrixEZ<double>::Entry"* %66)
          to label %67 unwind label %102

; <label>:67:                                     ; preds = %62
  %68 = load i32, i32* @x.469
  %69 = load i32, i32* @y.470
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %67, %originalBB6alteredBB
  %76 = load i32, i32* @x.469
  %77 = load i32, i32* @y.470
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @__cxa_rethrow() #12
          to label %116 unwind label %102

; <label>:84:                                     ; preds = %11
  %85 = load i32, i32* @x.469
  %86 = load i32, i32* @y.470
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %84, %originalBB10alteredBB
  %93 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %94 = load i32, i32* @x.469
  %95 = load i32, i32* @y.470
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret %"struct.SparseMatrixEZ<double>::Entry"* %93

; <label>:102:                                    ; preds = %originalBBpart28, %62
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %8, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %106 unwind label %113

; <label>:106:                                    ; preds = %102
  br label %108
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:108:                                    ; preds = %106
  %109 = load i8*, i8** %8, align 8
  %110 = load i32, i32* %9, align 4
  %111 = insertvalue { i8*, i32 } undef, i8* %109, 0
  %112 = insertvalue { i8*, i32 } %111, i32 %110, 1
  resume { i8*, i32 } %112

; <label>:113:                                    ; preds = %102
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #9
  unreachable

; <label>:116:                                    ; preds = %originalBBpart28
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %15
  %117 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %118 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %119 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %118, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %119, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %120 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %121 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %120, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %121, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %67
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %84
  %122 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN14SparseMatrixEZIdE5EntryES2_EvPT_RKT0_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #3 comdat {
  %3 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %3, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %5 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %3, align 8
  %6 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.SparseMatrixEZ<double>::Entry"*
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %9 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %7 to i8*
  %10 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt11__addressofIN14SparseMatrixEZIdE5EntryEEPT_RS3_(%"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #3 comdat {
  %2 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %2, align 8
  %3 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %2, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #0 comdat {
  %3 = load i32, i32* @x.475
  %4 = load i32, i32* @y.476
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %11, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %13 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %11, align 8
  %14 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIdE5EntryEEEvT_S6_(%"struct.SparseMatrixEZ<double>::Entry"* %13, %"struct.SparseMatrixEZ<double>::Entry"* %14)
  %15 = load i32, i32* @x.475
  %16 = load i32, i32* @y.476
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %24 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %23, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %24, align 8
  %25 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %23, align 8
  %26 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIdE5EntryEEEvT_S6_(%"struct.SparseMatrixEZ<double>::Entry"* %25, %"struct.SparseMatrixEZ<double>::Entry"* %26)
  br label %originalBB
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIdE5EntryEEEvT_S6_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #3 comdat align 2 {
  %3 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %3, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt23__copy_move_backward_a2ILb0EPN14SparseMatrixEZIdE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %7 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %8 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %7)
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %9)
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %12 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %11)
  %13 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__copy_move_backward_aILb0EPN14SparseMatrixEZIdE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %8, %"struct.SparseMatrixEZ<double>::Entry"* %10, %"struct.SparseMatrixEZ<double>::Entry"* %12)
  %14 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_wrapIPN14SparseMatrixEZIdE5EntryEET_RKS4_S4_(%"struct.SparseMatrixEZ<double>::Entry"** dereferenceable(8) %6, %"struct.SparseMatrixEZ<double>::Entry"* %13)
  ret %"struct.SparseMatrixEZ<double>::Entry"* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"*) #3 comdat {
  %2 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %2, align 8
  %3 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %2, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_wrapIPN14SparseMatrixEZIdE5EntryEET_RKS4_S4_(%"struct.SparseMatrixEZ<double>::Entry"** dereferenceable(8), %"struct.SparseMatrixEZ<double>::Entry"*) #3 comdat {
  %3 = alloca %"struct.SparseMatrixEZ<double>::Entry"**, align 8
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"** %0, %"struct.SparseMatrixEZ<double>::Entry"*** %3, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %5 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt22__copy_move_backward_aILb0EPN14SparseMatrixEZIdE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #0 comdat {
  %4 = load i32, i32* @x.485
  %5 = load i32, i32* @y.486
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %14 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %15 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %17 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %18 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  %19 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIN14SparseMatrixEZIdE5EntryEEEPT_PKS6_S9_S7_(%"struct.SparseMatrixEZ<double>::Entry"* %16, %"struct.SparseMatrixEZ<double>::Entry"* %17, %"struct.SparseMatrixEZ<double>::Entry"* %18)
  %20 = load i32, i32* @x.485
  %21 = load i32, i32* @y.486
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<double>::Entry"* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %29 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %30 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %31 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %28, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %28, align 8
  %33 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  %34 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %30, align 8
  %35 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIN14SparseMatrixEZIdE5EntryEEEPT_PKS6_S9_S7_(%"struct.SparseMatrixEZ<double>::Entry"* %32, %"struct.SparseMatrixEZ<double>::Entry"* %33, %"struct.SparseMatrixEZ<double>::Entry"* %34)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIdE5EntryEET_S4_(%"struct.SparseMatrixEZ<double>::Entry"*) #3 comdat {
  %2 = load i32, i32* @x.487
  %3 = load i32, i32* @y.488
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %10, align 8
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %10, align 8
  %12 = load i32, i32* @x.487
  %13 = load i32, i32* @y.488
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<double>::Entry"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %20, align 8
  %21 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIN14SparseMatrixEZIdE5EntryEEEPT_PKS6_S9_S7_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*) #3 comdat align 2 {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca i64, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %10 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %8 to i64
  %11 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 16
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %42

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.489
  %18 = load i32, i32* @y.490
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %26 = load i64, i64* %7, align 8
  %27 = sub i64 0, %26
  %28 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %25, i64 %27
  %29 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %28 to i8*
  %30 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %31 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %30 to i8*
  %32 = load i64, i64* %7, align 8
  %33 = mul i64 16, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  %34 = load i32, i32* @x.489
  %35 = load i32, i32* @y.490
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %originalBBpart2, %3
  %43 = load i32, i32* @x.489
  %44 = load i32, i32* @y.490
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %42, %originalBB13alteredBB
  %51 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %52 = load i64, i64* %7, align 8
  %53 = sub i64 0, %52
  %54 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %51, i64 %53
  %55 = load i32, i32* @x.489
  %56 = load i32, i32* @y.490
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart229, label %originalBB13alteredBB

originalBBpart229:                                ; preds = %originalBB13
  ret %"struct.SparseMatrixEZ<double>::Entry"* %54

originalBBalteredBB:                              ; preds = %originalBB, %16
  %63 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %64 = load i64, i64* %7, align 8
  %_ = sub i64 0, %64
  %gen = mul i64 %_, %64
  %_1 = sub i64 0, 0
  %gen2 = add i64 %_1, %64
  %_3 = sub i64 0, %64
  %gen4 = mul i64 %_3, %64
  %65 = sub i64 0, %64
  %66 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %63, i64 %65
  %67 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %66 to i8*
  %68 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %69 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %68 to i8*
  %70 = load i64, i64* %7, align 8
  %_5 = sub i64 0, 16
  %gen6 = add i64 %_5, %70
  %_7 = sub i64 16, %70
  %gen8 = mul i64 %_7, %70
  %_9 = sub i64 0, 16
  %gen10 = add i64 %_9, %70
  %_11 = shl i64 16, %70
  %_12 = shl i64 16, %70
  %71 = mul i64 16, %70
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %67, i8* %69, i64 %71, i32 8, i1 false)
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %42
  %72 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %73 = load i64, i64* %7, align 8
  %_14 = sub i64 0, %73
  %gen15 = mul i64 %_14, %73
  %_16 = sub i64 0, 0
  %gen17 = add i64 %_16, %73
  %_18 = sub i64 0, %73
  %gen19 = mul i64 %_18, %73
  %_20 = shl i64 0, %73
  %_21 = shl i64 0, %73
  %_22 = sub i64 0, 0
  %gen23 = add i64 %_22, %73
  %_24 = sub i64 0, %73
  %gen25 = mul i64 %_24, %73
  %_26 = sub i64 0, 0
  %gen27 = add i64 %_26, %73
  %74 = sub i64 0, %73
  %75 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %72, i64 %74
  br label %originalBB13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPN14SparseMatrixEZIdE5EntryES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #3 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %32, %3
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %8, %9
  br i1 %10, label %11, label %35

; <label>:11:                                     ; preds = %7
  %12 = load i32, i32* @x.491
  %13 = load i32, i32* @y.492
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %21 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %22 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %21 to i8*
  %23 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = load i32, i32* @x.491
  %25 = load i32, i32* @y.492
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %34 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %33, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %34, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  br label %7

; <label>:35:                                     ; preds = %7
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %36 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %37 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %38 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %37 to i8*
  %39 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt20uninitialized_fill_nIPN14SparseMatrixEZIdE5EntryEmS2_ET_S4_T0_RKT1_(%"struct.SparseMatrixEZ<double>::Entry"*, i64, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %11 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN14SparseMatrixEZIdE5EntryEmS4_EET_S6_T0_RKT1_(%"struct.SparseMatrixEZ<double>::Entry"* %8, i64 %9, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %10)
  ret %"struct.SparseMatrixEZ<double>::Entry"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN14SparseMatrixEZIdE5EntryEmS4_EET_S6_T0_RKT1_(%"struct.SparseMatrixEZ<double>::Entry"*, i64, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"struct.SparseMatrixEZ<double>::Entry"* %0, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %10 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %10, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %originalBBpart24, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %83

; <label>:14:                                     ; preds = %11
  %15 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %16 = invoke %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt11__addressofIN14SparseMatrixEZIdE5EntryEEPT_RS3_(%"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %15)
          to label %17 unwind label %57

; <label>:17:                                     ; preds = %14
  %18 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  invoke void @_ZSt10_ConstructIN14SparseMatrixEZIdE5EntryES2_EvPT_RKT0_(%"struct.SparseMatrixEZ<double>::Entry"* %16, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %18)
          to label %19 unwind label %57

; <label>:19:                                     ; preds = %17
  %20 = load i32, i32* @x.495
  %21 = load i32, i32* @y.496
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32, i32* @x.495
  %29 = load i32, i32* @y.496
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* @x.495
  %38 = load i32, i32* @y.496
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i64, i64* %5, align 8
  %46 = add i64 %45, -1
  store i64 %46, i64* %5, align 8
  %47 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %48 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %47, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %48, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %49 = load i32, i32* @x.495
  %50 = load i32, i32* @y.496
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %11

; <label>:57:                                     ; preds = %17, %14
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %8, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %9, align 4
  br label %61

; <label>:61:                                     ; preds = %57
  %62 = load i8*, i8** %8, align 8
  %63 = call i8* @__cxa_begin_catch(i8* %62) #10
  %64 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %65 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<double>::Entry"* %64, %"struct.SparseMatrixEZ<double>::Entry"* %65)
          to label %66 unwind label %85

; <label>:66:                                     ; preds = %61
  %67 = load i32, i32* @x.495
  %68 = load i32, i32* @y.496
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = load i32, i32* @x.495
  %76 = load i32, i32* @y.496
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @__cxa_rethrow() #12
          to label %99 unwind label %85

; <label>:83:                                     ; preds = %11
  %84 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  ret %"struct.SparseMatrixEZ<double>::Entry"* %84

; <label>:85:                                     ; preds = %originalBBpart28, %61
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %8, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %89 unwind label %96

; <label>:89:                                     ; preds = %85
  br label %91
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:91:                                     ; preds = %89
  %92 = load i8*, i8** %8, align 8
  %93 = load i32, i32* %9, align 4
  %94 = insertvalue { i8*, i32 } undef, i8* %92, 0
  %95 = insertvalue { i8*, i32 } %94, i32 %93, 1
  resume { i8*, i32 } %95

; <label>:96:                                     ; preds = %85
  %97 = landingpad { i8*, i32 }
          catch i8* null
  %98 = extractvalue { i8*, i32 } %97, 0
  call void @__clang_call_terminate(i8* %98) #9
  unreachable

; <label>:99:                                     ; preds = %originalBBpart28
  %100 = load i32, i32* @x.495
  %101 = load i32, i32* @y.496
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %99, %originalBB10alteredBB
  %108 = load i32, i32* @x.495
  %109 = load i32, i32* @y.496
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %116 = load i64, i64* %5, align 8
  %_ = sub i64 0, %116
  %gen = add i64 %_, -1
  %117 = add i64 %116, -1
  store i64 %117, i64* %5, align 8
  %118 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  %119 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %118, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %119, %"struct.SparseMatrixEZ<double>::Entry"** %7, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %99
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %4)
  %6 = call i64 @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.7"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.7"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.499
  %3 = load i32, i32* @y.500
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.7"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %10, align 8
  store i64 576460752303423487, i64* %11, align 8
  %13 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E8max_sizeERKS4_(%"class.std::allocator.7"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.499
  %18 = load i32, i32* @y.500
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.7"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %25, align 8
  store i64 576460752303423487, i64* %26, align 8
  %28 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E8max_sizeERKS4_(%"class.std::allocator.7"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.501
  %3 = load i32, i32* @y.502
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %10, align 8
  %11 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %12 to %"class.std::allocator.7"*
  %14 = load i32, i32* @x.501
  %15 = load i32, i32* @y.502
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.7"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %22, align 8
  %23 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %24 to %"class.std::allocator.7"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E8max_sizeERKS4_(%"class.std::allocator.7"* dereferenceable(1)) #3 comdat align 2 {
  %2 = load i32, i32* @x.503
  %3 = load i32, i32* @y.504
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %10, align 8
  %11 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %10, align 8
  %12 = bitcast %"class.std::allocator.7"* %11 to %"class.__gnu_cxx::new_allocator.8"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %12) #10
  %14 = load i32, i32* @x.503
  %15 = load i32, i32* @y.504
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %22, align 8
  %23 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %22, align 8
  %24 = bitcast %"class.std::allocator.7"* %23 to %"class.__gnu_cxx::new_allocator.8"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %24) #10
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.505
  %3 = load i32, i32* @y.506
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %10, align 8
  %12 = load i32, i32* @x.505
  %13 = load i32, i32* @y.506
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 576460752303423487

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E8allocateERS4_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.507
  %4 = load i32, i32* @y.508
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.7"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %11, align 8
  %14 = bitcast %"class.std::allocator.7"* %13 to %"class.__gnu_cxx::new_allocator.8"*
  %15 = load i64, i64* %12, align 8
  %16 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.507
  %18 = load i32, i32* @y.508
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<double>::Entry"* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.7"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %25, align 8
  %28 = bitcast %"class.std::allocator.7"* %27 to %"class.__gnu_cxx::new_allocator.8"*
  %29 = load i64, i64* %26, align 8
  %30 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<double>::Entry"* @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %7) #10
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.509
  %14 = load i32, i32* @y.510
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 16
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to %"struct.SparseMatrixEZ<double>::Entry"*
  %25 = load i32, i32* @x.509
  %26 = load i32, i32* @y.510
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<double>::Entry"* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = sub i64 0, %33
  %gen = add i64 %_, 16
  %_1 = shl i64 %33, 16
  %_2 = sub i64 0, %33
  %gen3 = add i64 %_2, 16
  %_4 = sub i64 %33, 16
  %gen5 = mul i64 %_4, 16
  %34 = mul i64 %33, 16
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to %"struct.SparseMatrixEZ<double>::Entry"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.7"* dereferenceable(1), %"struct.SparseMatrixEZ<double>::Entry"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.8"* %8, %"struct.SparseMatrixEZ<double>::Entry"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.8"*, %"struct.SparseMatrixEZ<double>::Entry"*, i64) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %9 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %8 to i8*
  call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_(%"class.std::allocator.7"* dereferenceable(1), %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat align 2 {
  %4 = load i32, i32* @x.515
  %5 = load i32, i32* @y.516
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.7"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %14 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %12, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  %15 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %12, align 8
  %16 = bitcast %"class.std::allocator.7"* %15 to %"class.__gnu_cxx::new_allocator.8"*
  %17 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %18 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE9constructEPS3_RKS3_(%"class.__gnu_cxx::new_allocator.8"* %16, %"struct.SparseMatrixEZ<double>::Entry"* %17, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %18)
  %19 = load i32, i32* @x.515
  %20 = load i32, i32* @y.516
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.7"*, align 8
  %28 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %29 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %27, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %28, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  %30 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %27, align 8
  %31 = bitcast %"class.std::allocator.7"* %30 to %"class.__gnu_cxx::new_allocator.8"*
  %32 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %28, align 8
  %33 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE9constructEPS3_RKS3_(%"class.__gnu_cxx::new_allocator.8"* %31, %"struct.SparseMatrixEZ<double>::Entry"* %32, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %33)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(%"class.std::vector.5"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %9 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %16, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %18 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.5"* %17, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0))
  store i64 %18, i64* %7, align 8
  %19 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %20 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %21, i32 0, i32 0
  %23 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %22, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %23, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %24 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %24, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %25 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %26, i32 0, i32 1
  %28 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %27, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %28, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %29 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIdE5EntryESaIS2_EE5beginEv(%"class.std::vector.5"* %17)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %29, %"struct.SparseMatrixEZ<double>::Entry"** %30, align 8
  %31 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %11)
  store i64 %31, i64* %10, align 8
  %32 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %33 = load i64, i64* %7, align 8
  %34 = call %"struct.SparseMatrixEZ<double>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %32, i64 %33)
  store %"struct.SparseMatrixEZ<double>::Entry"* %34, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %35 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %35, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %36 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %37 to %"class.std::allocator.7"*
  %39 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %40 = load i64, i64* %10, align 8
  %41 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %39, i64 %40
  %42 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_(%"class.std::allocator.7"* dereferenceable(1) %38, %"struct.SparseMatrixEZ<double>::Entry"* %41, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16) %42)
          to label %43 unwind label %98

; <label>:43:                                     ; preds = %3
  store %"struct.SparseMatrixEZ<double>::Entry"* null, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %44 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %45 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %4)
          to label %46 unwind label %98

; <label>:46:                                     ; preds = %43
  %47 = load i32, i32* @x.517
  %48 = load i32, i32* @y.518
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %46, %originalBBalteredBB
  %55 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %45, align 8
  %56 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %57 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %58 = load i32, i32* @x.517
  %59 = load i32, i32* @y.518
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %66 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %57)
          to label %67 unwind label %98

; <label>:67:                                     ; preds = %originalBBpart2
  %68 = invoke %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"* %44, %"struct.SparseMatrixEZ<double>::Entry"* %55, %"struct.SparseMatrixEZ<double>::Entry"* %56, %"class.std::allocator.7"* dereferenceable(1) %66)
          to label %69 unwind label %98

; <label>:69:                                     ; preds = %67
  store %"struct.SparseMatrixEZ<double>::Entry"* %68, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %70 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %71 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %70, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %71, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %72 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<double>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIdE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %4)
          to label %73 unwind label %98

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.517
  %75 = load i32, i32* @y.518
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %73, %originalBB1alteredBB
  %82 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %72, align 8
  %83 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %84 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %85 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %86 = load i32, i32* @x.517
  %87 = load i32, i32* @y.518
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %94 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %85)
          to label %95 unwind label %98

; <label>:95:                                     ; preds = %originalBBpart24
  %96 = invoke %"struct.SparseMatrixEZ<double>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIdE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<double>::Entry"* %82, %"struct.SparseMatrixEZ<double>::Entry"* %83, %"struct.SparseMatrixEZ<double>::Entry"* %84, %"class.std::allocator.7"* dereferenceable(1) %94)
          to label %97 unwind label %98

; <label>:97:                                     ; preds = %95
  store %"struct.SparseMatrixEZ<double>::Entry"* %96, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  br label %212

; <label>:98:                                     ; preds = %95, %originalBBpart24, %69, %67, %originalBBpart2, %43, %3
  %99 = load i32, i32* @x.517
  %100 = load i32, i32* @y.518
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %98, %originalBB6alteredBB
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %14, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %15, align 4
  %110 = load i32, i32* @x.517
  %111 = load i32, i32* @y.518
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %118

; <label>:118:                                    ; preds = %originalBBpart28
  %119 = load i8*, i8** %14, align 8
  %120 = call i8* @__cxa_begin_catch(i8* %119) #10
  %121 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %122 = icmp ne %"struct.SparseMatrixEZ<double>::Entry"* %121, null
  br i1 %122, label %151, label %123

; <label>:123:                                    ; preds = %118
  %124 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %124, i32 0, i32 0
  %126 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %125 to %"class.std::allocator.7"*
  %127 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %128 = load i64, i64* %10, align 8
  %129 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %127, i64 %128
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E7destroyERS4_PS3_(%"class.std::allocator.7"* dereferenceable(1) %126, %"struct.SparseMatrixEZ<double>::Entry"* %129)
          to label %130 unwind label %131

; <label>:130:                                    ; preds = %123
  br label %174

; <label>:131:                                    ; preds = %originalBBpart220, %174, %172, %originalBBpart216, %123
  %132 = load i32, i32* @x.517
  %133 = load i32, i32* @y.518
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %131, %originalBB10alteredBB
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %14, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %15, align 4
  %143 = load i32, i32* @x.517
  %144 = load i32, i32* @y.518
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @__cxa_end_catch()
          to label %195 unwind label %267

; <label>:151:                                    ; preds = %118
  %152 = load i32, i32* @x.517
  %153 = load i32, i32* @y.518
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %151, %originalBB14alteredBB
  %160 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %161 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %162 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %163 = load i32, i32* @x.517
  %164 = load i32, i32* @y.518
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %171 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %162)
          to label %172 unwind label %131

; <label>:172:                                    ; preds = %originalBBpart216
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<double>::Entry"* %160, %"struct.SparseMatrixEZ<double>::Entry"* %161, %"class.std::allocator.7"* dereferenceable(1) %171)
          to label %173 unwind label %131

; <label>:173:                                    ; preds = %172
  br label %174

; <label>:174:                                    ; preds = %173, %130
  %175 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %176 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %177 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.6"* %175, %"struct.SparseMatrixEZ<double>::Entry"* %176, i64 %177)
          to label %178 unwind label %131

; <label>:178:                                    ; preds = %174
  %179 = load i32, i32* @x.517
  %180 = load i32, i32* @y.518
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %178, %originalBB18alteredBB
  %187 = load i32, i32* @x.517
  %188 = load i32, i32* @y.518
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @__cxa_rethrow() #12
          to label %270 unwind label %131

; <label>:195:                                    ; preds = %originalBBpart212
  %196 = load i32, i32* @x.517
  %197 = load i32, i32* @y.518
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %195, %originalBB22alteredBB
  %204 = load i32, i32* @x.517
  %205 = load i32, i32* @y.518
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %246

; <label>:212:                                    ; preds = %97
  %213 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %214 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %215 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %216 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %215)
  call void @_ZSt8_DestroyIPN14SparseMatrixEZIdE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<double>::Entry"* %213, %"struct.SparseMatrixEZ<double>::Entry"* %214, %"class.std::allocator.7"* dereferenceable(1) %216)
  %217 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %218 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %219 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %220 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %219, i32 0, i32 0
  %221 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %220 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %221, i32 0, i32 2
  %223 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %222, align 8
  %224 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %8, align 8
  %225 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %223 to i64
  %226 = ptrtoint %"struct.SparseMatrixEZ<double>::Entry"* %224 to i64
  %227 = sub i64 %225, %226
  %228 = sdiv exact i64 %227, 16
  call void @_ZNSt12_Vector_baseIN14SparseMatrixEZIdE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.6"* %217, %"struct.SparseMatrixEZ<double>::Entry"* %218, i64 %228)
  %229 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %230 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %230, i32 0, i32 0
  %232 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %231 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %232, i32 0, i32 0
  store %"struct.SparseMatrixEZ<double>::Entry"* %229, %"struct.SparseMatrixEZ<double>::Entry"** %233, align 8
  %234 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %235 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %236 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %235, i32 0, i32 0
  %237 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %236 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %238 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %237, i32 0, i32 1
  store %"struct.SparseMatrixEZ<double>::Entry"* %234, %"struct.SparseMatrixEZ<double>::Entry"** %238, align 8
  %239 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %240 = load i64, i64* %7, align 8
  %241 = getelementptr inbounds %"struct.SparseMatrixEZ<double>::Entry", %"struct.SparseMatrixEZ<double>::Entry"* %239, i64 %240
  %242 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %242, i32 0, i32 0
  %244 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl"* %243 to %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<double>::Entry, std::allocator<SparseMatrixEZ<double>::Entry> >::_Vector_impl_data"* %244, i32 0, i32 2
  store %"struct.SparseMatrixEZ<double>::Entry"* %241, %"struct.SparseMatrixEZ<double>::Entry"** %245, align 8
  ret void

; <label>:246:                                    ; preds = %originalBBpart224
  %247 = load i32, i32* @x.517
  %248 = load i32, i32* @y.518
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %246, %originalBB26alteredBB
  %255 = load i8*, i8** %14, align 8
  %256 = load i32, i32* %15, align 4
  %257 = insertvalue { i8*, i32 } undef, i8* %255, 0
  %258 = insertvalue { i8*, i32 } %257, i32 %256, 1
  %259 = load i32, i32* @x.517
  %260 = load i32, i32* @y.518
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  resume { i8*, i32 } %258

; <label>:267:                                    ; preds = %originalBBpart212
  %268 = landingpad { i8*, i32 }
          catch i8* null
  %269 = extractvalue { i8*, i32 } %268, 0
  call void @__clang_call_terminate(i8* %269) #9
  unreachable

; <label>:270:                                    ; preds = %originalBBpart220
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %46
  %271 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %45, align 8
  %272 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %273 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %73
  %274 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %72, align 8
  %275 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %9, align 8
  %276 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %277 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %98
  %278 = landingpad { i8*, i32 }
          catch i8* null
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %14, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %15, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %131
  %281 = landingpad { i8*, i32 }
          cleanup
  %282 = extractvalue { i8*, i32 } %281, 0
  store i8* %282, i8** %14, align 8
  %283 = extractvalue { i8*, i32 } %281, 1
  store i32 %283, i32* %15, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %151
  %284 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %285 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %13, align 8
  %286 = bitcast %"class.std::vector.5"* %17 to %"struct.std::_Vector_base.6"*
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %178
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %195
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %246
  %287 = load i8*, i8** %14, align 8
  %288 = load i32, i32* %15, align 4
  %289 = insertvalue { i8*, i32 } undef, i8* %287, 0
  %290 = insertvalue { i8*, i32 } %289, i32 %288, 1
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE9constructEPS3_RKS3_(%"class.__gnu_cxx::new_allocator.8"*, %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"* dereferenceable(16)) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %2, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %5, align 8
  %9 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.SparseMatrixEZ<double>::Entry"*
  %11 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %6, align 8
  %12 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %10 to i8*
  %13 = bitcast %"struct.SparseMatrixEZ<double>::Entry"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIdE5EntryEES3_E7destroyERS4_PS3_(%"class.std::allocator.7"* dereferenceable(1), %"struct.SparseMatrixEZ<double>::Entry"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE7destroyEPS3_(%"class.__gnu_cxx::new_allocator.8"* %6, %"struct.SparseMatrixEZ<double>::Entry"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIdE5EntryEE7destroyEPS3_(%"class.__gnu_cxx::new_allocator.8"*, %"struct.SparseMatrixEZ<double>::Entry"*) #3 comdat align 2 {
  %3 = load i32, i32* @x.523
  %4 = load i32, i32* @y.524
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %12 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %11, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %11, align 8
  %14 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %12, align 8
  %15 = load i32, i32* @x.523
  %16 = load i32, i32* @y.524
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %24 = alloca %"struct.SparseMatrixEZ<double>::Entry"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %23, align 8
  store %"struct.SparseMatrixEZ<double>::Entry"* %1, %"struct.SparseMatrixEZ<double>::Entry"** %24, align 8
  %25 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %23, align 8
  %26 = load %"struct.SparseMatrixEZ<double>::Entry"*, %"struct.SparseMatrixEZ<double>::Entry"** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E14SparseMatrixEZIfEEC2Ev(%class.TableBase.13*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.525
  %3 = load i32, i32* @y.526
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.13*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TableBase.13* %0, %class.TableBase.13** %10, align 8
  %13 = load %class.TableBase.13*, %class.TableBase.13** %10, align 8
  %14 = bitcast %class.TableBase.13* %13 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %14)
  %15 = bitcast %class.TableBase.13* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E14SparseMatrixEZIfEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %13, i32 0, i32 1
  store %class.SparseMatrixEZ.14* null, %class.SparseMatrixEZ.14** %16, align 8
  %17 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %13, i32 0, i32 2
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %13, i32 0, i32 3
  %19 = load i32, i32* @x.525
  %20 = load i32, i32* @y.526
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %18)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %originalBBpart2
  ret void

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.525
  %30 = load i32, i32* @y.526
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %11, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %12, align 4
  %40 = bitcast %class.TableBase.13* %13 to %class.Subscriptor*
  %41 = load i32, i32* @x.525
  %42 = load i32, i32* @y.526
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %40)
          to label %49 unwind label %55

; <label>:49:                                     ; preds = %originalBBpart24
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = load i8*, i8** %11, align 8
  %52 = load i32, i32* %12, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

; <label>:55:                                     ; preds = %originalBBpart24
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %58 = alloca %class.TableBase.13*, align 8
  %59 = alloca i8*
  %60 = alloca i32
  store %class.TableBase.13* %0, %class.TableBase.13** %58, align 8
  %61 = load %class.TableBase.13*, %class.TableBase.13** %58, align 8
  %62 = bitcast %class.TableBase.13* %61 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %62)
  %63 = bitcast %class.TableBase.13* %61 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E14SparseMatrixEZIfEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %61, i32 0, i32 1
  store %class.SparseMatrixEZ.14* null, %class.SparseMatrixEZ.14** %64, align 8
  %65 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %61, i32 0, i32 2
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %61, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %11, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %12, align 4
  %70 = bitcast %class.TableBase.13* %13 to %class.Subscriptor*
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2E14SparseMatrixEZIfEE6n_colsEv(%class.Table.12*) #3 comdat align 2 {
  %2 = alloca %class.Table.12*, align 8
  store %class.Table.12* %0, %class.Table.12** %2, align 8
  %3 = load %class.Table.12*, %class.Table.12** %2, align 8
  %4 = bitcast %class.Table.12* %3 to %class.TableBase.13*
  %5 = getelementptr inbounds %class.TableBase.13, %class.TableBase.13* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor.28"*, %class.TableBase.13* dereferenceable(48), %class.SparseMatrixEZ.14*) unnamed_addr #3 comdat align 2 {
  %4 = load i32, i32* @x.529
  %5 = load i32, i32* @y.530
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::TableBaseAccessors::Accessor.28"*, align 8
  %13 = alloca %class.TableBase.13*, align 8
  %14 = alloca %class.SparseMatrixEZ.14*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.28"* %0, %"class.internal::TableBaseAccessors::Accessor.28"** %12, align 8
  store %class.TableBase.13* %1, %class.TableBase.13** %13, align 8
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %14, align 8
  %15 = load %"class.internal::TableBaseAccessors::Accessor.28"*, %"class.internal::TableBaseAccessors::Accessor.28"** %12, align 8
  %16 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.28", %"class.internal::TableBaseAccessors::Accessor.28"* %15, i32 0, i32 0
  %17 = load %class.TableBase.13*, %class.TableBase.13** %13, align 8
  store %class.TableBase.13* %17, %class.TableBase.13** %16, align 8
  %18 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.28", %"class.internal::TableBaseAccessors::Accessor.28"* %15, i32 0, i32 1
  %19 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %14, align 8
  store %class.SparseMatrixEZ.14* %19, %class.SparseMatrixEZ.14** %18, align 8
  %20 = load i32, i32* @x.529
  %21 = load i32, i32* @y.530
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"class.internal::TableBaseAccessors::Accessor.28"*, align 8
  %29 = alloca %class.TableBase.13*, align 8
  %30 = alloca %class.SparseMatrixEZ.14*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.28"* %0, %"class.internal::TableBaseAccessors::Accessor.28"** %28, align 8
  store %class.TableBase.13* %1, %class.TableBase.13** %29, align 8
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %30, align 8
  %31 = load %"class.internal::TableBaseAccessors::Accessor.28"*, %"class.internal::TableBaseAccessors::Accessor.28"** %28, align 8
  %32 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.28", %"class.internal::TableBaseAccessors::Accessor.28"* %31, i32 0, i32 0
  %33 = load %class.TableBase.13*, %class.TableBase.13** %29, align 8
  store %class.TableBase.13* %33, %class.TableBase.13** %32, align 8
  %34 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.28", %"class.internal::TableBaseAccessors::Accessor.28"* %31, i32 0, i32 1
  %35 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %30, align 8
  store %class.SparseMatrixEZ.14* %35, %class.SparseMatrixEZ.14** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.17"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.17"*, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %2, align 8
  %3 = load %"class.std::vector.17"*, %"class.std::vector.17"** %2, align 8
  %4 = bitcast %"class.std::vector.17"* %3 to %"struct.std::_Vector_base.18"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %7, align 8
  %9 = bitcast %"class.std::vector.17"* %3 to %"struct.std::_Vector_base.18"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %12, align 8
  %14 = ptrtoint %"struct.SparseMatrixEZ<float>::RowInfo"* %8 to i64
  %15 = ptrtoint %"struct.SparseMatrixEZ<float>::RowInfo"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E14SparseMatrixEZIfELb1ELj1EEC2ERK9TableBaseILi2ES3_EPKS3_(%"class.internal::TableBaseAccessors::Accessor.29"*, %class.TableBase.13* dereferenceable(48), %class.SparseMatrixEZ.14*) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.internal::TableBaseAccessors::Accessor.29"*, align 8
  %5 = alloca %class.TableBase.13*, align 8
  %6 = alloca %class.SparseMatrixEZ.14*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.29"* %0, %"class.internal::TableBaseAccessors::Accessor.29"** %4, align 8
  store %class.TableBase.13* %1, %class.TableBase.13** %5, align 8
  store %class.SparseMatrixEZ.14* %2, %class.SparseMatrixEZ.14** %6, align 8
  %7 = load %"class.internal::TableBaseAccessors::Accessor.29"*, %"class.internal::TableBaseAccessors::Accessor.29"** %4, align 8
  %8 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.29", %"class.internal::TableBaseAccessors::Accessor.29"* %7, i32 0, i32 0
  %9 = load %class.TableBase.13*, %class.TableBase.13** %5, align 8
  store %class.TableBase.13* %9, %class.TableBase.13** %8, align 8
  %10 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.29", %"class.internal::TableBaseAccessors::Accessor.29"* %7, i32 0, i32 1
  %11 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %6, align 8
  store %class.SparseMatrixEZ.14* %11, %class.SparseMatrixEZ.14** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZN14SparseMatrixEZIfE6locateEjj(%class.SparseMatrixEZ.14*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.535
  %5 = load i32, i32* @y.536
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %13 = alloca %class.SparseMatrixEZ.14*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"struct.SparseMatrixEZ<float>::RowInfo"*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  %20 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %13, align 8
  %21 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %20, i32 0, i32 3
  %22 = load i32, i32* %14, align 4
  %23 = zext i32 %22 to i64
  %24 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm(%"class.std::vector.17"* %21, i64 %23)
  store %"struct.SparseMatrixEZ<float>::RowInfo"* %24, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %25 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %26 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %29 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %28, i32 0, i32 1
  %30 = load i16, i16* %29, align 4
  %31 = zext i16 %30 to i32
  %32 = add i32 %27, %31
  store i32 %32, i32* %17, align 4
  %33 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %34 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %18, align 4
  %36 = load i32, i32* @x.535
  %37 = load i32, i32* @y.536
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %44

; <label>:44:                                     ; preds = %originalBBpart229, %originalBBpart2
  %45 = load i32, i32* %18, align 4
  %46 = load i32, i32* %17, align 4
  %47 = icmp ult i32 %45, %46
  br i1 %47, label %48, label %118

; <label>:48:                                     ; preds = %44
  %49 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %20, i32 0, i32 4
  %50 = load i32, i32* %18, align 4
  %51 = zext i32 %50 to i64
  %52 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %49, i64 %51)
  store %"struct.SparseMatrixEZ<float>::Entry"* %52, %"struct.SparseMatrixEZ<float>::Entry"** %19, align 8
  %53 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %19, align 8
  %54 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %15, align 4
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %48
  %59 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %19, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %59, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  br label %135

; <label>:60:                                     ; preds = %48
  %61 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %19, align 8
  %62 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %82

; <label>:65:                                     ; preds = %60
  %66 = load i32, i32* @x.535
  %67 = load i32, i32* @y.536
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  store %"struct.SparseMatrixEZ<float>::Entry"* null, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %74 = load i32, i32* @x.535
  %75 = load i32, i32* @y.536
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %135

; <label>:82:                                     ; preds = %60
  %83 = load i32, i32* @x.535
  %84 = load i32, i32* @y.536
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = load i32, i32* @x.535
  %92 = load i32, i32* @y.536
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %99

; <label>:99:                                     ; preds = %originalBBpart212
  %100 = load i32, i32* @x.535
  %101 = load i32, i32* @y.536
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %99, %originalBB14alteredBB
  %108 = load i32, i32* %18, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %18, align 4
  %110 = load i32, i32* @x.535
  %111 = load i32, i32* @y.536
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart229, label %originalBB14alteredBB

originalBBpart229:                                ; preds = %originalBB14
  br label %44

; <label>:118:                                    ; preds = %44
  %119 = load i32, i32* @x.535
  %120 = load i32, i32* @y.536
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %118, %originalBB31alteredBB
  store %"struct.SparseMatrixEZ<float>::Entry"* null, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %127 = load i32, i32* @x.535
  %128 = load i32, i32* @y.536
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %135

; <label>:135:                                    ; preds = %originalBBpart233, %originalBBpart28, %58
  %136 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %136

originalBBalteredBB:                              ; preds = %originalBB, %3
  %137 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %138 = alloca %class.SparseMatrixEZ.14*, align 8
  %139 = alloca i32, align 4
  %140 = alloca i32, align 4
  %141 = alloca %"struct.SparseMatrixEZ<float>::RowInfo"*, align 8
  %142 = alloca i32, align 4
  %143 = alloca i32, align 4
  %144 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %138, align 8
  store i32 %1, i32* %139, align 4
  store i32 %2, i32* %140, align 4
  %145 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %138, align 8
  %146 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %145, i32 0, i32 3
  %147 = load i32, i32* %139, align 4
  %148 = zext i32 %147 to i64
  %149 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm(%"class.std::vector.17"* %146, i64 %148)
  store %"struct.SparseMatrixEZ<float>::RowInfo"* %149, %"struct.SparseMatrixEZ<float>::RowInfo"** %141, align 8
  %150 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %141, align 8
  %151 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %150, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %141, align 8
  %154 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %153, i32 0, i32 1
  %155 = load i16, i16* %154, align 4
  %156 = zext i16 %155 to i32
  %_ = sub i32 0, %152
  %gen = add i32 %_, %156
  %_1 = sub i32 %152, %156
  %gen2 = mul i32 %_1, %156
  %_3 = shl i32 %152, %156
  %_4 = sub i32 0, %152
  %gen5 = add i32 %_4, %156
  %157 = add i32 %152, %156
  store i32 %157, i32* %142, align 4
  %158 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %141, align 8
  %159 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %158, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %143, align 4
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  store %"struct.SparseMatrixEZ<float>::Entry"* null, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %99
  %161 = load i32, i32* %18, align 4
  %_15 = sub i32 0, %161
  %gen16 = add i32 %_15, 1
  %_17 = sub i32 0, %161
  %gen18 = add i32 %_17, 1
  %_19 = sub i32 %161, 1
  %gen20 = mul i32 %_19, 1
  %_21 = shl i32 %161, 1
  %_22 = sub i32 0, %161
  %gen23 = add i32 %_22, 1
  %_24 = sub i32 0, %161
  %gen25 = add i32 %_24, 1
  %_26 = sub i32 0, %161
  %gen27 = add i32 %_26, 1
  %162 = add i32 %161, 1
  store i32 %162, i32* %18, align 4
  br label %originalBB14

originalBB31alteredBB:                            ; preds = %originalBB31, %118
  store %"struct.SparseMatrixEZ<float>::Entry"* null, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  br label %originalBB31
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZN14SparseMatrixEZIfE8allocateEjj(%class.SparseMatrixEZ.14*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.537
  %5 = load i32, i32* @y.538
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %13 = alloca %class.SparseMatrixEZ.14*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"struct.SparseMatrixEZ<float>::RowInfo"*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %21 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %22 = alloca i32, align 4
  %23 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %24 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %25 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %26 = alloca i32, align 4
  %27 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  %28 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %13, align 8
  %29 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 3
  %30 = load i32, i32* %14, align 4
  %31 = zext i32 %30 to i64
  %32 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm(%"class.std::vector.17"* %29, i64 %31)
  store %"struct.SparseMatrixEZ<float>::RowInfo"* %32, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %33 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %34 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %37 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %36, i32 0, i32 1
  %38 = load i16, i16* %37, align 4
  %39 = zext i16 %38 to i32
  %40 = add i32 %35, %39
  store i32 %40, i32* %17, align 4
  %41 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %42 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %18, align 4
  %44 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %45 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %44, i32 0, i32 2
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = icmp ne i32 %47, 65535
  %49 = load i32, i32* @x.537
  %50 = load i32, i32* @y.538
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %48, label %57, label %68

; <label>:57:                                     ; preds = %originalBBpart2
  %58 = load i32, i32* %15, align 4
  %59 = load i32, i32* %14, align 4
  %60 = icmp uge i32 %58, %59
  br i1 %60, label %61, label %68

; <label>:61:                                     ; preds = %57
  %62 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %63 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %62, i32 0, i32 2
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = load i32, i32* %18, align 4
  %67 = add i32 %66, %65
  store i32 %67, i32* %18, align 4
  br label %68

; <label>:68:                                     ; preds = %61, %57, %originalBBpart2
  br label %69

; <label>:69:                                     ; preds = %116, %68
  %70 = load i32, i32* %18, align 4
  %71 = load i32, i32* %17, align 4
  %72 = icmp ult i32 %70, %71
  br i1 %72, label %73, label %98

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.537
  %75 = load i32, i32* @y.538
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %73, %originalBB9alteredBB
  %82 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %83 = load i32, i32* %18, align 4
  %84 = zext i32 %83 to i64
  %85 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %82, i64 %84)
  %86 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %15, align 4
  %89 = icmp ult i32 %87, %88
  %90 = load i32, i32* @x.537
  %91 = load i32, i32* @y.538
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br label %98

; <label>:98:                                     ; preds = %originalBBpart211, %69
  %99 = phi i1 [ false, %69 ], [ %89, %originalBBpart211 ]
  %100 = load i32, i32* @x.537
  %101 = load i32, i32* @y.538
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %98, %originalBB13alteredBB
  %108 = load i32, i32* @x.537
  %109 = load i32, i32* @y.538
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br i1 %99, label %116, label %119

; <label>:116:                                    ; preds = %originalBBpart215
  %117 = load i32, i32* %18, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %18, align 4
  br label %69

; <label>:119:                                    ; preds = %originalBBpart215
  %120 = load i32, i32* %18, align 4
  %121 = load i32, i32* %17, align 4
  %122 = icmp ne i32 %120, %121
  br i1 %122, label %123, label %137

; <label>:123:                                    ; preds = %119
  %124 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %125 = load i32, i32* %18, align 4
  %126 = zext i32 %125 to i64
  %127 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %124, i64 %126)
  %128 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %127, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = load i32, i32* %15, align 4
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %132, label %137

; <label>:132:                                    ; preds = %123
  %133 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %134 = load i32, i32* %18, align 4
  %135 = zext i32 %134 to i64
  %136 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %133, i64 %135)
  store %"struct.SparseMatrixEZ<float>::Entry"* %136, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  br label %380

; <label>:137:                                    ; preds = %123, %119
  %138 = load i32, i32* %14, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 3
  %141 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.17"* %140)
  %142 = sub i64 %141, 1
  %143 = icmp ne i64 %139, %142
  br i1 %143, label %144, label %207

; <label>:144:                                    ; preds = %137
  %145 = load i32, i32* %17, align 4
  %146 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 3
  %147 = load i32, i32* %14, align 4
  %148 = add i32 %147, 1
  %149 = zext i32 %148 to i64
  %150 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm(%"class.std::vector.17"* %146, i64 %149)
  %151 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %150, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp uge i32 %145, %152
  br i1 %153, label %154, label %206

; <label>:154:                                    ; preds = %144
  %155 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %156 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %157 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE5beginEv(%"class.std::vector.22"* %156)
  %158 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %20, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %157, %"struct.SparseMatrixEZ<float>::Entry"** %158, align 8
  %159 = load i32, i32* %17, align 4
  %160 = zext i32 %159 to i64
  %161 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %20, i64 %160)
  %162 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %19, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %161, %"struct.SparseMatrixEZ<float>::Entry"** %162, align 8
  %163 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 5
  %164 = load i32, i32* %163, align 8
  %165 = zext i32 %164 to i64
  call void @_ZN14SparseMatrixEZIfE5EntryC2Ev(%"struct.SparseMatrixEZ<float>::Entry"* %21)
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %19, i32 0, i32 0
  %167 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %166, align 8
  call void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.22"* %155, %"struct.SparseMatrixEZ<float>::Entry"* %167, i64 %165, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %21)
  %168 = load i32, i32* %14, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %22, align 4
  br label %170

; <label>:170:                                    ; preds = %186, %154
  %171 = load i32, i32* %22, align 4
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 3
  %174 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EE4sizeEv(%"class.std::vector.17"* %173)
  %175 = icmp ult i64 %172, %174
  br i1 %175, label %176, label %189

; <label>:176:                                    ; preds = %170
  %177 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 5
  %178 = load i32, i32* %177, align 8
  %179 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 3
  %180 = load i32, i32* %22, align 4
  %181 = zext i32 %180 to i64
  %182 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm(%"class.std::vector.17"* %179, i64 %181)
  %183 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %182, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = add i32 %184, %178
  store i32 %185, i32* %183, align 4
  br label %186

; <label>:186:                                    ; preds = %176
  %187 = load i32, i32* %22, align 4
  %188 = add i32 %187, 1
  store i32 %188, i32* %22, align 4
  br label %170

; <label>:189:                                    ; preds = %170
  %190 = load i32, i32* @x.537
  %191 = load i32, i32* @y.538
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %189, %originalBB17alteredBB
  %198 = load i32, i32* @x.537
  %199 = load i32, i32* @y.538
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %206

; <label>:206:                                    ; preds = %originalBBpart219, %144
  br label %248

; <label>:207:                                    ; preds = %137
  %208 = load i32, i32* @x.537
  %209 = load i32, i32* @y.538
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %207, %originalBB21alteredBB
  %216 = load i32, i32* %17, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %219 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %218)
  %220 = icmp uge i64 %217, %219
  %221 = load i32, i32* @x.537
  %222 = load i32, i32* @y.538
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %220, label %229, label %231

; <label>:229:                                    ; preds = %originalBBpart223
  %230 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  call void @_ZN14SparseMatrixEZIfE5EntryC2Ev(%"struct.SparseMatrixEZ<float>::Entry"* %23)
  call void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE9push_backERKS2_(%"class.std::vector.22"* %230, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %23)
  br label %231

; <label>:231:                                    ; preds = %229, %originalBBpart223
  %232 = load i32, i32* @x.537
  %233 = load i32, i32* @y.538
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %231, %originalBB25alteredBB
  %240 = load i32, i32* @x.537
  %241 = load i32, i32* @y.538
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %248

; <label>:248:                                    ; preds = %originalBBpart227, %206
  %249 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %250 = load i32, i32* %18, align 4
  %251 = zext i32 %250 to i64
  %252 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %249, i64 %251)
  store %"struct.SparseMatrixEZ<float>::Entry"* %252, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %253 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %254 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %25 to i8*
  %255 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %254, i8* %255, i64 8, i32 4, i1 false)
  %256 = load i32, i32* %15, align 4
  %257 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %258 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %257, i32 0, i32 0
  store i32 %256, i32* %258, align 4
  %259 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %260 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %259, i32 0, i32 1
  store float 0.000000e+00, float* %260, align 4
  %261 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %262 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %261, i32 0, i32 1
  %263 = load i16, i16* %262, align 4
  %264 = add i16 %263, 1
  store i16 %264, i16* %262, align 4
  %265 = load i32, i32* %15, align 4
  %266 = load i32, i32* %14, align 4
  %267 = icmp eq i32 %265, %266
  br i1 %267, label %268, label %277

; <label>:268:                                    ; preds = %248
  %269 = load i32, i32* %18, align 4
  %270 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %271 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %270, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = sub i32 %269, %272
  %274 = trunc i32 %273 to i16
  %275 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %276 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %275, i32 0, i32 2
  store i16 %274, i16* %276, align 2
  br label %325

; <label>:277:                                    ; preds = %248
  %278 = load i32, i32* @x.537
  %279 = load i32, i32* @y.538
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %277, %originalBB29alteredBB
  %286 = load i32, i32* %15, align 4
  %287 = load i32, i32* %14, align 4
  %288 = icmp ult i32 %286, %287
  %289 = load i32, i32* @x.537
  %290 = load i32, i32* @y.538
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %288, label %297, label %324

; <label>:297:                                    ; preds = %originalBBpart231
  %298 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %299 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %298, i32 0, i32 2
  %300 = load i16, i16* %299, align 2
  %301 = zext i16 %300 to i32
  %302 = icmp ne i32 %301, 65535
  br i1 %302, label %303, label %324

; <label>:303:                                    ; preds = %297
  %304 = load i32, i32* @x.537
  %305 = load i32, i32* @y.538
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %303, %originalBB33alteredBB
  %312 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %313 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %312, i32 0, i32 2
  %314 = load i16, i16* %313, align 2
  %315 = add i16 %314, 1
  store i16 %315, i16* %313, align 2
  %316 = load i32, i32* @x.537
  %317 = load i32, i32* @y.538
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBBpart237, label %originalBB33alteredBB

originalBBpart237:                                ; preds = %originalBB33
  br label %324

; <label>:324:                                    ; preds = %originalBBpart237, %297, %originalBBpart231
  br label %325

; <label>:325:                                    ; preds = %324, %268
  %326 = load i32, i32* %18, align 4
  %327 = load i32, i32* %17, align 4
  %328 = icmp eq i32 %326, %327
  br i1 %328, label %329, label %331

; <label>:329:                                    ; preds = %325
  %330 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %330, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  br label %380

; <label>:331:                                    ; preds = %325
  %332 = load i32, i32* %18, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %26, align 4
  br label %334

; <label>:334:                                    ; preds = %originalBBpart241, %331
  %335 = load i32, i32* %26, align 4
  %336 = load i32, i32* %17, align 4
  %337 = icmp ult i32 %335, %336
  br i1 %337, label %338, label %372

; <label>:338:                                    ; preds = %334
  %339 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %340 = load i32, i32* %26, align 4
  %341 = zext i32 %340 to i64
  %342 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %339, i64 %341)
  %343 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %27 to i8*
  %344 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %343, i8* %344, i64 8, i32 4, i1 false)
  %345 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %346 = load i32, i32* %26, align 4
  %347 = zext i32 %346 to i64
  %348 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %345, i64 %347)
  %349 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %348 to i8*
  %350 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %349, i8* %350, i64 8, i32 4, i1 false)
  %351 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %25 to i8*
  %352 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %351, i8* %352, i64 8, i32 4, i1 false)
  br label %353

; <label>:353:                                    ; preds = %338
  %354 = load i32, i32* @x.537
  %355 = load i32, i32* @y.538
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %353, %originalBB39alteredBB
  %362 = load i32, i32* %26, align 4
  %363 = add i32 %362, 1
  store i32 %363, i32* %26, align 4
  %364 = load i32, i32* @x.537
  %365 = load i32, i32* @y.538
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %334

; <label>:372:                                    ; preds = %334
  %373 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %374 = load i32, i32* %17, align 4
  %375 = zext i32 %374 to i64
  %376 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %373, i64 %375)
  %377 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %376 to i8*
  %378 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %377, i8* %378, i64 8, i32 4, i1 false)
  %379 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %379, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  br label %380

; <label>:380:                                    ; preds = %372, %329, %132
  %381 = load i32, i32* @x.537
  %382 = load i32, i32* @y.538
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %380, %originalBB43alteredBB
  %389 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %390 = load i32, i32* @x.537
  %391 = load i32, i32* @y.538
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  ret %"struct.SparseMatrixEZ<float>::Entry"* %389

originalBBalteredBB:                              ; preds = %originalBB, %3
  %398 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %399 = alloca %class.SparseMatrixEZ.14*, align 8
  %400 = alloca i32, align 4
  %401 = alloca i32, align 4
  %402 = alloca %"struct.SparseMatrixEZ<float>::RowInfo"*, align 8
  %403 = alloca i32, align 4
  %404 = alloca i32, align 4
  %405 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %406 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %407 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %408 = alloca i32, align 4
  %409 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %410 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %411 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %412 = alloca i32, align 4
  %413 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  store %class.SparseMatrixEZ.14* %0, %class.SparseMatrixEZ.14** %399, align 8
  store i32 %1, i32* %400, align 4
  store i32 %2, i32* %401, align 4
  %414 = load %class.SparseMatrixEZ.14*, %class.SparseMatrixEZ.14** %399, align 8
  %415 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %414, i32 0, i32 3
  %416 = load i32, i32* %400, align 4
  %417 = zext i32 %416 to i64
  %418 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm(%"class.std::vector.17"* %415, i64 %417)
  store %"struct.SparseMatrixEZ<float>::RowInfo"* %418, %"struct.SparseMatrixEZ<float>::RowInfo"** %402, align 8
  %419 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %402, align 8
  %420 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %419, i32 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %402, align 8
  %423 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %422, i32 0, i32 1
  %424 = load i16, i16* %423, align 4
  %425 = zext i16 %424 to i32
  %_ = shl i32 %421, %425
  %_1 = sub i32 %421, %425
  %gen = mul i32 %_1, %425
  %_2 = sub i32 0, %421
  %gen3 = add i32 %_2, %425
  %_4 = sub i32 0, %421
  %gen5 = add i32 %_4, %425
  %_6 = sub i32 0, %421
  %gen7 = add i32 %_6, %425
  %_8 = shl i32 %421, %425
  %426 = add i32 %421, %425
  store i32 %426, i32* %403, align 4
  %427 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %402, align 8
  %428 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %427, i32 0, i32 0
  %429 = load i32, i32* %428, align 4
  store i32 %429, i32* %404, align 4
  %430 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %402, align 8
  %431 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %430, i32 0, i32 2
  %432 = load i16, i16* %431, align 2
  %433 = zext i16 %432 to i32
  %434 = icmp ne i32 %433, 65535
  br label %originalBB

originalBB9alteredBB:                             ; preds = %originalBB9, %73
  %435 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %436 = load i32, i32* %18, align 4
  %437 = zext i32 %436 to i64
  %438 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"* %435, i64 %437)
  %439 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %438, i32 0, i32 0
  %440 = load i32, i32* %439, align 4
  %441 = load i32, i32* %15, align 4
  %442 = icmp ult i32 %440, %441
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %98
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %189
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %207
  %443 = load i32, i32* %17, align 4
  %444 = zext i32 %443 to i64
  %445 = getelementptr inbounds %class.SparseMatrixEZ.14, %class.SparseMatrixEZ.14* %28, i32 0, i32 4
  %446 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %445)
  %447 = icmp uge i64 %444, %446
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %231
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %277
  %448 = load i32, i32* %15, align 4
  %449 = load i32, i32* %14, align 4
  %450 = icmp ult i32 %448, %449
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %303
  %451 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %16, align 8
  %452 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %451, i32 0, i32 2
  %453 = load i16, i16* %452, align 2
  %_34 = shl i16 %453, 1
  %_35 = shl i16 %453, 1
  %454 = add i16 %453, 1
  store i16 %454, i16* %452, align 2
  br label %originalBB33

originalBB39alteredBB:                            ; preds = %originalBB39, %353
  %455 = load i32, i32* %26, align 4
  %456 = add i32 %455, 1
  store i32 %456, i32* %26, align 4
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %380
  %457 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  br label %originalBB43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.SparseMatrixEZ<float>::RowInfo"* @_ZNSt6vectorIN14SparseMatrixEZIfE7RowInfoESaIS2_EEixEm(%"class.std::vector.17"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.539
  %4 = load i32, i32* @y.540
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.17"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.17"*, %"class.std::vector.17"** %11, align 8
  %14 = bitcast %"class.std::vector.17"* %13 to %"struct.std::_Vector_base.18"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %18, i64 %19
  %21 = load i32, i32* @x.539
  %22 = load i32, i32* @y.540
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<float>::RowInfo"* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.17"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.17"*, %"class.std::vector.17"** %29, align 8
  %32 = bitcast %"class.std::vector.17"* %31 to %"struct.std::_Vector_base.18"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::RowInfo, std::allocator<SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %"struct.SparseMatrixEZ<float>::RowInfo"*, %"struct.SparseMatrixEZ<float>::RowInfo"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::RowInfo", %"struct.SparseMatrixEZ<float>::RowInfo"* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EEixEm(%"class.std::vector.22"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.541
  %4 = load i32, i32* @y.542
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.22"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.22"*, %"class.std::vector.22"** %11, align 8
  %14 = bitcast %"class.std::vector.22"* %13 to %"struct.std::_Vector_base.23"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %18, i64 %19
  %21 = load i32, i32* @x.541
  %22 = load i32, i32* @y.542
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<float>::Entry"* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.22"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.22"*, %"class.std::vector.22"** %29, align 8
  %32 = bitcast %"class.std::vector.22"* %31 to %"struct.std::_Vector_base.23"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.22"*, %"struct.SparseMatrixEZ<float>::Entry"*, i64, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"class.std::vector.22"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %10, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %3, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %11 = load %"class.std::vector.22"*, %"class.std::vector.22"** %6, align 8
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %9 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = load i64, i64* %7, align 8
  %15 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  %17 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %16, align 8
  call void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.22"* %11, %"struct.SparseMatrixEZ<float>::Entry"* %17, i64 %14, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE5beginEv(%"class.std::vector.22"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.std::vector.22"*, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %3, align 8
  %4 = load %"class.std::vector.22"*, %"class.std::vector.22"** %3, align 8
  %5 = bitcast %"class.std::vector.22"* %4 to %"struct.std::_Vector_base.23"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.32"* %2, %"struct.SparseMatrixEZ<float>::Entry"** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %7, i32 0, i32 0
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %9, i64 %10
  store %"struct.SparseMatrixEZ<float>::Entry"* %11, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.32"* %3, %"struct.SparseMatrixEZ<float>::Entry"** dereferenceable(8) %6)
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %13 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN14SparseMatrixEZIfE5EntryC2Ev(%"struct.SparseMatrixEZ<float>::Entry"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  %3 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  %4 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %3, i32 0, i32 0
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %3, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.22"*, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %2, align 8
  %3 = load %"class.std::vector.22"*, %"class.std::vector.22"** %2, align 8
  %4 = bitcast %"class.std::vector.22"* %3 to %"struct.std::_Vector_base.23"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  %9 = bitcast %"class.std::vector.22"* %3 to %"struct.std::_Vector_base.23"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %14 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %8 to i64
  %15 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE9push_backERKS2_(%"class.std::vector.22"*, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat align 2 {
  %3 = load i32, i32* @x.553
  %4 = load i32, i32* @y.554
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.22"*, align 8
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %11, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %14 = load %"class.std::vector.22"*, %"class.std::vector.22"** %11, align 8
  %15 = bitcast %"class.std::vector.22"* %14 to %"struct.std::_Vector_base.23"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %17, i32 0, i32 1
  %19 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %18, align 8
  %20 = bitcast %"class.std::vector.22"* %14 to %"struct.std::_Vector_base.23"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %21 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %22, i32 0, i32 2
  %24 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %23, align 8
  %25 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %19, %24
  %26 = load i32, i32* @x.553
  %27 = load i32, i32* @y.554
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %50

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = bitcast %"class.std::vector.22"* %14 to %"struct.std::_Vector_base.23"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %36 to %"class.std::allocator.24"*
  %38 = bitcast %"class.std::vector.22"* %14 to %"struct.std::_Vector_base.23"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %38, i32 0, i32 0
  %40 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %39 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %40, i32 0, i32 1
  %42 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %41, align 8
  %43 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_(%"class.std::allocator.24"* dereferenceable(1) %37, %"struct.SparseMatrixEZ<float>::Entry"* %42, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %43)
  %44 = bitcast %"class.std::vector.22"* %14 to %"struct.std::_Vector_base.23"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %44, i32 0, i32 0
  %46 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %45 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %46, i32 0, i32 1
  %48 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %47, align 8
  %49 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %48, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %49, %"struct.SparseMatrixEZ<float>::Entry"** %47, align 8
  br label %56

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE3endEv(%"class.std::vector.22"* %14)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %51, %"struct.SparseMatrixEZ<float>::Entry"** %52, align 8
  %53 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  %55 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %54, align 8
  call void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(%"class.std::vector.22"* %14, %"struct.SparseMatrixEZ<float>::Entry"* %55, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %53)
  br label %56

; <label>:56:                                     ; preds = %50, %34
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %57 = alloca %"class.std::vector.22"*, align 8
  %58 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %57, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %58, align 8
  %60 = load %"class.std::vector.22"*, %"class.std::vector.22"** %57, align 8
  %61 = bitcast %"class.std::vector.22"* %60 to %"struct.std::_Vector_base.23"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %62 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %63, i32 0, i32 1
  %65 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %64, align 8
  %66 = bitcast %"class.std::vector.22"* %60 to %"struct.std::_Vector_base.23"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %66, i32 0, i32 0
  %68 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %67 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %68, i32 0, i32 2
  %70 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %69, align 8
  %71 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %65, %70
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.22"*, %"struct.SparseMatrixEZ<float>::Entry"*, i64, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.555
  %6 = load i32, i32* @y.556
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %14 = alloca %"class.std::vector.22"*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %17 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %18 = alloca i64, align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %20 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %24 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %25 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %26 = alloca i8*
  %27 = alloca i32
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %28, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %14, align 8
  store i64 %2, i64* %15, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %3, %"struct.SparseMatrixEZ<float>::Entry"** %16, align 8
  %29 = load %"class.std::vector.22"*, %"class.std::vector.22"** %14, align 8
  %30 = load i64, i64* %15, align 8
  %31 = icmp ne i64 %30, 0
  %32 = load i32, i32* @x.555
  %33 = load i32, i32* @y.556
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %454

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %43, i32 0, i32 2
  %45 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %44, align 8
  %46 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %47 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %48, i32 0, i32 1
  %50 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %49, align 8
  %51 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %45 to i64
  %52 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %50 to i64
  %53 = sub i64 %51, %52
  %54 = sdiv exact i64 %53, 8
  %55 = load i64, i64* %15, align 8
  %56 = icmp uge i64 %54, %55
  br i1 %56, label %57, label %153

; <label>:57:                                     ; preds = %40
  %58 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %16, align 8
  %59 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %17 to i8*
  %60 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 4, i1 false)
  %61 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE3endEv(%"class.std::vector.22"* %29)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %19, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %61, %"struct.SparseMatrixEZ<float>::Entry"** %62, align 8
  %63 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %13)
  store i64 %63, i64* %18, align 8
  %64 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %65 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %67, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %68, %"struct.SparseMatrixEZ<float>::Entry"** %20, align 8
  %69 = load i64, i64* %18, align 8
  %70 = load i64, i64* %15, align 8
  %71 = icmp ugt i64 %69, %70
  br i1 %71, label %72, label %115

; <label>:72:                                     ; preds = %57
  %73 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %74 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %75, i32 0, i32 1
  %77 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %76, align 8
  %78 = load i64, i64* %15, align 8
  %79 = sub i64 0, %78
  %80 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %77, i64 %79
  %81 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %82 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %83, i32 0, i32 1
  %85 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %84, align 8
  %86 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %87 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %88, i32 0, i32 1
  %90 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %89, align 8
  %91 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %92 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %91)
  %93 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"* %80, %"struct.SparseMatrixEZ<float>::Entry"* %85, %"struct.SparseMatrixEZ<float>::Entry"* %90, %"class.std::allocator.24"* dereferenceable(1) %92)
  %94 = load i64, i64* %15, align 8
  %95 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %95, i32 0, i32 0
  %97 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %96 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %98 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %97, i32 0, i32 1
  %99 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %98, align 8
  %100 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %99, i64 %94
  store %"struct.SparseMatrixEZ<float>::Entry"* %100, %"struct.SparseMatrixEZ<float>::Entry"** %98, align 8
  %101 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %13)
  %102 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %101, align 8
  %103 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %20, align 8
  %104 = load i64, i64* %15, align 8
  %105 = sub i64 0, %104
  %106 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %103, i64 %105
  %107 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %20, align 8
  %108 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt13copy_backwardIPN14SparseMatrixEZIfE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %102, %"struct.SparseMatrixEZ<float>::Entry"* %106, %"struct.SparseMatrixEZ<float>::Entry"* %107)
  %109 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %13)
  %110 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %109, align 8
  %111 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %13)
  %112 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %111, align 8
  %113 = load i64, i64* %15, align 8
  %114 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %112, i64 %113
  call void @_ZSt4fillIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RKT0_(%"struct.SparseMatrixEZ<float>::Entry"* %110, %"struct.SparseMatrixEZ<float>::Entry"* %114, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %17)
  br label %152

; <label>:115:                                    ; preds = %57
  %116 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %116, i32 0, i32 0
  %118 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %117 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %118, i32 0, i32 1
  %120 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %119, align 8
  %121 = load i64, i64* %15, align 8
  %122 = load i64, i64* %18, align 8
  %123 = sub i64 %121, %122
  %124 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %125 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %124)
  %126 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIfE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.SparseMatrixEZ<float>::Entry"* %120, i64 %123, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %17, %"class.std::allocator.24"* dereferenceable(1) %125)
  %127 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %127, i32 0, i32 0
  %129 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %128 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %130 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %129, i32 0, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %126, %"struct.SparseMatrixEZ<float>::Entry"** %130, align 8
  %131 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %13)
  %132 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %131, align 8
  %133 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %20, align 8
  %134 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %134, i32 0, i32 0
  %136 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %135 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %136, i32 0, i32 1
  %138 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %137, align 8
  %139 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %140 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %139)
  %141 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"* %132, %"struct.SparseMatrixEZ<float>::Entry"* %133, %"struct.SparseMatrixEZ<float>::Entry"* %138, %"class.std::allocator.24"* dereferenceable(1) %140)
  %142 = load i64, i64* %18, align 8
  %143 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %143, i32 0, i32 0
  %145 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %144 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %145, i32 0, i32 1
  %147 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %146, align 8
  %148 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %147, i64 %142
  store %"struct.SparseMatrixEZ<float>::Entry"* %148, %"struct.SparseMatrixEZ<float>::Entry"** %146, align 8
  %149 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %13)
  %150 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %149, align 8
  %151 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %20, align 8
  call void @_ZSt4fillIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RKT0_(%"struct.SparseMatrixEZ<float>::Entry"* %150, %"struct.SparseMatrixEZ<float>::Entry"* %151, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %17)
  br label %152

; <label>:152:                                    ; preds = %115, %72
  br label %437

; <label>:153:                                    ; preds = %40
  %154 = load i32, i32* @x.555
  %155 = load i32, i32* @y.556
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %153, %originalBB1alteredBB
  %162 = load i64, i64* %15, align 8
  %163 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.22"* %29, i64 %162, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %163, i64* %21, align 8
  %164 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE5beginEv(%"class.std::vector.22"* %29)
  %165 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %23, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %164, %"struct.SparseMatrixEZ<float>::Entry"** %165, align 8
  %166 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %13, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %23)
  store i64 %166, i64* %22, align 8
  %167 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %168 = load i64, i64* %21, align 8
  %169 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.23"* %167, i64 %168)
  store %"struct.SparseMatrixEZ<float>::Entry"* %169, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %170 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %170, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %171 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %172 = load i64, i64* %22, align 8
  %173 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %171, i64 %172
  %174 = load i64, i64* %15, align 8
  %175 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %16, align 8
  %176 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %177 = load i32, i32* @x.555
  %178 = load i32, i32* @y.556
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %185 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %176)
          to label %186 unwind label %252

; <label>:186:                                    ; preds = %originalBBpart24
  %187 = load i32, i32* @x.555
  %188 = load i32, i32* @y.556
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %186, %originalBB6alteredBB
  %195 = load i32, i32* @x.555
  %196 = load i32, i32* @y.556
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %203 = invoke %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIfE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.SparseMatrixEZ<float>::Entry"* %173, i64 %174, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %175, %"class.std::allocator.24"* dereferenceable(1) %185)
          to label %204 unwind label %252

; <label>:204:                                    ; preds = %originalBBpart28
  %205 = load i32, i32* @x.555
  %206 = load i32, i32* @y.556
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %204, %originalBB10alteredBB
  store %"struct.SparseMatrixEZ<float>::Entry"* null, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %213 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %213, i32 0, i32 0
  %215 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %214 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %216 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %215, i32 0, i32 0
  %217 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %216, align 8
  %218 = load i32, i32* @x.555
  %219 = load i32, i32* @y.556
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %226 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %13)
          to label %227 unwind label %252

; <label>:227:                                    ; preds = %originalBBpart212
  %228 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %226, align 8
  %229 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %230 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %231 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %230)
          to label %232 unwind label %252

; <label>:232:                                    ; preds = %227
  %233 = invoke %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"* %217, %"struct.SparseMatrixEZ<float>::Entry"* %228, %"struct.SparseMatrixEZ<float>::Entry"* %229, %"class.std::allocator.24"* dereferenceable(1) %231)
          to label %234 unwind label %252

; <label>:234:                                    ; preds = %232
  store %"struct.SparseMatrixEZ<float>::Entry"* %233, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %235 = load i64, i64* %15, align 8
  %236 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %237 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %236, i64 %235
  store %"struct.SparseMatrixEZ<float>::Entry"* %237, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %238 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %13)
          to label %239 unwind label %252

; <label>:239:                                    ; preds = %234
  %240 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %238, align 8
  %241 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %242 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %241, i32 0, i32 0
  %243 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %242 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %244 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %243, i32 0, i32 1
  %245 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %244, align 8
  %246 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %247 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %248 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %247)
          to label %249 unwind label %252

; <label>:249:                                    ; preds = %239
  %250 = invoke %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"* %240, %"struct.SparseMatrixEZ<float>::Entry"* %245, %"struct.SparseMatrixEZ<float>::Entry"* %246, %"class.std::allocator.24"* dereferenceable(1) %248)
          to label %251 unwind label %252

; <label>:251:                                    ; preds = %249
  store %"struct.SparseMatrixEZ<float>::Entry"* %250, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  br label %371

; <label>:252:                                    ; preds = %249, %239, %234, %232, %227, %originalBBpart212, %originalBBpart28, %originalBBpart24
  %253 = load i32, i32* @x.555
  %254 = load i32, i32* @y.556
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %252, %originalBB14alteredBB
  %261 = landingpad { i8*, i32 }
          catch i8* null
  %262 = extractvalue { i8*, i32 } %261, 0
  store i8* %262, i8** %26, align 8
  %263 = extractvalue { i8*, i32 } %261, 1
  store i32 %263, i32* %27, align 4
  %264 = load i32, i32* @x.555
  %265 = load i32, i32* @y.556
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %272

; <label>:272:                                    ; preds = %originalBBpart216
  %273 = load i8*, i8** %26, align 8
  %274 = call i8* @__cxa_begin_catch(i8* %273) #10
  %275 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %276 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %275, null
  br i1 %276, label %326, label %277

; <label>:277:                                    ; preds = %272
  %278 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %279 = load i64, i64* %22, align 8
  %280 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %278, i64 %279
  %281 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %282 = load i64, i64* %22, align 8
  %283 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %281, i64 %282
  %284 = load i64, i64* %15, align 8
  %285 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %283, i64 %284
  %286 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %287 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %286)
          to label %288 unwind label %306

; <label>:288:                                    ; preds = %277
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<float>::Entry"* %280, %"struct.SparseMatrixEZ<float>::Entry"* %285, %"class.std::allocator.24"* dereferenceable(1) %287)
          to label %289 unwind label %306

; <label>:289:                                    ; preds = %288
  %290 = load i32, i32* @x.555
  %291 = load i32, i32* @y.556
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %289, %originalBB18alteredBB
  %298 = load i32, i32* @x.555
  %299 = load i32, i32* @y.556
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %349

; <label>:306:                                    ; preds = %originalBBpart232, %349, %331, %326, %288, %277
  %307 = load i32, i32* @x.555
  %308 = load i32, i32* @y.556
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %306, %originalBB22alteredBB
  %315 = landingpad { i8*, i32 }
          cleanup
  %316 = extractvalue { i8*, i32 } %315, 0
  store i8* %316, i8** %26, align 8
  %317 = extractvalue { i8*, i32 } %315, 1
  store i32 %317, i32* %27, align 4
  %318 = load i32, i32* @x.555
  %319 = load i32, i32* @y.556
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @__cxa_end_catch()
          to label %370 unwind label %460

; <label>:326:                                    ; preds = %272
  %327 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %328 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %329 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %330 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %329)
          to label %331 unwind label %306

; <label>:331:                                    ; preds = %326
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<float>::Entry"* %327, %"struct.SparseMatrixEZ<float>::Entry"* %328, %"class.std::allocator.24"* dereferenceable(1) %330)
          to label %332 unwind label %306

; <label>:332:                                    ; preds = %331
  %333 = load i32, i32* @x.555
  %334 = load i32, i32* @y.556
  %335 = sub i32 %333, 1
  %336 = mul i32 %333, %335
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %338, %339
  br i1 %340, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %332, %originalBB26alteredBB
  %341 = load i32, i32* @x.555
  %342 = load i32, i32* @y.556
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %349

; <label>:349:                                    ; preds = %originalBBpart228, %originalBBpart220
  %350 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %351 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %352 = load i64, i64* %21, align 8
  invoke void @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.23"* %350, %"struct.SparseMatrixEZ<float>::Entry"* %351, i64 %352)
          to label %353 unwind label %306

; <label>:353:                                    ; preds = %349
  %354 = load i32, i32* @x.555
  %355 = load i32, i32* @y.556
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %353, %originalBB30alteredBB
  %362 = load i32, i32* @x.555
  %363 = load i32, i32* @y.556
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @__cxa_rethrow() #12
          to label %463 unwind label %306

; <label>:370:                                    ; preds = %originalBBpart224
  br label %455

; <label>:371:                                    ; preds = %251
  %372 = load i32, i32* @x.555
  %373 = load i32, i32* @y.556
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %371, %originalBB34alteredBB
  %380 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %380, i32 0, i32 0
  %382 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %381 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %382, i32 0, i32 0
  %384 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %383, align 8
  %385 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %386 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %385, i32 0, i32 0
  %387 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %386 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %388 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %387, i32 0, i32 1
  %389 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %388, align 8
  %390 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %391 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %390)
  call void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<float>::Entry"* %384, %"struct.SparseMatrixEZ<float>::Entry"* %389, %"class.std::allocator.24"* dereferenceable(1) %391)
  %392 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %393 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %393, i32 0, i32 0
  %395 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %394 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %395, i32 0, i32 0
  %397 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %396, align 8
  %398 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %399 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %398, i32 0, i32 0
  %400 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %399 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %401 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %400, i32 0, i32 2
  %402 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %401, align 8
  %403 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %404 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %403, i32 0, i32 0
  %405 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %404 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %406 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %405, i32 0, i32 0
  %407 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %406, align 8
  %408 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %402 to i64
  %409 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %407 to i64
  %410 = sub i64 %408, %409
  %411 = sdiv exact i64 %410, 8
  call void @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.23"* %392, %"struct.SparseMatrixEZ<float>::Entry"* %397, i64 %411)
  %412 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %413 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %413, i32 0, i32 0
  %415 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %414 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %415, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %412, %"struct.SparseMatrixEZ<float>::Entry"** %416, align 8
  %417 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %418 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %419 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %418, i32 0, i32 0
  %420 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %419 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %421 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %420, i32 0, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %417, %"struct.SparseMatrixEZ<float>::Entry"** %421, align 8
  %422 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %423 = load i64, i64* %21, align 8
  %424 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %422, i64 %423
  %425 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %426 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %425, i32 0, i32 0
  %427 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %426 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %428 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %427, i32 0, i32 2
  store %"struct.SparseMatrixEZ<float>::Entry"* %424, %"struct.SparseMatrixEZ<float>::Entry"** %428, align 8
  %429 = load i32, i32* @x.555
  %430 = load i32, i32* @y.556
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBBpart248, label %originalBB34alteredBB

originalBBpart248:                                ; preds = %originalBB34
  br label %437

; <label>:437:                                    ; preds = %originalBBpart248, %152
  %438 = load i32, i32* @x.555
  %439 = load i32, i32* @y.556
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %437, %originalBB50alteredBB
  %446 = load i32, i32* @x.555
  %447 = load i32, i32* @y.556
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %454

; <label>:454:                                    ; preds = %originalBBpart252, %originalBBpart2
  ret void

; <label>:455:                                    ; preds = %370
  %456 = load i8*, i8** %26, align 8
  %457 = load i32, i32* %27, align 4
  %458 = insertvalue { i8*, i32 } undef, i8* %456, 0
  %459 = insertvalue { i8*, i32 } %458, i32 %457, 1
  resume { i8*, i32 } %459

; <label>:460:                                    ; preds = %originalBBpart224
  %461 = landingpad { i8*, i32 }
          catch i8* null
  %462 = extractvalue { i8*, i32 } %461, 0
  call void @__clang_call_terminate(i8* %462) #9
  unreachable

; <label>:463:                                    ; preds = %originalBBpart232
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %464 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %465 = alloca %"class.std::vector.22"*, align 8
  %466 = alloca i64, align 8
  %467 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %468 = alloca %"struct.SparseMatrixEZ<float>::Entry", align 4
  %469 = alloca i64, align 8
  %470 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %471 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %472 = alloca i64, align 8
  %473 = alloca i64, align 8
  %474 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %475 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %476 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %477 = alloca i8*
  %478 = alloca i32
  %479 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %464, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %479, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %465, align 8
  store i64 %2, i64* %466, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %3, %"struct.SparseMatrixEZ<float>::Entry"** %467, align 8
  %480 = load %"class.std::vector.22"*, %"class.std::vector.22"** %465, align 8
  %481 = load i64, i64* %466, align 8
  %482 = icmp ne i64 %481, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %153
  %483 = load i64, i64* %15, align 8
  %484 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.22"* %29, i64 %483, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %484, i64* %21, align 8
  %485 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE5beginEv(%"class.std::vector.22"* %29)
  %486 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %23, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %485, %"struct.SparseMatrixEZ<float>::Entry"** %486, align 8
  %487 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %13, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %23)
  store i64 %487, i64* %22, align 8
  %488 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %489 = load i64, i64* %21, align 8
  %490 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.23"* %488, i64 %489)
  store %"struct.SparseMatrixEZ<float>::Entry"* %490, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %491 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %491, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %492 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %493 = load i64, i64* %22, align 8
  %494 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %492, i64 %493
  %495 = load i64, i64* %15, align 8
  %496 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %16, align 8
  %497 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %186
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %204
  store %"struct.SparseMatrixEZ<float>::Entry"* null, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %498 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %499 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %498, i32 0, i32 0
  %500 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %499 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %501 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %500, i32 0, i32 0
  %502 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %501, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %252
  %503 = landingpad { i8*, i32 }
          catch i8* null
  %504 = extractvalue { i8*, i32 } %503, 0
  store i8* %504, i8** %26, align 8
  %505 = extractvalue { i8*, i32 } %503, 1
  store i32 %505, i32* %27, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %289
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %306
  %506 = landingpad { i8*, i32 }
          cleanup
  %507 = extractvalue { i8*, i32 } %506, 0
  store i8* %507, i8** %26, align 8
  %508 = extractvalue { i8*, i32 } %506, 1
  store i32 %508, i32* %27, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %332
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %353
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %371
  %509 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %510 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %509, i32 0, i32 0
  %511 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %510 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %512 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %511, i32 0, i32 0
  %513 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %512, align 8
  %514 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %515 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %514, i32 0, i32 0
  %516 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %515 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %517 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %516, i32 0, i32 1
  %518 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %517, align 8
  %519 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %520 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %519)
  call void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<float>::Entry"* %513, %"struct.SparseMatrixEZ<float>::Entry"* %518, %"class.std::allocator.24"* dereferenceable(1) %520)
  %521 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %522 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %523 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %522, i32 0, i32 0
  %524 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %523 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %525 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %524, i32 0, i32 0
  %526 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %525, align 8
  %527 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %528 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %527, i32 0, i32 0
  %529 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %528 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %530 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %529, i32 0, i32 2
  %531 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %530, align 8
  %532 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %533 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %532, i32 0, i32 0
  %534 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %533 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %535 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %534, i32 0, i32 0
  %536 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %535, align 8
  %537 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %531 to i64
  %538 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %536 to i64
  %_ = sub i64 0, %537
  %gen = add i64 %_, %538
  %_35 = shl i64 %537, %538
  %539 = sub i64 %537, %538
  %_36 = sub i64 0, %539
  %gen37 = add i64 %_36, 8
  %_38 = sub i64 %539, 8
  %gen39 = mul i64 %_38, 8
  %_40 = shl i64 %539, 8
  %_41 = sub i64 0, %539
  %gen42 = add i64 %_41, 8
  %_43 = sub i64 0, %539
  %gen44 = add i64 %_43, 8
  %_45 = sub i64 0, %539
  %gen46 = add i64 %_45, 8
  %540 = sdiv exact i64 %539, 8
  call void @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.23"* %521, %"struct.SparseMatrixEZ<float>::Entry"* %526, i64 %540)
  %541 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %542 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %543 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %542, i32 0, i32 0
  %544 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %543 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %545 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %544, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %541, %"struct.SparseMatrixEZ<float>::Entry"** %545, align 8
  %546 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %25, align 8
  %547 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %548 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %547, i32 0, i32 0
  %549 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %548 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %550 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %549, i32 0, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %546, %"struct.SparseMatrixEZ<float>::Entry"** %550, align 8
  %551 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %552 = load i64, i64* %21, align 8
  %553 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %551, i64 %552
  %554 = bitcast %"class.std::vector.22"* %29 to %"struct.std::_Vector_base.23"*
  %555 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %554, i32 0, i32 0
  %556 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %555 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %557 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %556, i32 0, i32 2
  store %"struct.SparseMatrixEZ<float>::Entry"* %553, %"struct.SparseMatrixEZ<float>::Entry"** %557, align 8
  br label %originalBB34

originalBB50alteredBB:                            ; preds = %originalBB50, %437
  br label %originalBB50
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  %6 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %5)
  %7 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  %9 = call dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %8)
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %11 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %7 to i64
  %12 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE3endEv(%"class.std::vector.22"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.std::vector.22"*, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %3, align 8
  %4 = load %"class.std::vector.22"*, %"class.std::vector.22"** %3, align 8
  %5 = bitcast %"class.std::vector.22"* %4 to %"struct.std::_Vector_base.23"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.32"* %2, %"struct.SparseMatrixEZ<float>::Entry"** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__uninitialized_move_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"class.std::allocator.24"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.24"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  store %"class.std::allocator.24"* %3, %"class.std::allocator.24"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  %12 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %8, align 8
  %13 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIfE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.SparseMatrixEZ<float>::Entry"* %9, %"struct.SparseMatrixEZ<float>::Entry"* %10, %"struct.SparseMatrixEZ<float>::Entry"* %11, %"class.std::allocator.24"* dereferenceable(1) %12)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.23"*, align 8
  store %"struct.std::_Vector_base.23"* %0, %"struct.std::_Vector_base.23"** %2, align 8
  %3 = load %"struct.std::_Vector_base.23"*, %"struct.std::_Vector_base.23"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %4 to %"class.std::allocator.24"*
  ret %"class.std::allocator.24"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt13copy_backwardIPN14SparseMatrixEZIfE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %7 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %8 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %7)
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %9)
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %12 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt23__copy_move_backward_a2ILb0EPN14SparseMatrixEZIfE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %8, %"struct.SparseMatrixEZ<float>::Entry"* %10, %"struct.SparseMatrixEZ<float>::Entry"* %11)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  ret %"struct.SparseMatrixEZ<float>::Entry"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RKT0_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %7 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %8 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %7)
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %9)
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  call void @_ZSt8__fill_aIPN14SparseMatrixEZIfE5EntryES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"struct.SparseMatrixEZ<float>::Entry"* %8, %"struct.SparseMatrixEZ<float>::Entry"* %10, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt24__uninitialized_fill_n_aIPN14SparseMatrixEZIfE5EntryEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.SparseMatrixEZ<float>::Entry"*, i64, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8), %"class.std::allocator.24"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.24"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  store %"class.std::allocator.24"* %3, %"class.std::allocator.24"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  %12 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt20uninitialized_fill_nIPN14SparseMatrixEZIfE5EntryEmS2_ET_S4_T0_RKT1_(%"struct.SparseMatrixEZ<float>::Entry"* %9, i64 %10, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %11)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.22"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.22"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.22"*, %"class.std::vector.22"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.22"* %9)
  %11 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #12
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* @x.573
  %19 = load i32, i32* @y.574
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %9)
  %27 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %9)
  store i64 %27, i64* %8, align 8
  %28 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %26, %29
  store i64 %30, i64* %7, align 8
  %31 = load i64, i64* %7, align 8
  %32 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %9)
  %33 = icmp ult i64 %31, %32
  %34 = load i32, i32* @x.573
  %35 = load i32, i32* @y.574
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %46, label %42

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i64, i64* %7, align 8
  %44 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.22"* %9)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %42, %originalBBpart2
  %47 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.22"* %9)
  br label %50

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %7, align 8
  br label %50

; <label>:50:                                     ; preds = %48, %46
  %51 = phi i64 [ %47, %46 ], [ %49, %48 ]
  ret i64 %51

originalBBalteredBB:                              ; preds = %originalBB, %17
  %52 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %9)
  %53 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %9)
  store i64 %53, i64* %8, align 8
  %54 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %55 = load i64, i64* %54, align 8
  %_ = sub i64 0, %52
  %gen = add i64 %_, %55
  %56 = add i64 %52, %55
  store i64 %56, i64* %7, align 8
  %57 = load i64, i64* %7, align 8
  %58 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE4sizeEv(%"class.std::vector.22"* %9)
  %59 = icmp ult i64 %57, %58
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.23"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.23"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.23"* %0, %"struct.std::_Vector_base.23"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.23"*, %"struct.std::_Vector_base.23"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %9 to %"class.std::allocator.24"*
  %11 = load i64, i64* %4, align 8
  %12 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E8allocateERS4_m(%"class.std::allocator.24"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi %"struct.SparseMatrixEZ<float>::Entry"* [ %12, %8 ], [ null, %13 ]
  ret %"struct.SparseMatrixEZ<float>::Entry"* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"class.std::allocator.24"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.24"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  store %"class.std::allocator.24"* %3, %"class.std::allocator.24"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  %12 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %8, align 8
  %13 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIfE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.SparseMatrixEZ<float>::Entry"* %9, %"struct.SparseMatrixEZ<float>::Entry"* %10, %"struct.SparseMatrixEZ<float>::Entry"* %11, %"class.std::allocator.24"* dereferenceable(1) %12)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"class.std::allocator.24"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"class.std::allocator.24"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"class.std::allocator.24"* %2, %"class.std::allocator.24"** %6, align 8
  %7 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  call void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %7, %"struct.SparseMatrixEZ<float>::Entry"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.23"*, %"struct.SparseMatrixEZ<float>::Entry"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.23"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.23"* %0, %"struct.std::_Vector_base.23"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.23"*, %"struct.std::_Vector_base.23"** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %9 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.581
  %12 = load i32, i32* @y.582
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %19 to %"class.std::allocator.24"*
  %21 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.24"* dereferenceable(1) %20, %"struct.SparseMatrixEZ<float>::Entry"* %21, i64 %22)
  %23 = load i32, i32* @x.581
  %24 = load i32, i32* @y.582
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %32 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %7, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %32 to %"class.std::allocator.24"*
  %34 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %35 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.24"* dereferenceable(1) %33, %"struct.SparseMatrixEZ<float>::Entry"* %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.32"*, %"struct.SparseMatrixEZ<float>::Entry"** dereferenceable(8)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"** %1, %"struct.SparseMatrixEZ<float>::Entry"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  %7 = load %"struct.SparseMatrixEZ<float>::Entry"**, %"struct.SparseMatrixEZ<float>::Entry"*** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %8, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__uninitialized_copy_aIPN14SparseMatrixEZIfE5EntryES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"class.std::allocator.24"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %7 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %8 = alloca %"class.std::allocator.24"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  store %"class.std::allocator.24"* %3, %"class.std::allocator.24"** %8, align 8
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %7, align 8
  %12 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt18uninitialized_copyIPN14SparseMatrixEZIfE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %9, %"struct.SparseMatrixEZ<float>::Entry"* %10, %"struct.SparseMatrixEZ<float>::Entry"* %11)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt18uninitialized_copyIPN14SparseMatrixEZIfE5EntryES3_ET0_T_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #0 comdat {
  %4 = load i32, i32* @x.587
  %5 = load i32, i32* @y.588
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %14 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %15 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %17 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %18 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  %19 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN14SparseMatrixEZIfE5EntryES5_EET0_T_S7_S6_(%"struct.SparseMatrixEZ<float>::Entry"* %16, %"struct.SparseMatrixEZ<float>::Entry"* %17, %"struct.SparseMatrixEZ<float>::Entry"* %18)
  %20 = load i32, i32* @x.587
  %21 = load i32, i32* @y.588
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<float>::Entry"* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %29 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %30 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %31 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %28, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %29, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %28, align 8
  %33 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %29, align 8
  %34 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %30, align 8
  %35 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN14SparseMatrixEZIfE5EntryES5_EET0_T_S7_S6_(%"struct.SparseMatrixEZ<float>::Entry"* %32, %"struct.SparseMatrixEZ<float>::Entry"* %33, %"struct.SparseMatrixEZ<float>::Entry"* %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN14SparseMatrixEZIfE5EntryES5_EET0_T_S7_S6_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.589
  %5 = load i32, i32* @y.590
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %14 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %15 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  %18 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %18, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %19 = load i32, i32* @x.589
  %20 = load i32, i32* @y.590
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart28, %originalBBpart2
  %28 = load i32, i32* @x.589
  %29 = load i32, i32* @y.590
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %37 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %38 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %36, %37
  %39 = load i32, i32* @x.589
  %40 = load i32, i32* @y.590
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %84

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %49 = invoke %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt11__addressofIN14SparseMatrixEZIfE5EntryEEPT_RS3_(%"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %48)
          to label %50 unwind label %74

; <label>:50:                                     ; preds = %47
  %51 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  invoke void @_ZSt10_ConstructIN14SparseMatrixEZIfE5EntryES2_EvPT_RKT0_(%"struct.SparseMatrixEZ<float>::Entry"* %49, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %51)
          to label %52 unwind label %74

; <label>:52:                                     ; preds = %50
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* @x.589
  %55 = load i32, i32* @y.590
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %63 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %62, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %63, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %64 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %65 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %64, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %65, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %66 = load i32, i32* @x.589
  %67 = load i32, i32* @y.590
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %27

; <label>:74:                                     ; preds = %50, %47
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %16, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %17, align 4
  br label %78

; <label>:78:                                     ; preds = %74
  %79 = load i8*, i8** %16, align 8
  %80 = call i8* @__cxa_begin_catch(i8* %79) #10
  %81 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  %82 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %81, %"struct.SparseMatrixEZ<float>::Entry"* %82)
          to label %83 unwind label %86

; <label>:83:                                     ; preds = %78
  invoke void @__cxa_rethrow() #12
          to label %132 unwind label %86

; <label>:84:                                     ; preds = %originalBBpart24
  %85 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %85

; <label>:86:                                     ; preds = %83, %78
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %16, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %90 unwind label %113

; <label>:90:                                     ; preds = %86
  br label %92
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:92:                                     ; preds = %90
  %93 = load i32, i32* @x.589
  %94 = load i32, i32* @y.590
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %92, %originalBB10alteredBB
  %101 = load i8*, i8** %16, align 8
  %102 = load i32, i32* %17, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  %105 = load i32, i32* @x.589
  %106 = load i32, i32* @y.590
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %104

; <label>:113:                                    ; preds = %86
  %114 = load i32, i32* @x.589
  %115 = load i32, i32* @y.590
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %113, %originalBB14alteredBB
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  call void @__clang_call_terminate(i8* %123) #9
  %124 = load i32, i32* @x.589
  %125 = load i32, i32* @y.590
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

; <label>:132:                                    ; preds = %83
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %133 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %134 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %135 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %136 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %137 = alloca i8*
  %138 = alloca i32
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %133, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %134, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %135, align 8
  %139 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %135, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %139, %"struct.SparseMatrixEZ<float>::Entry"** %136, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %140 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %141 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %142 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %140, %141
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %143 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %144 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %143, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %144, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %145 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %146 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %145, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %146, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %92
  %147 = load i8*, i8** %16, align 8
  %148 = load i32, i32* %17, align 4
  %149 = insertvalue { i8*, i32 } undef, i8* %147, 0
  %150 = insertvalue { i8*, i32 } %149, i32 %148, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %113
  %151 = landingpad { i8*, i32 }
          catch i8* null
  %152 = extractvalue { i8*, i32 } %151, 0
  call void @__clang_call_terminate(i8* %152) #9
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN14SparseMatrixEZIfE5EntryES2_EvPT_RKT0_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #3 comdat {
  %3 = load i32, i32* @x.591
  %4 = load i32, i32* @y.592
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %11, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %13 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %11, align 8
  %14 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %13 to i8*
  %15 = bitcast i8* %14 to %"struct.SparseMatrixEZ<float>::Entry"*
  %16 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %17 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %15 to i8*
  %18 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  %19 = load i32, i32* @x.591
  %20 = load i32, i32* @y.592
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %28 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %27, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %28, align 8
  %29 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %27, align 8
  %30 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %29 to i8*
  %31 = bitcast i8* %30 to %"struct.SparseMatrixEZ<float>::Entry"*
  %32 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %28, align 8
  %33 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %31 to i8*
  %34 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt11__addressofIN14SparseMatrixEZIfE5EntryEEPT_RS3_(%"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #3 comdat {
  %2 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  %3 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #0 comdat {
  %3 = load i32, i32* @x.595
  %4 = load i32, i32* @y.596
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %11, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %13 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %11, align 8
  %14 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIfE5EntryEEEvT_S6_(%"struct.SparseMatrixEZ<float>::Entry"* %13, %"struct.SparseMatrixEZ<float>::Entry"* %14)
  %15 = load i32, i32* @x.595
  %16 = load i32, i32* @y.596
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %24 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %23, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  %25 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %23, align 8
  %26 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIfE5EntryEEEvT_S6_(%"struct.SparseMatrixEZ<float>::Entry"* %25, %"struct.SparseMatrixEZ<float>::Entry"* %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN14SparseMatrixEZIfE5EntryEEEvT_S6_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #3 comdat align 2 {
  %3 = load i32, i32* @x.597
  %4 = load i32, i32* @y.598
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %11, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %13 = load i32, i32* @x.597
  %14 = load i32, i32* @y.598
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %22 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %21, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt23__copy_move_backward_a2ILb0EPN14SparseMatrixEZIfE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %7 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %8 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %7)
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %9)
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %12 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %11)
  %13 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__copy_move_backward_aILb0EPN14SparseMatrixEZIfE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %8, %"struct.SparseMatrixEZ<float>::Entry"* %10, %"struct.SparseMatrixEZ<float>::Entry"* %12)
  %14 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_wrapIPN14SparseMatrixEZIfE5EntryEET_RKS4_S4_(%"struct.SparseMatrixEZ<float>::Entry"** dereferenceable(8) %6, %"struct.SparseMatrixEZ<float>::Entry"* %13)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__miter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"*) #3 comdat {
  %2 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  %3 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_wrapIPN14SparseMatrixEZIfE5EntryEET_RKS4_S4_(%"struct.SparseMatrixEZ<float>::Entry"** dereferenceable(8), %"struct.SparseMatrixEZ<float>::Entry"*) #3 comdat {
  %3 = load i32, i32* @x.603
  %4 = load i32, i32* @y.604
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.SparseMatrixEZ<float>::Entry"**, align 8
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"** %0, %"struct.SparseMatrixEZ<float>::Entry"*** %11, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %13 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %14 = load i32, i32* @x.603
  %15 = load i32, i32* @y.604
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.SparseMatrixEZ<float>::Entry"* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"struct.SparseMatrixEZ<float>::Entry"**, align 8
  %23 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"** %0, %"struct.SparseMatrixEZ<float>::Entry"*** %22, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %23, align 8
  %24 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt22__copy_move_backward_aILb0EPN14SparseMatrixEZIfE5EntryES3_ET1_T0_S5_S4_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %7 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %11 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIN14SparseMatrixEZIfE5EntryEEEPT_PKS6_S9_S7_(%"struct.SparseMatrixEZ<float>::Entry"* %8, %"struct.SparseMatrixEZ<float>::Entry"* %9, %"struct.SparseMatrixEZ<float>::Entry"* %10)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt12__niter_baseIPN14SparseMatrixEZIfE5EntryEET_S4_(%"struct.SparseMatrixEZ<float>::Entry"*) #3 comdat {
  %2 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  %3 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %2, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIN14SparseMatrixEZIfE5EntryEEEPT_PKS6_S9_S7_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*) #3 comdat align 2 {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %7 = alloca i64, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %10 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %8 to i64
  %11 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %42

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.609
  %18 = load i32, i32* @y.610
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %26 = load i64, i64* %7, align 8
  %27 = sub i64 0, %26
  %28 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %25, i64 %27
  %29 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %28 to i8*
  %30 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %31 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %30 to i8*
  %32 = load i64, i64* %7, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  %34 = load i32, i32* @x.609
  %35 = load i32, i32* @y.610
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %originalBBpart2, %3
  %43 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %44 = load i64, i64* %7, align 8
  %45 = sub i64 0, %44
  %46 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %43, i64 %45
  ret %"struct.SparseMatrixEZ<float>::Entry"* %46

originalBBalteredBB:                              ; preds = %originalBB, %16
  %47 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %48 = load i64, i64* %7, align 8
  %_ = shl i64 0, %48
  %_1 = shl i64 0, %48
  %_2 = sub i64 0, 0
  %gen = add i64 %_2, %48
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %47, i64 %49
  %51 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %50 to i8*
  %52 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %53 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %52 to i8*
  %54 = load i64, i64* %7, align 8
  %_3 = shl i64 8, %54
  %55 = mul i64 8, %54
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %51, i8* %53, i64 %55, i32 4, i1 false)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPN14SparseMatrixEZIfE5EntryES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #3 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %32, %3
  %8 = load i32, i32* @x.611
  %9 = load i32, i32* @y.612
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %17 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %18 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %16, %17
  %19 = load i32, i32* @x.611
  %20 = load i32, i32* @y.612
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %35

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %29 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %30 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %29 to i8*
  %31 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  br label %32

; <label>:32:                                     ; preds = %27
  %33 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %34 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %33, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %34, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  br label %7

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %36 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %37 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %38 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %36, %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt20uninitialized_fill_nIPN14SparseMatrixEZIfE5EntryEmS2_ET_S4_T0_RKT1_(%"struct.SparseMatrixEZ<float>::Entry"*, i64, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat {
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %7 = alloca i8, align 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %11 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN14SparseMatrixEZIfE5EntryEmS4_EET_S6_T0_RKT1_(%"struct.SparseMatrixEZ<float>::Entry"* %8, i64 %9, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %10)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN14SparseMatrixEZIfE5EntryEmS4_EET_S6_T0_RKT1_(%"struct.SparseMatrixEZ<float>::Entry"*, i64, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.615
  %5 = load i32, i32* @y.616
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %15 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  %18 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %18, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %19 = load i32, i32* @x.615
  %20 = load i32, i32* @y.616
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %84, %originalBBpart2
  %28 = load i32, i32* @x.615
  %29 = load i32, i32* @y.616
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i64, i64* %13, align 8
  %37 = icmp ugt i64 %36, 0
  %38 = load i32, i32* @x.615
  %39 = load i32, i32* @y.616
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %37, label %46, label %115

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %48 = invoke %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt11__addressofIN14SparseMatrixEZIfE5EntryEEPT_RS3_(%"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %47)
          to label %49 unwind label %89

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* @x.615
  %51 = load i32, i32* @y.616
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  %59 = load i32, i32* @x.615
  %60 = load i32, i32* @y.616
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt10_ConstructIN14SparseMatrixEZIfE5EntryES2_EvPT_RKT0_(%"struct.SparseMatrixEZ<float>::Entry"* %48, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %58)
          to label %67 unwind label %89

; <label>:67:                                     ; preds = %originalBBpart28
  %68 = load i32, i32* @x.615
  %69 = load i32, i32* @y.616
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i32, i32* @x.615
  %77 = load i32, i32* @y.616
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %84

; <label>:84:                                     ; preds = %originalBBpart212
  %85 = load i64, i64* %13, align 8
  %86 = add i64 %85, -1
  store i64 %86, i64* %13, align 8
  %87 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  %88 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %87, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %88, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  br label %27

; <label>:89:                                     ; preds = %originalBBpart28, %46
  %90 = load i32, i32* @x.615
  %91 = load i32, i32* @y.616
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %89, %originalBB14alteredBB
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %16, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %17, align 4
  %101 = load i32, i32* @x.615
  %102 = load i32, i32* @y.616
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %109

; <label>:109:                                    ; preds = %originalBBpart216
  %110 = load i8*, i8** %16, align 8
  %111 = call i8* @__cxa_begin_catch(i8* %110) #10
  %112 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %113 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryEEvT_S4_(%"struct.SparseMatrixEZ<float>::Entry"* %112, %"struct.SparseMatrixEZ<float>::Entry"* %113)
          to label %114 unwind label %117

; <label>:114:                                    ; preds = %109
  invoke void @__cxa_rethrow() #12
          to label %147 unwind label %117

; <label>:115:                                    ; preds = %originalBBpart24
  %116 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %15, align 8
  ret %"struct.SparseMatrixEZ<float>::Entry"* %116

; <label>:117:                                    ; preds = %114, %109
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %16, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %121 unwind label %144

; <label>:121:                                    ; preds = %117
  br label %139
                                                  ; No predecessors!
  %123 = load i32, i32* @x.615
  %124 = load i32, i32* @y.616
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %122, %originalBB18alteredBB
  call void @llvm.trap()
  %131 = load i32, i32* @x.615
  %132 = load i32, i32* @y.616
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

; <label>:139:                                    ; preds = %121
  %140 = load i8*, i8** %16, align 8
  %141 = load i32, i32* %17, align 4
  %142 = insertvalue { i8*, i32 } undef, i8* %140, 0
  %143 = insertvalue { i8*, i32 } %142, i32 %141, 1
  resume { i8*, i32 } %143

; <label>:144:                                    ; preds = %117
  %145 = landingpad { i8*, i32 }
          catch i8* null
  %146 = extractvalue { i8*, i32 } %145, 0
  call void @__clang_call_terminate(i8* %146) #9
  unreachable

; <label>:147:                                    ; preds = %114
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %148 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %149 = alloca i64, align 8
  %150 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %151 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %152 = alloca i8*
  %153 = alloca i32
  store %"struct.SparseMatrixEZ<float>::Entry"* %0, %"struct.SparseMatrixEZ<float>::Entry"** %148, align 8
  store i64 %1, i64* %149, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %150, align 8
  %154 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %148, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %154, %"struct.SparseMatrixEZ<float>::Entry"** %151, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %155 = load i64, i64* %13, align 8
  %156 = icmp ugt i64 %155, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %157 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %14, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %89
  %158 = landingpad { i8*, i32 }
          catch i8* null
  %159 = extractvalue { i8*, i32 } %158, 0
  store i8* %159, i8** %16, align 8
  %160 = extractvalue { i8*, i32 } %158, 1
  store i32 %160, i32* %17, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %122
  call void @llvm.trap()
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE8max_sizeEv(%"class.std::vector.22"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.22"*, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %2, align 8
  %3 = load %"class.std::vector.22"*, %"class.std::vector.22"** %2, align 8
  %4 = bitcast %"class.std::vector.22"* %3 to %"struct.std::_Vector_base.23"*
  %5 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNKSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %4)
  %6 = call i64 @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.24"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.24"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.24"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %2, align 8
  store i64 1152921504606846975, i64* %3, align 8
  %5 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E8max_sizeERKS4_(%"class.std::allocator.24"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.24"* @_ZNKSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.23"*, align 8
  store %"struct.std::_Vector_base.23"* %0, %"struct.std::_Vector_base.23"** %2, align 8
  %3 = load %"struct.std::_Vector_base.23"*, %"struct.std::_Vector_base.23"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %4 to %"class.std::allocator.24"*
  ret %"class.std::allocator.24"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E8max_sizeERKS4_(%"class.std::allocator.24"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.24"*, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %2, align 8
  %3 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %2, align 8
  %4 = bitcast %"class.std::allocator.24"* %3 to %"class.__gnu_cxx::new_allocator.25"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.25"* %4) #10
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.25"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E8allocateERS4_m(%"class.std::allocator.24"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.24"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %3, align 8
  %6 = bitcast %"class.std::allocator.24"* %5 to %"class.__gnu_cxx::new_allocator.25"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.25"* %6, i64 %7, i8* null)
  ret %"struct.SparseMatrixEZ<float>::Entry"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.SparseMatrixEZ<float>::Entry"* @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.25"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.629
  %5 = load i32, i32* @y.630
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.25"* %15) #10
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.629
  %20 = load i32, i32* @y.630
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28

; <label>:27:                                     ; preds = %originalBBpart2
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.629
  %30 = load i32, i32* @y.630
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64, i64* %13, align 8
  %38 = mul i64 %37, 8
  %39 = call i8* @_Znwm(i64 %38)
  %40 = bitcast i8* %39 to %"struct.SparseMatrixEZ<float>::Entry"*
  %41 = load i32, i32* @x.629
  %42 = load i32, i32* @y.630
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  ret %"struct.SparseMatrixEZ<float>::Entry"* %40

originalBBalteredBB:                              ; preds = %originalBB, %3
  %49 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  %50 = alloca i64, align 8
  %51 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %49, align 8
  store i64 %1, i64* %50, align 8
  store i8* %2, i8** %51, align 8
  %52 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %49, align 8
  %53 = load i64, i64* %50, align 8
  %54 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.25"* %52) #10
  %55 = icmp ugt i64 %53, %54
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %56 = load i64, i64* %13, align 8
  %_ = shl i64 %56, 8
  %_2 = sub i64 0, %56
  %gen = add i64 %_2, 8
  %_3 = sub i64 %56, 8
  %gen4 = mul i64 %_3, 8
  %_5 = shl i64 %56, 8
  %_6 = shl i64 %56, 8
  %_7 = shl i64 %56, 8
  %57 = mul i64 %56, 8
  %58 = call i8* @_Znwm(i64 %57)
  %59 = bitcast i8* %58 to %"struct.SparseMatrixEZ<float>::Entry"*
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.24"* dereferenceable(1), %"struct.SparseMatrixEZ<float>::Entry"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.24"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %4, align 8
  %8 = bitcast %"class.std::allocator.24"* %7 to %"class.__gnu_cxx::new_allocator.25"*
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.25"* %8, %"struct.SparseMatrixEZ<float>::Entry"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.25"*, %"struct.SparseMatrixEZ<float>::Entry"*, i64) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %9 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %8 to i8*
  call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_(%"class.std::allocator.24"* dereferenceable(1), %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.24"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %7 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %4, align 8
  %8 = bitcast %"class.std::allocator.24"* %7 to %"class.__gnu_cxx::new_allocator.25"*
  %9 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %10 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE9constructEPS3_RKS3_(%"class.__gnu_cxx::new_allocator.25"* %8, %"struct.SparseMatrixEZ<float>::Entry"* %9, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(%"class.std::vector.22"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = alloca %"class.std::vector.22"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %9 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %12 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %13 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %16, align 8
  store %"class.std::vector.22"* %0, %"class.std::vector.22"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %17 = load %"class.std::vector.22"*, %"class.std::vector.22"** %5, align 8
  %18 = call i64 @_ZNKSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.22"* %17, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0))
  store i64 %18, i64* %7, align 8
  %19 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %20 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %21, i32 0, i32 0
  %23 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %22, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %23, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %24 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %24, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %25 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %26, i32 0, i32 1
  %28 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %27, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %28, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %29 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt6vectorIN14SparseMatrixEZIfE5EntryESaIS2_EE5beginEv(%"class.std::vector.22"* %17)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %11, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %29, %"struct.SparseMatrixEZ<float>::Entry"** %30, align 8
  %31 = call i64 @_ZN9__gnu_cxxmiIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %11)
  store i64 %31, i64* %10, align 8
  %32 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %33 = load i64, i64* %7, align 8
  %34 = call %"struct.SparseMatrixEZ<float>::Entry"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.23"* %32, i64 %33)
  store %"struct.SparseMatrixEZ<float>::Entry"* %34, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %35 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %35, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %36 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %37 to %"class.std::allocator.24"*
  %39 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %40 = load i64, i64* %10, align 8
  %41 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %39, i64 %40
  %42 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E9constructIS3_EEvRS4_PS3_RKT_(%"class.std::allocator.24"* dereferenceable(1) %38, %"struct.SparseMatrixEZ<float>::Entry"* %41, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8) %42)
          to label %43 unwind label %98

; <label>:43:                                     ; preds = %3
  store %"struct.SparseMatrixEZ<float>::Entry"* null, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %44 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %45 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %4)
          to label %46 unwind label %98

; <label>:46:                                     ; preds = %43
  %47 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %45, align 8
  %48 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %49 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %50 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %49)
          to label %51 unwind label %98

; <label>:51:                                     ; preds = %46
  %52 = load i32, i32* @x.637
  %53 = load i32, i32* @y.638
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %51, %originalBBalteredBB
  %60 = load i32, i32* @x.637
  %61 = load i32, i32* @y.638
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %68 = invoke %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"* %44, %"struct.SparseMatrixEZ<float>::Entry"* %47, %"struct.SparseMatrixEZ<float>::Entry"* %48, %"class.std::allocator.24"* dereferenceable(1) %50)
          to label %69 unwind label %98

; <label>:69:                                     ; preds = %originalBBpart2
  store %"struct.SparseMatrixEZ<float>::Entry"* %68, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %70 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %71 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %70, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %71, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %72 = invoke dereferenceable(8) %"struct.SparseMatrixEZ<float>::Entry"** @_ZNK9__gnu_cxx17__normal_iteratorIPN14SparseMatrixEZIfE5EntryESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %4)
          to label %73 unwind label %98

; <label>:73:                                     ; preds = %69
  %74 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %72, align 8
  %75 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %76 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %77 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %78 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %77)
          to label %79 unwind label %98

; <label>:79:                                     ; preds = %73
  %80 = invoke %"struct.SparseMatrixEZ<float>::Entry"* @_ZSt34__uninitialized_move_if_noexcept_aIPN14SparseMatrixEZIfE5EntryES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.SparseMatrixEZ<float>::Entry"* %74, %"struct.SparseMatrixEZ<float>::Entry"* %75, %"struct.SparseMatrixEZ<float>::Entry"* %76, %"class.std::allocator.24"* dereferenceable(1) %78)
          to label %81 unwind label %98

; <label>:81:                                     ; preds = %79
  %82 = load i32, i32* @x.637
  %83 = load i32, i32* @y.638
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %81, %originalBB1alteredBB
  store %"struct.SparseMatrixEZ<float>::Entry"* %80, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %90 = load i32, i32* @x.637
  %91 = load i32, i32* @y.638
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %180

; <label>:98:                                     ; preds = %79, %73, %69, %originalBBpart2, %46, %43, %3
  %99 = load i32, i32* @x.637
  %100 = load i32, i32* @y.638
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %98, %originalBB6alteredBB
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %14, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %15, align 4
  %110 = load i32, i32* @x.637
  %111 = load i32, i32* @y.638
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %118

; <label>:118:                                    ; preds = %originalBBpart28
  %119 = load i8*, i8** %14, align 8
  %120 = call i8* @__cxa_begin_catch(i8* %119) #10
  %121 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %122 = icmp ne %"struct.SparseMatrixEZ<float>::Entry"* %121, null
  br i1 %122, label %135, label %123

; <label>:123:                                    ; preds = %118
  %124 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %124, i32 0, i32 0
  %126 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %125 to %"class.std::allocator.24"*
  %127 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %128 = load i64, i64* %10, align 8
  %129 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %127, i64 %128
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E7destroyERS4_PS3_(%"class.std::allocator.24"* dereferenceable(1) %126, %"struct.SparseMatrixEZ<float>::Entry"* %129)
          to label %130 unwind label %131

; <label>:130:                                    ; preds = %123
  br label %158

; <label>:131:                                    ; preds = %178, %originalBBpart216, %156, %originalBBpart212, %123
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %14, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %179 unwind label %219

; <label>:135:                                    ; preds = %118
  %136 = load i32, i32* @x.637
  %137 = load i32, i32* @y.638
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %135, %originalBB10alteredBB
  %144 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %145 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %146 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %147 = load i32, i32* @x.637
  %148 = load i32, i32* @y.638
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %155 = invoke dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %146)
          to label %156 unwind label %131

; <label>:156:                                    ; preds = %originalBBpart212
  invoke void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<float>::Entry"* %144, %"struct.SparseMatrixEZ<float>::Entry"* %145, %"class.std::allocator.24"* dereferenceable(1) %155)
          to label %157 unwind label %131

; <label>:157:                                    ; preds = %156
  br label %158

; <label>:158:                                    ; preds = %157, %130
  %159 = load i32, i32* @x.637
  %160 = load i32, i32* @y.638
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %158, %originalBB14alteredBB
  %167 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %168 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %169 = load i64, i64* %7, align 8
  %170 = load i32, i32* @x.637
  %171 = load i32, i32* @y.638
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.23"* %167, %"struct.SparseMatrixEZ<float>::Entry"* %168, i64 %169)
          to label %178 unwind label %131

; <label>:178:                                    ; preds = %originalBBpart216
  invoke void @__cxa_rethrow() #12
          to label %222 unwind label %131

; <label>:179:                                    ; preds = %131
  br label %214

; <label>:180:                                    ; preds = %originalBBpart24
  %181 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %182 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %9, align 8
  %183 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %184 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.23"* %183)
  call void @_ZSt8_DestroyIPN14SparseMatrixEZIfE5EntryES2_EvT_S4_RSaIT0_E(%"struct.SparseMatrixEZ<float>::Entry"* %181, %"struct.SparseMatrixEZ<float>::Entry"* %182, %"class.std::allocator.24"* dereferenceable(1) %184)
  %185 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %186 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %187 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %187, i32 0, i32 0
  %189 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %188 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %189, i32 0, i32 2
  %191 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %190, align 8
  %192 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %8, align 8
  %193 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %191 to i64
  %194 = ptrtoint %"struct.SparseMatrixEZ<float>::Entry"* %192 to i64
  %195 = sub i64 %193, %194
  %196 = sdiv exact i64 %195, 8
  call void @_ZNSt12_Vector_baseIN14SparseMatrixEZIfE5EntryESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.23"* %185, %"struct.SparseMatrixEZ<float>::Entry"* %186, i64 %196)
  %197 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %198 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %198, i32 0, i32 0
  %200 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %199 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %200, i32 0, i32 0
  store %"struct.SparseMatrixEZ<float>::Entry"* %197, %"struct.SparseMatrixEZ<float>::Entry"** %201, align 8
  %202 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %203 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %203, i32 0, i32 0
  %205 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %204 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %205, i32 0, i32 1
  store %"struct.SparseMatrixEZ<float>::Entry"* %202, %"struct.SparseMatrixEZ<float>::Entry"** %206, align 8
  %207 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %208 = load i64, i64* %7, align 8
  %209 = getelementptr inbounds %"struct.SparseMatrixEZ<float>::Entry", %"struct.SparseMatrixEZ<float>::Entry"* %207, i64 %208
  %210 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base.23", %"struct.std::_Vector_base.23"* %210, i32 0, i32 0
  %212 = bitcast %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl"* %211 to %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"*
  %213 = getelementptr inbounds %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", %"struct.std::_Vector_base<SparseMatrixEZ<float>::Entry, std::allocator<SparseMatrixEZ<float>::Entry> >::_Vector_impl_data"* %212, i32 0, i32 2
  store %"struct.SparseMatrixEZ<float>::Entry"* %209, %"struct.SparseMatrixEZ<float>::Entry"** %213, align 8
  ret void

; <label>:214:                                    ; preds = %179
  %215 = load i8*, i8** %14, align 8
  %216 = load i32, i32* %15, align 4
  %217 = insertvalue { i8*, i32 } undef, i8* %215, 0
  %218 = insertvalue { i8*, i32 } %217, i32 %216, 1
  resume { i8*, i32 } %218

; <label>:219:                                    ; preds = %131
  %220 = landingpad { i8*, i32 }
          catch i8* null
  %221 = extractvalue { i8*, i32 } %220, 0
  call void @__clang_call_terminate(i8* %221) #9
  unreachable

; <label>:222:                                    ; preds = %178
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %51
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %81
  store %"struct.SparseMatrixEZ<float>::Entry"* %80, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %98
  %223 = landingpad { i8*, i32 }
          catch i8* null
  %224 = extractvalue { i8*, i32 } %223, 0
  store i8* %224, i8** %14, align 8
  %225 = extractvalue { i8*, i32 } %223, 1
  store i32 %225, i32* %15, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %135
  %226 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %227 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %13, align 8
  %228 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %158
  %229 = bitcast %"class.std::vector.22"* %17 to %"struct.std::_Vector_base.23"*
  %230 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %12, align 8
  %231 = load i64, i64* %7, align 8
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE9constructEPS3_RKS3_(%"class.__gnu_cxx::new_allocator.25"*, %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"* dereferenceable(8)) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  %5 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  %6 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %4, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %2, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %4, align 8
  %8 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %5, align 8
  %9 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.SparseMatrixEZ<float>::Entry"*
  %11 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %6, align 8
  %12 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %10 to i8*
  %13 = bitcast %"struct.SparseMatrixEZ<float>::Entry"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN14SparseMatrixEZIfE5EntryEES3_E7destroyERS4_PS3_(%"class.std::allocator.24"* dereferenceable(1), %"struct.SparseMatrixEZ<float>::Entry"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.24"*, align 8
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %3, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %5 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %3, align 8
  %6 = bitcast %"class.std::allocator.24"* %5 to %"class.__gnu_cxx::new_allocator.25"*
  %7 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE7destroyEPS3_(%"class.__gnu_cxx::new_allocator.25"* %6, %"struct.SparseMatrixEZ<float>::Entry"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN14SparseMatrixEZIfE5EntryEE7destroyEPS3_(%"class.__gnu_cxx::new_allocator.25"*, %"struct.SparseMatrixEZ<float>::Entry"*) #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  %4 = alloca %"struct.SparseMatrixEZ<float>::Entry"*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %3, align 8
  store %"struct.SparseMatrixEZ<float>::Entry"* %1, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %3, align 8
  %6 = load %"struct.SparseMatrixEZ<float>::Entry"*, %"struct.SparseMatrixEZ<float>::Entry"** %4, align 8
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noreturn nounwind }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn }
attributes #13 = { builtin }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
