; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_fe_dgq.ll'
source_filename = "fe_dgq.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.FE_DGQ = type { %class.FE_Poly }
%class.FE_Poly = type { %class.FiniteElement.base, i32, %class.TensorProductPolynomials }
%class.FiniteElement.base = type { %class.FiniteElementBase.base }
%class.FiniteElementBase.base = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector", %"class.std::vector", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector", %"class.std::vector.7", %"class.std::vector.11", %"class.std::vector.16", %"class.std::vector.23", %"class.std::vector.28", i8 }>
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.FiniteElementData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.FullMatrix = type { %class.Table.base, [4 x i8] }
%class.Table.base = type { %class.TableBase.base }
%class.TableBase.base = type <{ %class.Subscriptor, double*, i32, %class.TableIndices }>
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.5"*, %"struct.std::pair.5"*, %"struct.std::pair.5"* }
%"struct.std::pair.5" = type { %"struct.std::pair", i32 }
%"struct.std::pair" = type { i32, i32 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"class.std::vector.7" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" = type { %class.Point*, %class.Point*, %class.Point* }
%class.Point = type { %class.Tensor }
%class.Tensor = type { [3 x double] }
%"class.std::vector.16" = type { %"struct.std::_Vector_base.17" }
%"struct.std::_Vector_base.17" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" = type { %class.Point.21*, %class.Point.21*, %class.Point.21* }
%class.Point.21 = type { %class.Tensor.22 }
%class.Tensor.22 = type { [2 x double] }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" = type { %"class.std::vector.7"*, %"class.std::vector.7"*, %"class.std::vector.7"* }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%class.TensorProductPolynomials = type { %"class.std::vector.33", i32, %"class.std::vector.28", %"class.std::vector.28" }
%"class.std::vector.33" = type { %"struct.std::_Vector_base.34" }
%"struct.std::_Vector_base.34" = type { %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data" = type { %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"* }
%"class.Polynomials::Polynomial" = type { %class.Subscriptor, %"class.std::vector.38" }
%"class.std::vector.38" = type { %"struct.std::_Vector_base.39" }
%"struct.std::_Vector_base.39" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { double*, double*, double* }
%"class.std::allocator.43" = type { i8 }
%"class.std::allocator.25" = type { i8 }
%class.FiniteElementBase = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector", %"class.std::vector", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector", %"class.std::vector.7", %"class.std::vector.11", %"class.std::vector.16", %"class.std::vector.23", %"class.std::vector.28", i8, [7 x i8] }>
%class.Table = type { %class.TableBase.base, [4 x i8] }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.Polynomials::Polynomial"* }
%"class.std::allocator.35" = type { i8 }
%"class.std::allocator.30" = type { i8 }
%"class.__gnu_cxx::new_allocator.44" = type { i8 }
%"class.__gnu_cxx::new_allocator.26" = type { i8 }
%class.TableBase = type <{ %class.Subscriptor, double*, i32, %class.TableIndices, [4 x i8] }>
%"class.__gnu_cxx::__normal_iterator.52" = type { %class.Point* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::__cxx11::basic_ostringstream" = type { %"class.std::basic_ostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented" = type { %class.ExceptionBase }
%class.ExceptionBase = type { %"class.std::exception", i8*, i32, i8*, i8*, i8* }
%"class.std::exception" = type { i32 (...)** }
%"struct.(anonymous namespace)::int2type" = type { i8 }
%class.FiniteElement = type { %class.FiniteElementBase.base, [7 x i8] }
%"class.__gnu_cxx::new_allocator.31" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.53" = type { i32* }
%class.Tensor.49 = type { [3 x %class.Tensor] }
%"class.Mapping<3>::InternalDataBase" = type opaque
%class.Mapping = type { %class.Subscriptor }
%class.Quadrature = type opaque
%class.Quadrature.50 = type opaque
%class.TriaIterator = type opaque
%class.FEValuesData = type opaque
%"class.__gnu_cxx::new_allocator.36" = type { i8 }
%"struct.std::__false_type" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.51" = type { double* }
%"class.std::allocator.40" = type { i8 }
%"class.__gnu_cxx::new_allocator.41" = type { i8 }
%"class.std::allocator.8" = type { i8 }
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"class.__gnu_cxx::new_allocator.9" = type { i8 }
%"struct.std::iterator" = type { i8 }
%"struct.std::_Bit_const_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%"class.std::allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }

$_ZN6FE_DGQILi3EEC5Ej = comdat any

$_ZN24TensorProductPolynomialsILi3EEC2IN11Polynomials10PolynomialIdEEEERKSt6vectorIT_SaIS6_EE = comdat any

$_ZN6FE_DGQILi3EE14get_dpo_vectorEj = comdat any

$_ZNSaIbEC2Ev = comdat any

$_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_ = comdat any

$_ZNSaISt6vectorIbSaIbEEEC2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSaISt6vectorIbSaIbEEED2Ev = comdat any

$_ZNSt6vectorIbSaIbEED2Ev = comdat any

$_ZNSaIbED2Ev = comdat any

$_ZNSt6vectorIjSaIjEED2Ev = comdat any

$_ZN24TensorProductPolynomialsILi3EED2Ev = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIjSaIjEEC2Ev = comdat any

$_ZNK6FE_DGQILi3EE14rotate_indicesERSt6vectorIjSaIjEEc = comdat any

$_ZN5TableILi2EdE6reinitEjj = comdat any

$_ZN10FullMatrixIdE4fillIdEEvPKT_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_ = comdat any

$_ZN5PointILi3EEC2Ev = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EEixEm = comdat any

$_ZN5PointILi3EEclEj = comdat any

$_ZN5PointILi3EEaSERKS0_ = comdat any

$_ZNK6FE_DGQILi3EE8get_nameB5cxx11Ev = comdat any

$_ZNK6FE_DGQILi3EE24get_interpolation_matrixERK17FiniteElementBaseILi3EER10FullMatrixIdE = comdat any

$_ZN18deal_II_exceptions9internals17issue_error_throwIN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedEEEvPKciS6_S6_S6_T_ = comdat any

$_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedC2Ev = comdat any

$_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev = comdat any

$_ZN5TableILi2EdEclEjj = comdat any

$_ZN10FullMatrixIdED2Ev = comdat any

$_ZNK6FE_DGQILi3EE19has_support_on_faceEjj = comdat any

$_ZNK6FE_DGQILi3EE18memory_consumptionEv = comdat any

$_ZNK6FE_DGQILi3EE5cloneEv = comdat any

$_ZNSaIjEC2Ev = comdat any

$_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_ = comdat any

$_ZNSaIjED2Ev = comdat any

$_ZNSt6vectorIjSaIjEEixEm = comdat any

$_ZNSt6vectorIjSaIjEE6resizeEmj = comdat any

$_ZN6FE_DGQILi3EED2Ev = comdat any

$_ZN6FE_DGQILi3EED0Ev = comdat any

$_ZN6TensorILi1ELi3EEaSERKS0_ = comdat any

$_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev = comdat any

$_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED0Ev = comdat any

$_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD0Ev = comdat any

$_ZN5PointILi3EEC2Eddd = comdat any

$_ZN6TensorILi1ELi3EEC2Eb = comdat any

$_ZN5TableILi2EdED2Ev = comdat any

$_ZN9TableBaseILi2EdED2Ev = comdat any

$_ZN9TableBaseILi2EdED0Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIbEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIbED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIjED2Ev = comdat any

$_ZSt8_DestroyIPN11Polynomials10PolynomialIdEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials10PolynomialIdEEEEvT_S6_ = comdat any

$_ZSt8_DestroyIN11Polynomials10PolynomialIdEEEvPT_ = comdat any

$_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEED2Ev = comdat any

$_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE5beginEv = comdat any

$_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE3endEv = comdat any

$_ZNSaIN11Polynomials10PolynomialIdEEEC2Ev = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEET_SB_RKS3_ = comdat any

$_ZNSaIN11Polynomials10PolynomialIdEEED2Ev = comdat any

$_ZN24TensorProductPolynomialsILi3EE12x_to_the_dimEj = comdat any

$_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEC2ERKS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2Ev = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EEC2ERKS3_ = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvT_SB_St12__false_type = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2ERKS4_ = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvT_SB_St20forward_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_ = comdat any

$_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE17_S_check_init_lenEmRKS3_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E = comdat any

$_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag = comdat any

$_ZN9__gnu_cxxmiIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8max_sizeERKS4_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_ = comdat any

$_ZN9__gnu_cxxneIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_ = comdat any

$_ZSt10_ConstructIN11Polynomials10PolynomialIdEES2_EvPT_RKT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEppEv = comdat any

$_ZN11Polynomials10PolynomialIdEC2ERKS1_ = comdat any

$_ZNSt6vectorIdSaIdEEC2ERKS1_ = comdat any

$_ZN11Polynomials10PolynomialIdED2Ev = comdat any

$_ZN11Polynomials10PolynomialIdED0Ev = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIdSaIdEE5beginEv = comdat any

$_ZNKSt6vectorIdSaIdEE3endEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEED2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev = comdat any

$_ZNSaIdEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSaIdED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdED2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_ = comdat any

$_ZSt12__niter_wrapIPdET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZNSt6vectorIdSaIdEED2Ev = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIjSaIjEED2Ev = comdat any

$_ZSt8_DestroyIPjEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm = comdat any

$_ZNSt13_Bvector_baseISaIbEEC2ERKS0_ = comdat any

$_ZNSt6vectorIbSaIbEE13_M_initializeEm = comdat any

$_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb = comdat any

$_ZNSt13_Bvector_baseISaIbEED2Ev = comdat any

$_ZNSaImEC2IbEERKSaIT_E = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE = comdat any

$_ZNSaImED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZNSaImEC2ERKS_ = comdat any

$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ = comdat any

$_ZNSt13_Bit_iteratorC2Ev = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm = comdat any

$_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm = comdat any

$_ZSt11__addressofImEPT_RS0_ = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNKSt13_Bit_iteratorplEl = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZNSt13_Bit_iteratorpLEl = comdat any

$_ZNSt18_Bit_iterator_base7_M_incrEl = comdat any

$_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm = comdat any

$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNSaISt6vectorIbSaIbEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_ = comdat any

$_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_ = comdat any

$_ZNSt6vectorIbSaIbEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv = comdat any

$_ZNSaIbEC2ImEERKSaIT_E = comdat any

$_ZNKSt6vectorIbSaIbEE4sizeEv = comdat any

$_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator = comdat any

$_ZNKSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNKSt6vectorIbSaIbEE3endEv = comdat any

$_ZStmiRKSt18_Bit_iterator_baseS1_ = comdat any

$_ZSt4copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_ = comdat any

$_ZNSt19_Bit_const_iteratorC2EPmj = comdat any

$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPmET_S1_ = comdat any

$_ZSt12__niter_wrapIPmET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPmET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_ = comdat any

$_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_ = comdat any

$_ZSt12__niter_baseISt13_Bit_iteratorET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_ = comdat any

$_ZNKSt19_Bit_const_iteratordeEv = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt14_Bit_referenceaSEb = comdat any

$_ZNSt19_Bit_const_iteratorppEv = comdat any

$_ZNSt13_Bit_iteratorppEv = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZNSt18_Bit_iterator_base10_M_bump_upEv = comdat any

$_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIjSaIjEEC2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev = comdat any

$_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE = comdat any

$_ZN12TableIndicesILi2EEC2Ejj = comdat any

$_ZNK9TableBaseILi2EdE10n_elementsEv = comdat any

$_ZN12TableIndicesILi2EEC2Ev = comdat any

$_ZN9TableBaseILi2EdE12reset_valuesEv = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZSt6fill_nIPdjdET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZN9TableBaseILi2EdE4fillIdEEvPKT_ = comdat any

$_ZSt4copyIPKdPdET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPKdET_S2_ = comdat any

$_ZSt12__niter_baseIPKdET_S2_ = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZN5PointILi3EEC2ERKS0_ = comdat any

$_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZN6TensorILi1ELi3EEC2ERKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_ = comdat any

$_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_ = comdat any

$_ZSt11__addressofI5PointILi3EEEPT_RS2_ = comdat any

$_ZSt8_DestroyIP5PointILi3EEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIP5PointILi3EEET_S3_ = comdat any

$_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIP5PointILi3EEET_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_ = comdat any

$_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m = comdat any

$_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedC2ERKS1_ = comdat any

$_ZN13ExceptionBaseC2ERKS_ = comdat any

$_ZNSt9exceptionC2ERKS_ = comdat any

$_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj = comdat any

$_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_ = comdat any

$_ZNSaIjEC2ERKS_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPjET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPjET_S1_ = comdat any

$_ZNKSt6vectorIjSaIjEE4sizeEv = comdat any

$_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj = comdat any

$_ZNSt6vectorIjSaIjEE3endEv = comdat any

$_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj = comdat any

$_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZSt4fillIPjjEvT_S1_RKT0_ = comdat any

$_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIjSaIjEE5beginEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPjET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNKSt6vectorIjSaIjEE8max_sizeEv = comdat any

$_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_ = comdat any

$_ZTV6FE_DGQILi3EE = comdat any

$_ZTS17FiniteElementBaseILi3EE = comdat any

$_ZTS17FiniteElementDataILi3EE = comdat any

$_ZTI17FiniteElementDataILi3EE = comdat any

$_ZTI17FiniteElementBaseILi3EE = comdat any

$_ZTS6FE_DGQILi3EE = comdat any

$_ZTS7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = comdat any

$_ZTS13FiniteElementILi3EE = comdat any

$_ZTI13FiniteElementILi3EE = comdat any

$_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = comdat any

$_ZTI6FE_DGQILi3EE = comdat any

$_ZTV7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = comdat any

$_ZTVN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE = comdat any

$_ZTSN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE = comdat any

$_ZTIN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE = comdat any

$_ZTV9TableBaseILi2EdE = comdat any

$_ZTS9TableBaseILi2EdE = comdat any

$_ZTI9TableBaseILi2EdE = comdat any

$_ZTVN11Polynomials10PolynomialIdEE = comdat any

$_ZTSN11Polynomials10PolynomialIdEE = comdat any

$_ZTIN11Polynomials10PolynomialIdEE = comdat any

@_ZTV6FE_DGQILi3EE = weak_odr unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI6FE_DGQILi3EE to i8*), i8* bitcast (void (%class.FE_DGQ*)* @_ZN6FE_DGQILi3EED2Ev to i8*), i8* bitcast (void (%class.FE_DGQ*)* @_ZN6FE_DGQILi3EED0Ev to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.FE_DGQ*)* @_ZNK6FE_DGQILi3EE8get_nameB5cxx11Ev to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11shape_valueEjRK5PointILi3EE to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE21shape_value_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE10shape_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20shape_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor.49*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15shape_grad_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor.49*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE25shape_grad_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.FE_DGQ*, %class.FiniteElementBase*, %class.FullMatrix*)* @_ZNK6FE_DGQILi3EE24get_interpolation_matrixERK17FiniteElementBaseILi3EER10FullMatrixIdE to i8*), i8* bitcast (void (%class.Point*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj to i8*), i8* bitcast (void (%class.Point.21*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj to i8*), i8* bitcast (i32 (%class.FE_Poly*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15n_base_elementsEv to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE12base_elementEj to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20element_multiplicityEj to i8*), i8* bitcast (i1 (%class.FE_DGQ*, i32, i32)* @_ZNK6FE_DGQILi3EE19has_support_on_faceEjj to i8*), i8* bitcast (i32 (%class.FE_DGQ*)* @_ZNK6FE_DGQILi3EE18memory_consumptionEv to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_onceE11UpdateFlags to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_eachE11UpdateFlags to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_DGQ*)* @_ZNK6FE_DGQILi3EE5cloneEv to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FE_Poly*, i32, %class.Mapping*, %class.Quadrature*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.50*)* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.50*)* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator*, %class.Quadrature*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator*, i32, %class.Quadrature.50*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator*, i32, i32, %class.Quadrature.50*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*)] }, comdat, align 8
@_ZN6FE_DGQILi3EE8Matrices20n_embedding_matricesE = external constant i32, align 4
@_ZN6FE_DGQILi3EE8Matrices9embeddingE = external constant [0 x double*], align 8
@_ZN6FE_DGQILi3EE8Matrices21n_projection_matricesE = external constant i32, align 4
@_ZN6FE_DGQILi3EE8Matrices19projection_matricesE = external constant [0 x double*], align 8
@.str = private unnamed_addr constant [8 x i8] c"FE_DGQ<\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c">(\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTS17FiniteElementBaseILi3EE = linkonce_odr constant [26 x i8] c"17FiniteElementBaseILi3EE\00", comdat
@_ZTI11Subscriptor = external constant i8*
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS17FiniteElementDataILi3EE = linkonce_odr constant [26 x i8] c"17FiniteElementDataILi3EE\00", comdat
@_ZTI17FiniteElementDataILi3EE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS17FiniteElementDataILi3EE, i32 0, i32 0) }, comdat
@_ZTI17FiniteElementBaseILi3EE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS17FiniteElementBaseILi3EE, i32 0, i32 0), i32 0, i32 2, i8* bitcast (i8** @_ZTI11Subscriptor to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTI17FiniteElementDataILi3EE to i8*), i64 6146 }, comdat
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS6FE_DGQILi3EE = weak_odr constant [14 x i8] c"6FE_DGQILi3EE\00", comdat
@_ZTS7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = linkonce_odr constant [47 x i8] c"7FE_PolyI24TensorProductPolynomialsILi3EELi3EE\00", comdat
@_ZTS13FiniteElementILi3EE = linkonce_odr constant [22 x i8] c"13FiniteElementILi3EE\00", comdat
@_ZTI13FiniteElementILi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS13FiniteElementILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTI17FiniteElementBaseILi3EE to i8*) }, comdat
@_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_ZTS7FE_PolyI24TensorProductPolynomialsILi3EELi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13FiniteElementILi3EE to i8*) }, comdat
@_ZTI6FE_DGQILi3EE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS6FE_DGQILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE to i8*) }, comdat
@.str.3 = private unnamed_addr constant [10 x i8] c"fe_dgq.cc\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.5 = private unnamed_addr constant [104 x i8] c"(x_source_fe.get_name().find (\22FE_DGQ<\22) == 0) || (dynamic_cast<const FE_DGQ<dim>*>(&x_source_fe) != 0)\00", align 1
@.str.6 = private unnamed_addr constant [67 x i8] c"typename FiniteElementBase<dim>:: ExcInterpolationNotImplemented()\00", align 1
@_ZTV7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = linkonce_odr unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE to i8*), i8* bitcast (void (%class.FE_Poly*)* @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev to i8*), i8* bitcast (void (%class.FE_Poly*)* @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11shape_valueEjRK5PointILi3EE to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE21shape_value_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE10shape_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20shape_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor.49*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15shape_grad_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor.49*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE25shape_grad_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.FiniteElementBase*, %class.FiniteElementBase*, %class.FullMatrix*)* @_ZNK17FiniteElementBaseILi3EE24get_interpolation_matrixERKS0_R10FullMatrixIdE to i8*), i8* bitcast (void (%class.Point*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj to i8*), i8* bitcast (void (%class.Point.21*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj to i8*), i8* bitcast (i32 (%class.FE_Poly*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15n_base_elementsEv to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE12base_elementEj to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20element_multiplicityEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%class.FiniteElement*)* @_ZNK13FiniteElementILi3EE18memory_consumptionEv to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_onceE11UpdateFlags to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_eachE11UpdateFlags to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FE_Poly*, i32, %class.Mapping*, %class.Quadrature*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.50*)* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.50*)* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator*, %class.Quadrature*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator*, i32, %class.Quadrature.50*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator*, i32, i32, %class.Quadrature.50*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*)] }, comdat, align 8
@_ZTVN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE to i8*), i8* bitcast (void (%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*)* @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev to i8*), i8* bitcast (void (%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*)* @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE = linkonce_odr constant [60 x i8] c"N17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE\00", comdat
@_ZTI13ExceptionBase = external constant i8*
@_ZTIN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @_ZTSN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTV9TableBaseILi2EdE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2EdE to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2EdED2Ev to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2EdED0Ev to i8*)] }, comdat, align 8
@_ZTS9TableBaseILi2EdE = linkonce_odr constant [18 x i8] c"9TableBaseILi2EdE\00", comdat
@_ZTI9TableBaseILi2EdE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS9TableBaseILi2EdE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@.str.7 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@_ZTVN11Polynomials10PolynomialIdEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11Polynomials10PolynomialIdEE to i8*), i8* bitcast (void (%"class.Polynomials::Polynomial"*)* @_ZN11Polynomials10PolynomialIdED2Ev to i8*), i8* bitcast (void (%"class.Polynomials::Polynomial"*)* @_ZN11Polynomials10PolynomialIdED0Ev to i8*)] }, comdat, align 8
@_ZTSN11Polynomials10PolynomialIdEE = linkonce_odr constant [31 x i8] c"N11Polynomials10PolynomialIdEE\00", comdat
@_ZTIN11Polynomials10PolynomialIdEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN11Polynomials10PolynomialIdEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@.str.8 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@_ZTV13ExceptionBase = external unnamed_addr constant { [6 x i8*] }
@_ZTVSt9exception = external unnamed_addr constant { [5 x i8*] }
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0

@_ZN6FE_DGQILi3EEC1Ej = weak_odr alias void (%class.FE_DGQ*, i32), void (%class.FE_DGQ*, i32)* @_ZN6FE_DGQILi3EEC2Ej

; Function Attrs: noinline uwtable
define weak_odr void @_ZN6FE_DGQILi3EEC2Ej(%class.FE_DGQ*, i32) unnamed_addr #0 comdat($_ZN6FE_DGQILi3EEC5Ej) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.FE_DGQ*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %class.TensorProductPolynomials, align 8
  %14 = alloca %"class.std::vector.33", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = alloca %class.FiniteElementData, align 4
  %18 = alloca %"class.std::vector.28", align 8
  %19 = alloca %"class.std::vector.7", align 8
  %20 = alloca %class.FiniteElementData, align 4
  %21 = alloca %"class.std::vector.28", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.std::allocator.43", align 1
  %24 = alloca %"class.std::vector.23", align 8
  %25 = alloca %class.FiniteElementData, align 4
  %26 = alloca %"class.std::vector.28", align 8
  %27 = alloca %"class.std::vector.7", align 8
  %28 = alloca i8, align 1
  %29 = alloca %"class.std::allocator.43", align 1
  %30 = alloca %"class.std::allocator.25", align 1
  %31 = alloca %"class.std::vector.28", align 8
  %32 = alloca %"class.std::vector.28", align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca %class.Point, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %class.Point, align 8
  %40 = alloca double, align 8
  %41 = alloca %class.Point, align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  store %class.FE_DGQ* %0, %class.FE_DGQ** %11, align 8
  store i32 %1, i32* %12, align 4
  %46 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %47 = bitcast %class.FE_DGQ* %46 to %class.FE_Poly*
  %48 = load i32, i32* %12, align 4
  %49 = load i32, i32* %12, align 4
  call void @_ZN11Polynomials19LagrangeEquidistant23generate_complete_basisEj(%"class.std::vector.33"* sret %14, i32 %49)
  %50 = load i32, i32* @x
  %51 = load i32, i32* @y
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN24TensorProductPolynomialsILi3EEC2IN11Polynomials10PolynomialIdEEEERKSt6vectorIT_SaIS6_EE(%class.TensorProductPolynomials* %13, %"class.std::vector.33"* dereferenceable(24) %14)
          to label %58 unwind label %303

; <label>:58:                                     ; preds = %originalBBpart2
  %59 = load i32, i32* @x
  %60 = load i32, i32* @y
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %58, %originalBB1alteredBB
  %67 = load i32, i32* %12, align 4
  %68 = load i32, i32* @x
  %69 = load i32, i32* @y
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN6FE_DGQILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* sret %18, i32 %67)
          to label %76 unwind label %323

; <label>:76:                                     ; preds = %originalBBpart24
  %77 = load i32, i32* %12, align 4
  invoke void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData* %17, %"class.std::vector.28"* dereferenceable(24) %18, i32 1, i32 %77)
          to label %78 unwind label %343

; <label>:78:                                     ; preds = %76
  %79 = load i32, i32* @x
  %80 = load i32, i32* @y
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %78, %originalBB6alteredBB
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* @x
  %89 = load i32, i32* @y
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZN6FE_DGQILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* sret %21, i32 %87)
          to label %96 unwind label %343

; <label>:96:                                     ; preds = %originalBBpart28
  %97 = load i32, i32* @x
  %98 = load i32, i32* @y
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %96, %originalBB10alteredBB
  %105 = load i32, i32* %12, align 4
  %106 = load i32, i32* @x
  %107 = load i32, i32* @y
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData* %20, %"class.std::vector.28"* dereferenceable(24) %21, i32 1, i32 %105)
          to label %114 unwind label %347

; <label>:114:                                    ; preds = %originalBBpart212
  %115 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %20, i32 0, i32 10
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  store i8 1, i8* %22, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.43"* %23) #13
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.7"* %19, i64 %117, i8* dereferenceable(1) %22, %"class.std::allocator.43"* dereferenceable(1) %23)
          to label %118 unwind label %351

; <label>:118:                                    ; preds = %114
  %119 = load i32, i32* %12, align 4
  invoke void @_ZN6FE_DGQILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* sret %26, i32 %119)
          to label %120 unwind label %355

; <label>:120:                                    ; preds = %118
  %121 = load i32, i32* %12, align 4
  invoke void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData* %25, %"class.std::vector.28"* dereferenceable(24) %26, i32 1, i32 %121)
          to label %122 unwind label %375

; <label>:122:                                    ; preds = %120
  %123 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %25, i32 0, i32 10
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  store i8 1, i8* %28, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.43"* %29) #13
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.7"* %27, i64 1, i8* dereferenceable(1) %28, %"class.std::allocator.43"* dereferenceable(1) %29)
          to label %126 unwind label %379

; <label>:126:                                    ; preds = %122
  %127 = load i32, i32* @x
  %128 = load i32, i32* @y
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %126, %originalBB14alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.25"* %30) #13
  %135 = load i32, i32* @x
  %136 = load i32, i32* @y
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.23"* %24, i64 %125, %"class.std::vector.7"* dereferenceable(40) %27, %"class.std::allocator.25"* dereferenceable(1) %30)
          to label %143 unwind label %383

; <label>:143:                                    ; preds = %originalBBpart216
  invoke void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EEC2EjRKS1_RK17FiniteElementDataILi3EERKSt6vectorIbSaIbEERKS9_ISB_SaISB_EE(%class.FE_Poly* %47, i32 %48, %class.TensorProductPolynomials* dereferenceable(80) %13, %class.FiniteElementData* dereferenceable(52) %17, %"class.std::vector.7"* dereferenceable(40) %19, %"class.std::vector.23"* dereferenceable(24) %24)
          to label %144 unwind label %387

; <label>:144:                                    ; preds = %143
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.23"* %24)
          to label %145 unwind label %383

; <label>:145:                                    ; preds = %144
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %30) #13
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %27)
          to label %146 unwind label %379

; <label>:146:                                    ; preds = %145
  call void @_ZNSaIbED2Ev(%"class.std::allocator.43"* %29) #13
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %26)
          to label %147 unwind label %355

; <label>:147:                                    ; preds = %146
  %148 = load i32, i32* @x
  %149 = load i32, i32* @y
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %147, %originalBB18alteredBB
  %156 = load i32, i32* @x
  %157 = load i32, i32* @y
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %19)
          to label %164 unwind label %351

; <label>:164:                                    ; preds = %originalBBpart220
  call void @_ZNSaIbED2Ev(%"class.std::allocator.43"* %23) #13
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %21)
          to label %165 unwind label %343

; <label>:165:                                    ; preds = %164
  %166 = load i32, i32* @x
  %167 = load i32, i32* @y
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %165, %originalBB22alteredBB
  %174 = load i32, i32* @x
  %175 = load i32, i32* @y
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %18)
          to label %182 unwind label %323

; <label>:182:                                    ; preds = %originalBBpart224
  invoke void @_ZN24TensorProductPolynomialsILi3EED2Ev(%class.TensorProductPolynomials* %13)
          to label %183 unwind label %303

; <label>:183:                                    ; preds = %182
  %184 = load i32, i32* @x
  %185 = load i32, i32* @y
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %183, %originalBB26alteredBB
  call void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"* %14)
  %192 = bitcast %class.FE_DGQ* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV6FE_DGQILi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %192, align 8
  %193 = load i32, i32* @x
  %194 = load i32, i32* @y
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  invoke void @_ZNSt6vectorIjSaIjEEC2Ev(%"class.std::vector.28"* %31)
          to label %201 unwind label %520

; <label>:201:                                    ; preds = %originalBBpart228
  %202 = load i32, i32* @x
  %203 = load i32, i32* @y
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %201, %originalBB30alteredBB
  %210 = load i32, i32* @x
  %211 = load i32, i32* @y
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @_ZNSt6vectorIjSaIjEEC2Ev(%"class.std::vector.28"* %32)
          to label %218 unwind label %524

; <label>:218:                                    ; preds = %originalBBpart232
  invoke void @_ZNK6FE_DGQILi3EE14rotate_indicesERSt6vectorIjSaIjEEc(%class.FE_DGQ* %46, %"class.std::vector.28"* dereferenceable(24) %31, i8 signext 90)
          to label %219 unwind label %528

; <label>:219:                                    ; preds = %218
  %220 = load i32, i32* @x
  %221 = load i32, i32* @y
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %219, %originalBB34alteredBB
  %228 = load i32, i32* @x
  %229 = load i32, i32* @y
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  invoke void @_ZNK6FE_DGQILi3EE14rotate_indicesERSt6vectorIjSaIjEEc(%class.FE_DGQ* %46, %"class.std::vector.28"* dereferenceable(24) %32, i8 signext 88)
          to label %236 unwind label %528

; <label>:236:                                    ; preds = %originalBBpart236
  %237 = load i32, i32* @x
  %238 = load i32, i32* @y
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %236, %originalBB38alteredBB
  %245 = load i32, i32* %12, align 4
  %246 = load i32, i32* @_ZN6FE_DGQILi3EE8Matrices20n_embedding_matricesE, align 4
  %247 = icmp ult i32 %245, %246
  %248 = load i32, i32* @x
  %249 = load i32, i32* @y
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %247, label %256, label %622

; <label>:256:                                    ; preds = %originalBBpart240
  %257 = load i32, i32* %12, align 4
  %258 = zext i32 %257 to i64
  %259 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN6FE_DGQILi3EE8Matrices9embeddingE, i64 0, i64 %258
  %260 = load double*, double** %259, align 8
  %261 = icmp ne double* %260, null
  br i1 %261, label %262, label %622

; <label>:262:                                    ; preds = %256
  %263 = load i32, i32* @x
  %264 = load i32, i32* @y
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %262, %originalBB42alteredBB
  store i32 0, i32* %33, align 4
  %271 = load i32, i32* @x
  %272 = load i32, i32* @y
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %279

; <label>:279:                                    ; preds = %300, %originalBBpart244
  %280 = load i32, i32* %33, align 4
  %281 = icmp ult i32 %280, 8
  br i1 %281, label %282, label %532

; <label>:282:                                    ; preds = %279
  %283 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %284 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %283, i32 0, i32 4
  %285 = load i32, i32* %33, align 4
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %284, i64 0, i64 %286
  %288 = bitcast %class.FullMatrix* %287 to %class.Table*
  %289 = bitcast %class.FE_DGQ* %46 to i8*
  %290 = getelementptr inbounds i8, i8* %289, i64 24
  %291 = bitcast i8* %290 to %class.FiniteElementData*
  %292 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %291, i32 0, i32 10
  %293 = load i32, i32* %292, align 8
  %294 = bitcast %class.FE_DGQ* %46 to i8*
  %295 = getelementptr inbounds i8, i8* %294, i64 24
  %296 = bitcast i8* %295 to %class.FiniteElementData*
  %297 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %296, i32 0, i32 10
  %298 = load i32, i32* %297, align 8
  invoke void @_ZN5TableILi2EdE6reinitEjj(%class.Table* %288, i32 %293, i32 %298)
          to label %299 unwind label %528

; <label>:299:                                    ; preds = %282
  br label %300

; <label>:300:                                    ; preds = %299
  %301 = load i32, i32* %33, align 4
  %302 = add i32 %301, 1
  store i32 %302, i32* %33, align 4
  br label %279

; <label>:303:                                    ; preds = %182, %originalBBpart2
  %304 = load i32, i32* @x
  %305 = load i32, i32* @y
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %303, %originalBB46alteredBB
  %312 = landingpad { i8*, i32 }
          cleanup
  %313 = extractvalue { i8*, i32 } %312, 0
  store i8* %313, i8** %15, align 8
  %314 = extractvalue { i8*, i32 } %312, 1
  store i32 %314, i32* %16, align 4
  %315 = load i32, i32* @x
  %316 = load i32, i32* @y
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %502

; <label>:323:                                    ; preds = %originalBBpart224, %originalBBpart24
  %324 = load i32, i32* @x
  %325 = load i32, i32* @y
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %323, %originalBB50alteredBB
  %332 = landingpad { i8*, i32 }
          cleanup
  %333 = extractvalue { i8*, i32 } %332, 0
  store i8* %333, i8** %15, align 8
  %334 = extractvalue { i8*, i32 } %332, 1
  store i32 %334, i32* %16, align 4
  %335 = load i32, i32* @x
  %336 = load i32, i32* @y
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %468

; <label>:343:                                    ; preds = %164, %originalBBpart28, %76
  %344 = landingpad { i8*, i32 }
          cleanup
  %345 = extractvalue { i8*, i32 } %344, 0
  store i8* %345, i8** %15, align 8
  %346 = extractvalue { i8*, i32 } %344, 1
  store i32 %346, i32* %16, align 4
  br label %450

; <label>:347:                                    ; preds = %originalBBpart212
  %348 = landingpad { i8*, i32 }
          cleanup
  %349 = extractvalue { i8*, i32 } %348, 0
  store i8* %349, i8** %15, align 8
  %350 = extractvalue { i8*, i32 } %348, 1
  store i32 %350, i32* %16, align 4
  br label %448

; <label>:351:                                    ; preds = %originalBBpart220, %114
  %352 = landingpad { i8*, i32 }
          cleanup
  %353 = extractvalue { i8*, i32 } %352, 0
  store i8* %353, i8** %15, align 8
  %354 = extractvalue { i8*, i32 } %352, 1
  store i32 %354, i32* %16, align 4
  br label %447

; <label>:355:                                    ; preds = %146, %118
  %356 = load i32, i32* @x
  %357 = load i32, i32* @y
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %355, %originalBB54alteredBB
  %364 = landingpad { i8*, i32 }
          cleanup
  %365 = extractvalue { i8*, i32 } %364, 0
  store i8* %365, i8** %15, align 8
  %366 = extractvalue { i8*, i32 } %364, 1
  store i32 %366, i32* %16, align 4
  %367 = load i32, i32* @x
  %368 = load i32, i32* @y
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %413

; <label>:375:                                    ; preds = %120
  %376 = landingpad { i8*, i32 }
          cleanup
  %377 = extractvalue { i8*, i32 } %376, 0
  store i8* %377, i8** %15, align 8
  %378 = extractvalue { i8*, i32 } %376, 1
  store i32 %378, i32* %16, align 4
  br label %411

; <label>:379:                                    ; preds = %145, %122
  %380 = landingpad { i8*, i32 }
          cleanup
  %381 = extractvalue { i8*, i32 } %380, 0
  store i8* %381, i8** %15, align 8
  %382 = extractvalue { i8*, i32 } %380, 1
  store i32 %382, i32* %16, align 4
  br label %410

; <label>:383:                                    ; preds = %144, %originalBBpart216
  %384 = landingpad { i8*, i32 }
          cleanup
  %385 = extractvalue { i8*, i32 } %384, 0
  store i8* %385, i8** %15, align 8
  %386 = extractvalue { i8*, i32 } %384, 1
  store i32 %386, i32* %16, align 4
  br label %408

; <label>:387:                                    ; preds = %143
  %388 = landingpad { i8*, i32 }
          cleanup
  %389 = extractvalue { i8*, i32 } %388, 0
  store i8* %389, i8** %15, align 8
  %390 = extractvalue { i8*, i32 } %388, 1
  store i32 %390, i32* %16, align 4
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.23"* %24)
          to label %391 unwind label %1233

; <label>:391:                                    ; preds = %387
  %392 = load i32, i32* @x
  %393 = load i32, i32* @y
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %391, %originalBB58alteredBB
  %400 = load i32, i32* @x
  %401 = load i32, i32* @y
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %408

; <label>:408:                                    ; preds = %originalBBpart260, %383
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %30) #13
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %27)
          to label %409 unwind label %1233

; <label>:409:                                    ; preds = %408
  br label %410

; <label>:410:                                    ; preds = %409, %379
  call void @_ZNSaIbED2Ev(%"class.std::allocator.43"* %29) #13
  br label %411

; <label>:411:                                    ; preds = %410, %375
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %26)
          to label %412 unwind label %1233

; <label>:412:                                    ; preds = %411
  br label %413

; <label>:413:                                    ; preds = %412, %originalBBpart256
  %414 = load i32, i32* @x
  %415 = load i32, i32* @y
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %413, %originalBB62alteredBB
  %422 = load i32, i32* @x
  %423 = load i32, i32* @y
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %19)
          to label %430 unwind label %1233

; <label>:430:                                    ; preds = %originalBBpart264
  %431 = load i32, i32* @x
  %432 = load i32, i32* @y
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %430, %originalBB66alteredBB
  %439 = load i32, i32* @x
  %440 = load i32, i32* @y
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %447

; <label>:447:                                    ; preds = %originalBBpart268, %351
  call void @_ZNSaIbED2Ev(%"class.std::allocator.43"* %23) #13
  br label %448

; <label>:448:                                    ; preds = %447, %347
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %21)
          to label %449 unwind label %1233

; <label>:449:                                    ; preds = %448
  br label %450

; <label>:450:                                    ; preds = %449, %343
  %451 = load i32, i32* @x
  %452 = load i32, i32* @y
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %450, %originalBB70alteredBB
  %459 = load i32, i32* @x
  %460 = load i32, i32* @y
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %18)
          to label %467 unwind label %1233

; <label>:467:                                    ; preds = %originalBBpart272
  br label %468

; <label>:468:                                    ; preds = %467, %originalBBpart252
  %469 = load i32, i32* @x
  %470 = load i32, i32* @y
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %468, %originalBB74alteredBB
  %477 = load i32, i32* @x
  %478 = load i32, i32* @y
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  invoke void @_ZN24TensorProductPolynomialsILi3EED2Ev(%class.TensorProductPolynomials* %13)
          to label %485 unwind label %1233

; <label>:485:                                    ; preds = %originalBBpart276
  %486 = load i32, i32* @x
  %487 = load i32, i32* @y
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %485, %originalBB78alteredBB
  %494 = load i32, i32* @x
  %495 = load i32, i32* @y
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %502

; <label>:502:                                    ; preds = %originalBBpart280, %originalBBpart248
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"* %14)
          to label %503 unwind label %1233

; <label>:503:                                    ; preds = %502
  %504 = load i32, i32* @x
  %505 = load i32, i32* @y
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %503, %originalBB82alteredBB
  %512 = load i32, i32* @x
  %513 = load i32, i32* @y
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %1228

; <label>:520:                                    ; preds = %1188, %originalBBpart228
  %521 = landingpad { i8*, i32 }
          cleanup
  %522 = extractvalue { i8*, i32 } %521, 0
  store i8* %522, i8** %15, align 8
  %523 = extractvalue { i8*, i32 } %521, 1
  store i32 %523, i32* %16, align 4
  br label %1225

; <label>:524:                                    ; preds = %1187, %originalBBpart232
  %525 = landingpad { i8*, i32 }
          cleanup
  %526 = extractvalue { i8*, i32 } %525, 0
  store i8* %526, i8** %15, align 8
  %527 = extractvalue { i8*, i32 } %525, 1
  store i32 %527, i32* %16, align 4
  br label %1207

; <label>:528:                                    ; preds = %1108, %1101, %1095, %1089, %1083, %1032, %1031, %1026, %940, %936, %originalBBpart2147, %originalBBpart2143, %originalBBpart2139, %861, %originalBBpart2135, %originalBBpart2131, %originalBBpart2127, %originalBBpart2123, %762, %originalBBpart2119, %701, %614, %607, %originalBBpart292, %577, %570, %563, %556, %originalBBpart288, %282, %originalBBpart236, %218
  %529 = landingpad { i8*, i32 }
          cleanup
  %530 = extractvalue { i8*, i32 } %529, 0
  store i8* %530, i8** %15, align 8
  %531 = extractvalue { i8*, i32 } %529, 1
  store i32 %531, i32* %16, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %32)
          to label %1206 unwind label %1233

; <label>:532:                                    ; preds = %279
  %533 = load i32, i32* @x
  %534 = load i32, i32* @y
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %532, %originalBB86alteredBB
  %541 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %542 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %541, i32 0, i32 4
  %543 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %542, i64 0, i64 0
  %544 = load i32, i32* %12, align 4
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN6FE_DGQILi3EE8Matrices9embeddingE, i64 0, i64 %545
  %547 = load double*, double** %546, align 8
  %548 = load i32, i32* @x
  %549 = load i32, i32* @y
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  invoke void @_ZN10FullMatrixIdE4fillIdEEvPKT_(%class.FullMatrix* %543, double* %547)
          to label %556 unwind label %528

; <label>:556:                                    ; preds = %originalBBpart288
  %557 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %558 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %557, i32 0, i32 4
  %559 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %558, i64 0, i64 1
  %560 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %561 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %560, i32 0, i32 4
  %562 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %561, i64 0, i64 0
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %559, %class.FullMatrix* dereferenceable(48) %562, %"class.std::vector.28"* dereferenceable(24) %31, %"class.std::vector.28"* dereferenceable(24) %31)
          to label %563 unwind label %528

; <label>:563:                                    ; preds = %556
  %564 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %565 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %564, i32 0, i32 4
  %566 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %565, i64 0, i64 5
  %567 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %568 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %567, i32 0, i32 4
  %569 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %568, i64 0, i64 1
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %566, %class.FullMatrix* dereferenceable(48) %569, %"class.std::vector.28"* dereferenceable(24) %31, %"class.std::vector.28"* dereferenceable(24) %31)
          to label %570 unwind label %528

; <label>:570:                                    ; preds = %563
  %571 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %572 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %571, i32 0, i32 4
  %573 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %572, i64 0, i64 4
  %574 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %575 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %574, i32 0, i32 4
  %576 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %575, i64 0, i64 5
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %573, %class.FullMatrix* dereferenceable(48) %576, %"class.std::vector.28"* dereferenceable(24) %31, %"class.std::vector.28"* dereferenceable(24) %31)
          to label %577 unwind label %528

; <label>:577:                                    ; preds = %570
  %578 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %579 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %578, i32 0, i32 4
  %580 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %579, i64 0, i64 7
  %581 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %582 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %581, i32 0, i32 4
  %583 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %582, i64 0, i64 4
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %580, %class.FullMatrix* dereferenceable(48) %583, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %584 unwind label %528

; <label>:584:                                    ; preds = %577
  %585 = load i32, i32* @x
  %586 = load i32, i32* @y
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %584, %originalBB90alteredBB
  %593 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %594 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %593, i32 0, i32 4
  %595 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %594, i64 0, i64 3
  %596 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %597 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %596, i32 0, i32 4
  %598 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %597, i64 0, i64 7
  %599 = load i32, i32* @x
  %600 = load i32, i32* @y
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %595, %class.FullMatrix* dereferenceable(48) %598, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %607 unwind label %528

; <label>:607:                                    ; preds = %originalBBpart292
  %608 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %609 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %608, i32 0, i32 4
  %610 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %609, i64 0, i64 6
  %611 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %612 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %611, i32 0, i32 4
  %613 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %612, i64 0, i64 5
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %610, %class.FullMatrix* dereferenceable(48) %613, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %614 unwind label %528

; <label>:614:                                    ; preds = %607
  %615 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %616 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %615, i32 0, i32 4
  %617 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %616, i64 0, i64 2
  %618 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %619 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %618, i32 0, i32 4
  %620 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %619, i64 0, i64 6
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %617, %class.FullMatrix* dereferenceable(48) %620, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %621 unwind label %528

; <label>:621:                                    ; preds = %614
  br label %623

; <label>:622:                                    ; preds = %256, %originalBBpart240
  br label %623

; <label>:623:                                    ; preds = %622, %621
  %624 = load i32, i32* @x
  %625 = load i32, i32* @y
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %623, %originalBB94alteredBB
  %632 = load i32, i32* %12, align 4
  %633 = load i32, i32* @_ZN6FE_DGQILi3EE8Matrices21n_projection_matricesE, align 4
  %634 = icmp ult i32 %632, %633
  %635 = load i32, i32* @x
  %636 = load i32, i32* @y
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %634, label %643, label %892

; <label>:643:                                    ; preds = %originalBBpart296
  %644 = load i32, i32* @x
  %645 = load i32, i32* @y
  %646 = sub i32 %644, 1
  %647 = mul i32 %644, %646
  %648 = urem i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = icmp slt i32 %645, 10
  %651 = or i1 %649, %650
  br i1 %651, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %643, %originalBB98alteredBB
  %652 = load i32, i32* %12, align 4
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN6FE_DGQILi3EE8Matrices19projection_matricesE, i64 0, i64 %653
  %655 = load double*, double** %654, align 8
  %656 = icmp ne double* %655, null
  %657 = load i32, i32* @x
  %658 = load i32, i32* @y
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %656, label %665, label %892

; <label>:665:                                    ; preds = %originalBBpart2100
  %666 = load i32, i32* @x
  %667 = load i32, i32* @y
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %665, %originalBB102alteredBB
  store i32 0, i32* %34, align 4
  %674 = load i32, i32* @x
  %675 = load i32, i32* @y
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %682

; <label>:682:                                    ; preds = %originalBBpart2115, %originalBBpart2104
  %683 = load i32, i32* @x
  %684 = load i32, i32* @y
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %682, %originalBB106alteredBB
  %691 = load i32, i32* %34, align 4
  %692 = icmp ult i32 %691, 8
  %693 = load i32, i32* @x
  %694 = load i32, i32* @y
  %695 = sub i32 %693, 1
  %696 = mul i32 %693, %695
  %697 = urem i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %698, %699
  br i1 %700, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %692, label %701, label %738

; <label>:701:                                    ; preds = %originalBBpart2108
  %702 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %703 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %702, i32 0, i32 3
  %704 = load i32, i32* %34, align 4
  %705 = zext i32 %704 to i64
  %706 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %703, i64 0, i64 %705
  %707 = bitcast %class.FullMatrix* %706 to %class.Table*
  %708 = bitcast %class.FE_DGQ* %46 to i8*
  %709 = getelementptr inbounds i8, i8* %708, i64 24
  %710 = bitcast i8* %709 to %class.FiniteElementData*
  %711 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %710, i32 0, i32 10
  %712 = load i32, i32* %711, align 8
  %713 = bitcast %class.FE_DGQ* %46 to i8*
  %714 = getelementptr inbounds i8, i8* %713, i64 24
  %715 = bitcast i8* %714 to %class.FiniteElementData*
  %716 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %715, i32 0, i32 10
  %717 = load i32, i32* %716, align 8
  invoke void @_ZN5TableILi2EdE6reinitEjj(%class.Table* %707, i32 %712, i32 %717)
          to label %718 unwind label %528

; <label>:718:                                    ; preds = %701
  br label %719

; <label>:719:                                    ; preds = %718
  %720 = load i32, i32* @x
  %721 = load i32, i32* @y
  %722 = sub i32 %720, 1
  %723 = mul i32 %720, %722
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %721, 10
  %727 = or i1 %725, %726
  br i1 %727, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %719, %originalBB110alteredBB
  %728 = load i32, i32* %34, align 4
  %729 = add i32 %728, 1
  store i32 %729, i32* %34, align 4
  %730 = load i32, i32* @x
  %731 = load i32, i32* @y
  %732 = sub i32 %730, 1
  %733 = mul i32 %730, %732
  %734 = urem i32 %733, 2
  %735 = icmp eq i32 %734, 0
  %736 = icmp slt i32 %731, 10
  %737 = or i1 %735, %736
  br i1 %737, label %originalBBpart2115, label %originalBB110alteredBB

originalBBpart2115:                               ; preds = %originalBB110
  br label %682

; <label>:738:                                    ; preds = %originalBBpart2108
  %739 = load i32, i32* @x
  %740 = load i32, i32* @y
  %741 = sub i32 %739, 1
  %742 = mul i32 %739, %741
  %743 = urem i32 %742, 2
  %744 = icmp eq i32 %743, 0
  %745 = icmp slt i32 %740, 10
  %746 = or i1 %744, %745
  br i1 %746, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %738, %originalBB117alteredBB
  %747 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %748 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %747, i32 0, i32 3
  %749 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %748, i64 0, i64 0
  %750 = load i32, i32* %12, align 4
  %751 = zext i32 %750 to i64
  %752 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN6FE_DGQILi3EE8Matrices19projection_matricesE, i64 0, i64 %751
  %753 = load double*, double** %752, align 8
  %754 = load i32, i32* @x
  %755 = load i32, i32* @y
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  invoke void @_ZN10FullMatrixIdE4fillIdEEvPKT_(%class.FullMatrix* %749, double* %753)
          to label %762 unwind label %528

; <label>:762:                                    ; preds = %originalBBpart2119
  %763 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %764 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %763, i32 0, i32 3
  %765 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %764, i64 0, i64 1
  %766 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %767 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %766, i32 0, i32 3
  %768 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %767, i64 0, i64 0
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %765, %class.FullMatrix* dereferenceable(48) %768, %"class.std::vector.28"* dereferenceable(24) %31, %"class.std::vector.28"* dereferenceable(24) %31)
          to label %769 unwind label %528

; <label>:769:                                    ; preds = %762
  %770 = load i32, i32* @x
  %771 = load i32, i32* @y
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %769, %originalBB121alteredBB
  %778 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %779 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %778, i32 0, i32 3
  %780 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %779, i64 0, i64 5
  %781 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %782 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %781, i32 0, i32 3
  %783 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %782, i64 0, i64 1
  %784 = load i32, i32* @x
  %785 = load i32, i32* @y
  %786 = sub i32 %784, 1
  %787 = mul i32 %784, %786
  %788 = urem i32 %787, 2
  %789 = icmp eq i32 %788, 0
  %790 = icmp slt i32 %785, 10
  %791 = or i1 %789, %790
  br i1 %791, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %780, %class.FullMatrix* dereferenceable(48) %783, %"class.std::vector.28"* dereferenceable(24) %31, %"class.std::vector.28"* dereferenceable(24) %31)
          to label %792 unwind label %528

; <label>:792:                                    ; preds = %originalBBpart2123
  %793 = load i32, i32* @x
  %794 = load i32, i32* @y
  %795 = sub i32 %793, 1
  %796 = mul i32 %793, %795
  %797 = urem i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = icmp slt i32 %794, 10
  %800 = or i1 %798, %799
  br i1 %800, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %792, %originalBB125alteredBB
  %801 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %802 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %801, i32 0, i32 3
  %803 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %802, i64 0, i64 4
  %804 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %805 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %804, i32 0, i32 3
  %806 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %805, i64 0, i64 5
  %807 = load i32, i32* @x
  %808 = load i32, i32* @y
  %809 = sub i32 %807, 1
  %810 = mul i32 %807, %809
  %811 = urem i32 %810, 2
  %812 = icmp eq i32 %811, 0
  %813 = icmp slt i32 %808, 10
  %814 = or i1 %812, %813
  br i1 %814, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %803, %class.FullMatrix* dereferenceable(48) %806, %"class.std::vector.28"* dereferenceable(24) %31, %"class.std::vector.28"* dereferenceable(24) %31)
          to label %815 unwind label %528

; <label>:815:                                    ; preds = %originalBBpart2127
  %816 = load i32, i32* @x
  %817 = load i32, i32* @y
  %818 = sub i32 %816, 1
  %819 = mul i32 %816, %818
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %817, 10
  %823 = or i1 %821, %822
  br i1 %823, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %815, %originalBB129alteredBB
  %824 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %825 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %824, i32 0, i32 3
  %826 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %825, i64 0, i64 7
  %827 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %828 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %827, i32 0, i32 3
  %829 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %828, i64 0, i64 4
  %830 = load i32, i32* @x
  %831 = load i32, i32* @y
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %826, %class.FullMatrix* dereferenceable(48) %829, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %838 unwind label %528

; <label>:838:                                    ; preds = %originalBBpart2131
  %839 = load i32, i32* @x
  %840 = load i32, i32* @y
  %841 = sub i32 %839, 1
  %842 = mul i32 %839, %841
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %840, 10
  %846 = or i1 %844, %845
  br i1 %846, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %838, %originalBB133alteredBB
  %847 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %848 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %847, i32 0, i32 3
  %849 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %848, i64 0, i64 3
  %850 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %851 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %850, i32 0, i32 3
  %852 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %851, i64 0, i64 7
  %853 = load i32, i32* @x
  %854 = load i32, i32* @y
  %855 = sub i32 %853, 1
  %856 = mul i32 %853, %855
  %857 = urem i32 %856, 2
  %858 = icmp eq i32 %857, 0
  %859 = icmp slt i32 %854, 10
  %860 = or i1 %858, %859
  br i1 %860, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %849, %class.FullMatrix* dereferenceable(48) %852, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %861 unwind label %528

; <label>:861:                                    ; preds = %originalBBpart2135
  %862 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %863 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %862, i32 0, i32 3
  %864 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %863, i64 0, i64 6
  %865 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %866 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %865, i32 0, i32 3
  %867 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %866, i64 0, i64 5
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %864, %class.FullMatrix* dereferenceable(48) %867, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %868 unwind label %528

; <label>:868:                                    ; preds = %861
  %869 = load i32, i32* @x
  %870 = load i32, i32* @y
  %871 = sub i32 %869, 1
  %872 = mul i32 %869, %871
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %870, 10
  %876 = or i1 %874, %875
  br i1 %876, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %868, %originalBB137alteredBB
  %877 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %878 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %877, i32 0, i32 3
  %879 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %878, i64 0, i64 2
  %880 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %881 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %880, i32 0, i32 3
  %882 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %881, i64 0, i64 6
  %883 = load i32, i32* @x
  %884 = load i32, i32* @y
  %885 = sub i32 %883, 1
  %886 = mul i32 %883, %885
  %887 = urem i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = icmp slt i32 %884, 10
  %890 = or i1 %888, %889
  br i1 %890, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  invoke void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix* %879, %class.FullMatrix* dereferenceable(48) %882, %"class.std::vector.28"* dereferenceable(24) %32, %"class.std::vector.28"* dereferenceable(24) %32)
          to label %891 unwind label %528

; <label>:891:                                    ; preds = %originalBBpart2139
  br label %893

; <label>:892:                                    ; preds = %originalBBpart2100, %originalBBpart296
  br label %893

; <label>:893:                                    ; preds = %892, %891
  %894 = load i32, i32* %12, align 4
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %896, label %964

; <label>:896:                                    ; preds = %893
  %897 = load i32, i32* @x
  %898 = load i32, i32* @y
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %896, %originalBB141alteredBB
  %905 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %906 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %905, i32 0, i32 12
  %907 = load i32, i32* @x
  %908 = load i32, i32* @y
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  invoke void @_ZN5PointILi3EEC2Ev(%class.Point* %35)
          to label %915 unwind label %528

; <label>:915:                                    ; preds = %originalBBpart2143
  %916 = load i32, i32* @x
  %917 = load i32, i32* @y
  %918 = sub i32 %916, 1
  %919 = mul i32 %916, %918
  %920 = urem i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = icmp slt i32 %917, 10
  %923 = or i1 %921, %922
  br i1 %923, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %915, %originalBB145alteredBB
  %924 = load i32, i32* @x
  %925 = load i32, i32* @y
  %926 = sub i32 %924, 1
  %927 = mul i32 %924, %926
  %928 = urem i32 %927, 2
  %929 = icmp eq i32 %928, 0
  %930 = icmp slt i32 %925, 10
  %931 = or i1 %929, %930
  br i1 %931, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.11"* %906, i64 1, %class.Point* %35)
          to label %932 unwind label %528

; <label>:932:                                    ; preds = %originalBBpart2147
  store i32 0, i32* %36, align 4
  br label %933

; <label>:933:                                    ; preds = %960, %932
  %934 = load i32, i32* %36, align 4
  %935 = icmp ult i32 %934, 3
  br i1 %935, label %936, label %963

; <label>:936:                                    ; preds = %933
  %937 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %938 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %937, i32 0, i32 12
  %939 = invoke dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.11"* %938, i64 0)
          to label %940 unwind label %528

; <label>:940:                                    ; preds = %936
  %941 = load i32, i32* %36, align 4
  %942 = invoke dereferenceable(8) double* @_ZN5PointILi3EEclEj(%class.Point* %939, i32 %941)
          to label %943 unwind label %528

; <label>:943:                                    ; preds = %940
  %944 = load i32, i32* @x
  %945 = load i32, i32* @y
  %946 = sub i32 %944, 1
  %947 = mul i32 %944, %946
  %948 = urem i32 %947, 2
  %949 = icmp eq i32 %948, 0
  %950 = icmp slt i32 %945, 10
  %951 = or i1 %949, %950
  br i1 %951, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %943, %originalBB149alteredBB
  store double 5.000000e-01, double* %942, align 8
  %952 = load i32, i32* @x
  %953 = load i32, i32* @y
  %954 = sub i32 %952, 1
  %955 = mul i32 %952, %954
  %956 = urem i32 %955, 2
  %957 = icmp eq i32 %956, 0
  %958 = icmp slt i32 %953, 10
  %959 = or i1 %957, %958
  br i1 %959, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %960

; <label>:960:                                    ; preds = %originalBBpart2151
  %961 = load i32, i32* %36, align 4
  %962 = add i32 %961, 1
  store i32 %962, i32* %36, align 4
  br label %933

; <label>:963:                                    ; preds = %933
  br label %1187

; <label>:964:                                    ; preds = %893
  %965 = load i32, i32* @x
  %966 = load i32, i32* @y
  %967 = sub i32 %965, 1
  %968 = mul i32 %965, %967
  %969 = urem i32 %968, 2
  %970 = icmp eq i32 %969, 0
  %971 = icmp slt i32 %966, 10
  %972 = or i1 %970, %971
  br i1 %972, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %964, %originalBB153alteredBB
  %973 = load i32, i32* %12, align 4
  %974 = add i32 %973, 1
  store i32 %974, i32* %37, align 4
  store i32 1, i32* %38, align 4
  %975 = load i32, i32* @x
  %976 = load i32, i32* @y
  %977 = sub i32 %975, 1
  %978 = mul i32 %975, %977
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %976, 10
  %982 = or i1 %980, %981
  br i1 %982, label %originalBBpart2163, label %originalBB153alteredBB

originalBBpart2163:                               ; preds = %originalBB153
  br label %983

; <label>:983:                                    ; preds = %originalBBpart2186, %originalBBpart2163
  %984 = load i32, i32* %38, align 4
  %985 = icmp ult i32 %984, 3
  br i1 %985, label %986, label %1026

; <label>:986:                                    ; preds = %983
  %987 = load i32, i32* @x
  %988 = load i32, i32* @y
  %989 = sub i32 %987, 1
  %990 = mul i32 %987, %989
  %991 = urem i32 %990, 2
  %992 = icmp eq i32 %991, 0
  %993 = icmp slt i32 %988, 10
  %994 = or i1 %992, %993
  br i1 %994, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %986, %originalBB165alteredBB
  %995 = load i32, i32* %12, align 4
  %996 = add i32 %995, 1
  %997 = load i32, i32* %37, align 4
  %998 = mul i32 %997, %996
  store i32 %998, i32* %37, align 4
  %999 = load i32, i32* @x
  %1000 = load i32, i32* @y
  %1001 = sub i32 %999, 1
  %1002 = mul i32 %999, %1001
  %1003 = urem i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = icmp slt i32 %1000, 10
  %1006 = or i1 %1004, %1005
  br i1 %1006, label %originalBBpart2176, label %originalBB165alteredBB

originalBBpart2176:                               ; preds = %originalBB165
  br label %1007

; <label>:1007:                                   ; preds = %originalBBpart2176
  %1008 = load i32, i32* @x
  %1009 = load i32, i32* @y
  %1010 = sub i32 %1008, 1
  %1011 = mul i32 %1008, %1010
  %1012 = urem i32 %1011, 2
  %1013 = icmp eq i32 %1012, 0
  %1014 = icmp slt i32 %1009, 10
  %1015 = or i1 %1013, %1014
  br i1 %1015, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %1007, %originalBB178alteredBB
  %1016 = load i32, i32* %38, align 4
  %1017 = add i32 %1016, 1
  store i32 %1017, i32* %38, align 4
  %1018 = load i32, i32* @x
  %1019 = load i32, i32* @y
  %1020 = sub i32 %1018, 1
  %1021 = mul i32 %1018, %1020
  %1022 = urem i32 %1021, 2
  %1023 = icmp eq i32 %1022, 0
  %1024 = icmp slt i32 %1019, 10
  %1025 = or i1 %1023, %1024
  br i1 %1025, label %originalBBpart2186, label %originalBB178alteredBB

originalBBpart2186:                               ; preds = %originalBB178
  br label %983

; <label>:1026:                                   ; preds = %983
  %1027 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1028 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1027, i32 0, i32 12
  %1029 = load i32, i32* %37, align 4
  %1030 = zext i32 %1029 to i64
  invoke void @_ZN5PointILi3EEC2Ev(%class.Point* %39)
          to label %1031 unwind label %528

; <label>:1031:                                   ; preds = %1026
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.11"* %1028, i64 %1030, %class.Point* %39)
          to label %1032 unwind label %528

; <label>:1032:                                   ; preds = %1031
  %1033 = load i32, i32* %12, align 4
  %1034 = uitofp i32 %1033 to double
  %1035 = fdiv double 1.000000e+00, %1034
  store double %1035, double* %40, align 8
  invoke void @_ZN5PointILi3EEC2Ev(%class.Point* %41)
          to label %1036 unwind label %528

; <label>:1036:                                   ; preds = %1032
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  br label %1037

; <label>:1037:                                   ; preds = %originalBBpart2207, %1036
  %1038 = load i32, i32* %43, align 4
  %1039 = load i32, i32* %12, align 4
  %1040 = icmp ule i32 %1038, %1039
  br i1 %1040, label %1041, label %1170

; <label>:1041:                                   ; preds = %1037
  store i32 0, i32* %44, align 4
  br label %1042

; <label>:1042:                                   ; preds = %1131, %1041
  %1043 = load i32, i32* %44, align 4
  %1044 = load i32, i32* %12, align 4
  %1045 = icmp ule i32 %1043, %1044
  br i1 %1045, label %1046, label %1134

; <label>:1046:                                   ; preds = %1042
  %1047 = load i32, i32* @x
  %1048 = load i32, i32* @y
  %1049 = sub i32 %1047, 1
  %1050 = mul i32 %1047, %1049
  %1051 = urem i32 %1050, 2
  %1052 = icmp eq i32 %1051, 0
  %1053 = icmp slt i32 %1048, 10
  %1054 = or i1 %1052, %1053
  br i1 %1054, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %1046, %originalBB188alteredBB
  store i32 0, i32* %45, align 4
  %1055 = load i32, i32* @x
  %1056 = load i32, i32* @y
  %1057 = sub i32 %1055, 1
  %1058 = mul i32 %1055, %1057
  %1059 = urem i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = icmp slt i32 %1056, 10
  %1062 = or i1 %1060, %1061
  br i1 %1062, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br label %1063

; <label>:1063:                                   ; preds = %1127, %originalBBpart2190
  %1064 = load i32, i32* @x
  %1065 = load i32, i32* @y
  %1066 = sub i32 %1064, 1
  %1067 = mul i32 %1064, %1066
  %1068 = urem i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  %1070 = icmp slt i32 %1065, 10
  %1071 = or i1 %1069, %1070
  br i1 %1071, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %1063, %originalBB192alteredBB
  %1072 = load i32, i32* %45, align 4
  %1073 = load i32, i32* %12, align 4
  %1074 = icmp ule i32 %1072, %1073
  %1075 = load i32, i32* @x
  %1076 = load i32, i32* @y
  %1077 = sub i32 %1075, 1
  %1078 = mul i32 %1075, %1077
  %1079 = urem i32 %1078, 2
  %1080 = icmp eq i32 %1079, 0
  %1081 = icmp slt i32 %1076, 10
  %1082 = or i1 %1080, %1081
  br i1 %1082, label %originalBBpart2194, label %originalBB192alteredBB

originalBBpart2194:                               ; preds = %originalBB192
  br i1 %1074, label %1083, label %1130

; <label>:1083:                                   ; preds = %originalBBpart2194
  %1084 = load i32, i32* %45, align 4
  %1085 = uitofp i32 %1084 to double
  %1086 = load double, double* %40, align 8
  %1087 = fmul double %1085, %1086
  %1088 = invoke dereferenceable(8) double* @_ZN5PointILi3EEclEj(%class.Point* %41, i32 0)
          to label %1089 unwind label %528

; <label>:1089:                                   ; preds = %1083
  store double %1087, double* %1088, align 8
  %1090 = load i32, i32* %44, align 4
  %1091 = uitofp i32 %1090 to double
  %1092 = load double, double* %40, align 8
  %1093 = fmul double %1091, %1092
  %1094 = invoke dereferenceable(8) double* @_ZN5PointILi3EEclEj(%class.Point* %41, i32 1)
          to label %1095 unwind label %528

; <label>:1095:                                   ; preds = %1089
  store double %1093, double* %1094, align 8
  %1096 = load i32, i32* %43, align 4
  %1097 = uitofp i32 %1096 to double
  %1098 = load double, double* %40, align 8
  %1099 = fmul double %1097, %1098
  %1100 = invoke dereferenceable(8) double* @_ZN5PointILi3EEclEj(%class.Point* %41, i32 2)
          to label %1101 unwind label %528

; <label>:1101:                                   ; preds = %1095
  store double %1099, double* %1100, align 8
  %1102 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1103 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1102, i32 0, i32 12
  %1104 = load i32, i32* %42, align 4
  %1105 = add i32 %1104, 1
  store i32 %1105, i32* %42, align 4
  %1106 = zext i32 %1104 to i64
  %1107 = invoke dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.11"* %1103, i64 %1106)
          to label %1108 unwind label %528

; <label>:1108:                                   ; preds = %1101
  %1109 = invoke dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %1107, %class.Point* dereferenceable(24) %41)
          to label %1110 unwind label %528

; <label>:1110:                                   ; preds = %1108
  %1111 = load i32, i32* @x
  %1112 = load i32, i32* @y
  %1113 = sub i32 %1111, 1
  %1114 = mul i32 %1111, %1113
  %1115 = urem i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = icmp slt i32 %1112, 10
  %1118 = or i1 %1116, %1117
  br i1 %1118, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %1110, %originalBB196alteredBB
  %1119 = load i32, i32* @x
  %1120 = load i32, i32* @y
  %1121 = sub i32 %1119, 1
  %1122 = mul i32 %1119, %1121
  %1123 = urem i32 %1122, 2
  %1124 = icmp eq i32 %1123, 0
  %1125 = icmp slt i32 %1120, 10
  %1126 = or i1 %1124, %1125
  br i1 %1126, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  br label %1127

; <label>:1127:                                   ; preds = %originalBBpart2198
  %1128 = load i32, i32* %45, align 4
  %1129 = add i32 %1128, 1
  store i32 %1129, i32* %45, align 4
  br label %1063

; <label>:1130:                                   ; preds = %originalBBpart2194
  br label %1131

; <label>:1131:                                   ; preds = %1130
  %1132 = load i32, i32* %44, align 4
  %1133 = add i32 %1132, 1
  store i32 %1133, i32* %44, align 4
  br label %1042

; <label>:1134:                                   ; preds = %1042
  %1135 = load i32, i32* @x
  %1136 = load i32, i32* @y
  %1137 = sub i32 %1135, 1
  %1138 = mul i32 %1135, %1137
  %1139 = urem i32 %1138, 2
  %1140 = icmp eq i32 %1139, 0
  %1141 = icmp slt i32 %1136, 10
  %1142 = or i1 %1140, %1141
  br i1 %1142, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %1134, %originalBB200alteredBB
  %1143 = load i32, i32* @x
  %1144 = load i32, i32* @y
  %1145 = sub i32 %1143, 1
  %1146 = mul i32 %1143, %1145
  %1147 = urem i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = icmp slt i32 %1144, 10
  %1150 = or i1 %1148, %1149
  br i1 %1150, label %originalBBpart2202, label %originalBB200alteredBB

originalBBpart2202:                               ; preds = %originalBB200
  br label %1151

; <label>:1151:                                   ; preds = %originalBBpart2202
  %1152 = load i32, i32* @x
  %1153 = load i32, i32* @y
  %1154 = sub i32 %1152, 1
  %1155 = mul i32 %1152, %1154
  %1156 = urem i32 %1155, 2
  %1157 = icmp eq i32 %1156, 0
  %1158 = icmp slt i32 %1153, 10
  %1159 = or i1 %1157, %1158
  br i1 %1159, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %1151, %originalBB204alteredBB
  %1160 = load i32, i32* %43, align 4
  %1161 = add i32 %1160, 1
  store i32 %1161, i32* %43, align 4
  %1162 = load i32, i32* @x
  %1163 = load i32, i32* @y
  %1164 = sub i32 %1162, 1
  %1165 = mul i32 %1162, %1164
  %1166 = urem i32 %1165, 2
  %1167 = icmp eq i32 %1166, 0
  %1168 = icmp slt i32 %1163, 10
  %1169 = or i1 %1167, %1168
  br i1 %1169, label %originalBBpart2207, label %originalBB204alteredBB

originalBBpart2207:                               ; preds = %originalBB204
  br label %1037

; <label>:1170:                                   ; preds = %1037
  %1171 = load i32, i32* @x
  %1172 = load i32, i32* @y
  %1173 = sub i32 %1171, 1
  %1174 = mul i32 %1171, %1173
  %1175 = urem i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  %1177 = icmp slt i32 %1172, 10
  %1178 = or i1 %1176, %1177
  br i1 %1178, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %1170, %originalBB209alteredBB
  %1179 = load i32, i32* @x
  %1180 = load i32, i32* @y
  %1181 = sub i32 %1179, 1
  %1182 = mul i32 %1179, %1181
  %1183 = urem i32 %1182, 2
  %1184 = icmp eq i32 %1183, 0
  %1185 = icmp slt i32 %1180, 10
  %1186 = or i1 %1184, %1185
  br i1 %1186, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br label %1187

; <label>:1187:                                   ; preds = %originalBBpart2211, %963
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %32)
          to label %1188 unwind label %524

; <label>:1188:                                   ; preds = %1187
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %31)
          to label %1189 unwind label %520

; <label>:1189:                                   ; preds = %1188
  %1190 = load i32, i32* @x
  %1191 = load i32, i32* @y
  %1192 = sub i32 %1190, 1
  %1193 = mul i32 %1190, %1192
  %1194 = urem i32 %1193, 2
  %1195 = icmp eq i32 %1194, 0
  %1196 = icmp slt i32 %1191, 10
  %1197 = or i1 %1195, %1196
  br i1 %1197, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %1189, %originalBB213alteredBB
  %1198 = load i32, i32* @x
  %1199 = load i32, i32* @y
  %1200 = sub i32 %1198, 1
  %1201 = mul i32 %1198, %1200
  %1202 = urem i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  %1204 = icmp slt i32 %1199, 10
  %1205 = or i1 %1203, %1204
  br i1 %1205, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  ret void

; <label>:1206:                                   ; preds = %528
  br label %1207

; <label>:1207:                                   ; preds = %1206, %524
  %1208 = load i32, i32* @x
  %1209 = load i32, i32* @y
  %1210 = sub i32 %1208, 1
  %1211 = mul i32 %1208, %1210
  %1212 = urem i32 %1211, 2
  %1213 = icmp eq i32 %1212, 0
  %1214 = icmp slt i32 %1209, 10
  %1215 = or i1 %1213, %1214
  br i1 %1215, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %1207, %originalBB217alteredBB
  %1216 = load i32, i32* @x
  %1217 = load i32, i32* @y
  %1218 = sub i32 %1216, 1
  %1219 = mul i32 %1216, %1218
  %1220 = urem i32 %1219, 2
  %1221 = icmp eq i32 %1220, 0
  %1222 = icmp slt i32 %1217, 10
  %1223 = or i1 %1221, %1222
  br i1 %1223, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %31)
          to label %1224 unwind label %1233

; <label>:1224:                                   ; preds = %originalBBpart2219
  br label %1225

; <label>:1225:                                   ; preds = %1224, %520
  %1226 = bitcast %class.FE_DGQ* %46 to %class.FE_Poly*
  invoke void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly* %1226)
          to label %1227 unwind label %1233

; <label>:1227:                                   ; preds = %1225
  br label %1228

; <label>:1228:                                   ; preds = %1227, %originalBBpart284
  %1229 = load i8*, i8** %15, align 8
  %1230 = load i32, i32* %16, align 4
  %1231 = insertvalue { i8*, i32 } undef, i8* %1229, 0
  %1232 = insertvalue { i8*, i32 } %1231, i32 %1230, 1
  resume { i8*, i32 } %1232

; <label>:1233:                                   ; preds = %1225, %originalBBpart2219, %528, %502, %originalBBpart276, %originalBBpart272, %448, %originalBBpart264, %411, %408, %387
  %1234 = landingpad { i8*, i32 }
          catch i8* null
  %1235 = extractvalue { i8*, i32 } %1234, 0
  call void @__clang_call_terminate(i8* %1235) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %1236 = alloca %class.FE_DGQ*, align 8
  %1237 = alloca i32, align 4
  %1238 = alloca %class.TensorProductPolynomials, align 8
  %1239 = alloca %"class.std::vector.33", align 8
  %1240 = alloca i8*
  %1241 = alloca i32
  %1242 = alloca %class.FiniteElementData, align 4
  %1243 = alloca %"class.std::vector.28", align 8
  %1244 = alloca %"class.std::vector.7", align 8
  %1245 = alloca %class.FiniteElementData, align 4
  %1246 = alloca %"class.std::vector.28", align 8
  %1247 = alloca i8, align 1
  %1248 = alloca %"class.std::allocator.43", align 1
  %1249 = alloca %"class.std::vector.23", align 8
  %1250 = alloca %class.FiniteElementData, align 4
  %1251 = alloca %"class.std::vector.28", align 8
  %1252 = alloca %"class.std::vector.7", align 8
  %1253 = alloca i8, align 1
  %1254 = alloca %"class.std::allocator.43", align 1
  %1255 = alloca %"class.std::allocator.25", align 1
  %1256 = alloca %"class.std::vector.28", align 8
  %1257 = alloca %"class.std::vector.28", align 8
  %1258 = alloca i32, align 4
  %1259 = alloca i32, align 4
  %1260 = alloca %class.Point, align 8
  %1261 = alloca i32, align 4
  %1262 = alloca i32, align 4
  %1263 = alloca i32, align 4
  %1264 = alloca %class.Point, align 8
  %1265 = alloca double, align 8
  %1266 = alloca %class.Point, align 8
  %1267 = alloca i32, align 4
  %1268 = alloca i32, align 4
  %1269 = alloca i32, align 4
  %1270 = alloca i32, align 4
  store %class.FE_DGQ* %0, %class.FE_DGQ** %1236, align 8
  store i32 %1, i32* %1237, align 4
  %1271 = load %class.FE_DGQ*, %class.FE_DGQ** %1236, align 8
  %1272 = bitcast %class.FE_DGQ* %1271 to %class.FE_Poly*
  %1273 = load i32, i32* %1237, align 4
  %1274 = load i32, i32* %1237, align 4
  call void @_ZN11Polynomials19LagrangeEquidistant23generate_complete_basisEj(%"class.std::vector.33"* sret %1239, i32 %1274)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  %1275 = load i32, i32* %12, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %1276 = load i32, i32* %12, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %96
  %1277 = load i32, i32* %12, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %126
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.25"* %30) #13
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %147
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %165
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %183
  call void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"* %14)
  %1278 = bitcast %class.FE_DGQ* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV6FE_DGQILi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1278, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %201
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %219
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %236
  %1279 = load i32, i32* %12, align 4
  %1280 = load i32, i32* @_ZN6FE_DGQILi3EE8Matrices20n_embedding_matricesE, align 4
  %1281 = icmp ult i32 %1279, %1280
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %262
  store i32 0, i32* %33, align 4
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %303
  %1282 = landingpad { i8*, i32 }
          cleanup
  %1283 = extractvalue { i8*, i32 } %1282, 0
  store i8* %1283, i8** %15, align 8
  %1284 = extractvalue { i8*, i32 } %1282, 1
  store i32 %1284, i32* %16, align 4
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %323
  %1285 = landingpad { i8*, i32 }
          cleanup
  %1286 = extractvalue { i8*, i32 } %1285, 0
  store i8* %1286, i8** %15, align 8
  %1287 = extractvalue { i8*, i32 } %1285, 1
  store i32 %1287, i32* %16, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %355
  %1288 = landingpad { i8*, i32 }
          cleanup
  %1289 = extractvalue { i8*, i32 } %1288, 0
  store i8* %1289, i8** %15, align 8
  %1290 = extractvalue { i8*, i32 } %1288, 1
  store i32 %1290, i32* %16, align 4
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %391
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %413
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %430
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %450
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %468
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %485
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %503
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %532
  %1291 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1292 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1291, i32 0, i32 4
  %1293 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1292, i64 0, i64 0
  %1294 = load i32, i32* %12, align 4
  %1295 = zext i32 %1294 to i64
  %1296 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN6FE_DGQILi3EE8Matrices9embeddingE, i64 0, i64 %1295
  %1297 = load double*, double** %1296, align 8
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %584
  %1298 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1299 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1298, i32 0, i32 4
  %1300 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1299, i64 0, i64 3
  %1301 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1302 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1301, i32 0, i32 4
  %1303 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1302, i64 0, i64 7
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %623
  %1304 = load i32, i32* %12, align 4
  %1305 = load i32, i32* @_ZN6FE_DGQILi3EE8Matrices21n_projection_matricesE, align 4
  %1306 = icmp ult i32 %1304, %1305
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %643
  %1307 = load i32, i32* %12, align 4
  %1308 = zext i32 %1307 to i64
  %1309 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN6FE_DGQILi3EE8Matrices19projection_matricesE, i64 0, i64 %1308
  %1310 = load double*, double** %1309, align 8
  %1311 = icmp ne double* %1310, null
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %665
  store i32 0, i32* %34, align 4
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %682
  %1312 = load i32, i32* %34, align 4
  %1313 = icmp ult i32 %1312, 8
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %719
  %1314 = load i32, i32* %34, align 4
  %_ = shl i32 %1314, 1
  %_111 = sub i32 0, %1314
  %gen = add i32 %_111, 1
  %_112 = sub i32 0, %1314
  %gen113 = add i32 %_112, 1
  %1315 = add i32 %1314, 1
  store i32 %1315, i32* %34, align 4
  br label %originalBB110

originalBB117alteredBB:                           ; preds = %originalBB117, %738
  %1316 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1317 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1316, i32 0, i32 3
  %1318 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1317, i64 0, i64 0
  %1319 = load i32, i32* %12, align 4
  %1320 = zext i32 %1319 to i64
  %1321 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN6FE_DGQILi3EE8Matrices19projection_matricesE, i64 0, i64 %1320
  %1322 = load double*, double** %1321, align 8
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %769
  %1323 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1324 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1323, i32 0, i32 3
  %1325 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1324, i64 0, i64 5
  %1326 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1327 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1326, i32 0, i32 3
  %1328 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1327, i64 0, i64 1
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %792
  %1329 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1330 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1329, i32 0, i32 3
  %1331 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1330, i64 0, i64 4
  %1332 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1333 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1332, i32 0, i32 3
  %1334 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1333, i64 0, i64 5
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %815
  %1335 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1336 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1335, i32 0, i32 3
  %1337 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1336, i64 0, i64 7
  %1338 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1339 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1338, i32 0, i32 3
  %1340 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1339, i64 0, i64 4
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %838
  %1341 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1342 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1341, i32 0, i32 3
  %1343 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1342, i64 0, i64 3
  %1344 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1345 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1344, i32 0, i32 3
  %1346 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1345, i64 0, i64 7
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %868
  %1347 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1348 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1347, i32 0, i32 3
  %1349 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1348, i64 0, i64 2
  %1350 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1351 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1350, i32 0, i32 3
  %1352 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %1351, i64 0, i64 6
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %896
  %1353 = bitcast %class.FE_DGQ* %46 to %class.FiniteElementBase*
  %1354 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %1353, i32 0, i32 12
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %915
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %943
  store double 5.000000e-01, double* %942, align 8
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %964
  %1355 = load i32, i32* %12, align 4
  %_154 = sub i32 %1355, 1
  %gen155 = mul i32 %_154, 1
  %_156 = sub i32 %1355, 1
  %gen157 = mul i32 %_156, 1
  %_158 = sub i32 0, %1355
  %gen159 = add i32 %_158, 1
  %_160 = sub i32 0, %1355
  %gen161 = add i32 %_160, 1
  %1356 = add i32 %1355, 1
  store i32 %1356, i32* %37, align 4
  store i32 1, i32* %38, align 4
  br label %originalBB153

originalBB165alteredBB:                           ; preds = %originalBB165, %986
  %1357 = load i32, i32* %12, align 4
  %_166 = shl i32 %1357, 1
  %_167 = shl i32 %1357, 1
  %_168 = shl i32 %1357, 1
  %1358 = add i32 %1357, 1
  %1359 = load i32, i32* %37, align 4
  %_169 = sub i32 %1359, %1358
  %gen170 = mul i32 %_169, %1358
  %_171 = shl i32 %1359, %1358
  %_172 = shl i32 %1359, %1358
  %_173 = shl i32 %1359, %1358
  %_174 = shl i32 %1359, %1358
  %1360 = mul i32 %1359, %1358
  store i32 %1360, i32* %37, align 4
  br label %originalBB165

originalBB178alteredBB:                           ; preds = %originalBB178, %1007
  %1361 = load i32, i32* %38, align 4
  %_179 = sub i32 %1361, 1
  %gen180 = mul i32 %_179, 1
  %_181 = sub i32 0, %1361
  %gen182 = add i32 %_181, 1
  %_183 = sub i32 %1361, 1
  %gen184 = mul i32 %_183, 1
  %1362 = add i32 %1361, 1
  store i32 %1362, i32* %38, align 4
  br label %originalBB178

originalBB188alteredBB:                           ; preds = %originalBB188, %1046
  store i32 0, i32* %45, align 4
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %1063
  %1363 = load i32, i32* %45, align 4
  %1364 = load i32, i32* %12, align 4
  %1365 = icmp ule i32 %1363, %1364
  br label %originalBB192

originalBB196alteredBB:                           ; preds = %originalBB196, %1110
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %1134
  br label %originalBB200

originalBB204alteredBB:                           ; preds = %originalBB204, %1151
  %1366 = load i32, i32* %43, align 4
  %_205 = shl i32 %1366, 1
  %1367 = add i32 %1366, 1
  store i32 %1367, i32* %43, align 4
  br label %originalBB204

originalBB209alteredBB:                           ; preds = %originalBB209, %1170
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %1189
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %1207
  br label %originalBB217
}

declare void @_ZN11Polynomials19LagrangeEquidistant23generate_complete_basisEj(%"class.std::vector.33"* sret, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN24TensorProductPolynomialsILi3EEC2IN11Polynomials10PolynomialIdEEEERKSt6vectorIT_SaIS6_EE(%class.TensorProductPolynomials*, %"class.std::vector.33"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.1
  %4 = load i32, i32* @y.2
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TensorProductPolynomials*, align 8
  %12 = alloca %"class.std::vector.33"*, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.std::allocator.35", align 1
  %16 = alloca i8*
  %17 = alloca i32
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::allocator.30", align 1
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::allocator.30", align 1
  %22 = alloca i32, align 4
  store %class.TensorProductPolynomials* %0, %class.TensorProductPolynomials** %11, align 8
  store %"class.std::vector.33"* %1, %"class.std::vector.33"** %12, align 8
  %23 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %11, align 8
  %24 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 0
  %25 = load %"class.std::vector.33"*, %"class.std::vector.33"** %12, align 8
  %26 = call %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE5beginEv(%"class.std::vector.33"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %26, %"class.Polynomials::Polynomial"** %27, align 8
  %28 = load %"class.std::vector.33"*, %"class.std::vector.33"** %12, align 8
  %29 = call %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE3endEv(%"class.std::vector.33"* %28)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %29, %"class.Polynomials::Polynomial"** %30, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2Ev(%"class.std::allocator.35"* %15) #13
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %32 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %31, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %34 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %33, align 8
  %35 = load i32, i32* @x.1
  %36 = load i32, i32* @y.2
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEET_SB_RKS3_(%"class.std::vector.33"* %24, %"class.Polynomials::Polynomial"* %32, %"class.Polynomials::Polynomial"* %34, %"class.std::allocator.35"* dereferenceable(1) %15)
          to label %43 unwind label %98

; <label>:43:                                     ; preds = %originalBBpart2
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator.35"* %15) #13
  %44 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 1
  %45 = load %"class.std::vector.33"*, %"class.std::vector.33"** %12, align 8
  %46 = invoke i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector.33"* %45)
          to label %47 unwind label %102

; <label>:47:                                     ; preds = %43
  %48 = trunc i64 %46 to i32
  %49 = invoke i32 @_ZN24TensorProductPolynomialsILi3EE12x_to_the_dimEj(i32 %48)
          to label %50 unwind label %102

; <label>:50:                                     ; preds = %47
  store i32 %49, i32* %44, align 8
  %51 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 2
  %52 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  store i32 0, i32* %18, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.30"* %19) #13
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.28"* %51, i64 %54, i32* dereferenceable(4) %18, %"class.std::allocator.30"* dereferenceable(1) %19)
          to label %55 unwind label %106

; <label>:55:                                     ; preds = %50
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %19) #13
  %56 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 3
  %57 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  store i32 0, i32* %20, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.30"* %21) #13
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.28"* %56, i64 %59, i32* dereferenceable(4) %20, %"class.std::allocator.30"* dereferenceable(1) %21)
          to label %60 unwind label %110

; <label>:60:                                     ; preds = %55
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %21) #13
  store i32 0, i32* %22, align 4
  br label %61

; <label>:61:                                     ; preds = %95, %60
  %62 = load i32, i32* %22, align 4
  %63 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = icmp ult i32 %62, %64
  br i1 %65, label %66, label %118

; <label>:66:                                     ; preds = %61
  %67 = load i32, i32* %22, align 4
  %68 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 2
  %69 = load i32, i32* %22, align 4
  %70 = zext i32 %69 to i64
  %71 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %68, i64 %70)
          to label %72 unwind label %114

; <label>:72:                                     ; preds = %66
  store i32 %67, i32* %71, align 4
  %73 = load i32, i32* %22, align 4
  %74 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %23, i32 0, i32 3
  %75 = load i32, i32* %22, align 4
  %76 = zext i32 %75 to i64
  %77 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %74, i64 %76)
          to label %78 unwind label %114

; <label>:78:                                     ; preds = %72
  %79 = load i32, i32* @x.1
  %80 = load i32, i32* @y.2
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %78, %originalBB1alteredBB
  store i32 %73, i32* %77, align 4
  %87 = load i32, i32* @x.1
  %88 = load i32, i32* @y.2
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %95

; <label>:95:                                     ; preds = %originalBBpart24
  %96 = load i32, i32* %22, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %22, align 4
  br label %61

; <label>:98:                                     ; preds = %originalBBpart2
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %16, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %17, align 4
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator.35"* %15) #13
  br label %140

; <label>:102:                                    ; preds = %47, %43
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %16, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %17, align 4
  br label %122

; <label>:106:                                    ; preds = %50
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %16, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %17, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %19) #13
  br label %122

; <label>:110:                                    ; preds = %55
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %16, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %17, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %21) #13
  br label %120

; <label>:114:                                    ; preds = %72, %66
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %16, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %17, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %56)
          to label %119 unwind label %145

; <label>:118:                                    ; preds = %61
  ret void

; <label>:119:                                    ; preds = %114
  br label %120

; <label>:120:                                    ; preds = %119, %110
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %51)
          to label %121 unwind label %145

; <label>:121:                                    ; preds = %120
  br label %122

; <label>:122:                                    ; preds = %121, %106, %102
  %123 = load i32, i32* @x.1
  %124 = load i32, i32* @y.2
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %122, %originalBB6alteredBB
  %131 = load i32, i32* @x.1
  %132 = load i32, i32* @y.2
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"* %24)
          to label %139 unwind label %145

; <label>:139:                                    ; preds = %originalBBpart28
  br label %140

; <label>:140:                                    ; preds = %139, %98
  %141 = load i8*, i8** %16, align 8
  %142 = load i32, i32* %17, align 4
  %143 = insertvalue { i8*, i32 } undef, i8* %141, 0
  %144 = insertvalue { i8*, i32 } %143, i32 %142, 1
  resume { i8*, i32 } %144

; <label>:145:                                    ; preds = %originalBBpart28, %120, %114
  %146 = landingpad { i8*, i32 }
          catch i8* null
  %147 = extractvalue { i8*, i32 } %146, 0
  call void @__clang_call_terminate(i8* %147) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %148 = alloca %class.TensorProductPolynomials*, align 8
  %149 = alloca %"class.std::vector.33"*, align 8
  %150 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %151 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %152 = alloca %"class.std::allocator.35", align 1
  %153 = alloca i8*
  %154 = alloca i32
  %155 = alloca i32, align 4
  %156 = alloca %"class.std::allocator.30", align 1
  %157 = alloca i32, align 4
  %158 = alloca %"class.std::allocator.30", align 1
  %159 = alloca i32, align 4
  store %class.TensorProductPolynomials* %0, %class.TensorProductPolynomials** %148, align 8
  store %"class.std::vector.33"* %1, %"class.std::vector.33"** %149, align 8
  %160 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %148, align 8
  %161 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %160, i32 0, i32 0
  %162 = load %"class.std::vector.33"*, %"class.std::vector.33"** %149, align 8
  %163 = call %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE5beginEv(%"class.std::vector.33"* %162)
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %150, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %163, %"class.Polynomials::Polynomial"** %164, align 8
  %165 = load %"class.std::vector.33"*, %"class.std::vector.33"** %149, align 8
  %166 = call %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE3endEv(%"class.std::vector.33"* %165)
  %167 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %151, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %166, %"class.Polynomials::Polynomial"** %167, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2Ev(%"class.std::allocator.35"* %152) #13
  %168 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %150, i32 0, i32 0
  %169 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %168, align 8
  %170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %151, i32 0, i32 0
  %171 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %170, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %78
  store i32 %73, i32* %77, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %122
  br label %originalBB6
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define weak_odr void @_ZN6FE_DGQILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* noalias sret, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::allocator.30", align 1
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  store i1 false, i1* %4, align 1
  store i32 0, i32* %5, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.30"* %6) #13
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.28"* %0, i64 4, i32* dereferenceable(4) %5, %"class.std::allocator.30"* dereferenceable(1) %6)
          to label %10 unwind label %59

; <label>:10:                                     ; preds = %2
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %6) #13
  %11 = load i32, i32* %3, align 4
  %12 = add i32 %11, 1
  store i32 %12, i32* %3, align 4
  %13 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %0, i64 3)
          to label %14 unwind label %63

; <label>:14:                                     ; preds = %10
  store i32 %12, i32* %13, align 4
  store i32 1, i32* %9, align 4
  br label %15

; <label>:15:                                     ; preds = %originalBBpart29, %14
  %16 = load i32, i32* %9, align 4
  %17 = icmp ult i32 %16, 3
  br i1 %17, label %18, label %67

; <label>:18:                                     ; preds = %15
  %19 = load i32, i32* @x.3
  %20 = load i32, i32* @y.4
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* %3, align 4
  %28 = load i32, i32* @x.3
  %29 = load i32, i32* @y.4
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %36 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %0, i64 3)
          to label %37 unwind label %63

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* %36, align 4
  %39 = mul i32 %38, %27
  store i32 %39, i32* %36, align 4
  br label %40

; <label>:40:                                     ; preds = %37
  %41 = load i32, i32* @x.3
  %42 = load i32, i32* @y.4
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i32, i32* %9, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %9, align 4
  %51 = load i32, i32* @x.3
  %52 = load i32, i32* @y.4
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %15

; <label>:59:                                     ; preds = %2
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %7, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %8, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %6) #13
  br label %104

; <label>:63:                                     ; preds = %originalBBpart2, %10
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %7, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %8, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %0)
          to label %103 unwind label %109

; <label>:67:                                     ; preds = %15
  %68 = load i32, i32* @x.3
  %69 = load i32, i32* @y.4
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %67, %originalBB11alteredBB
  store i1 true, i1* %4, align 1
  %76 = load i1, i1* %4, align 1
  %77 = load i32, i32* @x.3
  %78 = load i32, i32* @y.4
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %76, label %102, label %85

; <label>:85:                                     ; preds = %originalBBpart213
  %86 = load i32, i32* @x.3
  %87 = load i32, i32* @y.4
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %85, %originalBB15alteredBB
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %0)
  %94 = load i32, i32* @x.3
  %95 = load i32, i32* @y.4
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %102

; <label>:102:                                    ; preds = %originalBBpart217, %originalBBpart213
  ret void

; <label>:103:                                    ; preds = %63
  br label %104

; <label>:104:                                    ; preds = %103, %59
  %105 = load i8*, i8** %7, align 8
  %106 = load i32, i32* %8, align 4
  %107 = insertvalue { i8*, i32 } undef, i8* %105, 0
  %108 = insertvalue { i8*, i32 } %107, i32 %106, 1
  resume { i8*, i32 } %108

; <label>:109:                                    ; preds = %63
  %110 = load i32, i32* @x.3
  %111 = load i32, i32* @y.4
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %109, %originalBB19alteredBB
  %118 = landingpad { i8*, i32 }
          catch i8* null
  %119 = extractvalue { i8*, i32 } %118, 0
  call void @__clang_call_terminate(i8* %119) #11
  %120 = load i32, i32* @x.3
  %121 = load i32, i32* @y.4
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  %128 = load i32, i32* %3, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %129 = load i32, i32* %9, align 4
  %_ = sub i32 0, %129
  %gen = add i32 %_, 1
  %_2 = shl i32 %129, 1
  %_3 = sub i32 %129, 1
  %gen4 = mul i32 %_3, 1
  %_5 = shl i32 %129, 1
  %_6 = sub i32 0, %129
  %gen7 = add i32 %_6, 1
  %130 = add i32 %129, 1
  store i32 %130, i32* %9, align 4
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %67
  store i1 true, i1* %4, align 1
  %131 = load i1, i1* %4, align 1
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %85
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %0)
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %109
  %132 = landingpad { i8*, i32 }
          catch i8* null
  %133 = extractvalue { i8*, i32 } %132, 0
  call void @__clang_call_terminate(i8* %133) #11
  br label %originalBB19
}

declare void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData*, %"class.std::vector.28"* dereferenceable(24), i32, i32) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2Ev(%"class.std::allocator.43"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.43"*, align 8
  store %"class.std::allocator.43"* %0, %"class.std::allocator.43"** %2, align 8
  %3 = load %"class.std::allocator.43"*, %"class.std::allocator.43"** %2, align 8
  %4 = bitcast %"class.std::allocator.43"* %3 to %"class.__gnu_cxx::new_allocator.44"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.44"* %4) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.7"*, i64, i8* dereferenceable(1), %"class.std::allocator.43"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.7
  %6 = load i32, i32* @y.8
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.std::vector.7"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca %"class.std::allocator.43"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %13, align 8
  store i64 %1, i64* %14, align 8
  store i8* %2, i8** %15, align 8
  store %"class.std::allocator.43"* %3, %"class.std::allocator.43"** %16, align 8
  %19 = load %"class.std::vector.7"*, %"class.std::vector.7"** %13, align 8
  %20 = bitcast %"class.std::vector.7"* %19 to %"struct.std::_Bvector_base"*
  %21 = load %"class.std::allocator.43"*, %"class.std::allocator.43"** %16, align 8
  call void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %20, %"class.std::allocator.43"* dereferenceable(1) %21)
  %22 = load i64, i64* %14, align 8
  %23 = load i32, i32* @x.7
  %24 = load i32, i32* @y.8
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.7"* %19, i64 %22)
          to label %31 unwind label %52

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.7
  %33 = load i32, i32* @y.8
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i8*, i8** %15, align 8
  %41 = load i8, i8* %40, align 1
  %42 = trunc i8 %41 to i1
  %43 = load i32, i32* @x.7
  %44 = load i32, i32* @y.8
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb(%"class.std::vector.7"* %19, i1 zeroext %42)
          to label %51 unwind label %52

; <label>:51:                                     ; preds = %originalBBpart24
  ret void

; <label>:52:                                     ; preds = %originalBBpart24, %originalBBpart2
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %17, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %18, align 4
  %56 = bitcast %"class.std::vector.7"* %19 to %"struct.std::_Bvector_base"*
  invoke void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %56)
          to label %57 unwind label %79

; <label>:57:                                     ; preds = %52
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.7
  %60 = load i32, i32* @y.8
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i8*, i8** %17, align 8
  %68 = load i32, i32* %18, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  %71 = load i32, i32* @x.7
  %72 = load i32, i32* @y.8
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %70

; <label>:79:                                     ; preds = %52
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  call void @__clang_call_terminate(i8* %81) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %82 = alloca %"class.std::vector.7"*, align 8
  %83 = alloca i64, align 8
  %84 = alloca i8*, align 8
  %85 = alloca %"class.std::allocator.43"*, align 8
  %86 = alloca i8*
  %87 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %82, align 8
  store i64 %1, i64* %83, align 8
  store i8* %2, i8** %84, align 8
  store %"class.std::allocator.43"* %3, %"class.std::allocator.43"** %85, align 8
  %88 = load %"class.std::vector.7"*, %"class.std::vector.7"** %82, align 8
  %89 = bitcast %"class.std::vector.7"* %88 to %"struct.std::_Bvector_base"*
  %90 = load %"class.std::allocator.43"*, %"class.std::allocator.43"** %85, align 8
  call void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %89, %"class.std::allocator.43"* dereferenceable(1) %90)
  %91 = load i64, i64* %83, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %92 = load i8*, i8** %15, align 8
  %93 = load i8, i8* %92, align 1
  %94 = trunc i8 %93 to i1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  %95 = load i8*, i8** %17, align 8
  %96 = load i32, i32* %18, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.25"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %10, align 8
  %11 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %10, align 8
  %12 = bitcast %"class.std::allocator.25"* %11 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %12) #13
  %13 = load i32, i32* @x.9
  %14 = load i32, i32* @y.10
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %21, align 8
  %22 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %21, align 8
  %23 = bitcast %"class.std::allocator.25"* %22 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %23) #13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.23"*, i64, %"class.std::vector.7"* dereferenceable(40), %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.11
  %6 = load i32, i32* @y.12
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.std::vector.23"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.std::vector.7"*, align 8
  %16 = alloca %"class.std::allocator.25"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %13, align 8
  store i64 %1, i64* %14, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %15, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %16, align 8
  %19 = load %"class.std::vector.23"*, %"class.std::vector.23"** %13, align 8
  %20 = bitcast %"class.std::vector.23"* %19 to %"struct.std::_Vector_base.24"*
  %21 = load i64, i64* %14, align 8
  %22 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %16, align 8
  %23 = call i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %21, %"class.std::allocator.25"* dereferenceable(1) %22)
  %24 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %16, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"* %20, i64 %23, %"class.std::allocator.25"* dereferenceable(1) %24)
  %25 = load i64, i64* %14, align 8
  %26 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  %27 = load i32, i32* @x.11
  %28 = load i32, i32* @y.12
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.23"* %19, i64 %25, %"class.std::vector.7"* dereferenceable(40) %26)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %17, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %18, align 4
  %40 = bitcast %"class.std::vector.23"* %19 to %"struct.std::_Vector_base.24"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %40)
          to label %41 unwind label %63

; <label>:41:                                     ; preds = %36
  %42 = load i32, i32* @x.11
  %43 = load i32, i32* @y.12
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* @x.11
  %51 = load i32, i32* @y.12
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i8*, i8** %17, align 8
  %60 = load i32, i32* %18, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %36
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %66 = alloca %"class.std::vector.23"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca %"class.std::vector.7"*, align 8
  %69 = alloca %"class.std::allocator.25"*, align 8
  %70 = alloca i8*
  %71 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %66, align 8
  store i64 %1, i64* %67, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %68, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %69, align 8
  %72 = load %"class.std::vector.23"*, %"class.std::vector.23"** %66, align 8
  %73 = bitcast %"class.std::vector.23"* %72 to %"struct.std::_Vector_base.24"*
  %74 = load i64, i64* %67, align 8
  %75 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %69, align 8
  %76 = call i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %74, %"class.std::allocator.25"* dereferenceable(1) %75)
  %77 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %69, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"* %73, i64 %76, %"class.std::allocator.25"* dereferenceable(1) %77)
  %78 = load i64, i64* %67, align 8
  %79 = load %"class.std::vector.7"*, %"class.std::vector.7"** %68, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  br label %originalBB1
}

declare void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EEC2EjRKS1_RK17FiniteElementDataILi3EERKSt6vectorIbSaIbEERKS9_ISB_SaISB_EE(%class.FE_Poly*, i32, %class.TensorProductPolynomials* dereferenceable(80), %class.FiniteElementData* dereferenceable(52), %"class.std::vector.7"* dereferenceable(40), %"class.std::vector.23"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.23"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.23"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %6 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.std::vector.7"*, %"class.std::vector.7"** %9, align 8
  %11 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"class.std::vector.7"*, %"class.std::vector.7"** %14, align 8
  %16 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E(%"class.std::vector.7"* %10, %"class.std::vector.7"* %15, %"class.std::allocator.25"* dereferenceable(1) %17)
          to label %19 unwind label %37

; <label>:19:                                     ; preds = %18
  %20 = load i32, i32* @x.13
  %21 = load i32, i32* @y.14
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %28)
  %29 = load i32, i32* @x.13
  %30 = load i32, i32* @y.14
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:37:                                     ; preds = %18, %1
  %38 = load i32, i32* @x.13
  %39 = load i32, i32* @y.14
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %50 = load i32, i32* @x.13
  %51 = load i32, i32* @y.14
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %49)
          to label %58 unwind label %64

; <label>:58:                                     ; preds = %originalBBpart24
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %67 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %67)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %3, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %4, align 4
  %71 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  br label %originalBB1
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #3 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #13
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev(%"class.__gnu_cxx::new_allocator.26"* %4) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %4 = bitcast %"class.std::vector.7"* %3 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbED2Ev(%"class.std::allocator.43"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.43"*, align 8
  store %"class.std::allocator.43"* %0, %"class.std::allocator.43"** %2, align 8
  %3 = load %"class.std::allocator.43"*, %"class.std::allocator.43"** %2, align 8
  %4 = bitcast %"class.std::allocator.43"* %3 to %"class.__gnu_cxx::new_allocator.44"*
  call void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.44"* %4) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.28"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %2, align 8
  %5 = load %"class.std::vector.28"*, %"class.std::vector.28"** %2, align 8
  %6 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.23
  %20 = load i32, i32* @y.24
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.23
  %28 = load i32, i32* @y.24
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %10, i32* %15, %"class.std::allocator.30"* dereferenceable(1) %17)
          to label %35 unwind label %37

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  call void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"* %36)
  ret void

; <label>:37:                                     ; preds = %originalBBpart2, %1
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %3, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %4, align 4
  %41 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"* %41)
          to label %42 unwind label %48

; <label>:42:                                     ; preds = %37
  br label %43

; <label>:43:                                     ; preds = %42
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

; <label>:48:                                     ; preds = %37
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN24TensorProductPolynomialsILi3EED2Ev(%class.TensorProductPolynomials*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TensorProductPolynomials*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TensorProductPolynomials* %0, %class.TensorProductPolynomials** %10, align 8
  %13 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %10, align 8
  %14 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %13, i32 0, i32 3
  %15 = load i32, i32* @x.25
  %16 = load i32, i32* @y.26
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %14)
          to label %23 unwind label %43

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %13, i32 0, i32 2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %24)
          to label %25 unwind label %48

; <label>:25:                                     ; preds = %23
  %26 = load i32, i32* @x.25
  %27 = load i32, i32* @y.26
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %13, i32 0, i32 0
  call void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"* %34)
  %35 = load i32, i32* @x.25
  %36 = load i32, i32* @y.26
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %11, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %12, align 4
  %47 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %13, i32 0, i32 2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %47)
          to label %52 unwind label %93

; <label>:48:                                     ; preds = %23
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %11, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %12, align 4
  br label %53

; <label>:52:                                     ; preds = %43
  br label %53

; <label>:53:                                     ; preds = %52, %48
  %54 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %13, i32 0, i32 0
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"* %54)
          to label %55 unwind label %93

; <label>:55:                                     ; preds = %53
  %56 = load i32, i32* @x.25
  %57 = load i32, i32* @y.26
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* @x.25
  %65 = load i32, i32* @y.26
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %72

; <label>:72:                                     ; preds = %originalBBpart28
  %73 = load i32, i32* @x.25
  %74 = load i32, i32* @y.26
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i8*, i8** %11, align 8
  %82 = load i32, i32* %12, align 4
  %83 = insertvalue { i8*, i32 } undef, i8* %81, 0
  %84 = insertvalue { i8*, i32 } %83, i32 %82, 1
  %85 = load i32, i32* @x.25
  %86 = load i32, i32* @y.26
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %84

; <label>:93:                                     ; preds = %53, %43
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %96 = alloca %class.TensorProductPolynomials*, align 8
  %97 = alloca i8*
  %98 = alloca i32
  store %class.TensorProductPolynomials* %0, %class.TensorProductPolynomials** %96, align 8
  %99 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %96, align 8
  %100 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %99, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %101 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %13, i32 0, i32 0
  call void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"* %101)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %102 = load i8*, i8** %11, align 8
  %103 = load i32, i32* %12, align 4
  %104 = insertvalue { i8*, i32 } undef, i8* %102, 0
  %105 = insertvalue { i8*, i32 } %104, i32 %103, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector.33"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.33"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %10, align 8
  %13 = load %"class.std::vector.33"*, %"class.std::vector.33"** %10, align 8
  %14 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %17, align 8
  %19 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %20 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %21, i32 0, i32 1
  %23 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %22, align 8
  %24 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  %25 = load i32, i32* @x.27
  %26 = load i32, i32* @y.28
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %33 = invoke dereferenceable(1) %"class.std::allocator.35"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.34"* %24)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %originalBBpart2
  invoke void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEES2_EvT_S4_RSaIT0_E(%"class.Polynomials::Polynomial"* %18, %"class.Polynomials::Polynomial"* %23, %"class.std::allocator.35"* dereferenceable(1) %33)
          to label %35 unwind label %53

; <label>:35:                                     ; preds = %34
  %36 = load i32, i32* @x.27
  %37 = load i32, i32* @y.28
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.34"* %44)
  %45 = load i32, i32* @x.27
  %46 = load i32, i32* @y.28
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:53:                                     ; preds = %34, %originalBBpart2
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %11, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %12, align 4
  %57 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.34"* %57)
          to label %58 unwind label %80

; <label>:58:                                     ; preds = %53
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.27
  %61 = load i32, i32* @y.28
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = load i8*, i8** %11, align 8
  %69 = load i32, i32* %12, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  %72 = load i32, i32* @x.27
  %73 = load i32, i32* @y.28
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %71

; <label>:80:                                     ; preds = %53
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca %"class.std::vector.33"*, align 8
  %84 = alloca i8*
  %85 = alloca i32
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %83, align 8
  %86 = load %"class.std::vector.33"*, %"class.std::vector.33"** %83, align 8
  %87 = bitcast %"class.std::vector.33"* %86 to %"struct.std::_Vector_base.34"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %88 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %89, i32 0, i32 0
  %91 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %90, align 8
  %92 = bitcast %"class.std::vector.33"* %86 to %"struct.std::_Vector_base.34"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %92, i32 0, i32 0
  %94 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %93 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %94, i32 0, i32 1
  %96 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %95, align 8
  %97 = bitcast %"class.std::vector.33"* %86 to %"struct.std::_Vector_base.34"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %98 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.34"* %98)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %99 = load i8*, i8** %11, align 8
  %100 = load i32, i32* %12, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2Ev(%"class.std::vector.28"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.28"*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %2, align 8
  %3 = load %"class.std::vector.28"*, %"class.std::vector.28"** %2, align 8
  %4 = bitcast %"class.std::vector.28"* %3 to %"struct.std::_Vector_base.29"*
  call void @_ZNSt12_Vector_baseIjSaIjEEC2Ev(%"struct.std::_Vector_base.29"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK6FE_DGQILi3EE14rotate_indicesERSt6vectorIjSaIjEEc(%class.FE_DGQ*, %"class.std::vector.28"* dereferenceable(24), i8 signext) #0 comdat align 2 {
  %4 = alloca %class.FE_DGQ*, align 8
  %5 = alloca %"class.std::vector.28"*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store %class.FE_DGQ* %0, %class.FE_DGQ** %4, align 8
  store %"class.std::vector.28"* %1, %"class.std::vector.28"** %5, align 8
  store i8 %2, i8* %6, align 1
  %27 = load %class.FE_DGQ*, %class.FE_DGQ** %4, align 8
  %28 = bitcast %class.FE_DGQ* %27 to %class.FE_Poly*
  %29 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %7, align 4
  %32 = load i32, i32* %7, align 4
  store i32 %32, i32* %8, align 4
  store i32 1, i32* %9, align 4
  br label %33

; <label>:33:                                     ; preds = %40, %3
  %34 = load i32, i32* %9, align 4
  %35 = icmp ult i32 %34, 3
  br i1 %35, label %36, label %43

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* %7, align 4
  %38 = load i32, i32* %8, align 4
  %39 = mul i32 %38, %37
  store i32 %39, i32* %8, align 4
  br label %40

; <label>:40:                                     ; preds = %36
  %41 = load i32, i32* %9, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %9, align 4
  br label %33

; <label>:43:                                     ; preds = %33
  %44 = load %"class.std::vector.28"*, %"class.std::vector.28"** %5, align 8
  %45 = load i32, i32* %8, align 4
  %46 = zext i32 %45 to i64
  call void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.28"* %44, i64 %46, i32 0)
  store i32 0, i32* %10, align 4
  %47 = load i8, i8* %6, align 1
  %48 = sext i8 %47 to i32
  switch i32 %48, label %493 [
    i32 122, label %49
    i32 90, label %177
    i32 120, label %321
    i32 88, label %431
  ]

; <label>:49:                                     ; preds = %43
  store i32 0, i32* %11, align 4
  br label %50

; <label>:50:                                     ; preds = %originalBBpart233, %49
  %51 = load i32, i32* %11, align 4
  %52 = load i32, i32* %7, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %54, label %176

; <label>:54:                                     ; preds = %50
  store i32 0, i32* %12, align 4
  br label %55

; <label>:55:                                     ; preds = %originalBBpart216, %54
  %56 = load i32, i32* %12, align 4
  %57 = load i32, i32* %7, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %59, label %140

; <label>:59:                                     ; preds = %55
  %60 = load i32, i32* @x.31
  %61 = load i32, i32* @y.32
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %59, %originalBBalteredBB
  store i32 0, i32* %13, align 4
  %68 = load i32, i32* @x.31
  %69 = load i32, i32* @y.32
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %76

; <label>:76:                                     ; preds = %originalBBpart24, %originalBBpart2
  %77 = load i32, i32* %13, align 4
  %78 = load i32, i32* %7, align 4
  %79 = icmp ult i32 %77, %78
  br i1 %79, label %80, label %120

; <label>:80:                                     ; preds = %76
  %81 = load i32, i32* %7, align 4
  %82 = load i32, i32* %13, align 4
  %83 = mul i32 %81, %82
  %84 = load i32, i32* %12, align 4
  %85 = sub i32 %83, %84
  %86 = load i32, i32* %7, align 4
  %87 = add i32 %85, %86
  %88 = sub i32 %87, 1
  %89 = load i32, i32* %7, align 4
  %90 = load i32, i32* %7, align 4
  %91 = mul i32 %89, %90
  %92 = load i32, i32* %11, align 4
  %93 = mul i32 %91, %92
  %94 = add i32 %88, %93
  store i32 %94, i32* %14, align 4
  %95 = load i32, i32* %14, align 4
  %96 = load %"class.std::vector.28"*, %"class.std::vector.28"** %5, align 8
  %97 = load i32, i32* %10, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %10, align 4
  %99 = zext i32 %97 to i64
  %100 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %96, i64 %99)
  store i32 %95, i32* %100, align 4
  br label %101

; <label>:101:                                    ; preds = %80
  %102 = load i32, i32* @x.31
  %103 = load i32, i32* @y.32
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %101, %originalBB1alteredBB
  %110 = load i32, i32* %13, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %13, align 4
  %112 = load i32, i32* @x.31
  %113 = load i32, i32* @y.32
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %76

; <label>:120:                                    ; preds = %76
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i32, i32* @x.31
  %123 = load i32, i32* @y.32
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %121, %originalBB6alteredBB
  %130 = load i32, i32* %12, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %12, align 4
  %132 = load i32, i32* @x.31
  %133 = load i32, i32* @y.32
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br label %55

; <label>:140:                                    ; preds = %55
  %141 = load i32, i32* @x.31
  %142 = load i32, i32* @y.32
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %140, %originalBB18alteredBB
  %149 = load i32, i32* @x.31
  %150 = load i32, i32* @y.32
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %157

; <label>:157:                                    ; preds = %originalBBpart220
  %158 = load i32, i32* @x.31
  %159 = load i32, i32* @y.32
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %157, %originalBB22alteredBB
  %166 = load i32, i32* %11, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %11, align 4
  %168 = load i32, i32* @x.31
  %169 = load i32, i32* @y.32
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart233, label %originalBB22alteredBB

originalBBpart233:                                ; preds = %originalBB22
  br label %50

; <label>:176:                                    ; preds = %50
  br label %494

; <label>:177:                                    ; preds = %43
  %178 = load i32, i32* @x.31
  %179 = load i32, i32* @y.32
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %177, %originalBB35alteredBB
  store i32 0, i32* %15, align 4
  %186 = load i32, i32* @x.31
  %187 = load i32, i32* @y.32
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %194

; <label>:194:                                    ; preds = %301, %originalBBpart237
  %195 = load i32, i32* %15, align 4
  %196 = load i32, i32* %7, align 4
  %197 = icmp ult i32 %195, %196
  br i1 %197, label %198, label %304

; <label>:198:                                    ; preds = %194
  store i32 0, i32* %16, align 4
  br label %199

; <label>:199:                                    ; preds = %281, %198
  %200 = load i32, i32* @x.31
  %201 = load i32, i32* @y.32
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %199, %originalBB39alteredBB
  %208 = load i32, i32* %16, align 4
  %209 = load i32, i32* %7, align 4
  %210 = icmp ult i32 %208, %209
  %211 = load i32, i32* @x.31
  %212 = load i32, i32* @y.32
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %210, label %219, label %284

; <label>:219:                                    ; preds = %originalBBpart241
  %220 = load i32, i32* @x.31
  %221 = load i32, i32* @y.32
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %219, %originalBB43alteredBB
  store i32 0, i32* %17, align 4
  %228 = load i32, i32* @x.31
  %229 = load i32, i32* @y.32
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %236

; <label>:236:                                    ; preds = %277, %originalBBpart245
  %237 = load i32, i32* @x.31
  %238 = load i32, i32* @y.32
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %236, %originalBB47alteredBB
  %245 = load i32, i32* %17, align 4
  %246 = load i32, i32* %7, align 4
  %247 = icmp ult i32 %245, %246
  %248 = load i32, i32* @x.31
  %249 = load i32, i32* @y.32
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br i1 %247, label %256, label %280

; <label>:256:                                    ; preds = %originalBBpart249
  %257 = load i32, i32* %7, align 4
  %258 = load i32, i32* %17, align 4
  %259 = mul i32 %257, %258
  %260 = load i32, i32* %16, align 4
  %261 = sub i32 %259, %260
  %262 = load i32, i32* %7, align 4
  %263 = add i32 %261, %262
  %264 = sub i32 %263, 1
  %265 = load i32, i32* %7, align 4
  %266 = load i32, i32* %7, align 4
  %267 = mul i32 %265, %266
  %268 = load i32, i32* %15, align 4
  %269 = mul i32 %267, %268
  %270 = add i32 %264, %269
  store i32 %270, i32* %18, align 4
  %271 = load i32, i32* %10, align 4
  %272 = add i32 %271, 1
  store i32 %272, i32* %10, align 4
  %273 = load %"class.std::vector.28"*, %"class.std::vector.28"** %5, align 8
  %274 = load i32, i32* %18, align 4
  %275 = zext i32 %274 to i64
  %276 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %273, i64 %275)
  store i32 %271, i32* %276, align 4
  br label %277

; <label>:277:                                    ; preds = %256
  %278 = load i32, i32* %17, align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %17, align 4
  br label %236

; <label>:280:                                    ; preds = %originalBBpart249
  br label %281

; <label>:281:                                    ; preds = %280
  %282 = load i32, i32* %16, align 4
  %283 = add i32 %282, 1
  store i32 %283, i32* %16, align 4
  br label %199

; <label>:284:                                    ; preds = %originalBBpart241
  %285 = load i32, i32* @x.31
  %286 = load i32, i32* @y.32
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %284, %originalBB51alteredBB
  %293 = load i32, i32* @x.31
  %294 = load i32, i32* @y.32
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %301

; <label>:301:                                    ; preds = %originalBBpart253
  %302 = load i32, i32* %15, align 4
  %303 = add i32 %302, 1
  store i32 %303, i32* %15, align 4
  br label %194

; <label>:304:                                    ; preds = %194
  %305 = load i32, i32* @x.31
  %306 = load i32, i32* @y.32
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %304, %originalBB55alteredBB
  %313 = load i32, i32* @x.31
  %314 = load i32, i32* @y.32
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %494

; <label>:321:                                    ; preds = %43
  store i32 0, i32* %19, align 4
  br label %322

; <label>:322:                                    ; preds = %411, %321
  %323 = load i32, i32* %19, align 4
  %324 = load i32, i32* %7, align 4
  %325 = icmp ult i32 %323, %324
  br i1 %325, label %326, label %414

; <label>:326:                                    ; preds = %322
  store i32 0, i32* %20, align 4
  br label %327

; <label>:327:                                    ; preds = %originalBBpart284, %326
  %328 = load i32, i32* @x.31
  %329 = load i32, i32* @y.32
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %327, %originalBB59alteredBB
  %336 = load i32, i32* %20, align 4
  %337 = load i32, i32* %7, align 4
  %338 = icmp ult i32 %336, %337
  %339 = load i32, i32* @x.31
  %340 = load i32, i32* @y.32
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %338, label %347, label %410

; <label>:347:                                    ; preds = %originalBBpart261
  store i32 0, i32* %21, align 4
  br label %348

; <label>:348:                                    ; preds = %371, %347
  %349 = load i32, i32* %21, align 4
  %350 = load i32, i32* %7, align 4
  %351 = icmp ult i32 %349, %350
  br i1 %351, label %352, label %374

; <label>:352:                                    ; preds = %348
  %353 = load i32, i32* %7, align 4
  %354 = load i32, i32* %7, align 4
  %355 = load i32, i32* %20, align 4
  %356 = mul i32 %354, %355
  %357 = load i32, i32* %19, align 4
  %358 = sub i32 %356, %357
  %359 = load i32, i32* %7, align 4
  %360 = add i32 %358, %359
  %361 = sub i32 %360, 1
  %362 = mul i32 %353, %361
  %363 = load i32, i32* %21, align 4
  %364 = add i32 %362, %363
  store i32 %364, i32* %22, align 4
  %365 = load i32, i32* %22, align 4
  %366 = load %"class.std::vector.28"*, %"class.std::vector.28"** %5, align 8
  %367 = load i32, i32* %10, align 4
  %368 = add i32 %367, 1
  store i32 %368, i32* %10, align 4
  %369 = zext i32 %367 to i64
  %370 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %366, i64 %369)
  store i32 %365, i32* %370, align 4
  br label %371

; <label>:371:                                    ; preds = %352
  %372 = load i32, i32* %21, align 4
  %373 = add i32 %372, 1
  store i32 %373, i32* %21, align 4
  br label %348

; <label>:374:                                    ; preds = %348
  %375 = load i32, i32* @x.31
  %376 = load i32, i32* @y.32
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %374, %originalBB63alteredBB
  %383 = load i32, i32* @x.31
  %384 = load i32, i32* @y.32
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %391

; <label>:391:                                    ; preds = %originalBBpart265
  %392 = load i32, i32* @x.31
  %393 = load i32, i32* @y.32
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %391, %originalBB67alteredBB
  %400 = load i32, i32* %20, align 4
  %401 = add i32 %400, 1
  store i32 %401, i32* %20, align 4
  %402 = load i32, i32* @x.31
  %403 = load i32, i32* @y.32
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart284, label %originalBB67alteredBB

originalBBpart284:                                ; preds = %originalBB67
  br label %327

; <label>:410:                                    ; preds = %originalBBpart261
  br label %411

; <label>:411:                                    ; preds = %410
  %412 = load i32, i32* %19, align 4
  %413 = add i32 %412, 1
  store i32 %413, i32* %19, align 4
  br label %322

; <label>:414:                                    ; preds = %322
  %415 = load i32, i32* @x.31
  %416 = load i32, i32* @y.32
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %414, %originalBB86alteredBB
  %423 = load i32, i32* @x.31
  %424 = load i32, i32* @y.32
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %494

; <label>:431:                                    ; preds = %43
  store i32 0, i32* %23, align 4
  br label %432

; <label>:432:                                    ; preds = %489, %431
  %433 = load i32, i32* %23, align 4
  %434 = load i32, i32* %7, align 4
  %435 = icmp ult i32 %433, %434
  br i1 %435, label %436, label %492

; <label>:436:                                    ; preds = %432
  store i32 0, i32* %24, align 4
  br label %437

; <label>:437:                                    ; preds = %485, %436
  %438 = load i32, i32* @x.31
  %439 = load i32, i32* @y.32
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %437, %originalBB90alteredBB
  %446 = load i32, i32* %24, align 4
  %447 = load i32, i32* %7, align 4
  %448 = icmp ult i32 %446, %447
  %449 = load i32, i32* @x.31
  %450 = load i32, i32* @y.32
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %448, label %457, label %488

; <label>:457:                                    ; preds = %originalBBpart292
  store i32 0, i32* %25, align 4
  br label %458

; <label>:458:                                    ; preds = %481, %457
  %459 = load i32, i32* %25, align 4
  %460 = load i32, i32* %7, align 4
  %461 = icmp ult i32 %459, %460
  br i1 %461, label %462, label %484

; <label>:462:                                    ; preds = %458
  %463 = load i32, i32* %7, align 4
  %464 = load i32, i32* %7, align 4
  %465 = load i32, i32* %24, align 4
  %466 = mul i32 %464, %465
  %467 = load i32, i32* %23, align 4
  %468 = sub i32 %466, %467
  %469 = load i32, i32* %7, align 4
  %470 = add i32 %468, %469
  %471 = sub i32 %470, 1
  %472 = mul i32 %463, %471
  %473 = load i32, i32* %25, align 4
  %474 = add i32 %472, %473
  store i32 %474, i32* %26, align 4
  %475 = load i32, i32* %10, align 4
  %476 = add i32 %475, 1
  store i32 %476, i32* %10, align 4
  %477 = load %"class.std::vector.28"*, %"class.std::vector.28"** %5, align 8
  %478 = load i32, i32* %26, align 4
  %479 = zext i32 %478 to i64
  %480 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %477, i64 %479)
  store i32 %475, i32* %480, align 4
  br label %481

; <label>:481:                                    ; preds = %462
  %482 = load i32, i32* %25, align 4
  %483 = add i32 %482, 1
  store i32 %483, i32* %25, align 4
  br label %458

; <label>:484:                                    ; preds = %458
  br label %485

; <label>:485:                                    ; preds = %484
  %486 = load i32, i32* %24, align 4
  %487 = add i32 %486, 1
  store i32 %487, i32* %24, align 4
  br label %437

; <label>:488:                                    ; preds = %originalBBpart292
  br label %489

; <label>:489:                                    ; preds = %488
  %490 = load i32, i32* %23, align 4
  %491 = add i32 %490, 1
  store i32 %491, i32* %23, align 4
  br label %432

; <label>:492:                                    ; preds = %432
  br label %494

; <label>:493:                                    ; preds = %43
  br label %494

; <label>:494:                                    ; preds = %493, %492, %originalBBpart288, %originalBBpart257, %176
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %59
  store i32 0, i32* %13, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %101
  %495 = load i32, i32* %13, align 4
  %_ = sub i32 0, %495
  %gen = add i32 %_, 1
  %_2 = shl i32 %495, 1
  %496 = add i32 %495, 1
  store i32 %496, i32* %13, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %121
  %497 = load i32, i32* %12, align 4
  %_7 = sub i32 %497, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 %497, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 0, %497
  %gen12 = add i32 %_11, 1
  %_13 = shl i32 %497, 1
  %_14 = shl i32 %497, 1
  %498 = add i32 %497, 1
  store i32 %498, i32* %12, align 4
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %140
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %157
  %499 = load i32, i32* %11, align 4
  %_23 = sub i32 0, %499
  %gen24 = add i32 %_23, 1
  %_25 = shl i32 %499, 1
  %_26 = sub i32 0, %499
  %gen27 = add i32 %_26, 1
  %_28 = sub i32 %499, 1
  %gen29 = mul i32 %_28, 1
  %_30 = shl i32 %499, 1
  %_31 = shl i32 %499, 1
  %500 = add i32 %499, 1
  store i32 %500, i32* %11, align 4
  br label %originalBB22

originalBB35alteredBB:                            ; preds = %originalBB35, %177
  store i32 0, i32* %15, align 4
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %199
  %501 = load i32, i32* %16, align 4
  %502 = load i32, i32* %7, align 4
  %503 = icmp ult i32 %501, %502
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %219
  store i32 0, i32* %17, align 4
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %236
  %504 = load i32, i32* %17, align 4
  %505 = load i32, i32* %7, align 4
  %506 = icmp ult i32 %504, %505
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %284
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %304
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %327
  %507 = load i32, i32* %20, align 4
  %508 = load i32, i32* %7, align 4
  %509 = icmp ult i32 %507, %508
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %374
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %391
  %510 = load i32, i32* %20, align 4
  %_68 = shl i32 %510, 1
  %_69 = sub i32 %510, 1
  %gen70 = mul i32 %_69, 1
  %_71 = sub i32 0, %510
  %gen72 = add i32 %_71, 1
  %_73 = sub i32 0, %510
  %gen74 = add i32 %_73, 1
  %_75 = shl i32 %510, 1
  %_76 = sub i32 %510, 1
  %gen77 = mul i32 %_76, 1
  %_78 = sub i32 0, %510
  %gen79 = add i32 %_78, 1
  %_80 = shl i32 %510, 1
  %_81 = sub i32 0, %510
  %gen82 = add i32 %_81, 1
  %511 = add i32 %510, 1
  store i32 %511, i32* %20, align 4
  br label %originalBB67

originalBB86alteredBB:                            ; preds = %originalBB86, %414
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %437
  %512 = load i32, i32* %24, align 4
  %513 = load i32, i32* %7, align 4
  %514 = icmp ult i32 %512, %513
  br label %originalBB90
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdE6reinitEjj(%class.Table*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.33
  %5 = load i32, i32* @y.34
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Table*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.TableIndices, align 4
  store %class.Table* %0, %class.Table** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %16 = load %class.Table*, %class.Table** %12, align 8
  %17 = bitcast %class.Table* %16 to %class.TableBase*
  %18 = load i32, i32* %13, align 4
  %19 = load i32, i32* %14, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %15, i32 %18, i32 %19)
  call void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase* %17, %class.TableIndices* dereferenceable(8) %15)
  %20 = load i32, i32* @x.33
  %21 = load i32, i32* @y.34
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Table*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %class.TableIndices, align 4
  store %class.Table* %0, %class.Table** %28, align 8
  store i32 %1, i32* %29, align 4
  store i32 %2, i32* %30, align 4
  %32 = load %class.Table*, %class.Table** %28, align 8
  %33 = bitcast %class.Table* %32 to %class.TableBase*
  %34 = load i32, i32* %29, align 4
  %35 = load i32, i32* %30, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %31, i32 %34, i32 %35)
  call void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase* %33, %class.TableIndices* dereferenceable(8) %31)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FullMatrixIdE4fillIdEEvPKT_(%class.FullMatrix*, double*) #0 comdat align 2 {
  %3 = load i32, i32* @x.35
  %4 = load i32, i32* @y.36
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.FullMatrix*, align 8
  %12 = alloca double*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load %class.FullMatrix*, %class.FullMatrix** %11, align 8
  %14 = bitcast %class.FullMatrix* %13 to %class.Table*
  %15 = bitcast %class.Table* %14 to %class.TableBase*
  %16 = load double*, double** %12, align 8
  call void @_ZN9TableBaseILi2EdE4fillIdEEvPKT_(%class.TableBase* %15, double* %16)
  %17 = load i32, i32* @x.35
  %18 = load i32, i32* @y.36
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %class.FullMatrix*, align 8
  %26 = alloca double*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %25, align 8
  store double* %1, double** %26, align 8
  %27 = load %class.FullMatrix*, %class.FullMatrix** %25, align 8
  %28 = bitcast %class.FullMatrix* %27 to %class.Table*
  %29 = bitcast %class.Table* %28 to %class.TableBase*
  %30 = load double*, double** %26, align 8
  call void @_ZN9TableBaseILi2EdE4fillIdEEvPKT_(%class.TableBase* %29, double* %30)
  br label %originalBB
}

declare void @_ZN10FullMatrixIdE16fill_permutationIdEEvRKS_IT_ERKSt6vectorIjSaIjEESA_(%class.FullMatrix*, %class.FullMatrix* dereferenceable(48), %"class.std::vector.28"* dereferenceable(24), %"class.std::vector.28"* dereferenceable(24)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.11"*, i64, %class.Point*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.52", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %7)
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %35

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.37
  %13 = load i32, i32* @y.38
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"* %7)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %6, i32 0, i32 0
  store %class.Point* %20, %class.Point** %21, align 8
  %22 = load i64, i64* %5, align 8
  %23 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %7)
  %24 = sub i64 %22, %23
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %6, i32 0, i32 0
  %26 = load %class.Point*, %class.Point** %25, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.11"* %7, %class.Point* %26, i64 %24, %class.Point* dereferenceable(24) %2)
  %27 = load i32, i32* @x.37
  %28 = load i32, i32* @y.38
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %80

; <label>:35:                                     ; preds = %3
  %36 = load i32, i32* @x.37
  %37 = load i32, i32* @y.38
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %35, %originalBB3alteredBB
  %44 = load i64, i64* %5, align 8
  %45 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %7)
  %46 = icmp ult i64 %44, %45
  %47 = load i32, i32* @x.37
  %48 = load i32, i32* @y.38
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br i1 %46, label %55, label %63

; <label>:55:                                     ; preds = %originalBBpart25
  %56 = bitcast %"class.std::vector.11"* %7 to %"struct.std::_Vector_base.12"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %56, i32 0, i32 0
  %58 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %57 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %58, i32 0, i32 0
  %60 = load %class.Point*, %class.Point** %59, align 8
  %61 = load i64, i64* %5, align 8
  %62 = getelementptr inbounds %class.Point, %class.Point* %60, i64 %61
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.11"* %7, %class.Point* %62)
  br label %63

; <label>:63:                                     ; preds = %55, %originalBBpart25
  %64 = load i32, i32* @x.37
  %65 = load i32, i32* @y.38
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %63, %originalBB7alteredBB
  %72 = load i32, i32* @x.37
  %73 = load i32, i32* @y.38
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br label %80

; <label>:80:                                     ; preds = %originalBBpart29, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %81 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"* %7)
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %6, i32 0, i32 0
  store %class.Point* %81, %class.Point** %82, align 8
  %83 = load i64, i64* %5, align 8
  %84 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %7)
  %_ = shl i64 %83, %84
  %_1 = sub i64 0, %83
  %gen = add i64 %_1, %84
  %_2 = shl i64 %83, %84
  %85 = sub i64 %83, %84
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %6, i32 0, i32 0
  %87 = load %class.Point*, %class.Point** %86, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.11"* %7, %class.Point* %87, i64 %85, %class.Point* dereferenceable(24) %2)
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %35
  %88 = load i64, i64* %5, align 8
  %89 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %7)
  %90 = icmp ult i64 %88, %89
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %63
  br label %originalBB7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5PointILi3EEC2Ev(%class.Point*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.39
  %3 = load i32, i32* @y.40
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = bitcast %class.Point* %11 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %12, i1 zeroext true)
  %13 = load i32, i32* @x.39
  %14 = load i32, i32* @y.40
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %21, align 8
  %22 = load %class.Point*, %class.Point** %21, align 8
  %23 = bitcast %class.Point* %22 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %23, i1 zeroext true)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.11"*, i64) #2 comdat align 2 {
  %3 = load i32, i32* @x.41
  %4 = load i32, i32* @y.42
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.11"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.11"*, %"class.std::vector.11"** %11, align 8
  %14 = bitcast %"class.std::vector.11"* %13 to %"struct.std::_Vector_base.12"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Point*, %class.Point** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %class.Point, %class.Point* %18, i64 %19
  %21 = load i32, i32* @x.41
  %22 = load i32, i32* @y.42
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.11"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.11"*, %"class.std::vector.11"** %29, align 8
  %32 = bitcast %"class.std::vector.11"* %31 to %"struct.std::_Vector_base.12"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %class.Point*, %class.Point** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %class.Point, %class.Point* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN5PointILi3EEclEj(%class.Point*, i32) #2 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca i32, align 4
  store %class.Point* %0, %class.Point** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 %9
  ret double* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point*, %class.Point* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = bitcast %class.Point* %7 to %class.Tensor*
  %9 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %6, %class.Tensor* dereferenceable(24) %8)
  ret %class.Point* %5
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK6FE_DGQILi3EE8get_nameB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret, %class.FE_DGQ*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.FE_DGQ*, align 8
  %4 = alloca %"class.std::__cxx11::basic_ostringstream", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.FE_DGQ* %1, %class.FE_DGQ** %3, align 8
  %7 = load %class.FE_DGQ*, %class.FE_DGQ** %3, align 8
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_ostringstream"* %4)
  %8 = bitcast %"class.std::__cxx11::basic_ostringstream"* %4 to %"class.std::basic_ostream"*
  %9 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0))
          to label %10 unwind label %39

; <label>:10:                                     ; preds = %2
  %11 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %9, i32 3)
          to label %12 unwind label %39

; <label>:12:                                     ; preds = %10
  %13 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0))
          to label %14 unwind label %39

; <label>:14:                                     ; preds = %12
  %15 = bitcast %class.FE_DGQ* %7 to %class.FE_Poly*
  %16 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %13, i32 %17)
          to label %19 unwind label %39

; <label>:19:                                     ; preds = %14
  %20 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
          to label %21 unwind label %39

; <label>:21:                                     ; preds = %19
  %22 = load i32, i32* @x.47
  %23 = load i32, i32* @y.48
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* @x.47
  %31 = load i32, i32* @y.48
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret %0, %"class.std::__cxx11::basic_ostringstream"* %4)
          to label %38 unwind label %39

; <label>:38:                                     ; preds = %originalBBpart2
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_ostringstream"* %4)
  ret void

; <label>:39:                                     ; preds = %originalBBpart2, %19, %14, %12, %10, %2
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %5, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %6, align 4
  invoke void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_ostringstream"* %4)
          to label %43 unwind label %49

; <label>:43:                                     ; preds = %39
  br label %44

; <label>:44:                                     ; preds = %43
  %45 = load i8*, i8** %5, align 8
  %46 = load i32, i32* %6, align 4
  %47 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  resume { i8*, i32 } %48

; <label>:49:                                     ; preds = %39
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  call void @__clang_call_terminate(i8* %51) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  br label %originalBB
}

declare void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_ostringstream"*) unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"*, i32) #1

declare void @_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret, %"class.std::__cxx11::basic_ostringstream"*) #1

declare void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_ostringstream"*) unnamed_addr #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK6FE_DGQILi3EE24get_interpolation_matrixERK17FiniteElementBaseILi3EER10FullMatrixIdE(%class.FE_DGQ*, %class.FiniteElementBase* dereferenceable(1160), %class.FullMatrix* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.FE_DGQ*, align 8
  %5 = alloca %class.FiniteElementBase*, align 8
  %6 = alloca %class.FullMatrix*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented", align 8
  %11 = alloca %class.FE_DGQ*, align 8
  %12 = alloca %class.FullMatrix, align 8
  %13 = alloca %class.FullMatrix, align 8
  %14 = alloca %class.FullMatrix, align 8
  %15 = alloca i32, align 4
  %16 = alloca %class.Point, align 8
  %17 = alloca %"struct.(anonymous namespace)::int2type", align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca double, align 8
  %24 = alloca i32, align 4
  store %class.FE_DGQ* %0, %class.FE_DGQ** %4, align 8
  store %class.FiniteElementBase* %1, %class.FiniteElementBase** %5, align 8
  store %class.FullMatrix* %2, %class.FullMatrix** %6, align 8
  %25 = load %class.FE_DGQ*, %class.FE_DGQ** %4, align 8
  %26 = load %class.FiniteElementBase*, %class.FiniteElementBase** %5, align 8
  %27 = bitcast %class.FiniteElementBase* %26 to void (%"class.std::__cxx11::basic_string"*, %class.FiniteElementBase*)***
  %28 = load void (%"class.std::__cxx11::basic_string"*, %class.FiniteElementBase*)**, void (%"class.std::__cxx11::basic_string"*, %class.FiniteElementBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %class.FiniteElementBase*)*, void (%"class.std::__cxx11::basic_string"*, %class.FiniteElementBase*)** %28, i64 2
  %30 = load void (%"class.std::__cxx11::basic_string"*, %class.FiniteElementBase*)*, void (%"class.std::__cxx11::basic_string"*, %class.FiniteElementBase*)** %29, align 8
  call void %30(%"class.std::__cxx11::basic_string"* sret %7, %class.FiniteElementBase* %26)
  %31 = invoke i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm(%"class.std::__cxx11::basic_string"* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64 0)
          to label %32 unwind label %57

; <label>:32:                                     ; preds = %3
  %33 = load i32, i32* @x.49
  %34 = load i32, i32* @y.50
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = icmp eq i64 %31, 0
  %42 = load i32, i32* @x.49
  %43 = load i32, i32* @y.50
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %81, label %50

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load %class.FiniteElementBase*, %class.FiniteElementBase** %5, align 8
  %52 = icmp eq %class.FiniteElementBase* %51, null
  br i1 %52, label %61, label %53

; <label>:53:                                     ; preds = %50
  %54 = bitcast %class.FiniteElementBase* %51 to i8*
  %55 = call i8* @__dynamic_cast(i8* %54, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTI17FiniteElementBaseILi3EE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI6FE_DGQILi3EE to i8*), i64 0) #13
  %56 = bitcast i8* %55 to %class.FE_DGQ*
  br label %78

; <label>:57:                                     ; preds = %3
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %8, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %9, align 4
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %7)
          to label %119 unwind label %709

; <label>:61:                                     ; preds = %50
  %62 = load i32, i32* @x.49
  %63 = load i32, i32* @y.50
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %61, %originalBB1alteredBB
  %70 = load i32, i32* @x.49
  %71 = load i32, i32* @y.50
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %78

; <label>:78:                                     ; preds = %originalBBpart24, %53
  %79 = phi %class.FE_DGQ* [ %56, %53 ], [ null, %originalBBpart24 ]
  %80 = icmp ne %class.FE_DGQ* %79, null
  br label %81

; <label>:81:                                     ; preds = %78, %originalBBpart2
  %82 = phi i1 [ true, %originalBBpart2 ], [ %80, %78 ]
  %83 = load i32, i32* @x.49
  %84 = load i32, i32* @y.50
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %81, %originalBB6alteredBB
  %91 = xor i1 %82, true
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %7)
  %92 = load i32, i32* @x.49
  %93 = load i32, i32* @y.50
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br i1 %91, label %100, label %156

; <label>:100:                                    ; preds = %originalBBpart212
  %101 = load i32, i32* @x.49
  %102 = load i32, i32* @y.50
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %100, %originalBB14alteredBB
  %109 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* %109, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedC2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10)
  %110 = load i32, i32* @x.49
  %111 = load i32, i32* @y.50
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedEEEvPKciS6_S6_S6_T_(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i32 465, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.6, i32 0, i32 0), %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10)
          to label %118 unwind label %136

; <label>:118:                                    ; preds = %originalBBpart216
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10) #13
  br label %156

; <label>:119:                                    ; preds = %57
  %120 = load i32, i32* @x.49
  %121 = load i32, i32* @y.50
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = load i32, i32* @x.49
  %129 = load i32, i32* @y.50
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %688

; <label>:136:                                    ; preds = %originalBBpart216
  %137 = load i32, i32* @x.49
  %138 = load i32, i32* @y.50
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %136, %originalBB22alteredBB
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %8, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %9, align 4
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10) #13
  %148 = load i32, i32* @x.49
  %149 = load i32, i32* @y.50
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %688

; <label>:156:                                    ; preds = %118, %originalBBpart212
  %157 = load %class.FiniteElementBase*, %class.FiniteElementBase** %5, align 8
  %158 = bitcast %class.FiniteElementBase* %157 to i8*
  %159 = call i8* @__dynamic_cast(i8* %158, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTI17FiniteElementBaseILi3EE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI6FE_DGQILi3EE to i8*), i64 0) #13
  %160 = bitcast i8* %159 to %class.FE_DGQ*
  %161 = icmp eq %class.FE_DGQ* %160, null
  br i1 %161, label %162, label %163

; <label>:162:                                    ; preds = %156
  call void @__cxa_bad_cast() #14
  unreachable

; <label>:163:                                    ; preds = %156
  store %class.FE_DGQ* %160, %class.FE_DGQ** %11, align 8
  %164 = bitcast %class.FE_DGQ* %25 to i8*
  %165 = getelementptr inbounds i8, i8* %164, i64 24
  %166 = bitcast i8* %165 to %class.FiniteElementData*
  %167 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %166, i32 0, i32 10
  %168 = load i32, i32* %167, align 8
  %169 = bitcast %class.FE_DGQ* %25 to i8*
  %170 = getelementptr inbounds i8, i8* %169, i64 24
  %171 = bitcast i8* %170 to %class.FiniteElementData*
  %172 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %171, i32 0, i32 10
  %173 = load i32, i32* %172, align 8
  call void @_ZN10FullMatrixIdEC1Ejj(%class.FullMatrix* %12, i32 %168, i32 %173)
  %174 = bitcast %class.FE_DGQ* %25 to i8*
  %175 = getelementptr inbounds i8, i8* %174, i64 24
  %176 = bitcast i8* %175 to %class.FiniteElementData*
  %177 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %176, i32 0, i32 10
  %178 = load i32, i32* %177, align 8
  %179 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %180 = bitcast %class.FE_DGQ* %179 to i8*
  %181 = getelementptr inbounds i8, i8* %180, i64 24
  %182 = bitcast i8* %181 to %class.FiniteElementData*
  %183 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %182, i32 0, i32 10
  %184 = load i32, i32* %183, align 8
  invoke void @_ZN10FullMatrixIdEC1Ejj(%class.FullMatrix* %13, i32 %178, i32 %184)
          to label %185 unwind label %300

; <label>:185:                                    ; preds = %163
  %186 = load i32, i32* @x.49
  %187 = load i32, i32* @y.50
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %185, %originalBB26alteredBB
  %194 = bitcast %class.FE_DGQ* %25 to i8*
  %195 = getelementptr inbounds i8, i8* %194, i64 24
  %196 = bitcast i8* %195 to %class.FiniteElementData*
  %197 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %196, i32 0, i32 10
  %198 = load i32, i32* %197, align 8
  %199 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %200 = bitcast %class.FE_DGQ* %199 to i8*
  %201 = getelementptr inbounds i8, i8* %200, i64 24
  %202 = bitcast i8* %201 to %class.FiniteElementData*
  %203 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %202, i32 0, i32 10
  %204 = load i32, i32* %203, align 8
  %205 = load i32, i32* @x.49
  %206 = load i32, i32* @y.50
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  invoke void @_ZN10FullMatrixIdEC1Ejj(%class.FullMatrix* %14, i32 %198, i32 %204)
          to label %213 unwind label %304

; <label>:213:                                    ; preds = %originalBBpart228
  %214 = load i32, i32* @x.49
  %215 = load i32, i32* @y.50
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %213, %originalBB30alteredBB
  store i32 0, i32* %15, align 4
  %222 = load i32, i32* @x.49
  %223 = load i32, i32* @y.50
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %230

; <label>:230:                                    ; preds = %originalBBpart276, %originalBBpart232
  %231 = load i32, i32* %15, align 4
  %232 = bitcast %class.FE_DGQ* %25 to i8*
  %233 = getelementptr inbounds i8, i8* %232, i64 24
  %234 = bitcast i8* %233 to %class.FiniteElementData*
  %235 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %234, i32 0, i32 10
  %236 = load i32, i32* %235, align 8
  %237 = icmp ult i32 %231, %236
  br i1 %237, label %238, label %421

; <label>:238:                                    ; preds = %230
  %239 = load i32, i32* %15, align 4
  %240 = bitcast %class.FE_DGQ* %25 to i8*
  %241 = getelementptr inbounds i8, i8* %240, i64 24
  %242 = bitcast i8* %241 to %class.FiniteElementData*
  %243 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %242, i32 0, i32 10
  %244 = load i32, i32* %243, align 8
  invoke void @_ZN12_GLOBAL__N_119generate_unit_pointEjjNS_8int2typeILi3EEE(%class.Point* sret %16, i32 %239, i32 %244)
          to label %245 unwind label %308

; <label>:245:                                    ; preds = %238
  %246 = load i32, i32* @x.49
  %247 = load i32, i32* @y.50
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %245, %originalBB34alteredBB
  store i32 0, i32* %18, align 4
  %254 = load i32, i32* @x.49
  %255 = load i32, i32* @y.50
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %262

; <label>:262:                                    ; preds = %originalBBpart250, %originalBBpart236
  %263 = load i32, i32* %18, align 4
  %264 = bitcast %class.FE_DGQ* %25 to i8*
  %265 = getelementptr inbounds i8, i8* %264, i64 24
  %266 = bitcast i8* %265 to %class.FiniteElementData*
  %267 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %266, i32 0, i32 10
  %268 = load i32, i32* %267, align 8
  %269 = icmp ult i32 %263, %268
  br i1 %269, label %270, label %328

; <label>:270:                                    ; preds = %262
  %271 = bitcast %class.FE_DGQ* %25 to %class.FE_Poly*
  %272 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %271, i32 0, i32 2
  %273 = load i32, i32* %18, align 4
  %274 = invoke double @_ZNK24TensorProductPolynomialsILi3EE13compute_valueEjRK5PointILi3EE(%class.TensorProductPolynomials* %272, i32 %273, %class.Point* dereferenceable(24) %16)
          to label %275 unwind label %308

; <label>:275:                                    ; preds = %270
  %276 = bitcast %class.FullMatrix* %12 to %class.Table*
  %277 = load i32, i32* %15, align 4
  %278 = load i32, i32* %18, align 4
  %279 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %276, i32 %277, i32 %278)
          to label %280 unwind label %308

; <label>:280:                                    ; preds = %275
  store double %274, double* %279, align 8
  br label %281

; <label>:281:                                    ; preds = %280
  %282 = load i32, i32* @x.49
  %283 = load i32, i32* @y.50
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %281, %originalBB38alteredBB
  %290 = load i32, i32* %18, align 4
  %291 = add i32 %290, 1
  store i32 %291, i32* %18, align 4
  %292 = load i32, i32* @x.49
  %293 = load i32, i32* @y.50
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart250, label %originalBB38alteredBB

originalBBpart250:                                ; preds = %originalBB38
  br label %262

; <label>:300:                                    ; preds = %617, %163
  %301 = landingpad { i8*, i32 }
          cleanup
  %302 = extractvalue { i8*, i32 } %301, 0
  store i8* %302, i8** %8, align 8
  %303 = extractvalue { i8*, i32 } %301, 1
  store i32 %303, i32* %9, align 4
  br label %654

; <label>:304:                                    ; preds = %originalBBpart2104, %originalBBpart228
  %305 = landingpad { i8*, i32 }
          cleanup
  %306 = extractvalue { i8*, i32 } %305, 0
  store i8* %306, i8** %8, align 8
  %307 = extractvalue { i8*, i32 } %305, 1
  store i32 %307, i32* %9, align 4
  br label %636

; <label>:308:                                    ; preds = %583, %originalBBpart292, %originalBBpart288, %438, %originalBBpart280, %376, %originalBBpart262, %275, %270, %238
  %309 = load i32, i32* @x.49
  %310 = load i32, i32* @y.50
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %308, %originalBB52alteredBB
  %317 = landingpad { i8*, i32 }
          cleanup
  %318 = extractvalue { i8*, i32 } %317, 0
  store i8* %318, i8** %8, align 8
  %319 = extractvalue { i8*, i32 } %317, 1
  store i32 %319, i32* %9, align 4
  %320 = load i32, i32* @x.49
  %321 = load i32, i32* @y.50
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %14)
          to label %619 unwind label %709

; <label>:328:                                    ; preds = %262
  store i32 0, i32* %19, align 4
  br label %329

; <label>:329:                                    ; preds = %382, %328
  %330 = load i32, i32* @x.49
  %331 = load i32, i32* @y.50
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %329, %originalBB56alteredBB
  %338 = load i32, i32* %19, align 4
  %339 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %340 = bitcast %class.FE_DGQ* %339 to i8*
  %341 = getelementptr inbounds i8, i8* %340, i64 24
  %342 = bitcast i8* %341 to %class.FiniteElementData*
  %343 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %342, i32 0, i32 10
  %344 = load i32, i32* %343, align 8
  %345 = icmp ult i32 %338, %344
  %346 = load i32, i32* @x.49
  %347 = load i32, i32* @y.50
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %345, label %354, label %385

; <label>:354:                                    ; preds = %originalBBpart258
  %355 = load i32, i32* @x.49
  %356 = load i32, i32* @y.50
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %354, %originalBB60alteredBB
  %363 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %364 = bitcast %class.FE_DGQ* %363 to %class.FE_Poly*
  %365 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %364, i32 0, i32 2
  %366 = load i32, i32* %19, align 4
  %367 = load i32, i32* @x.49
  %368 = load i32, i32* @y.50
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  %375 = invoke double @_ZNK24TensorProductPolynomialsILi3EE13compute_valueEjRK5PointILi3EE(%class.TensorProductPolynomials* %365, i32 %366, %class.Point* dereferenceable(24) %16)
          to label %376 unwind label %308

; <label>:376:                                    ; preds = %originalBBpart262
  %377 = bitcast %class.FullMatrix* %13 to %class.Table*
  %378 = load i32, i32* %15, align 4
  %379 = load i32, i32* %19, align 4
  %380 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %377, i32 %378, i32 %379)
          to label %381 unwind label %308

; <label>:381:                                    ; preds = %376
  store double %375, double* %380, align 8
  br label %382

; <label>:382:                                    ; preds = %381
  %383 = load i32, i32* %19, align 4
  %384 = add i32 %383, 1
  store i32 %384, i32* %19, align 4
  br label %329

; <label>:385:                                    ; preds = %originalBBpart258
  %386 = load i32, i32* @x.49
  %387 = load i32, i32* @y.50
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %385, %originalBB64alteredBB
  %394 = load i32, i32* @x.49
  %395 = load i32, i32* @y.50
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %402

; <label>:402:                                    ; preds = %originalBBpart266
  %403 = load i32, i32* @x.49
  %404 = load i32, i32* @y.50
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %402, %originalBB68alteredBB
  %411 = load i32, i32* %15, align 4
  %412 = add i32 %411, 1
  store i32 %412, i32* %15, align 4
  %413 = load i32, i32* @x.49
  %414 = load i32, i32* @y.50
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart276, label %originalBB68alteredBB

originalBBpart276:                                ; preds = %originalBB68
  br label %230

; <label>:421:                                    ; preds = %230
  %422 = load i32, i32* @x.49
  %423 = load i32, i32* @y.50
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %421, %originalBB78alteredBB
  %430 = load i32, i32* @x.49
  %431 = load i32, i32* @y.50
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  invoke void @_ZN10FullMatrixIdE12gauss_jordanEv(%class.FullMatrix* %12)
          to label %438 unwind label %308

; <label>:438:                                    ; preds = %originalBBpart280
  %439 = load %class.FullMatrix*, %class.FullMatrix** %6, align 8
  invoke void @_ZNK10FullMatrixIdE5mmultIdEEvRS_IT_ERKS3_b(%class.FullMatrix* %12, %class.FullMatrix* dereferenceable(48) %439, %class.FullMatrix* dereferenceable(48) %13, i1 zeroext false)
          to label %440 unwind label %308

; <label>:440:                                    ; preds = %438
  store i32 0, i32* %20, align 4
  br label %441

; <label>:441:                                    ; preds = %545, %440
  %442 = load i32, i32* %20, align 4
  %443 = bitcast %class.FE_DGQ* %25 to i8*
  %444 = getelementptr inbounds i8, i8* %443, i64 24
  %445 = bitcast i8* %444 to %class.FiniteElementData*
  %446 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %445, i32 0, i32 10
  %447 = load i32, i32* %446, align 8
  %448 = icmp ult i32 %442, %447
  br i1 %448, label %449, label %548

; <label>:449:                                    ; preds = %441
  %450 = load i32, i32* @x.49
  %451 = load i32, i32* @y.50
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %449, %originalBB82alteredBB
  store i32 0, i32* %21, align 4
  %458 = load i32, i32* @x.49
  %459 = load i32, i32* @y.50
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %466

; <label>:466:                                    ; preds = %originalBBpart296, %originalBBpart284
  %467 = load i32, i32* %21, align 4
  %468 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %469 = bitcast %class.FE_DGQ* %468 to i8*
  %470 = getelementptr inbounds i8, i8* %469, i64 24
  %471 = bitcast i8* %470 to %class.FiniteElementData*
  %472 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %471, i32 0, i32 10
  %473 = load i32, i32* %472, align 8
  %474 = icmp ult i32 %467, %473
  br i1 %474, label %475, label %544

; <label>:475:                                    ; preds = %466
  %476 = load i32, i32* @x.49
  %477 = load i32, i32* @y.50
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %475, %originalBB86alteredBB
  %484 = load %class.FullMatrix*, %class.FullMatrix** %6, align 8
  %485 = bitcast %class.FullMatrix* %484 to %class.Table*
  %486 = load i32, i32* %20, align 4
  %487 = load i32, i32* %21, align 4
  %488 = load i32, i32* @x.49
  %489 = load i32, i32* @y.50
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  %496 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %485, i32 %486, i32 %487)
          to label %497 unwind label %308

; <label>:497:                                    ; preds = %originalBBpart288
  %498 = load double, double* %496, align 8
  %499 = call double @fabs(double %498) #12
  %500 = fcmp olt double %499, 1.000000e-15
  br i1 %500, label %501, label %524

; <label>:501:                                    ; preds = %497
  %502 = load i32, i32* @x.49
  %503 = load i32, i32* @y.50
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %501, %originalBB90alteredBB
  %510 = load %class.FullMatrix*, %class.FullMatrix** %6, align 8
  %511 = bitcast %class.FullMatrix* %510 to %class.Table*
  %512 = load i32, i32* %20, align 4
  %513 = load i32, i32* %21, align 4
  %514 = load i32, i32* @x.49
  %515 = load i32, i32* @y.50
  %516 = sub i32 %514, 1
  %517 = mul i32 %514, %516
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %519, %520
  br i1 %521, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  %522 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %511, i32 %512, i32 %513)
          to label %523 unwind label %308

; <label>:523:                                    ; preds = %originalBBpart292
  store double 0.000000e+00, double* %522, align 8
  br label %524

; <label>:524:                                    ; preds = %523, %497
  br label %525

; <label>:525:                                    ; preds = %524
  %526 = load i32, i32* @x.49
  %527 = load i32, i32* @y.50
  %528 = sub i32 %526, 1
  %529 = mul i32 %526, %528
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %531, %532
  br i1 %533, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %525, %originalBB94alteredBB
  %534 = load i32, i32* %21, align 4
  %535 = add i32 %534, 1
  store i32 %535, i32* %21, align 4
  %536 = load i32, i32* @x.49
  %537 = load i32, i32* @y.50
  %538 = sub i32 %536, 1
  %539 = mul i32 %536, %538
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %541, %542
  br i1 %543, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %466

; <label>:544:                                    ; preds = %466
  br label %545

; <label>:545:                                    ; preds = %544
  %546 = load i32, i32* %20, align 4
  %547 = add i32 %546, 1
  store i32 %547, i32* %20, align 4
  br label %441

; <label>:548:                                    ; preds = %441
  store i32 0, i32* %22, align 4
  br label %549

; <label>:549:                                    ; preds = %597, %548
  %550 = load i32, i32* %22, align 4
  %551 = bitcast %class.FE_DGQ* %25 to i8*
  %552 = getelementptr inbounds i8, i8* %551, i64 24
  %553 = bitcast i8* %552 to %class.FiniteElementData*
  %554 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %553, i32 0, i32 10
  %555 = load i32, i32* %554, align 8
  %556 = icmp ult i32 %550, %555
  br i1 %556, label %557, label %600

; <label>:557:                                    ; preds = %549
  store double 0.000000e+00, double* %23, align 8
  store i32 0, i32* %24, align 4
  br label %558

; <label>:558:                                    ; preds = %593, %557
  %559 = load i32, i32* @x.49
  %560 = load i32, i32* @y.50
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %558, %originalBB98alteredBB
  %567 = load i32, i32* %24, align 4
  %568 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %569 = bitcast %class.FE_DGQ* %568 to i8*
  %570 = getelementptr inbounds i8, i8* %569, i64 24
  %571 = bitcast i8* %570 to %class.FiniteElementData*
  %572 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %571, i32 0, i32 10
  %573 = load i32, i32* %572, align 8
  %574 = icmp ult i32 %567, %573
  %575 = load i32, i32* @x.49
  %576 = load i32, i32* @y.50
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %574, label %583, label %596

; <label>:583:                                    ; preds = %originalBBpart2100
  %584 = load %class.FullMatrix*, %class.FullMatrix** %6, align 8
  %585 = bitcast %class.FullMatrix* %584 to %class.Table*
  %586 = load i32, i32* %22, align 4
  %587 = load i32, i32* %24, align 4
  %588 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %585, i32 %586, i32 %587)
          to label %589 unwind label %308

; <label>:589:                                    ; preds = %583
  %590 = load double, double* %588, align 8
  %591 = load double, double* %23, align 8
  %592 = fadd double %591, %590
  store double %592, double* %23, align 8
  br label %593

; <label>:593:                                    ; preds = %589
  %594 = load i32, i32* %24, align 4
  %595 = add i32 %594, 1
  store i32 %595, i32* %24, align 4
  br label %558

; <label>:596:                                    ; preds = %originalBBpart2100
  br label %597

; <label>:597:                                    ; preds = %596
  %598 = load i32, i32* %22, align 4
  %599 = add i32 %598, 1
  store i32 %599, i32* %22, align 4
  br label %549

; <label>:600:                                    ; preds = %549
  %601 = load i32, i32* @x.49
  %602 = load i32, i32* @y.50
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %600, %originalBB102alteredBB
  %609 = load i32, i32* @x.49
  %610 = load i32, i32* @y.50
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %14)
          to label %617 unwind label %304

; <label>:617:                                    ; preds = %originalBBpart2104
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %13)
          to label %618 unwind label %300

; <label>:618:                                    ; preds = %617
  call void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %12)
  ret void

; <label>:619:                                    ; preds = %originalBBpart254
  %620 = load i32, i32* @x.49
  %621 = load i32, i32* @y.50
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %619, %originalBB106alteredBB
  %628 = load i32, i32* @x.49
  %629 = load i32, i32* @y.50
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %636

; <label>:636:                                    ; preds = %originalBBpart2108, %304
  %637 = load i32, i32* @x.49
  %638 = load i32, i32* @y.50
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %636, %originalBB110alteredBB
  %645 = load i32, i32* @x.49
  %646 = load i32, i32* @y.50
  %647 = sub i32 %645, 1
  %648 = mul i32 %645, %647
  %649 = urem i32 %648, 2
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %650, %651
  br i1 %652, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %13)
          to label %653 unwind label %709

; <label>:653:                                    ; preds = %originalBBpart2112
  br label %654

; <label>:654:                                    ; preds = %653, %300
  %655 = load i32, i32* @x.49
  %656 = load i32, i32* @y.50
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %654, %originalBB114alteredBB
  %663 = load i32, i32* @x.49
  %664 = load i32, i32* @y.50
  %665 = sub i32 %663, 1
  %666 = mul i32 %663, %665
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %668, %669
  br i1 %670, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %12)
          to label %671 unwind label %709

; <label>:671:                                    ; preds = %originalBBpart2116
  %672 = load i32, i32* @x.49
  %673 = load i32, i32* @y.50
  %674 = sub i32 %672, 1
  %675 = mul i32 %672, %674
  %676 = urem i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = icmp slt i32 %673, 10
  %679 = or i1 %677, %678
  br i1 %679, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %671, %originalBB118alteredBB
  %680 = load i32, i32* @x.49
  %681 = load i32, i32* @y.50
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br label %688

; <label>:688:                                    ; preds = %originalBBpart2120, %originalBBpart224, %originalBBpart220
  %689 = load i32, i32* @x.49
  %690 = load i32, i32* @y.50
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %688, %originalBB122alteredBB
  %697 = load i8*, i8** %8, align 8
  %698 = load i32, i32* %9, align 4
  %699 = insertvalue { i8*, i32 } undef, i8* %697, 0
  %700 = insertvalue { i8*, i32 } %699, i32 %698, 1
  %701 = load i32, i32* @x.49
  %702 = load i32, i32* @y.50
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  resume { i8*, i32 } %700

; <label>:709:                                    ; preds = %originalBBpart2116, %originalBBpart2112, %originalBBpart254, %57
  %710 = landingpad { i8*, i32 }
          catch i8* null
  %711 = extractvalue { i8*, i32 } %710, 0
  call void @__clang_call_terminate(i8* %711) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %32
  %712 = icmp eq i64 %31, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %81
  %_ = sub i1 false, %82
  %gen = add i1 %_, true
  %_7 = shl i1 %82, true
  %_8 = shl i1 %82, true
  %_9 = sub i1 false, %82
  %gen10 = add i1 %_9, true
  %713 = xor i1 %82, true
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %7)
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %100
  %714 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* %714, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedC2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10)
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %136
  %715 = landingpad { i8*, i32 }
          cleanup
  %716 = extractvalue { i8*, i32 } %715, 0
  store i8* %716, i8** %8, align 8
  %717 = extractvalue { i8*, i32 } %715, 1
  store i32 %717, i32* %9, align 4
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %10) #13
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %185
  %718 = bitcast %class.FE_DGQ* %25 to i8*
  %719 = getelementptr inbounds i8, i8* %718, i64 24
  %720 = bitcast i8* %719 to %class.FiniteElementData*
  %721 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %720, i32 0, i32 10
  %722 = load i32, i32* %721, align 8
  %723 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %724 = bitcast %class.FE_DGQ* %723 to i8*
  %725 = getelementptr inbounds i8, i8* %724, i64 24
  %726 = bitcast i8* %725 to %class.FiniteElementData*
  %727 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %726, i32 0, i32 10
  %728 = load i32, i32* %727, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %213
  store i32 0, i32* %15, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %245
  store i32 0, i32* %18, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %281
  %729 = load i32, i32* %18, align 4
  %_39 = shl i32 %729, 1
  %_40 = sub i32 %729, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 0, %729
  %gen43 = add i32 %_42, 1
  %_44 = sub i32 0, %729
  %gen45 = add i32 %_44, 1
  %_46 = sub i32 0, %729
  %gen47 = add i32 %_46, 1
  %_48 = shl i32 %729, 1
  %730 = add i32 %729, 1
  store i32 %730, i32* %18, align 4
  br label %originalBB38

originalBB52alteredBB:                            ; preds = %originalBB52, %308
  %731 = landingpad { i8*, i32 }
          cleanup
  %732 = extractvalue { i8*, i32 } %731, 0
  store i8* %732, i8** %8, align 8
  %733 = extractvalue { i8*, i32 } %731, 1
  store i32 %733, i32* %9, align 4
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %329
  %734 = load i32, i32* %19, align 4
  %735 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %736 = bitcast %class.FE_DGQ* %735 to i8*
  %737 = getelementptr inbounds i8, i8* %736, i64 24
  %738 = bitcast i8* %737 to %class.FiniteElementData*
  %739 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %738, i32 0, i32 10
  %740 = load i32, i32* %739, align 8
  %741 = icmp ult i32 %734, %740
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %354
  %742 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %743 = bitcast %class.FE_DGQ* %742 to %class.FE_Poly*
  %744 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %743, i32 0, i32 2
  %745 = load i32, i32* %19, align 4
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %385
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %402
  %746 = load i32, i32* %15, align 4
  %_69 = shl i32 %746, 1
  %_70 = sub i32 %746, 1
  %gen71 = mul i32 %_70, 1
  %_72 = sub i32 0, %746
  %gen73 = add i32 %_72, 1
  %_74 = shl i32 %746, 1
  %747 = add i32 %746, 1
  store i32 %747, i32* %15, align 4
  br label %originalBB68

originalBB78alteredBB:                            ; preds = %originalBB78, %421
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %449
  store i32 0, i32* %21, align 4
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %475
  %748 = load %class.FullMatrix*, %class.FullMatrix** %6, align 8
  %749 = bitcast %class.FullMatrix* %748 to %class.Table*
  %750 = load i32, i32* %20, align 4
  %751 = load i32, i32* %21, align 4
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %501
  %752 = load %class.FullMatrix*, %class.FullMatrix** %6, align 8
  %753 = bitcast %class.FullMatrix* %752 to %class.Table*
  %754 = load i32, i32* %20, align 4
  %755 = load i32, i32* %21, align 4
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %525
  %756 = load i32, i32* %21, align 4
  %757 = add i32 %756, 1
  store i32 %757, i32* %21, align 4
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %558
  %758 = load i32, i32* %24, align 4
  %759 = load %class.FE_DGQ*, %class.FE_DGQ** %11, align 8
  %760 = bitcast %class.FE_DGQ* %759 to i8*
  %761 = getelementptr inbounds i8, i8* %760, i64 24
  %762 = bitcast i8* %761 to %class.FiniteElementData*
  %763 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %762, i32 0, i32 10
  %764 = load i32, i32* %763, align 8
  %765 = icmp ult i32 %758, %764
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %600
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %619
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %636
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %654
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %671
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %688
  %766 = load i8*, i8** %8, align 8
  %767 = load i32, i32* %9, align 4
  %768 = insertvalue { i8*, i32 } undef, i8* %766, 0
  %769 = insertvalue { i8*, i32 } %768, i32 %767, 1
  br label %originalBB122
}

declare i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) #1

; Function Attrs: nounwind readonly
declare i8* @__dynamic_cast(i8*, i8*, i8*, i64) #4

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18deal_II_exceptions9internals17issue_error_throwIN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedEEEvPKciS6_S6_S6_T_(i8*, i32, i8*, i8*, i8*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*) #0 comdat {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  %12 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %5 to %class.ExceptionBase*
  %13 = load i8*, i8** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i8*, i8** %9, align 8
  %16 = load i8*, i8** %10, align 8
  %17 = load i8*, i8** %11, align 8
  call void @_ZN13ExceptionBase9SetFieldsEPKciS1_S1_S1_(%class.ExceptionBase* %12, i8* %13, i32 %14, i8* %15, i8* %16, i8* %17)
  %18 = call i8* @__cxa_allocate_exception(i64 48) #13
  %19 = bitcast i8* %18 to %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedC2ERKS1_(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %19, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* dereferenceable(48) %5) #13
  call void @__cxa_throw(i8* %18, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE to i8*), i8* bitcast (void (%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*)* @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev to i8*)) #14
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedC2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, align 8
  store %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %0, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %2, align 8
  %3 = load %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %2, align 8
  %4 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %4)
  %5 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.55
  %3 = load i32, i32* @y.56
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, align 8
  store %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %0, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %10, align 8
  %11 = load %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %10, align 8
  %12 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #13
  %13 = load i32, i32* @x.55
  %14 = load i32, i32* @y.56
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, align 8
  store %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %0, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %21, align 8
  %22 = load %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %21, align 8
  %23 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #13
  br label %originalBB
}

declare void @__cxa_bad_cast()

declare void @_ZN10FullMatrixIdEC1Ejj(%class.FullMatrix*, i32, i32) unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_ZN12_GLOBAL__N_119generate_unit_pointEjjNS_8int2typeILi3EEE(%class.Point* noalias sret, i32, i32) #0 {
  %4 = load i32, i32* @x.57
  %5 = load i32, i32* @y.58
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.(anonymous namespace)::int2type", align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %17 = load i32, i32* %14, align 4
  %18 = icmp eq i32 %17, 1
  %19 = load i32, i32* @x.57
  %20 = load i32, i32* @y.58
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %44

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.57
  %29 = load i32, i32* @y.58
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %0, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01)
  %36 = load i32, i32* @x.57
  %37 = load i32, i32* @y.58
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %89

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i32, i32* @x.57
  %46 = load i32, i32* @y.58
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load i32, i32* %14, align 4
  %54 = call i32 @_ZN12_GLOBAL__N_112int_cuberootEj(i32 %53)
  store i32 %54, i32* %15, align 4
  %55 = load i32, i32* %15, align 4
  %56 = sub i32 %55, 1
  %57 = uitofp i32 %56 to double
  %58 = fdiv double 1.000000e+00, %57
  store double %58, double* %16, align 8
  %59 = load i32, i32* %13, align 4
  %60 = load i32, i32* %15, align 4
  %61 = urem i32 %59, %60
  %62 = uitofp i32 %61 to double
  %63 = load double, double* %16, align 8
  %64 = fmul double %62, %63
  %65 = load i32, i32* %13, align 4
  %66 = load i32, i32* %15, align 4
  %67 = udiv i32 %65, %66
  %68 = load i32, i32* %15, align 4
  %69 = urem i32 %67, %68
  %70 = uitofp i32 %69 to double
  %71 = load double, double* %16, align 8
  %72 = fmul double %70, %71
  %73 = load i32, i32* %13, align 4
  %74 = load i32, i32* %15, align 4
  %75 = load i32, i32* %15, align 4
  %76 = mul i32 %74, %75
  %77 = udiv i32 %73, %76
  %78 = uitofp i32 %77 to double
  %79 = load double, double* %16, align 8
  %80 = fmul double %78, %79
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %0, double %64, double %72, double %80)
  %81 = load i32, i32* @x.57
  %82 = load i32, i32* @y.58
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart275, label %originalBB6alteredBB

originalBBpart275:                                ; preds = %originalBB6
  br label %89

; <label>:89:                                     ; preds = %originalBBpart275, %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %90 = alloca %"struct.(anonymous namespace)::int2type", align 1
  %91 = alloca i32, align 4
  %92 = alloca i32, align 4
  %93 = alloca i32, align 4
  %94 = alloca double, align 8
  store i32 %1, i32* %91, align 4
  store i32 %2, i32* %92, align 4
  %95 = load i32, i32* %92, align 4
  %96 = icmp eq i32 %95, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %0, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %97 = load i32, i32* %14, align 4
  %98 = call i32 @_ZN12_GLOBAL__N_112int_cuberootEj(i32 %97)
  store i32 %98, i32* %15, align 4
  %99 = load i32, i32* %15, align 4
  %_ = shl i32 %99, 1
  %_7 = sub i32 %99, 1
  %gen = mul i32 %_7, 1
  %_8 = sub i32 %99, 1
  %gen9 = mul i32 %_8, 1
  %_10 = sub i32 0, %99
  %gen11 = add i32 %_10, 1
  %100 = sub i32 %99, 1
  %101 = uitofp i32 %100 to double
  %_12 = fsub double 1.000000e+00, %101
  %gen13 = fmul double %_12, %101
  %_14 = fsub double 1.000000e+00, %101
  %gen15 = fmul double %_14, %101
  %_16 = fsub double 1.000000e+00, %101
  %gen17 = fmul double %_16, %101
  %_18 = fsub double 1.000000e+00, %101
  %gen19 = fmul double %_18, %101
  %102 = fdiv double 1.000000e+00, %101
  store double %102, double* %16, align 8
  %103 = load i32, i32* %13, align 4
  %104 = load i32, i32* %15, align 4
  %_20 = shl i32 %103, %104
  %_21 = shl i32 %103, %104
  %_22 = sub i32 0, %103
  %gen23 = add i32 %_22, %104
  %_24 = sub i32 0, %103
  %gen25 = add i32 %_24, %104
  %105 = urem i32 %103, %104
  %106 = uitofp i32 %105 to double
  %107 = load double, double* %16, align 8
  %_26 = fsub double %106, %107
  %gen27 = fmul double %_26, %107
  %_28 = fsub double -0.000000e+00, %106
  %gen29 = fadd double %_28, %107
  %_30 = fsub double -0.000000e+00, %106
  %gen31 = fadd double %_30, %107
  %_32 = fsub double %106, %107
  %gen33 = fmul double %_32, %107
  %_34 = fsub double %106, %107
  %gen35 = fmul double %_34, %107
  %108 = fmul double %106, %107
  %109 = load i32, i32* %13, align 4
  %110 = load i32, i32* %15, align 4
  %_36 = sub i32 %109, %110
  %gen37 = mul i32 %_36, %110
  %111 = udiv i32 %109, %110
  %112 = load i32, i32* %15, align 4
  %_38 = sub i32 0, %111
  %gen39 = add i32 %_38, %112
  %_40 = shl i32 %111, %112
  %_41 = shl i32 %111, %112
  %_42 = sub i32 0, %111
  %gen43 = add i32 %_42, %112
  %_44 = sub i32 %111, %112
  %gen45 = mul i32 %_44, %112
  %_46 = shl i32 %111, %112
  %113 = urem i32 %111, %112
  %114 = uitofp i32 %113 to double
  %115 = load double, double* %16, align 8
  %_47 = fsub double -0.000000e+00, %114
  %gen48 = fadd double %_47, %115
  %116 = fmul double %114, %115
  %117 = load i32, i32* %13, align 4
  %118 = load i32, i32* %15, align 4
  %119 = load i32, i32* %15, align 4
  %_49 = shl i32 %118, %119
  %_50 = sub i32 %118, %119
  %gen51 = mul i32 %_50, %119
  %_52 = sub i32 %118, %119
  %gen53 = mul i32 %_52, %119
  %_54 = sub i32 %118, %119
  %gen55 = mul i32 %_54, %119
  %_56 = sub i32 %118, %119
  %gen57 = mul i32 %_56, %119
  %_58 = sub i32 0, %118
  %gen59 = add i32 %_58, %119
  %120 = mul i32 %118, %119
  %_60 = sub i32 0, %117
  %gen61 = add i32 %_60, %120
  %121 = udiv i32 %117, %120
  %122 = uitofp i32 %121 to double
  %123 = load double, double* %16, align 8
  %_62 = fsub double -0.000000e+00, %122
  %gen63 = fadd double %_62, %123
  %_64 = fsub double -0.000000e+00, %122
  %gen65 = fadd double %_64, %123
  %_66 = fsub double -0.000000e+00, %122
  %gen67 = fadd double %_66, %123
  %_68 = fsub double -0.000000e+00, %122
  %gen69 = fadd double %_68, %123
  %_70 = fsub double %122, %123
  %gen71 = fmul double %_70, %123
  %_72 = fsub double -0.000000e+00, %122
  %gen73 = fadd double %_72, %123
  %124 = fmul double %122, %123
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %0, double %108, double %116, double %124)
  br label %originalBB6
}

declare double @_ZNK24TensorProductPolynomialsILi3EE13compute_valueEjRK5PointILi3EE(%class.TensorProductPolynomials*, i32, %class.Point* dereferenceable(24)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table*, i32, i32) #2 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Table*, %class.Table** %4, align 8
  %8 = bitcast %class.Table* %7 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = bitcast %class.Table* %7 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = mul i32 %11, %15
  %17 = load i32, i32* %6, align 4
  %18 = add i32 %16, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds double, double* %10, i64 %19
  ret double* %20
}

declare void @_ZN10FullMatrixIdE12gauss_jordanEv(%class.FullMatrix*) #1

declare void @_ZNK10FullMatrixIdE5mmultIdEEvRS_IT_ERKS3_b(%class.FullMatrix*, %class.FullMatrix* dereferenceable(48), %class.FullMatrix* dereferenceable(48), i1 zeroext) #1

; Function Attrs: nounwind readnone
declare double @fabs(double) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.FullMatrix*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %2, align 8
  %3 = load %class.FullMatrix*, %class.FullMatrix** %2, align 8
  %4 = bitcast %class.FullMatrix* %3 to %class.Table*
  call void @_ZN5TableILi2EdED2Ev(%class.Table* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr zeroext i1 @_ZNK6FE_DGQILi3EE19has_support_on_faceEjj(%class.FE_DGQ*, i32, i32) unnamed_addr #2 comdat align 2 {
  %4 = alloca i1, align 1
  %5 = alloca %class.FE_DGQ*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %class.FE_DGQ* %0, %class.FE_DGQ** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %11 = load %class.FE_DGQ*, %class.FE_DGQ** %5, align 8
  %12 = bitcast %class.FE_DGQ* %11 to %class.FE_Poly*
  %13 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %8, align 4
  %16 = load i32, i32* %8, align 4
  %17 = load i32, i32* %8, align 4
  %18 = mul i32 %16, %17
  store i32 %18, i32* %9, align 4
  %19 = load i32, i32* %6, align 4
  %20 = load i32, i32* %9, align 4
  %21 = urem i32 %19, %20
  store i32 %21, i32* %10, align 4
  %22 = load i32, i32* %7, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

; <label>:24:                                     ; preds = %3
  %25 = load i32, i32* %10, align 4
  %26 = load i32, i32* %8, align 4
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %24
  store i1 true, i1* %4, align 1
  br label %194

; <label>:29:                                     ; preds = %24, %3
  %30 = load i32, i32* %7, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %55

; <label>:32:                                     ; preds = %29
  %33 = load i32, i32* %10, align 4
  %34 = load i32, i32* %9, align 4
  %35 = load i32, i32* %8, align 4
  %36 = sub i32 %34, %35
  %37 = icmp uge i32 %33, %36
  br i1 %37, label %38, label %55

; <label>:38:                                     ; preds = %32
  %39 = load i32, i32* @x.63
  %40 = load i32, i32* @y.64
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %38, %originalBBalteredBB
  store i1 true, i1* %4, align 1
  %47 = load i32, i32* @x.63
  %48 = load i32, i32* @y.64
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %194

; <label>:55:                                     ; preds = %32, %29
  %56 = load i32, i32* @x.63
  %57 = load i32, i32* @y.64
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %55, %originalBB1alteredBB
  %64 = load i32, i32* %7, align 4
  %65 = icmp eq i32 %64, 2
  %66 = load i32, i32* @x.63
  %67 = load i32, i32* @y.64
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %65, label %74, label %95

; <label>:74:                                     ; preds = %originalBBpart24
  %75 = load i32, i32* %6, align 4
  %76 = load i32, i32* %9, align 4
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %78, label %95

; <label>:78:                                     ; preds = %74
  %79 = load i32, i32* @x.63
  %80 = load i32, i32* @y.64
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %78, %originalBB6alteredBB
  store i1 true, i1* %4, align 1
  %87 = load i32, i32* @x.63
  %88 = load i32, i32* @y.64
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %194

; <label>:95:                                     ; preds = %74, %originalBBpart24
  %96 = load i32, i32* @x.63
  %97 = load i32, i32* @y.64
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %95, %originalBB10alteredBB
  %104 = load i32, i32* %7, align 4
  %105 = icmp eq i32 %104, 3
  %106 = load i32, i32* @x.63
  %107 = load i32, i32* @y.64
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %105, label %114, label %122

; <label>:114:                                    ; preds = %originalBBpart212
  %115 = load i32, i32* %6, align 4
  %116 = load i32, i32* %8, align 4
  %117 = urem i32 %115, %116
  %118 = load i32, i32* %8, align 4
  %119 = sub i32 %118, 1
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %122

; <label>:121:                                    ; preds = %114
  store i1 true, i1* %4, align 1
  br label %194

; <label>:122:                                    ; preds = %114, %originalBBpart212
  %123 = load i32, i32* @x.63
  %124 = load i32, i32* @y.64
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %122, %originalBB14alteredBB
  %131 = load i32, i32* %7, align 4
  %132 = icmp eq i32 %131, 4
  %133 = load i32, i32* @x.63
  %134 = load i32, i32* @y.64
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %132, label %141, label %168

; <label>:141:                                    ; preds = %originalBBpart216
  %142 = load i32, i32* %6, align 4
  %143 = bitcast %class.FE_DGQ* %11 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 24
  %145 = bitcast i8* %144 to %class.FiniteElementData*
  %146 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %145, i32 0, i32 10
  %147 = load i32, i32* %146, align 8
  %148 = load i32, i32* %9, align 4
  %149 = sub i32 %147, %148
  %150 = icmp uge i32 %142, %149
  br i1 %150, label %151, label %168

; <label>:151:                                    ; preds = %141
  %152 = load i32, i32* @x.63
  %153 = load i32, i32* @y.64
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %151, %originalBB18alteredBB
  store i1 true, i1* %4, align 1
  %160 = load i32, i32* @x.63
  %161 = load i32, i32* @y.64
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %194

; <label>:168:                                    ; preds = %141, %originalBBpart216
  %169 = load i32, i32* @x.63
  %170 = load i32, i32* @y.64
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %168, %originalBB22alteredBB
  %177 = load i32, i32* %7, align 4
  %178 = icmp eq i32 %177, 5
  %179 = load i32, i32* @x.63
  %180 = load i32, i32* @y.64
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %178, label %187, label %193

; <label>:187:                                    ; preds = %originalBBpart224
  %188 = load i32, i32* %6, align 4
  %189 = load i32, i32* %8, align 4
  %190 = urem i32 %188, %189
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

; <label>:192:                                    ; preds = %187
  store i1 true, i1* %4, align 1
  br label %194

; <label>:193:                                    ; preds = %187, %originalBBpart224
  store i1 false, i1* %4, align 1
  br label %194

; <label>:194:                                    ; preds = %193, %192, %originalBBpart220, %121, %originalBBpart28, %originalBBpart2, %28
  %195 = load i32, i32* @x.63
  %196 = load i32, i32* @y.64
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %194, %originalBB26alteredBB
  %203 = load i1, i1* %4, align 1
  %204 = load i32, i32* @x.63
  %205 = load i32, i32* @y.64
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i1 %203

originalBBalteredBB:                              ; preds = %originalBB, %38
  store i1 true, i1* %4, align 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %212 = load i32, i32* %7, align 4
  %213 = icmp eq i32 %212, 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  store i1 true, i1* %4, align 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %95
  %214 = load i32, i32* %7, align 4
  %215 = icmp eq i32 %214, 3
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %122
  %216 = load i32, i32* %7, align 4
  %217 = icmp eq i32 %216, 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %151
  store i1 true, i1* %4, align 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %168
  %218 = load i32, i32* %7, align 4
  %219 = icmp eq i32 %218, 5
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %194
  %220 = load i1, i1* %4, align 1
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK6FE_DGQILi3EE18memory_consumptionEv(%class.FE_DGQ*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.FE_DGQ*, align 8
  store %class.FE_DGQ* %0, %class.FE_DGQ** %2, align 8
  %3 = load %class.FE_DGQ*, %class.FE_DGQ** %2, align 8
  ret i32 0
}

; Function Attrs: noinline uwtable
define weak_odr %class.FiniteElement* @_ZNK6FE_DGQILi3EE5cloneEv(%class.FE_DGQ*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_DGQ*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_DGQ* %0, %class.FE_DGQ** %2, align 8
  %5 = load %class.FE_DGQ*, %class.FE_DGQ** %2, align 8
  %6 = call i8* @_Znwm(i64 1240) #15
  %7 = bitcast i8* %6 to %class.FE_DGQ*
  %8 = bitcast %class.FE_DGQ* %5 to %class.FE_Poly*
  %9 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  invoke void @_ZN6FE_DGQILi3EEC1Ej(%class.FE_DGQ* %7, i32 %10)
          to label %11 unwind label %13

; <label>:11:                                     ; preds = %1
  %12 = bitcast %class.FE_DGQ* %7 to %class.FiniteElement*
  ret %class.FiniteElement* %12

; <label>:13:                                     ; preds = %1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %3, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %4, align 4
  call void @_ZdlPv(i8* %6) #16
  br label %17

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* @x.67
  %19 = load i32, i32* @y.68
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i8*, i8** %3, align 8
  %27 = load i32, i32* %4, align 4
  %28 = insertvalue { i8*, i32 } undef, i8* %26, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  %30 = load i32, i32* @x.67
  %31 = load i32, i32* @y.68
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %29

originalBBalteredBB:                              ; preds = %originalBB, %17
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %4, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  br label %originalBB
}

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2Ev(%"class.std::allocator.30"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.69
  %3 = load i32, i32* @y.70
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %10, align 8
  %11 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %10, align 8
  %12 = bitcast %"class.std::allocator.30"* %11 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.31"* %12) #13
  %13 = load i32, i32* @x.69
  %14 = load i32, i32* @y.70
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %21, align 8
  %22 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %21, align 8
  %23 = bitcast %"class.std::allocator.30"* %22 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.31"* %23) #13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.28"*, i64, i32* dereferenceable(4), %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.28"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.30"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %8, align 8
  %11 = load %"class.std::vector.28"*, %"class.std::vector.28"** %5, align 8
  %12 = bitcast %"class.std::vector.28"* %11 to %"struct.std::_Vector_base.29"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %8, align 8
  %15 = call i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64 %13, %"class.std::allocator.30"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %8, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.29"* %12, i64 %15, %"class.std::allocator.30"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.28"* %11, i64 %17, i32* dereferenceable(4) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* @x.71
  %22 = load i32, i32* @y.72
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %9, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %10, align 4
  %32 = bitcast %"class.std::vector.28"* %11 to %"struct.std::_Vector_base.29"*
  %33 = load i32, i32* @x.71
  %34 = load i32, i32* @y.72
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"* %32)
          to label %41 unwind label %47

; <label>:41:                                     ; preds = %originalBBpart2
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %9, align 8
  %44 = load i32, i32* %10, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %20
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %9, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %10, align 4
  %53 = bitcast %"class.std::vector.28"* %11 to %"struct.std::_Vector_base.29"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjED2Ev(%"class.std::allocator.30"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"*, i64) #2 comdat align 2 {
  %3 = load i32, i32* @x.75
  %4 = load i32, i32* @y.76
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.28"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.28"*, %"class.std::vector.28"** %11, align 8
  %14 = bitcast %"class.std::vector.28"* %13 to %"struct.std::_Vector_base.29"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = load i32, i32* @x.75
  %22 = load i32, i32* @y.76
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.28"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.28"*, %"class.std::vector.28"** %29, align 8
  %32 = bitcast %"class.std::vector.28"* %31 to %"struct.std::_Vector_base.29"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.28"*, i64, i32) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.28"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %"class.std::vector.28"*, %"class.std::vector.28"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %8)
  %11 = icmp ugt i64 %9, %10
  br i1 %11, label %12, label %20

; <label>:12:                                     ; preds = %3
  %13 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.28"* %8)
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  store i32* %13, i32** %14, align 8
  %15 = load i64, i64* %5, align 8
  %16 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %8)
  %17 = sub i64 %15, %16
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  call void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector.28"* %8, i32* %19, i64 %17, i32* dereferenceable(4) %6)
  br label %49

; <label>:20:                                     ; preds = %3
  %21 = load i32, i32* @x.77
  %22 = load i32, i32* @y.78
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i64, i64* %5, align 8
  %30 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %8)
  %31 = icmp ult i64 %29, %30
  %32 = load i32, i32* @x.77
  %33 = load i32, i32* @y.78
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %48

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = bitcast %"class.std::vector.28"* %8 to %"struct.std::_Vector_base.29"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = load i64, i64* %5, align 8
  %47 = getelementptr inbounds i32, i32* %45, i64 %46
  call void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.28"* %8, i32* %47)
  br label %48

; <label>:48:                                     ; preds = %40, %originalBBpart2
  br label %49

; <label>:49:                                     ; preds = %48, %12
  %50 = load i32, i32* @x.77
  %51 = load i32, i32* @y.78
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* @x.77
  %59 = load i32, i32* @y.78
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %20
  %66 = load i64, i64* %5, align 8
  %67 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %8)
  %68 = icmp ult i64 %66, %67
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6FE_DGQILi3EED2Ev(%class.FE_DGQ*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.FE_DGQ*, align 8
  store %class.FE_DGQ* %0, %class.FE_DGQ** %2, align 8
  %3 = load %class.FE_DGQ*, %class.FE_DGQ** %2, align 8
  %4 = bitcast %class.FE_DGQ* %3 to %class.FE_Poly*
  call void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6FE_DGQILi3EED0Ev(%class.FE_DGQ*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_DGQ*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_DGQ* %0, %class.FE_DGQ** %2, align 8
  %5 = load %class.FE_DGQ*, %class.FE_DGQ** %2, align 8
  invoke void @_ZN6FE_DGQILi3EED2Ev(%class.FE_DGQ* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.FE_DGQ* %5 to i8*
  call void @_ZdlPv(i8* %7) #16
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.81
  %10 = load i32, i32* @y.82
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %class.FE_DGQ* %5 to i8*
  call void @_ZdlPv(i8* %20) #16
  %21 = load i32, i32* @x.81
  %22 = load i32, i32* @y.82
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %class.FE_DGQ* %5 to i8*
  call void @_ZdlPv(i8* %37) #16
  br label %originalBB
}

declare double @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11shape_valueEjRK5PointILi3EE(%class.FE_Poly*, i32, %class.Point* dereferenceable(24)) unnamed_addr #1

declare double @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE21shape_value_componentEjRK5PointILi3EEj(%class.FE_Poly*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #1

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE10shape_gradEjRK5PointILi3EE(%class.Tensor* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20shape_grad_componentEjRK5PointILi3EEj(%class.Tensor* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #1

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15shape_grad_gradEjRK5PointILi3EE(%class.Tensor.49* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE25shape_grad_grad_componentEjRK5PointILi3EEj(%class.Tensor.49* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #1

declare void @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj(%class.Point* sret, %class.FiniteElementBase*, i32) unnamed_addr #1

declare void @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj(%class.Point.21* sret, %class.FiniteElementBase*, i32) unnamed_addr #1

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15n_base_elementsEv(%class.FE_Poly*) unnamed_addr #1

declare dereferenceable(1160) %class.FiniteElement* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE12base_elementEj(%class.FE_Poly*, i32) unnamed_addr #1

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20element_multiplicityEj(%class.FE_Poly*, i32) unnamed_addr #1

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_onceE11UpdateFlags(%class.FE_Poly*, i32) unnamed_addr #1

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_eachE11UpdateFlags(%class.FE_Poly*, i32) unnamed_addr #1

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE(%class.FE_Poly*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature* nonnull) unnamed_addr #1

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE(%class.FiniteElement*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature.50* nonnull) unnamed_addr #1

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE(%class.FiniteElement*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature.50* nonnull) unnamed_addr #1

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE(%class.FE_Poly*, %class.Mapping* dereferenceable(24), %class.TriaIterator* nonnull, %class.Quadrature* nonnull, %"class.Mapping<3>::InternalDataBase"* nonnull, %"class.Mapping<3>::InternalDataBase"* nonnull, %class.FEValuesData* nonnull) unnamed_addr #1

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE(%class.FE_Poly*, %class.Mapping* dereferenceable(24), %class.TriaIterator* nonnull, i32, %class.Quadrature.50* nonnull, %"class.Mapping<3>::InternalDataBase"* nonnull, %"class.Mapping<3>::InternalDataBase"* nonnull, %class.FEValuesData* nonnull) unnamed_addr #1

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE(%class.FE_Poly*, %class.Mapping* dereferenceable(24), %class.TriaIterator* nonnull, i32, i32, %class.Quadrature.50* nonnull, %"class.Mapping<3>::InternalDataBase"* nonnull, %"class.Mapping<3>::InternalDataBase"* nonnull, %class.FEValuesData* nonnull) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) #2 comdat align 2 {
  %3 = load i32, i32* @x.83
  %4 = load i32, i32* @y.84
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store %class.Tensor* %1, %class.Tensor** %12, align 8
  %14 = load %class.Tensor*, %class.Tensor** %11, align 8
  store i32 0, i32* %13, align 4
  %15 = load i32, i32* @x.83
  %16 = load i32, i32* @y.84
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %53, %originalBBpart2
  %24 = load i32, i32* @x.83
  %25 = load i32, i32* @y.84
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load i32, i32* %13, align 4
  %33 = icmp ult i32 %32, 3
  %34 = load i32, i32* @x.83
  %35 = load i32, i32* @y.84
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %42, label %56

; <label>:42:                                     ; preds = %originalBBpart24
  %43 = load %class.Tensor*, %class.Tensor** %12, align 8
  %44 = getelementptr inbounds %class.Tensor, %class.Tensor* %43, i32 0, i32 0
  %45 = load i32, i32* %13, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [3 x double], [3 x double]* %44, i64 0, i64 %46
  %48 = load double, double* %47, align 8
  %49 = getelementptr inbounds %class.Tensor, %class.Tensor* %14, i32 0, i32 0
  %50 = load i32, i32* %13, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [3 x double], [3 x double]* %49, i64 0, i64 %51
  store double %48, double* %52, align 8
  br label %53

; <label>:53:                                     ; preds = %42
  %54 = load i32, i32* %13, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %13, align 4
  br label %23

; <label>:56:                                     ; preds = %originalBBpart24
  %57 = load i32, i32* @x.83
  %58 = load i32, i32* @y.84
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load i32, i32* @x.83
  %66 = load i32, i32* @y.84
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %class.Tensor* %14

originalBBalteredBB:                              ; preds = %originalBB, %2
  %73 = alloca %class.Tensor*, align 8
  %74 = alloca %class.Tensor*, align 8
  %75 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %73, align 8
  store %class.Tensor* %1, %class.Tensor** %74, align 8
  %76 = load %class.Tensor*, %class.Tensor** %73, align 8
  store i32 0, i32* %75, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %77 = load i32, i32* %13, align 4
  %78 = icmp ult i32 %77, 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  br label %originalBB6
}

declare void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.85
  %3 = load i32, i32* @y.86
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.FE_Poly*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.FE_Poly* %0, %class.FE_Poly** %10, align 8
  %13 = load %class.FE_Poly*, %class.FE_Poly** %10, align 8
  %14 = bitcast %class.FE_Poly* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV7FE_PolyI24TensorProductPolynomialsILi3EELi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %13, i32 0, i32 2
  %16 = load i32, i32* @x.85
  %17 = load i32, i32* @y.86
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN24TensorProductPolynomialsILi3EED2Ev(%class.TensorProductPolynomials* %15)
          to label %24 unwind label %26

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = bitcast %class.FE_Poly* %13 to %class.FiniteElement*
  call void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %25)
  ret void

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.85
  %28 = load i32, i32* @y.86
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %11, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %12, align 4
  %38 = bitcast %class.FE_Poly* %13 to %class.FiniteElement*
  %39 = load i32, i32* @x.85
  %40 = load i32, i32* @y.86
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %38)
          to label %47 unwind label %85

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = load i32, i32* @x.85
  %49 = load i32, i32* @y.86
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i32, i32* @x.85
  %57 = load i32, i32* @y.86
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %64

; <label>:64:                                     ; preds = %originalBBpart28
  %65 = load i32, i32* @x.85
  %66 = load i32, i32* @y.86
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %64, %originalBB10alteredBB
  %73 = load i8*, i8** %11, align 8
  %74 = load i32, i32* %12, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  %77 = load i32, i32* @x.85
  %78 = load i32, i32* @y.86
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %76

; <label>:85:                                     ; preds = %originalBBpart24
  %86 = load i32, i32* @x.85
  %87 = load i32, i32* @y.86
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #11
  %96 = load i32, i32* @x.85
  %97 = load i32, i32* @y.86
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %104 = alloca %class.FE_Poly*, align 8
  %105 = alloca i8*
  %106 = alloca i32
  store %class.FE_Poly* %0, %class.FE_Poly** %104, align 8
  %107 = load %class.FE_Poly*, %class.FE_Poly** %104, align 8
  %108 = bitcast %class.FE_Poly* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV7FE_PolyI24TensorProductPolynomialsILi3EELi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %108, align 8
  %109 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %107, i32 0, i32 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %11, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %12, align 4
  %113 = bitcast %class.FE_Poly* %13 to %class.FiniteElement*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %64
  %114 = load i8*, i8** %11, align 8
  %115 = load i32, i32* %12, align 4
  %116 = insertvalue { i8*, i32 } undef, i8* %114, 0
  %117 = insertvalue { i8*, i32 } %116, i32 %115, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %118 = landingpad { i8*, i32 }
          catch i8* null
  %119 = extractvalue { i8*, i32 } %118, 0
  call void @__clang_call_terminate(i8* %119) #11
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED0Ev(%class.FE_Poly*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.87
  %3 = load i32, i32* @y.88
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.FE_Poly*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.FE_Poly* %0, %class.FE_Poly** %10, align 8
  %13 = load %class.FE_Poly*, %class.FE_Poly** %10, align 8
  %14 = load i32, i32* @x.87
  %15 = load i32, i32* @y.88
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly* %13)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = load i32, i32* @x.87
  %24 = load i32, i32* @y.88
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = bitcast %class.FE_Poly* %13 to i8*
  call void @_ZdlPv(i8* %31) #16
  %32 = load i32, i32* @x.87
  %33 = load i32, i32* @y.88
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = load i32, i32* @x.87
  %42 = load i32, i32* @y.88
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %40, %originalBB6alteredBB
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %11, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %12, align 4
  %52 = bitcast %class.FE_Poly* %13 to i8*
  call void @_ZdlPv(i8* %52) #16
  %53 = load i32, i32* @x.87
  %54 = load i32, i32* @y.88
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %61

; <label>:61:                                     ; preds = %originalBBpart28
  %62 = load i32, i32* @x.87
  %63 = load i32, i32* @y.88
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load i8*, i8** %11, align 8
  %71 = load i32, i32* %12, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  %74 = load i32, i32* @x.87
  %75 = load i32, i32* @y.88
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %73

originalBBalteredBB:                              ; preds = %originalBB, %1
  %82 = alloca %class.FE_Poly*, align 8
  %83 = alloca i8*
  %84 = alloca i32
  store %class.FE_Poly* %0, %class.FE_Poly** %82, align 8
  %85 = load %class.FE_Poly*, %class.FE_Poly** %82, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %86 = bitcast %class.FE_Poly* %13 to i8*
  call void @_ZdlPv(i8* %86) #16
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %40
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %11, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %12, align 4
  %90 = bitcast %class.FE_Poly* %13 to i8*
  call void @_ZdlPv(i8* %90) #16
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %91 = load i8*, i8** %11, align 8
  %92 = load i32, i32* %12, align 4
  %93 = insertvalue { i8*, i32 } undef, i8* %91, 0
  %94 = insertvalue { i8*, i32 } %93, i32 %92, 1
  br label %originalBB10
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK17FiniteElementBaseILi3EE24get_interpolation_matrixERKS0_R10FullMatrixIdE(%class.FiniteElementBase*, %class.FiniteElementBase* dereferenceable(1160), %class.FullMatrix* dereferenceable(48)) unnamed_addr #1

declare i32 @_ZNK13FiniteElementILi3EE18memory_consumptionEv(%class.FiniteElement*) unnamed_addr #1

declare void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD0Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.89
  %3 = load i32, i32* @y.90
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, align 8
  store %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %0, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %10, align 8
  %11 = load %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %10, align 8
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %11) #13
  %12 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %11 to i8*
  call void @_ZdlPv(i8* %12) #16
  %13 = load i32, i32* @x.89
  %14 = load i32, i32* @y.90
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, align 8
  store %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %0, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %21, align 8
  %22 = load %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %21, align 8
  call void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedD2Ev(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %22) #13
  %23 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %22 to i8*
  call void @_ZdlPv(i8* %23) #16
  br label %originalBB
}

; Function Attrs: nounwind
declare i8* @_ZNK13ExceptionBase4whatEv(%class.ExceptionBase*) unnamed_addr #9

declare void @_ZNK13ExceptionBase9PrintInfoERSo(%class.ExceptionBase*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase*) unnamed_addr #9

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi3EEC2Eddd(%class.Point*, double, double, double) unnamed_addr #0 comdat align 2 {
  %5 = load i32, i32* @x.91
  %6 = load i32, i32* @y.92
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Point*, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  store %class.Point* %0, %class.Point** %13, align 8
  store double %1, double* %14, align 8
  store double %2, double* %15, align 8
  store double %3, double* %16, align 8
  %17 = load %class.Point*, %class.Point** %13, align 8
  %18 = bitcast %class.Point* %17 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %18, i1 zeroext true)
  %19 = load double, double* %14, align 8
  %20 = bitcast %class.Point* %17 to %class.Tensor*
  %21 = getelementptr inbounds %class.Tensor, %class.Tensor* %20, i32 0, i32 0
  %22 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 0
  store double %19, double* %22, align 8
  %23 = load double, double* %15, align 8
  %24 = bitcast %class.Point* %17 to %class.Tensor*
  %25 = getelementptr inbounds %class.Tensor, %class.Tensor* %24, i32 0, i32 0
  %26 = getelementptr inbounds [3 x double], [3 x double]* %25, i64 0, i64 1
  store double %23, double* %26, align 8
  %27 = load double, double* %16, align 8
  %28 = bitcast %class.Point* %17 to %class.Tensor*
  %29 = getelementptr inbounds %class.Tensor, %class.Tensor* %28, i32 0, i32 0
  %30 = getelementptr inbounds [3 x double], [3 x double]* %29, i64 0, i64 2
  store double %27, double* %30, align 8
  %31 = load i32, i32* @x.91
  %32 = load i32, i32* @y.92
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %39 = alloca %class.Point*, align 8
  %40 = alloca double, align 8
  %41 = alloca double, align 8
  %42 = alloca double, align 8
  store %class.Point* %0, %class.Point** %39, align 8
  store double %1, double* %40, align 8
  store double %2, double* %41, align 8
  store double %3, double* %42, align 8
  %43 = load %class.Point*, %class.Point** %39, align 8
  %44 = bitcast %class.Point* %43 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %44, i1 zeroext true)
  %45 = load double, double* %40, align 8
  %46 = bitcast %class.Point* %43 to %class.Tensor*
  %47 = getelementptr inbounds %class.Tensor, %class.Tensor* %46, i32 0, i32 0
  %48 = getelementptr inbounds [3 x double], [3 x double]* %47, i64 0, i64 0
  store double %45, double* %48, align 8
  %49 = load double, double* %41, align 8
  %50 = bitcast %class.Point* %43 to %class.Tensor*
  %51 = getelementptr inbounds %class.Tensor, %class.Tensor* %50, i32 0, i32 0
  %52 = getelementptr inbounds [3 x double], [3 x double]* %51, i64 0, i64 1
  store double %49, double* %52, align 8
  %53 = load double, double* %42, align 8
  %54 = bitcast %class.Point* %43 to %class.Tensor*
  %55 = getelementptr inbounds %class.Tensor, %class.Tensor* %54, i32 0, i32 0
  %56 = getelementptr inbounds [3 x double], [3 x double]* %55, i64 0, i64 2
  store double %53, double* %56, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_ZN12_GLOBAL__N_112int_cuberootEj(i32) #2 {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %13 = load i32, i32* @x.93
  %14 = load i32, i32* @y.94
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %originalBBpart214, %originalBBpart2
  %22 = load i32, i32* %12, align 4
  %23 = load i32, i32* %11, align 4
  %24 = icmp ule i32 %22, %23
  br i1 %24, label %25, label %55

; <label>:25:                                     ; preds = %21
  %26 = load i32, i32* %12, align 4
  %27 = load i32, i32* %12, align 4
  %28 = mul i32 %26, %27
  %29 = load i32, i32* %12, align 4
  %30 = mul i32 %28, %29
  %31 = load i32, i32* %11, align 4
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %35

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* %12, align 4
  store i32 %34, i32* %10, align 4
  br label %56

; <label>:35:                                     ; preds = %25
  br label %36

; <label>:36:                                     ; preds = %35
  %37 = load i32, i32* @x.93
  %38 = load i32, i32* @y.94
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  %47 = load i32, i32* @x.93
  %48 = load i32, i32* @y.94
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart214, label %originalBB1alteredBB

originalBBpart214:                                ; preds = %originalBB1
  br label %21

; <label>:55:                                     ; preds = %21
  store i32 -1, i32* %10, align 4
  br label %56

; <label>:56:                                     ; preds = %55, %33
  %57 = load i32, i32* %10, align 4
  ret i32 %57

originalBBalteredBB:                              ; preds = %originalBB, %1
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  store i32 %0, i32* %59, align 4
  store i32 0, i32* %60, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %61 = load i32, i32* %12, align 4
  %_ = shl i32 %61, 1
  %_2 = sub i32 0, %61
  %gen = add i32 %_2, 1
  %_3 = sub i32 0, %61
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 0, %61
  %gen6 = add i32 %_5, 1
  %_7 = sub i32 %61, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 %61, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 %61, 1
  %gen12 = mul i32 %_11, 1
  %62 = add i32 %61, 1
  store i32 %62, i32* %12, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor*, i1 zeroext) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %class.Tensor*, %class.Tensor** %3, align 8
  %8 = load i8, i8* %4, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %55

; <label>:10:                                     ; preds = %2
  store i32 0, i32* %5, align 4
  br label %11

; <label>:11:                                     ; preds = %51, %10
  %12 = load i32, i32* @x.95
  %13 = load i32, i32* @y.96
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %5, align 4
  %21 = icmp ne i32 %20, 3
  %22 = load i32, i32* @x.95
  %23 = load i32, i32* @y.96
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %54

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.95
  %32 = load i32, i32* @y.96
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = getelementptr inbounds %class.Tensor, %class.Tensor* %7, i32 0, i32 0
  %40 = load i32, i32* %5, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [3 x double], [3 x double]* %39, i64 0, i64 %41
  store double 0.000000e+00, double* %42, align 8
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %51

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = load i32, i32* %5, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %5, align 4
  br label %11

; <label>:54:                                     ; preds = %originalBBpart2
  br label %55

; <label>:55:                                     ; preds = %54, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %56 = load i32, i32* %5, align 4
  %57 = icmp ne i32 %56, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %58 = getelementptr inbounds %class.Tensor, %class.Tensor* %7, i32 0, i32 0
  %59 = load i32, i32* %5, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [3 x double], [3 x double]* %58, i64 0, i64 %60
  store double 0.000000e+00, double* %61, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdED2Ev(%class.Table*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  call void @_ZN9TableBaseILi2EdED2Ev(%class.TableBase* %4)
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #8

declare void @_ZN11SubscriptorD2Ev(%class.Subscriptor*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdED2Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %3 = load %class.TableBase*, %class.TableBase** %2, align 8
  %4 = bitcast %class.TableBase* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2EdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.TableBase, %class.TableBase* %3, i32 0, i32 1
  %6 = load double*, double** %5, align 8
  %7 = icmp ne double* %6, null
  br i1 %7, label %8, label %31

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.99
  %10 = load i32, i32* @y.100
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %class.TableBase, %class.TableBase* %3, i32 0, i32 1
  %18 = load double*, double** %17, align 8
  %19 = icmp eq double* %18, null
  %20 = load i32, i32* @x.99
  %21 = load i32, i32* @y.100
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %30, label %28

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = bitcast double* %18 to i8*
  call void @_ZdaPv(i8* %29) #16
  br label %30

; <label>:30:                                     ; preds = %28, %originalBBpart2
  br label %31

; <label>:31:                                     ; preds = %30, %1
  %32 = load i32, i32* @x.99
  %33 = load i32, i32* @y.100
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = bitcast %class.TableBase* %3 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %40)
  %41 = load i32, i32* @x.99
  %42 = load i32, i32* @y.100
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %49 = getelementptr inbounds %class.TableBase, %class.TableBase* %3, i32 0, i32 1
  %50 = load double*, double** %49, align 8
  %51 = icmp eq double* %50, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %52 = bitcast %class.TableBase* %3 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %52)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdED0Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  invoke void @_ZN9TableBaseILi2EdED2Ev(%class.TableBase* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.TableBase* %5 to i8*
  call void @_ZdlPv(i8* %7) #16
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %class.TableBase* %5 to i8*
  call void @_ZdlPv(i8* %12) #16
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.101
  %15 = load i32, i32* @y.102
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i8*, i8** %3, align 8
  %23 = load i32, i32* %4, align 4
  %24 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  %26 = load i32, i32* @x.101
  %27 = load i32, i32* @y.102
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %25

originalBBalteredBB:                              ; preds = %originalBB, %13
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.44"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.44"*, align 8
  store %"class.__gnu_cxx::new_allocator.44"* %0, %"class.__gnu_cxx::new_allocator.44"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.44"*, %"class.__gnu_cxx::new_allocator.44"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.44"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.44"*, align 8
  store %"class.__gnu_cxx::new_allocator.44"* %0, %"class.__gnu_cxx::new_allocator.44"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.44"*, %"class.__gnu_cxx::new_allocator.44"** %10, align 8
  %12 = load i32, i32* @x.105
  %13 = load i32, i32* @y.106
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.44"*, align 8
  store %"class.__gnu_cxx::new_allocator.44"* %0, %"class.__gnu_cxx::new_allocator.44"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.44"*, %"class.__gnu_cxx::new_allocator.44"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEES2_EvT_S4_RSaIT0_E(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.std::allocator.35"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.Polynomials::Polynomial"*, align 8
  %5 = alloca %"class.Polynomials::Polynomial"*, align 8
  %6 = alloca %"class.std::allocator.35"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %4, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %5, align 8
  store %"class.std::allocator.35"* %2, %"class.std::allocator.35"** %6, align 8
  %7 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  %8 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  call void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_(%"class.Polynomials::Polynomial"* %7, %"class.Polynomials::Polynomial"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.35"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.34"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.34"*, align 8
  store %"struct.std::_Vector_base.34"* %0, %"struct.std::_Vector_base.34"** %2, align 8
  %3 = load %"struct.std::_Vector_base.34"*, %"struct.std::_Vector_base.34"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %4 to %"class.std::allocator.35"*
  ret %"class.std::allocator.35"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.34"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.34"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.34"* %0, %"struct.std::_Vector_base.34"** %2, align 8
  %5 = load %"struct.std::_Vector_base.34"*, %"struct.std::_Vector_base.34"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %16, align 8
  %18 = ptrtoint %"class.Polynomials::Polynomial"* %13 to i64
  %19 = ptrtoint %"class.Polynomials::Polynomial"* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 48
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.34"* %5, %"class.Polynomials::Polynomial"* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %23) #13
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.115
  %26 = load i32, i32* @y.116
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %36) #13
  %37 = load i32, i32* @x.115
  %38 = load i32, i32* @y.116
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.115
  %47 = load i32, i32* @y.116
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i8*, i8** %3, align 8
  %55 = load i32, i32* %4, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  %58 = load i32, i32* @x.115
  %59 = load i32, i32* @y.116
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %57

originalBBalteredBB:                              ; preds = %originalBB, %24
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %3, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %4, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %69) #13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %70 = load i8*, i8** %3, align 8
  %71 = load i32, i32* %4, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat {
  %3 = alloca %"class.Polynomials::Polynomial"*, align 8
  %4 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %3, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %4, align 8
  %5 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %6 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials10PolynomialIdEEEEvT_S6_(%"class.Polynomials::Polynomial"* %5, %"class.Polynomials::Polynomial"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials10PolynomialIdEEEEvT_S6_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat align 2 {
  %3 = load i32, i32* @x.119
  %4 = load i32, i32* @y.120
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.Polynomials::Polynomial"*, align 8
  %12 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %11, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %12, align 8
  %13 = load i32, i32* @x.119
  %14 = load i32, i32* @y.120
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %44, %originalBBpart2
  %22 = load i32, i32* @x.119
  %23 = load i32, i32* @y.120
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %11, align 8
  %31 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  %32 = icmp ne %"class.Polynomials::Polynomial"* %30, %31
  %33 = load i32, i32* @x.119
  %34 = load i32, i32* @y.120
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %32, label %41, label %47

; <label>:41:                                     ; preds = %originalBBpart24
  %42 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %11, align 8
  %43 = call %"class.Polynomials::Polynomial"* @_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_(%"class.Polynomials::Polynomial"* dereferenceable(48) %42)
  call void @_ZSt8_DestroyIN11Polynomials10PolynomialIdEEEvPT_(%"class.Polynomials::Polynomial"* %43)
  br label %44

; <label>:44:                                     ; preds = %41
  %45 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %11, align 8
  %46 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %45, i32 1
  store %"class.Polynomials::Polynomial"* %46, %"class.Polynomials::Polynomial"** %11, align 8
  br label %21

; <label>:47:                                     ; preds = %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"class.Polynomials::Polynomial"*, align 8
  %49 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %48, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %49, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %50 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %11, align 8
  %51 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  %52 = icmp ne %"class.Polynomials::Polynomial"* %50, %51
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN11Polynomials10PolynomialIdEEEvPT_(%"class.Polynomials::Polynomial"*) #0 comdat {
  %2 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %2, align 8
  %3 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %2, align 8
  %4 = bitcast %"class.Polynomials::Polynomial"* %3 to void (%"class.Polynomials::Polynomial"*)***
  %5 = load void (%"class.Polynomials::Polynomial"*)**, void (%"class.Polynomials::Polynomial"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.Polynomials::Polynomial"*)*, void (%"class.Polynomials::Polynomial"*)** %5, i64 0
  %7 = load void (%"class.Polynomials::Polynomial"*)*, void (%"class.Polynomials::Polynomial"*)** %6, align 8
  call void %7(%"class.Polynomials::Polynomial"* %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_(%"class.Polynomials::Polynomial"* dereferenceable(48)) #2 comdat {
  %2 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %2, align 8
  %3 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %2, align 8
  ret %"class.Polynomials::Polynomial"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.34"*, %"class.Polynomials::Polynomial"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.34"*, align 8
  %5 = alloca %"class.Polynomials::Polynomial"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.34"* %0, %"struct.std::_Vector_base.34"** %4, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.34"*, %"struct.std::_Vector_base.34"** %4, align 8
  %8 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %9 = icmp ne %"class.Polynomials::Polynomial"* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.125
  %12 = load i32, i32* @y.126
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %19 to %"class.std::allocator.35"*
  %21 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.35"* dereferenceable(1) %20, %"class.Polynomials::Polynomial"* %21, i64 %22)
  %23 = load i32, i32* @x.125
  %24 = load i32, i32* @y.126
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %32 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %7, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %32 to %"class.std::allocator.35"*
  %34 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %35 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.35"* dereferenceable(1) %33, %"class.Polynomials::Polynomial"* %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %3 to %"class.std::allocator.35"*
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator.35"* %4) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.35"* dereferenceable(1), %"class.Polynomials::Polynomial"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.35"*, align 8
  %5 = alloca %"class.Polynomials::Polynomial"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %4, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %4, align 8
  %8 = bitcast %"class.std::allocator.35"* %7 to %"class.__gnu_cxx::new_allocator.36"*
  %9 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.36"* %8, %"class.Polynomials::Polynomial"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.36"*, %"class.Polynomials::Polynomial"*, i64) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  %5 = alloca %"class.Polynomials::Polynomial"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %4, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %4, align 8
  %8 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %9 = bitcast %"class.Polynomials::Polynomial"* %8 to i8*
  call void @_ZdlPv(i8* %9) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEED2Ev(%"class.__gnu_cxx::new_allocator.36"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE5beginEv(%"class.std::vector.33"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.135
  %3 = load i32, i32* @y.136
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.std::vector.33"*, align 8
  %12 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %11, align 8
  %13 = load %"class.std::vector.33"*, %"class.std::vector.33"** %11, align 8
  %14 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %17, align 8
  store %"class.Polynomials::Polynomial"* %18, %"class.Polynomials::Polynomial"** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %10, %"class.Polynomials::Polynomial"** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %20 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %19, align 8
  %21 = load i32, i32* @x.135
  %22 = load i32, i32* @y.136
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::Polynomial"* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.std::vector.33"*, align 8
  %31 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %30, align 8
  %32 = load %"class.std::vector.33"*, %"class.std::vector.33"** %30, align 8
  %33 = bitcast %"class.std::vector.33"* %32 to %"struct.std::_Vector_base.34"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %34 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %35, i32 0, i32 0
  %37 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %36, align 8
  store %"class.Polynomials::Polynomial"* %37, %"class.Polynomials::Polynomial"** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %29, %"class.Polynomials::Polynomial"** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %39 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE3endEv(%"class.std::vector.33"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.137
  %3 = load i32, i32* @y.138
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.std::vector.33"*, align 8
  %12 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %11, align 8
  %13 = load %"class.std::vector.33"*, %"class.std::vector.33"** %11, align 8
  %14 = bitcast %"class.std::vector.33"* %13 to %"struct.std::_Vector_base.34"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %16, i32 0, i32 1
  %18 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %17, align 8
  store %"class.Polynomials::Polynomial"* %18, %"class.Polynomials::Polynomial"** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %10, %"class.Polynomials::Polynomial"** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %20 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %19, align 8
  %21 = load i32, i32* @x.137
  %22 = load i32, i32* @y.138
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::Polynomial"* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.std::vector.33"*, align 8
  %31 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %30, align 8
  %32 = load %"class.std::vector.33"*, %"class.std::vector.33"** %30, align 8
  %33 = bitcast %"class.std::vector.33"* %32 to %"struct.std::_Vector_base.34"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %34 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %35, i32 0, i32 1
  %37 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %36, align 8
  store %"class.Polynomials::Polynomial"* %37, %"class.Polynomials::Polynomial"** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %29, %"class.Polynomials::Polynomial"** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %39 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials10PolynomialIdEEEC2Ev(%"class.std::allocator.35"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.139
  %3 = load i32, i32* @y.140
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.35"*, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %10, align 8
  %11 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %10, align 8
  %12 = bitcast %"class.std::allocator.35"* %11 to %"class.__gnu_cxx::new_allocator.36"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2Ev(%"class.__gnu_cxx::new_allocator.36"* %12) #13
  %13 = load i32, i32* @x.139
  %14 = load i32, i32* @y.140
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.35"*, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %21, align 8
  %22 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %21, align 8
  %23 = bitcast %"class.std::allocator.35"* %22 to %"class.__gnu_cxx::new_allocator.36"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2Ev(%"class.__gnu_cxx::new_allocator.36"* %23) #13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEET_SB_RKS3_(%"class.std::vector.33"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.std::allocator.35"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.std::vector.33"*, align 8
  %8 = alloca %"class.std::allocator.35"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"struct.std::__false_type", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %15, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %7, align 8
  store %"class.std::allocator.35"* %3, %"class.std::allocator.35"** %8, align 8
  %16 = load %"class.std::vector.33"*, %"class.std::vector.33"** %7, align 8
  %17 = bitcast %"class.std::vector.33"* %16 to %"struct.std::_Vector_base.34"*
  %18 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %8, align 8
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base.34"* %17, %"class.std::allocator.35"* dereferenceable(1) %18)
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %24 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %26 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %25, align 8
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvT_SB_St12__false_type(%"class.std::vector.33"* %16, %"class.Polynomials::Polynomial"* %24, %"class.Polynomials::Polynomial"* %26)
          to label %27 unwind label %44

; <label>:27:                                     ; preds = %4
  %28 = load i32, i32* @x.141
  %29 = load i32, i32* @y.142
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %27, %originalBBalteredBB
  %36 = load i32, i32* @x.141
  %37 = load i32, i32* @y.142
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:44:                                     ; preds = %4
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %12, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %13, align 4
  %48 = bitcast %"class.std::vector.33"* %16 to %"struct.std::_Vector_base.34"*
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.34"* %48)
          to label %49 unwind label %55

; <label>:49:                                     ; preds = %44
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = load i8*, i8** %12, align 8
  %52 = load i32, i32* %13, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

; <label>:55:                                     ; preds = %44
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %27
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator.35"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.35"*, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %2, align 8
  %3 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %2, align 8
  %4 = bitcast %"class.std::allocator.35"* %3 to %"class.__gnu_cxx::new_allocator.36"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEED2Ev(%"class.__gnu_cxx::new_allocator.36"* %4) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZN24TensorProductPolynomialsILi3EE12x_to_the_dimEj(i32) #2 comdat align 2 {
  %2 = load i32, i32* @x.145
  %3 = load i32, i32* @y.146
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %13 = load i32, i32* @x.145
  %14 = load i32, i32* @y.146
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %28, %originalBBpart2
  %22 = load i32, i32* %12, align 4
  %23 = icmp ult i32 %22, 3
  br i1 %23, label %24, label %31

; <label>:24:                                     ; preds = %21
  %25 = load i32, i32* %10, align 4
  %26 = load i32, i32* %11, align 4
  %27 = mul i32 %26, %25
  store i32 %27, i32* %11, align 4
  br label %28

; <label>:28:                                     ; preds = %24
  %29 = load i32, i32* %12, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %12, align 4
  br label %21

; <label>:31:                                     ; preds = %21
  %32 = load i32, i32* %11, align 4
  ret i32 %32

originalBBalteredBB:                              ; preds = %originalBB, %1
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  store i32 %0, i32* %33, align 4
  store i32 1, i32* %34, align 4
  store i32 0, i32* %35, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector.33"*) #2 comdat align 2 {
  %2 = alloca %"class.std::vector.33"*, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %2, align 8
  %3 = load %"class.std::vector.33"*, %"class.std::vector.33"** %2, align 8
  %4 = bitcast %"class.std::vector.33"* %3 to %"struct.std::_Vector_base.34"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  %9 = bitcast %"class.std::vector.33"* %3 to %"struct.std::_Vector_base.34"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  %14 = ptrtoint %"class.Polynomials::Polynomial"* %8 to i64
  %15 = ptrtoint %"class.Polynomials::Polynomial"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 48
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"*, %"class.Polynomials::Polynomial"** dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.Polynomials::Polynomial"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.Polynomials::Polynomial"** %1, %"class.Polynomials::Polynomial"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.Polynomials::Polynomial"**, %"class.Polynomials::Polynomial"*** %4, align 8
  %8 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  store %"class.Polynomials::Polynomial"* %8, %"class.Polynomials::Polynomial"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2Ev(%"class.__gnu_cxx::new_allocator.36"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base.34"*, %"class.std::allocator.35"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.34"*, align 8
  %4 = alloca %"class.std::allocator.35"*, align 8
  store %"struct.std::_Vector_base.34"* %0, %"struct.std::_Vector_base.34"** %3, align 8
  store %"class.std::allocator.35"* %1, %"class.std::allocator.35"** %4, align 8
  %5 = load %"struct.std::_Vector_base.34"*, %"struct.std::_Vector_base.34"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %4, align 8
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %6, %"class.std::allocator.35"* dereferenceable(1) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvT_SB_St12__false_type(%"class.std::vector.33"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.std::__false_type", align 1
  %7 = alloca %"class.std::vector.33"*, align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"struct.std::forward_iterator_tag", align 1
  %11 = alloca %"struct.std::random_access_iterator_tag", align 1
  %12 = alloca %"struct.std::random_access_iterator_tag", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %14, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %7, align 8
  %15 = load %"class.std::vector.33"*, %"class.std::vector.33"** %7, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4)
  %20 = bitcast %"struct.std::random_access_iterator_tag"* %11 to %"struct.std::forward_iterator_tag"*
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %22 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %24 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %23, align 8
  call void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvT_SB_St20forward_iterator_tag(%"class.std::vector.33"* %15, %"class.Polynomials::Polynomial"* %22, %"class.Polynomials::Polynomial"* %24)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, %"class.std::allocator.35"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.157
  %4 = load i32, i32* @y.158
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, align 8
  %12 = alloca %"class.std::allocator.35"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %11, align 8
  store %"class.std::allocator.35"* %1, %"class.std::allocator.35"** %12, align 8
  %15 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %11, align 8
  %16 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %15 to %"class.std::allocator.35"*
  %17 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %12, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_(%"class.std::allocator.35"* %16, %"class.std::allocator.35"* dereferenceable(1) %17) #13
  %18 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %19 = load i32, i32* @x.157
  %20 = load i32, i32* @y.158
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %18)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %originalBBpart2
  ret void

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %13, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %14, align 4
  %32 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %15 to %"class.std::allocator.35"*
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator.35"* %32) #13
  br label %33

; <label>:33:                                     ; preds = %28
  %34 = load i8*, i8** %13, align 8
  %35 = load i32, i32* %14, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

originalBBalteredBB:                              ; preds = %originalBB, %2
  %38 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, align 8
  %39 = alloca %"class.std::allocator.35"*, align 8
  %40 = alloca i8*
  %41 = alloca i32
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %38, align 8
  store %"class.std::allocator.35"* %1, %"class.std::allocator.35"** %39, align 8
  %42 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %38, align 8
  %43 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %42 to %"class.std::allocator.35"*
  %44 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %39, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_(%"class.std::allocator.35"* %43, %"class.std::allocator.35"* dereferenceable(1) %44) #13
  %45 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.159
  %3 = load i32, i32* @y.160
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %11, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %11, i32 0, i32 1
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %11, i32 0, i32 2
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %14, align 8
  %15 = load i32, i32* @x.159
  %16 = load i32, i32* @y.160
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %24, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %24, i32 0, i32 2
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = load i32, i32* @x.161
  %4 = load i32, i32* @y.162
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  %12 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %11, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %1, %"class.__gnu_cxx::new_allocator.36"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %11, align 8
  %14 = load i32, i32* @x.161
  %15 = load i32, i32* @y.162
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  %23 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %22, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %1, %"class.__gnu_cxx::new_allocator.36"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvT_SB_St20forward_iterator_tag(%"class.std::vector.33"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.std::forward_iterator_tag", align 1
  %7 = alloca %"class.std::vector.33"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %14, align 8
  store %"class.std::vector.33"* %0, %"class.std::vector.33"** %7, align 8
  %15 = load %"class.std::vector.33"*, %"class.std::vector.33"** %7, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %21 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %20, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %23 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %22, align 8
  %24 = call i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_(%"class.Polynomials::Polynomial"* %21, %"class.Polynomials::Polynomial"* %23)
  store i64 %24, i64* %8, align 8
  %25 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %26 = load i64, i64* %8, align 8
  %27 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %28 = call dereferenceable(1) %"class.std::allocator.35"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.34"* %27)
  %29 = call i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %26, %"class.std::allocator.35"* dereferenceable(1) %28)
  %30 = call %"class.Polynomials::Polynomial"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.34"* %25, i64 %29)
  %31 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %32 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %33, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %30, %"class.Polynomials::Polynomial"** %34, align 8
  %35 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %36 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %37, i32 0, i32 0
  %39 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %38, align 8
  %40 = load i64, i64* %8, align 8
  %41 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %39, i64 %40
  %42 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %43 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %44, i32 0, i32 2
  store %"class.Polynomials::Polynomial"* %41, %"class.Polynomials::Polynomial"** %45, align 8
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %51 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %53, align 8
  %55 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %56 = call dereferenceable(1) %"class.std::allocator.35"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.34"* %55)
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %58 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %60 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %59, align 8
  %61 = call %"class.Polynomials::Polynomial"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"class.Polynomials::Polynomial"* %58, %"class.Polynomials::Polynomial"* %60, %"class.Polynomials::Polynomial"* %54, %"class.std::allocator.35"* dereferenceable(1) %56)
  %62 = bitcast %"class.std::vector.33"* %15 to %"struct.std::_Vector_base.34"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %63 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %64, i32 0, i32 1
  store %"class.Polynomials::Polynomial"* %61, %"class.Polynomials::Polynomial"** %65, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #2 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat {
  %3 = load i32, i32* @x.167
  %4 = load i32, i32* @y.168
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"struct.std::random_access_iterator_tag", align 1
  %16 = alloca %"struct.std::random_access_iterator_tag", align 1
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %24 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %26 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %25, align 8
  %27 = call i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag(%"class.Polynomials::Polynomial"* %24, %"class.Polynomials::Polynomial"* %26)
  %28 = load i32, i32* @x.167
  %29 = load i32, i32* @y.168
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %27

originalBBalteredBB:                              ; preds = %originalBB, %2
  %36 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"struct.std::random_access_iterator_tag", align 1
  %41 = alloca %"struct.std::random_access_iterator_tag", align 1
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %43, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %38 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %36)
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  %49 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %51 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %50, align 8
  %52 = call i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag(%"class.Polynomials::Polynomial"* %49, %"class.Polynomials::Polynomial"* %51)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.34"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.169
  %4 = load i32, i32* @y.170
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.34"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.34"* %0, %"struct.std::_Vector_base.34"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.34"*, %"struct.std::_Vector_base.34"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.169
  %17 = load i32, i32* @y.170
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.169
  %26 = load i32, i32* @y.170
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %13, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %33 to %"class.std::allocator.35"*
  %35 = load i64, i64* %12, align 8
  %36 = call %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m(%"class.std::allocator.35"* dereferenceable(1) %34, i64 %35)
  %37 = load i32, i32* @x.169
  %38 = load i32, i32* @y.170
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = phi %"class.Polynomials::Polynomial"* [ %36, %originalBBpart24 ], [ null, %45 ]
  %48 = load i32, i32* @x.169
  %49 = load i32, i32* @y.170
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %56 = load i32, i32* @x.169
  %57 = load i32, i32* @y.170
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %"class.Polynomials::Polynomial"* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %64 = alloca %"struct.std::_Vector_base.34"*, align 8
  %65 = alloca i64, align 8
  store %"struct.std::_Vector_base.34"* %0, %"struct.std::_Vector_base.34"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"struct.std::_Vector_base.34"*, %"struct.std::_Vector_base.34"** %64, align 8
  %67 = load i64, i64* %65, align 8
  %68 = icmp ne i64 %67, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %69 = getelementptr inbounds %"struct.std::_Vector_base.34", %"struct.std::_Vector_base.34"* %13, i32 0, i32 0
  %70 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %69 to %"class.std::allocator.35"*
  %71 = load i64, i64* %12, align 8
  %72 = call %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m(%"class.std::allocator.35"* dereferenceable(1) %70, i64 %71)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64, %"class.std::allocator.35"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.35"*, align 8
  %5 = alloca %"class.std::allocator.35", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.35"* %1, %"class.std::allocator.35"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %4, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_(%"class.std::allocator.35"* %5, %"class.std::allocator.35"* dereferenceable(1) %9) #13
  %10 = invoke i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.35"* dereferenceable(1) %5)
          to label %11 unwind label %30

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator.35"* %5) #13
  br i1 %12, label %13, label %34

; <label>:13:                                     ; preds = %11
  %14 = load i32, i32* @x.171
  %15 = load i32, i32* @y.172
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)) #14
  %22 = load i32, i32* @x.171
  %23 = load i32, i32* @y.172
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:30:                                     ; preds = %2
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %6, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %7, align 4
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator.35"* %5) #13
  br label %36

; <label>:34:                                     ; preds = %11
  %35 = load i64, i64* %3, align 8
  ret i64 %35

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* @x.171
  %38 = load i32, i32* @y.172
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i8*, i8** %6, align 8
  %46 = load i32, i32* %7, align 4
  %47 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  %49 = load i32, i32* @x.171
  %50 = load i32, i32* @y.172
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %48

originalBBalteredBB:                              ; preds = %originalBB, %13
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %57 = load i8*, i8** %6, align 8
  %58 = load i32, i32* %7, align 4
  %59 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %60 = insertvalue { i8*, i32 } %59, i32 %58, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.std::allocator.35"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.173
  %6 = load i32, i32* @y.174
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.Polynomials::Polynomial"*, align 8
  %16 = alloca %"class.std::allocator.35"*, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %20, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %15, align 8
  store %"class.std::allocator.35"* %3, %"class.std::allocator.35"** %16, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %15, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %27 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %29 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %28, align 8
  %30 = call %"class.Polynomials::Polynomial"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"class.Polynomials::Polynomial"* %27, %"class.Polynomials::Polynomial"* %29, %"class.Polynomials::Polynomial"* %25)
  %31 = load i32, i32* @x.173
  %32 = load i32, i32* @y.174
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::Polynomial"* %30

originalBBalteredBB:                              ; preds = %originalBB, %4
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.Polynomials::Polynomial"*, align 8
  %42 = alloca %"class.std::allocator.35"*, align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %46, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %41, align 8
  store %"class.std::allocator.35"* %3, %"class.std::allocator.35"** %42, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %41, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %53 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %55 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %54, align 8
  %56 = call %"class.Polynomials::Polynomial"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"class.Polynomials::Polynomial"* %53, %"class.Polynomials::Polynomial"* %55, %"class.Polynomials::Polynomial"* %51)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %7, align 8
  %8 = call i64 @_ZN9__gnu_cxxmiIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3)
  ret i64 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = load i32, i32* @x.177
  %4 = load i32, i32* @y.178
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %14 = call dereferenceable(8) %"class.Polynomials::Polynomial"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
  %15 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %14, align 8
  %16 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12, align 8
  %17 = call dereferenceable(8) %"class.Polynomials::Polynomial"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %16)
  %18 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %17, align 8
  %19 = ptrtoint %"class.Polynomials::Polynomial"* %15 to i64
  %20 = ptrtoint %"class.Polynomials::Polynomial"* %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 48
  %23 = load i32, i32* @x.177
  %24 = load i32, i32* @y.178
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %22

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %31, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %32, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %31, align 8
  %34 = call dereferenceable(8) %"class.Polynomials::Polynomial"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %33)
  %35 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %34, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %32, align 8
  %37 = call dereferenceable(8) %"class.Polynomials::Polynomial"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %36)
  %38 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %37, align 8
  %39 = ptrtoint %"class.Polynomials::Polynomial"* %35 to i64
  %40 = ptrtoint %"class.Polynomials::Polynomial"* %38 to i64
  %_ = shl i64 %39, %40
  %_1 = sub i64 %39, %40
  %gen = mul i64 %_1, %40
  %_2 = sub i64 %39, %40
  %gen3 = mul i64 %_2, %40
  %_4 = sub i64 0, %39
  %gen5 = add i64 %_4, %40
  %_6 = sub i64 0, %39
  %gen7 = add i64 %_6, %40
  %_8 = shl i64 %39, %40
  %_9 = shl i64 %39, %40
  %41 = sub i64 %39, %40
  %_10 = sub i64 %41, 48
  %gen11 = mul i64 %_10, 48
  %_12 = sub i64 0, %41
  %gen13 = add i64 %_12, 48
  %42 = sdiv exact i64 %41, 48
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.Polynomials::Polynomial"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.Polynomials::Polynomial"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m(%"class.std::allocator.35"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.181
  %4 = load i32, i32* @y.182
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.35"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %11, align 8
  %14 = bitcast %"class.std::allocator.35"* %13 to %"class.__gnu_cxx::new_allocator.36"*
  %15 = load i64, i64* %12, align 8
  %16 = call %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.36"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.181
  %18 = load i32, i32* @y.182
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::Polynomial"* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.35"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %25, align 8
  %28 = bitcast %"class.std::allocator.35"* %27 to %"class.__gnu_cxx::new_allocator.36"*
  %29 = load i64, i64* %26, align 8
  %30 = call %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.36"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.36"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.183
  %5 = load i32, i32* @y.184
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.36"* %15) #13
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.183
  %20 = load i32, i32* @y.184
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28

; <label>:27:                                     ; preds = %originalBBpart2
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i64, i64* %13, align 8
  %30 = mul i64 %29, 48
  %31 = call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to %"class.Polynomials::Polynomial"*
  ret %"class.Polynomials::Polynomial"* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %33 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %33, align 8
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %35, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %33, align 8
  %37 = load i64, i64* %34, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.36"* %36) #13
  %39 = icmp ugt i64 %37, %38
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.36"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.36"*, align 8
  store %"class.__gnu_cxx::new_allocator.36"* %0, %"class.__gnu_cxx::new_allocator.36"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.36"*, %"class.__gnu_cxx::new_allocator.36"** %2, align 8
  ret i64 192153584101141162
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #10

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.35"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.35"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %2, align 8
  store i64 192153584101141162, i64* %3, align 8
  %5 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8max_sizeERKS4_(%"class.std::allocator.35"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_(%"class.std::allocator.35"*, %"class.std::allocator.35"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.35"*, align 8
  %4 = alloca %"class.std::allocator.35"*, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %3, align 8
  store %"class.std::allocator.35"* %1, %"class.std::allocator.35"** %4, align 8
  %5 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %3, align 8
  %6 = bitcast %"class.std::allocator.35"* %5 to %"class.__gnu_cxx::new_allocator.36"*
  %7 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %4, align 8
  %8 = bitcast %"class.std::allocator.35"* %7 to %"class.__gnu_cxx::new_allocator.36"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.36"* %6, %"class.__gnu_cxx::new_allocator.36"* dereferenceable(1) %8) #13
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8max_sizeERKS4_(%"class.std::allocator.35"* dereferenceable(1)) #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.35"*, align 8
  store %"class.std::allocator.35"* %0, %"class.std::allocator.35"** %2, align 8
  %3 = load %"class.std::allocator.35"*, %"class.std::allocator.35"** %2, align 8
  %4 = bitcast %"class.std::allocator.35"* %3 to %"class.__gnu_cxx::new_allocator.36"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.36"* %4) #13
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #2 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.193
  %13 = load i32, i32* @y.194
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i64*, i64** %5, align 8
  store i64* %20, i64** %3, align 8
  %21 = load i32, i32* @x.193
  %22 = load i32, i32* @y.194
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %47

; <label>:29:                                     ; preds = %2
  %30 = load i32, i32* @x.193
  %31 = load i32, i32* @y.194
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i64*, i64** %4, align 8
  store i64* %38, i64** %3, align 8
  %39 = load i32, i32* @x.193
  %40 = load i32, i32* @y.194
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  %48 = load i32, i32* @x.193
  %49 = load i32, i32* @y.194
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i64*, i64** %3, align 8
  %57 = load i32, i32* @x.193
  %58 = load i32, i32* @y.194
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i64* %56

originalBBalteredBB:                              ; preds = %originalBB, %11
  %65 = load i64*, i64** %5, align 8
  store i64* %65, i64** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %66 = load i64*, i64** %4, align 8
  store i64* %66, i64** %3, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %67 = load i64*, i64** %3, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.Polynomials::Polynomial"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %11, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %19, align 8
  %21 = call %"class.Polynomials::Polynomial"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_(%"class.Polynomials::Polynomial"* %18, %"class.Polynomials::Polynomial"* %20, %"class.Polynomials::Polynomial"* %16)
  ret %"class.Polynomials::Polynomial"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.Polynomials::Polynomial"*, align 8
  %7 = alloca %"class.Polynomials::Polynomial"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %11, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %6, align 8
  %12 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %6, align 8
  store %"class.Polynomials::Polynomial"* %12, %"class.Polynomials::Polynomial"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %57, %3
  %14 = invoke zeroext i1 @_ZN9__gnu_cxxneIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %60

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %86

; <label>:16:                                     ; preds = %15
  %17 = load i32, i32* @x.197
  %18 = load i32, i32* @y.198
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  %26 = load i32, i32* @x.197
  %27 = load i32, i32* @y.198
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %34 = invoke %"class.Polynomials::Polynomial"* @_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_(%"class.Polynomials::Polynomial"* dereferenceable(48) %25)
          to label %35 unwind label %60

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4)
          to label %37 unwind label %60

; <label>:37:                                     ; preds = %35
  invoke void @_ZSt10_ConstructIN11Polynomials10PolynomialIdEES2_EvPT_RKT0_(%"class.Polynomials::Polynomial"* %34, %"class.Polynomials::Polynomial"* dereferenceable(48) %36)
          to label %38 unwind label %60

; <label>:38:                                     ; preds = %37
  br label %39

; <label>:39:                                     ; preds = %38
  %40 = load i32, i32* @x.197
  %41 = load i32, i32* @y.198
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* @x.197
  %49 = load i32, i32* @y.198
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %56 = invoke dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %4)
          to label %57 unwind label %60

; <label>:57:                                     ; preds = %originalBBpart24
  %58 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  %59 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %58, i32 1
  store %"class.Polynomials::Polynomial"* %59, %"class.Polynomials::Polynomial"** %7, align 8
  br label %13

; <label>:60:                                     ; preds = %originalBBpart24, %37, %35, %originalBBpart2, %13
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %8, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %9, align 4
  br label %64

; <label>:64:                                     ; preds = %60
  %65 = load i8*, i8** %8, align 8
  %66 = call i8* @__cxa_begin_catch(i8* %65) #13
  %67 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %6, align 8
  %68 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  invoke void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_(%"class.Polynomials::Polynomial"* %67, %"class.Polynomials::Polynomial"* %68)
          to label %69 unwind label %88

; <label>:69:                                     ; preds = %64
  %70 = load i32, i32* @x.197
  %71 = load i32, i32* @y.198
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = load i32, i32* @x.197
  %79 = load i32, i32* @y.198
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @__cxa_rethrow() #14
          to label %102 unwind label %88

; <label>:86:                                     ; preds = %15
  %87 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  ret %"class.Polynomials::Polynomial"* %87

; <label>:88:                                     ; preds = %originalBBpart28, %64
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %8, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %92 unwind label %99

; <label>:92:                                     ; preds = %88
  br label %94
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:94:                                     ; preds = %92
  %95 = load i8*, i8** %8, align 8
  %96 = load i32, i32* %9, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  resume { i8*, i32 } %98

; <label>:99:                                     ; preds = %88
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  call void @__clang_call_terminate(i8* %101) #11
  unreachable

; <label>:102:                                    ; preds = %originalBBpart28
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %16
  %103 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #2 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"class.Polynomials::Polynomial"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %7 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"class.Polynomials::Polynomial"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8)
  %10 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %9, align 8
  %11 = icmp ne %"class.Polynomials::Polynomial"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructIN11Polynomials10PolynomialIdEES2_EvPT_RKT0_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"* dereferenceable(48)) #0 comdat {
  %3 = load i32, i32* @x.201
  %4 = load i32, i32* @y.202
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.Polynomials::Polynomial"*, align 8
  %12 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %11, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %12, align 8
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %11, align 8
  %14 = bitcast %"class.Polynomials::Polynomial"* %13 to i8*
  %15 = bitcast i8* %14 to %"class.Polynomials::Polynomial"*
  %16 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  call void @_ZN11Polynomials10PolynomialIdEC2ERKS1_(%"class.Polynomials::Polynomial"* %15, %"class.Polynomials::Polynomial"* dereferenceable(48) %16)
  %17 = load i32, i32* @x.201
  %18 = load i32, i32* @y.202
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.Polynomials::Polynomial"*, align 8
  %26 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %25, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %26, align 8
  %27 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %25, align 8
  %28 = bitcast %"class.Polynomials::Polynomial"* %27 to i8*
  %29 = bitcast i8* %28 to %"class.Polynomials::Polynomial"*
  %30 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %26, align 8
  call void @_ZN11Polynomials10PolynomialIdEC2ERKS1_(%"class.Polynomials::Polynomial"* %29, %"class.Polynomials::Polynomial"* dereferenceable(48) %30)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #2 comdat align 2 {
  %2 = load i32, i32* @x.203
  %3 = load i32, i32* @y.204
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  %14 = load i32, i32* @x.203
  %15 = load i32, i32* @y.204
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::Polynomial"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %22, align 8
  %23 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %22, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %23, i32 0, i32 0
  %25 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials10PolynomialIdEESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  %6 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %5, i32 1
  store %"class.Polynomials::Polynomial"* %6, %"class.Polynomials::Polynomial"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials10PolynomialIdEC2ERKS1_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.Polynomials::Polynomial"*, align 8
  %4 = alloca %"class.Polynomials::Polynomial"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %3, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %4, align 8
  %7 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %8 = bitcast %"class.Polynomials::Polynomial"* %7 to %class.Subscriptor*
  %9 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  %10 = bitcast %"class.Polynomials::Polynomial"* %9 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor* %8, %class.Subscriptor* dereferenceable(24) %10)
  %11 = bitcast %"class.Polynomials::Polynomial"* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11Polynomials10PolynomialIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %7, i32 0, i32 1
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  %14 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %13, i32 0, i32 1
  invoke void @_ZNSt6vectorIdSaIdEEC2ERKS1_(%"class.std::vector.38"* %12, %"class.std::vector.38"* dereferenceable(24) %14)
          to label %15 unwind label %16

; <label>:15:                                     ; preds = %2
  ret void

; <label>:16:                                     ; preds = %2
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %5, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %6, align 4
  %20 = bitcast %"class.Polynomials::Polynomial"* %7 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %20)
          to label %21 unwind label %43

; <label>:21:                                     ; preds = %16
  br label %22

; <label>:22:                                     ; preds = %21
  %23 = load i32, i32* @x.207
  %24 = load i32, i32* @y.208
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = load i8*, i8** %5, align 8
  %32 = load i32, i32* %6, align 4
  %33 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  %35 = load i32, i32* @x.207
  %36 = load i32, i32* @y.208
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %34

; <label>:43:                                     ; preds = %16
  %44 = landingpad { i8*, i32 }
          catch i8* null
  %45 = extractvalue { i8*, i32 } %44, 0
  call void @__clang_call_terminate(i8* %45) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %22
  %46 = load i8*, i8** %5, align 8
  %47 = load i32, i32* %6, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  br label %originalBB
}

declare void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor*, %class.Subscriptor* dereferenceable(24)) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2ERKS1_(%"class.std::vector.38"*, %"class.std::vector.38"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.38"*, align 8
  %4 = alloca %"class.std::vector.38"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %3, align 8
  store %"class.std::vector.38"* %1, %"class.std::vector.38"** %4, align 8
  %9 = load %"class.std::vector.38"*, %"class.std::vector.38"** %3, align 8
  %10 = bitcast %"class.std::vector.38"* %9 to %"struct.std::_Vector_base.39"*
  %11 = load %"class.std::vector.38"*, %"class.std::vector.38"** %4, align 8
  %12 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.38"* %11)
  %13 = load %"class.std::vector.38"*, %"class.std::vector.38"** %4, align 8
  %14 = bitcast %"class.std::vector.38"* %13 to %"struct.std::_Vector_base.39"*
  %15 = call dereferenceable(1) %"class.std::allocator.40"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.39"* %14)
  %16 = call dereferenceable(1) %"class.std::allocator.40"* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_(%"class.std::allocator.40"* dereferenceable(1) %15)
  call void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.39"* %10, i64 %12, %"class.std::allocator.40"* dereferenceable(1) %16)
  %17 = load %"class.std::vector.38"*, %"class.std::vector.38"** %4, align 8
  %18 = invoke double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.38"* %17)
          to label %19 unwind label %75

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.209
  %21 = load i32, i32* @y.210
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store double* %18, double** %28, align 8
  %29 = load %"class.std::vector.38"*, %"class.std::vector.38"** %4, align 8
  %30 = load i32, i32* @x.209
  %31 = load i32, i32* @y.210
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %38 = invoke double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.38"* %29)
          to label %39 unwind label %75

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* @x.209
  %41 = load i32, i32* @y.210
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  store double* %38, double** %48, align 8
  %49 = bitcast %"class.std::vector.38"* %9 to %"struct.std::_Vector_base.39"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %50 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %51, i32 0, i32 0
  %53 = load double*, double** %52, align 8
  %54 = bitcast %"class.std::vector.38"* %9 to %"struct.std::_Vector_base.39"*
  %55 = load i32, i32* @x.209
  %56 = load i32, i32* @y.210
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %63 = invoke dereferenceable(1) %"class.std::allocator.40"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.39"* %54)
          to label %64 unwind label %75

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  %66 = load double*, double** %65, align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %68 = load double*, double** %67, align 8
  %69 = invoke double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double* %66, double* %68, double* %53, %"class.std::allocator.40"* dereferenceable(1) %63)
          to label %70 unwind label %75

; <label>:70:                                     ; preds = %64
  %71 = bitcast %"class.std::vector.38"* %9 to %"struct.std::_Vector_base.39"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %72 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %73, i32 0, i32 1
  store double* %69, double** %74, align 8
  ret void

; <label>:75:                                     ; preds = %64, %originalBBpart24, %originalBBpart2, %2
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %6, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %7, align 4
  %79 = bitcast %"class.std::vector.38"* %9 to %"struct.std::_Vector_base.39"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.39"* %79)
          to label %80 unwind label %102

; <label>:80:                                     ; preds = %75
  %81 = load i32, i32* @x.209
  %82 = load i32, i32* @y.210
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %80, %originalBB6alteredBB
  %89 = load i32, i32* @x.209
  %90 = load i32, i32* @y.210
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %97

; <label>:97:                                     ; preds = %originalBBpart28
  %98 = load i8*, i8** %6, align 8
  %99 = load i32, i32* %7, align 4
  %100 = insertvalue { i8*, i32 } undef, i8* %98, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  resume { i8*, i32 } %101

; <label>:102:                                    ; preds = %75
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store double* %18, double** %105, align 8
  %106 = load %"class.std::vector.38"*, %"class.std::vector.38"** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  store double* %38, double** %107, align 8
  %108 = bitcast %"class.std::vector.38"* %9 to %"struct.std::_Vector_base.39"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %108, i32 0, i32 0
  %110 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %109 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %111 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %110, i32 0, i32 0
  %112 = load double*, double** %111, align 8
  %113 = bitcast %"class.std::vector.38"* %9 to %"struct.std::_Vector_base.39"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %80
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials10PolynomialIdED2Ev(%"class.Polynomials::Polynomial"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.211
  %3 = load i32, i32* @y.212
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.Polynomials::Polynomial"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %10, align 8
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %10, align 8
  %14 = bitcast %"class.Polynomials::Polynomial"* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11Polynomials10PolynomialIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %13, i32 0, i32 1
  %16 = load i32, i32* @x.211
  %17 = load i32, i32* @y.212
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.38"* %15)
          to label %24 unwind label %26

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = bitcast %"class.Polynomials::Polynomial"* %13 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %25)
  ret void

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %11, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %12, align 4
  %30 = bitcast %"class.Polynomials::Polynomial"* %13 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %30)
          to label %31 unwind label %53

; <label>:31:                                     ; preds = %26
  %32 = load i32, i32* @x.211
  %33 = load i32, i32* @y.212
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.211
  %41 = load i32, i32* @y.212
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48

; <label>:48:                                     ; preds = %originalBBpart24
  %49 = load i8*, i8** %11, align 8
  %50 = load i32, i32* %12, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

; <label>:53:                                     ; preds = %26
  %54 = load i32, i32* @x.211
  %55 = load i32, i32* @y.212
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #11
  %64 = load i32, i32* @x.211
  %65 = load i32, i32* @y.212
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %72 = alloca %"class.Polynomials::Polynomial"*, align 8
  %73 = alloca i8*
  %74 = alloca i32
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %72, align 8
  %75 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %72, align 8
  %76 = bitcast %"class.Polynomials::Polynomial"* %75 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11Polynomials10PolynomialIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %75, i32 0, i32 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  call void @__clang_call_terminate(i8* %79) #11
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials10PolynomialIdED0Ev(%"class.Polynomials::Polynomial"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.Polynomials::Polynomial"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %2, align 8
  %5 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %2, align 8
  invoke void @_ZN11Polynomials10PolynomialIdED2Ev(%"class.Polynomials::Polynomial"* %5)
          to label %6 unwind label %24

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.213
  %8 = load i32, i32* @y.214
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = bitcast %"class.Polynomials::Polynomial"* %5 to i8*
  call void @_ZdlPv(i8* %15) #16
  %16 = load i32, i32* @x.213
  %17 = load i32, i32* @y.214
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = bitcast %"class.Polynomials::Polynomial"* %5 to i8*
  call void @_ZdlPv(i8* %28) #16
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %6
  %34 = bitcast %"class.Polynomials::Polynomial"* %5 to i8*
  call void @_ZdlPv(i8* %34) #16
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.38"*) #2 comdat align 2 {
  %2 = load i32, i32* @x.215
  %3 = load i32, i32* @y.216
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.38"*, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %10, align 8
  %11 = load %"class.std::vector.38"*, %"class.std::vector.38"** %10, align 8
  %12 = bitcast %"class.std::vector.38"* %11 to %"struct.std::_Vector_base.39"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load double*, double** %15, align 8
  %17 = bitcast %"class.std::vector.38"* %11 to %"struct.std::_Vector_base.39"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = ptrtoint double* %16 to i64
  %23 = ptrtoint double* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 8
  %26 = load i32, i32* @x.215
  %27 = load i32, i32* @y.216
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.38"*, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %34, align 8
  %35 = load %"class.std::vector.38"*, %"class.std::vector.38"** %34, align 8
  %36 = bitcast %"class.std::vector.38"* %35 to %"struct.std::_Vector_base.39"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %37 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load double*, double** %39, align 8
  %41 = bitcast %"class.std::vector.38"* %35 to %"struct.std::_Vector_base.39"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load double*, double** %44, align 8
  %46 = ptrtoint double* %40 to i64
  %47 = ptrtoint double* %45 to i64
  %_ = sub i64 %46, %47
  %gen = mul i64 %_, %47
  %_1 = shl i64 %46, %47
  %_2 = shl i64 %46, %47
  %_3 = sub i64 0, %46
  %gen4 = add i64 %_3, %47
  %_5 = sub i64 0, %46
  %gen6 = add i64 %_5, %47
  %_7 = shl i64 %46, %47
  %_8 = sub i64 0, %46
  %gen9 = add i64 %_8, %47
  %_10 = sub i64 %46, %47
  %gen11 = mul i64 %_10, %47
  %_12 = sub i64 %46, %47
  %gen13 = mul i64 %_12, %47
  %48 = sub i64 %46, %47
  %_14 = shl i64 %48, 8
  %_15 = shl i64 %48, 8
  %49 = sdiv exact i64 %48, 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.40"* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_(%"class.std::allocator.40"* dereferenceable(1)) #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.40"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %2, align 8
  %3 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %2, align 8
  ret %"class.std::allocator.40"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.40"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.39"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.39"*, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %2, align 8
  %3 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.40"*
  ret %"class.std::allocator.40"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.39"*, i64, %"class.std::allocator.40"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.39"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.40"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.40"* %2, %"class.std::allocator.40"** %6, align 8
  %9 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %6, align 8
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10, %"class.std::allocator.40"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.39"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10) #13
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double*, double*, double*, %"class.std::allocator.40"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.223
  %6 = load i32, i32* @y.224
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.40"*, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %13, i32 0, i32 0
  store double* %0, double** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %14, i32 0, i32 0
  store double* %1, double** %20, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.40"* %3, %"class.std::allocator.40"** %16, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %17 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %18 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load double*, double** %15, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %17, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %18, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = call double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %27, double* %29, double* %25)
  %31 = load i32, i32* @x.223
  %32 = load i32, i32* @y.224
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %30

originalBBalteredBB:                              ; preds = %originalBB, %4
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %41 = alloca double*, align 8
  %42 = alloca %"class.std::allocator.40"*, align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %39, i32 0, i32 0
  store double* %0, double** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %40, i32 0, i32 0
  store double* %1, double** %46, align 8
  store double* %2, double** %41, align 8
  store %"class.std::allocator.40"* %3, %"class.std::allocator.40"** %42, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %43 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %44 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load double*, double** %41, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %43, i32 0, i32 0
  %53 = load double*, double** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %44, i32 0, i32 0
  %55 = load double*, double** %54, align 8
  %56 = call double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %53, double* %55, double* %51)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.38"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %3 = alloca %"class.std::vector.38"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %3, align 8
  %5 = load %"class.std::vector.38"*, %"class.std::vector.38"** %3, align 8
  %6 = bitcast %"class.std::vector.38"* %5 to %"struct.std::_Vector_base.39"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  store double* %10, double** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"* %2, double** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  %12 = load double*, double** %11, align 8
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.38"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.227
  %3 = load i32, i32* @y.228
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %11 = alloca %"class.std::vector.38"*, align 8
  %12 = alloca double*, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %11, align 8
  %13 = load %"class.std::vector.38"*, %"class.std::vector.38"** %11, align 8
  %14 = bitcast %"class.std::vector.38"* %13 to %"struct.std::_Vector_base.39"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 1
  %18 = load double*, double** %17, align 8
  store double* %18, double** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"* %10, double** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %10, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = load i32, i32* @x.227
  %22 = load i32, i32* @y.228
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %30 = alloca %"class.std::vector.38"*, align 8
  %31 = alloca double*, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %30, align 8
  %32 = load %"class.std::vector.38"*, %"class.std::vector.38"** %30, align 8
  %33 = bitcast %"class.std::vector.38"* %32 to %"struct.std::_Vector_base.39"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %35, i32 0, i32 1
  %37 = load double*, double** %36, align 8
  store double* %37, double** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"* %29, double** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %29, i32 0, i32 0
  %39 = load double*, double** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.40"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.39"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.39"*, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %2, align 8
  %3 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.40"*
  ret %"class.std::allocator.40"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.39"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.39"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %2, align 8
  %5 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load double*, double** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = ptrtoint double* %13 to i64
  %19 = ptrtoint double* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.39"* %5, double* %9, i64 %21)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.231
  %24 = load i32, i32* @y.232
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31) #13
  %32 = load i32, i32* @x.231
  %33 = load i32, i32* @y.232
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:40:                                     ; preds = %1
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %3, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %4, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %44) #13
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i32, i32* @x.231
  %47 = load i32, i32* @y.232
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i8*, i8** %3, align 8
  %55 = load i32, i32* %4, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  %58 = load i32, i32* @x.231
  %59 = load i32, i32* @y.232
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %57

originalBBalteredBB:                              ; preds = %originalBB, %22
  %66 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %66) #13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %67 = load i8*, i8** %3, align 8
  %68 = load i32, i32* %4, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"class.std::allocator.40"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.40"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.40"* %1, %"class.std::allocator.40"** %4, align 8
  %7 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"class.std::allocator.40"*
  %9 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %4, align 8
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.40"* %8, %"class.std::allocator.40"* dereferenceable(1) %9) #13
  %10 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"class.std::allocator.40"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.40"* %16) #13
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.39"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.235
  %4 = load i32, i32* @y.236
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.39"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.39"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %17, i32 0, i32 0
  store double* %15, double** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %23 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %24, i32 0, i32 1
  store double* %22, double** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds double, double* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %32 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %33, i32 0, i32 2
  store double* %31, double** %34, align 8
  %35 = load i32, i32* @x.235
  %36 = load i32, i32* @y.236
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.39"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.39"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %49, i32 0, i32 0
  store double* %47, double** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %51 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load double*, double** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %55 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %56, i32 0, i32 1
  store double* %54, double** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load double*, double** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds double, double* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %64 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %65, i32 0, i32 2
  store double* %63, double** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %3 to %"class.std::allocator.40"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.40"* %4) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2ERKS_(%"class.std::allocator.40"*, %"class.std::allocator.40"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.40"*, align 8
  %4 = alloca %"class.std::allocator.40"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %3, align 8
  store %"class.std::allocator.40"* %1, %"class.std::allocator.40"** %4, align 8
  %5 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %3, align 8
  %6 = bitcast %"class.std::allocator.40"* %5 to %"class.__gnu_cxx::new_allocator.41"*
  %7 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %4, align 8
  %8 = bitcast %"class.std::allocator.40"* %7 to %"class.__gnu_cxx::new_allocator.41"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.41"* %6, %"class.__gnu_cxx::new_allocator.41"* dereferenceable(1) %8) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.241
  %3 = load i32, i32* @y.242
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 0
  store double* null, double** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 1
  store double* null, double** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 2
  store double* null, double** %14, align 8
  %15 = load i32, i32* @x.241
  %16 = load i32, i32* @y.242
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %24, i32 0, i32 0
  store double* null, double** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %24, i32 0, i32 1
  store double* null, double** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %24, i32 0, i32 2
  store double* null, double** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdED2Ev(%"class.std::allocator.40"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.40"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %2, align 8
  %3 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %2, align 8
  %4 = bitcast %"class.std::allocator.40"* %3 to %"class.__gnu_cxx::new_allocator.41"*
  call void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.41"* %4) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %1, %"class.__gnu_cxx::new_allocator.41"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.41"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.39"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.249
  %4 = load i32, i32* @y.250
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.39"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.249
  %17 = load i32, i32* @y.250
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %29

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %13, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %25 to %"class.std::allocator.40"*
  %27 = load i64, i64* %12, align 8
  %28 = call double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.40"* dereferenceable(1) %26, i64 %27)
  br label %46

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.249
  %31 = load i32, i32* @y.250
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i32, i32* @x.249
  %39 = load i32, i32* @y.250
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24, %24
  %47 = phi double* [ %28, %24 ], [ null, %originalBBpart24 ]
  ret double* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"struct.std::_Vector_base.39"*, align 8
  %49 = alloca i64, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %48, align 8
  store i64 %1, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %48, align 8
  %51 = load i64, i64* %49, align 8
  %52 = icmp ne i64 %51, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.40"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.40"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %3, align 8
  %6 = bitcast %"class.std::allocator.40"* %5 to %"class.__gnu_cxx::new_allocator.41"*
  %7 = load i64, i64* %4, align 8
  %8 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.41"* %6, i64 %7, i8* null)
  ret double* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.41"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.41"* %7) #13
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 8
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to double*
  ret double* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.41"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store double* %0, double** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store double* %1, double** %11, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load double*, double** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double* %18, double* %20, double* %16)
  ret double* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double*, double*, double*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load double*, double** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %17, double* %19, double* %15)
  ret double* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.261
  %5 = load i32, i32* @y.262
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %14 = alloca double*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  store double* %0, double** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %13, i32 0, i32 0
  store double* %1, double** %20, align 8
  store double* %2, double** %14, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %16, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %24)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %15, i32 0, i32 0
  store double* %25, double** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %18 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %18, i32 0, i32 0
  %30 = load double*, double** %29, align 8
  %31 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %30)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %17, i32 0, i32 0
  store double* %31, double** %32, align 8
  %33 = load double*, double** %14, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %15, i32 0, i32 0
  %35 = load double*, double** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %17, i32 0, i32 0
  %37 = load double*, double** %36, align 8
  %38 = call double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double* %35, double* %37, double* %33)
  %39 = load i32, i32* @x.261
  %40 = load i32, i32* @y.262
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %38

originalBBalteredBB:                              ; preds = %originalBB, %3
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %49 = alloca double*, align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %47, i32 0, i32 0
  store double* %0, double** %54, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %48, i32 0, i32 0
  store double* %1, double** %55, align 8
  store double* %2, double** %49, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %51 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %51, i32 0, i32 0
  %59 = load double*, double** %58, align 8
  %60 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %59)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %50, i32 0, i32 0
  store double* %60, double** %61, align 8
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %53 to i8*
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 8, i1 false)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %53, i32 0, i32 0
  %65 = load double*, double** %64, align 8
  %66 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %65)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %52, i32 0, i32 0
  store double* %66, double** %67, align 8
  %68 = load double*, double** %49, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %50, i32 0, i32 0
  %70 = load double*, double** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %52, i32 0, i32 0
  %72 = load double*, double** %71, align 8
  %73 = call double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double* %70, double* %72, double* %68)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.263
  %5 = load i32, i32* @y.264
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %14 = alloca double*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  store double* %0, double** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %13, i32 0, i32 0
  store double* %1, double** %18, align 8
  store double* %2, double** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %15, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %22)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %16 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %16, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %27)
  %29 = load double*, double** %14, align 8
  %30 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %29)
  %31 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %23, double* %28, double* %30)
  %32 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %14, double* %31)
  %33 = load i32, i32* @x.263
  %34 = load i32, i32* @y.264
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %43 = alloca double*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %41, i32 0, i32 0
  store double* %0, double** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %42, i32 0, i32 0
  store double* %1, double** %47, align 8
  store double* %2, double** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %44, i32 0, i32 0
  %51 = load double*, double** %50, align 8
  %52 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %45, i32 0, i32 0
  %56 = load double*, double** %55, align 8
  %57 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %56)
  %58 = load double*, double** %43, align 8
  %59 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %58)
  %60 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %52, double* %57, double* %59)
  %61 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %43, double* %60)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double*) #2 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  store double* %0, double** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  ret double* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8), double*) #2 comdat {
  %3 = alloca double**, align 8
  %4 = alloca double*, align 8
  store double** %0, double*** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  store double* %0, double** %3, align 8
  %4 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %2)
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdET_S1_(double*) #2 comdat {
  %2 = load i32, i32* @x.273
  %3 = load i32, i32* @y.274
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca double*, align 8
  store double* %0, double** %10, align 8
  %11 = load double*, double** %10, align 8
  %12 = load i32, i32* @x.273
  %13 = load i32, i32* @y.274
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca double*, align 8
  store double* %0, double** %20, align 8
  %21 = load double*, double** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #2 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double*, double** %4, align 8
  %10 = ptrtoint double* %8 to i64
  %11 = ptrtoint double* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %39

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.275
  %18 = load i32, i32* @y.276
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load double*, double** %6, align 8
  %26 = bitcast double* %25 to i8*
  %27 = load double*, double** %4, align 8
  %28 = bitcast double* %27 to i8*
  %29 = load i64, i64* %7, align 8
  %30 = mul i64 8, %29
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %26, i8* %28, i64 %30, i32 8, i1 false)
  %31 = load i32, i32* @x.275
  %32 = load i32, i32* @y.276
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %3
  %40 = load double*, double** %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = getelementptr inbounds double, double* %40, i64 %41
  ret double* %42

originalBBalteredBB:                              ; preds = %originalBB, %16
  %43 = load double*, double** %6, align 8
  %44 = bitcast double* %43 to i8*
  %45 = load double*, double** %4, align 8
  %46 = bitcast double* %45 to i8*
  %47 = load i64, i64* %7, align 8
  %_ = sub i64 0, 8
  %gen = add i64 %_, %47
  %_1 = shl i64 8, %47
  %_2 = sub i64 8, %47
  %gen3 = mul i64 %_2, %47
  %48 = mul i64 8, %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %48, i32 8, i1 false)
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  ret double** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"*, double** dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  %4 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %3, align 8
  store double** %1, double*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  %7 = load double**, double*** %4, align 8
  %8 = load double*, double** %7, align 8
  store double* %8, double** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.39"*, double*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.281
  %5 = load i32, i32* @y.282
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.39"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %12, align 8
  %16 = load double*, double** %13, align 8
  %17 = icmp ne double* %16, null
  %18 = load i32, i32* @x.281
  %19 = load i32, i32* @y.282
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %47

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.281
  %28 = load i32, i32* @y.282
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %15, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %35 to %"class.std::allocator.40"*
  %37 = load double*, double** %13, align 8
  %38 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.40"* dereferenceable(1) %36, double* %37, i64 %38)
  %39 = load i32, i32* @x.281
  %40 = load i32, i32* @y.282
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %48 = alloca %"struct.std::_Vector_base.39"*, align 8
  %49 = alloca double*, align 8
  %50 = alloca i64, align 8
  store %"struct.std::_Vector_base.39"* %0, %"struct.std::_Vector_base.39"** %48, align 8
  store double* %1, double** %49, align 8
  store i64 %2, i64* %50, align 8
  %51 = load %"struct.std::_Vector_base.39"*, %"struct.std::_Vector_base.39"** %48, align 8
  %52 = load double*, double** %49, align 8
  %53 = icmp ne double* %52, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %54 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %15, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %54 to %"class.std::allocator.40"*
  %56 = load double*, double** %13, align 8
  %57 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.40"* dereferenceable(1) %55, double* %56, i64 %57)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.40"* dereferenceable(1), double*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.283
  %5 = load i32, i32* @y.284
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.40"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %12, align 8
  %16 = bitcast %"class.std::allocator.40"* %15 to %"class.__gnu_cxx::new_allocator.41"*
  %17 = load double*, double** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.41"* %16, double* %17, i64 %18)
  %19 = load i32, i32* @x.283
  %20 = load i32, i32* @y.284
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.40"*, align 8
  %28 = alloca double*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %27, align 8
  store double* %1, double** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %27, align 8
  %31 = bitcast %"class.std::allocator.40"* %30 to %"class.__gnu_cxx::new_allocator.41"*
  %32 = load double*, double** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.41"* %31, double* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.41"*, double*, i64) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  call void @_ZdlPv(i8* %9) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.38"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.38"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %2, align 8
  %5 = load %"class.std::vector.38"*, %"class.std::vector.38"** %2, align 8
  %6 = bitcast %"class.std::vector.38"* %5 to %"struct.std::_Vector_base.39"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  %11 = bitcast %"class.std::vector.38"* %5 to %"struct.std::_Vector_base.39"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load double*, double** %14, align 8
  %16 = bitcast %"class.std::vector.38"* %5 to %"struct.std::_Vector_base.39"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.40"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.39"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %10, double* %15, %"class.std::allocator.40"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.38"* %5 to %"struct.std::_Vector_base.39"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.39"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = load i32, i32* @x.287
  %23 = load i32, i32* @y.288
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %3, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %4, align 4
  %33 = bitcast %"class.std::vector.38"* %5 to %"struct.std::_Vector_base.39"*
  %34 = load i32, i32* @x.287
  %35 = load i32, i32* @y.288
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.39"* %33)
          to label %42 unwind label %64

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i32, i32* @x.287
  %44 = load i32, i32* @y.288
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* @x.287
  %52 = load i32, i32* @y.288
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %59

; <label>:59:                                     ; preds = %originalBBpart24
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load i32, i32* @x.287
  %66 = load i32, i32* @y.288
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #11
  %75 = load i32, i32* @x.287
  %76 = load i32, i32* @y.288
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %3, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %4, align 4
  %86 = bitcast %"class.std::vector.38"* %5 to %"struct.std::_Vector_base.39"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %87 = landingpad { i8*, i32 }
          catch i8* null
  %88 = extractvalue { i8*, i32 } %87, 0
  call void @__clang_call_terminate(i8* %88) #11
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double*, double*, %"class.std::allocator.40"* dereferenceable(1)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca %"class.std::allocator.40"*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store %"class.std::allocator.40"* %2, %"class.std::allocator.40"** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load double*, double** %5, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %7, double* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(double*, double*) #0 comdat {
  %3 = load i32, i32* @x.291
  %4 = load i32, i32* @y.292
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  store double* %0, double** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load double*, double** %11, align 8
  %14 = load double*, double** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %13, double* %14)
  %15 = load i32, i32* @x.291
  %16 = load i32, i32* @y.292
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca double*, align 8
  %24 = alloca double*, align 8
  store double* %0, double** %23, align 8
  store double* %1, double** %24, align 8
  %25 = load double*, double** %23, align 8
  %26 = load double*, double** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %25, double* %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double*, double*) #2 comdat align 2 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.30"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.30"* %2, %"class.std::allocator.30"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"*) #2 comdat align 2 {
  %2 = load i32, i32* @x.297
  %3 = load i32, i32* @y.298
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.29"*, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %10, align 8
  %11 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"class.std::allocator.30"*
  %14 = load i32, i32* @x.297
  %15 = load i32, i32* @y.298
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.30"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.29"*, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %22, align 8
  %23 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %24 to %"class.std::allocator.30"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.299
  %3 = load i32, i32* @y.300
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.29"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %10, align 8
  %13 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %19, i32 0, i32 2
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %22 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %23, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = ptrtoint i32* %21 to i64
  %27 = ptrtoint i32* %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 4
  %30 = load i32, i32* @x.299
  %31 = load i32, i32* @y.300
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.29"* %13, i32* %17, i64 %29)
          to label %38 unwind label %56

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* @x.299
  %40 = load i32, i32* @y.300
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %38, %originalBB21alteredBB
  %47 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %47) #13
  %48 = load i32, i32* @x.299
  %49 = load i32, i32* @y.300
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  ret void

; <label>:56:                                     ; preds = %originalBBpart2
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %11, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %12, align 4
  %60 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %60) #13
  br label %61

; <label>:61:                                     ; preds = %56
  %62 = load i8*, i8** %11, align 8
  %63 = load i32, i32* %12, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65

originalBBalteredBB:                              ; preds = %originalBB, %1
  %66 = alloca %"struct.std::_Vector_base.29"*, align 8
  %67 = alloca i8*
  %68 = alloca i32
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %66, align 8
  %69 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %66, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %70 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %71, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %69, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %74 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %75, i32 0, i32 2
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %69, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %78 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %79, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = ptrtoint i32* %77 to i64
  %83 = ptrtoint i32* %81 to i64
  %_ = sub i64 0, %82
  %gen = add i64 %_, %83
  %_1 = shl i64 %82, %83
  %_2 = sub i64 %82, %83
  %gen3 = mul i64 %_2, %83
  %_4 = sub i64 0, %82
  %gen5 = add i64 %_4, %83
  %_6 = sub i64 0, %82
  %gen7 = add i64 %_6, %83
  %_8 = sub i64 %82, %83
  %gen9 = mul i64 %_8, %83
  %_10 = sub i64 0, %82
  %gen11 = add i64 %_10, %83
  %_12 = shl i64 %82, %83
  %84 = sub i64 %82, %83
  %_13 = shl i64 %84, 4
  %_14 = sub i64 0, %84
  %gen15 = add i64 %_14, 4
  %_16 = shl i64 %84, 4
  %_17 = sub i64 0, %84
  %gen18 = add i64 %_17, 4
  %_19 = sub i64 %84, 4
  %gen20 = mul i64 %_19, 4
  %85 = sdiv exact i64 %84, 4
  br label %originalBB

originalBB21alteredBB:                            ; preds = %originalBB21, %38
  %86 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %86) #13
  br label %originalBB21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32*, i32*) #2 comdat align 2 {
  %3 = load i32, i32* @x.303
  %4 = load i32, i32* @y.304
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store i32* %0, i32** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32, i32* @x.303
  %14 = load i32, i32* @y.304
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  store i32* %0, i32** %21, align 8
  store i32* %1, i32** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.29"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.29"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"class.std::allocator.30"*
  %13 = load i32*, i32** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.30"* dereferenceable(1) %12, i32* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.307
  %3 = load i32, i32* @y.308
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %11 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"class.std::allocator.30"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %12) #13
  %13 = load i32, i32* @x.307
  %14 = load i32, i32* @y.308
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %21, align 8
  %22 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %21, align 8
  %23 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %22 to %"class.std::allocator.30"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %23) #13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.30"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.309
  %5 = load i32, i32* @y.310
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.30"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %12, align 8
  %16 = bitcast %"class.std::allocator.30"* %15 to %"class.__gnu_cxx::new_allocator.31"*
  %17 = load i32*, i32** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.31"* %16, i32* %17, i64 %18)
  %19 = load i32, i32* @x.309
  %20 = load i32, i32* @y.310
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.30"*, align 8
  %28 = alloca i32*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %27, align 8
  store i32* %1, i32** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %27, align 8
  %31 = bitcast %"class.std::allocator.30"* %30 to %"class.__gnu_cxx::new_allocator.31"*
  %32 = load i32*, i32** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.31"* %31, i32* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.31"*, i32*, i64) #2 comdat align 2 {
  %4 = load i32, i32* @x.311
  %5 = load i32, i32* @y.312
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %12, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = bitcast i32* %16 to i8*
  call void @_ZdlPv(i8* %17) #13
  %18 = load i32, i32* @x.311
  %19 = load i32, i32* @y.312
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %27 = alloca i32*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %26, align 8
  store i32* %1, i32** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %26, align 8
  %30 = load i32*, i32** %27, align 8
  %31 = bitcast i32* %30 to i8*
  call void @_ZdlPv(i8* %31) #13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"*, %"class.std::allocator.43"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca %"class.std::allocator.43"*, align 8
  %5 = alloca %"class.std::allocator.8", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store %"class.std::allocator.43"* %1, %"class.std::allocator.43"** %4, align 8
  %8 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = load %"class.std::allocator.43"*, %"class.std::allocator.43"** %4, align 8
  call void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.8"* %5, %"class.std::allocator.43"* dereferenceable(1) %10) #13
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9, %"class.std::allocator.8"* dereferenceable(1) %5)
          to label %11 unwind label %28

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.313
  %13 = load i32, i32* @y.314
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %5) #13
  %20 = load i32, i32* @x.313
  %21 = load i32, i32* @y.314
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:28:                                     ; preds = %2
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %6, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %5) #13
  br label %32

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %6, align 8
  %34 = load i32, i32* %7, align 4
  %35 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

originalBBalteredBB:                              ; preds = %originalBB, %11
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %5) #13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.7"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.315
  %4 = load i32, i32* @y.316
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.7"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64*, align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %11, align 8
  store i64 %1, i64* %12, align 8
  %17 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %18 = load i64, i64* %12, align 8
  %19 = icmp ne i64 %18, 0
  %20 = load i32, i32* @x.315
  %21 = load i32, i32* @y.316
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %48

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %30 = load i64, i64* %12, align 8
  %31 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %29, i64 %30)
  store i64* %31, i64** %13, align 8
  %32 = load i64*, i64** %13, align 8
  %33 = load i64, i64* %12, align 8
  %34 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %33)
  %35 = getelementptr inbounds i64, i64* %32, i64 %34
  %36 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %37 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %37 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %38, i32 0, i32 2
  store i64* %35, i64** %39, align 8
  %40 = load i64*, i64** %13, align 8
  %41 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %40)
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %41, i32 0)
  %42 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %43 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %43 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %44, i32 0, i32 0
  %46 = bitcast %"struct.std::_Bit_iterator"* %45 to i8*
  %47 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 12, i32 8, i1 false)
  br label %75

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = load i32, i32* @x.315
  %50 = load i32, i32* @y.316
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %58 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %58 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %59, i32 0, i32 2
  store i64* null, i64** %60, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %15, i64* null, i32 0)
  %61 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %62 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %62 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %64 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Bit_iterator"* %64 to i8*
  %66 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 12, i32 8, i1 false)
  %67 = load i32, i32* @x.315
  %68 = load i32, i32* @y.316
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %75

; <label>:75:                                     ; preds = %originalBBpart24, %28
  %76 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %77 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %76, i32 0, i32 0
  %78 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %77 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %79 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %78, i32 0, i32 0
  %80 = load i64, i64* %12, align 8
  %81 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %79, i64 %80)
  %82 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  %84 = extractvalue { i64*, i32 } %81, 0
  store i64* %84, i64** %83, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  %86 = extractvalue { i64*, i32 } %81, 1
  store i32 %86, i32* %85, align 8
  %87 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %88 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %88 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %89, i32 0, i32 1
  %91 = bitcast %"struct.std::_Bit_iterator"* %90 to i8*
  %92 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 12, i32 8, i1 false)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %93 = alloca %"class.std::vector.7"*, align 8
  %94 = alloca i64, align 8
  %95 = alloca i64*, align 8
  %96 = alloca %"struct.std::_Bit_iterator", align 8
  %97 = alloca %"struct.std::_Bit_iterator", align 8
  %98 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %93, align 8
  store i64 %1, i64* %94, align 8
  %99 = load %"class.std::vector.7"*, %"class.std::vector.7"** %93, align 8
  %100 = load i64, i64* %94, align 8
  %101 = icmp ne i64 %100, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %102 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %103 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %102, i32 0, i32 0
  %104 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %103 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %105 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %104, i32 0, i32 2
  store i64* null, i64** %105, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %15, i64* null, i32 0)
  %106 = bitcast %"class.std::vector.7"* %17 to %"struct.std::_Bvector_base"*
  %107 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %106, i32 0, i32 0
  %108 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %107 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %109 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %108, i32 0, i32 0
  %110 = bitcast %"struct.std::_Bit_iterator"* %109 to i8*
  %111 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 12, i32 8, i1 false)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb(%"class.std::vector.7"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %8 = bitcast %"class.std::vector.7"* %7 to %"struct.std::_Bvector_base"*
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  store i64* %14, i64** %5, align 8
  %15 = load i64*, i64** %5, align 8
  %16 = icmp ne i64* %15, null
  br i1 %16, label %17, label %33

; <label>:17:                                     ; preds = %2
  %18 = load i64*, i64** %5, align 8
  %19 = bitcast i64* %18 to i8*
  %20 = load i8, i8* %4, align 1
  %21 = trunc i8 %20 to i1
  %22 = select i1 %21, i32 -1, i32 0
  %23 = trunc i32 %22 to i8
  %24 = bitcast %"class.std::vector.7"* %7 to %"struct.std::_Bvector_base"*
  %25 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %24, i32 0, i32 0
  %26 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %25)
  %27 = load i64*, i64** %5, align 8
  %28 = ptrtoint i64* %26 to i64
  %29 = ptrtoint i64* %27 to i64
  %30 = sub i64 %28, %29
  %31 = sdiv exact i64 %30, 8
  %32 = mul i64 %31, 8
  call void @llvm.memset.p0i8.i64(i8* %19, i8 %23, i64 %32, i32 8, i1 false)
  br label %33

; <label>:33:                                     ; preds = %17, %2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7) #13
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %12) #13
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.319
  %15 = load i32, i32* @y.320
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i8*, i8** %3, align 8
  %23 = load i32, i32* %4, align 4
  %24 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  %26 = load i32, i32* @x.319
  %27 = load i32, i32* @y.320
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %25

originalBBalteredBB:                              ; preds = %originalBB, %13
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.8"*, %"class.std::allocator.43"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca %"class.std::allocator.43"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store %"class.std::allocator.43"* %1, %"class.std::allocator.43"** %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %6) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %7 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.8"*
  %9 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.8"* %8, %"class.std::allocator.8"* dereferenceable(1) %9) #13
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  invoke void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.323
  %14 = load i32, i32* @y.324
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %5, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %6, align 4
  %24 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.8"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %24) #13
  %25 = load i32, i32* @x.323
  %26 = load i32, i32* @y.324
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

originalBBalteredBB:                              ; preds = %originalBB, %12
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %5, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %6, align 4
  %41 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.8"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %41) #13
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.8"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.9"* %4) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2ERKS_(%"class.std::allocator.8"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"* %6, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1) %8) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 0
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %4)
  %5 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 1
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %5)
  %6 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 2
  store i64* null, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %1, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %4, i64* null, i32 0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator_base"* %7 to %"struct.std::iterator"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 0
  %10 = load i64*, i64** %5, align 8
  store i64* %10, i64** %9, align 8
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 1
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.339
  %3 = load i32, i32* @y.340
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %10, align 8
  %12 = load i32, i32* @x.339
  %13 = load i32, i32* @y.340
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.341
  %4 = load i32, i32* @y.342
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bvector_base"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %11, align 8
  %14 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %14 to %"class.std::allocator.8"*
  %16 = load i64, i64* %12, align 8
  %17 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %16)
  %18 = call i64* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m(%"class.std::allocator.8"* dereferenceable(1) %15, i64 %17)
  %19 = load i32, i32* @x.341
  %20 = load i32, i32* @y.342
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %"struct.std::_Bvector_base"*, align 8
  %28 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %27, align 8
  store i64 %1, i64* %28, align 8
  %29 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %30 to %"class.std::allocator.8"*
  %32 = load i64, i64* %28, align 8
  %33 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %32)
  %34 = call i64* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m(%"class.std::allocator.8"* dereferenceable(1) %31, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64) #2 comdat align 2 {
  %2 = load i32, i32* @x.343
  %3 = load i32, i32* @y.344
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  store i64 %0, i64* %10, align 8
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 64
  %13 = sub i64 %12, 1
  %14 = udiv i64 %13, 64
  %15 = load i32, i32* @x.343
  %16 = load i32, i32* @y.344
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i64, align 8
  store i64 %0, i64* %23, align 8
  %24 = load i64, i64* %23, align 8
  %_ = shl i64 %24, 64
  %25 = add i64 %24, 64
  %_1 = shl i64 %25, 1
  %_2 = shl i64 %25, 1
  %_3 = sub i64 %25, 1
  %gen = mul i64 %_3, 1
  %_4 = sub i64 %25, 1
  %gen5 = mul i64 %_4, 1
  %_6 = shl i64 %25, 1
  %_7 = shl i64 %25, 1
  %26 = sub i64 %25, 1
  %_8 = sub i64 %26, 64
  %gen9 = mul i64 %_8, 64
  %_10 = sub i64 %26, 64
  %gen11 = mul i64 %_10, 64
  %_12 = sub i64 %26, 64
  %gen13 = mul i64 %_12, 64
  %_14 = sub i64 %26, 64
  %gen15 = mul i64 %_14, 64
  %_16 = sub i64 %26, 64
  %gen17 = mul i64 %_16, 64
  %_18 = sub i64 0, %26
  %gen19 = add i64 %_18, 64
  %27 = udiv i64 %26, 64
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8)) #2 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #2 comdat align 2 {
  %4 = load i32, i32* @x.347
  %5 = load i32, i32* @y.348
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Bit_iterator"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i32 %2, i32* %14, align 4
  %15 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %15 to %"struct.std::_Bit_iterator_base"*
  %17 = load i64*, i64** %13, align 8
  %18 = load i32, i32* %14, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %16, i64* %17, i32 %18)
  %19 = load i32, i32* @x.347
  %20 = load i32, i32* @y.348
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"struct.std::_Bit_iterator"*, align 8
  %28 = alloca i64*, align 8
  %29 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %27, align 8
  store i64* %1, i64** %28, align 8
  store i32 %2, i32* %29, align 4
  %30 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27, align 8
  %31 = bitcast %"struct.std::_Bit_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  %32 = load i64*, i64** %28, align 8
  %33 = load i32, i32* %29, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %31, i64* %32, i32 %33)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = load i64, i64* %5, align 8
  %11 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %6, i64 %10)
  %12 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  %13 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false)
  %14 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %15 = load { i64*, i32 }, { i64*, i32 }* %14, align 8
  ret { i64*, i32 } %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m(%"class.std::allocator.8"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.351
  %4 = load i32, i32* @y.352
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.8"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %11, align 8
  %14 = bitcast %"class.std::allocator.8"* %13 to %"class.__gnu_cxx::new_allocator.9"*
  %15 = load i64, i64* %12, align 8
  %16 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.351
  %18 = load i32, i32* @y.352
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.8"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %25, align 8
  %28 = bitcast %"class.std::allocator.8"* %27 to %"class.__gnu_cxx::new_allocator.9"*
  %29 = load i64, i64* %26, align 8
  %30 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %7) #13
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 8
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to i64*
  ret i64* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %7 = load i64, i64* %4, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %6, i64 %7)
  ret %"struct.std::_Bit_iterator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = add nsw i64 %7, %10
  store i64 %11, i64* %5, align 8
  %12 = load i64, i64* %5, align 8
  %13 = sdiv i64 %12, 64
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 %13
  store i64* %16, i64** %14, align 8
  %17 = load i64, i64* %5, align 8
  %18 = srem i64 %17, 64
  store i64 %18, i64* %5, align 8
  %19 = load i64, i64* %5, align 8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %21, label %27

; <label>:21:                                     ; preds = %2
  %22 = load i64, i64* %5, align 8
  %23 = add nsw i64 %22, 64
  store i64 %23, i64* %5, align 8
  %24 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds i64, i64* %25, i32 -1
  store i64* %26, i64** %24, align 8
  br label %27

; <label>:27:                                     ; preds = %21, %2
  %28 = load i64, i64* %5, align 8
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  store i32 %29, i32* %30, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) #2 comdat align 2 {
  %2 = alloca i64*, align 8
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %4 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %5 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %5, i32 0, i32 2
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ne i64* %7, null
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %1
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 2
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 -1
  %14 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %13)
  %15 = getelementptr inbounds i64, i64* %14, i64 1
  store i64* %15, i64** %2, align 8
  br label %33

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.361
  %18 = load i32, i32* @y.362
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  store i64* null, i64** %2, align 8
  %25 = load i32, i32* @x.361
  %26 = load i32, i32* @y.362
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2, %9
  %34 = load i64*, i64** %2, align 8
  ret i64* %34

originalBBalteredBB:                              ; preds = %originalBB, %16
  store i64* null, i64** %2, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %4 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %5 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ne i64* %10, null
  br i1 %11, label %12, label %37

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %14 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %13)
  %15 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %16 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %15 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Bit_iterator"* %17 to %"struct.std::_Bit_iterator_base"*
  %19 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = ptrtoint i64* %14 to i64
  %22 = ptrtoint i64* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 8
  store i64 %24, i64* %3, align 8
  %25 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %26 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %25 to %"class.std::allocator.8"*
  %27 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %28 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %27 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %28, i32 0, i32 2
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %3, align 8
  %32 = sub i64 0, %31
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  %34 = load i64, i64* %3, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm(%"class.std::allocator.8"* dereferenceable(1) %26, i64* %33, i64 %34)
  %35 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %36 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %35 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  call void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %36)
  br label %37

; <label>:37:                                     ; preds = %12, %1
  %38 = load i32, i32* @x.363
  %39 = load i32, i32* @y.364
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %37, %originalBBalteredBB
  %46 = load i32, i32* @x.363
  %47 = load i32, i32* @y.364
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %3 to %"class.std::allocator.8"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %4) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm(%"class.std::allocator.8"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.367
  %5 = load i32, i32* @y.368
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.8"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %12, align 8
  %16 = bitcast %"class.std::allocator.8"* %15 to %"class.__gnu_cxx::new_allocator.9"*
  %17 = load i64*, i64** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.9"* %16, i64* %17, i64 %18)
  %19 = load i32, i32* @x.367
  %20 = load i32, i32* @y.368
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.8"*, align 8
  %28 = alloca i64*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %27, align 8
  store i64* %1, i64** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %27, align 8
  %31 = bitcast %"class.std::allocator.8"* %30 to %"class.__gnu_cxx::new_allocator.9"*
  %32 = load i64*, i64** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.9"* %31, i64* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, align 8
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %4 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %3)
  %5 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  %7 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 12, i32 8, i1 false)
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 0
  %9 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  %10 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 12, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 2
  store i64* null, i64** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.9"*, i64*, i64) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.373
  %3 = load i32, i32* @y.374
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %10, align 8
  %12 = load i32, i32* @x.373
  %13 = load i32, i32* @y.374
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.375
  %3 = load i32, i32* @y.376
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %10, align 8
  %12 = load i32, i32* @x.375
  %13 = load i32, i32* @y.376
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca %"class.std::allocator.25", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  call void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.25"* %5, %"class.std::allocator.25"* dereferenceable(1) %9) #13
  %10 = invoke i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.25"* dereferenceable(1) %5)
          to label %11 unwind label %14

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %5) #13
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %11
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)) #14
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %6, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %7, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %5) #13
  br label %36

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.377
  %20 = load i32, i32* @y.378
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i64, i64* %3, align 8
  %28 = load i32, i32* @x.377
  %29 = load i32, i32* @y.378
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %27

; <label>:36:                                     ; preds = %14
  %37 = load i8*, i8** %6, align 8
  %38 = load i32, i32* %7, align 4
  %39 = insertvalue { i8*, i32 } undef, i8* %37, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40

originalBBalteredBB:                              ; preds = %originalBB, %18
  %41 = load i64, i64* %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"*, i64, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.24"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.25"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %6, align 8
  %9 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10, %"class.std::allocator.25"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.24"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10) #13
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.379
  %20 = load i32, i32* @y.380
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i8*, i8** %7, align 8
  %28 = load i32, i32* %8, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  %31 = load i32, i32* @x.379
  %32 = load i32, i32* @y.380
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %30

originalBBalteredBB:                              ; preds = %originalBB, %18
  %39 = load i8*, i8** %7, align 8
  %40 = load i32, i32* %8, align 4
  %41 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.23"*, i64, %"class.std::vector.7"* dereferenceable(40)) #0 comdat align 2 {
  %4 = load i32, i32* @x.381
  %5 = load i32, i32* @y.382
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.23"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %14, align 8
  %15 = load %"class.std::vector.23"*, %"class.std::vector.23"** %12, align 8
  %16 = bitcast %"class.std::vector.23"* %15 to %"struct.std::_Vector_base.24"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %17 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %18, i32 0, i32 0
  %20 = load %"class.std::vector.7"*, %"class.std::vector.7"** %19, align 8
  %21 = load i64, i64* %13, align 8
  %22 = load %"class.std::vector.7"*, %"class.std::vector.7"** %14, align 8
  %23 = bitcast %"class.std::vector.23"* %15 to %"struct.std::_Vector_base.24"*
  %24 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %23)
  %25 = call %"class.std::vector.7"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.7"* %20, i64 %21, %"class.std::vector.7"* dereferenceable(40) %22, %"class.std::allocator.25"* dereferenceable(1) %24)
  %26 = bitcast %"class.std::vector.23"* %15 to %"struct.std::_Vector_base.24"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %27 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %28, i32 0, i32 1
  store %"class.std::vector.7"* %25, %"class.std::vector.7"** %29, align 8
  %30 = load i32, i32* @x.381
  %31 = load i32, i32* @y.382
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.std::vector.23"*, align 8
  %39 = alloca i64, align 8
  %40 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %38, align 8
  store i64 %1, i64* %39, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %40, align 8
  %41 = load %"class.std::vector.23"*, %"class.std::vector.23"** %38, align 8
  %42 = bitcast %"class.std::vector.23"* %41 to %"struct.std::_Vector_base.24"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %43 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %44, i32 0, i32 0
  %46 = load %"class.std::vector.7"*, %"class.std::vector.7"** %45, align 8
  %47 = load i64, i64* %39, align 8
  %48 = load %"class.std::vector.7"*, %"class.std::vector.7"** %40, align 8
  %49 = bitcast %"class.std::vector.23"* %41 to %"struct.std::_Vector_base.24"*
  %50 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %49)
  %51 = call %"class.std::vector.7"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.7"* %46, i64 %47, %"class.std::vector.7"* dereferenceable(40) %48, %"class.std::allocator.25"* dereferenceable(1) %50)
  %52 = bitcast %"class.std::vector.23"* %41 to %"struct.std::_Vector_base.24"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %53 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %54, i32 0, i32 1
  store %"class.std::vector.7"* %51, %"class.std::vector.7"** %55, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %5 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %"class.std::vector.7"*, %"class.std::vector.7"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.7"*, %"class.std::vector.7"** %16, align 8
  %18 = ptrtoint %"class.std::vector.7"* %13 to i64
  %19 = ptrtoint %"class.std::vector.7"* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 40
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.24"* %5, %"class.std::vector.7"* %9, i64 %21)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.383
  %24 = load i32, i32* @y.384
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %31) #13
  %32 = load i32, i32* @x.383
  %33 = load i32, i32* @y.384
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:40:                                     ; preds = %1
  %41 = load i32, i32* @x.383
  %42 = load i32, i32* @y.384
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %3, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %4, align 4
  %52 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %52) #13
  %53 = load i32, i32* @x.383
  %54 = load i32, i32* @y.384
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %61

; <label>:61:                                     ; preds = %originalBBpart24
  %62 = load i8*, i8** %3, align 8
  %63 = load i32, i32* %4, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65

originalBBalteredBB:                              ; preds = %originalBB, %22
  %66 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %66) #13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %3, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %4, align 4
  %70 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %70) #13
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.25"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.385
  %3 = load i32, i32* @y.386
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.25"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %10, align 8
  store i64 230584300921369395, i64* %11, align 8
  %13 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_(%"class.std::allocator.25"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.385
  %18 = load i32, i32* @y.386
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.25"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %25, align 8
  store i64 230584300921369395, i64* %26, align 8
  %28 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_(%"class.std::allocator.25"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.25"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.26"* %6, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1) %8) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_(%"class.std::allocator.25"* dereferenceable(1)) #2 comdat align 2 {
  %2 = load i32, i32* @x.389
  %3 = load i32, i32* @y.390
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %10, align 8
  %11 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %10, align 8
  %12 = bitcast %"class.std::allocator.25"* %11 to %"class.__gnu_cxx::new_allocator.26"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %12) #13
  %14 = load i32, i32* @x.389
  %15 = load i32, i32* @y.390
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %22, align 8
  %23 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %22, align 8
  %24 = bitcast %"class.std::allocator.25"* %23 to %"class.__gnu_cxx::new_allocator.26"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %24) #13
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret i64 230584300921369395
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %1, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.395
  %4 = load i32, i32* @y.396
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  %12 = alloca %"class.std::allocator.25"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %11, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %12, align 8
  %15 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %11, align 8
  %16 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %15 to %"class.std::allocator.25"*
  %17 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %12, align 8
  call void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.25"* %16, %"class.std::allocator.25"* dereferenceable(1) %17) #13
  %18 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %19 = load i32, i32* @x.395
  %20 = load i32, i32* @y.396
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %18)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %originalBBpart2
  ret void

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %13, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %14, align 4
  %32 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %15 to %"class.std::allocator.25"*
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %32) #13
  br label %33

; <label>:33:                                     ; preds = %28
  %34 = load i8*, i8** %13, align 8
  %35 = load i32, i32* %14, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

originalBBalteredBB:                              ; preds = %originalBB, %2
  %38 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  %39 = alloca %"class.std::allocator.25"*, align 8
  %40 = alloca i8*
  %41 = alloca i32
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %38, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %39, align 8
  %42 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %38, align 8
  %43 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %42 to %"class.std::allocator.25"*
  %44 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %39, align 8
  call void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.25"* %43, %"class.std::allocator.25"* dereferenceable(1) %44) #13
  %45 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.397
  %4 = load i32, i32* @y.398
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.24"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call %"class.std::vector.7"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.24"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %16 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %17, i32 0, i32 0
  store %"class.std::vector.7"* %15, %"class.std::vector.7"** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load %"class.std::vector.7"*, %"class.std::vector.7"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %23 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %"class.std::vector.7"* %22, %"class.std::vector.7"** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.7"*, %"class.std::vector.7"** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %32 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %33, i32 0, i32 2
  store %"class.std::vector.7"* %31, %"class.std::vector.7"** %34, align 8
  %35 = load i32, i32* @x.397
  %36 = load i32, i32* @y.398
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.24"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call %"class.std::vector.7"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.24"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %48 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %49, i32 0, i32 0
  store %"class.std::vector.7"* %47, %"class.std::vector.7"** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %51 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load %"class.std::vector.7"*, %"class.std::vector.7"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %55 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %56, i32 0, i32 1
  store %"class.std::vector.7"* %54, %"class.std::vector.7"** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %58 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load %"class.std::vector.7"*, %"class.std::vector.7"** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %64 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %65, i32 0, i32 2
  store %"class.std::vector.7"* %63, %"class.std::vector.7"** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %3 to %"class.std::allocator.25"*
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %4) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.403
  %4 = load i32, i32* @y.404
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.24"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.403
  %17 = load i32, i32* @y.404
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.403
  %26 = load i32, i32* @y.404
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %33 to %"class.std::allocator.25"*
  %35 = load i64, i64* %12, align 8
  %36 = call %"class.std::vector.7"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1) %34, i64 %35)
  %37 = load i32, i32* @x.403
  %38 = load i32, i32* @y.404
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = phi %"class.std::vector.7"* [ %36, %originalBBpart24 ], [ null, %45 ]
  ret %"class.std::vector.7"* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"struct.std::_Vector_base.24"*, align 8
  %49 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %48, align 8
  store i64 %1, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %48, align 8
  %51 = load i64, i64* %49, align 8
  %52 = icmp ne i64 %51, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %53 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %53 to %"class.std::allocator.25"*
  %55 = load i64, i64* %12, align 8
  %56 = call %"class.std::vector.7"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1) %54, i64 %55)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.7"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %6, i64 %7, i8* null)
  ret %"class.std::vector.7"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.407
  %5 = load i32, i32* @y.408
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %15) #13
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.407
  %20 = load i32, i32* @y.408
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28

; <label>:27:                                     ; preds = %originalBBpart2
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i64, i64* %13, align 8
  %30 = mul i64 %29, 40
  %31 = call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to %"class.std::vector.7"*
  ret %"class.std::vector.7"* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %33 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %33, align 8
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %35, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %33, align 8
  %37 = load i64, i64* %34, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %36) #13
  %39 = icmp ugt i64 %37, %38
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.7"*, i64, %"class.std::vector.7"* dereferenceable(40), %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.7"*, align 8
  %8 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %7, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %8, align 8
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.7"*, %"class.std::vector.7"** %7, align 8
  %12 = call %"class.std::vector.7"* @_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.7"* %9, i64 %10, %"class.std::vector.7"* dereferenceable(40) %11)
  ret %"class.std::vector.7"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %3 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %4 to %"class.std::allocator.25"*
  ret %"class.std::allocator.25"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.7"*, i64, %"class.std::vector.7"* dereferenceable(40)) #0 comdat {
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.7"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.7"*, %"class.std::vector.7"** %6, align 8
  %11 = call %"class.std::vector.7"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.7"* %8, i64 %9, %"class.std::vector.7"* dereferenceable(40) %10)
  ret %"class.std::vector.7"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.7"*, i64, %"class.std::vector.7"* dereferenceable(40)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.7"*, align 8
  %7 = alloca %"class.std::vector.7"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %6, align 8
  %10 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  store %"class.std::vector.7"* %10, %"class.std::vector.7"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %20, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %67

; <label>:14:                                     ; preds = %11
  %15 = load %"class.std::vector.7"*, %"class.std::vector.7"** %7, align 8
  %16 = invoke %"class.std::vector.7"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.7"* dereferenceable(40) %15)
          to label %17 unwind label %25

; <label>:17:                                     ; preds = %14
  %18 = load %"class.std::vector.7"*, %"class.std::vector.7"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_(%"class.std::vector.7"* %16, %"class.std::vector.7"* dereferenceable(40) %18)
          to label %19 unwind label %25

; <label>:19:                                     ; preds = %17
  br label %20

; <label>:20:                                     ; preds = %19
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, -1
  store i64 %22, i64* %5, align 8
  %23 = load %"class.std::vector.7"*, %"class.std::vector.7"** %7, align 8
  %24 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %23, i32 1
  store %"class.std::vector.7"* %24, %"class.std::vector.7"** %7, align 8
  br label %11

; <label>:25:                                     ; preds = %17, %14
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %8, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %9, align 4
  br label %29

; <label>:29:                                     ; preds = %25
  %30 = load i32, i32* @x.415
  %31 = load i32, i32* @y.416
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %29, %originalBBalteredBB
  %38 = load i8*, i8** %8, align 8
  %39 = call i8* @__cxa_begin_catch(i8* %38) #13
  %40 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %41 = load %"class.std::vector.7"*, %"class.std::vector.7"** %7, align 8
  %42 = load i32, i32* @x.415
  %43 = load i32, i32* @y.416
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.7"* %40, %"class.std::vector.7"* %41)
          to label %50 unwind label %69

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i32, i32* @x.415
  %52 = load i32, i32* @y.416
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %59 = load i32, i32* @x.415
  %60 = load i32, i32* @y.416
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @__cxa_rethrow() #14
          to label %99 unwind label %69

; <label>:67:                                     ; preds = %11
  %68 = load %"class.std::vector.7"*, %"class.std::vector.7"** %7, align 8
  ret %"class.std::vector.7"* %68

; <label>:69:                                     ; preds = %originalBBpart24, %originalBBpart2
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %8, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %73 unwind label %96

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.415
  %75 = load i32, i32* @y.416
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = load i32, i32* @x.415
  %83 = load i32, i32* @y.416
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %91
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:91:                                     ; preds = %originalBBpart28
  %92 = load i8*, i8** %8, align 8
  %93 = load i32, i32* %9, align 4
  %94 = insertvalue { i8*, i32 } undef, i8* %92, 0
  %95 = insertvalue { i8*, i32 } %94, i32 %93, 1
  resume { i8*, i32 } %95

; <label>:96:                                     ; preds = %69
  %97 = landingpad { i8*, i32 }
          catch i8* null
  %98 = extractvalue { i8*, i32 } %97, 0
  call void @__clang_call_terminate(i8* %98) #11
  unreachable

; <label>:99:                                     ; preds = %originalBBpart24
  %100 = load i32, i32* @x.415
  %101 = load i32, i32* @y.416
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %99, %originalBB10alteredBB
  %108 = load i32, i32* @x.415
  %109 = load i32, i32* @y.416
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %29
  %116 = load i8*, i8** %8, align 8
  %117 = call i8* @__cxa_begin_catch(i8* %116) #13
  %118 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %119 = load %"class.std::vector.7"*, %"class.std::vector.7"** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %99
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_(%"class.std::vector.7"*, %"class.std::vector.7"* dereferenceable(40)) #0 comdat {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = bitcast %"class.std::vector.7"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.7"*
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  call void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.7"* %7, %"class.std::vector.7"* dereferenceable(40) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.7"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.7"* dereferenceable(40)) #2 comdat {
  %2 = load i32, i32* @x.419
  %3 = load i32, i32* @y.420
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %10, align 8
  %11 = load %"class.std::vector.7"*, %"class.std::vector.7"** %10, align 8
  %12 = load i32, i32* @x.419
  %13 = load i32, i32* @y.420
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.7"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %20, align 8
  %21 = load %"class.std::vector.7"*, %"class.std::vector.7"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.7"*, %"class.std::vector.7"*) #0 comdat {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_(%"class.std::vector.7"* %5, %"class.std::vector.7"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.7"*, %"class.std::vector.7"* dereferenceable(40)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca %"class.std::allocator.43", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  %12 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %13 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %14 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %15 = bitcast %"class.std::vector.7"* %14 to %"struct.std::_Bvector_base"*
  %16 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"* %15)
  %17 = call dereferenceable(1) %"class.std::allocator.8"* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_(%"class.std::allocator.8"* dereferenceable(1) %16)
  call void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.43"* %5, %"class.std::allocator.8"* dereferenceable(1) %17) #13
  invoke void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %13, %"class.std::allocator.43"* dereferenceable(1) %5)
          to label %18 unwind label %62

; <label>:18:                                     ; preds = %2
  call void @_ZNSaIbED2Ev(%"class.std::allocator.43"* %5) #13
  %19 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %20 = invoke i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.7"* %19)
          to label %21 unwind label %66

; <label>:21:                                     ; preds = %18
  invoke void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.7"* %12, i64 %20)
          to label %22 unwind label %66

; <label>:22:                                     ; preds = %21
  %23 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %24 = invoke { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.7"* %23)
          to label %25 unwind label %66

; <label>:25:                                     ; preds = %22
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %27 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %26, i32 0, i32 0
  %28 = extractvalue { i64*, i32 } %24, 0
  store i64* %28, i64** %27, align 8
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %26, i32 0, i32 1
  %30 = extractvalue { i64*, i32 } %24, 1
  store i32 %30, i32* %29, align 8
  %31 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %32 = invoke { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.7"* %31)
          to label %33 unwind label %66

; <label>:33:                                     ; preds = %25
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %32, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %32, 1
  store i32 %38, i32* %37, align 8
  %39 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %40 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %39, i32 0, i32 0
  %41 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %40 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %42 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  %44 = bitcast %"struct.std::_Bit_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false)
  %45 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %45, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.7"* %12, i64* %47, i32 %49, i64* %52, i32 %54, %"struct.std::_Bit_iterator"* byval align 8 %10)
          to label %56 unwind label %66

; <label>:56:                                     ; preds = %33
  %57 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %57, i32 0, i32 0
  %59 = extractvalue { i64*, i32 } %55, 0
  store i64* %59, i64** %58, align 8
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %57, i32 0, i32 1
  %61 = extractvalue { i64*, i32 } %55, 1
  store i32 %61, i32* %60, align 8
  ret void

; <label>:62:                                     ; preds = %2
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %6, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %7, align 4
  call void @_ZNSaIbED2Ev(%"class.std::allocator.43"* %5) #13
  br label %88

; <label>:66:                                     ; preds = %33, %25, %22, %21, %18
  %67 = load i32, i32* @x.423
  %68 = load i32, i32* @y.424
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %66, %originalBBalteredBB
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %6, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %7, align 4
  %78 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %79 = load i32, i32* @x.423
  %80 = load i32, i32* @y.424
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %78)
          to label %87 unwind label %93

; <label>:87:                                     ; preds = %originalBBpart2
  br label %88

; <label>:88:                                     ; preds = %87, %62
  %89 = load i8*, i8** %6, align 8
  %90 = load i32, i32* %7, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  resume { i8*, i32 } %92

; <label>:93:                                     ; preds = %originalBBpart2
  %94 = load i32, i32* @x.423
  %95 = load i32, i32* @y.424
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %93, %originalBB1alteredBB
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  call void @__clang_call_terminate(i8* %103) #11
  %104 = load i32, i32* @x.423
  %105 = load i32, i32* @y.424
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %66
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %6, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %7, align 4
  %115 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %93
  %116 = landingpad { i8*, i32 }
          catch i8* null
  %117 = extractvalue { i8*, i32 } %116, 0
  call void @__clang_call_terminate(i8* %117) #11
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_(%"class.std::allocator.8"* dereferenceable(1)) #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  ret %"class.std::allocator.8"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %3 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"class.std::allocator.8"*
  ret %"class.std::allocator.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.43"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.43"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.43"* %0, %"class.std::allocator.43"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"class.std::allocator.43"*, %"class.std::allocator.43"** %3, align 8
  %6 = bitcast %"class.std::allocator.43"* %5 to %"class.__gnu_cxx::new_allocator.44"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.44"* %6) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.7"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.7"*, align 8
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %6 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.7"* %5)
  %7 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  %9 = extractvalue { i64*, i32 } %6, 0
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  %11 = extractvalue { i64*, i32 } %6, 1
  store i32 %11, i32* %10, align 8
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  %13 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.7"* %5)
  %14 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  %16 = extractvalue { i64*, i32 } %13, 0
  store i64* %16, i64** %15, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  %18 = extractvalue { i64*, i32 } %13, 1
  store i32 %18, i32* %17, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %20 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %12, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %19)
  ret i64 %20
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.7"*, i64*, i32, i64*, i32, %"struct.std::_Bit_iterator"* byval align 8) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"class.std::vector.7"*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %3, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %4, i32* %20, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %10, align 8
  %21 = load %"class.std::vector.7"*, %"class.std::vector.7"** %10, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %23 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %26 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %29 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = call i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64* %24, i64* %27, i64* %30)
  store i64* %31, i64** %11, align 8
  %32 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %33 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %12, i64* %34, i32 0)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i64*, i64** %11, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %37, i32 0)
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64* %40, i32 %42, i64* %45, i32 %47, i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  ret { i64*, i32 } %60
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.7"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  %4 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %5 = bitcast %"class.std::vector.7"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %10 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %2, i64* %11, i32 0)
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %13 = load { i64*, i32 }, { i64*, i32 }* %12, align 8
  ret { i64*, i32 } %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.7"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.437
  %3 = load i32, i32* @y.438
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_const_iterator", align 8
  %11 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %11, align 8
  %12 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %13 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %14 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %14 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %15, i32 0, i32 1
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %10, %"struct.std::_Bit_iterator"* dereferenceable(16) %16)
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %10 to { i64*, i32 }*
  %18 = load { i64*, i32 }, { i64*, i32 }* %17, align 8
  %19 = load i32, i32* @x.437
  %20 = load i32, i32* @y.438
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"struct.std::_Bit_const_iterator", align 8
  %28 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %28, align 8
  %29 = load %"class.std::vector.7"*, %"class.std::vector.7"** %28, align 8
  %30 = bitcast %"class.std::vector.7"* %29 to %"struct.std::_Bvector_base"*
  %31 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %31 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %32, i32 0, i32 1
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %27, %"struct.std::_Bit_iterator"* dereferenceable(16) %33)
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %27 to { i64*, i32 }*
  %35 = load { i64*, i32 }, { i64*, i32 }* %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16), %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #2 comdat {
  %3 = load i32, i32* @x.439
  %4 = load i32, i32* @y.440
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %12 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %11, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %12, align 8
  %13 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %11, align 8
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %13, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %12, align 8
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %16, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = ptrtoint i64* %15 to i64
  %20 = ptrtoint i64* %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 8
  %23 = mul nsw i64 64, %22
  %24 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %11, align 8
  %25 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = add nsw i64 %23, %27
  %29 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %12, align 8
  %30 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = sub nsw i64 %28, %32
  %34 = load i32, i32* @x.439
  %35 = load i32, i32* @y.440
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %33

originalBBalteredBB:                              ; preds = %originalBB, %2
  %42 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %43 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %42, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %43, align 8
  %44 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %42, align 8
  %45 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %43, align 8
  %48 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %47, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = ptrtoint i64* %46 to i64
  %51 = ptrtoint i64* %49 to i64
  %_ = sub i64 0, %50
  %gen = add i64 %_, %51
  %_1 = sub i64 0, %50
  %gen2 = add i64 %_1, %51
  %_3 = shl i64 %50, %51
  %_4 = sub i64 %50, %51
  %gen5 = mul i64 %_4, %51
  %_6 = sub i64 %50, %51
  %gen7 = mul i64 %_6, %51
  %_8 = sub i64 0, %50
  %gen9 = add i64 %_8, %51
  %52 = sub i64 %50, %51
  %_10 = shl i64 %52, 8
  %_11 = sub i64 %52, 8
  %gen12 = mul i64 %_11, 8
  %53 = sdiv exact i64 %52, 8
  %_13 = shl i64 64, %53
  %_14 = sub i64 0, 64
  %gen15 = add i64 %_14, %53
  %_16 = sub i64 64, %53
  %gen17 = mul i64 %_16, %53
  %_18 = shl i64 64, %53
  %_19 = sub i64 0, 64
  %gen20 = add i64 %_19, %53
  %_21 = sub i64 64, %53
  %gen22 = mul i64 %_21, %53
  %_23 = sub i64 0, 64
  %gen24 = add i64 %_23, %53
  %54 = mul nsw i64 64, %53
  %55 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %42, align 8
  %56 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %_25 = sub i64 %54, %58
  %gen26 = mul i64 %_25, %58
  %_27 = shl i64 %54, %58
  %_28 = sub i64 0, %54
  %gen29 = add i64 %_28, %58
  %59 = add nsw i64 %54, %58
  %60 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %43, align 8
  %61 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %_30 = shl i64 %59, %63
  %_31 = sub i64 0, %59
  %gen32 = add i64 %_31, %63
  %64 = sub nsw i64 %59, %63
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = load i32, i32* @x.441
  %5 = load i32, i32* @y.442
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  store i64* %2, i64** %14, align 8
  %15 = load i64*, i64** %12, align 8
  %16 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %15)
  %17 = load i64*, i64** %13, align 8
  %18 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %17)
  %19 = load i64*, i64** %14, align 8
  %20 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %16, i64* %18, i64* %19)
  %21 = load i32, i32* @x.441
  %22 = load i32, i32* @y.442
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  store i64* %0, i64** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  %32 = load i64*, i64** %29, align 8
  %33 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %32)
  %34 = load i64*, i64** %30, align 8
  %35 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %34)
  %36 = load i64*, i64** %31, align 8
  %37 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %33, i64* %35, i64* %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %1, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %3, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %4, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %5, i32* %24, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64* %29, i32 %31)
  %33 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = extractvalue { i64*, i32 } %32, 0
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = extractvalue { i64*, i32 } %32, 1
  store i32 %37, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %14 to i8*
  %39 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %55, i32 %57, i64* %60, i32 %62, i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %75 = load { i64*, i32 }, { i64*, i32 }* %74, align 8
  ret { i64*, i32 } %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"*, i64*, i32) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = load i32, i32* @x.447
  %5 = load i32, i32* @y.448
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  store i64* %2, i64** %14, align 8
  %15 = load i64*, i64** %12, align 8
  %16 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %15)
  %17 = load i64*, i64** %13, align 8
  %18 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %17)
  %19 = load i64*, i64** %14, align 8
  %20 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %19)
  %21 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %16, i64* %18, i64* %20)
  %22 = call i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8) %14, i64* %21)
  %23 = load i32, i32* @x.447
  %24 = load i32, i32* @y.448
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %22

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i64*, align 8
  store i64* %0, i64** %31, align 8
  store i64* %1, i64** %32, align 8
  store i64* %2, i64** %33, align 8
  %34 = load i64*, i64** %31, align 8
  %35 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %34)
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %36)
  %38 = load i64*, i64** %33, align 8
  %39 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %38)
  %40 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %35, i64* %37, i64* %39)
  %41 = call i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8) %33, i64* %40)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPmET_S1_(i64*) #2 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8), i64*) #2 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmET_S1_(i64*) #2 comdat {
  %2 = load i32, i32* @x.455
  %3 = load i32, i32* @y.456
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64*, align 8
  store i64* %0, i64** %10, align 8
  %11 = load i64*, i64** %10, align 8
  %12 = load i32, i32* @x.455
  %13 = load i32, i32* @y.456
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i64*, align 8
  store i64* %0, i64** %20, align 8
  %21 = load i64*, i64** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #2 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = ptrtoint i64* %8 to i64
  %11 = ptrtoint i64* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load i64*, i64** %6, align 8
  %18 = bitcast i64* %17 to i8*
  %19 = load i64*, i64** %4, align 8
  %20 = bitcast i64* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 8, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load i32, i32* @x.457
  %25 = load i32, i32* @y.458
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = load i64*, i64** %6, align 8
  %33 = load i64, i64* %7, align 8
  %34 = getelementptr inbounds i64, i64* %32, i64 %33
  %35 = load i32, i32* @x.457
  %36 = load i32, i32* @y.458
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %34

originalBBalteredBB:                              ; preds = %originalBB, %23
  %43 = load i64*, i64** %6, align 8
  %44 = load i64, i64* %7, align 8
  %45 = getelementptr inbounds i64, i64* %43, i64 %44
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_const_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %1, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %2, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %3, i32* %23, align 8
  %24 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 0
  store i64* %4, i64** %25, align 8
  %26 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 1
  store i32 %5, i32* %26, align 8
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %28 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 16, i32 8, i1 false)
  %29 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %31, i32 %33)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = extractvalue { i64*, i32 } %34, 0
  store i64* %37, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = extractvalue { i64*, i32 } %34, 1
  store i32 %39, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %15 to i8*
  %41 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 16, i32 8, i1 false)
  %42 = bitcast %"struct.std::_Bit_const_iterator"* %15 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %44, i32 %46)
  %48 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = extractvalue { i64*, i32 } %47, 0
  store i64* %50, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = extractvalue { i64*, i32 } %47, 1
  store i32 %52, i32* %51, align 8
  %53 = bitcast %"struct.std::_Bit_iterator"* %17 to i8*
  %54 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false)
  %55 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %57, i32 %59)
  %61 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = extractvalue { i64*, i32 } %60, 0
  store i64* %63, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = extractvalue { i64*, i32 } %60, 1
  store i32 %65, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %68, i32 %70, i64* %73, i32 %75, i64* %78, i32 %80)
  %82 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  %84 = extractvalue { i64*, i32 } %81, 0
  store i64* %84, i64** %83, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  %86 = extractvalue { i64*, i32 } %81, 1
  store i32 %86, i32* %85, align 8
  %87 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %88 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = call { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16) %10, i64* %89, i32 %91)
  %93 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 0
  %95 = extractvalue { i64*, i32 } %92, 0
  store i64* %95, i64** %94, align 8
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 1
  %97 = extractvalue { i64*, i32 } %92, 1
  store i32 %97, i32* %96, align 8
  %98 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %99 = load { i64*, i32 }, { i64*, i32 }* %98, align 8
  ret { i64*, i32 } %99
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64*, i32) #2 comdat {
  %3 = load i32, i32* @x.461
  %4 = load i32, i32* @y.462
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %11 to i8*
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %19 = load { i64*, i32 }, { i64*, i32 }* %18, align 8
  %20 = load i32, i32* @x.461
  %21 = load i32, i32* @y.462
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %19

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"struct.std::_Bit_const_iterator", align 8
  %29 = alloca %"struct.std::_Bit_const_iterator", align 8
  %30 = bitcast %"struct.std::_Bit_const_iterator"* %29 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %1, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bit_const_iterator"* %28 to i8*
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 16, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %28 to { i64*, i32 }*
  %36 = load { i64*, i32 }, { i64*, i32 }* %35, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16), i64*, i32) #2 comdat {
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = alloca %"struct.std::_Bit_iterator"*, align 8
  %7 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  store i64* %1, i64** %8, align 8
  %9 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  store i32 %2, i32* %9, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %6, align 8
  %10 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  %11 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  %12 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %13 = load { i64*, i32 }, { i64*, i32 }* %12, align 8
  ret { i64*, i32 } %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  store i8 0, i8* %11, align 1
  %24 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %29 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64* %32, i32 %34, i64* %37, i32 %39, i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64*, i32) #2 comdat {
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64*, i32) #2 comdat {
  %3 = load i32, i32* @x.469
  %4 = load i32, i32* @y.470
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  %17 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  %18 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %19 = load { i64*, i32 }, { i64*, i32 }* %18, align 8
  %20 = load i32, i32* @x.469
  %21 = load i32, i32* @y.470
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %19

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %1, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bit_iterator"* %28 to i8*
  %34 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 16, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %36 = load { i64*, i32 }, { i64*, i32 }* %35, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::_Bit_reference", align 8
  %13 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %2, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %3, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %4, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %5, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %23 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %24 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %22, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %23)
  store i64 %24, i64* %11, align 8
  br label %25

; <label>:25:                                     ; preds = %originalBBpart2, %6
  %26 = load i64, i64* %11, align 8
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %58

; <label>:28:                                     ; preds = %25
  %29 = call zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"* %8)
  %30 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %10)
  %31 = bitcast %"struct.std::_Bit_reference"* %12 to { i64*, i64 }*
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 0
  %33 = extractvalue { i64*, i64 } %30, 0
  store i64* %33, i64** %32, align 8
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 1
  %35 = extractvalue { i64*, i64 } %30, 1
  store i64 %35, i64* %34, align 8
  %36 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %12, i1 zeroext %29)
  %37 = call dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"* %8)
  %38 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %10)
  br label %39

; <label>:39:                                     ; preds = %28
  %40 = load i32, i32* @x.471
  %41 = load i32, i32* @y.472
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %39, %originalBBalteredBB
  %48 = load i64, i64* %11, align 8
  %49 = add nsw i64 %48, -1
  store i64 %49, i64* %11, align 8
  %50 = load i32, i32* @x.471
  %51 = load i32, i32* @y.472
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:58:                                     ; preds = %25
  %59 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  %60 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 16, i32 8, i1 false)
  %61 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %62 = load { i64*, i32 }, { i64*, i32 }* %61, align 8
  ret { i64*, i32 } %62

originalBBalteredBB:                              ; preds = %originalBB, %39
  %63 = load i64, i64* %11, align 8
  %_ = sub i64 %63, -1
  %gen = mul i64 %_, -1
  %_1 = shl i64 %63, -1
  %64 = add nsw i64 %63, -1
  store i64 %64, i64* %11, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %3 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %3, i64* %7, i64 %12)
  %13 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %3)
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference", align 8
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  %4 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %5 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %2, i64* %7, i64 %12)
  %13 = bitcast %"struct.std::_Bit_reference"* %2 to { i64*, i64 }*
  %14 = load { i64*, i64 }, { i64*, i64 }* %13, align 8
  ret { i64*, i64 } %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"*, i1 zeroext) #2 comdat align 2 {
  %3 = load i32, i32* @x.477
  %4 = load i32, i32* @y.478
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_reference"*, align 8
  %12 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %11, align 8
  %13 = zext i1 %1 to i8
  store i8 %13, i8* %12, align 1
  %14 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %11, align 8
  %15 = load i8, i8* %12, align 1
  %16 = trunc i8 %15 to i1
  %17 = load i32, i32* @x.477
  %18 = load i32, i32* @y.478
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %32

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %14, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %14, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  %31 = or i64 %30, %27
  store i64 %31, i64* %29, align 8
  br label %40

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %14, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, -1
  %36 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %14, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, %35
  store i64 %39, i64* %37, align 8
  br label %40

; <label>:40:                                     ; preds = %32, %25
  %41 = load i32, i32* @x.477
  %42 = load i32, i32* @y.478
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i32, i32* @x.477
  %50 = load i32, i32* @y.478
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %"struct.std::_Bit_reference"* %14

originalBBalteredBB:                              ; preds = %originalBB, %2
  %57 = alloca %"struct.std::_Bit_reference"*, align 8
  %58 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %57, align 8
  %59 = zext i1 %1 to i8
  store i8 %59, i8* %58, align 1
  %60 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %57, align 8
  %61 = load i8, i8* %58, align 1
  %62 = trunc i8 %61 to i1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %2, align 8
  %3 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %6, %8
  %10 = icmp ne i64 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %5, 63
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i32 1
  store i64* %12, i64** %10, align 8
  br label %13

; <label>:13:                                     ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_iterator"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %3, align 8
  store %"struct.std::_Bit_iterator"* %1, %"struct.std::_Bit_iterator"** %4, align 8
  %5 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %3, align 8
  %6 = bitcast %"struct.std::_Bit_const_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %6, i64* %10, i32 %14)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_(%"class.std::vector.7"*, %"class.std::vector.7"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %28, %2
  %6 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %7 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %8 = icmp ne %"class.std::vector.7"* %6, %7
  br i1 %8, label %9, label %31

; <label>:9:                                      ; preds = %5
  %10 = load i32, i32* @x.491
  %11 = load i32, i32* @y.492
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %19 = call %"class.std::vector.7"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.7"* dereferenceable(40) %18)
  call void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.7"* %19)
  %20 = load i32, i32* @x.491
  %21 = load i32, i32* @y.492
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %30 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %29, i32 1
  store %"class.std::vector.7"* %30, %"class.std::vector.7"** %3, align 8
  br label %5

; <label>:31:                                     ; preds = %5
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %9
  %32 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %33 = call %"class.std::vector.7"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.7"* dereferenceable(40) %32)
  call void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.7"* %33)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.7"*) #0 comdat {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %3)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.24"*, %"class.std::vector.7"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.495
  %5 = load i32, i32* @y.496
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.24"*, align 8
  %13 = alloca %"class.std::vector.7"*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %12, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %12, align 8
  %16 = load %"class.std::vector.7"*, %"class.std::vector.7"** %13, align 8
  %17 = icmp ne %"class.std::vector.7"* %16, null
  %18 = load i32, i32* @x.495
  %19 = load i32, i32* @y.496
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %47

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.495
  %28 = load i32, i32* @y.496
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %15, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %35 to %"class.std::allocator.25"*
  %37 = load %"class.std::vector.7"*, %"class.std::vector.7"** %13, align 8
  %38 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1) %36, %"class.std::vector.7"* %37, i64 %38)
  %39 = load i32, i32* @x.495
  %40 = load i32, i32* @y.496
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %48 = alloca %"struct.std::_Vector_base.24"*, align 8
  %49 = alloca %"class.std::vector.7"*, align 8
  %50 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %48, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %49, align 8
  store i64 %2, i64* %50, align 8
  %51 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %48, align 8
  %52 = load %"class.std::vector.7"*, %"class.std::vector.7"** %49, align 8
  %53 = icmp ne %"class.std::vector.7"* %52, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %54 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %15, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %54 to %"class.std::allocator.25"*
  %56 = load %"class.std::vector.7"*, %"class.std::vector.7"** %13, align 8
  %57 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1) %55, %"class.std::vector.7"* %56, i64 %57)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1), %"class.std::vector.7"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %4, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.26"* %8, %"class.std::vector.7"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.26"*, %"class.std::vector.7"*, i64) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %9 = bitcast %"class.std::vector.7"* %8 to i8*
  call void @_ZdlPv(i8* %9) #13
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E(%"class.std::vector.7"*, %"class.std::vector.7"*, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %4, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %5, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %6, align 8
  %7 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.7"* %7, %"class.std::vector.7"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEEC2Ev(%"struct.std::_Vector_base.29"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.503
  %3 = load i32, i32* @y.504
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.29"*, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %10, align 8
  %11 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12)
  %13 = load i32, i32* @x.503
  %14 = load i32, i32* @y.504
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base.29"*, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %21, align 8
  %22 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %22, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.505
  %3 = load i32, i32* @y.506
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %13 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %14 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %13 to %"class.std::allocator.30"*
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.30"* %14) #13
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = load i32, i32* @x.505
  %17 = load i32, i32* @y.506
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15)
          to label %24 unwind label %25

; <label>:24:                                     ; preds = %originalBBpart2
  ret void

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %11, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %12, align 4
  %29 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %13 to %"class.std::allocator.30"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %29) #13
  br label %30

; <label>:30:                                     ; preds = %25
  %31 = load i8*, i8** %11, align 8
  %32 = load i32, i32* %12, align 4
  %33 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

originalBBalteredBB:                              ; preds = %originalBB, %1
  %35 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %35, align 8
  %38 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %35, align 8
  %39 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %38 to %"class.std::allocator.30"*
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.30"* %39) #13
  %40 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %38 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.507
  %3 = load i32, i32* @y.508
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  store i32* null, i32** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 1
  store i32* null, i32** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 2
  store i32* null, i32** %14, align 8
  %15 = load i32, i32* @x.507
  %16 = load i32, i32* @y.508
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 0
  store i32* null, i32** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 1
  store i32* null, i32** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 2
  store i32* null, i32** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TableIndices, align 4
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %7 = load %class.TableBase*, %class.TableBase** %3, align 8
  %8 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  %10 = bitcast %class.TableIndices* %9 to i8*
  %11 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  %12 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %7)
  store i32 %12, i32* %5, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %64

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %17 = load double*, double** %16, align 8
  %18 = icmp ne double* %17, null
  br i1 %18, label %19, label %58

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @x.509
  %21 = load i32, i32* @y.510
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %29 = load double*, double** %28, align 8
  %30 = icmp eq double* %29, null
  %31 = load i32, i32* @x.509
  %32 = load i32, i32* @y.510
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %41, label %39

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = bitcast double* %29 to i8*
  call void @_ZdaPv(i8* %40) #16
  br label %41

; <label>:41:                                     ; preds = %39, %originalBBpart2
  %42 = load i32, i32* @x.509
  %43 = load i32, i32* @y.510
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* @x.509
  %51 = load i32, i32* @y.510
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24, %15
  %59 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* null, double** %59, align 8
  %60 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 0, i32* %60, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %61 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  %62 = bitcast %class.TableIndices* %61 to i8*
  %63 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 4, i1 false)
  br label %110

; <label>:64:                                     ; preds = %2
  %65 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = load i32, i32* %5, align 4
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %109

; <label>:69:                                     ; preds = %64
  %70 = load i32, i32* @x.509
  %71 = load i32, i32* @y.510
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %79 = load double*, double** %78, align 8
  %80 = icmp ne double* %79, null
  %81 = load i32, i32* @x.509
  %82 = load i32, i32* @y.510
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %80, label %89, label %96

; <label>:89:                                     ; preds = %originalBBpart28
  %90 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %91 = load double*, double** %90, align 8
  %92 = icmp eq double* %91, null
  br i1 %92, label %95, label %93

; <label>:93:                                     ; preds = %89
  %94 = bitcast double* %91 to i8*
  call void @_ZdaPv(i8* %94) #16
  br label %95

; <label>:95:                                     ; preds = %93, %89
  br label %96

; <label>:96:                                     ; preds = %95, %originalBBpart28
  %97 = load i32, i32* %5, align 4
  %98 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  %102 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %101, i64 8)
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = extractvalue { i64, i1 } %102, 0
  %105 = select i1 %103, i64 -1, i64 %104
  %106 = call i8* @_Znam(i64 %105) #15
  %107 = bitcast i8* %106 to double*
  %108 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* %107, double** %108, align 8
  br label %109

; <label>:109:                                    ; preds = %96, %64
  call void @_ZN9TableBaseILi2EdE12reset_valuesEv(%class.TableBase* %7)
  br label %110

; <label>:110:                                    ; preds = %109, %58
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %111 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %112 = load double*, double** %111, align 8
  %113 = icmp eq double* %112, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  %114 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %115 = load double*, double** %114, align 8
  %116 = icmp ne double* %115, null
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices*, i32, i32) unnamed_addr #2 comdat align 2 {
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.TableIndices* %0, %class.TableIndices** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %8 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %9 = load i32, i32* %5, align 4
  %10 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %11 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %10, i32 0, i32 0
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %11, i64 0, i64 0
  store i32 %9, i32* %12, align 4
  %13 = load i32, i32* %6, align 4
  %14 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %15 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %14, i32 0, i32 0
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  store i32 %13, i32* %16, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase*) #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %originalBBpart25, %1
  %7 = load i32, i32* @x.513
  %8 = load i32, i32* @y.514
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = load i32, i32* %4, align 4
  %16 = icmp ult i32 %15, 2
  %17 = load i32, i32* @x.513
  %18 = load i32, i32* @y.514
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %51

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 3
  %27 = bitcast %class.TableIndices* %26 to %class.TableIndicesBase*
  %28 = load i32, i32* %4, align 4
  %29 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %27, i32 %28)
  %30 = load i32, i32* %3, align 4
  %31 = mul i32 %30, %29
  store i32 %31, i32* %3, align 4
  br label %32

; <label>:32:                                     ; preds = %25
  %33 = load i32, i32* @x.513
  %34 = load i32, i32* @y.514
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* %4, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %4, align 4
  %43 = load i32, i32* @x.513
  %44 = load i32, i32* @y.514
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart25, label %originalBB1alteredBB

originalBBpart25:                                 ; preds = %originalBB1
  br label %6

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load i32, i32* %3, align 4
  ret i32 %52

originalBBalteredBB:                              ; preds = %originalBB, %6
  %53 = load i32, i32* %4, align 4
  %54 = icmp ult i32 %53, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %55 = load i32, i32* %4, align 4
  %_ = sub i32 0, %55
  %gen = add i32 %_, 1
  %_2 = sub i32 %55, 1
  %gen3 = mul i32 %_2, 1
  %56 = add i32 %55, 1
  store i32 %56, i32* %4, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices*) unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @x.515
  %3 = load i32, i32* @y.516
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %10, align 8
  %11 = load %class.TableIndices*, %class.TableIndices** %10, align 8
  %12 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %13 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %14 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %13, i32 0, i32 0
  %15 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 1
  store i32 0, i32* %15, align 4
  %16 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %17 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %16, i32 0, i32 0
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 0
  store i32 0, i32* %18, align 4
  %19 = load i32, i32* @x.515
  %20 = load i32, i32* @y.516
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %27, align 8
  %28 = load %class.TableIndices*, %class.TableIndices** %27, align 8
  %29 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %30 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %31 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %30, i32 0, i32 0
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 1
  store i32 0, i32* %32, align 4
  %33 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %34 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %33, i32 0, i32 0
  %35 = getelementptr inbounds [2 x i32], [2 x i32]* %34, i64 0, i64 0
  store i32 0, i32* %35, align 4
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #7

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE12reset_valuesEv(%class.TableBase*) #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca double, align 8
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %4 = load %class.TableBase*, %class.TableBase** %2, align 8
  %5 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %12

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %class.TableBase, %class.TableBase* %4, i32 0, i32 1
  %9 = load double*, double** %8, align 8
  %10 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %4)
  store double 0.000000e+00, double* %3, align 8
  %11 = call double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double* %9, i32 %10, double* dereferenceable(8) %3)
  br label %12

; <label>:12:                                     ; preds = %7, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #2 comdat align 2 {
  %3 = load i32, i32* @x.519
  %4 = load i32, i32* @y.520
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TableIndicesBase*, align 8
  %12 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.TableIndicesBase*, %class.TableIndicesBase** %11, align 8
  %14 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @x.519
  %20 = load i32, i32* @y.520
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.TableIndicesBase*, align 8
  %28 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.TableIndicesBase*, %class.TableIndicesBase** %27, align 8
  %30 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %29, i32 0, i32 0
  %31 = load i32, i32* %28, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %30, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double*, i32, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i32 %1, i32* %5, align 4
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %8, i32 %9, double* dereferenceable(8) %10)
  %12 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %4, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i32, double* dereferenceable(8)) #2 comdat {
  %4 = load i32, i32* @x.523
  %5 = load i32, i32* @y.524
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca i32, align 4
  %14 = alloca double*, align 8
  %15 = alloca double, align 8
  %16 = alloca i32, align 4
  store double* %0, double** %12, align 8
  store i32 %1, i32* %13, align 4
  store double* %2, double** %14, align 8
  %17 = load double*, double** %14, align 8
  %18 = load double, double* %17, align 8
  store double %18, double* %15, align 8
  %19 = load i32, i32* %13, align 4
  store i32 %19, i32* %16, align 4
  %20 = load i32, i32* @x.523
  %21 = load i32, i32* @y.524
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %34, %originalBBpart2
  %29 = load i32, i32* %16, align 4
  %30 = icmp ugt i32 %29, 0
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %28
  %32 = load double, double* %15, align 8
  %33 = load double*, double** %12, align 8
  store double %32, double* %33, align 8
  br label %34

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* %16, align 4
  %36 = add i32 %35, -1
  store i32 %36, i32* %16, align 4
  %37 = load double*, double** %12, align 8
  %38 = getelementptr inbounds double, double* %37, i32 1
  store double* %38, double** %12, align 8
  br label %28

; <label>:39:                                     ; preds = %28
  %40 = load i32, i32* @x.523
  %41 = load i32, i32* @y.524
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load double*, double** %12, align 8
  %49 = load i32, i32* @x.523
  %50 = load i32, i32* @y.524
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret double* %48

originalBBalteredBB:                              ; preds = %originalBB, %3
  %57 = alloca double*, align 8
  %58 = alloca i32, align 4
  %59 = alloca double*, align 8
  %60 = alloca double, align 8
  %61 = alloca i32, align 4
  store double* %0, double** %57, align 8
  store i32 %1, i32* %58, align 4
  store double* %2, double** %59, align 8
  %62 = load double*, double** %59, align 8
  %63 = load double, double* %62, align 8
  store double %63, double* %60, align 8
  %64 = load i32, i32* %58, align 4
  store i32 %64, i32* %61, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %65 = load double*, double** %12, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE4fillIdEEvPKT_(%class.TableBase*, double*) #0 comdat align 2 {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca double*, align 8
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %class.TableBase*, %class.TableBase** %3, align 8
  %6 = load double*, double** %4, align 8
  %7 = load double*, double** %4, align 8
  %8 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %5)
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds double, double* %7, i64 %9
  %11 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  %12 = load double*, double** %11, align 8
  %13 = call double* @_ZSt4copyIPKdPdET0_T_S4_S3_(double* %6, double* %10, double* %12)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIPKdPdET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__miter_baseIPKdET_S2_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__miter_baseIPKdET_S2_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_(double* %8, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPKdET_S2_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPKdET_S2_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %8, double* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIPKdET_S2_(double*) #2 comdat {
  %2 = load i32, i32* @x.531
  %3 = load i32, i32* @y.532
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca double*, align 8
  store double* %0, double** %10, align 8
  %11 = load double*, double** %10, align 8
  %12 = load i32, i32* @x.531
  %13 = load i32, i32* @y.532
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca double*, align 8
  store double* %0, double** %20, align 8
  %21 = load double*, double** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPKdET_S2_(double*) #2 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"*) #2 comdat align 2 {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to %"struct.std::_Vector_base.12"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Point*, %class.Point** %7, align 8
  %9 = bitcast %"class.std::vector.11"* %3 to %"struct.std::_Vector_base.12"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Point*, %class.Point** %12, align 8
  %14 = ptrtoint %class.Point* %8 to i64
  %15 = ptrtoint %class.Point* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.11"*, %class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.52", align 8
  %6 = alloca %"class.std::vector.11"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %class.Point*, align 8
  %9 = alloca %class.Point, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.52", align 8
  %12 = alloca %class.Point*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.52", align 8
  %16 = alloca %class.Point*, align 8
  %17 = alloca %class.Point*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %5, i32 0, i32 0
  store %class.Point* %1, %class.Point** %20, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %class.Point* %3, %class.Point** %8, align 8
  %21 = load %"class.std::vector.11"*, %"class.std::vector.11"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %420

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load %class.Point*, %class.Point** %28, align 8
  %30 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load %class.Point*, %class.Point** %33, align 8
  %35 = ptrtoint %class.Point* %29 to i64
  %36 = ptrtoint %class.Point* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 24
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %135

; <label>:41:                                     ; preds = %24
  %42 = load %class.Point*, %class.Point** %8, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %9, %class.Point* dereferenceable(24) %42)
  %43 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"* %21)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %11, i32 0, i32 0
  store %class.Point* %43, %class.Point** %44, align 8
  %45 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.52"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.52"* dereferenceable(8) %5)
  store i64 %45, i64* %10, align 8
  %46 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %47 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %48, i32 0, i32 1
  %50 = load %class.Point*, %class.Point** %49, align 8
  store %class.Point* %50, %class.Point** %12, align 8
  %51 = load i64, i64* %10, align 8
  %52 = load i64, i64* %7, align 8
  %53 = icmp ugt i64 %51, %52
  br i1 %53, label %54, label %97

; <label>:54:                                     ; preds = %41
  %55 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %55, i32 0, i32 0
  %57 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %56 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %57, i32 0, i32 1
  %59 = load %class.Point*, %class.Point** %58, align 8
  %60 = load i64, i64* %7, align 8
  %61 = sub i64 0, %60
  %62 = getelementptr inbounds %class.Point, %class.Point* %59, i64 %61
  %63 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %64 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %65, i32 0, i32 1
  %67 = load %class.Point*, %class.Point** %66, align 8
  %68 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %68, i32 0, i32 0
  %70 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %69 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %70, i32 0, i32 1
  %72 = load %class.Point*, %class.Point** %71, align 8
  %73 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %74 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %73)
  %75 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %62, %class.Point* %67, %class.Point* %72, %"class.std::allocator.13"* dereferenceable(1) %74)
  %76 = load i64, i64* %7, align 8
  %77 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %78 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %79, i32 0, i32 1
  %81 = load %class.Point*, %class.Point** %80, align 8
  %82 = getelementptr inbounds %class.Point, %class.Point* %81, i64 %76
  store %class.Point* %82, %class.Point** %80, align 8
  %83 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
  %84 = load %class.Point*, %class.Point** %83, align 8
  %85 = load %class.Point*, %class.Point** %12, align 8
  %86 = load i64, i64* %7, align 8
  %87 = sub i64 0, %86
  %88 = getelementptr inbounds %class.Point, %class.Point* %85, i64 %87
  %89 = load %class.Point*, %class.Point** %12, align 8
  %90 = call %class.Point* @_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point* %84, %class.Point* %88, %class.Point* %89)
  %91 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
  %92 = load %class.Point*, %class.Point** %91, align 8
  %93 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
  %94 = load %class.Point*, %class.Point** %93, align 8
  %95 = load i64, i64* %7, align 8
  %96 = getelementptr inbounds %class.Point, %class.Point* %94, i64 %95
  call void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point* %92, %class.Point* %96, %class.Point* dereferenceable(24) %9)
  br label %134

; <label>:97:                                     ; preds = %41
  %98 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %98, i32 0, i32 0
  %100 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %99 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %100, i32 0, i32 1
  %102 = load %class.Point*, %class.Point** %101, align 8
  %103 = load i64, i64* %7, align 8
  %104 = load i64, i64* %10, align 8
  %105 = sub i64 %103, %104
  %106 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %107 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %106)
  %108 = call %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point* %102, i64 %105, %class.Point* dereferenceable(24) %9, %"class.std::allocator.13"* dereferenceable(1) %107)
  %109 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %109, i32 0, i32 0
  %111 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %110 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %111, i32 0, i32 1
  store %class.Point* %108, %class.Point** %112, align 8
  %113 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
  %114 = load %class.Point*, %class.Point** %113, align 8
  %115 = load %class.Point*, %class.Point** %12, align 8
  %116 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %116, i32 0, i32 0
  %118 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %117 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %118, i32 0, i32 1
  %120 = load %class.Point*, %class.Point** %119, align 8
  %121 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %122 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %121)
  %123 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %114, %class.Point* %115, %class.Point* %120, %"class.std::allocator.13"* dereferenceable(1) %122)
  %124 = load i64, i64* %10, align 8
  %125 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %126 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %127, i32 0, i32 1
  %129 = load %class.Point*, %class.Point** %128, align 8
  %130 = getelementptr inbounds %class.Point, %class.Point* %129, i64 %124
  store %class.Point* %130, %class.Point** %128, align 8
  %131 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
  %132 = load %class.Point*, %class.Point** %131, align 8
  %133 = load %class.Point*, %class.Point** %12, align 8
  call void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point* %132, %class.Point* %133, %class.Point* dereferenceable(24) %9)
  br label %134

; <label>:134:                                    ; preds = %97, %54
  br label %419

; <label>:135:                                    ; preds = %24
  %136 = load i64, i64* %7, align 8
  %137 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.11"* %21, i64 %136, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0))
  store i64 %137, i64* %13, align 8
  %138 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.11"* %21)
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %15, i32 0, i32 0
  store %class.Point* %138, %class.Point** %139, align 8
  %140 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.52"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.52"* dereferenceable(8) %15)
  store i64 %140, i64* %14, align 8
  %141 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %142 = load i64, i64* %13, align 8
  %143 = call %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.12"* %141, i64 %142)
  store %class.Point* %143, %class.Point** %16, align 8
  %144 = load %class.Point*, %class.Point** %16, align 8
  store %class.Point* %144, %class.Point** %17, align 8
  %145 = load %class.Point*, %class.Point** %16, align 8
  %146 = load i64, i64* %14, align 8
  %147 = getelementptr inbounds %class.Point, %class.Point* %145, i64 %146
  %148 = load i64, i64* %7, align 8
  %149 = load %class.Point*, %class.Point** %8, align 8
  %150 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %151 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %150)
          to label %152 unwind label %250

; <label>:152:                                    ; preds = %135
  %153 = invoke %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point* %147, i64 %148, %class.Point* dereferenceable(24) %149, %"class.std::allocator.13"* dereferenceable(1) %151)
          to label %154 unwind label %250

; <label>:154:                                    ; preds = %152
  %155 = load i32, i32* @x.537
  %156 = load i32, i32* @y.538
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %154, %originalBBalteredBB
  store %class.Point* null, %class.Point** %17, align 8
  %163 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %164 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %163, i32 0, i32 0
  %165 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %164 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %166 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %165, i32 0, i32 0
  %167 = load %class.Point*, %class.Point** %166, align 8
  %168 = load i32, i32* @x.537
  %169 = load i32, i32* @y.538
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %176 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
          to label %177 unwind label %250

; <label>:177:                                    ; preds = %originalBBpart2
  %178 = load i32, i32* @x.537
  %179 = load i32, i32* @y.538
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %177, %originalBB1alteredBB
  %186 = load %class.Point*, %class.Point** %176, align 8
  %187 = load %class.Point*, %class.Point** %16, align 8
  %188 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %189 = load i32, i32* @x.537
  %190 = load i32, i32* @y.538
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %197 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %188)
          to label %198 unwind label %250

; <label>:198:                                    ; preds = %originalBBpart24
  %199 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %167, %class.Point* %186, %class.Point* %187, %"class.std::allocator.13"* dereferenceable(1) %197)
          to label %200 unwind label %250

; <label>:200:                                    ; preds = %198
  %201 = load i32, i32* @x.537
  %202 = load i32, i32* @y.538
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %200, %originalBB6alteredBB
  store %class.Point* %199, %class.Point** %17, align 8
  %209 = load i64, i64* %7, align 8
  %210 = load %class.Point*, %class.Point** %17, align 8
  %211 = getelementptr inbounds %class.Point, %class.Point* %210, i64 %209
  store %class.Point* %211, %class.Point** %17, align 8
  %212 = load i32, i32* @x.537
  %213 = load i32, i32* @y.538
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %220 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
          to label %221 unwind label %250

; <label>:221:                                    ; preds = %originalBBpart28
  %222 = load %class.Point*, %class.Point** %220, align 8
  %223 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %224 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %223, i32 0, i32 0
  %225 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %224 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %226 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %225, i32 0, i32 1
  %227 = load %class.Point*, %class.Point** %226, align 8
  %228 = load %class.Point*, %class.Point** %17, align 8
  %229 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %230 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %229)
          to label %231 unwind label %250

; <label>:231:                                    ; preds = %221
  %232 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %222, %class.Point* %227, %class.Point* %228, %"class.std::allocator.13"* dereferenceable(1) %230)
          to label %233 unwind label %250

; <label>:233:                                    ; preds = %231
  %234 = load i32, i32* @x.537
  %235 = load i32, i32* @y.538
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %233, %originalBB10alteredBB
  store %class.Point* %232, %class.Point** %17, align 8
  %242 = load i32, i32* @x.537
  %243 = load i32, i32* @y.538
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %369

; <label>:250:                                    ; preds = %231, %221, %originalBBpart28, %198, %originalBBpart24, %originalBBpart2, %152, %135
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  store i8* %252, i8** %18, align 8
  %253 = extractvalue { i8*, i32 } %251, 1
  store i32 %253, i32* %19, align 4
  br label %254

; <label>:254:                                    ; preds = %250
  %255 = load i32, i32* @x.537
  %256 = load i32, i32* @y.538
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %254, %originalBB14alteredBB
  %263 = load i8*, i8** %18, align 8
  %264 = call i8* @__cxa_begin_catch(i8* %263) #13
  %265 = load %class.Point*, %class.Point** %17, align 8
  %266 = icmp ne %class.Point* %265, null
  %267 = load i32, i32* @x.537
  %268 = load i32, i32* @y.538
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %266, label %308, label %275

; <label>:275:                                    ; preds = %originalBBpart216
  %276 = load %class.Point*, %class.Point** %16, align 8
  %277 = load i64, i64* %14, align 8
  %278 = getelementptr inbounds %class.Point, %class.Point* %276, i64 %277
  %279 = load %class.Point*, %class.Point** %16, align 8
  %280 = load i64, i64* %14, align 8
  %281 = getelementptr inbounds %class.Point, %class.Point* %279, i64 %280
  %282 = load i64, i64* %7, align 8
  %283 = getelementptr inbounds %class.Point, %class.Point* %281, i64 %282
  %284 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %285 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %284)
          to label %286 unwind label %288

; <label>:286:                                    ; preds = %275
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %278, %class.Point* %283, %"class.std::allocator.13"* dereferenceable(1) %285)
          to label %287 unwind label %288

; <label>:287:                                    ; preds = %286
  br label %347

; <label>:288:                                    ; preds = %351, %347, %329, %originalBBpart224, %286, %275
  %289 = load i32, i32* @x.537
  %290 = load i32, i32* @y.538
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %288, %originalBB18alteredBB
  %297 = landingpad { i8*, i32 }
          cleanup
  %298 = extractvalue { i8*, i32 } %297, 0
  store i8* %298, i8** %18, align 8
  %299 = extractvalue { i8*, i32 } %297, 1
  store i32 %299, i32* %19, align 4
  %300 = load i32, i32* @x.537
  %301 = load i32, i32* @y.538
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @__cxa_end_catch()
          to label %352 unwind label %442

; <label>:308:                                    ; preds = %originalBBpart216
  %309 = load i32, i32* @x.537
  %310 = load i32, i32* @y.538
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %308, %originalBB22alteredBB
  %317 = load %class.Point*, %class.Point** %16, align 8
  %318 = load %class.Point*, %class.Point** %17, align 8
  %319 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %320 = load i32, i32* @x.537
  %321 = load i32, i32* @y.538
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %328 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %319)
          to label %329 unwind label %288

; <label>:329:                                    ; preds = %originalBBpart224
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %317, %class.Point* %318, %"class.std::allocator.13"* dereferenceable(1) %328)
          to label %330 unwind label %288

; <label>:330:                                    ; preds = %329
  %331 = load i32, i32* @x.537
  %332 = load i32, i32* @y.538
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %330, %originalBB26alteredBB
  %339 = load i32, i32* @x.537
  %340 = load i32, i32* @y.538
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %347

; <label>:347:                                    ; preds = %originalBBpart228, %287
  %348 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %349 = load %class.Point*, %class.Point** %16, align 8
  %350 = load i64, i64* %13, align 8
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"* %348, %class.Point* %349, i64 %350)
          to label %351 unwind label %288

; <label>:351:                                    ; preds = %347
  invoke void @__cxa_rethrow() #14
          to label %445 unwind label %288

; <label>:352:                                    ; preds = %originalBBpart220
  %353 = load i32, i32* @x.537
  %354 = load i32, i32* @y.538
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %352, %originalBB30alteredBB
  %361 = load i32, i32* @x.537
  %362 = load i32, i32* @y.538
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %437

; <label>:369:                                    ; preds = %originalBBpart212
  %370 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %371 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %370, i32 0, i32 0
  %372 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %371 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %372, i32 0, i32 0
  %374 = load %class.Point*, %class.Point** %373, align 8
  %375 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %375, i32 0, i32 0
  %377 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %376 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %378 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %377, i32 0, i32 1
  %379 = load %class.Point*, %class.Point** %378, align 8
  %380 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %381 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %380)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %374, %class.Point* %379, %"class.std::allocator.13"* dereferenceable(1) %381)
  %382 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %383 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %384 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %383, i32 0, i32 0
  %385 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %384 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %386 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %385, i32 0, i32 0
  %387 = load %class.Point*, %class.Point** %386, align 8
  %388 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %389 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %388, i32 0, i32 0
  %390 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %389 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %391 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %390, i32 0, i32 2
  %392 = load %class.Point*, %class.Point** %391, align 8
  %393 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %393, i32 0, i32 0
  %395 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %394 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %395, i32 0, i32 0
  %397 = load %class.Point*, %class.Point** %396, align 8
  %398 = ptrtoint %class.Point* %392 to i64
  %399 = ptrtoint %class.Point* %397 to i64
  %400 = sub i64 %398, %399
  %401 = sdiv exact i64 %400, 24
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"* %382, %class.Point* %387, i64 %401)
  %402 = load %class.Point*, %class.Point** %16, align 8
  %403 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %404 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %403, i32 0, i32 0
  %405 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %404 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %406 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %405, i32 0, i32 0
  store %class.Point* %402, %class.Point** %406, align 8
  %407 = load %class.Point*, %class.Point** %17, align 8
  %408 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %409 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %408, i32 0, i32 0
  %410 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %409 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %411 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %410, i32 0, i32 1
  store %class.Point* %407, %class.Point** %411, align 8
  %412 = load %class.Point*, %class.Point** %16, align 8
  %413 = load i64, i64* %13, align 8
  %414 = getelementptr inbounds %class.Point, %class.Point* %412, i64 %413
  %415 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %415, i32 0, i32 0
  %417 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %416 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %418 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %417, i32 0, i32 2
  store %class.Point* %414, %class.Point** %418, align 8
  br label %419

; <label>:419:                                    ; preds = %369, %134
  br label %420

; <label>:420:                                    ; preds = %419, %4
  %421 = load i32, i32* @x.537
  %422 = load i32, i32* @y.538
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %420, %originalBB34alteredBB
  %429 = load i32, i32* @x.537
  %430 = load i32, i32* @y.538
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret void

; <label>:437:                                    ; preds = %originalBBpart232
  %438 = load i8*, i8** %18, align 8
  %439 = load i32, i32* %19, align 4
  %440 = insertvalue { i8*, i32 } undef, i8* %438, 0
  %441 = insertvalue { i8*, i32 } %440, i32 %439, 1
  resume { i8*, i32 } %441

; <label>:442:                                    ; preds = %originalBBpart220
  %443 = landingpad { i8*, i32 }
          catch i8* null
  %444 = extractvalue { i8*, i32 } %443, 0
  call void @__clang_call_terminate(i8* %444) #11
  unreachable

; <label>:445:                                    ; preds = %351
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %154
  store %class.Point* null, %class.Point** %17, align 8
  %446 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  %447 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %446, i32 0, i32 0
  %448 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %447 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %449 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %448, i32 0, i32 0
  %450 = load %class.Point*, %class.Point** %449, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %177
  %451 = load %class.Point*, %class.Point** %176, align 8
  %452 = load %class.Point*, %class.Point** %16, align 8
  %453 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %200
  store %class.Point* %199, %class.Point** %17, align 8
  %454 = load i64, i64* %7, align 8
  %455 = load %class.Point*, %class.Point** %17, align 8
  %456 = getelementptr inbounds %class.Point, %class.Point* %455, i64 %454
  store %class.Point* %456, %class.Point** %17, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %233
  store %class.Point* %232, %class.Point** %17, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %254
  %457 = load i8*, i8** %18, align 8
  %458 = call i8* @__cxa_begin_catch(i8* %457) #13
  %459 = load %class.Point*, %class.Point** %17, align 8
  %460 = icmp ne %class.Point* %459, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %288
  %461 = landingpad { i8*, i32 }
          cleanup
  %462 = extractvalue { i8*, i32 } %461, 0
  store i8* %462, i8** %18, align 8
  %463 = extractvalue { i8*, i32 } %461, 1
  store i32 %463, i32* %19, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %308
  %464 = load %class.Point*, %class.Point** %16, align 8
  %465 = load %class.Point*, %class.Point** %17, align 8
  %466 = bitcast %"class.std::vector.11"* %21 to %"struct.std::_Vector_base.12"*
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %330
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %352
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %420
  br label %originalBB34
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.52", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Vector_base.12"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.52"* %2, %class.Point** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %2, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  ret %class.Point* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.11"*, %class.Point*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %class.Point*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %6 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %7 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load %class.Point*, %class.Point** %4, align 8
  %13 = ptrtoint %class.Point* %11 to i64
  %14 = ptrtoint %class.Point* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 24
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %49

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.541
  %21 = load i32, i32* @y.542
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load %class.Point*, %class.Point** %4, align 8
  %29 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %30 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %31, i32 0, i32 1
  %33 = load %class.Point*, %class.Point** %32, align 8
  %34 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %35 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %34)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %28, %class.Point* %33, %"class.std::allocator.13"* dereferenceable(1) %35)
  %36 = load %class.Point*, %class.Point** %4, align 8
  %37 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %38 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %39, i32 0, i32 1
  store %class.Point* %36, %class.Point** %40, align 8
  %41 = load i32, i32* @x.541
  %42 = load i32, i32* @y.542
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart2, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %50 = load %class.Point*, %class.Point** %4, align 8
  %51 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %52 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %53, i32 0, i32 1
  %55 = load %class.Point*, %class.Point** %54, align 8
  %56 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %57 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %56)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %50, %class.Point* %55, %"class.std::allocator.13"* dereferenceable(1) %57)
  %58 = load %class.Point*, %class.Point** %4, align 8
  %59 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %60 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %61, i32 0, i32 1
  store %class.Point* %58, %class.Point** %62, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi3EEC2ERKS0_(%class.Point*, %class.Point* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.543
  %4 = load i32, i32* @y.544
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point*, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %11, align 8
  %14 = bitcast %class.Point* %13 to %class.Tensor*
  %15 = load %class.Point*, %class.Point** %12, align 8
  %16 = bitcast %class.Point* %15 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %14, %class.Tensor* dereferenceable(24) %16)
  %17 = load i32, i32* @x.543
  %18 = load i32, i32* @y.544
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %class.Point*, align 8
  %26 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %25, align 8
  store %class.Point* %1, %class.Point** %26, align 8
  %27 = load %class.Point*, %class.Point** %25, align 8
  %28 = bitcast %class.Point* %27 to %class.Tensor*
  %29 = load %class.Point*, %class.Point** %26, align 8
  %30 = bitcast %class.Point* %29 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %28, %class.Tensor* dereferenceable(24) %30)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.52"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.52"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.52"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.52"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.52"* %0, %"class.__gnu_cxx::__normal_iterator.52"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.52"* %1, %"class.__gnu_cxx::__normal_iterator.52"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.52"*, %"class.__gnu_cxx::__normal_iterator.52"** %3, align 8
  %6 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %5)
  %7 = load %class.Point*, %class.Point** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.52"*, %"class.__gnu_cxx::__normal_iterator.52"** %4, align 8
  %9 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"* %8)
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = ptrtoint %class.Point* %7 to i64
  %12 = ptrtoint %class.Point* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 24
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %8, align 8
  %13 = call %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point* %9, %class.Point* %10, %class.Point* %11, %"class.std::allocator.13"* dereferenceable(1) %12)
  ret %class.Point* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %3 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %4 to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  %12 = call %class.Point* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point* %8, %class.Point* %10, %class.Point* %11)
  ret %class.Point* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.52"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.52"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.52"* %0, %"class.__gnu_cxx::__normal_iterator.52"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.52"*, %"class.__gnu_cxx::__normal_iterator.52"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %3, i32 0, i32 0
  ret %class.Point** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  call void @_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point* %8, %class.Point* %10, %class.Point* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point*, i64, %class.Point* dereferenceable(24), %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.557
  %6 = load i32, i32* @y.558
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Point*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %13, align 8
  store i64 %1, i64* %14, align 8
  store %class.Point* %2, %class.Point** %15, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %16, align 8
  %17 = load %class.Point*, %class.Point** %13, align 8
  %18 = load i64, i64* %14, align 8
  %19 = load %class.Point*, %class.Point** %15, align 8
  %20 = call %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point* %17, i64 %18, %class.Point* dereferenceable(24) %19)
  %21 = load i32, i32* @x.557
  %22 = load i32, i32* @y.558
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca %class.Point*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %class.Point*, align 8
  %32 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %29, align 8
  store i64 %1, i64* %30, align 8
  store %class.Point* %2, %class.Point** %31, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %32, align 8
  %33 = load %class.Point*, %class.Point** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load %class.Point*, %class.Point** %31, align 8
  %36 = call %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point* %33, i64 %34, %class.Point* dereferenceable(24) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  %11 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #14
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* @x.559
  %19 = load i32, i32* @y.560
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %27 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  store i64 %27, i64* %8, align 8
  %28 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %26, %29
  store i64 %30, i64* %7, align 8
  %31 = load i64, i64* %7, align 8
  %32 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %33 = icmp ult i64 %31, %32
  %34 = load i32, i32* @x.559
  %35 = load i32, i32* @y.560
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %46, label %42

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i64, i64* %7, align 8
  %44 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %42, %originalBBpart2
  %47 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  br label %66

; <label>:48:                                     ; preds = %42
  %49 = load i32, i32* @x.559
  %50 = load i32, i32* @y.560
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i64, i64* %7, align 8
  %58 = load i32, i32* @x.559
  %59 = load i32, i32* @y.560
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66

; <label>:66:                                     ; preds = %originalBBpart24, %46
  %67 = phi i64 [ %47, %46 ], [ %57, %originalBBpart24 ]
  ret i64 %67

originalBBalteredBB:                              ; preds = %originalBB, %17
  %68 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %69 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  store i64 %69, i64* %8, align 8
  %70 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %71 = load i64, i64* %70, align 8
  %_ = sub i64 0, %68
  %gen = add i64 %_, %71
  %72 = add i64 %68, %71
  store i64 %72, i64* %7, align 8
  %73 = load i64, i64* %7, align 8
  %74 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %75 = icmp ult i64 %73, %74
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %76 = load i64, i64* %7, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.11"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.561
  %3 = load i32, i32* @y.562
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.52", align 8
  %11 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %11, align 8
  %12 = load %"class.std::vector.11"*, %"class.std::vector.11"** %11, align 8
  %13 = bitcast %"class.std::vector.11"* %12 to %"struct.std::_Vector_base.12"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.52"* %10, %class.Point** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %10, i32 0, i32 0
  %18 = load %class.Point*, %class.Point** %17, align 8
  %19 = load i32, i32* @x.561
  %20 = load i32, i32* @y.562
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.52", align 8
  %28 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %28, align 8
  %29 = load %"class.std::vector.11"*, %"class.std::vector.11"** %28, align 8
  %30 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.52"* %27, %class.Point** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %27, i32 0, i32 0
  %35 = load %class.Point*, %class.Point** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.12"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.12"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.563
  %10 = load i32, i32* @y.564
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %17 to %"class.std::allocator.13"*
  %19 = load i64, i64* %4, align 8
  %20 = call %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.13"* dereferenceable(1) %18, i64 %19)
  %21 = load i32, i32* @x.563
  %22 = load i32, i32* @y.564
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:29:                                     ; preds = %2
  %30 = load i32, i32* @x.563
  %31 = load i32, i32* @y.564
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i32, i32* @x.563
  %39 = load i32, i32* @y.564
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24, %originalBBpart2
  %47 = phi %class.Point* [ %20, %originalBBpart2 ], [ null, %originalBBpart24 ]
  ret %class.Point* %47

originalBBalteredBB:                              ; preds = %originalBB, %8
  %48 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %48 to %"class.std::allocator.13"*
  %50 = load i64, i64* %4, align 8
  %51 = call %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.13"* dereferenceable(1) %49, i64 %50)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %8, align 8
  %13 = call %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point* %9, %class.Point* %10, %class.Point* %11, %"class.std::allocator.13"* dereferenceable(1) %12)
  ret %class.Point* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.567
  %5 = load i32, i32* @y.568
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %14, align 8
  %15 = load %class.Point*, %class.Point** %12, align 8
  %16 = load %class.Point*, %class.Point** %13, align 8
  call void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %15, %class.Point* %16)
  %17 = load i32, i32* @x.567
  %18 = load i32, i32* @y.568
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca %class.Point*, align 8
  %26 = alloca %class.Point*, align 8
  %27 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %25, align 8
  store %class.Point* %1, %class.Point** %26, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %27, align 8
  %28 = load %class.Point*, %class.Point** %25, align 8
  %29 = load %class.Point*, %class.Point** %26, align 8
  call void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %28, %class.Point* %29)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"*, %class.Point*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.12"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %4, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  %9 = icmp ne %class.Point* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %11 to %"class.std::allocator.13"*
  %13 = load %class.Point*, %class.Point** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.13"* dereferenceable(1) %12, %class.Point* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %53, %2
  %8 = load i32, i32* @x.571
  %9 = load i32, i32* @y.572
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %5, align 4
  %17 = icmp ult i32 %16, 3
  %18 = load i32, i32* @x.571
  %19 = load i32, i32* @y.572
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %56

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.571
  %28 = load i32, i32* @y.572
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %class.Tensor*, %class.Tensor** %4, align 8
  %36 = getelementptr inbounds %class.Tensor, %class.Tensor* %35, i32 0, i32 0
  %37 = load i32, i32* %5, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [3 x double], [3 x double]* %36, i64 0, i64 %38
  %40 = load double, double* %39, align 8
  %41 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %42 = load i32, i32* %5, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds [3 x double], [3 x double]* %41, i64 0, i64 %43
  store double %40, double* %44, align 8
  %45 = load i32, i32* @x.571
  %46 = load i32, i32* @y.572
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %53

; <label>:53:                                     ; preds = %originalBBpart24
  %54 = load i32, i32* %5, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %7

; <label>:56:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %57 = load i32, i32* %5, align 4
  %58 = icmp ult i32 %57, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %59 = load %class.Tensor*, %class.Tensor** %4, align 8
  %60 = getelementptr inbounds %class.Tensor, %class.Tensor* %59, i32 0, i32 0
  %61 = load i32, i32* %5, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [3 x double], [3 x double]* %60, i64 0, i64 %62
  %64 = load double, double* %63, align 8
  %65 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %66 = load i32, i32* %5, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [3 x double], [3 x double]* %65, i64 0, i64 %67
  store double %64, double* %68, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = call %class.Point* @_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point* %9, %class.Point* %10, %class.Point* %11)
  ret %class.Point* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = load i32, i32* @x.575
  %5 = load i32, i32* @y.576
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load %class.Point*, %class.Point** %12, align 8
  %17 = load %class.Point*, %class.Point** %13, align 8
  %18 = load %class.Point*, %class.Point** %14, align 8
  %19 = call %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_(%class.Point* %16, %class.Point* %17, %class.Point* %18)
  %20 = load i32, i32* @x.575
  %21 = load i32, i32* @y.576
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Point*, align 8
  %29 = alloca %class.Point*, align 8
  %30 = alloca %class.Point*, align 8
  %31 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %28, align 8
  store %class.Point* %1, %class.Point** %29, align 8
  store %class.Point* %2, %class.Point** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load %class.Point*, %class.Point** %28, align 8
  %33 = load %class.Point*, %class.Point** %29, align 8
  %34 = load %class.Point*, %class.Point** %30, align 8
  %35 = call %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_(%class.Point* %32, %class.Point* %33, %class.Point* %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.577
  %5 = load i32, i32* @y.578
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %class.Point* %0, %class.Point** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %18 = load %class.Point*, %class.Point** %14, align 8
  store %class.Point* %18, %class.Point** %15, align 8
  %19 = load i32, i32* @x.577
  %20 = load i32, i32* @y.578
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %37, %originalBBpart2
  %28 = load %class.Point*, %class.Point** %12, align 8
  %29 = load %class.Point*, %class.Point** %13, align 8
  %30 = icmp ne %class.Point* %28, %29
  br i1 %30, label %31, label %68

; <label>:31:                                     ; preds = %27
  %32 = load %class.Point*, %class.Point** %15, align 8
  %33 = invoke %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24) %32)
          to label %34 unwind label %42

; <label>:34:                                     ; preds = %31
  %35 = load %class.Point*, %class.Point** %12, align 8
  invoke void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point* %33, %class.Point* dereferenceable(24) %35)
          to label %36 unwind label %42

; <label>:36:                                     ; preds = %34
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load %class.Point*, %class.Point** %12, align 8
  %39 = getelementptr inbounds %class.Point, %class.Point* %38, i32 1
  store %class.Point* %39, %class.Point** %12, align 8
  %40 = load %class.Point*, %class.Point** %15, align 8
  %41 = getelementptr inbounds %class.Point, %class.Point* %40, i32 1
  store %class.Point* %41, %class.Point** %15, align 8
  br label %27

; <label>:42:                                     ; preds = %34, %31
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %16, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %17, align 4
  br label %46

; <label>:46:                                     ; preds = %42
  %47 = load i32, i32* @x.577
  %48 = load i32, i32* @y.578
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i8*, i8** %16, align 8
  %56 = call i8* @__cxa_begin_catch(i8* %55) #13
  %57 = load %class.Point*, %class.Point** %14, align 8
  %58 = load %class.Point*, %class.Point** %15, align 8
  %59 = load i32, i32* @x.577
  %60 = load i32, i32* @y.578
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %57, %class.Point* %58)
          to label %67 unwind label %86

; <label>:67:                                     ; preds = %originalBBpart24
  invoke void @__cxa_rethrow() #14
          to label %132 unwind label %86

; <label>:68:                                     ; preds = %27
  %69 = load i32, i32* @x.577
  %70 = load i32, i32* @y.578
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %68, %originalBB6alteredBB
  %77 = load %class.Point*, %class.Point** %15, align 8
  %78 = load i32, i32* @x.577
  %79 = load i32, i32* @y.578
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %class.Point* %77

; <label>:86:                                     ; preds = %67, %originalBBpart24
  %87 = load i32, i32* @x.577
  %88 = load i32, i32* @y.578
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %16, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %17, align 4
  %98 = load i32, i32* @x.577
  %99 = load i32, i32* @y.578
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @__cxa_end_catch()
          to label %106 unwind label %129

; <label>:106:                                    ; preds = %originalBBpart212
  br label %108
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:108:                                    ; preds = %106
  %109 = load i32, i32* @x.577
  %110 = load i32, i32* @y.578
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %108, %originalBB14alteredBB
  %117 = load i8*, i8** %16, align 8
  %118 = load i32, i32* %17, align 4
  %119 = insertvalue { i8*, i32 } undef, i8* %117, 0
  %120 = insertvalue { i8*, i32 } %119, i32 %118, 1
  %121 = load i32, i32* @x.577
  %122 = load i32, i32* @y.578
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  resume { i8*, i32 } %120

; <label>:129:                                    ; preds = %originalBBpart212
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #11
  unreachable

; <label>:132:                                    ; preds = %67
  %133 = load i32, i32* @x.577
  %134 = load i32, i32* @y.578
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %132, %originalBB18alteredBB
  %141 = load i32, i32* @x.577
  %142 = load i32, i32* @y.578
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %149 = alloca %class.Point*, align 8
  %150 = alloca %class.Point*, align 8
  %151 = alloca %class.Point*, align 8
  %152 = alloca %class.Point*, align 8
  %153 = alloca i8*
  %154 = alloca i32
  store %class.Point* %0, %class.Point** %149, align 8
  store %class.Point* %1, %class.Point** %150, align 8
  store %class.Point* %2, %class.Point** %151, align 8
  %155 = load %class.Point*, %class.Point** %151, align 8
  store %class.Point* %155, %class.Point** %152, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %156 = load i8*, i8** %16, align 8
  %157 = call i8* @__cxa_begin_catch(i8* %156) #13
  %158 = load %class.Point*, %class.Point** %14, align 8
  %159 = load %class.Point*, %class.Point** %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %160 = load %class.Point*, %class.Point** %15, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %161 = landingpad { i8*, i32 }
          cleanup
  %162 = extractvalue { i8*, i32 } %161, 0
  store i8* %162, i8** %16, align 8
  %163 = extractvalue { i8*, i32 } %161, 1
  store i32 %163, i32* %17, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %108
  %164 = load i8*, i8** %16, align 8
  %165 = load i32, i32* %17, align 4
  %166 = insertvalue { i8*, i32 } undef, i8* %164, 0
  %167 = insertvalue { i8*, i32 } %166, i32 %165, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %132
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to i8*
  %7 = bitcast i8* %6 to %class.Point*
  %8 = load %class.Point*, %class.Point** %4, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %7, %class.Point* dereferenceable(24) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24)) #2 comdat {
  %2 = load i32, i32* @x.581
  %3 = load i32, i32* @y.582
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load i32, i32* @x.581
  %13 = load i32, i32* @y.582
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %20, align 8
  %21 = load %class.Point*, %class.Point** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point*, %class.Point*) #0 comdat {
  %3 = load i32, i32* @x.583
  %4 = load i32, i32* @y.584
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point*, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %11, align 8
  %14 = load %class.Point*, %class.Point** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point* %13, %class.Point* %14)
  %15 = load i32, i32* @x.583
  %16 = load i32, i32* @y.584
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %class.Point*, align 8
  %24 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %23, align 8
  store %class.Point* %1, %class.Point** %24, align 8
  %25 = load %class.Point*, %class.Point** %23, align 8
  %26 = load %class.Point*, %class.Point** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point* %25, %class.Point* %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point*, %class.Point*) #2 comdat align 2 {
  %3 = load i32, i32* @x.585
  %4 = load i32, i32* @y.586
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point*, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load i32, i32* @x.585
  %14 = load i32, i32* @y.586
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca %class.Point*, align 8
  %22 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %21, align 8
  store %class.Point* %1, %class.Point** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  %12 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %11)
  %13 = call %class.Point* @_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point* %8, %class.Point* %10, %class.Point* %12)
  %14 = call %class.Point* @_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_(%class.Point** dereferenceable(8) %6, %class.Point* %13)
  ret %class.Point* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point*) #2 comdat {
  %2 = load i32, i32* @x.589
  %3 = load i32, i32* @y.590
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load i32, i32* @x.589
  %13 = load i32, i32* @y.590
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %20, align 8
  %21 = load %class.Point*, %class.Point** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_(%class.Point** dereferenceable(8), %class.Point*) #2 comdat {
  %3 = load i32, i32* @x.591
  %4 = load i32, i32* @y.592
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point**, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point** %0, %class.Point*** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %12, align 8
  %14 = load i32, i32* @x.591
  %15 = load i32, i32* @y.592
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %class.Point**, align 8
  %23 = alloca %class.Point*, align 8
  store %class.Point** %0, %class.Point*** %22, align 8
  store %class.Point* %1, %class.Point** %23, align 8
  %24 = load %class.Point*, %class.Point** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = call %class.Point* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point* %8, %class.Point* %9, %class.Point* %10)
  ret %class.Point* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point*) #2 comdat {
  %2 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %2, align 8
  %3 = load %class.Point*, %class.Point** %2, align 8
  ret %class.Point* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 {
  %4 = load i32, i32* @x.597
  %5 = load i32, i32* @y.598
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca i64, align 8
  store %class.Point* %0, %class.Point** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %16 = load %class.Point*, %class.Point** %13, align 8
  %17 = load %class.Point*, %class.Point** %12, align 8
  %18 = ptrtoint %class.Point* %16 to i64
  %19 = ptrtoint %class.Point* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  store i64 %21, i64* %15, align 8
  %22 = load i32, i32* @x.597
  %23 = load i32, i32* @y.598
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %originalBBpart216, %originalBBpart2
  %31 = load i64, i64* %15, align 8
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %74

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* @x.597
  %35 = load i32, i32* @y.598
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %33, %originalBB7alteredBB
  %42 = load %class.Point*, %class.Point** %13, align 8
  %43 = getelementptr inbounds %class.Point, %class.Point* %42, i32 -1
  store %class.Point* %43, %class.Point** %13, align 8
  %44 = load %class.Point*, %class.Point** %14, align 8
  %45 = getelementptr inbounds %class.Point, %class.Point* %44, i32 -1
  store %class.Point* %45, %class.Point** %14, align 8
  %46 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %45, %class.Point* dereferenceable(24) %43)
  %47 = load i32, i32* @x.597
  %48 = load i32, i32* @y.598
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br label %55

; <label>:55:                                     ; preds = %originalBBpart29
  %56 = load i32, i32* @x.597
  %57 = load i32, i32* @y.598
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %55, %originalBB11alteredBB
  %64 = load i64, i64* %15, align 8
  %65 = add nsw i64 %64, -1
  store i64 %65, i64* %15, align 8
  %66 = load i32, i32* @x.597
  %67 = load i32, i32* @y.598
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart216, label %originalBB11alteredBB

originalBBpart216:                                ; preds = %originalBB11
  br label %30

; <label>:74:                                     ; preds = %30
  %75 = load %class.Point*, %class.Point** %14, align 8
  ret %class.Point* %75

originalBBalteredBB:                              ; preds = %originalBB, %3
  %76 = alloca %class.Point*, align 8
  %77 = alloca %class.Point*, align 8
  %78 = alloca %class.Point*, align 8
  %79 = alloca i64, align 8
  store %class.Point* %0, %class.Point** %76, align 8
  store %class.Point* %1, %class.Point** %77, align 8
  store %class.Point* %2, %class.Point** %78, align 8
  %80 = load %class.Point*, %class.Point** %77, align 8
  %81 = load %class.Point*, %class.Point** %76, align 8
  %82 = ptrtoint %class.Point* %80 to i64
  %83 = ptrtoint %class.Point* %81 to i64
  %_ = sub i64 %82, %83
  %gen = mul i64 %_, %83
  %_1 = sub i64 %82, %83
  %gen2 = mul i64 %_1, %83
  %_3 = sub i64 0, %82
  %gen4 = add i64 %_3, %83
  %84 = sub i64 %82, %83
  %_5 = sub i64 0, %84
  %gen6 = add i64 %_5, 24
  %85 = sdiv exact i64 %84, 24
  store i64 %85, i64* %79, align 8
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %33
  %86 = load %class.Point*, %class.Point** %13, align 8
  %87 = getelementptr inbounds %class.Point, %class.Point* %86, i32 -1
  store %class.Point* %87, %class.Point** %13, align 8
  %88 = load %class.Point*, %class.Point** %14, align 8
  %89 = getelementptr inbounds %class.Point, %class.Point* %88, i32 -1
  store %class.Point* %89, %class.Point** %14, align 8
  %90 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %89, %class.Point* dereferenceable(24) %87)
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %55
  %91 = load i64, i64* %15, align 8
  %_12 = sub i64 %91, -1
  %gen13 = mul i64 %_12, -1
  %_14 = shl i64 %91, -1
  %92 = add nsw i64 %91, -1
  store i64 %92, i64* %15, align 8
  br label %originalBB11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %originalBBpart24, %3
  %8 = load i32, i32* @x.599
  %9 = load i32, i32* @y.600
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %class.Point*, %class.Point** %4, align 8
  %17 = load %class.Point*, %class.Point** %5, align 8
  %18 = icmp ne %class.Point* %16, %17
  %19 = load i32, i32* @x.599
  %20 = load i32, i32* @y.600
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %50

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load %class.Point*, %class.Point** %6, align 8
  %29 = load %class.Point*, %class.Point** %4, align 8
  %30 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %29, %class.Point* dereferenceable(24) %28)
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* @x.599
  %33 = load i32, i32* @y.600
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %class.Point*, %class.Point** %4, align 8
  %41 = getelementptr inbounds %class.Point, %class.Point* %40, i32 1
  store %class.Point* %41, %class.Point** %4, align 8
  %42 = load i32, i32* @x.599
  %43 = load i32, i32* @y.600
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %7

; <label>:50:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %51 = load %class.Point*, %class.Point** %4, align 8
  %52 = load %class.Point*, %class.Point** %5, align 8
  %53 = icmp ne %class.Point* %51, %52
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %54 = load %class.Point*, %class.Point** %4, align 8
  %55 = getelementptr inbounds %class.Point, %class.Point* %54, i32 1
  store %class.Point* %55, %class.Point** %4, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = call %class.Point* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_(%class.Point* %8, i64 %9, %class.Point* dereferenceable(24) %10)
  ret %class.Point* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_(%class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.603
  %5 = load i32, i32* @y.604
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %class.Point* %0, %class.Point** %12, align 8
  store i64 %1, i64* %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %18 = load %class.Point*, %class.Point** %12, align 8
  store %class.Point* %18, %class.Point** %15, align 8
  %19 = load i32, i32* @x.603
  %20 = load i32, i32* @y.604
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart28, %originalBBpart2
  %28 = load i64, i64* %13, align 8
  %29 = icmp ugt i64 %28, 0
  br i1 %29, label %30, label %131

; <label>:30:                                     ; preds = %27
  %31 = load %class.Point*, %class.Point** %15, align 8
  %32 = invoke %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24) %31)
          to label %33 unwind label %73

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* @x.603
  %35 = load i32, i32* @y.604
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load %class.Point*, %class.Point** %14, align 8
  %43 = load i32, i32* @x.603
  %44 = load i32, i32* @y.604
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point* %32, %class.Point* dereferenceable(24) %42)
          to label %51 unwind label %73

; <label>:51:                                     ; preds = %originalBBpart24
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.603
  %54 = load i32, i32* @y.604
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i64, i64* %13, align 8
  %62 = add i64 %61, -1
  store i64 %62, i64* %13, align 8
  %63 = load %class.Point*, %class.Point** %15, align 8
  %64 = getelementptr inbounds %class.Point, %class.Point* %63, i32 1
  store %class.Point* %64, %class.Point** %15, align 8
  %65 = load i32, i32* @x.603
  %66 = load i32, i32* @y.604
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %27

; <label>:73:                                     ; preds = %originalBBpart24, %30
  %74 = load i32, i32* @x.603
  %75 = load i32, i32* @y.604
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %16, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %17, align 4
  %85 = load i32, i32* @x.603
  %86 = load i32, i32* @y.604
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %93

; <label>:93:                                     ; preds = %originalBBpart212
  %94 = load i32, i32* @x.603
  %95 = load i32, i32* @y.604
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i8*, i8** %16, align 8
  %103 = call i8* @__cxa_begin_catch(i8* %102) #13
  %104 = load %class.Point*, %class.Point** %12, align 8
  %105 = load %class.Point*, %class.Point** %15, align 8
  %106 = load i32, i32* @x.603
  %107 = load i32, i32* @y.604
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %104, %class.Point* %105)
          to label %114 unwind label %149

; <label>:114:                                    ; preds = %originalBBpart216
  %115 = load i32, i32* @x.603
  %116 = load i32, i32* @y.604
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  %123 = load i32, i32* @x.603
  %124 = load i32, i32* @y.604
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @__cxa_rethrow() #14
          to label %179 unwind label %149

; <label>:131:                                    ; preds = %27
  %132 = load i32, i32* @x.603
  %133 = load i32, i32* @y.604
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load %class.Point*, %class.Point** %15, align 8
  %141 = load i32, i32* @x.603
  %142 = load i32, i32* @y.604
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret %class.Point* %140

; <label>:149:                                    ; preds = %originalBBpart220, %originalBBpart216
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %16, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %153 unwind label %176

; <label>:153:                                    ; preds = %149
  %154 = load i32, i32* @x.603
  %155 = load i32, i32* @y.604
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %153, %originalBB26alteredBB
  %162 = load i32, i32* @x.603
  %163 = load i32, i32* @y.604
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %171
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:171:                                    ; preds = %originalBBpart228
  %172 = load i8*, i8** %16, align 8
  %173 = load i32, i32* %17, align 4
  %174 = insertvalue { i8*, i32 } undef, i8* %172, 0
  %175 = insertvalue { i8*, i32 } %174, i32 %173, 1
  resume { i8*, i32 } %175

; <label>:176:                                    ; preds = %149
  %177 = landingpad { i8*, i32 }
          catch i8* null
  %178 = extractvalue { i8*, i32 } %177, 0
  call void @__clang_call_terminate(i8* %178) #11
  unreachable

; <label>:179:                                    ; preds = %originalBBpart220
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %180 = alloca %class.Point*, align 8
  %181 = alloca i64, align 8
  %182 = alloca %class.Point*, align 8
  %183 = alloca %class.Point*, align 8
  %184 = alloca i8*
  %185 = alloca i32
  store %class.Point* %0, %class.Point** %180, align 8
  store i64 %1, i64* %181, align 8
  store %class.Point* %2, %class.Point** %182, align 8
  %186 = load %class.Point*, %class.Point** %180, align 8
  store %class.Point* %186, %class.Point** %183, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %187 = load %class.Point*, %class.Point** %14, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %188 = load i64, i64* %13, align 8
  %_ = shl i64 %188, -1
  %189 = add i64 %188, -1
  store i64 %189, i64* %13, align 8
  %190 = load %class.Point*, %class.Point** %15, align 8
  %191 = getelementptr inbounds %class.Point, %class.Point* %190, i32 1
  store %class.Point* %191, %class.Point** %15, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %192 = landingpad { i8*, i32 }
          catch i8* null
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %16, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %17, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  %195 = load i8*, i8** %16, align 8
  %196 = call i8* @__cxa_begin_catch(i8* %195) #13
  %197 = load %class.Point*, %class.Point** %12, align 8
  %198 = load %class.Point*, %class.Point** %15, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %199 = load %class.Point*, %class.Point** %15, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %153
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.605
  %3 = load i32, i32* @y.606
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %10, align 8
  %11 = load %"class.std::vector.11"*, %"class.std::vector.11"** %10, align 8
  %12 = bitcast %"class.std::vector.11"* %11 to %"struct.std::_Vector_base.12"*
  %13 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %12)
  %14 = call i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1) %13)
  %15 = load i32, i32* @x.605
  %16 = load i32, i32* @y.606
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %23, align 8
  %24 = load %"class.std::vector.11"*, %"class.std::vector.11"** %23, align 8
  %25 = bitcast %"class.std::vector.11"* %24 to %"struct.std::_Vector_base.12"*
  %26 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %25)
  %27 = call i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1) %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #2 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %31

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.607
  %15 = load i32, i32* @y.608
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i64*, i64** %4, align 8
  store i64* %22, i64** %3, align 8
  %23 = load i32, i32* @x.607
  %24 = load i32, i32* @y.608
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %11
  %32 = load i64*, i64** %3, align 8
  ret i64* %32

originalBBalteredBB:                              ; preds = %originalBB, %13
  %33 = load i64*, i64** %4, align 8
  store i64* %33, i64** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  store i64 384307168202282325, i64* %3, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.13"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %3 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %4 to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.13"* dereferenceable(1)) #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  %3 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %4 = bitcast %"class.std::allocator.13"* %3 to %"class.__gnu_cxx::new_allocator.14"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %4) #13
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"*) #2 comdat align 2 {
  %2 = load i32, i32* @x.615
  %3 = load i32, i32* @y.616
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %10, align 8
  %12 = load i32, i32* @x.615
  %13 = load i32, i32* @y.616
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 384307168202282325

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.52"*, %class.Point** dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.52"*, align 8
  %4 = alloca %class.Point**, align 8
  store %"class.__gnu_cxx::__normal_iterator.52"* %0, %"class.__gnu_cxx::__normal_iterator.52"** %3, align 8
  store %class.Point** %1, %class.Point*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.52"*, %"class.__gnu_cxx::__normal_iterator.52"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.52", %"class.__gnu_cxx::__normal_iterator.52"* %5, i32 0, i32 0
  %7 = load %class.Point**, %class.Point*** %4, align 8
  %8 = load %class.Point*, %class.Point** %7, align 8
  store %class.Point* %8, %class.Point** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.13"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load i64, i64* %4, align 8
  %8 = call %class.Point* @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %6, i64 %7, i8* null)
  ret %class.Point* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %7) #13
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.621
  %14 = load i32, i32* @y.622
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 24
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to %class.Point*
  %25 = load i32, i32* @x.621
  %26 = load i32, i32* @y.622
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = sub i64 %33, 24
  %gen = mul i64 %_, 24
  %_1 = sub i64 0, %33
  %gen2 = add i64 %_1, 24
  %_3 = sub i64 %33, 24
  %gen4 = mul i64 %_3, 24
  %_5 = shl i64 %33, 24
  %_6 = sub i64 %33, 24
  %gen7 = mul i64 %_6, 24
  %34 = mul i64 %33, 24
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to %class.Point*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.13"* dereferenceable(1), %class.Point*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.13"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.14"* %8, %class.Point* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.14"*, %class.Point*, i64) #2 comdat align 2 {
  %4 = load i32, i32* @x.625
  %5 = load i32, i32* @y.626
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %12, align 8
  %16 = load %class.Point*, %class.Point** %13, align 8
  %17 = bitcast %class.Point* %16 to i8*
  call void @_ZdlPv(i8* %17) #13
  %18 = load i32, i32* @x.625
  %19 = load i32, i32* @y.626
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %27 = alloca %class.Point*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %26, align 8
  store %class.Point* %1, %class.Point** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %26, align 8
  %30 = load %class.Point*, %class.Point** %27, align 8
  %31 = bitcast %class.Point* %30 to i8*
  call void @_ZdlPv(i8* %31) #13
  br label %originalBB
}

declare void @_ZN13ExceptionBase9SetFieldsEPKciS1_S1_S1_(%class.ExceptionBase*, i8*, i32, i8*, i8*, i8*) #1

declare i8* @__cxa_allocate_exception(i64)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedC2ERKS1_(%"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* dereferenceable(48)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, align 8
  %4 = alloca %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, align 8
  store %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %0, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %3, align 8
  store %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %1, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %4, align 8
  %5 = load %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %3, align 8
  %6 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %5 to %class.ExceptionBase*
  %7 = load %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"*, %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"** %4, align 8
  %8 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %7 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2ERKS_(%class.ExceptionBase* %6, %class.ExceptionBase* dereferenceable(48) %8) #13
  %9 = bitcast %"class.FiniteElementBase<3>::ExcInterpolationNotImplemented"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN17FiniteElementBaseILi3EE30ExcInterpolationNotImplementedE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

declare void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN13ExceptionBaseC2ERKS_(%class.ExceptionBase*, %class.ExceptionBase* dereferenceable(48)) unnamed_addr #2 comdat align 2 {
  %3 = load i32, i32* @x.629
  %4 = load i32, i32* @y.630
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.ExceptionBase*, align 8
  %12 = alloca %class.ExceptionBase*, align 8
  store %class.ExceptionBase* %0, %class.ExceptionBase** %11, align 8
  store %class.ExceptionBase* %1, %class.ExceptionBase** %12, align 8
  %13 = load %class.ExceptionBase*, %class.ExceptionBase** %11, align 8
  %14 = bitcast %class.ExceptionBase* %13 to %"class.std::exception"*
  %15 = load %class.ExceptionBase*, %class.ExceptionBase** %12, align 8
  %16 = bitcast %class.ExceptionBase* %15 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2ERKS_(%"class.std::exception"* %14, %"class.std::exception"* dereferenceable(8) %16) #13
  %17 = bitcast %class.ExceptionBase* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV13ExceptionBase, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %class.ExceptionBase, %class.ExceptionBase* %13, i32 0, i32 1
  %19 = load %class.ExceptionBase*, %class.ExceptionBase** %12, align 8
  %20 = getelementptr inbounds %class.ExceptionBase, %class.ExceptionBase* %19, i32 0, i32 1
  %21 = bitcast i8** %18 to i8*
  %22 = bitcast i8** %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 40, i32 8, i1 false)
  %23 = load i32, i32* @x.629
  %24 = load i32, i32* @y.630
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %class.ExceptionBase*, align 8
  %32 = alloca %class.ExceptionBase*, align 8
  store %class.ExceptionBase* %0, %class.ExceptionBase** %31, align 8
  store %class.ExceptionBase* %1, %class.ExceptionBase** %32, align 8
  %33 = load %class.ExceptionBase*, %class.ExceptionBase** %31, align 8
  %34 = bitcast %class.ExceptionBase* %33 to %"class.std::exception"*
  %35 = load %class.ExceptionBase*, %class.ExceptionBase** %32, align 8
  %36 = bitcast %class.ExceptionBase* %35 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2ERKS_(%"class.std::exception"* %34, %"class.std::exception"* dereferenceable(8) %36) #13
  %37 = bitcast %class.ExceptionBase* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV13ExceptionBase, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %class.ExceptionBase, %class.ExceptionBase* %33, i32 0, i32 1
  %39 = load %class.ExceptionBase*, %class.ExceptionBase** %32, align 8
  %40 = getelementptr inbounds %class.ExceptionBase, %class.ExceptionBase* %39, i32 0, i32 1
  %41 = bitcast i8** %38 to i8*
  %42 = bitcast i8** %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 40, i32 8, i1 false)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9exceptionC2ERKS_(%"class.std::exception"*, %"class.std::exception"* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = load i32, i32* @x.631
  %4 = load i32, i32* @y.632
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::exception"*, align 8
  %12 = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %0, %"class.std::exception"** %11, align 8
  store %"class.std::exception"* %1, %"class.std::exception"** %12, align 8
  %13 = load %"class.std::exception"*, %"class.std::exception"** %11, align 8
  %14 = bitcast %"class.std::exception"* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = load i32, i32* @x.631
  %16 = load i32, i32* @y.632
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.std::exception"*, align 8
  %24 = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %0, %"class.std::exception"** %23, align 8
  store %"class.std::exception"* %1, %"class.std::exception"** %24, align 8
  %25 = load %"class.std::exception"*, %"class.std::exception"** %23, align 8
  %26 = bitcast %"class.std::exception"* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %26, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64, %"class.std::allocator.30"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca %"class.std::allocator.30", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.30"* %1, %"class.std::allocator.30"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.30"* %5, %"class.std::allocator.30"* dereferenceable(1) %9) #13
  %10 = invoke i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.30"* dereferenceable(1) %5)
          to label %11 unwind label %14

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %5) #13
  br i1 %12, label %13, label %34

; <label>:13:                                     ; preds = %11
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)) #14
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.633
  %16 = load i32, i32* @y.634
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %6, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %7, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %5) #13
  %26 = load i32, i32* @x.633
  %27 = load i32, i32* @y.634
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %52

; <label>:34:                                     ; preds = %11
  %35 = load i32, i32* @x.633
  %36 = load i32, i32* @y.634
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i64, i64* %3, align 8
  %44 = load i32, i32* @x.633
  %45 = load i32, i32* @y.634
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64 %43

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i8*, i8** %6, align 8
  %54 = load i32, i32* %7, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

originalBBalteredBB:                              ; preds = %originalBB, %14
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %6, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %7, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %5) #13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %60 = load i64, i64* %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.29"*, i64, %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.29"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.30"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.30"* %2, %"class.std::allocator.30"** %6, align 8
  %9 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %6, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10, %"class.std::allocator.30"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.29"* %9, i64 %12)
          to label %13 unwind label %30

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.635
  %15 = load i32, i32* @y.636
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.635
  %23 = load i32, i32* @y.636
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:30:                                     ; preds = %3
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %7, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10) #13
  br label %34

; <label>:34:                                     ; preds = %30
  %35 = load i8*, i8** %7, align 8
  %36 = load i32, i32* %8, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.28"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.28"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.28"*, %"class.std::vector.28"** %4, align 8
  %8 = bitcast %"class.std::vector.28"* %7 to %"struct.std::_Vector_base.29"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %9 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = bitcast %"class.std::vector.28"* %7 to %"struct.std::_Vector_base.29"*
  %16 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %15)
  %17 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %12, i64 %13, i32* dereferenceable(4) %14, %"class.std::allocator.30"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.28"* %7 to %"struct.std::_Vector_base.29"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %20, i32 0, i32 1
  store i32* %17, i32** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.30"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.639
  %3 = load i32, i32* @y.640
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.30"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %10, align 8
  store i64 2305843009213693951, i64* %11, align 8
  %13 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.30"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.639
  %18 = load i32, i32* @y.640
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.30"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %25, align 8
  store i64 2305843009213693951, i64* %26, align 8
  %28 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.30"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2ERKS_(%"class.std::allocator.30"*, %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.30"*, align 8
  %4 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %3, align 8
  store %"class.std::allocator.30"* %1, %"class.std::allocator.30"** %4, align 8
  %5 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %3, align 8
  %6 = bitcast %"class.std::allocator.30"* %5 to %"class.__gnu_cxx::new_allocator.31"*
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.31"* %6, %"class.__gnu_cxx::new_allocator.31"* dereferenceable(1) %8) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.30"* dereferenceable(1)) #2 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %4) #13
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"*) #2 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %1, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.649
  %4 = load i32, i32* @y.650
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %12 = alloca %"class.std::allocator.30"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %11, align 8
  store %"class.std::allocator.30"* %1, %"class.std::allocator.30"** %12, align 8
  %15 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %11, align 8
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"class.std::allocator.30"*
  %17 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %12, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.30"* %16, %"class.std::allocator.30"* dereferenceable(1) %17) #13
  %18 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %19 = load i32, i32* @x.649
  %20 = load i32, i32* @y.650
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %18)
          to label %27 unwind label %44

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.649
  %29 = load i32, i32* @y.650
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.649
  %37 = load i32, i32* @y.650
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %13, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %14, align 4
  %48 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"class.std::allocator.30"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %48) #13
  br label %49

; <label>:49:                                     ; preds = %44
  %50 = load i8*, i8** %13, align 8
  %51 = load i32, i32* %14, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53

originalBBalteredBB:                              ; preds = %originalBB, %2
  %54 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %55 = alloca %"class.std::allocator.30"*, align 8
  %56 = alloca i8*
  %57 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %54, align 8
  store %"class.std::allocator.30"* %1, %"class.std::allocator.30"** %55, align 8
  %58 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %54, align 8
  %59 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %58 to %"class.std::allocator.30"*
  %60 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %55, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.30"* %59, %"class.std::allocator.30"* dereferenceable(1) %60) #13
  %61 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.29"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.29"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.29"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %9, i32 0, i32 0
  store i32* %7, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %24 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %25, i32 0, i32 2
  store i32* %23, i32** %26, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.29"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.653
  %4 = load i32, i32* @y.654
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.29"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.653
  %17 = load i32, i32* @y.654
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %29

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %25 to %"class.std::allocator.30"*
  %27 = load i64, i64* %12, align 8
  %28 = call i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.30"* dereferenceable(1) %26, i64 %27)
  br label %30

; <label>:29:                                     ; preds = %originalBBpart2
  br label %30

; <label>:30:                                     ; preds = %29, %24
  %31 = phi i32* [ %28, %24 ], [ null, %29 ]
  ret i32* %31

originalBBalteredBB:                              ; preds = %originalBB, %2
  %32 = alloca %"struct.std::_Vector_base.29"*, align 8
  %33 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %32, align 8
  store i64 %1, i64* %33, align 8
  %34 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %32, align 8
  %35 = load i64, i64* %33, align 8
  %36 = icmp ne i64 %35, 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.30"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.655
  %4 = load i32, i32* @y.656
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.30"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %11, align 8
  %14 = bitcast %"class.std::allocator.30"* %13 to %"class.__gnu_cxx::new_allocator.31"*
  %15 = load i64, i64* %12, align 8
  %16 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.655
  %18 = load i32, i32* @y.656
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.30"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %25, align 8
  %28 = bitcast %"class.std::allocator.30"* %27 to %"class.__gnu_cxx::new_allocator.31"*
  %29 = load i64, i64* %26, align 8
  %30 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %7) #13
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 4
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to i32*
  ret i32* %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.30"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = load i32, i32* @x.665
  %5 = load i32, i32* @y.666
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %15)
  %17 = load i64, i64* %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = call i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %16, i64 %17, i32* dereferenceable(4) %18)
  %20 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %12, i32* %19)
  %21 = load i32, i32* @x.665
  %22 = load i32, i32* @y.666
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca i32*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %32)
  %34 = load i64, i64* %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %33, i64 %34, i32* dereferenceable(4) %35)
  %37 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %29, i32* %36)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8), i32*) #2 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  br label %12

; <label>:12:                                     ; preds = %18, %3
  %13 = load i64, i64* %8, align 8
  %14 = icmp ugt i64 %13, 0
  br i1 %14, label %15, label %23

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %7, align 4
  %17 = load i32*, i32** %4, align 8
  store i32 %16, i32* %17, align 4
  br label %18

; <label>:18:                                     ; preds = %15
  %19 = load i64, i64* %8, align 8
  %20 = add i64 %19, -1
  store i64 %20, i64* %8, align 8
  %21 = load i32*, i32** %4, align 8
  %22 = getelementptr inbounds i32, i32* %21, i32 1
  store i32* %22, i32** %4, align 8
  br label %12

; <label>:23:                                     ; preds = %12
  %24 = load i32, i32* @x.669
  %25 = load i32, i32* @y.670
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = load i32*, i32** %4, align 8
  %33 = load i32, i32* @x.669
  %34 = load i32, i32* @y.670
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %32

originalBBalteredBB:                              ; preds = %originalBB, %23
  %41 = load i32*, i32** %4, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjET_S1_(i32*) #2 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"*) #2 comdat align 2 {
  %2 = load i32, i32* @x.673
  %3 = load i32, i32* @y.674
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.28"*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %10, align 8
  %11 = load %"class.std::vector.28"*, %"class.std::vector.28"** %10, align 8
  %12 = bitcast %"class.std::vector.28"* %11 to %"struct.std::_Vector_base.29"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = bitcast %"class.std::vector.28"* %11 to %"struct.std::_Vector_base.29"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = ptrtoint i32* %16 to i64
  %23 = ptrtoint i32* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 4
  %26 = load i32, i32* @x.673
  %27 = load i32, i32* @y.674
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.28"*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %34, align 8
  %35 = load %"class.std::vector.28"*, %"class.std::vector.28"** %34, align 8
  %36 = bitcast %"class.std::vector.28"* %35 to %"struct.std::_Vector_base.29"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %37 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::vector.28"* %35 to %"struct.std::_Vector_base.29"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = ptrtoint i32* %40 to i64
  %47 = ptrtoint i32* %45 to i64
  %_ = sub i64 0, %46
  %gen = add i64 %_, %47
  %_1 = sub i64 0, %46
  %gen2 = add i64 %_1, %47
  %48 = sub i64 %46, %47
  %_3 = sub i64 %48, 4
  %gen4 = mul i64 %_3, 4
  %_5 = sub i64 %48, 4
  %gen6 = mul i64 %_5, 4
  %_7 = shl i64 %48, 4
  %_8 = sub i64 %48, 4
  %gen9 = mul i64 %_8, 4
  %_10 = shl i64 %48, 4
  %_11 = sub i64 0, %48
  %gen12 = add i64 %_11, 4
  %49 = sdiv exact i64 %48, 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector.28"*, i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %6 = alloca %"class.std::vector.28"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %5, i32 0, i32 0
  store i32* %1, i32** %20, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32* %3, i32** %8, align 8
  %21 = load %"class.std::vector.28"*, %"class.std::vector.28"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %405

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load i32*, i32** %28, align 8
  %30 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = ptrtoint i32* %29 to i64
  %36 = ptrtoint i32* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 4
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %168

; <label>:41:                                     ; preds = %24
  %42 = load i32, i32* @x.675
  %43 = load i32, i32* @y.676
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %41, %originalBBalteredBB
  %50 = load i32*, i32** %8, align 8
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %9, align 4
  %52 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.28"* %21)
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %11, i32 0, i32 0
  store i32* %52, i32** %53, align 8
  %54 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %5)
  store i64 %54, i64* %10, align 8
  %55 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %55, i32 0, i32 0
  %57 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %56 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %57, i32 0, i32 1
  %59 = load i32*, i32** %58, align 8
  store i32* %59, i32** %12, align 8
  %60 = load i64, i64* %10, align 8
  %61 = load i64, i64* %7, align 8
  %62 = icmp ugt i64 %60, %61
  %63 = load i32, i32* @x.675
  %64 = load i32, i32* @y.676
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %62, label %71, label %114

; <label>:71:                                     ; preds = %originalBBpart2
  %72 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %73 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %74, i32 0, i32 1
  %76 = load i32*, i32** %75, align 8
  %77 = load i64, i64* %7, align 8
  %78 = sub i64 0, %77
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  %80 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %80, i32 0, i32 0
  %82 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %81 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %82, i32 0, i32 1
  %84 = load i32*, i32** %83, align 8
  %85 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %85, i32 0, i32 0
  %87 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %86 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %87, i32 0, i32 1
  %89 = load i32*, i32** %88, align 8
  %90 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %91 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %90)
  %92 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %79, i32* %84, i32* %89, %"class.std::allocator.30"* dereferenceable(1) %91)
  %93 = load i64, i64* %7, align 8
  %94 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %94, i32 0, i32 0
  %96 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %95 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %96, i32 0, i32 1
  %98 = load i32*, i32** %97, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 %93
  store i32* %99, i32** %97, align 8
  %100 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %101 = load i32*, i32** %100, align 8
  %102 = load i32*, i32** %12, align 8
  %103 = load i64, i64* %7, align 8
  %104 = sub i64 0, %103
  %105 = getelementptr inbounds i32, i32* %102, i64 %104
  %106 = load i32*, i32** %12, align 8
  %107 = call i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32* %101, i32* %105, i32* %106)
  %108 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %109 = load i32*, i32** %108, align 8
  %110 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %111 = load i32*, i32** %110, align 8
  %112 = load i64, i64* %7, align 8
  %113 = getelementptr inbounds i32, i32* %111, i64 %112
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %109, i32* %113, i32* dereferenceable(4) %9)
  br label %167

; <label>:114:                                    ; preds = %originalBBpart2
  %115 = load i32, i32* @x.675
  %116 = load i32, i32* @y.676
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %114, %originalBB1alteredBB
  %123 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %124 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %123, i32 0, i32 0
  %125 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %124 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %125, i32 0, i32 1
  %127 = load i32*, i32** %126, align 8
  %128 = load i64, i64* %7, align 8
  %129 = load i64, i64* %10, align 8
  %130 = sub i64 %128, %129
  %131 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %132 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %131)
  %133 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %127, i64 %130, i32* dereferenceable(4) %9, %"class.std::allocator.30"* dereferenceable(1) %132)
  %134 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %134, i32 0, i32 0
  %136 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %135 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %136, i32 0, i32 1
  store i32* %133, i32** %137, align 8
  %138 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %139 = load i32*, i32** %138, align 8
  %140 = load i32*, i32** %12, align 8
  %141 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %141, i32 0, i32 0
  %143 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %142 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %143, i32 0, i32 1
  %145 = load i32*, i32** %144, align 8
  %146 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %147 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %146)
  %148 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %139, i32* %140, i32* %145, %"class.std::allocator.30"* dereferenceable(1) %147)
  %149 = load i64, i64* %10, align 8
  %150 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %150, i32 0, i32 0
  %152 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %151 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %152, i32 0, i32 1
  %154 = load i32*, i32** %153, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 %149
  store i32* %155, i32** %153, align 8
  %156 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %157 = load i32*, i32** %156, align 8
  %158 = load i32*, i32** %12, align 8
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %157, i32* %158, i32* dereferenceable(4) %9)
  %159 = load i32, i32* @x.675
  %160 = load i32, i32* @y.676
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %167

; <label>:167:                                    ; preds = %originalBBpart24, %71
  br label %404

; <label>:168:                                    ; preds = %24
  %169 = load i64, i64* %7, align 8
  %170 = call i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector.28"* %21, i64 %169, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0))
  store i64 %170, i64* %13, align 8
  %171 = call i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.28"* %21)
  %172 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %15, i32 0, i32 0
  store i32* %171, i32** %172, align 8
  %173 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %15)
  store i64 %173, i64* %14, align 8
  %174 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %175 = load i64, i64* %13, align 8
  %176 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.29"* %174, i64 %175)
  store i32* %176, i32** %16, align 8
  %177 = load i32*, i32** %16, align 8
  store i32* %177, i32** %17, align 8
  %178 = load i32*, i32** %16, align 8
  %179 = load i64, i64* %14, align 8
  %180 = getelementptr inbounds i32, i32* %178, i64 %179
  %181 = load i64, i64* %7, align 8
  %182 = load i32*, i32** %8, align 8
  %183 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %184 = invoke dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %183)
          to label %185 unwind label %283

; <label>:185:                                    ; preds = %168
  %186 = invoke i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %180, i64 %181, i32* dereferenceable(4) %182, %"class.std::allocator.30"* dereferenceable(1) %184)
          to label %187 unwind label %283

; <label>:187:                                    ; preds = %185
  %188 = load i32, i32* @x.675
  %189 = load i32, i32* @y.676
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %187, %originalBB6alteredBB
  store i32* null, i32** %17, align 8
  %196 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %196, i32 0, i32 0
  %198 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %197 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %198, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = load i32, i32* @x.675
  %202 = load i32, i32* @y.676
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %209 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
          to label %210 unwind label %283

; <label>:210:                                    ; preds = %originalBBpart28
  %211 = load i32, i32* @x.675
  %212 = load i32, i32* @y.676
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %210, %originalBB10alteredBB
  %219 = load i32*, i32** %209, align 8
  %220 = load i32*, i32** %16, align 8
  %221 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %222 = load i32, i32* @x.675
  %223 = load i32, i32* @y.676
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %230 = invoke dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %221)
          to label %231 unwind label %283

; <label>:231:                                    ; preds = %originalBBpart212
  %232 = load i32, i32* @x.675
  %233 = load i32, i32* @y.676
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %231, %originalBB14alteredBB
  %240 = load i32, i32* @x.675
  %241 = load i32, i32* @y.676
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %248 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %200, i32* %219, i32* %220, %"class.std::allocator.30"* dereferenceable(1) %230)
          to label %249 unwind label %283

; <label>:249:                                    ; preds = %originalBBpart216
  store i32* %248, i32** %17, align 8
  %250 = load i64, i64* %7, align 8
  %251 = load i32*, i32** %17, align 8
  %252 = getelementptr inbounds i32, i32* %251, i64 %250
  store i32* %252, i32** %17, align 8
  %253 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
          to label %254 unwind label %283

; <label>:254:                                    ; preds = %249
  %255 = load i32, i32* @x.675
  %256 = load i32, i32* @y.676
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %254, %originalBB18alteredBB
  %263 = load i32*, i32** %253, align 8
  %264 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %265 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %264, i32 0, i32 0
  %266 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %265 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %267 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %266, i32 0, i32 1
  %268 = load i32*, i32** %267, align 8
  %269 = load i32*, i32** %17, align 8
  %270 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %271 = load i32, i32* @x.675
  %272 = load i32, i32* @y.676
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %279 = invoke dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %270)
          to label %280 unwind label %283

; <label>:280:                                    ; preds = %originalBBpart220
  %281 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %263, i32* %268, i32* %269, %"class.std::allocator.30"* dereferenceable(1) %279)
          to label %282 unwind label %283

; <label>:282:                                    ; preds = %280
  store i32* %281, i32** %17, align 8
  br label %354

; <label>:283:                                    ; preds = %280, %originalBBpart220, %249, %originalBBpart216, %originalBBpart212, %originalBBpart28, %185, %168
  %284 = landingpad { i8*, i32 }
          catch i8* null
  %285 = extractvalue { i8*, i32 } %284, 0
  store i8* %285, i8** %18, align 8
  %286 = extractvalue { i8*, i32 } %284, 1
  store i32 %286, i32* %19, align 4
  br label %287

; <label>:287:                                    ; preds = %283
  %288 = load i8*, i8** %18, align 8
  %289 = call i8* @__cxa_begin_catch(i8* %288) #13
  %290 = load i32*, i32** %17, align 8
  %291 = icmp ne i32* %290, null
  br i1 %291, label %325, label %292

; <label>:292:                                    ; preds = %287
  %293 = load i32*, i32** %16, align 8
  %294 = load i64, i64* %14, align 8
  %295 = getelementptr inbounds i32, i32* %293, i64 %294
  %296 = load i32*, i32** %16, align 8
  %297 = load i64, i64* %14, align 8
  %298 = getelementptr inbounds i32, i32* %296, i64 %297
  %299 = load i64, i64* %7, align 8
  %300 = getelementptr inbounds i32, i32* %298, i64 %299
  %301 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %302 = invoke dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %301)
          to label %303 unwind label %305

; <label>:303:                                    ; preds = %292
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %295, i32* %300, %"class.std::allocator.30"* dereferenceable(1) %302)
          to label %304 unwind label %305

; <label>:304:                                    ; preds = %303
  br label %332

; <label>:305:                                    ; preds = %336, %332, %330, %325, %303, %292
  %306 = load i32, i32* @x.675
  %307 = load i32, i32* @y.676
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %305, %originalBB22alteredBB
  %314 = landingpad { i8*, i32 }
          cleanup
  %315 = extractvalue { i8*, i32 } %314, 0
  store i8* %315, i8** %18, align 8
  %316 = extractvalue { i8*, i32 } %314, 1
  store i32 %316, i32* %19, align 4
  %317 = load i32, i32* @x.675
  %318 = load i32, i32* @y.676
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @__cxa_end_catch()
          to label %337 unwind label %427

; <label>:325:                                    ; preds = %287
  %326 = load i32*, i32** %16, align 8
  %327 = load i32*, i32** %17, align 8
  %328 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %329 = invoke dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %328)
          to label %330 unwind label %305

; <label>:330:                                    ; preds = %325
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %326, i32* %327, %"class.std::allocator.30"* dereferenceable(1) %329)
          to label %331 unwind label %305

; <label>:331:                                    ; preds = %330
  br label %332

; <label>:332:                                    ; preds = %331, %304
  %333 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %334 = load i32*, i32** %16, align 8
  %335 = load i64, i64* %13, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.29"* %333, i32* %334, i64 %335)
          to label %336 unwind label %305

; <label>:336:                                    ; preds = %332
  invoke void @__cxa_rethrow() #14
          to label %430 unwind label %305

; <label>:337:                                    ; preds = %originalBBpart224
  %338 = load i32, i32* @x.675
  %339 = load i32, i32* @y.676
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %337, %originalBB26alteredBB
  %346 = load i32, i32* @x.675
  %347 = load i32, i32* @y.676
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %406

; <label>:354:                                    ; preds = %282
  %355 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %356 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %355, i32 0, i32 0
  %357 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %356 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %358 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %357, i32 0, i32 0
  %359 = load i32*, i32** %358, align 8
  %360 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %361 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %360, i32 0, i32 0
  %362 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %361 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %362, i32 0, i32 1
  %364 = load i32*, i32** %363, align 8
  %365 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %366 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %365)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %359, i32* %364, %"class.std::allocator.30"* dereferenceable(1) %366)
  %367 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %368 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %369 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %368, i32 0, i32 0
  %370 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %369 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %371 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %370, i32 0, i32 0
  %372 = load i32*, i32** %371, align 8
  %373 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %374 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %373, i32 0, i32 0
  %375 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %374 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %375, i32 0, i32 2
  %377 = load i32*, i32** %376, align 8
  %378 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %379 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %378, i32 0, i32 0
  %380 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %379 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %380, i32 0, i32 0
  %382 = load i32*, i32** %381, align 8
  %383 = ptrtoint i32* %377 to i64
  %384 = ptrtoint i32* %382 to i64
  %385 = sub i64 %383, %384
  %386 = sdiv exact i64 %385, 4
  call void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.29"* %367, i32* %372, i64 %386)
  %387 = load i32*, i32** %16, align 8
  %388 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %389 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %388, i32 0, i32 0
  %390 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %389 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %391 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %390, i32 0, i32 0
  store i32* %387, i32** %391, align 8
  %392 = load i32*, i32** %17, align 8
  %393 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %393, i32 0, i32 0
  %395 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %394 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %395, i32 0, i32 1
  store i32* %392, i32** %396, align 8
  %397 = load i32*, i32** %16, align 8
  %398 = load i64, i64* %13, align 8
  %399 = getelementptr inbounds i32, i32* %397, i64 %398
  %400 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %401 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %400, i32 0, i32 0
  %402 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %401 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %403 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %402, i32 0, i32 2
  store i32* %399, i32** %403, align 8
  br label %404

; <label>:404:                                    ; preds = %354, %167
  br label %405

; <label>:405:                                    ; preds = %404, %4
  ret void

; <label>:406:                                    ; preds = %originalBBpart228
  %407 = load i32, i32* @x.675
  %408 = load i32, i32* @y.676
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %406, %originalBB30alteredBB
  %415 = load i8*, i8** %18, align 8
  %416 = load i32, i32* %19, align 4
  %417 = insertvalue { i8*, i32 } undef, i8* %415, 0
  %418 = insertvalue { i8*, i32 } %417, i32 %416, 1
  %419 = load i32, i32* @x.675
  %420 = load i32, i32* @y.676
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  resume { i8*, i32 } %418

; <label>:427:                                    ; preds = %originalBBpart224
  %428 = landingpad { i8*, i32 }
          catch i8* null
  %429 = extractvalue { i8*, i32 } %428, 0
  call void @__clang_call_terminate(i8* %429) #11
  unreachable

; <label>:430:                                    ; preds = %336
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %41
  %431 = load i32*, i32** %8, align 8
  %432 = load i32, i32* %431, align 4
  store i32 %432, i32* %9, align 4
  %433 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.28"* %21)
  %434 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %11, i32 0, i32 0
  store i32* %433, i32** %434, align 8
  %435 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %5)
  store i64 %435, i64* %10, align 8
  %436 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %437 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %436, i32 0, i32 0
  %438 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %437 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %439 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %438, i32 0, i32 1
  %440 = load i32*, i32** %439, align 8
  store i32* %440, i32** %12, align 8
  %441 = load i64, i64* %10, align 8
  %442 = load i64, i64* %7, align 8
  %443 = icmp ugt i64 %441, %442
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %114
  %444 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %445 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %444, i32 0, i32 0
  %446 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %445 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %447 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %446, i32 0, i32 1
  %448 = load i32*, i32** %447, align 8
  %449 = load i64, i64* %7, align 8
  %450 = load i64, i64* %10, align 8
  %451 = sub i64 %449, %450
  %452 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %453 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %452)
  %454 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %448, i64 %451, i32* dereferenceable(4) %9, %"class.std::allocator.30"* dereferenceable(1) %453)
  %455 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %456 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %455, i32 0, i32 0
  %457 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %456 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %458 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %457, i32 0, i32 1
  store i32* %454, i32** %458, align 8
  %459 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %460 = load i32*, i32** %459, align 8
  %461 = load i32*, i32** %12, align 8
  %462 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %463 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %462, i32 0, i32 0
  %464 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %463 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %465 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %464, i32 0, i32 1
  %466 = load i32*, i32** %465, align 8
  %467 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %468 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %467)
  %469 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %460, i32* %461, i32* %466, %"class.std::allocator.30"* dereferenceable(1) %468)
  %470 = load i64, i64* %10, align 8
  %471 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %472 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %471, i32 0, i32 0
  %473 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %472 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %474 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %473, i32 0, i32 1
  %475 = load i32*, i32** %474, align 8
  %476 = getelementptr inbounds i32, i32* %475, i64 %470
  store i32* %476, i32** %474, align 8
  %477 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %478 = load i32*, i32** %477, align 8
  %479 = load i32*, i32** %12, align 8
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %478, i32* %479, i32* dereferenceable(4) %9)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %187
  store i32* null, i32** %17, align 8
  %480 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %481 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %480, i32 0, i32 0
  %482 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %481 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %483 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %482, i32 0, i32 0
  %484 = load i32*, i32** %483, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %210
  %485 = load i32*, i32** %209, align 8
  %486 = load i32*, i32** %16, align 8
  %487 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %231
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %254
  %488 = load i32*, i32** %253, align 8
  %489 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  %490 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %489, i32 0, i32 0
  %491 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %490 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %492 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %491, i32 0, i32 1
  %493 = load i32*, i32** %492, align 8
  %494 = load i32*, i32** %17, align 8
  %495 = bitcast %"class.std::vector.28"* %21 to %"struct.std::_Vector_base.29"*
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %305
  %496 = landingpad { i8*, i32 }
          cleanup
  %497 = extractvalue { i8*, i32 } %496, 0
  store i8* %497, i8** %18, align 8
  %498 = extractvalue { i8*, i32 } %496, 1
  store i32 %498, i32* %19, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %337
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %406
  %499 = load i8*, i8** %18, align 8
  %500 = load i32, i32* %19, align 4
  %501 = insertvalue { i8*, i32 } undef, i8* %499, 0
  %502 = insertvalue { i8*, i32 } %501, i32 %500, 1
  br label %originalBB30
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.28"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %3 = alloca %"class.std::vector.28"*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %3, align 8
  %4 = load %"class.std::vector.28"*, %"class.std::vector.28"** %3, align 8
  %5 = bitcast %"class.std::vector.28"* %4 to %"struct.std::_Vector_base.29"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.53"* %2, i32** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.28"*, i32*) #0 comdat align 2 {
  %3 = load i32, i32* @x.679
  %4 = load i32, i32* @y.680
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.28"*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %11, align 8
  store i32* %1, i32** %12, align 8
  %14 = load %"class.std::vector.28"*, %"class.std::vector.28"** %11, align 8
  %15 = bitcast %"class.std::vector.28"* %14 to %"struct.std::_Vector_base.29"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %17, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = load i32*, i32** %12, align 8
  %21 = ptrtoint i32* %19 to i64
  %22 = ptrtoint i32* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 4
  store i64 %24, i64* %13, align 8
  %25 = load i64, i64* %13, align 8
  %26 = icmp ne i64 %25, 0
  %27 = load i32, i32* @x.679
  %28 = load i32, i32* @y.680
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %65

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.679
  %37 = load i32, i32* @y.680
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %35, %originalBB11alteredBB
  %44 = load i32*, i32** %12, align 8
  %45 = bitcast %"class.std::vector.28"* %14 to %"struct.std::_Vector_base.29"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %46 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %47, i32 0, i32 1
  %49 = load i32*, i32** %48, align 8
  %50 = bitcast %"class.std::vector.28"* %14 to %"struct.std::_Vector_base.29"*
  %51 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %50)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %44, i32* %49, %"class.std::allocator.30"* dereferenceable(1) %51)
  %52 = load i32*, i32** %12, align 8
  %53 = bitcast %"class.std::vector.28"* %14 to %"struct.std::_Vector_base.29"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %53, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %54 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %55, i32 0, i32 1
  store i32* %52, i32** %56, align 8
  %57 = load i32, i32* @x.679
  %58 = load i32, i32* @y.680
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %65

; <label>:65:                                     ; preds = %originalBBpart213, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %66 = alloca %"class.std::vector.28"*, align 8
  %67 = alloca i32*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %66, align 8
  store i32* %1, i32** %67, align 8
  %69 = load %"class.std::vector.28"*, %"class.std::vector.28"** %66, align 8
  %70 = bitcast %"class.std::vector.28"* %69 to %"struct.std::_Vector_base.29"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %71 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %72, i32 0, i32 1
  %74 = load i32*, i32** %73, align 8
  %75 = load i32*, i32** %67, align 8
  %76 = ptrtoint i32* %74 to i64
  %77 = ptrtoint i32* %75 to i64
  %_ = sub i64 %76, %77
  %gen = mul i64 %_, %77
  %_1 = sub i64 0, %76
  %gen2 = add i64 %_1, %77
  %_3 = shl i64 %76, %77
  %78 = sub i64 %76, %77
  %_4 = shl i64 %78, 4
  %_5 = sub i64 %78, 4
  %gen6 = mul i64 %_5, 4
  %_7 = sub i64 %78, 4
  %gen8 = mul i64 %_7, 4
  %_9 = sub i64 0, %78
  %gen10 = add i64 %_9, 4
  %79 = sdiv exact i64 %78, 4
  store i64 %79, i64* %68, align 8
  %80 = load i64, i64* %68, align 8
  %81 = icmp ne i64 %80, 0
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %35
  %82 = load i32*, i32** %12, align 8
  %83 = bitcast %"class.std::vector.28"* %14 to %"struct.std::_Vector_base.29"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %84 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %85, i32 0, i32 1
  %87 = load i32*, i32** %86, align 8
  %88 = bitcast %"class.std::vector.28"* %14 to %"struct.std::_Vector_base.29"*
  %89 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %88)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %82, i32* %87, %"class.std::allocator.30"* dereferenceable(1) %89)
  %90 = load i32*, i32** %12, align 8
  %91 = bitcast %"class.std::vector.28"* %14 to %"struct.std::_Vector_base.29"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %91, i32 0, i32 0
  %93 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %92 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %93, i32 0, i32 1
  store i32* %90, i32** %94, align 8
  br label %originalBB11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %1, %"class.__gnu_cxx::__normal_iterator.53"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5)
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %8)
  %10 = load i32*, i32** %9, align 8
  %11 = ptrtoint i32* %7 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 4
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.30"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.683
  %6 = load i32, i32* @y.684
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %13, align 8
  store i32* %1, i32** %14, align 8
  store i32* %2, i32** %15, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %16, align 8
  %17 = load i32*, i32** %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = load i32*, i32** %15, align 8
  %20 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %16, align 8
  %21 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %17, i32* %18, i32* %19, %"class.std::allocator.30"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.683
  %23 = load i32, i32* @y.684
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %33, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = load i32*, i32** %32, align 8
  %37 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %33, align 8
  %38 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %34, i32* %35, i32* %36, %"class.std::allocator.30"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"*) #2 comdat align 2 {
  %2 = load i32, i32* @x.687
  %3 = load i32, i32* @y.688
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.687
  %14 = load i32, i32* @y.688
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPjjEvT_S1_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = load i32, i32* @x.689
  %5 = load i32, i32* @y.690
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %15)
  %17 = load i32*, i32** %13, align 8
  %18 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %17)
  %19 = load i32*, i32** %14, align 8
  call void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %16, i32* %18, i32* dereferenceable(4) %19)
  %20 = load i32, i32* @x.689
  %21 = load i32, i32* @y.690
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  store i32* %2, i32** %30, align 8
  %31 = load i32*, i32** %28, align 8
  %32 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %31)
  %33 = load i32*, i32** %29, align 8
  %34 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %33)
  %35 = load i32*, i32** %30, align 8
  call void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %32, i32* %34, i32* dereferenceable(4) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector.28"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.28"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.28"*, %"class.std::vector.28"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.28"* %9)
  %11 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #14
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* @x.691
  %19 = load i32, i32* @y.692
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %9)
  %27 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %9)
  store i64 %27, i64* %8, align 8
  %28 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %26, %29
  store i64 %30, i64* %7, align 8
  %31 = load i64, i64* %7, align 8
  %32 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %9)
  %33 = icmp ult i64 %31, %32
  %34 = load i32, i32* @x.691
  %35 = load i32, i32* @y.692
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %46, label %42

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i64, i64* %7, align 8
  %44 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.28"* %9)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %42, %originalBBpart2
  %47 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.28"* %9)
  br label %50

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %7, align 8
  br label %50

; <label>:50:                                     ; preds = %48, %46
  %51 = phi i64 [ %47, %46 ], [ %49, %48 ]
  ret i64 %51

originalBBalteredBB:                              ; preds = %originalBB, %17
  %52 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %9)
  %53 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %9)
  store i64 %53, i64* %8, align 8
  %54 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %55 = load i64, i64* %54, align 8
  %_ = sub i64 %52, %55
  %gen = mul i64 %_, %55
  %_1 = shl i64 %52, %55
  %_2 = shl i64 %52, %55
  %_3 = sub i64 0, %52
  %gen4 = add i64 %_3, %55
  %_5 = sub i64 0, %52
  %gen6 = add i64 %_5, %55
  %_7 = shl i64 %52, %55
  %_8 = sub i64 %52, %55
  %gen9 = mul i64 %_8, %55
  %_10 = sub i64 0, %52
  %gen11 = add i64 %_10, %55
  %56 = add i64 %52, %55
  store i64 %56, i64* %7, align 8
  %57 = load i64, i64* %7, align 8
  %58 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.28"* %9)
  %59 = icmp ult i64 %57, %58
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.28"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.693
  %3 = load i32, i32* @y.694
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %11 = alloca %"class.std::vector.28"*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %11, align 8
  %12 = load %"class.std::vector.28"*, %"class.std::vector.28"** %11, align 8
  %13 = bitcast %"class.std::vector.28"* %12 to %"struct.std::_Vector_base.29"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.53"* %10, i32** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %10, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* @x.693
  %20 = load i32, i32* @y.694
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %28 = alloca %"class.std::vector.28"*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %28, align 8
  %29 = load %"class.std::vector.28"*, %"class.std::vector.28"** %28, align 8
  %30 = bitcast %"class.std::vector.28"* %29 to %"struct.std::_Vector_base.29"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.53"* %27, i32** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %27, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.30"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.695
  %6 = load i32, i32* @y.696
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %13, align 8
  store i32* %1, i32** %14, align 8
  store i32* %2, i32** %15, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %16, align 8
  %17 = load i32*, i32** %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = load i32*, i32** %15, align 8
  %20 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %16, align 8
  %21 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %17, i32* %18, i32* %19, %"class.std::allocator.30"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.695
  %23 = load i32, i32* @y.696
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %33, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = load i32*, i32** %32, align 8
  %37 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %33, align 8
  %38 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %34, i32* %35, i32* %36, %"class.std::allocator.30"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.30"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32* %7, i32* %8, i32* %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  %14 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %6, i32* %13)
  ret i32* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPjET_S1_(i32*) #2 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #2 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = ptrtoint i32* %8 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load i32*, i32** %6, align 8
  %18 = bitcast i32* %17 to i8*
  %19 = load i32*, i32** %4, align 8
  %20 = bitcast i32* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 4, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 4, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load i32, i32* @x.711
  %25 = load i32, i32* @y.712
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = load i32*, i32** %6, align 8
  %33 = load i64, i64* %7, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %33
  %35 = load i32, i32* @x.711
  %36 = load i32, i32* @y.712
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %34

originalBBalteredBB:                              ; preds = %originalBB, %23
  %43 = load i32*, i32** %6, align 8
  %44 = load i64, i64* %7, align 8
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.713
  %5 = load i32, i32* @y.714
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %15)
  %17 = load i32*, i32** %13, align 8
  %18 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %17)
  %19 = load i32*, i32** %14, align 8
  %20 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %19)
  %21 = call i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32* %16, i32* %18, i32* %20)
  %22 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %14, i32* %21)
  %23 = load i32, i32* @x.713
  %24 = load i32, i32* @y.714
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %22

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  store i32* %0, i32** %31, align 8
  store i32* %1, i32** %32, align 8
  store i32* %2, i32** %33, align 8
  %34 = load i32*, i32** %31, align 8
  %35 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %34)
  %36 = load i32*, i32** %32, align 8
  %37 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %36)
  %38 = load i32*, i32** %33, align 8
  %39 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %38)
  %40 = call i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32* %35, i32* %37, i32* %39)
  %41 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %33, i32* %40)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #2 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = ptrtoint i32* %8 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %42

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.717
  %18 = load i32, i32* @y.718
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32*, i32** %6, align 8
  %26 = load i64, i64* %7, align 8
  %27 = sub i64 0, %26
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  %29 = bitcast i32* %28 to i8*
  %30 = load i32*, i32** %4, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = load i64, i64* %7, align 8
  %33 = mul i64 4, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  %34 = load i32, i32* @x.717
  %35 = load i32, i32* @y.718
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %originalBBpart2, %3
  %43 = load i32, i32* @x.717
  %44 = load i32, i32* @y.718
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %42, %originalBB13alteredBB
  %51 = load i32*, i32** %6, align 8
  %52 = load i64, i64* %7, align 8
  %53 = sub i64 0, %52
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i32, i32* @x.717
  %56 = load i32, i32* @y.718
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart219, label %originalBB13alteredBB

originalBBpart219:                                ; preds = %originalBB13
  ret i32* %54

originalBBalteredBB:                              ; preds = %originalBB, %16
  %63 = load i32*, i32** %6, align 8
  %64 = load i64, i64* %7, align 8
  %_ = sub i64 0, %64
  %gen = mul i64 %_, %64
  %_1 = sub i64 0, %64
  %gen2 = mul i64 %_1, %64
  %65 = sub i64 0, %64
  %66 = getelementptr inbounds i32, i32* %63, i64 %65
  %67 = bitcast i32* %66 to i8*
  %68 = load i32*, i32** %4, align 8
  %69 = bitcast i32* %68 to i8*
  %70 = load i64, i64* %7, align 8
  %_3 = shl i64 4, %70
  %_4 = sub i64 0, 4
  %gen5 = add i64 %_4, %70
  %_6 = sub i64 4, %70
  %gen7 = mul i64 %_6, %70
  %_8 = shl i64 4, %70
  %_9 = sub i64 0, 4
  %gen10 = add i64 %_9, %70
  %_11 = sub i64 4, %70
  %gen12 = mul i64 %_11, %70
  %71 = mul i64 4, %70
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %67, i8* %69, i64 %71, i32 4, i1 false)
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %42
  %72 = load i32*, i32** %6, align 8
  %73 = load i64, i64* %7, align 8
  %_14 = sub i64 0, %73
  %gen15 = mul i64 %_14, %73
  %_16 = sub i64 0, 0
  %gen17 = add i64 %_16, %73
  %74 = sub i64 0, %73
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  br label %originalBB13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #2 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  br label %10

; <label>:10:                                     ; preds = %49, %3
  %11 = load i32, i32* @x.719
  %12 = load i32, i32* @y.720
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load i32*, i32** %4, align 8
  %20 = load i32*, i32** %5, align 8
  %21 = icmp ne i32* %19, %20
  %22 = load i32, i32* @x.719
  %23 = load i32, i32* @y.720
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %52

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.719
  %32 = load i32, i32* @y.720
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i32, i32* %7, align 4
  %40 = load i32*, i32** %4, align 8
  store i32 %39, i32* %40, align 4
  %41 = load i32, i32* @x.719
  %42 = load i32, i32* @y.720
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load i32*, i32** %4, align 8
  %51 = getelementptr inbounds i32, i32* %50, i32 1
  store i32* %51, i32** %4, align 8
  br label %10

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i32, i32* @x.719
  %54 = load i32, i32* @y.720
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i32, i32* @x.719
  %62 = load i32, i32* @y.720
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %69 = load i32*, i32** %4, align 8
  %70 = load i32*, i32** %5, align 8
  %71 = icmp ne i32* %69, %70
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %72 = load i32, i32* %7, align 4
  %73 = load i32*, i32** %4, align 8
  store i32 %72, i32* %73, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.28"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.28"*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %2, align 8
  %3 = load %"class.std::vector.28"*, %"class.std::vector.28"** %2, align 8
  %4 = bitcast %"class.std::vector.28"* %3 to %"struct.std::_Vector_base.29"*
  %5 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %4)
  %6 = call i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.30"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.30"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"*) #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.29"*, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %2, align 8
  %3 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %4 to %"class.std::allocator.30"*
  ret %"class.std::allocator.30"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.53"*, i32** dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = load i32, i32* @x.725
  %4 = load i32, i32* @y.726
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %12 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %11, align 8
  store i32** %1, i32*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %13, i32 0, i32 0
  %15 = load i32**, i32*** %12, align 8
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %14, align 8
  %17 = load i32, i32* @x.725
  %18 = load i32, i32* @y.726
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %26 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %25, align 8
  store i32** %1, i32*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %27, i32 0, i32 0
  %29 = load i32**, i32*** %26, align 8
  %30 = load i32*, i32** %29, align 8
  store i32* %30, i32** %28, align 8
  br label %originalBB
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nounwind readonly }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind }
attributes #14 = { noreturn }
attributes #15 = { builtin }
attributes #16 = { builtin nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
