; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_sparse_matrix.double.ll'
source_filename = "sparse_matrix.double.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.SparseMatrix<double>::ExcInvalidIndex" = type { %class.ExceptionBase, i32, i32 }
%class.ExceptionBase = type { %"class.std::exception", i8*, i32, i8*, i8*, i8* }
%"class.std::exception" = type { i32 (...)** }
%"class.SparseMatrix<double>::ExcInvalidIndex1" = type <{ %class.ExceptionBase, i32, [4 x i8] }>
%"class.SparseMatrix<double>::ExcIteratorRange" = type { %class.ExceptionBase, i32, i32 }
%class.SparseMatrix = type <{ i32 (...)**, %class.SmartPointer, double*, i32, [4 x i8], %class.Subscriptor }>
%class.SmartPointer = type { %class.SparsityPattern* }
%class.SparsityPattern = type <{ %class.Subscriptor, i32, i32, i32, i32, i32, [4 x i8], i32*, i32*, i8, i8, [6 x i8] }>
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::binder2nd" = type { %"struct.std::not_equal_to", double }
%"struct.std::not_equal_to" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_pred" = type { %"class.std::binder2nd" }
%class.Vector = type { i32 (...)**, i32, i32, double* }
%"class.internals::SparseMatrixIterators::Iterator" = type { %"class.internals::SparseMatrixIterators::Accessor" }
%"class.internals::SparseMatrixIterators::Accessor" = type { %"class.internals::SparsityPatternIterators::Accessor", %class.SparseMatrix* }
%"class.internals::SparsityPatternIterators::Accessor" = type { %class.SparsityPattern*, i32, i32 }
%"class.internals::SparseMatrixIterators::Iterator.0" = type { %"class.internals::SparseMatrixIterators::Accessor.1" }
%"class.internals::SparseMatrixIterators::Accessor.1" = type { %"class.internals::SparsityPatternIterators::Accessor", %class.SparseMatrix* }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.StandardExceptions::ExcIO" = type { %class.ExceptionBase }
%"struct.std::_Setw" = type { i32 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%class.SparseMatrix.2 = type <{ i32 (...)**, %class.SmartPointer, float*, i32, [4 x i8], %class.Subscriptor }>
%class.FullMatrix = type { %class.Table.base, [4 x i8] }
%class.Table.base = type { %class.TableBase.base }
%class.TableBase.base = type <{ %class.Subscriptor, float*, i32, %class.TableIndices }>
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%class.Table = type { %class.TableBase.base, [4 x i8] }
%class.TableBase = type <{ %class.Subscriptor, float*, i32, %class.TableIndices, [4 x i8] }>
%class.FullMatrix.4 = type { %class.Table.base.8, [4 x i8] }
%class.Table.base.8 = type { %class.TableBase.base.7 }
%class.TableBase.base.7 = type <{ %class.Subscriptor, double*, i32, %class.TableIndices }>
%class.Table.5 = type { %class.TableBase.base.7, [4 x i8] }
%class.TableBase.6 = type <{ %class.Subscriptor, double*, i32, %class.TableIndices, [4 x i8] }>
%class.Vector.10 = type { i32 (...)**, i32, i32, float* }
%class.BlockVector = type <{ %"class.std::vector", %class.BlockIndices, i32, [4 x i8] }>
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl" }
%"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data" = type { %class.Vector.10*, %class.Vector.10*, %class.Vector.10* }
%class.BlockIndices = type { i32, %"class.std::vector.11" }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.internal::BlockVectorIterators::Iterator" = type <{ %class.BlockVector*, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.std::pair" = type { i32, i32 }
%class.BlockVector.16 = type <{ %"class.std::vector.17", %class.BlockIndices, i32, [4 x i8] }>
%"class.std::vector.17" = type { %"struct.std::_Vector_base.18" }
%"struct.std::_Vector_base.18" = type { %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data" = type { %class.Vector*, %class.Vector*, %class.Vector* }
%"class.internal::BlockVectorIterators::Iterator.23" = type <{ %class.BlockVector.16*, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.SparseMatrix<double>::ExcNotCompressed" = type { %class.ExceptionBase }
%"class.SparseMatrix<double>::ExcMatrixNotInitialized" = type { %class.ExceptionBase }
%"class.SparseMatrix<double>::ExcMatrixNotSquare" = type { %class.ExceptionBase }
%"class.SparseMatrix<double>::ExcDifferentSparsityPatterns" = type { %class.ExceptionBase }
%"class.SparseMatrix<double>::ExcInvalidConstructorCall" = type { %class.ExceptionBase }
%"class.SparseMatrix<double>::ExcSourceEqualsDestination" = type { %class.ExceptionBase }
%"struct.std::unary_function" = type { i8 }
%"class.std::__pair_base" = type { i8 }
%"struct.std::iterator" = type { i8 }
%"struct.std::iterator.24" = type { i8 }

$_ZN12SparseMatrixIdEC2Ev = comdat any

$_ZN12SmartPointerIK15SparsityPatternEC2EPS1_ = comdat any

$_ZN12SparseMatrixIdEC1Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN12SparseMatrixIdEC2ERKS0_ = comdat any

$_ZN12SparseMatrixIdEC1ERKS0_ = comdat any

$_ZN12SparseMatrixIdEC2ERK15SparsityPattern = comdat any

$_ZN12SmartPointerIK15SparsityPatternED2Ev = comdat any

$_ZN12SparseMatrixIdEC1ERK15SparsityPattern = comdat any

$_ZN12SparseMatrixIdED2Ev = comdat any

$_ZN12SmartPointerIK15SparsityPatternEaSEPS1_ = comdat any

$_ZN12SparseMatrixIdED1Ev = comdat any

$_ZTv0_n24_N12SparseMatrixIdED1Ev = comdat any

$_ZN12SparseMatrixIdED0Ev = comdat any

$_ZTv0_n24_N12SparseMatrixIdED0Ev = comdat any

$_ZN12SparseMatrixIdEaSERKS0_ = comdat any

$_ZN12SparseMatrixIdEaSEd = comdat any

$_ZSt6fill_nIPdjdET_S1_T0_RKT1_ = comdat any

$_ZNK12SmartPointerIK15SparsityPatternEptEv = comdat any

$_ZNK15SparsityPattern18n_nonzero_elementsEv = comdat any

$_ZN12SparseMatrixIdE6reinitERK15SparsityPattern = comdat any

$_ZSt6fill_nIPdjiET_S1_T0_RKT1_ = comdat any

$_ZN12SparseMatrixIdE5clearEv = comdat any

$_ZNK12SparseMatrixIdE5emptyEv = comdat any

$_ZNK12SmartPointerIK15SparsityPatternEcvPS1_Ev = comdat any

$_ZNK12SparseMatrixIdE1mEv = comdat any

$_ZNK12SparseMatrixIdE1nEv = comdat any

$_ZNK12SparseMatrixIdE18n_nonzero_elementsEv = comdat any

$_ZNK12SparseMatrixIdE27n_actually_nonzero_elementsEv = comdat any

$_ZSt8count_ifIPdSt9binder2ndISt12not_equal_toIdEEENSt15iterator_traitsIT_E15difference_typeES6_S6_T0_ = comdat any

$_ZSt7bind2ndISt12not_equal_toIdEiESt9binder2ndIT_ERKS3_RKT0_ = comdat any

$_ZN12SparseMatrixIdE3setEjjd = comdat any

$_ZN12SparseMatrixIdEmLEd = comdat any

$_ZN12SparseMatrixIdEdVEd = comdat any

$_ZN12SparseMatrixIdE3addEjjd = comdat any

$_ZN12SparseMatrixIdE10symmetrizeEv = comdat any

$_ZNK15SparsityPattern17optimize_diagonalEv = comdat any

$_ZNK12SmartPointerIK15SparsityPatternEdeEv = comdat any

$_ZNK12SparseMatrixIdEclEjj = comdat any

$_ZN18deal_II_exceptions9internals17issue_error_throwIN12SparseMatrixIdE15ExcInvalidIndexEEEvPKciS6_S6_S6_T_ = comdat any

$_ZNK12SparseMatrixIdE2elEjj = comdat any

$_ZNK12SparseMatrixIdE12diag_elementEj = comdat any

$_ZN12SparseMatrixIdE12diag_elementEj = comdat any

$_ZNK12SparseMatrixIdE9raw_entryEjj = comdat any

$_ZNK12SparseMatrixIdE12global_entryEj = comdat any

$_ZN12SparseMatrixIdE12global_entryEj = comdat any

$_ZNK12SparseMatrixIdE7l1_normEv = comdat any

$_ZN6VectorIdEC2Ej = comdat any

$_ZN6VectorIdEclEj = comdat any

$_ZN6VectorIdED2Ev = comdat any

$_ZNK12SparseMatrixIdE11linfty_normEv = comdat any

$_ZNK12SparseMatrixIdE14frobenius_normEv = comdat any

$_ZNK12SparseMatrixIdE20get_sparsity_patternEv = comdat any

$_ZNK12SparseMatrixIdE5beginEv = comdat any

$_ZNK15SparsityPattern10row_lengthEj = comdat any

$_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj = comdat any

$_ZNK12SparseMatrixIdE3endEv = comdat any

$_ZN12SparseMatrixIdE5beginEv = comdat any

$_ZN9internals21SparseMatrixIterators8IteratorIdLb0EEC2EP12SparseMatrixIdEjj = comdat any

$_ZN12SparseMatrixIdE3endEv = comdat any

$_ZNK12SparseMatrixIdE5beginEj = comdat any

$_ZNK12SparseMatrixIdE3endEj = comdat any

$_ZN12SparseMatrixIdE5beginEj = comdat any

$_ZN12SparseMatrixIdE3endEj = comdat any

$_ZNK12SparseMatrixIdE5printERSo = comdat any

$_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_ = comdat any

$_ZN18StandardExceptions5ExcIOC2Ev = comdat any

$_ZN18StandardExceptions5ExcIOD2Ev = comdat any

$_ZNK12SparseMatrixIdE15print_formattedERSojbjPKcd = comdat any

$_ZNKSt8ios_base5flagsEv = comdat any

$_ZNSt8ios_base9precisionEl = comdat any

$_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_ = comdat any

$_ZSt4setwi = comdat any

$_ZNSt8ios_base5flagsESt13_Ios_Fmtflags = comdat any

$_ZNK12SparseMatrixIdE11block_writeERSo = comdat any

$_ZN12SparseMatrixIdE10block_readERSi = comdat any

$_ZNK12SparseMatrixIdE18memory_consumptionEv = comdat any

$_ZN12SparseMatrixIdE15ExcInvalidIndexC5Eii = comdat any

$_ZN12SparseMatrixIdE15ExcInvalidIndexD5Ev = comdat any

$_ZNK12SparseMatrixIdE15ExcInvalidIndex9PrintInfoERSo = comdat any

$_ZN12SparseMatrixIdE16ExcInvalidIndex1C5Ei = comdat any

$_ZN12SparseMatrixIdE16ExcInvalidIndex1D5Ev = comdat any

$_ZNK12SparseMatrixIdE16ExcInvalidIndex19PrintInfoERSo = comdat any

$_ZN12SparseMatrixIdE16ExcIteratorRangeC5Eii = comdat any

$_ZN12SparseMatrixIdE16ExcIteratorRangeD5Ev = comdat any

$_ZNK12SparseMatrixIdE16ExcIteratorRange9PrintInfoERSo = comdat any

$_ZN12SparseMatrixIdE9copy_fromIfEERS0_RKS_IT_E = comdat any

$_ZSt4copyIPfPdET0_T_S3_S2_ = comdat any

$_ZN12SparseMatrixIdE9copy_fromIfEEvRK10FullMatrixIT_E = comdat any

$_ZNK10FullMatrixIfE1mEv = comdat any

$_ZNK10FullMatrixIfE1nEv = comdat any

$_ZNK5TableILi2EfEclEjj = comdat any

$_ZN12SparseMatrixIdE10add_scaledIfEEvdRKS_IT_E = comdat any

$_ZN12SparseMatrixIdE9copy_fromIdEERS0_RKS_IT_E = comdat any

$_ZSt4copyIPdS0_ET0_T_S2_S1_ = comdat any

$_ZN12SparseMatrixIdE9copy_fromIdEEvRK10FullMatrixIT_E = comdat any

$_ZNK10FullMatrixIdE1mEv = comdat any

$_ZNK10FullMatrixIdE1nEv = comdat any

$_ZNK5TableILi2EdEclEjj = comdat any

$_ZN12SparseMatrixIdE10add_scaledIdEEvdRKS_IT_E = comdat any

$_ZNK12SparseMatrixIdE5vmultI6VectorIfES3_EEvRT_RKT0_ = comdat any

$_ZN6VectorIfE5beginEv = comdat any

$_ZNK6VectorIfEclEj = comdat any

$_ZNK12SparseMatrixIdE6TvmultI6VectorIfES3_EEvRT_RKT0_ = comdat any

$_ZN6VectorIfEaSEf = comdat any

$_ZN6VectorIfEclEj = comdat any

$_ZNK12SparseMatrixIdE9vmult_addI6VectorIfES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE10Tvmult_addI6VectorIfES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE5vmultI11BlockVectorIfES3_EEvRT_RKT0_ = comdat any

$_ZNK11BlockVectorIfEclEj = comdat any

$_ZN8internal20BlockVectorIterators8IteratorIfLb0EEppEi = comdat any

$_ZNK8internal20BlockVectorIterators8IteratorIfLb0EEdeEv = comdat any

$_ZNK12SparseMatrixIdE6TvmultI11BlockVectorIfES3_EEvRT_RKT0_ = comdat any

$_ZN11BlockVectorIfEclEj = comdat any

$_ZNK12SparseMatrixIdE9vmult_addI11BlockVectorIfES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE10Tvmult_addI11BlockVectorIfES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE18matrix_norm_squareIfEET_RK6VectorIS2_E = comdat any

$_ZNK12SparseMatrixIdE21matrix_scalar_productIfEET_RK6VectorIS2_ES6_ = comdat any

$_ZNK12SparseMatrixIdE8residualIfEET_R6VectorIS2_ERKS4_S7_ = comdat any

$_ZSt4sqrtf = comdat any

$_ZNK12SparseMatrixIdE17precondition_SSORIfEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK6VectorIfE4sizeEv = comdat any

$_ZN15SparsityPattern21optimized_lower_boundEPKjS1_RS0_ = comdat any

$_ZNK12SparseMatrixIdE16precondition_SORIfEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE3SORIfEEvR6VectorIT_Ed = comdat any

$_ZNK12SparseMatrixIdE17precondition_TSORIfEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE4TSORIfEEvR6VectorIT_Ed = comdat any

$_ZNK12SparseMatrixIdE19precondition_JacobiIfEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK6VectorIfE5beginEv = comdat any

$_ZNK12SparseMatrixIdE4SSORIfEEvR6VectorIT_Ed = comdat any

$_ZNK12SparseMatrixIdE4PSORIfEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d = comdat any

$_ZNKSt6vectorIjSaIjEEixEm = comdat any

$_ZNK12SparseMatrixIdE5TPSORIfEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d = comdat any

$_ZNK12SparseMatrixIdE8SOR_stepIfEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE9TSOR_stepIfEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE9SSOR_stepIfEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE5vmultI6VectorIdES3_EEvRT_RKT0_ = comdat any

$_ZN6VectorIdE5beginEv = comdat any

$_ZNK6VectorIdEclEj = comdat any

$_ZNK12SparseMatrixIdE6TvmultI6VectorIdES3_EEvRT_RKT0_ = comdat any

$_ZN6VectorIdEaSEd = comdat any

$_ZNK12SparseMatrixIdE9vmult_addI6VectorIdES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE10Tvmult_addI6VectorIdES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE5vmultI11BlockVectorIdES3_EEvRT_RKT0_ = comdat any

$_ZNK11BlockVectorIdEclEj = comdat any

$_ZN8internal20BlockVectorIterators8IteratorIdLb0EEppEi = comdat any

$_ZNK8internal20BlockVectorIterators8IteratorIdLb0EEdeEv = comdat any

$_ZNK12SparseMatrixIdE6TvmultI11BlockVectorIdES3_EEvRT_RKT0_ = comdat any

$_ZN11BlockVectorIdEclEj = comdat any

$_ZNK12SparseMatrixIdE9vmult_addI11BlockVectorIdES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE10Tvmult_addI11BlockVectorIdES3_EEvRT_RKT0_ = comdat any

$_ZNK12SparseMatrixIdE18matrix_norm_squareIdEET_RK6VectorIS2_E = comdat any

$_ZNK12SparseMatrixIdE21matrix_scalar_productIdEET_RK6VectorIS2_ES6_ = comdat any

$_ZNK12SparseMatrixIdE8residualIdEET_R6VectorIS2_ERKS4_S7_ = comdat any

$_ZNK12SparseMatrixIdE17precondition_SSORIdEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK6VectorIdE4sizeEv = comdat any

$_ZNK12SparseMatrixIdE16precondition_SORIdEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE3SORIdEEvR6VectorIT_Ed = comdat any

$_ZNK12SparseMatrixIdE17precondition_TSORIdEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE4TSORIdEEvR6VectorIT_Ed = comdat any

$_ZNK12SparseMatrixIdE19precondition_JacobiIdEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK6VectorIdE5beginEv = comdat any

$_ZNK12SparseMatrixIdE4SSORIdEEvR6VectorIT_Ed = comdat any

$_ZNK12SparseMatrixIdE4PSORIdEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d = comdat any

$_ZNK12SparseMatrixIdE5TPSORIdEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d = comdat any

$_ZNK12SparseMatrixIdE8SOR_stepIdEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE9TSOR_stepIdEEvR6VectorIT_ERKS4_d = comdat any

$_ZNK12SparseMatrixIdE9SSOR_stepIdEEvR6VectorIT_ERKS4_d = comdat any

$_ZN12SparseMatrixIdE16ExcNotCompressedD2Ev = comdat any

$_ZN12SparseMatrixIdE16ExcNotCompressedD0Ev = comdat any

$_ZN12SparseMatrixIdE23ExcMatrixNotInitializedD2Ev = comdat any

$_ZN12SparseMatrixIdE23ExcMatrixNotInitializedD0Ev = comdat any

$_ZN12SparseMatrixIdE18ExcMatrixNotSquareD2Ev = comdat any

$_ZN12SparseMatrixIdE18ExcMatrixNotSquareD0Ev = comdat any

$_ZN12SparseMatrixIdE28ExcDifferentSparsityPatternsD2Ev = comdat any

$_ZN12SparseMatrixIdE28ExcDifferentSparsityPatternsD0Ev = comdat any

$_ZN12SparseMatrixIdE25ExcInvalidConstructorCallD2Ev = comdat any

$_ZN12SparseMatrixIdE25ExcInvalidConstructorCallD0Ev = comdat any

$_ZN12SparseMatrixIdE26ExcSourceEqualsDestinationD2Ev = comdat any

$_ZN12SparseMatrixIdE26ExcSourceEqualsDestinationD0Ev = comdat any

$_ZN18StandardExceptions5ExcIOD0Ev = comdat any

$_ZStaNRSt13_Ios_FmtflagsS_ = comdat any

$_ZStcoSt13_Ios_Fmtflags = comdat any

$_ZStoRRSt13_Ios_FmtflagsS_ = comdat any

$_ZStanSt13_Ios_FmtflagsS_ = comdat any

$_ZStorSt13_Ios_FmtflagsS_ = comdat any

$_ZSt12__niter_wrapIPdET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZSt10__fill_n_aIPdjiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNSt9binder2ndISt12not_equal_toIdEEC2ERKS1_RKd = comdat any

$_ZSt10__count_ifIPdN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_T0_ = comdat any

$_ZN9__gnu_cxx5__ops11__pred_iterISt9binder2ndISt12not_equal_toIdEEEENS0_10_Iter_predIT_EES7_ = comdat any

$_ZN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEclIPdEEbT_ = comdat any

$_ZNKSt9binder2ndISt12not_equal_toIdEEclERd = comdat any

$_ZNKSt12not_equal_toIdEclERKdS2_ = comdat any

$_ZN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEC2ES5_ = comdat any

$_ZN12SparseMatrixIdE15ExcInvalidIndexC2ERKS1_ = comdat any

$_ZN13ExceptionBaseC2ERKS_ = comdat any

$_ZNSt9exceptionC2ERKS_ = comdat any

$_ZN6VectorIdE6reinitEjb = comdat any

$_ZN6VectorIdED0Ev = comdat any

$_ZN9internals21SparseMatrixIterators8AccessorIdLb1EEC2EPK12SparseMatrixIdEjj = comdat any

$_ZN9internals24SparsityPatternIterators8AccessorC2EPK15SparsityPatternjj = comdat any

$_ZN9internals21SparseMatrixIterators8AccessorIdLb0EEC2EP12SparseMatrixIdEjj = comdat any

$_ZN18StandardExceptions5ExcIOC2ERKS0_ = comdat any

$_ZSt14__copy_move_a2ILb0EPfPdET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPfET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPfPdET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPfET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPfPdEET0_T_S6_S5_ = comdat any

$_ZNK5TableILi2EfE6n_rowsEv = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZNK5TableILi2EfE6n_colsEv = comdat any

$_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPdET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNK5TableILi2EdE6n_rowsEv = comdat any

$_ZNK5TableILi2EdE6n_colsEv = comdat any

$_ZSt4fillIPffEvT_S1_RKT0_ = comdat any

$_ZN6VectorIfE3endEv = comdat any

$_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNK12BlockIndices15global_to_localEj = comdat any

$_ZNKSt6vectorI6VectorIfESaIS1_EEixEm = comdat any

$_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_ = comdat any

$_ZNSt4pairIjjEC2ERKjS2_ = comdat any

$_ZN8internal20BlockVectorIterators8IteratorIfLb0EEC2ERKS2_ = comdat any

$_ZN11BlockVectorIfE5blockEj = comdat any

$_ZNSt6vectorI6VectorIfESaIS1_EEixEm = comdat any

$_ZSt4fillIPddEvT_S1_RKT0_ = comdat any

$_ZN6VectorIdE3endEv = comdat any

$_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNKSt6vectorI6VectorIdESaIS1_EEixEm = comdat any

$_ZN8internal20BlockVectorIterators8IteratorIdLb0EEC2ERKS2_ = comdat any

$_ZN11BlockVectorIdE5blockEj = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EEixEm = comdat any

$_ZTV12SparseMatrixIdE = comdat any

$_ZTT12SparseMatrixIdE = comdat any

$_ZTVN12SparseMatrixIdE15ExcInvalidIndexE = comdat any

$_ZTVN12SparseMatrixIdE16ExcInvalidIndex1E = comdat any

$_ZTVN12SparseMatrixIdE16ExcIteratorRangeE = comdat any

$_ZTS12SparseMatrixIdE = comdat any

$_ZTI12SparseMatrixIdE = comdat any

$_ZTVN12SparseMatrixIdE16ExcNotCompressedE = comdat any

$_ZTSN12SparseMatrixIdE16ExcNotCompressedE = comdat any

$_ZTIN12SparseMatrixIdE16ExcNotCompressedE = comdat any

$_ZTVN12SparseMatrixIdE23ExcMatrixNotInitializedE = comdat any

$_ZTSN12SparseMatrixIdE23ExcMatrixNotInitializedE = comdat any

$_ZTIN12SparseMatrixIdE23ExcMatrixNotInitializedE = comdat any

$_ZTSN12SparseMatrixIdE16ExcInvalidIndex1E = comdat any

$_ZTIN12SparseMatrixIdE16ExcInvalidIndex1E = comdat any

$_ZTVN12SparseMatrixIdE18ExcMatrixNotSquareE = comdat any

$_ZTSN12SparseMatrixIdE18ExcMatrixNotSquareE = comdat any

$_ZTIN12SparseMatrixIdE18ExcMatrixNotSquareE = comdat any

$_ZTVN12SparseMatrixIdE28ExcDifferentSparsityPatternsE = comdat any

$_ZTSN12SparseMatrixIdE28ExcDifferentSparsityPatternsE = comdat any

$_ZTIN12SparseMatrixIdE28ExcDifferentSparsityPatternsE = comdat any

$_ZTVN12SparseMatrixIdE25ExcInvalidConstructorCallE = comdat any

$_ZTSN12SparseMatrixIdE25ExcInvalidConstructorCallE = comdat any

$_ZTIN12SparseMatrixIdE25ExcInvalidConstructorCallE = comdat any

$_ZTSN12SparseMatrixIdE16ExcIteratorRangeE = comdat any

$_ZTIN12SparseMatrixIdE16ExcIteratorRangeE = comdat any

$_ZTVN12SparseMatrixIdE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN12SparseMatrixIdE26ExcSourceEqualsDestinationE = comdat any

$_ZTIN12SparseMatrixIdE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN12SparseMatrixIdE15ExcInvalidIndexE = comdat any

$_ZTIN12SparseMatrixIdE15ExcInvalidIndexE = comdat any

$_ZTVN18StandardExceptions5ExcIOE = comdat any

$_ZTSN18StandardExceptions5ExcIOE = comdat any

$_ZTIN18StandardExceptions5ExcIOE = comdat any

$_ZTV6VectorIdE = comdat any

$_ZTS6VectorIdE = comdat any

$_ZTI6VectorIdE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZTV12SparseMatrixIdE = weak_odr unnamed_addr constant { [7 x i8*], [5 x i8*] } { [7 x i8*] [i8* inttoptr (i64 32 to i8*), i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI12SparseMatrixIdE to i8*), i8* bitcast (void (%class.SparseMatrix*)* @_ZN12SparseMatrixIdED1Ev to i8*), i8* bitcast (void (%class.SparseMatrix*)* @_ZN12SparseMatrixIdED0Ev to i8*), i8* bitcast (void (%class.SparseMatrix*, %class.SparsityPattern*)* @_ZN12SparseMatrixIdE6reinitERK15SparsityPattern to i8*), i8* bitcast (void (%class.SparseMatrix*)* @_ZN12SparseMatrixIdE5clearEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* inttoptr (i64 -32 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI12SparseMatrixIdE to i8*), i8* bitcast (void (%class.SparseMatrix*)* @_ZTv0_n24_N12SparseMatrixIdED1Ev to i8*), i8* bitcast (void (%class.SparseMatrix*)* @_ZTv0_n24_N12SparseMatrixIdED0Ev to i8*)] }, comdat, align 8
@_ZTT12SparseMatrixIdE = weak_odr unnamed_addr constant [2 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 1, i32 3) to i8*)], comdat
@.str = private unnamed_addr constant [28 x i8] c"include/lac/sparse_matrix.h\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"cols->operator()(i,j) != SparsityPattern::invalid_entry\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"ExcInvalidIndex(i,j)\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"include/lac/sparse_matrix.templates.h\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"ExcIO()\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"][\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"c == '['\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"c == ']'\00", align 1
@_ZTVN12SparseMatrixIdE15ExcInvalidIndexE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE15ExcInvalidIndexE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidIndex"*)* @_ZN12SparseMatrixIdE15ExcInvalidIndexD1Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidIndex"*)* @_ZN12SparseMatrixIdE15ExcInvalidIndexD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.std::basic_ostream"*)* @_ZNK12SparseMatrixIdE15ExcInvalidIndex9PrintInfoERSo to i8*)] }, comdat, align 8
@.str.14 = private unnamed_addr constant [23 x i8] c"The entry with index <\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"> does not exist.\00", align 1
@_ZTVN12SparseMatrixIdE16ExcInvalidIndex1E = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE16ExcInvalidIndex1E to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidIndex1"*)* @_ZN12SparseMatrixIdE16ExcInvalidIndex1D1Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidIndex1"*)* @_ZN12SparseMatrixIdE16ExcInvalidIndex1D0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.std::basic_ostream"*)* @_ZNK12SparseMatrixIdE16ExcInvalidIndex19PrintInfoERSo to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [11 x i8] c"The index \00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c" is not in the allowed range.\00", align 1
@_ZTVN12SparseMatrixIdE16ExcIteratorRangeE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE16ExcIteratorRangeE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcIteratorRange"*)* @_ZN12SparseMatrixIdE16ExcIteratorRangeD1Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcIteratorRange"*)* @_ZN12SparseMatrixIdE16ExcIteratorRangeD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcIteratorRange"*, %"class.std::basic_ostream"*)* @_ZNK12SparseMatrixIdE16ExcIteratorRange9PrintInfoERSo to i8*)] }, comdat, align 8
@.str.18 = private unnamed_addr constant [33 x i8] c"The iterators denote a range of \00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c" elements, but the given number of rows was \00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTS12SparseMatrixIdE = weak_odr constant [18 x i8] c"12SparseMatrixIdE\00", comdat
@_ZTI11Subscriptor = external constant i8*
@_ZTI12SparseMatrixIdE = weak_odr constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS12SparseMatrixIdE, i32 0, i32 0), i32 0, i32 1, i8* bitcast (i8** @_ZTI11Subscriptor to i8*), i64 -6141 }, comdat
@_ZTVN12SparseMatrixIdE16ExcNotCompressedE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE16ExcNotCompressedE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcNotCompressed"*)* @_ZN12SparseMatrixIdE16ExcNotCompressedD2Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcNotCompressed"*)* @_ZN12SparseMatrixIdE16ExcNotCompressedD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN12SparseMatrixIdE16ExcNotCompressedE = weak_odr constant [38 x i8] c"N12SparseMatrixIdE16ExcNotCompressedE\00", comdat
@_ZTI13ExceptionBase = external constant i8*
@_ZTIN12SparseMatrixIdE16ExcNotCompressedE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZTSN12SparseMatrixIdE16ExcNotCompressedE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN12SparseMatrixIdE23ExcMatrixNotInitializedE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE23ExcMatrixNotInitializedE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcMatrixNotInitialized"*)* @_ZN12SparseMatrixIdE23ExcMatrixNotInitializedD2Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcMatrixNotInitialized"*)* @_ZN12SparseMatrixIdE23ExcMatrixNotInitializedD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN12SparseMatrixIdE23ExcMatrixNotInitializedE = weak_odr constant [45 x i8] c"N12SparseMatrixIdE23ExcMatrixNotInitializedE\00", comdat
@_ZTIN12SparseMatrixIdE23ExcMatrixNotInitializedE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @_ZTSN12SparseMatrixIdE23ExcMatrixNotInitializedE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTSN12SparseMatrixIdE16ExcInvalidIndex1E = weak_odr constant [38 x i8] c"N12SparseMatrixIdE16ExcInvalidIndex1E\00", comdat
@_ZTIN12SparseMatrixIdE16ExcInvalidIndex1E = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZTSN12SparseMatrixIdE16ExcInvalidIndex1E, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN12SparseMatrixIdE18ExcMatrixNotSquareE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE18ExcMatrixNotSquareE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcMatrixNotSquare"*)* @_ZN12SparseMatrixIdE18ExcMatrixNotSquareD2Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcMatrixNotSquare"*)* @_ZN12SparseMatrixIdE18ExcMatrixNotSquareD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN12SparseMatrixIdE18ExcMatrixNotSquareE = weak_odr constant [40 x i8] c"N12SparseMatrixIdE18ExcMatrixNotSquareE\00", comdat
@_ZTIN12SparseMatrixIdE18ExcMatrixNotSquareE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_ZTSN12SparseMatrixIdE18ExcMatrixNotSquareE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN12SparseMatrixIdE28ExcDifferentSparsityPatternsE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE28ExcDifferentSparsityPatternsE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*)* @_ZN12SparseMatrixIdE28ExcDifferentSparsityPatternsD2Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*)* @_ZN12SparseMatrixIdE28ExcDifferentSparsityPatternsD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN12SparseMatrixIdE28ExcDifferentSparsityPatternsE = weak_odr constant [50 x i8] c"N12SparseMatrixIdE28ExcDifferentSparsityPatternsE\00", comdat
@_ZTIN12SparseMatrixIdE28ExcDifferentSparsityPatternsE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @_ZTSN12SparseMatrixIdE28ExcDifferentSparsityPatternsE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN12SparseMatrixIdE25ExcInvalidConstructorCallE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE25ExcInvalidConstructorCallE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidConstructorCall"*)* @_ZN12SparseMatrixIdE25ExcInvalidConstructorCallD2Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidConstructorCall"*)* @_ZN12SparseMatrixIdE25ExcInvalidConstructorCallD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN12SparseMatrixIdE25ExcInvalidConstructorCallE = weak_odr constant [47 x i8] c"N12SparseMatrixIdE25ExcInvalidConstructorCallE\00", comdat
@_ZTIN12SparseMatrixIdE25ExcInvalidConstructorCallE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_ZTSN12SparseMatrixIdE25ExcInvalidConstructorCallE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTSN12SparseMatrixIdE16ExcIteratorRangeE = weak_odr constant [38 x i8] c"N12SparseMatrixIdE16ExcIteratorRangeE\00", comdat
@_ZTIN12SparseMatrixIdE16ExcIteratorRangeE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZTSN12SparseMatrixIdE16ExcIteratorRangeE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN12SparseMatrixIdE26ExcSourceEqualsDestinationE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE26ExcSourceEqualsDestinationE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcSourceEqualsDestination"*)* @_ZN12SparseMatrixIdE26ExcSourceEqualsDestinationD2Ev to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcSourceEqualsDestination"*)* @_ZN12SparseMatrixIdE26ExcSourceEqualsDestinationD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN12SparseMatrixIdE26ExcSourceEqualsDestinationE = weak_odr constant [48 x i8] c"N12SparseMatrixIdE26ExcSourceEqualsDestinationE\00", comdat
@_ZTIN12SparseMatrixIdE26ExcSourceEqualsDestinationE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZTSN12SparseMatrixIdE26ExcSourceEqualsDestinationE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTSN12SparseMatrixIdE15ExcInvalidIndexE = linkonce_odr constant [37 x i8] c"N12SparseMatrixIdE15ExcInvalidIndexE\00", comdat
@_ZTIN12SparseMatrixIdE15ExcInvalidIndexE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSN12SparseMatrixIdE15ExcInvalidIndexE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN18StandardExceptions5ExcIOE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN18StandardExceptions5ExcIOE to i8*), i8* bitcast (void (%"class.StandardExceptions::ExcIO"*)* @_ZN18StandardExceptions5ExcIOD2Ev to i8*), i8* bitcast (void (%"class.StandardExceptions::ExcIO"*)* @_ZN18StandardExceptions5ExcIOD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN18StandardExceptions5ExcIOE = linkonce_odr constant [29 x i8] c"N18StandardExceptions5ExcIOE\00", comdat
@_ZTIN18StandardExceptions5ExcIOE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN18StandardExceptions5ExcIOE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTV13ExceptionBase = external unnamed_addr constant { [6 x i8*] }
@_ZTVSt9exception = external unnamed_addr constant { [5 x i8*] }
@_ZTV6VectorIdE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI6VectorIdE to i8*), i8* bitcast (void (%class.Vector*)* @_ZN6VectorIdED2Ev to i8*), i8* bitcast (void (%class.Vector*)* @_ZN6VectorIdED0Ev to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS6VectorIdE = linkonce_odr constant [11 x i8] c"6VectorIdE\00", comdat
@_ZTI6VectorIdE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZTS6VectorIdE, i32 0, i32 0) }, comdat
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_sparse_matrix.double.cc, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0

@_ZN12SparseMatrixIdE15ExcInvalidIndexC1Eii = weak_odr alias void (%"class.SparseMatrix<double>::ExcInvalidIndex"*, i32, i32), void (%"class.SparseMatrix<double>::ExcInvalidIndex"*, i32, i32)* @_ZN12SparseMatrixIdE15ExcInvalidIndexC2Eii
@_ZN12SparseMatrixIdE15ExcInvalidIndexD1Ev = weak_odr alias void (%"class.SparseMatrix<double>::ExcInvalidIndex"*), void (%"class.SparseMatrix<double>::ExcInvalidIndex"*)* @_ZN12SparseMatrixIdE15ExcInvalidIndexD2Ev
@_ZN12SparseMatrixIdE16ExcInvalidIndex1C1Ei = weak_odr alias void (%"class.SparseMatrix<double>::ExcInvalidIndex1"*, i32), void (%"class.SparseMatrix<double>::ExcInvalidIndex1"*, i32)* @_ZN12SparseMatrixIdE16ExcInvalidIndex1C2Ei
@_ZN12SparseMatrixIdE16ExcInvalidIndex1D1Ev = weak_odr alias void (%"class.SparseMatrix<double>::ExcInvalidIndex1"*), void (%"class.SparseMatrix<double>::ExcInvalidIndex1"*)* @_ZN12SparseMatrixIdE16ExcInvalidIndex1D2Ev
@_ZN12SparseMatrixIdE16ExcIteratorRangeC1Eii = weak_odr alias void (%"class.SparseMatrix<double>::ExcIteratorRange"*, i32, i32), void (%"class.SparseMatrix<double>::ExcIteratorRange"*, i32, i32)* @_ZN12SparseMatrixIdE16ExcIteratorRangeC2Eii
@_ZN12SparseMatrixIdE16ExcIteratorRangeD1Ev = weak_odr alias void (%"class.SparseMatrix<double>::ExcIteratorRange"*), void (%"class.SparseMatrix<double>::ExcIteratorRange"*)* @_ZN12SparseMatrixIdE16ExcIteratorRangeD2Ev

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %9 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #2
  %10 = load i32, i32* @x
  %11 = load i32, i32* @y
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %18 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #2
  br label %originalBB
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdEC2Ev(%class.SparseMatrix*, i8**) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca i8**, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store i8** %1, i8*** %4, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %6 = load i8**, i8*** %4, align 8
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %class.SparseMatrix* %5 to i32 (...)***
  %9 = bitcast i8* %7 to i32 (...)**
  store i32 (...)** %9, i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8*, i8** %6, i64 1
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %class.SparseMatrix* %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %class.SparseMatrix* %5 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast i8* %18 to i32 (...)***
  %20 = bitcast i8* %11 to i32 (...)**
  store i32 (...)** %20, i32 (...)*** %19, align 8
  %21 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  call void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer* %21, %class.SparsityPattern* null)
  %22 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 2
  store double* null, double** %22, align 8
  %23 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 3
  store i32 0, i32* %23, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer*, %class.SparsityPattern*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SmartPointer*, align 8
  %4 = alloca %class.SparsityPattern*, align 8
  store %class.SmartPointer* %0, %class.SmartPointer** %3, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %4, align 8
  %5 = load %class.SmartPointer*, %class.SmartPointer** %3, align 8
  %6 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %5, i32 0, i32 0
  %7 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  store %class.SparsityPattern* %7, %class.SparsityPattern** %6, align 8
  %8 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  %9 = icmp ne %class.SparsityPattern* %8, null
  br i1 %9, label %10, label %29

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.3
  %12 = load i32, i32* @y.4
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  %20 = bitcast %class.SparsityPattern* %19 to %class.Subscriptor*
  call void @_ZNK11Subscriptor9subscribeEv(%class.Subscriptor* %20)
  %21 = load i32, i32* @x.3
  %22 = load i32, i32* @y.4
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %30 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  %31 = bitcast %class.SparsityPattern* %30 to %class.Subscriptor*
  call void @_ZNK11Subscriptor9subscribeEv(%class.Subscriptor* %31)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdEC1Ev(%class.SparseMatrix*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.SparseMatrix*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %6 = bitcast %class.SparseMatrix* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = bitcast i8* %7 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %8)
  %9 = bitcast %class.SparseMatrix* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 0, i32 3) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast %class.SparseMatrix* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 32
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 1, i32 3) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  invoke void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer* %13, %class.SparsityPattern* null)
          to label %14 unwind label %17

; <label>:14:                                     ; preds = %1
  %15 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 2
  store double* null, double** %15, align 8
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 3
  store i32 0, i32* %16, align 8
  ret void

; <label>:17:                                     ; preds = %1
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  store i8* %19, i8** %3, align 8
  %20 = extractvalue { i8*, i32 } %18, 1
  store i32 %20, i32* %4, align 4
  %21 = bitcast %class.SparseMatrix* %5 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %23)
          to label %24 unwind label %46

; <label>:24:                                     ; preds = %17
  %25 = load i32, i32* @x.5
  %26 = load i32, i32* @y.6
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = load i32, i32* @x.5
  %34 = load i32, i32* @y.6
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i8*, i8** %3, align 8
  %43 = load i32, i32* %4, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

; <label>:46:                                     ; preds = %17
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %24
  br label %originalBB
}

declare void @_ZN11SubscriptorC2Ev(%class.Subscriptor*) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

declare void @_ZN11SubscriptorD2Ev(%class.Subscriptor*) unnamed_addr #1

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #3 comdat {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = call i8* @__cxa_begin_catch(i8* %0) #2
  call void @_ZSt9terminatev() #11
  %11 = load i32, i32* @x.7
  %12 = load i32, i32* @y.8
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %19 = call i8* @__cxa_begin_catch(i8* %0) #2
  call void @_ZSt9terminatev() #11
  br label %originalBB
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdEC2ERKS0_(%class.SparseMatrix*, i8**, %class.SparseMatrix* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store i8** %1, i8*** %5, align 8
  store %class.SparseMatrix* %2, %class.SparseMatrix** %6, align 8
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %8 = load i8**, i8*** %5, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %class.SparseMatrix* %7 to i32 (...)***
  %11 = bitcast i8* %9 to i32 (...)**
  store i32 (...)** %11, i32 (...)*** %10, align 8
  %12 = getelementptr inbounds i8*, i8** %8, i64 1
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %class.SparseMatrix* %7 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.SparseMatrix* %7 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i32 (...)***
  %22 = bitcast i8* %13 to i32 (...)**
  store i32 (...)** %22, i32 (...)*** %21, align 8
  %23 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  call void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer* %23, %class.SparsityPattern* null)
  %24 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  store double* null, double** %24, align 8
  %25 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  store i32 0, i32* %25, align 8
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdEC1ERKS0_(%class.SparseMatrix*, %class.SparseMatrix* dereferenceable(56)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %4, align 8
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %8 = bitcast %class.SparseMatrix* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %10 = bitcast i8* %9 to %class.Subscriptor*
  %11 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %12 = bitcast %class.SparseMatrix* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %class.SparseMatrix* %11 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast i8* %18 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor* %10, %class.Subscriptor* dereferenceable(24) %19)
  %20 = bitcast %class.SparseMatrix* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 0, i32 3) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = bitcast %class.SparseMatrix* %7 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 1, i32 3) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  invoke void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer* %24, %class.SparsityPattern* null)
          to label %25 unwind label %44

; <label>:25:                                     ; preds = %2
  %26 = load i32, i32* @x.11
  %27 = load i32, i32* @y.12
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  store double* null, double** %34, align 8
  %35 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  store i32 0, i32* %35, align 8
  %36 = load i32, i32* @x.11
  %37 = load i32, i32* @y.12
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:44:                                     ; preds = %2
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %5, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %6, align 4
  %48 = bitcast %class.SparseMatrix* %7 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast i8* %49 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %50)
          to label %51 unwind label %57

; <label>:51:                                     ; preds = %44
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i8*, i8** %5, align 8
  %54 = load i32, i32* %6, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

; <label>:57:                                     ; preds = %44
  %58 = load i32, i32* @x.11
  %59 = load i32, i32* @y.12
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %57, %originalBB1alteredBB
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #11
  %68 = load i32, i32* @x.11
  %69 = load i32, i32* @y.12
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %25
  %76 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  store double* null, double** %76, align 8
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  store i32 0, i32* %77, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %57
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  call void @__clang_call_terminate(i8* %79) #11
  br label %originalBB1
}

declare void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor*, %class.Subscriptor* dereferenceable(24)) unnamed_addr #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdEC2ERK15SparsityPattern(%class.SparseMatrix*, i8**, %class.SparsityPattern* dereferenceable(72)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.13
  %5 = load i32, i32* @y.14
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca %class.SparsityPattern*, align 8
  %15 = alloca i8*
  %16 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store i8** %1, i8*** %13, align 8
  store %class.SparsityPattern* %2, %class.SparsityPattern** %14, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  %18 = load i8**, i8*** %13, align 8
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %class.SparseMatrix* %17 to i32 (...)***
  %21 = bitcast i8* %19 to i32 (...)**
  store i32 (...)** %21, i32 (...)*** %20, align 8
  %22 = getelementptr inbounds i8*, i8** %18, i64 1
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %class.SparseMatrix* %17 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %class.SparseMatrix* %17 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = bitcast i8* %30 to i32 (...)***
  %32 = bitcast i8* %23 to i32 (...)**
  store i32 (...)** %32, i32 (...)*** %31, align 8
  %33 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 1
  call void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer* %33, %class.SparsityPattern* null)
  %34 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 2
  store double* null, double** %34, align 8
  %35 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 3
  store i32 0, i32* %35, align 8
  %36 = bitcast %class.SparseMatrix* %17 to void (%class.SparseMatrix*, %class.SparsityPattern*)***
  %37 = load void (%class.SparseMatrix*, %class.SparsityPattern*)**, void (%class.SparseMatrix*, %class.SparsityPattern*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SparseMatrix*, %class.SparsityPattern*)*, void (%class.SparseMatrix*, %class.SparsityPattern*)** %37, i64 2
  %39 = load void (%class.SparseMatrix*, %class.SparsityPattern*)*, void (%class.SparseMatrix*, %class.SparsityPattern*)** %38, align 8
  %40 = load %class.SparsityPattern*, %class.SparsityPattern** %14, align 8
  %41 = load i32, i32* @x.13
  %42 = load i32, i32* @y.14
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void %39(%class.SparseMatrix* %17, %class.SparsityPattern* dereferenceable(72) %40)
          to label %49 unwind label %50

; <label>:49:                                     ; preds = %originalBBpart2
  ret void

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %15, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %16, align 4
  invoke void @_ZN12SmartPointerIK15SparsityPatternED2Ev(%class.SmartPointer* %33)
          to label %54 unwind label %92

; <label>:54:                                     ; preds = %50
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = load i32, i32* @x.13
  %64 = load i32, i32* @y.14
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %71

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load i32, i32* @x.13
  %73 = load i32, i32* @y.14
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %71, %originalBB6alteredBB
  %80 = load i8*, i8** %15, align 8
  %81 = load i32, i32* %16, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  %84 = load i32, i32* @x.13
  %85 = load i32, i32* @y.14
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %83

; <label>:92:                                     ; preds = %50
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  call void @__clang_call_terminate(i8* %94) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %95 = alloca %class.SparseMatrix*, align 8
  %96 = alloca i8**, align 8
  %97 = alloca %class.SparsityPattern*, align 8
  %98 = alloca i8*
  %99 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %95, align 8
  store i8** %1, i8*** %96, align 8
  store %class.SparsityPattern* %2, %class.SparsityPattern** %97, align 8
  %100 = load %class.SparseMatrix*, %class.SparseMatrix** %95, align 8
  %101 = load i8**, i8*** %96, align 8
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast %class.SparseMatrix* %100 to i32 (...)***
  %104 = bitcast i8* %102 to i32 (...)**
  store i32 (...)** %104, i32 (...)*** %103, align 8
  %105 = getelementptr inbounds i8*, i8** %101, i64 1
  %106 = load i8*, i8** %105, align 8
  %107 = bitcast %class.SparseMatrix* %100 to i8**
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr i8, i8* %108, i64 -24
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.SparseMatrix* %100 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %111
  %114 = bitcast i8* %113 to i32 (...)***
  %115 = bitcast i8* %106 to i32 (...)**
  store i32 (...)** %115, i32 (...)*** %114, align 8
  %116 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %100, i32 0, i32 1
  call void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer* %116, %class.SparsityPattern* null)
  %117 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %100, i32 0, i32 2
  store double* null, double** %117, align 8
  %118 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %100, i32 0, i32 3
  store i32 0, i32* %118, align 8
  %119 = bitcast %class.SparseMatrix* %100 to void (%class.SparseMatrix*, %class.SparsityPattern*)***
  %120 = load void (%class.SparseMatrix*, %class.SparsityPattern*)**, void (%class.SparseMatrix*, %class.SparsityPattern*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.SparseMatrix*, %class.SparsityPattern*)*, void (%class.SparseMatrix*, %class.SparsityPattern*)** %120, i64 2
  %122 = load void (%class.SparseMatrix*, %class.SparsityPattern*)*, void (%class.SparseMatrix*, %class.SparsityPattern*)** %121, align 8
  %123 = load %class.SparsityPattern*, %class.SparsityPattern** %97, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %124 = load i8*, i8** %15, align 8
  %125 = load i32, i32* %16, align 4
  %126 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %127 = insertvalue { i8*, i32 } %126, i32 %125, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12SmartPointerIK15SparsityPatternED2Ev(%class.SmartPointer*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SmartPointer*, align 8
  store %class.SmartPointer* %0, %class.SmartPointer** %2, align 8
  %3 = load %class.SmartPointer*, %class.SmartPointer** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %3, i32 0, i32 0
  %5 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  %6 = icmp ne %class.SparsityPattern* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %3, i32 0, i32 0
  %9 = load %class.SparsityPattern*, %class.SparsityPattern** %8, align 8
  %10 = bitcast %class.SparsityPattern* %9 to %class.Subscriptor*
  call void @_ZNK11Subscriptor11unsubscribeEv(%class.Subscriptor* %10)
  br label %11

; <label>:11:                                     ; preds = %7, %1
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdEC1ERK15SparsityPattern(%class.SparseMatrix*, %class.SparsityPattern* dereferenceable(72)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %class.SparsityPattern*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %4, align 8
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %8 = bitcast %class.SparseMatrix* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %10 = bitcast i8* %9 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %10)
  %11 = bitcast %class.SparseMatrix* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 0, i32 3) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = bitcast %class.SparseMatrix* %7 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTV12SparseMatrixIdE, i32 0, inrange i32 1, i32 3) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  invoke void @_ZN12SmartPointerIK15SparsityPatternEC2EPS1_(%class.SmartPointer* %15, %class.SparsityPattern* null)
          to label %16 unwind label %25

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  store double* null, double** %17, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  store i32 0, i32* %18, align 8
  %19 = bitcast %class.SparseMatrix* %7 to void (%class.SparseMatrix*, %class.SparsityPattern*)***
  %20 = load void (%class.SparseMatrix*, %class.SparsityPattern*)**, void (%class.SparseMatrix*, %class.SparsityPattern*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SparseMatrix*, %class.SparsityPattern*)*, void (%class.SparseMatrix*, %class.SparsityPattern*)** %20, i64 2
  %22 = load void (%class.SparseMatrix*, %class.SparsityPattern*)*, void (%class.SparseMatrix*, %class.SparsityPattern*)** %21, align 8
  %23 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  invoke void %22(%class.SparseMatrix* %7, %class.SparsityPattern* dereferenceable(72) %23)
          to label %24 unwind label %29

; <label>:24:                                     ; preds = %16
  ret void

; <label>:25:                                     ; preds = %2
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %5, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %6, align 4
  br label %50

; <label>:29:                                     ; preds = %16
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %5, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %6, align 4
  invoke void @_ZN12SmartPointerIK15SparsityPatternED2Ev(%class.SmartPointer* %15)
          to label %33 unwind label %92

; <label>:33:                                     ; preds = %29
  %34 = load i32, i32* @x.17
  %35 = load i32, i32* @y.18
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %33, %originalBBalteredBB
  %42 = load i32, i32* @x.17
  %43 = load i32, i32* @y.18
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %50

; <label>:50:                                     ; preds = %originalBBpart2, %25
  %51 = bitcast %class.SparseMatrix* %7 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 32
  %53 = bitcast i8* %52 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %53)
          to label %54 unwind label %92

; <label>:54:                                     ; preds = %50
  %55 = load i32, i32* @x.17
  %56 = load i32, i32* @y.18
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = load i32, i32* @x.17
  %64 = load i32, i32* @y.18
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %71

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load i32, i32* @x.17
  %73 = load i32, i32* @y.18
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %71, %originalBB6alteredBB
  %80 = load i8*, i8** %5, align 8
  %81 = load i32, i32* %6, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  %84 = load i32, i32* @x.17
  %85 = load i32, i32* @y.18
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %83

; <label>:92:                                     ; preds = %50, %29
  %93 = load i32, i32* @x.17
  %94 = load i32, i32* @y.18
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %92, %originalBB10alteredBB
  %101 = landingpad { i8*, i32 }
          catch i8* null
  %102 = extractvalue { i8*, i32 } %101, 0
  call void @__clang_call_terminate(i8* %102) #11
  %103 = load i32, i32* @x.17
  %104 = load i32, i32* @y.18
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %33
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %111 = load i8*, i8** %5, align 8
  %112 = load i32, i32* %6, align 4
  %113 = insertvalue { i8*, i32 } undef, i8* %111, 0
  %114 = insertvalue { i8*, i32 } %113, i32 %112, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %92
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  call void @__clang_call_terminate(i8* %116) #11
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdED2Ev(%class.SparseMatrix*, i8**) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store i8** %1, i8*** %4, align 8
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %8 = load i8**, i8*** %4, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %class.SparseMatrix* %7 to i32 (...)***
  %11 = bitcast i8* %9 to i32 (...)**
  store i32 (...)** %11, i32 (...)*** %10, align 8
  %12 = getelementptr inbounds i8*, i8** %8, i64 1
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %class.SparseMatrix* %7 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.SparseMatrix* %7 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i32 (...)***
  %22 = bitcast i8* %13 to i32 (...)**
  store i32 (...)** %22, i32 (...)*** %21, align 8
  %23 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %24 = invoke dereferenceable(8) %class.SmartPointer* @_ZN12SmartPointerIK15SparsityPatternEaSEPS1_(%class.SmartPointer* %23, %class.SparsityPattern* null)
          to label %25 unwind label %52

; <label>:25:                                     ; preds = %2
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %27 = load double*, double** %26, align 8
  %28 = icmp ne double* %27, null
  br i1 %28, label %29, label %57

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %31 = load double*, double** %30, align 8
  %32 = icmp eq double* %31, null
  br i1 %32, label %51, label %33

; <label>:33:                                     ; preds = %29
  %34 = load i32, i32* @x.19
  %35 = load i32, i32* @y.20
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %33, %originalBBalteredBB
  %42 = bitcast double* %31 to i8*
  call void @_ZdaPv(i8* %42) #12
  %43 = load i32, i32* @x.19
  %44 = load i32, i32* @y.20
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %51

; <label>:51:                                     ; preds = %originalBBpart2, %29
  br label %57

; <label>:52:                                     ; preds = %2
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %5, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %6, align 4
  %56 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  invoke void @_ZN12SmartPointerIK15SparsityPatternED2Ev(%class.SmartPointer* %56)
          to label %59 unwind label %97

; <label>:57:                                     ; preds = %51, %25
  %58 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  call void @_ZN12SmartPointerIK15SparsityPatternED2Ev(%class.SmartPointer* %58)
  ret void

; <label>:59:                                     ; preds = %52
  %60 = load i32, i32* @x.19
  %61 = load i32, i32* @y.20
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %59, %originalBB1alteredBB
  %68 = load i32, i32* @x.19
  %69 = load i32, i32* @y.20
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %76

; <label>:76:                                     ; preds = %originalBBpart24
  %77 = load i32, i32* @x.19
  %78 = load i32, i32* @y.20
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %76, %originalBB6alteredBB
  %85 = load i8*, i8** %5, align 8
  %86 = load i32, i32* %6, align 4
  %87 = insertvalue { i8*, i32 } undef, i8* %85, 0
  %88 = insertvalue { i8*, i32 } %87, i32 %86, 1
  %89 = load i32, i32* @x.19
  %90 = load i32, i32* @y.20
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %88

; <label>:97:                                     ; preds = %52
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  call void @__clang_call_terminate(i8* %99) #11
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %33
  %100 = bitcast double* %31 to i8*
  call void @_ZdaPv(i8* %100) #12
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %59
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %76
  %101 = load i8*, i8** %5, align 8
  %102 = load i32, i32* %6, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) %class.SmartPointer* @_ZN12SmartPointerIK15SparsityPatternEaSEPS1_(%class.SmartPointer*, %class.SparsityPattern*) #0 comdat align 2 {
  %3 = alloca %class.SmartPointer*, align 8
  %4 = alloca %class.SmartPointer*, align 8
  %5 = alloca %class.SparsityPattern*, align 8
  store %class.SmartPointer* %0, %class.SmartPointer** %4, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %5, align 8
  %6 = load %class.SmartPointer*, %class.SmartPointer** %4, align 8
  %7 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %6, i32 0, i32 0
  %8 = load %class.SparsityPattern*, %class.SparsityPattern** %7, align 8
  %9 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %10 = icmp eq %class.SparsityPattern* %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  store %class.SmartPointer* %6, %class.SmartPointer** %3, align 8
  br label %45

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %6, i32 0, i32 0
  %14 = load %class.SparsityPattern*, %class.SparsityPattern** %13, align 8
  %15 = icmp ne %class.SparsityPattern* %14, null
  br i1 %15, label %16, label %36

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @x.21
  %18 = load i32, i32* @y.22
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %6, i32 0, i32 0
  %26 = load %class.SparsityPattern*, %class.SparsityPattern** %25, align 8
  %27 = bitcast %class.SparsityPattern* %26 to %class.Subscriptor*
  call void @_ZNK11Subscriptor11unsubscribeEv(%class.Subscriptor* %27)
  %28 = load i32, i32* @x.21
  %29 = load i32, i32* @y.22
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

; <label>:36:                                     ; preds = %originalBBpart2, %12
  %37 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %38 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %6, i32 0, i32 0
  store %class.SparsityPattern* %37, %class.SparsityPattern** %38, align 8
  %39 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %40 = icmp ne %class.SparsityPattern* %39, null
  br i1 %40, label %41, label %44

; <label>:41:                                     ; preds = %36
  %42 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %43 = bitcast %class.SparsityPattern* %42 to %class.Subscriptor*
  call void @_ZNK11Subscriptor9subscribeEv(%class.Subscriptor* %43)
  br label %44

; <label>:44:                                     ; preds = %41, %36
  store %class.SmartPointer* %6, %class.SmartPointer** %3, align 8
  br label %45

; <label>:45:                                     ; preds = %44, %11
  %46 = load i32, i32* @x.21
  %47 = load i32, i32* @y.22
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load %class.SmartPointer*, %class.SmartPointer** %3, align 8
  %55 = load i32, i32* @x.21
  %56 = load i32, i32* @y.22
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %class.SmartPointer* %54

originalBBalteredBB:                              ; preds = %originalBB, %16
  %63 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %6, i32 0, i32 0
  %64 = load %class.SparsityPattern*, %class.SparsityPattern** %63, align 8
  %65 = bitcast %class.SparsityPattern* %64 to %class.Subscriptor*
  call void @_ZNK11Subscriptor11unsubscribeEv(%class.Subscriptor* %65)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %66 = load %class.SmartPointer*, %class.SmartPointer** %3, align 8
  br label %originalBB1
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #4

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdED1Ev(%class.SparseMatrix*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.SparseMatrix*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  invoke void @_ZN12SparseMatrixIdED2Ev(%class.SparseMatrix* %5, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZTT12SparseMatrixIdE, i64 0, i64 0))
          to label %6 unwind label %10

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.SparseMatrix* %5 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 32
  %9 = bitcast i8* %8 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %9)
  ret void

; <label>:10:                                     ; preds = %1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %3, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %4, align 4
  %14 = bitcast %class.SparseMatrix* %5 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast i8* %15 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %16)
          to label %17 unwind label %23

; <label>:17:                                     ; preds = %10
  br label %18

; <label>:18:                                     ; preds = %17
  %19 = load i8*, i8** %3, align 8
  %20 = load i32, i32* %4, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

; <label>:23:                                     ; preds = %10
  %24 = load i32, i32* @x.23
  %25 = load i32, i32* @y.24
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = landingpad { i8*, i32 }
          catch i8* null
  %33 = extractvalue { i8*, i32 } %32, 0
  call void @__clang_call_terminate(i8* %33) #11
  %34 = load i32, i32* @x.23
  %35 = load i32, i32* @y.24
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %23
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  call void @__clang_call_terminate(i8* %43) #11
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZTv0_n24_N12SparseMatrixIdED1Ev(%class.SparseMatrix*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %10, align 8
  %11 = load %class.SparseMatrix*, %class.SparseMatrix** %10, align 8
  %12 = bitcast %class.SparseMatrix* %11 to i8*
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 -24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  %19 = bitcast i8* %18 to %class.SparseMatrix*
  tail call void @_ZN12SparseMatrixIdED1Ev(%class.SparseMatrix* %19)
  %20 = load i32, i32* @x.25
  %21 = load i32, i32* @y.26
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %28 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %28, align 8
  %29 = load %class.SparseMatrix*, %class.SparseMatrix** %28, align 8
  %30 = bitcast %class.SparseMatrix* %29 to i8*
  %31 = bitcast i8* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 -24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 %35
  %37 = bitcast i8* %36 to %class.SparseMatrix*
  tail call void @_ZN12SparseMatrixIdED1Ev(%class.SparseMatrix* %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdED0Ev(%class.SparseMatrix*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.SparseMatrix*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  invoke void @_ZN12SparseMatrixIdED1Ev(%class.SparseMatrix* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.SparseMatrix* %5 to i8*
  call void @_ZdlPv(i8* %7) #12
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.27
  %10 = load i32, i32* @y.28
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %class.SparseMatrix* %5 to i8*
  call void @_ZdlPv(i8* %20) #12
  %21 = load i32, i32* @x.27
  %22 = load i32, i32* @y.28
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %class.SparseMatrix* %5 to i8*
  call void @_ZdlPv(i8* %37) #12
  br label %originalBB
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #4

; Function Attrs: noinline uwtable
define weak_odr void @_ZTv0_n24_N12SparseMatrixIdED0Ev(%class.SparseMatrix*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %3 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %4 = bitcast %class.SparseMatrix* %3 to i8*
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 %9
  %11 = bitcast i8* %10 to %class.SparseMatrix*
  tail call void @_ZN12SparseMatrixIdED0Ev(%class.SparseMatrix* %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdEaSERKS0_(%class.SparseMatrix*, %class.SparseMatrix* dereferenceable(56)) #5 comdat align 2 {
  %3 = load i32, i32* @x.31
  %4 = load i32, i32* @y.32
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %12, align 8
  %13 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %14 = load i32, i32* @x.31
  %15 = load i32, i32* @y.32
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.SparseMatrix* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %class.SparseMatrix*, align 8
  %23 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %22, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %23, align 8
  %24 = load %class.SparseMatrix*, %class.SparseMatrix** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdEaSEd(%class.SparseMatrix*, double) #0 comdat align 2 {
  %3 = load i32, i32* @x.33
  %4 = load i32, i32* @y.34
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store double %1, double* %12, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %15 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %16 = load double*, double** %15, align 8
  %17 = icmp ne double* %16, null
  %18 = load i32, i32* @x.33
  %19 = load i32, i32* @y.34
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %34

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %28 = load double*, double** %27, align 8
  %29 = getelementptr inbounds double, double* %28, i64 0
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %31 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %30)
  %32 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %31)
  store double 0.000000e+00, double* %13, align 8
  %33 = call double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double* %29, i32 %32, double* dereferenceable(8) %13)
  br label %34

; <label>:34:                                     ; preds = %26, %originalBBpart2
  %35 = load i32, i32* @x.33
  %36 = load i32, i32* @y.34
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i32, i32* @x.33
  %44 = load i32, i32* @y.34
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %class.SparseMatrix* %14

originalBBalteredBB:                              ; preds = %originalBB, %2
  %51 = alloca %class.SparseMatrix*, align 8
  %52 = alloca double, align 8
  %53 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %51, align 8
  store double %1, double* %52, align 8
  %54 = load %class.SparseMatrix*, %class.SparseMatrix** %51, align 8
  %55 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %54, i32 0, i32 2
  %56 = load double*, double** %55, align 8
  %57 = icmp ne double* %56, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double*, i32, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i32 %1, i32* %5, align 4
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %8, i32 %9, double* dereferenceable(8) %10)
  %12 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %4, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer*) #5 comdat align 2 {
  %2 = alloca %class.SmartPointer*, align 8
  store %class.SmartPointer* %0, %class.SmartPointer** %2, align 8
  %3 = load %class.SmartPointer*, %class.SmartPointer** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %3, i32 0, i32 0
  %5 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  ret %class.SparsityPattern* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern*) #5 comdat align 2 {
  %2 = alloca %class.SparsityPattern*, align 8
  store %class.SparsityPattern* %0, %class.SparsityPattern** %2, align 8
  %3 = load %class.SparsityPattern*, %class.SparsityPattern** %2, align 8
  %4 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %3, i32 0, i32 7
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %3, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i32, i32* %5, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %3, i32 0, i32 7
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %10, %14
  ret i32 %15
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE6reinitERK15SparsityPattern(%class.SparseMatrix*, %class.SparsityPattern* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %class.SparsityPattern*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %4, align 8
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %8 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  %9 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %10 = call dereferenceable(8) %class.SmartPointer* @_ZN12SmartPointerIK15SparsityPatternEaSEPS1_(%class.SmartPointer* %9, %class.SparsityPattern* %8)
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %12 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %11)
  %13 = call zeroext i1 @_ZNK15SparsityPattern5emptyEv(%class.SparsityPattern* %12)
  br i1 %13, label %14, label %44

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.41
  %16 = load i32, i32* @y.42
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %24 = load double*, double** %23, align 8
  %25 = icmp ne double* %24, null
  %26 = load i32, i32* @x.41
  %27 = load i32, i32* @y.42
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %41

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %34
  %39 = bitcast double* %36 to i8*
  call void @_ZdaPv(i8* %39) #12
  br label %40

; <label>:40:                                     ; preds = %38, %34
  br label %41

; <label>:41:                                     ; preds = %40, %originalBBpart2
  %42 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  store double* null, double** %42, align 8
  %43 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  store i32 0, i32* %43, align 8
  br label %137

; <label>:44:                                     ; preds = %2
  %45 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %46 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %45)
  %47 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %46)
  store i32 %47, i32* %5, align 4
  %48 = load i32, i32* %5, align 4
  %49 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp ugt i32 %48, %50
  br i1 %51, label %56, label %52

; <label>:52:                                     ; preds = %44
  %53 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %111

; <label>:56:                                     ; preds = %52, %44
  %57 = load i32, i32* @x.41
  %58 = load i32, i32* @y.42
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %56, %originalBB1alteredBB
  %65 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %66 = load double*, double** %65, align 8
  %67 = icmp ne double* %66, null
  %68 = load i32, i32* @x.41
  %69 = load i32, i32* @y.42
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %67, label %76, label %83

; <label>:76:                                     ; preds = %originalBBpart24
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %78 = load double*, double** %77, align 8
  %79 = icmp eq double* %78, null
  br i1 %79, label %82, label %80

; <label>:80:                                     ; preds = %76
  %81 = bitcast double* %78 to i8*
  call void @_ZdaPv(i8* %81) #12
  br label %82

; <label>:82:                                     ; preds = %80, %76
  br label %83

; <label>:83:                                     ; preds = %82, %originalBBpart24
  %84 = load i32, i32* @x.41
  %85 = load i32, i32* @y.42
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %83, %originalBB6alteredBB
  %92 = load i32, i32* %5, align 4
  %93 = zext i32 %92 to i64
  %94 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %93, i64 8)
  %95 = extractvalue { i64, i1 } %94, 1
  %96 = extractvalue { i64, i1 } %94, 0
  %97 = select i1 %95, i64 -1, i64 %96
  %98 = call i8* @_Znam(i64 %97) #13
  %99 = bitcast i8* %98 to double*
  %100 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  store double* %99, double** %100, align 8
  %101 = load i32, i32* %5, align 4
  %102 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  store i32 %101, i32* %102, align 8
  %103 = load i32, i32* @x.41
  %104 = load i32, i32* @y.42
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %111

; <label>:111:                                    ; preds = %originalBBpart28, %52
  %112 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %113 = load double*, double** %112, align 8
  %114 = icmp ne double* %113, null
  br i1 %114, label %115, label %137

; <label>:115:                                    ; preds = %111
  %116 = load i32, i32* @x.41
  %117 = load i32, i32* @y.42
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %115, %originalBB10alteredBB
  %124 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %125 = load double*, double** %124, align 8
  %126 = getelementptr inbounds double, double* %125, i64 0
  %127 = load i32, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %128 = call double* @_ZSt6fill_nIPdjiET_S1_T0_RKT1_(double* %126, i32 %127, i32* dereferenceable(4) %6)
  %129 = load i32, i32* @x.41
  %130 = load i32, i32* @y.42
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %137

; <label>:137:                                    ; preds = %originalBBpart212, %111, %41
  %138 = load i32, i32* @x.41
  %139 = load i32, i32* @y.42
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %137, %originalBB14alteredBB
  %146 = load i32, i32* @x.41
  %147 = load i32, i32* @y.42
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %14
  %154 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %155 = load double*, double** %154, align 8
  %156 = icmp ne double* %155, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %56
  %157 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %158 = load double*, double** %157, align 8
  %159 = icmp ne double* %158, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  %160 = load i32, i32* %5, align 4
  %161 = zext i32 %160 to i64
  %162 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %161, i64 8)
  %163 = extractvalue { i64, i1 } %162, 1
  %164 = extractvalue { i64, i1 } %162, 0
  %165 = select i1 %163, i64 -1, i64 %164
  %166 = call i8* @_Znam(i64 %165) #13
  %167 = bitcast i8* %166 to double*
  %168 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  store double* %167, double** %168, align 8
  %169 = load i32, i32* %5, align 4
  %170 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 3
  store i32 %169, i32* %170, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %115
  %171 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %172 = load double*, double** %171, align 8
  %173 = getelementptr inbounds double, double* %172, i64 0
  %174 = load i32, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %175 = call double* @_ZSt6fill_nIPdjiET_S1_T0_RKT1_(double* %173, i32 %174, i32* dereferenceable(4) %6)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %137
  br label %originalBB14
}

declare zeroext i1 @_ZNK15SparsityPattern5emptyEv(%class.SparsityPattern*) #1

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #7

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdjiET_S1_T0_RKT1_(double*, i32, i32* dereferenceable(4)) #0 comdat {
  %4 = load i32, i32* @x.43
  %5 = load i32, i32* @y.44
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  store double* %0, double** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32* %2, i32** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %15)
  %17 = load i32, i32* %13, align 4
  %18 = load i32*, i32** %14, align 8
  %19 = call double* @_ZSt10__fill_n_aIPdjiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %16, i32 %17, i32* dereferenceable(4) %18)
  %20 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %12, double* %19)
  %21 = load i32, i32* @x.43
  %22 = load i32, i32* @y.44
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca double*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32*, align 8
  store double* %0, double** %29, align 8
  store i32 %1, i32* %30, align 4
  store i32* %2, i32** %31, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %32)
  %34 = load i32, i32* %30, align 4
  %35 = load i32*, i32** %31, align 8
  %36 = call double* @_ZSt10__fill_n_aIPdjiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %33, i32 %34, i32* dereferenceable(4) %35)
  %37 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %29, double* %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE5clearEv(%class.SparseMatrix*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %3 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %4 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 1
  %5 = call dereferenceable(8) %class.SmartPointer* @_ZN12SmartPointerIK15SparsityPatternEaSEPS1_(%class.SmartPointer* %4, %class.SparsityPattern* null)
  %6 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 2
  %7 = load double*, double** %6, align 8
  %8 = icmp ne double* %7, null
  br i1 %8, label %9, label %48

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.45
  %11 = load i32, i32* @y.46
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 2
  %19 = load double*, double** %18, align 8
  %20 = icmp eq double* %19, null
  %21 = load i32, i32* @x.45
  %22 = load i32, i32* @y.46
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %31, label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = bitcast double* %19 to i8*
  call void @_ZdaPv(i8* %30) #12
  br label %31

; <label>:31:                                     ; preds = %29, %originalBBpart2
  %32 = load i32, i32* @x.45
  %33 = load i32, i32* @y.46
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.45
  %41 = load i32, i32* @y.46
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48

; <label>:48:                                     ; preds = %originalBBpart24, %1
  %49 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 2
  store double* null, double** %49, align 8
  %50 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 3
  store i32 0, i32* %50, align 8
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %9
  %51 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 2
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr zeroext i1 @_ZNK12SparseMatrixIdE5emptyEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = load i32, i32* @x.47
  %3 = load i32, i32* @y.48
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  %12 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %13 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %14 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEcvPS1_Ev(%class.SmartPointer* %13)
  %15 = icmp eq %class.SparsityPattern* %14, null
  %16 = load i32, i32* @x.47
  %17 = load i32, i32* @y.48
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %25

; <label>:24:                                     ; preds = %originalBBpart2
  store i1 true, i1* %10, align 1
  br label %45

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.47
  %27 = load i32, i32* @y.48
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %35 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %34)
  %36 = call zeroext i1 @_ZNK15SparsityPattern5emptyEv(%class.SparsityPattern* %35)
  store i1 %36, i1* %10, align 1
  %37 = load i32, i32* @x.47
  %38 = load i32, i32* @y.48
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45

; <label>:45:                                     ; preds = %originalBBpart24, %24
  %46 = load i32, i32* @x.47
  %47 = load i32, i32* @y.48
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i1, i1* %10, align 1
  %55 = load i32, i32* @x.47
  %56 = load i32, i32* @y.48
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i1 %54

originalBBalteredBB:                              ; preds = %originalBB, %1
  %63 = alloca i1, align 1
  %64 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %64, align 8
  %65 = load %class.SparseMatrix*, %class.SparseMatrix** %64, align 8
  %66 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %65, i32 0, i32 1
  %67 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEcvPS1_Ev(%class.SmartPointer* %66)
  %68 = icmp eq %class.SparsityPattern* %67, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %69 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %70 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %69)
  %71 = call zeroext i1 @_ZNK15SparsityPattern5emptyEv(%class.SparsityPattern* %70)
  store i1 %71, i1* %10, align 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %72 = load i1, i1* %10, align 1
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEcvPS1_Ev(%class.SmartPointer*) #5 comdat align 2 {
  %2 = alloca %class.SmartPointer*, align 8
  store %class.SmartPointer* %0, %class.SmartPointer** %2, align 8
  %3 = load %class.SmartPointer*, %class.SmartPointer** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %3, i32 0, i32 0
  %5 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  ret %class.SparsityPattern* %5
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %3 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %4 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 1
  %5 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %4)
  %6 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  ret i32 %7
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK12SparseMatrixIdE1nEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %3 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %4 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 1
  %5 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %4)
  %6 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  ret i32 %7
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK12SparseMatrixIdE18n_nonzero_elementsEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %3 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %4 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 1
  %5 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %4)
  %6 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %5)
  ret i32 %6
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK12SparseMatrixIdE27n_actually_nonzero_elementsEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = load i32, i32* @x.57
  %3 = load i32, i32* @y.58
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrix*, align 8
  %11 = alloca %"class.std::binder2nd", align 8
  %12 = alloca %"struct.std::not_equal_to", align 1
  %13 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %10, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %10, align 8
  %15 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %16 = load double*, double** %15, align 8
  %17 = getelementptr inbounds double, double* %16, i64 0
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %19 = load double*, double** %18, align 8
  %20 = call i32 @_ZNK12SparseMatrixIdE18n_nonzero_elementsEv(%class.SparseMatrix* %14)
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds double, double* %19, i64 %21
  store i32 0, i32* %13, align 4
  %23 = call double @_ZSt7bind2ndISt12not_equal_toIdEiESt9binder2ndIT_ERKS3_RKT0_(%"struct.std::not_equal_to"* dereferenceable(1) %12, i32* dereferenceable(4) %13)
  %24 = bitcast %"class.std::binder2nd"* %11 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to double*
  store double %23, double* %26, align 8
  %27 = bitcast %"class.std::binder2nd"* %11 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to double*
  %30 = load double, double* %29, align 8
  %31 = call i64 @_ZSt8count_ifIPdSt9binder2ndISt12not_equal_toIdEEENSt15iterator_traitsIT_E15difference_typeES6_S6_T0_(double* %17, double* %22, double %30)
  %32 = trunc i64 %31 to i32
  %33 = load i32, i32* @x.57
  %34 = load i32, i32* @y.58
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %32

originalBBalteredBB:                              ; preds = %originalBB, %1
  %41 = alloca %class.SparseMatrix*, align 8
  %42 = alloca %"class.std::binder2nd", align 8
  %43 = alloca %"struct.std::not_equal_to", align 1
  %44 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %41, align 8
  %45 = load %class.SparseMatrix*, %class.SparseMatrix** %41, align 8
  %46 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %45, i32 0, i32 2
  %47 = load double*, double** %46, align 8
  %48 = getelementptr inbounds double, double* %47, i64 0
  %49 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %45, i32 0, i32 2
  %50 = load double*, double** %49, align 8
  %51 = call i32 @_ZNK12SparseMatrixIdE18n_nonzero_elementsEv(%class.SparseMatrix* %45)
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds double, double* %50, i64 %52
  store i32 0, i32* %44, align 4
  %54 = call double @_ZSt7bind2ndISt12not_equal_toIdEiESt9binder2ndIT_ERKS3_RKT0_(%"struct.std::not_equal_to"* dereferenceable(1) %43, i32* dereferenceable(4) %44)
  %55 = bitcast %"class.std::binder2nd"* %42 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = bitcast i8* %56 to double*
  store double %54, double* %57, align 8
  %58 = bitcast %"class.std::binder2nd"* %42 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  %60 = bitcast i8* %59 to double*
  %61 = load double, double* %60, align 8
  %62 = call i64 @_ZSt8count_ifIPdSt9binder2ndISt12not_equal_toIdEEENSt15iterator_traitsIT_E15difference_typeES6_S6_T0_(double* %48, double* %53, double %61)
  %63 = trunc i64 %62 to i32
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8count_ifIPdSt9binder2ndISt12not_equal_toIdEEENSt15iterator_traitsIT_E15difference_typeES6_S6_T0_(double*, double*, double) #0 comdat {
  %4 = load i32, i32* @x.59
  %5 = load i32, i32* @y.60
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::binder2nd", align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred", align 8
  %16 = alloca %"class.std::binder2nd", align 8
  %17 = bitcast %"class.std::binder2nd"* %12 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to double*
  store double %2, double* %19, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  %20 = load double*, double** %13, align 8
  %21 = load double*, double** %14, align 8
  %22 = bitcast %"class.std::binder2nd"* %16 to i8*
  %23 = bitcast %"class.std::binder2nd"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = bitcast %"class.std::binder2nd"* %16 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to double*
  %27 = load double, double* %26, align 8
  %28 = call double @_ZN9__gnu_cxx5__ops11__pred_iterISt9binder2ndISt12not_equal_toIdEEEENS0_10_Iter_predIT_EES7_(double %27)
  %29 = bitcast %"struct.__gnu_cxx::__ops::_Iter_pred"* %15 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to double*
  store double %28, double* %31, align 8
  %32 = bitcast %"struct.__gnu_cxx::__ops::_Iter_pred"* %15 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to double*
  %35 = load double, double* %34, align 8
  %36 = call i64 @_ZSt10__count_ifIPdN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_T0_(double* %20, double* %21, double %35)
  %37 = load i32, i32* @x.59
  %38 = load i32, i32* @y.60
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %36

originalBBalteredBB:                              ; preds = %originalBB, %3
  %45 = alloca %"class.std::binder2nd", align 8
  %46 = alloca double*, align 8
  %47 = alloca double*, align 8
  %48 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred", align 8
  %49 = alloca %"class.std::binder2nd", align 8
  %50 = bitcast %"class.std::binder2nd"* %45 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = bitcast i8* %51 to double*
  store double %2, double* %52, align 8
  store double* %0, double** %46, align 8
  store double* %1, double** %47, align 8
  %53 = load double*, double** %46, align 8
  %54 = load double*, double** %47, align 8
  %55 = bitcast %"class.std::binder2nd"* %49 to i8*
  %56 = bitcast %"class.std::binder2nd"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false)
  %57 = bitcast %"class.std::binder2nd"* %49 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = bitcast i8* %58 to double*
  %60 = load double, double* %59, align 8
  %61 = call double @_ZN9__gnu_cxx5__ops11__pred_iterISt9binder2ndISt12not_equal_toIdEEEENS0_10_Iter_predIT_EES7_(double %60)
  %62 = bitcast %"struct.__gnu_cxx::__ops::_Iter_pred"* %48 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to double*
  store double %61, double* %64, align 8
  %65 = bitcast %"struct.__gnu_cxx::__ops::_Iter_pred"* %48 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to double*
  %68 = load double, double* %67, align 8
  %69 = call i64 @_ZSt10__count_ifIPdN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_T0_(double* %53, double* %54, double %68)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double @_ZSt7bind2ndISt12not_equal_toIdEiESt9binder2ndIT_ERKS3_RKT0_(%"struct.std::not_equal_to"* dereferenceable(1), i32* dereferenceable(4)) #0 comdat {
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::binder2nd", align 8
  %12 = alloca %"struct.std::not_equal_to"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca double, align 8
  store %"struct.std::not_equal_to"* %0, %"struct.std::not_equal_to"** %12, align 8
  store i32* %1, i32** %13, align 8
  %15 = load %"struct.std::not_equal_to"*, %"struct.std::not_equal_to"** %12, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to double
  store double %18, double* %14, align 8
  call void @_ZNSt9binder2ndISt12not_equal_toIdEEC2ERKS1_RKd(%"class.std::binder2nd"* %11, %"struct.std::not_equal_to"* dereferenceable(1) %15, double* dereferenceable(8) %14)
  %19 = bitcast %"class.std::binder2nd"* %11 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to double*
  %22 = load double, double* %21, align 8
  %23 = load i32, i32* @x.61
  %24 = load i32, i32* @y.62
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double %22

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %"class.std::binder2nd", align 8
  %32 = alloca %"struct.std::not_equal_to"*, align 8
  %33 = alloca i32*, align 8
  %34 = alloca double, align 8
  store %"struct.std::not_equal_to"* %0, %"struct.std::not_equal_to"** %32, align 8
  store i32* %1, i32** %33, align 8
  %35 = load %"struct.std::not_equal_to"*, %"struct.std::not_equal_to"** %32, align 8
  %36 = load i32*, i32** %33, align 8
  %37 = load i32, i32* %36, align 4
  %38 = sitofp i32 %37 to double
  store double %38, double* %34, align 8
  call void @_ZNSt9binder2ndISt12not_equal_toIdEEC2ERKS1_RKd(%"class.std::binder2nd"* %31, %"struct.std::not_equal_to"* dereferenceable(1) %35, double* dereferenceable(8) %34)
  %39 = bitcast %"class.std::binder2nd"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to double*
  %42 = load double, double* %41, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE3setEjjd(%class.SparseMatrix*, i32, i32, double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store double %3, double* %8, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %12 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %11)
  %13 = load i32, i32* %6, align 4
  %14 = load i32, i32* %7, align 4
  %15 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %12, i32 %13, i32 %14)
  store i32 %15, i32* %9, align 4
  %16 = load i32, i32* %9, align 4
  %17 = icmp ne i32 %16, -1
  br i1 %17, label %18, label %25

; <label>:18:                                     ; preds = %4
  %19 = load double, double* %8, align 8
  %20 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %21 = load double*, double** %20, align 8
  %22 = load i32, i32* %9, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds double, double* %21, i64 %23
  store double %19, double* %24, align 8
  br label %25

; <label>:25:                                     ; preds = %18, %4
  ret void
}

declare i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern*, i32, i32) #1

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdEmLEd(%class.SparseMatrix*, double) #0 comdat align 2 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca double, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store double %1, double* %12, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds double, double* %17, i64 0
  store double* %18, double** %13, align 8
  %19 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %20 = load double*, double** %19, align 8
  %21 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %22 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %21)
  %23 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %22)
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds double, double* %20, i64 %24
  store double* %25, double** %14, align 8
  %26 = load i32, i32* @x.65
  %27 = load i32, i32* @y.66
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart210, %originalBBpart2
  %35 = load i32, i32* @x.65
  %36 = load i32, i32* @y.66
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load double*, double** %13, align 8
  %44 = load double*, double** %14, align 8
  %45 = icmp ne double* %43, %44
  %46 = load i32, i32* @x.65
  %47 = load i32, i32* @y.66
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %45, label %54, label %76

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = load i32, i32* @x.65
  %56 = load i32, i32* @y.66
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = load double, double* %12, align 8
  %64 = load double*, double** %13, align 8
  %65 = getelementptr inbounds double, double* %64, i32 1
  store double* %65, double** %13, align 8
  %66 = load double, double* %64, align 8
  %67 = fmul double %66, %63
  store double %67, double* %64, align 8
  %68 = load i32, i32* @x.65
  %69 = load i32, i32* @y.66
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart210, label %originalBB6alteredBB

originalBBpart210:                                ; preds = %originalBB6
  br label %34

; <label>:76:                                     ; preds = %originalBBpart24
  ret %class.SparseMatrix* %15

originalBBalteredBB:                              ; preds = %originalBB, %2
  %77 = alloca %class.SparseMatrix*, align 8
  %78 = alloca double, align 8
  %79 = alloca double*, align 8
  %80 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %77, align 8
  store double %1, double* %78, align 8
  %81 = load %class.SparseMatrix*, %class.SparseMatrix** %77, align 8
  %82 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %81, i32 0, i32 2
  %83 = load double*, double** %82, align 8
  %84 = getelementptr inbounds double, double* %83, i64 0
  store double* %84, double** %79, align 8
  %85 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %81, i32 0, i32 2
  %86 = load double*, double** %85, align 8
  %87 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %81, i32 0, i32 1
  %88 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %87)
  %89 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %88)
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds double, double* %86, i64 %90
  store double* %91, double** %80, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %92 = load double*, double** %13, align 8
  %93 = load double*, double** %14, align 8
  %94 = icmp ne double* %92, %93
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %95 = load double, double* %12, align 8
  %96 = load double*, double** %13, align 8
  %97 = getelementptr inbounds double, double* %96, i32 1
  store double* %97, double** %13, align 8
  %98 = load double, double* %96, align 8
  %_ = fsub double %98, %95
  %gen = fmul double %_, %95
  %_7 = fsub double %98, %95
  %gen8 = fmul double %_7, %95
  %99 = fmul double %98, %95
  store double %99, double* %96, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdEdVEd(%class.SparseMatrix*, double) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store double %1, double* %4, align 8
  %8 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %9 = load double, double* %4, align 8
  %10 = fdiv double 1.000000e+00, %9
  store double %10, double* %5, align 8
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %8, i32 0, i32 2
  %12 = load double*, double** %11, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  store double* %13, double** %6, align 8
  %14 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %8, i32 0, i32 2
  %15 = load double*, double** %14, align 8
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %8, i32 0, i32 1
  %17 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %16)
  %18 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %17)
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds double, double* %15, i64 %19
  store double* %20, double** %7, align 8
  br label %21

; <label>:21:                                     ; preds = %25, %2
  %22 = load double*, double** %6, align 8
  %23 = load double*, double** %7, align 8
  %24 = icmp ne double* %22, %23
  br i1 %24, label %25, label %31

; <label>:25:                                     ; preds = %21
  %26 = load double, double* %5, align 8
  %27 = load double*, double** %6, align 8
  %28 = getelementptr inbounds double, double* %27, i32 1
  store double* %28, double** %6, align 8
  %29 = load double, double* %27, align 8
  %30 = fmul double %29, %26
  store double %30, double* %27, align 8
  br label %21

; <label>:31:                                     ; preds = %21
  ret %class.SparseMatrix* %8
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE3addEjjd(%class.SparseMatrix*, i32, i32, double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store double %3, double* %8, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %12 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %11)
  %13 = load i32, i32* %6, align 4
  %14 = load i32, i32* %7, align 4
  %15 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %12, i32 %13, i32 %14)
  store i32 %15, i32* %9, align 4
  %16 = load double, double* %8, align 8
  %17 = fcmp une double %16, 0.000000e+00
  br i1 %17, label %18, label %43

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.69
  %20 = load i32, i32* @y.70
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load double, double* %8, align 8
  %28 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %29 = load double*, double** %28, align 8
  %30 = load i32, i32* %9, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds double, double* %29, i64 %31
  %33 = load double, double* %32, align 8
  %34 = fadd double %33, %27
  store double %34, double* %32, align 8
  %35 = load i32, i32* @x.69
  %36 = load i32, i32* @y.70
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:43:                                     ; preds = %originalBBpart2, %4
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  %44 = load double, double* %8, align 8
  %45 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %46 = load double*, double** %45, align 8
  %47 = load i32, i32* %9, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds double, double* %46, i64 %48
  %50 = load double, double* %49, align 8
  %_ = fsub double %50, %44
  %gen = fmul double %_, %44
  %_1 = fsub double %50, %44
  %gen2 = fmul double %_1, %44
  %_3 = fsub double %50, %44
  %gen4 = fmul double %_3, %44
  %_5 = fsub double %50, %44
  %gen6 = fmul double %_5, %44
  %51 = fadd double %50, %44
  store double %51, double* %49, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE10symmetrizeEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca double*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca double*, align 8
  %8 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %9 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %10 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %9)
  store i32 %10, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %11

; <label>:11:                                     ; preds = %117, %1
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %3, align 4
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %15, label %120

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 2
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %19 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %18)
  %20 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %19, i32 0, i32 7
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %4, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds double, double* %17, i64 %26
  store double* %27, double** %5, align 8
  %28 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %29 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %28)
  %30 = call zeroext i1 @_ZNK15SparsityPattern17optimize_diagonalEv(%class.SparsityPattern* %29)
  br i1 %30, label %31, label %34

; <label>:31:                                     ; preds = %15
  %32 = load double*, double** %5, align 8
  %33 = getelementptr inbounds double, double* %32, i32 1
  store double* %33, double** %5, align 8
  br label %34

; <label>:34:                                     ; preds = %31, %15
  %35 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %36 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %35)
  %37 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %36, i32 0, i32 8
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %40 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %39)
  %41 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %40, i32 0, i32 7
  %42 = load i32*, i32** %41, align 8
  %43 = load i32, i32* %4, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %42, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %38, i64 %48
  store i32* %49, i32** %6, align 8
  %50 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 2
  %51 = load double*, double** %50, align 8
  %52 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %53 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %52)
  %54 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %53, i32 0, i32 7
  %55 = load i32*, i32** %54, align 8
  %56 = load i32, i32* %4, align 4
  %57 = add i32 %56, 1
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %55, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds double, double* %51, i64 %61
  store double* %62, double** %7, align 8
  br label %63

; <label>:63:                                     ; preds = %90, %34
  %64 = load double*, double** %5, align 8
  %65 = load double*, double** %7, align 8
  %66 = icmp ne double* %64, %65
  br i1 %66, label %67, label %88

; <label>:67:                                     ; preds = %63
  %68 = load i32, i32* @x.71
  %69 = load i32, i32* @y.72
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %67, %originalBBalteredBB
  %76 = load i32*, i32** %6, align 8
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %4, align 4
  %79 = icmp ult i32 %77, %78
  %80 = load i32, i32* @x.71
  %81 = load i32, i32* @y.72
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %88

; <label>:88:                                     ; preds = %originalBBpart2, %63
  %89 = phi i1 [ false, %63 ], [ %79, %originalBBpart2 ]
  br i1 %89, label %90, label %116

; <label>:90:                                     ; preds = %88
  %91 = load double*, double** %5, align 8
  %92 = load double, double* %91, align 8
  %93 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 2
  %94 = load double*, double** %93, align 8
  %95 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %96 = call dereferenceable(72) %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEdeEv(%class.SmartPointer* %95)
  %97 = load i32*, i32** %6, align 8
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %4, align 4
  %100 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %96, i32 %98, i32 %99)
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds double, double* %94, i64 %101
  %103 = load double, double* %102, align 8
  %104 = fadd double %92, %103
  %105 = fdiv double %104, 2.000000e+00
  store double %105, double* %8, align 8
  %106 = load double, double* %8, align 8
  %107 = load double*, double** %5, align 8
  store double %106, double* %107, align 8
  %108 = load i32*, i32** %6, align 8
  %109 = load i32, i32* %108, align 4
  %110 = load i32, i32* %4, align 4
  %111 = load double, double* %8, align 8
  call void @_ZN12SparseMatrixIdE3setEjjd(%class.SparseMatrix* %9, i32 %109, i32 %110, double %111)
  %112 = load double*, double** %5, align 8
  %113 = getelementptr inbounds double, double* %112, i32 1
  store double* %113, double** %5, align 8
  %114 = load i32*, i32** %6, align 8
  %115 = getelementptr inbounds i32, i32* %114, i32 1
  store i32* %115, i32** %6, align 8
  br label %63

; <label>:116:                                    ; preds = %88
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = load i32, i32* %4, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %4, align 4
  br label %11

; <label>:120:                                    ; preds = %11
  %121 = load i32, i32* @x.71
  %122 = load i32, i32* @y.72
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %120, %originalBB1alteredBB
  %129 = load i32, i32* @x.71
  %130 = load i32, i32* @y.72
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %67
  %137 = load i32*, i32** %6, align 8
  %138 = load i32, i32* %137, align 4
  %139 = load i32, i32* %4, align 4
  %140 = icmp ult i32 %138, %139
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %120
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK15SparsityPattern17optimize_diagonalEv(%class.SparsityPattern*) #5 comdat align 2 {
  %2 = alloca %class.SparsityPattern*, align 8
  store %class.SparsityPattern* %0, %class.SparsityPattern** %2, align 8
  %3 = load %class.SparsityPattern*, %class.SparsityPattern** %2, align 8
  %4 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %3, i32 0, i32 10
  %5 = load i8, i8* %4, align 1
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEdeEv(%class.SmartPointer*) #5 comdat align 2 {
  %2 = alloca %class.SmartPointer*, align 8
  store %class.SmartPointer* %0, %class.SmartPointer** %2, align 8
  %3 = load %class.SmartPointer*, %class.SmartPointer** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %3, i32 0, i32 0
  %5 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  ret %class.SparsityPattern* %5
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdEclEjj(%class.SparseMatrix*, i32, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex", align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %12 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %11)
  %13 = load i32, i32* %5, align 4
  %14 = load i32, i32* %6, align 4
  %15 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %12, i32 %13, i32 %14)
  %16 = icmp ne i32 %15, -1
  br i1 %16, label %41, label %17

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* @x.77
  %19 = load i32, i32* @y.78
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %6, align 4
  call void @_ZN12SparseMatrixIdE15ExcInvalidIndexC1Eii(%"class.SparseMatrix<double>::ExcInvalidIndex"* %7, i32 %26, i32 %27)
  %28 = load i32, i32* @x.77
  %29 = load i32, i32* @y.78
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN12SparseMatrixIdE15ExcInvalidIndexEEEvPKciS6_S6_S6_T_(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0), i32 1768, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0), %"class.SparseMatrix<double>::ExcInvalidIndex"* %7)
          to label %36 unwind label %37

; <label>:36:                                     ; preds = %originalBBpart2
  call void @_ZN12SparseMatrixIdE15ExcInvalidIndexD1Ev(%"class.SparseMatrix<double>::ExcInvalidIndex"* %7) #2
  br label %41

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %8, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %9, align 4
  call void @_ZN12SparseMatrixIdE15ExcInvalidIndexD1Ev(%"class.SparseMatrix<double>::ExcInvalidIndex"* %7) #2
  br label %68

; <label>:41:                                     ; preds = %36, %3
  %42 = load i32, i32* @x.77
  %43 = load i32, i32* @y.78
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %51 = load double*, double** %50, align 8
  %52 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %53 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %52)
  %54 = load i32, i32* %5, align 4
  %55 = load i32, i32* %6, align 4
  %56 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %53, i32 %54, i32 %55)
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds double, double* %51, i64 %57
  %59 = load double, double* %58, align 8
  %60 = load i32, i32* @x.77
  %61 = load i32, i32* @y.78
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret double %59

; <label>:68:                                     ; preds = %37
  %69 = load i8*, i8** %8, align 8
  %70 = load i32, i32* %9, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  resume { i8*, i32 } %72

originalBBalteredBB:                              ; preds = %originalBB, %17
  %73 = load i32, i32* %5, align 4
  %74 = load i32, i32* %6, align 4
  call void @_ZN12SparseMatrixIdE15ExcInvalidIndexC1Eii(%"class.SparseMatrix<double>::ExcInvalidIndex"* %7, i32 %73, i32 %74)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %75 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %76 = load double*, double** %75, align 8
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %78 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %77)
  %79 = load i32, i32* %5, align 4
  %80 = load i32, i32* %6, align 4
  %81 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %78, i32 %79, i32 %80)
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds double, double* %76, i64 %82
  %84 = load double, double* %83, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18deal_II_exceptions9internals17issue_error_throwIN12SparseMatrixIdE15ExcInvalidIndexEEEvPKciS6_S6_S6_T_(i8*, i32, i8*, i8*, i8*, %"class.SparseMatrix<double>::ExcInvalidIndex"*) #0 comdat {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  %12 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %5 to %class.ExceptionBase*
  %13 = load i8*, i8** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i8*, i8** %9, align 8
  %16 = load i8*, i8** %10, align 8
  %17 = load i8*, i8** %11, align 8
  call void @_ZN13ExceptionBase9SetFieldsEPKciS1_S1_S1_(%class.ExceptionBase* %12, i8* %13, i32 %14, i8* %15, i8* %16, i8* %17)
  %18 = call i8* @__cxa_allocate_exception(i64 56) #2
  %19 = bitcast i8* %18 to %"class.SparseMatrix<double>::ExcInvalidIndex"*
  call void @_ZN12SparseMatrixIdE15ExcInvalidIndexC2ERKS1_(%"class.SparseMatrix<double>::ExcInvalidIndex"* %19, %"class.SparseMatrix<double>::ExcInvalidIndex"* dereferenceable(56) %5) #2
  call void @__cxa_throw(i8* %18, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN12SparseMatrixIdE15ExcInvalidIndexE to i8*), i8* bitcast (void (%"class.SparseMatrix<double>::ExcInvalidIndex"*)* @_ZN12SparseMatrixIdE15ExcInvalidIndexD1Ev to i8*)) #14
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE2elEjj(%class.SparseMatrix*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double, align 8
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 1
  %19 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %18)
  %20 = load i32, i32* %14, align 4
  %21 = load i32, i32* %15, align 4
  %22 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %19, i32 %20, i32 %21)
  store i32 %22, i32* %16, align 4
  %23 = load i32, i32* %16, align 4
  %24 = icmp ne i32 %23, -1
  %25 = load i32, i32* @x.81
  %26 = load i32, i32* @y.82
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %40

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 2
  %35 = load double*, double** %34, align 8
  %36 = load i32, i32* %16, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds double, double* %35, i64 %37
  %39 = load double, double* %38, align 8
  store double %39, double* %12, align 8
  br label %41

; <label>:40:                                     ; preds = %originalBBpart2
  store double 0.000000e+00, double* %12, align 8
  br label %41

; <label>:41:                                     ; preds = %40, %33
  %42 = load double, double* %12, align 8
  ret double %42

originalBBalteredBB:                              ; preds = %originalBB, %3
  %43 = alloca double, align 8
  %44 = alloca %class.SparseMatrix*, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %44, align 8
  store i32 %1, i32* %45, align 4
  store i32 %2, i32* %46, align 4
  %48 = load %class.SparseMatrix*, %class.SparseMatrix** %44, align 8
  %49 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %48, i32 0, i32 1
  %50 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %49)
  %51 = load i32, i32* %45, align 4
  %52 = load i32, i32* %46, align 4
  %53 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %50, i32 %51, i32 %52)
  store i32 %53, i32* %47, align 4
  %54 = load i32, i32* %47, align 4
  %55 = icmp ne i32 %54, -1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE12diag_elementEj(%class.SparseMatrix*, i32) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %6 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 2
  %7 = load double*, double** %6, align 8
  %8 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  %9 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %8)
  %10 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %9, i32 0, i32 7
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* %4, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds double, double* %7, i64 %16
  %18 = load double, double* %17, align 8
  ret double %18
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(8) double* @_ZN12SparseMatrixIdE12diag_elementEj(%class.SparseMatrix*, i32) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %6 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 2
  %7 = load double*, double** %6, align 8
  %8 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  %9 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %8)
  %10 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %9, i32 0, i32 7
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* %4, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds double, double* %7, i64 %16
  ret double* %17
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE9raw_entryEjj(%class.SparseMatrix*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %8 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 2
  %9 = load double*, double** %8, align 8
  %10 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %11 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %10)
  %12 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %11, i32 0, i32 7
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* %5, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %13, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %17, %18
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds double, double* %9, i64 %20
  %22 = load double, double* %21, align 8
  ret double %22
}

; Function Attrs: noinline nounwind uwtable
define weak_odr double @_ZNK12SparseMatrixIdE12global_entryEj(%class.SparseMatrix*, i32) #5 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %6 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 2
  %7 = load double*, double** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds double, double* %7, i64 %9
  %11 = load double, double* %10, align 8
  ret double %11
}

; Function Attrs: noinline nounwind uwtable
define weak_odr dereferenceable(8) double* @_ZN12SparseMatrixIdE12global_entryEj(%class.SparseMatrix*, i32) #5 comdat align 2 {
  %3 = load i32, i32* @x.91
  %4 = load i32, i32* @y.92
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %14 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %15 = load double*, double** %14, align 8
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds double, double* %15, i64 %17
  %19 = load i32, i32* @x.91
  %20 = load i32, i32* @y.92
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.SparseMatrix*, align 8
  %28 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.SparseMatrix*, %class.SparseMatrix** %27, align 8
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %29, i32 0, i32 2
  %31 = load double*, double** %30, align 8
  %32 = load i32, i32* %28, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds double, double* %31, i64 %33
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE7l1_normEv(%class.SparseMatrix*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrix*, align 8
  %11 = alloca %class.Vector, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %10, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %10, align 8
  %18 = call i32 @_ZNK12SparseMatrixIdE1nEv(%class.SparseMatrix* %17)
  call void @_ZN6VectorIdEC2Ej(%class.Vector* %11, i32 %18)
  %19 = load i32, i32* @x.93
  %20 = load i32, i32* @y.94
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %27 = invoke i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %17)
          to label %28 unwind label %96

; <label>:28:                                     ; preds = %originalBBpart2
  store i32 %27, i32* %12, align 4
  store i32 0, i32* %15, align 4
  br label %29

; <label>:29:                                     ; preds = %117, %28
  %30 = load i32, i32* %15, align 4
  %31 = load i32, i32* %12, align 4
  %32 = icmp ult i32 %30, %31
  br i1 %32, label %33, label %120

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 1
  %35 = invoke %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %34)
          to label %36 unwind label %96

; <label>:36:                                     ; preds = %33
  %37 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %35, i32 0, i32 7
  %38 = load i32*, i32** %37, align 8
  %39 = load i32, i32* %15, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %16, align 4
  br label %43

; <label>:43:                                     ; preds = %93, %36
  %44 = load i32, i32* @x.93
  %45 = load i32, i32* @y.94
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = load i32, i32* %16, align 4
  %53 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 1
  %54 = load i32, i32* @x.93
  %55 = load i32, i32* @y.94
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %62 = invoke %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %53)
          to label %63 unwind label %96

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %62, i32 0, i32 7
  %65 = load i32*, i32** %64, align 8
  %66 = load i32, i32* %15, align 4
  %67 = add i32 %66, 1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %65, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = icmp ult i32 %52, %70
  br i1 %71, label %72, label %116

; <label>:72:                                     ; preds = %63
  %73 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 2
  %74 = load double*, double** %73, align 8
  %75 = load i32, i32* %16, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds double, double* %74, i64 %76
  %78 = load double, double* %77, align 8
  %79 = call double @fabs(double %78) #6
  %80 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 1
  %81 = invoke %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %80)
          to label %82 unwind label %96

; <label>:82:                                     ; preds = %72
  %83 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %81, i32 0, i32 8
  %84 = load i32*, i32** %83, align 8
  %85 = load i32, i32* %16, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %84, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = invoke dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %11, i32 %88)
          to label %90 unwind label %96

; <label>:90:                                     ; preds = %82
  %91 = load double, double* %89, align 8
  %92 = fadd double %91, %79
  store double %92, double* %89, align 8
  br label %93

; <label>:93:                                     ; preds = %90
  %94 = load i32, i32* %16, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %16, align 4
  br label %43

; <label>:96:                                     ; preds = %120, %82, %72, %originalBBpart24, %33, %originalBBpart2
  %97 = load i32, i32* @x.93
  %98 = load i32, i32* @y.94
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %96, %originalBB6alteredBB
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %13, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %14, align 4
  %108 = load i32, i32* @x.93
  %109 = load i32, i32* @y.94
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZN6VectorIdED2Ev(%class.Vector* %11)
          to label %123 unwind label %145

; <label>:116:                                    ; preds = %63
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = load i32, i32* %15, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %15, align 4
  br label %29

; <label>:120:                                    ; preds = %29
  %121 = invoke double @_ZNK6VectorIdE11linfty_normEv(%class.Vector* %11)
          to label %122 unwind label %96

; <label>:122:                                    ; preds = %120
  call void @_ZN6VectorIdED2Ev(%class.Vector* %11)
  ret double %121

; <label>:123:                                    ; preds = %originalBBpart28
  %124 = load i32, i32* @x.93
  %125 = load i32, i32* @y.94
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %123, %originalBB10alteredBB
  %132 = load i32, i32* @x.93
  %133 = load i32, i32* @y.94
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %140

; <label>:140:                                    ; preds = %originalBBpart212
  %141 = load i8*, i8** %13, align 8
  %142 = load i32, i32* %14, align 4
  %143 = insertvalue { i8*, i32 } undef, i8* %141, 0
  %144 = insertvalue { i8*, i32 } %143, i32 %142, 1
  resume { i8*, i32 } %144

; <label>:145:                                    ; preds = %originalBBpart28
  %146 = load i32, i32* @x.93
  %147 = load i32, i32* @y.94
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %145, %originalBB14alteredBB
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  call void @__clang_call_terminate(i8* %155) #11
  %156 = load i32, i32* @x.93
  %157 = load i32, i32* @y.94
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %164 = alloca %class.SparseMatrix*, align 8
  %165 = alloca %class.Vector, align 8
  %166 = alloca i32, align 4
  %167 = alloca i8*
  %168 = alloca i32
  %169 = alloca i32, align 4
  %170 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %164, align 8
  %171 = load %class.SparseMatrix*, %class.SparseMatrix** %164, align 8
  %172 = call i32 @_ZNK12SparseMatrixIdE1nEv(%class.SparseMatrix* %171)
  call void @_ZN6VectorIdEC2Ej(%class.Vector* %165, i32 %172)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %173 = load i32, i32* %16, align 4
  %174 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %96
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %13, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %14, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %123
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %145
  %178 = landingpad { i8*, i32 }
          catch i8* null
  %179 = extractvalue { i8*, i32 } %178, 0
  call void @__clang_call_terminate(i8* %179) #11
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6VectorIdEC2Ej(%class.Vector*, i32) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.95
  %4 = load i32, i32* @y.96
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Vector*, align 8
  %12 = alloca i32, align 4
  store %class.Vector* %0, %class.Vector** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.Vector*, %class.Vector** %11, align 8
  %14 = bitcast %class.Vector* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6VectorIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %class.Vector, %class.Vector* %13, i32 0, i32 1
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %class.Vector, %class.Vector* %13, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.Vector, %class.Vector* %13, i32 0, i32 3
  store double* null, double** %17, align 8
  %18 = load i32, i32* %12, align 4
  call void @_ZN6VectorIdE6reinitEjb(%class.Vector* %13, i32 %18, i1 zeroext false)
  %19 = load i32, i32* @x.95
  %20 = load i32, i32* @y.96
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.Vector*, align 8
  %28 = alloca i32, align 4
  store %class.Vector* %0, %class.Vector** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.Vector*, %class.Vector** %27, align 8
  %30 = bitcast %class.Vector* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6VectorIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %class.Vector, %class.Vector* %29, i32 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %class.Vector, %class.Vector* %29, i32 0, i32 2
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %class.Vector, %class.Vector* %29, i32 0, i32 3
  store double* null, double** %33, align 8
  %34 = load i32, i32* %28, align 4
  call void @_ZN6VectorIdE6reinitEjb(%class.Vector* %29, i32 %34, i1 zeroext false)
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector*, i32) #5 comdat align 2 {
  %3 = load i32, i32* @x.97
  %4 = load i32, i32* @y.98
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Vector*, align 8
  %12 = alloca i32, align 4
  store %class.Vector* %0, %class.Vector** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.Vector*, %class.Vector** %11, align 8
  %14 = getelementptr inbounds %class.Vector, %class.Vector* %13, i32 0, i32 3
  %15 = load double*, double** %14, align 8
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds double, double* %15, i64 %17
  %19 = load i32, i32* @x.97
  %20 = load i32, i32* @y.98
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.Vector*, align 8
  %28 = alloca i32, align 4
  store %class.Vector* %0, %class.Vector** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.Vector*, %class.Vector** %27, align 8
  %30 = getelementptr inbounds %class.Vector, %class.Vector* %29, i32 0, i32 3
  %31 = load double*, double** %30, align 8
  %32 = load i32, i32* %28, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds double, double* %31, i64 %33
  br label %originalBB
}

declare double @_ZNK6VectorIdE11linfty_normEv(%class.Vector*) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6VectorIdED2Ev(%class.Vector*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.99
  %3 = load i32, i32* @y.100
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = bitcast %class.Vector* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6VectorIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  %14 = load double*, double** %13, align 8
  %15 = icmp ne double* %14, null
  %16 = load i32, i32* @x.99
  %17 = load i32, i32* @y.100
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %32

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  %26 = load double*, double** %25, align 8
  %27 = icmp eq double* %26, null
  br i1 %27, label %30, label %28

; <label>:28:                                     ; preds = %24
  %29 = bitcast double* %26 to i8*
  call void @_ZdaPv(i8* %29) #12
  br label %30

; <label>:30:                                     ; preds = %28, %24
  %31 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  store double* null, double** %31, align 8
  br label %32

; <label>:32:                                     ; preds = %30, %originalBBpart2
  %33 = load i32, i32* @x.99
  %34 = load i32, i32* @y.100
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* @x.99
  %42 = load i32, i32* @y.100
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %49 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %49, align 8
  %50 = load %class.Vector*, %class.Vector** %49, align 8
  %51 = bitcast %class.Vector* %50 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6VectorIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %class.Vector, %class.Vector* %50, i32 0, i32 3
  %53 = load double*, double** %52, align 8
  %54 = icmp ne double* %53, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE11linfty_normEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  %3 = alloca double*, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %9 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %10 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 2
  %11 = load double*, double** %10, align 8
  %12 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %13 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %12)
  %14 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %13, i32 0, i32 7
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds double, double* %11, i64 %18
  store double* %19, double** %3, align 8
  store double 0.000000e+00, double* %5, align 8
  %20 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %9)
  store i32 %20, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %21

; <label>:21:                                     ; preds = %57, %1
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %6, align 4
  %24 = icmp ult i32 %22, %23
  br i1 %24, label %25, label %60

; <label>:25:                                     ; preds = %21
  store double 0.000000e+00, double* %4, align 8
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 2
  %27 = load double*, double** %26, align 8
  %28 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %9, i32 0, i32 1
  %29 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %28)
  %30 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %29, i32 0, i32 7
  %31 = load i32*, i32** %30, align 8
  %32 = load i32, i32* %7, align 4
  %33 = add i32 %32, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %31, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds double, double* %27, i64 %37
  store double* %38, double** %8, align 8
  br label %39

; <label>:39:                                     ; preds = %43, %25
  %40 = load double*, double** %3, align 8
  %41 = load double*, double** %8, align 8
  %42 = icmp ne double* %40, %41
  br i1 %42, label %43, label %50

; <label>:43:                                     ; preds = %39
  %44 = load double*, double** %3, align 8
  %45 = getelementptr inbounds double, double* %44, i32 1
  store double* %45, double** %3, align 8
  %46 = load double, double* %44, align 8
  %47 = call double @fabs(double %46) #6
  %48 = load double, double* %4, align 8
  %49 = fadd double %48, %47
  store double %49, double* %4, align 8
  br label %39

; <label>:50:                                     ; preds = %39
  %51 = load double, double* %4, align 8
  %52 = load double, double* %5, align 8
  %53 = fcmp ogt double %51, %52
  br i1 %53, label %54, label %56

; <label>:54:                                     ; preds = %50
  %55 = load double, double* %4, align 8
  store double %55, double* %5, align 8
  br label %56

; <label>:56:                                     ; preds = %54, %50
  br label %57

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* %7, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %7, align 4
  br label %21

; <label>:60:                                     ; preds = %21
  %61 = load double, double* %5, align 8
  ret double %61
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE14frobenius_normEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = load i32, i32* @x.103
  %3 = load i32, i32* @y.104
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrix*, align 8
  %11 = alloca double, align 8
  %12 = alloca i32, align 4
  %13 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %10, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %10, align 8
  store double 0.000000e+00, double* %11, align 8
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %14)
  store i32 %15, i32* %12, align 4
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds double, double* %17, i64 0
  store double* %18, double** %13, align 8
  %19 = load i32, i32* @x.103
  %20 = load i32, i32* @y.104
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %50, %originalBBpart2
  %28 = load double*, double** %13, align 8
  %29 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %30 = load double*, double** %29, align 8
  %31 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %32 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %31)
  %33 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %32, i32 0, i32 7
  %34 = load i32*, i32** %33, align 8
  %35 = load i32, i32* %12, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds double, double* %30, i64 %39
  %41 = icmp ne double* %28, %40
  br i1 %41, label %42, label %53

; <label>:42:                                     ; preds = %27
  %43 = load double*, double** %13, align 8
  %44 = load double, double* %43, align 8
  %45 = load double*, double** %13, align 8
  %46 = load double, double* %45, align 8
  %47 = fmul double %44, %46
  %48 = load double, double* %11, align 8
  %49 = fadd double %48, %47
  store double %49, double* %11, align 8
  br label %50

; <label>:50:                                     ; preds = %42
  %51 = load double*, double** %13, align 8
  %52 = getelementptr inbounds double, double* %51, i32 1
  store double* %52, double** %13, align 8
  br label %27

; <label>:53:                                     ; preds = %27
  %54 = load double, double* %11, align 8
  %55 = call double @sqrt(double %54) #2
  ret double %55

originalBBalteredBB:                              ; preds = %originalBB, %1
  %56 = alloca %class.SparseMatrix*, align 8
  %57 = alloca double, align 8
  %58 = alloca i32, align 4
  %59 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %56, align 8
  %60 = load %class.SparseMatrix*, %class.SparseMatrix** %56, align 8
  store double 0.000000e+00, double* %57, align 8
  %61 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %60)
  store i32 %61, i32* %58, align 4
  %62 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %60, i32 0, i32 2
  %63 = load double*, double** %62, align 8
  %64 = getelementptr inbounds double, double* %63, i64 0
  store double* %64, double** %59, align 8
  br label %originalBB
}

; Function Attrs: nounwind
declare double @sqrt(double) #9

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(72) %class.SparsityPattern* @_ZNK12SparseMatrixIdE20get_sparsity_patternEv(%class.SparseMatrix*) #0 comdat align 2 {
  %2 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %2, align 8
  %3 = load %class.SparseMatrix*, %class.SparseMatrix** %2, align 8
  %4 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %3, i32 0, i32 1
  %5 = call dereferenceable(72) %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEdeEv(%class.SmartPointer* %4)
  ret %class.SparsityPattern* %5
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5beginEv(%"class.internals::SparseMatrixIterators::Iterator"* noalias sret, %class.SparseMatrix*) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca i32, align 4
  store %class.SparseMatrix* %1, %class.SparseMatrix** %3, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %51, %2
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %5)
  %9 = icmp ult i32 %7, %8
  br i1 %9, label %10, label %54

; <label>:10:                                     ; preds = %6
  %11 = load i32, i32* @x.107
  %12 = load i32, i32* @y.108
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  %20 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %19)
  %21 = load i32, i32* %4, align 4
  %22 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %20, i32 %21)
  %23 = icmp ugt i32 %22, 0
  %24 = load i32, i32* @x.107
  %25 = load i32, i32* @y.108
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %50

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* @x.107
  %34 = load i32, i32* @y.108
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* %4, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"* %0, %class.SparseMatrix* %5, i32 %41, i32 0)
  %42 = load i32, i32* @x.107
  %43 = load i32, i32* @y.108
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %71

; <label>:50:                                     ; preds = %originalBBpart2
  br label %51

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* %4, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %4, align 4
  br label %6

; <label>:54:                                     ; preds = %6
  %55 = load i32, i32* @x.107
  %56 = load i32, i32* @y.108
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  call void @_ZNK12SparseMatrixIdE3endEv(%"class.internals::SparseMatrixIterators::Iterator"* sret %0, %class.SparseMatrix* %5)
  %63 = load i32, i32* @x.107
  %64 = load i32, i32* @y.108
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71

; <label>:71:                                     ; preds = %originalBBpart28, %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %72 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  %73 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %72)
  %74 = load i32, i32* %4, align 4
  %75 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %73, i32 %74)
  %76 = icmp ugt i32 %75, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %77 = load i32, i32* %4, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"* %0, %class.SparseMatrix* %5, i32 %77, i32 0)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  call void @_ZNK12SparseMatrixIdE3endEv(%"class.internals::SparseMatrixIterators::Iterator"* sret %0, %class.SparseMatrix* %5)
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern*, i32) #5 comdat align 2 {
  %3 = alloca %class.SparsityPattern*, align 8
  %4 = alloca i32, align 4
  store %class.SparsityPattern* %0, %class.SparsityPattern** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.SparsityPattern*, %class.SparsityPattern** %3, align 8
  %6 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %5, i32 0, i32 7
  %7 = load i32*, i32** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = add i32 %8, 1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %5, i32 0, i32 7
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %4, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %14, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %12, %18
  ret i32 %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"*, %class.SparseMatrix*, i32, i32) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.internals::SparseMatrixIterators::Iterator"*, align 8
  %6 = alloca %class.SparseMatrix*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %"class.internals::SparseMatrixIterators::Iterator"* %0, %"class.internals::SparseMatrixIterators::Iterator"** %5, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %"class.internals::SparseMatrixIterators::Iterator"*, %"class.internals::SparseMatrixIterators::Iterator"** %5, align 8
  %10 = getelementptr inbounds %"class.internals::SparseMatrixIterators::Iterator", %"class.internals::SparseMatrixIterators::Iterator"* %9, i32 0, i32 0
  %11 = load %class.SparseMatrix*, %class.SparseMatrix** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = load i32, i32* %8, align 4
  call void @_ZN9internals21SparseMatrixIterators8AccessorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Accessor"* %10, %class.SparseMatrix* %11, i32 %12, i32 %13)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE3endEv(%"class.internals::SparseMatrixIterators::Iterator"* noalias sret, %class.SparseMatrix*) #0 comdat align 2 {
  %3 = load i32, i32* @x.113
  %4 = load i32, i32* @y.114
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %11, align 8
  %12 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %13 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %12)
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"* %0, %class.SparseMatrix* %12, i32 %13, i32 0)
  %14 = load i32, i32* @x.113
  %15 = load i32, i32* @y.114
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %22, align 8
  %23 = load %class.SparseMatrix*, %class.SparseMatrix** %22, align 8
  %24 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %23)
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"* %0, %class.SparseMatrix* %23, i32 %24, i32 0)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE5beginEv(%"class.internals::SparseMatrixIterators::Iterator.0"* noalias sret, %class.SparseMatrix*) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca i32, align 4
  store %class.SparseMatrix* %1, %class.SparseMatrix** %3, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %51, %2
  %7 = load i32, i32* @x.115
  %8 = load i32, i32* @y.116
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = load i32, i32* %4, align 4
  %16 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %5)
  %17 = icmp ult i32 %15, %16
  %18 = load i32, i32* @x.115
  %19 = load i32, i32* @y.116
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %54

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  %28 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %27)
  %29 = load i32, i32* %4, align 4
  %30 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %28, i32 %29)
  %31 = icmp ugt i32 %30, 0
  br i1 %31, label %32, label %34

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* %4, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator.0"* %0, %class.SparseMatrix* %5, i32 %33, i32 0)
  br label %55

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.115
  %36 = load i32, i32* @y.116
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i32, i32* @x.115
  %44 = load i32, i32* @y.116
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %51

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = load i32, i32* %4, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %4, align 4
  br label %6

; <label>:54:                                     ; preds = %originalBBpart2
  call void @_ZN12SparseMatrixIdE3endEv(%"class.internals::SparseMatrixIterators::Iterator.0"* sret %0, %class.SparseMatrix* %5)
  br label %55

; <label>:55:                                     ; preds = %54, %32
  %56 = load i32, i32* @x.115
  %57 = load i32, i32* @y.116
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* @x.115
  %65 = load i32, i32* @y.116
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %6
  %72 = load i32, i32* %4, align 4
  %73 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %5)
  %74 = icmp ult i32 %72, %73
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9internals21SparseMatrixIterators8IteratorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator.0"*, %class.SparseMatrix*, i32, i32) unnamed_addr #0 comdat align 2 {
  %5 = load i32, i32* @x.117
  %6 = load i32, i32* @y.118
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.internals::SparseMatrixIterators::Iterator.0"*, align 8
  %14 = alloca %class.SparseMatrix*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %"class.internals::SparseMatrixIterators::Iterator.0"* %0, %"class.internals::SparseMatrixIterators::Iterator.0"** %13, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %14, align 8
  store i32 %2, i32* %15, align 4
  store i32 %3, i32* %16, align 4
  %17 = load %"class.internals::SparseMatrixIterators::Iterator.0"*, %"class.internals::SparseMatrixIterators::Iterator.0"** %13, align 8
  %18 = getelementptr inbounds %"class.internals::SparseMatrixIterators::Iterator.0", %"class.internals::SparseMatrixIterators::Iterator.0"* %17, i32 0, i32 0
  %19 = load %class.SparseMatrix*, %class.SparseMatrix** %14, align 8
  %20 = load i32, i32* %15, align 4
  %21 = load i32, i32* %16, align 4
  call void @_ZN9internals21SparseMatrixIterators8AccessorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Accessor.1"* %18, %class.SparseMatrix* %19, i32 %20, i32 %21)
  %22 = load i32, i32* @x.117
  %23 = load i32, i32* @y.118
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca %"class.internals::SparseMatrixIterators::Iterator.0"*, align 8
  %31 = alloca %class.SparseMatrix*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store %"class.internals::SparseMatrixIterators::Iterator.0"* %0, %"class.internals::SparseMatrixIterators::Iterator.0"** %30, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %31, align 8
  store i32 %2, i32* %32, align 4
  store i32 %3, i32* %33, align 4
  %34 = load %"class.internals::SparseMatrixIterators::Iterator.0"*, %"class.internals::SparseMatrixIterators::Iterator.0"** %30, align 8
  %35 = getelementptr inbounds %"class.internals::SparseMatrixIterators::Iterator.0", %"class.internals::SparseMatrixIterators::Iterator.0"* %34, i32 0, i32 0
  %36 = load %class.SparseMatrix*, %class.SparseMatrix** %31, align 8
  %37 = load i32, i32* %32, align 4
  %38 = load i32, i32* %33, align 4
  call void @_ZN9internals21SparseMatrixIterators8AccessorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Accessor.1"* %35, %class.SparseMatrix* %36, i32 %37, i32 %38)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE3endEv(%"class.internals::SparseMatrixIterators::Iterator.0"* noalias sret, %class.SparseMatrix*) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %3, align 8
  %4 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %5 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %4)
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator.0"* %0, %class.SparseMatrix* %4, i32 %5, i32 0)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5beginEj(%"class.internals::SparseMatrixIterators::Iterator"* noalias sret, %class.SparseMatrix*, i32) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca i32, align 4
  store %class.SparseMatrix* %1, %class.SparseMatrix** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %7 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %6, i32 0, i32 1
  %8 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %7)
  %9 = load i32, i32* %5, align 4
  %10 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %8, i32 %9)
  %11 = icmp ugt i32 %10, 0
  br i1 %11, label %12, label %30

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.121
  %14 = load i32, i32* @y.122
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i32, i32* %5, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"* %0, %class.SparseMatrix* %6, i32 %21, i32 0)
  %22 = load i32, i32* @x.121
  %23 = load i32, i32* @y.122
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:30:                                     ; preds = %3
  %31 = load i32, i32* @x.121
  %32 = load i32, i32* @y.122
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i32, i32* %5, align 4
  call void @_ZNK12SparseMatrixIdE3endEj(%"class.internals::SparseMatrixIterators::Iterator"* sret %0, %class.SparseMatrix* %6, i32 %39)
  %40 = load i32, i32* @x.121
  %41 = load i32, i32* @y.122
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48

; <label>:48:                                     ; preds = %originalBBpart24, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %49 = load i32, i32* %5, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"* %0, %class.SparseMatrix* %6, i32 %49, i32 0)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %50 = load i32, i32* %5, align 4
  call void @_ZNK12SparseMatrixIdE3endEj(%"class.internals::SparseMatrixIterators::Iterator"* sret %0, %class.SparseMatrix* %6, i32 %50)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE3endEj(%"class.internals::SparseMatrixIterators::Iterator"* noalias sret, %class.SparseMatrix*, i32) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.SparseMatrix* %1, %class.SparseMatrix** %4, align 8
  store i32 %2, i32* %5, align 4
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %6, align 4
  br label %10

; <label>:10:                                     ; preds = %55, %3
  %11 = load i32, i32* @x.123
  %12 = load i32, i32* @y.124
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load i32, i32* %6, align 4
  %20 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %7)
  %21 = icmp ult i32 %19, %20
  %22 = load i32, i32* @x.123
  %23 = load i32, i32* @y.124
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %58

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.123
  %32 = load i32, i32* @y.124
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %40 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %39)
  %41 = load i32, i32* %6, align 4
  %42 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %40, i32 %41)
  %43 = icmp ugt i32 %42, 0
  %44 = load i32, i32* @x.123
  %45 = load i32, i32* @y.124
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %43, label %52, label %54

; <label>:52:                                     ; preds = %originalBBpart24
  %53 = load i32, i32* %6, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator"* %0, %class.SparseMatrix* %7, i32 %53, i32 0)
  br label %59

; <label>:54:                                     ; preds = %originalBBpart24
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* %6, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %6, align 4
  br label %10

; <label>:58:                                     ; preds = %originalBBpart2
  call void @_ZNK12SparseMatrixIdE3endEv(%"class.internals::SparseMatrixIterators::Iterator"* sret %0, %class.SparseMatrix* %7)
  br label %59

; <label>:59:                                     ; preds = %58, %52
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %60 = load i32, i32* %6, align 4
  %61 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %7)
  %62 = icmp ult i32 %60, %61
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %63 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %64 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %63)
  %65 = load i32, i32* %6, align 4
  %66 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %64, i32 %65)
  %67 = icmp ugt i32 %66, 0
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE5beginEj(%"class.internals::SparseMatrixIterators::Iterator.0"* noalias sret, %class.SparseMatrix*, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.125
  %5 = load i32, i32* @y.126
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca i32, align 4
  store %class.SparseMatrix* %1, %class.SparseMatrix** %12, align 8
  store i32 %2, i32* %13, align 4
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  %15 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %16 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %15)
  %17 = load i32, i32* %13, align 4
  %18 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %16, i32 %17)
  %19 = icmp ugt i32 %18, 0
  %20 = load i32, i32* @x.125
  %21 = load i32, i32* @y.126
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %30

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* %13, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator.0"* %0, %class.SparseMatrix* %14, i32 %29, i32 0)
  br label %48

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.125
  %32 = load i32, i32* @y.126
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i32, i32* %13, align 4
  call void @_ZN12SparseMatrixIdE3endEj(%"class.internals::SparseMatrixIterators::Iterator.0"* sret %0, %class.SparseMatrix* %14, i32 %39)
  %40 = load i32, i32* @x.125
  %41 = load i32, i32* @y.126
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48

; <label>:48:                                     ; preds = %originalBBpart24, %28
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %49 = alloca %class.SparseMatrix*, align 8
  %50 = alloca i32, align 4
  store %class.SparseMatrix* %1, %class.SparseMatrix** %49, align 8
  store i32 %2, i32* %50, align 4
  %51 = load %class.SparseMatrix*, %class.SparseMatrix** %49, align 8
  %52 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %51, i32 0, i32 1
  %53 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %52)
  %54 = load i32, i32* %50, align 4
  %55 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %53, i32 %54)
  %56 = icmp ugt i32 %55, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %57 = load i32, i32* %13, align 4
  call void @_ZN12SparseMatrixIdE3endEj(%"class.internals::SparseMatrixIterators::Iterator.0"* sret %0, %class.SparseMatrix* %14, i32 %57)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE3endEj(%"class.internals::SparseMatrixIterators::Iterator.0"* noalias sret, %class.SparseMatrix*, i32) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.SparseMatrix* %1, %class.SparseMatrix** %4, align 8
  store i32 %2, i32* %5, align 4
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %6, align 4
  br label %10

; <label>:10:                                     ; preds = %39, %3
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %7)
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %14, label %42

; <label>:14:                                     ; preds = %10
  %15 = load i32, i32* @x.127
  %16 = load i32, i32* @y.128
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %24 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %23)
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %24, i32 %25)
  %27 = icmp ugt i32 %26, 0
  %28 = load i32, i32* @x.127
  %29 = load i32, i32* @y.128
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %38

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* %6, align 4
  call void @_ZN9internals21SparseMatrixIterators8IteratorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Iterator.0"* %0, %class.SparseMatrix* %7, i32 %37, i32 0)
  br label %43

; <label>:38:                                     ; preds = %originalBBpart2
  br label %39

; <label>:39:                                     ; preds = %38
  %40 = load i32, i32* %6, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %6, align 4
  br label %10

; <label>:42:                                     ; preds = %10
  call void @_ZN12SparseMatrixIdE3endEv(%"class.internals::SparseMatrixIterators::Iterator.0"* sret %0, %class.SparseMatrix* %7)
  br label %43

; <label>:43:                                     ; preds = %42, %36
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %14
  %44 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %7, i32 0, i32 1
  %45 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %44)
  %46 = load i32, i32* %6, align 4
  %47 = call i32 @_ZNK15SparsityPattern10row_lengthEj(%class.SparsityPattern* %45, i32 %46)
  %48 = icmp ugt i32 %47, 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5printERSo(%class.SparseMatrix*, %"class.std::basic_ostream"* dereferenceable(272)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.129
  %4 = load i32, i32* @y.130
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca %"class.std::basic_ostream"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.StandardExceptions::ExcIO", align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %12, align 8
  %18 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  store i32 0, i32* %13, align 4
  %19 = load i32, i32* @x.129
  %20 = load i32, i32* @y.130
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart221, %originalBBpart2
  %28 = load i32, i32* @x.129
  %29 = load i32, i32* @y.130
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* %13, align 4
  %37 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %38 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %37)
  %39 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %38, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %36, %40
  %42 = load i32, i32* @x.129
  %43 = load i32, i32* @y.130
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %150

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i32, i32* @x.129
  %52 = load i32, i32* @y.130
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %60 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %59)
  %61 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %60, i32 0, i32 7
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %13, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %14, align 4
  %67 = load i32, i32* @x.129
  %68 = load i32, i32* @y.130
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

; <label>:75:                                     ; preds = %111, %originalBBpart28
  %76 = load i32, i32* %14, align 4
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %78 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %77)
  %79 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %78, i32 0, i32 7
  %80 = load i32*, i32** %79, align 8
  %81 = load i32, i32* %13, align 4
  %82 = add i32 %81, 1
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %80, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = icmp ult i32 %76, %85
  br i1 %86, label %87, label %114

; <label>:87:                                     ; preds = %75
  %88 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %89 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  %90 = load i32, i32* %13, align 4
  %91 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %89, i32 %90)
  %92 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %91, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  %93 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %94 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %93)
  %95 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %94, i32 0, i32 8
  %96 = load i32*, i32** %95, align 8
  %97 = load i32, i32* %14, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %92, i32 %100)
  %102 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  %103 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 2
  %104 = load double*, double** %103, align 8
  %105 = load i32, i32* %14, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds double, double* %104, i64 %106
  %108 = load double, double* %107, align 8
  %109 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"* %102, double %108)
  %110 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %109, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %111

; <label>:111:                                    ; preds = %87
  %112 = load i32, i32* %14, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %14, align 4
  br label %75

; <label>:114:                                    ; preds = %75
  %115 = load i32, i32* @x.129
  %116 = load i32, i32* @y.130
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %114, %originalBB10alteredBB
  %123 = load i32, i32* @x.129
  %124 = load i32, i32* @y.130
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %131

; <label>:131:                                    ; preds = %originalBBpart212
  %132 = load i32, i32* @x.129
  %133 = load i32, i32* @y.130
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %131, %originalBB14alteredBB
  %140 = load i32, i32* %13, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %13, align 4
  %142 = load i32, i32* @x.129
  %143 = load i32, i32* @y.130
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart221, label %originalBB14alteredBB

originalBBpart221:                                ; preds = %originalBB14
  br label %27

; <label>:150:                                    ; preds = %originalBBpart24
  %151 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %152 = bitcast %"class.std::basic_ostream"* %151 to i8**
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr i8, i8* %153, i64 -24
  %155 = bitcast i8* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::basic_ostream"* %151 to i8*
  %158 = getelementptr inbounds i8, i8* %157, i64 %156
  %159 = bitcast i8* %158 to %"class.std::basic_ios"*
  %160 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"* %159)
  br i1 %160, label %161, label %168

; <label>:161:                                    ; preds = %150
  %162 = bitcast %"class.StandardExceptions::ExcIO"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* %162, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %15)
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1283, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %15)
          to label %163 unwind label %164

; <label>:163:                                    ; preds = %161
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %15) #2
  br label %168

; <label>:164:                                    ; preds = %161
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %16, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %17, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %15) #2
  br label %169

; <label>:168:                                    ; preds = %163, %150
  ret void

; <label>:169:                                    ; preds = %164
  %170 = load i32, i32* @x.129
  %171 = load i32, i32* @y.130
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %169, %originalBB23alteredBB
  %178 = load i8*, i8** %16, align 8
  %179 = load i32, i32* %17, align 4
  %180 = insertvalue { i8*, i32 } undef, i8* %178, 0
  %181 = insertvalue { i8*, i32 } %180, i32 %179, 1
  %182 = load i32, i32* @x.129
  %183 = load i32, i32* @y.130
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  resume { i8*, i32 } %181

originalBBalteredBB:                              ; preds = %originalBB, %2
  %190 = alloca %class.SparseMatrix*, align 8
  %191 = alloca %"class.std::basic_ostream"*, align 8
  %192 = alloca i32, align 4
  %193 = alloca i32, align 4
  %194 = alloca %"class.StandardExceptions::ExcIO", align 8
  %195 = alloca i8*
  %196 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %190, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %191, align 8
  %197 = load %class.SparseMatrix*, %class.SparseMatrix** %190, align 8
  store i32 0, i32* %192, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %198 = load i32, i32* %13, align 4
  %199 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %200 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %199)
  %201 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %200, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = icmp ult i32 %198, %202
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %204 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %205 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %204)
  %206 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %205, i32 0, i32 7
  %207 = load i32*, i32** %206, align 8
  %208 = load i32, i32* %13, align 4
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds i32, i32* %207, i64 %209
  %211 = load i32, i32* %210, align 4
  store i32 %211, i32* %14, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %114
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %131
  %212 = load i32, i32* %13, align 4
  %_ = shl i32 %212, 1
  %_15 = sub i32 0, %212
  %gen = add i32 %_15, 1
  %_16 = sub i32 0, %212
  %gen17 = add i32 %_16, 1
  %_18 = shl i32 %212, 1
  %_19 = shl i32 %212, 1
  %213 = add i32 %212, 1
  store i32 %213, i32* %13, align 4
  br label %originalBB14

originalBB23alteredBB:                            ; preds = %originalBB23, %169
  %214 = load i8*, i8** %16, align 8
  %215 = load i32, i32* %17, align 4
  %216 = insertvalue { i8*, i32 } undef, i8* %214, 0
  %217 = insertvalue { i8*, i32 } %216, i32 %215, 1
  br label %originalBB23
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"*, double) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"*) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8*, i32, i8*, i8*, i8*, %"class.StandardExceptions::ExcIO"*) #0 comdat {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  %12 = bitcast %"class.StandardExceptions::ExcIO"* %5 to %class.ExceptionBase*
  %13 = load i8*, i8** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i8*, i8** %9, align 8
  %16 = load i8*, i8** %10, align 8
  %17 = load i8*, i8** %11, align 8
  call void @_ZN13ExceptionBase9SetFieldsEPKciS1_S1_S1_(%class.ExceptionBase* %12, i8* %13, i32 %14, i8* %15, i8* %16, i8* %17)
  %18 = call i8* @__cxa_allocate_exception(i64 48) #2
  %19 = bitcast i8* %18 to %"class.StandardExceptions::ExcIO"*
  call void @_ZN18StandardExceptions5ExcIOC2ERKS0_(%"class.StandardExceptions::ExcIO"* %19, %"class.StandardExceptions::ExcIO"* dereferenceable(48) %5) #2
  call void @__cxa_throw(i8* %18, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN18StandardExceptions5ExcIOE to i8*), i8* bitcast (void (%"class.StandardExceptions::ExcIO"*)* @_ZN18StandardExceptions5ExcIOD2Ev to i8*)) #14
  unreachable
                                                  ; No predecessors!
  %21 = load i32, i32* @x.131
  %22 = load i32, i32* @y.132
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i32, i32* @x.131
  %30 = load i32, i32* @y.132
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %20
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.133
  %3 = load i32, i32* @y.134
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.StandardExceptions::ExcIO"*, align 8
  store %"class.StandardExceptions::ExcIO"* %0, %"class.StandardExceptions::ExcIO"** %10, align 8
  %11 = load %"class.StandardExceptions::ExcIO"*, %"class.StandardExceptions::ExcIO"** %10, align 8
  %12 = bitcast %"class.StandardExceptions::ExcIO"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %12)
  %13 = bitcast %"class.StandardExceptions::ExcIO"* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18StandardExceptions5ExcIOE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = load i32, i32* @x.133
  %15 = load i32, i32* @y.134
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.StandardExceptions::ExcIO"*, align 8
  store %"class.StandardExceptions::ExcIO"* %0, %"class.StandardExceptions::ExcIO"** %22, align 8
  %23 = load %"class.StandardExceptions::ExcIO"*, %"class.StandardExceptions::ExcIO"** %22, align 8
  %24 = bitcast %"class.StandardExceptions::ExcIO"* %23 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %24)
  %25 = bitcast %"class.StandardExceptions::ExcIO"* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18StandardExceptions5ExcIOE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %25, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.StandardExceptions::ExcIO"*, align 8
  store %"class.StandardExceptions::ExcIO"* %0, %"class.StandardExceptions::ExcIO"** %2, align 8
  %3 = load %"class.StandardExceptions::ExcIO"*, %"class.StandardExceptions::ExcIO"** %2, align 8
  %4 = bitcast %"class.StandardExceptions::ExcIO"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE15print_formattedERSojbjPKcd(%class.SparseMatrix*, %"class.std::basic_ostream"* dereferenceable(272), i32, i1 zeroext, i32, i8*, double) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = alloca %class.SparseMatrix*, align 8
  %9 = alloca %"class.std::basic_ostream"*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca double, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"struct.std::_Setw", align 4
  %21 = alloca %"struct.std::_Setw", align 4
  %22 = alloca %"class.StandardExceptions::ExcIO", align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %class.SparseMatrix* %0, %class.SparseMatrix** %8, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %9, align 8
  store i32 %2, i32* %10, align 4
  %25 = zext i1 %3 to i8
  store i8 %25, i8* %11, align 1
  store i32 %4, i32* %12, align 4
  store i8* %5, i8** %13, align 8
  store double %6, double* %14, align 8
  %26 = load %class.SparseMatrix*, %class.SparseMatrix** %8, align 8
  %27 = load i32, i32* %12, align 4
  store i32 %27, i32* %15, align 4
  %28 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %29 = bitcast %"class.std::basic_ostream"* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr i8, i8* %30, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::basic_ostream"* %28 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = bitcast i8* %35 to %"class.std::ios_base"*
  %37 = call i32 @_ZNKSt8ios_base5flagsEv(%"class.std::ios_base"* %36)
  store i32 %37, i32* %16, align 4
  %38 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %39 = bitcast %"class.std::basic_ostream"* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr i8, i8* %40, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::basic_ostream"* %38 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %43
  %46 = bitcast i8* %45 to %"class.std::ios_base"*
  %47 = load i32, i32* %10, align 4
  %48 = zext i32 %47 to i64
  %49 = call i64 @_ZNSt8ios_base9precisionEl(%"class.std::ios_base"* %46, i64 %48)
  %50 = trunc i64 %49 to i32
  store i32 %50, i32* %17, align 4
  %51 = load i8, i8* %11, align 1
  %52 = trunc i8 %51 to i1
  br i1 %52, label %53, label %70

; <label>:53:                                     ; preds = %7
  %54 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %55 = bitcast %"class.std::basic_ostream"* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr i8, i8* %56, i64 -24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::basic_ostream"* %54 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  %62 = bitcast i8* %61 to %"class.std::ios_base"*
  %63 = call i32 @_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_(%"class.std::ios_base"* %62, i32 256, i32 260)
  %64 = load i32, i32* %15, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %69, label %66

; <label>:66:                                     ; preds = %53
  %67 = load i32, i32* %10, align 4
  %68 = add i32 %67, 7
  store i32 %68, i32* %15, align 4
  br label %69

; <label>:69:                                     ; preds = %66, %53
  br label %87

; <label>:70:                                     ; preds = %7
  %71 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %72 = bitcast %"class.std::basic_ostream"* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr i8, i8* %73, i64 -24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::basic_ostream"* %71 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %76
  %79 = bitcast i8* %78 to %"class.std::ios_base"*
  %80 = call i32 @_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_(%"class.std::ios_base"* %79, i32 4, i32 260)
  %81 = load i32, i32* %15, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %86, label %83

; <label>:83:                                     ; preds = %70
  %84 = load i32, i32* %10, align 4
  %85 = add i32 %84, 2
  store i32 %85, i32* %15, align 4
  br label %86

; <label>:86:                                     ; preds = %83, %70
  br label %87

; <label>:87:                                     ; preds = %86, %69
  store i32 0, i32* %18, align 4
  br label %88

; <label>:88:                                     ; preds = %224, %87
  %89 = load i32, i32* %18, align 4
  %90 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %26)
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %92, label %227

; <label>:92:                                     ; preds = %88
  %93 = load i32, i32* @x.137
  %94 = load i32, i32* @y.138
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %92, %originalBBalteredBB
  store i32 0, i32* %19, align 4
  %101 = load i32, i32* @x.137
  %102 = load i32, i32* @y.138
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %109

; <label>:109:                                    ; preds = %originalBBpart219, %originalBBpart2
  %110 = load i32, i32* @x.137
  %111 = load i32, i32* @y.138
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %109, %originalBB1alteredBB
  %118 = load i32, i32* %19, align 4
  %119 = call i32 @_ZNK12SparseMatrixIdE1nEv(%class.SparseMatrix* %26)
  %120 = icmp ult i32 %118, %119
  %121 = load i32, i32* @x.137
  %122 = load i32, i32* @y.138
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %120, label %129, label %221

; <label>:129:                                    ; preds = %originalBBpart24
  %130 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %26, i32 0, i32 1
  %131 = call dereferenceable(72) %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEdeEv(%class.SmartPointer* %130)
  %132 = load i32, i32* %18, align 4
  %133 = load i32, i32* %19, align 4
  %134 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %131, i32 %132, i32 %133)
  %135 = icmp ne i32 %134, -1
  br i1 %135, label %136, label %174

; <label>:136:                                    ; preds = %129
  %137 = load i32, i32* @x.137
  %138 = load i32, i32* @y.138
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %136, %originalBB6alteredBB
  %145 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %146 = load i32, i32* %15, align 4
  %147 = call i32 @_ZSt4setwi(i32 %146)
  %148 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %20, i32 0, i32 0
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %20, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw(%"class.std::basic_ostream"* dereferenceable(272) %145, i32 %150)
  %152 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %26, i32 0, i32 2
  %153 = load double*, double** %152, align 8
  %154 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %26, i32 0, i32 1
  %155 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %154)
  %156 = load i32, i32* %18, align 4
  %157 = load i32, i32* %19, align 4
  %158 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %155, i32 %156, i32 %157)
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds double, double* %153, i64 %159
  %161 = load double, double* %160, align 8
  %162 = load double, double* %14, align 8
  %163 = fmul double %161, %162
  %164 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"* %151, double %163)
  %165 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %164, i8 signext 32)
  %166 = load i32, i32* @x.137
  %167 = load i32, i32* @y.138
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %201

; <label>:174:                                    ; preds = %129
  %175 = load i32, i32* @x.137
  %176 = load i32, i32* @y.138
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %174, %originalBB10alteredBB
  %183 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %184 = load i32, i32* %15, align 4
  %185 = call i32 @_ZSt4setwi(i32 %184)
  %186 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %21, i32 0, i32 0
  store i32 %185, i32* %186, align 4
  %187 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %21, i32 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw(%"class.std::basic_ostream"* dereferenceable(272) %183, i32 %188)
  %190 = load i8*, i8** %13, align 8
  %191 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %189, i8* %190)
  %192 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %191, i8 signext 32)
  %193 = load i32, i32* @x.137
  %194 = load i32, i32* @y.138
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %201

; <label>:201:                                    ; preds = %originalBBpart212, %originalBBpart28
  br label %202

; <label>:202:                                    ; preds = %201
  %203 = load i32, i32* @x.137
  %204 = load i32, i32* @y.138
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %202, %originalBB14alteredBB
  %211 = load i32, i32* %19, align 4
  %212 = add i32 %211, 1
  store i32 %212, i32* %19, align 4
  %213 = load i32, i32* @x.137
  %214 = load i32, i32* @y.138
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart219, label %originalBB14alteredBB

originalBBpart219:                                ; preds = %originalBB14
  br label %109

; <label>:221:                                    ; preds = %originalBBpart24
  %222 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %223 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %222, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %224

; <label>:224:                                    ; preds = %221
  %225 = load i32, i32* %18, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %18, align 4
  br label %88

; <label>:227:                                    ; preds = %88
  %228 = load i32, i32* @x.137
  %229 = load i32, i32* @y.138
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %227, %originalBB21alteredBB
  %236 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %237 = bitcast %"class.std::basic_ostream"* %236 to i8**
  %238 = load i8*, i8** %237, align 8
  %239 = getelementptr i8, i8* %238, i64 -24
  %240 = bitcast i8* %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.std::basic_ostream"* %236 to i8*
  %243 = getelementptr inbounds i8, i8* %242, i64 %241
  %244 = bitcast i8* %243 to %"class.std::basic_ios"*
  %245 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"* %244)
  %246 = load i32, i32* @x.137
  %247 = load i32, i32* @y.138
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %245, label %254, label %277

; <label>:254:                                    ; preds = %originalBBpart223
  %255 = load i32, i32* @x.137
  %256 = load i32, i32* @y.138
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %254, %originalBB25alteredBB
  %263 = bitcast %"class.StandardExceptions::ExcIO"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* %263, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %22)
  %264 = load i32, i32* @x.137
  %265 = load i32, i32* @y.138
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1324, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %22)
          to label %272 unwind label %273

; <label>:272:                                    ; preds = %originalBBpart227
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %22) #2
  br label %277

; <label>:273:                                    ; preds = %originalBBpart227
  %274 = landingpad { i8*, i32 }
          cleanup
  %275 = extractvalue { i8*, i32 } %274, 0
  store i8* %275, i8** %23, align 8
  %276 = extractvalue { i8*, i32 } %274, 1
  store i32 %276, i32* %24, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %22) #2
  br label %301

; <label>:277:                                    ; preds = %272, %originalBBpart223
  %278 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %279 = bitcast %"class.std::basic_ostream"* %278 to i8**
  %280 = load i8*, i8** %279, align 8
  %281 = getelementptr i8, i8* %280, i64 -24
  %282 = bitcast i8* %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.std::basic_ostream"* %278 to i8*
  %285 = getelementptr inbounds i8, i8* %284, i64 %283
  %286 = bitcast i8* %285 to %"class.std::ios_base"*
  %287 = load i32, i32* %17, align 4
  %288 = zext i32 %287 to i64
  %289 = call i64 @_ZNSt8ios_base9precisionEl(%"class.std::ios_base"* %286, i64 %288)
  %290 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %291 = bitcast %"class.std::basic_ostream"* %290 to i8**
  %292 = load i8*, i8** %291, align 8
  %293 = getelementptr i8, i8* %292, i64 -24
  %294 = bitcast i8* %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.std::basic_ostream"* %290 to i8*
  %297 = getelementptr inbounds i8, i8* %296, i64 %295
  %298 = bitcast i8* %297 to %"class.std::ios_base"*
  %299 = load i32, i32* %16, align 4
  %300 = call i32 @_ZNSt8ios_base5flagsESt13_Ios_Fmtflags(%"class.std::ios_base"* %298, i32 %299)
  ret void

; <label>:301:                                    ; preds = %273
  %302 = load i32, i32* @x.137
  %303 = load i32, i32* @y.138
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %301, %originalBB29alteredBB
  %310 = load i8*, i8** %23, align 8
  %311 = load i32, i32* %24, align 4
  %312 = insertvalue { i8*, i32 } undef, i8* %310, 0
  %313 = insertvalue { i8*, i32 } %312, i32 %311, 1
  %314 = load i32, i32* @x.137
  %315 = load i32, i32* @y.138
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  resume { i8*, i32 } %313

originalBBalteredBB:                              ; preds = %originalBB, %92
  store i32 0, i32* %19, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %109
  %322 = load i32, i32* %19, align 4
  %323 = call i32 @_ZNK12SparseMatrixIdE1nEv(%class.SparseMatrix* %26)
  %324 = icmp ult i32 %322, %323
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %136
  %325 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %326 = load i32, i32* %15, align 4
  %327 = call i32 @_ZSt4setwi(i32 %326)
  %328 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %20, i32 0, i32 0
  store i32 %327, i32* %328, align 4
  %329 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %20, i32 0, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw(%"class.std::basic_ostream"* dereferenceable(272) %325, i32 %330)
  %332 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %26, i32 0, i32 2
  %333 = load double*, double** %332, align 8
  %334 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %26, i32 0, i32 1
  %335 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %334)
  %336 = load i32, i32* %18, align 4
  %337 = load i32, i32* %19, align 4
  %338 = call i32 @_ZNK15SparsityPatternclEjj(%class.SparsityPattern* %335, i32 %336, i32 %337)
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds double, double* %333, i64 %339
  %341 = load double, double* %340, align 8
  %342 = load double, double* %14, align 8
  %_ = fsub double %341, %342
  %gen = fmul double %_, %342
  %343 = fmul double %341, %342
  %344 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"* %331, double %343)
  %345 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %344, i8 signext 32)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %174
  %346 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %347 = load i32, i32* %15, align 4
  %348 = call i32 @_ZSt4setwi(i32 %347)
  %349 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %21, i32 0, i32 0
  store i32 %348, i32* %349, align 4
  %350 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %21, i32 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw(%"class.std::basic_ostream"* dereferenceable(272) %346, i32 %351)
  %353 = load i8*, i8** %13, align 8
  %354 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %352, i8* %353)
  %355 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %354, i8 signext 32)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %202
  %356 = load i32, i32* %19, align 4
  %_15 = shl i32 %356, 1
  %_16 = sub i32 %356, 1
  %gen17 = mul i32 %_16, 1
  %357 = add i32 %356, 1
  store i32 %357, i32* %19, align 4
  br label %originalBB14

originalBB21alteredBB:                            ; preds = %originalBB21, %227
  %358 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %9, align 8
  %359 = bitcast %"class.std::basic_ostream"* %358 to i8**
  %360 = load i8*, i8** %359, align 8
  %361 = getelementptr i8, i8* %360, i64 -24
  %362 = bitcast i8* %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.std::basic_ostream"* %358 to i8*
  %365 = getelementptr inbounds i8, i8* %364, i64 %363
  %366 = bitcast i8* %365 to %"class.std::basic_ios"*
  %367 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"* %366)
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %254
  %368 = bitcast %"class.StandardExceptions::ExcIO"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* %368, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %22)
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %301
  %369 = load i8*, i8** %23, align 8
  %370 = load i32, i32* %24, align 4
  %371 = insertvalue { i8*, i32 } undef, i8* %369, 0
  %372 = insertvalue { i8*, i32 } %371, i32 %370, 1
  br label %originalBB29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNKSt8ios_base5flagsEv(%"class.std::ios_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::ios_base"*, align 8
  store %"class.std::ios_base"* %0, %"class.std::ios_base"** %2, align 8
  %3 = load %"class.std::ios_base"*, %"class.std::ios_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %3, i32 0, i32 3
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt8ios_base9precisionEl(%"class.std::ios_base"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::ios_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %"class.std::ios_base"* %0, %"class.std::ios_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %"class.std::ios_base"*, %"class.std::ios_base"** %3, align 8
  %7 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %6, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64, i64* %4, align 8
  %10 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %6, i32 0, i32 1
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* %5, align 8
  ret i64 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_(%"class.std::ios_base"*, i32, i32) #0 comdat align 2 {
  %4 = alloca %"class.std::ios_base"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %"class.std::ios_base"* %0, %"class.std::ios_base"** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %"class.std::ios_base"*, %"class.std::ios_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %7, align 4
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @_ZStcoSt13_Ios_Fmtflags(i32 %11)
  %13 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %8, i32 0, i32 3
  %14 = call dereferenceable(4) i32* @_ZStaNRSt13_Ios_FmtflagsS_(i32* dereferenceable(4) %13, i32 %12)
  %15 = load i32, i32* %5, align 4
  %16 = load i32, i32* %6, align 4
  %17 = call i32 @_ZStanSt13_Ios_FmtflagsS_(i32 %15, i32 %16)
  %18 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %8, i32 0, i32 3
  %19 = call dereferenceable(4) i32* @_ZStoRRSt13_Ios_FmtflagsS_(i32* dereferenceable(4) %18, i32 %17)
  %20 = load i32, i32* %7, align 4
  ret i32 %20
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw(%"class.std::basic_ostream"* dereferenceable(272), i32) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZSt4setwi(i32) #5 comdat {
  %2 = alloca %"struct.std::_Setw", align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %2, i32 0, i32 0
  %5 = load i32, i32* %3, align 4
  store i32 %5, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.std::_Setw", %"struct.std::_Setw"* %2, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNSt8ios_base5flagsESt13_Ios_Fmtflags(%"class.std::ios_base"*, i32) #5 comdat align 2 {
  %3 = alloca %"class.std::ios_base"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %"class.std::ios_base"* %0, %"class.std::ios_base"** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %"class.std::ios_base"*, %"class.std::ios_base"** %3, align 8
  %7 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %5, align 4
  %9 = load i32, i32* %4, align 4
  %10 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %6, i32 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = load i32, i32* %5, align 4
  ret i32 %11
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE11block_writeERSo(%class.SparseMatrix*, %"class.std::basic_ostream"* dereferenceable(272)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.149
  %4 = load i32, i32* @y.150
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca %"class.std::basic_ostream"*, align 8
  %13 = alloca %"class.StandardExceptions::ExcIO", align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca %"class.StandardExceptions::ExcIO", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %12, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %19 = bitcast %"class.std::basic_ostream"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::basic_ostream"* %18 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = bitcast i8* %25 to %"class.std::basic_ios"*
  %27 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"* %26)
  %28 = load i32, i32* @x.149
  %29 = load i32, i32* @y.150
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %59

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = bitcast %"class.StandardExceptions::ExcIO"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %13)
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1337, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %13)
          to label %38 unwind label %39

; <label>:38:                                     ; preds = %36
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %13) #2
  br label %59

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* @x.149
  %41 = load i32, i32* @y.150
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %14, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %15, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %13) #2
  %51 = load i32, i32* @x.149
  %52 = load i32, i32* @y.150
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %122

; <label>:59:                                     ; preds = %38, %originalBBpart2
  %60 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %61 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %60, i8 signext 91)
  %62 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %61, i32 %63)
  %65 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0))
  %66 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %67 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 2
  %68 = load double*, double** %67, align 8
  %69 = getelementptr inbounds double, double* %68, i64 0
  %70 = bitcast double* %69 to i8*
  %71 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 2
  %72 = load double*, double** %71, align 8
  %73 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds double, double* %72, i64 %75
  %77 = bitcast double* %76 to i8*
  %78 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %17, i32 0, i32 2
  %79 = load double*, double** %78, align 8
  %80 = getelementptr inbounds double, double* %79, i64 0
  %81 = bitcast double* %80 to i8*
  %82 = ptrtoint i8* %77 to i64
  %83 = ptrtoint i8* %81 to i64
  %84 = sub i64 %82, %83
  %85 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %66, i8* %70, i64 %84)
  %86 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %87 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %86, i8 signext 93)
  %88 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %89 = bitcast %"class.std::basic_ostream"* %88 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr i8, i8* %90, i64 -24
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::basic_ostream"* %88 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %93
  %96 = bitcast i8* %95 to %"class.std::basic_ios"*
  %97 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"* %96)
  br i1 %97, label %98, label %121

; <label>:98:                                     ; preds = %59
  %99 = bitcast %"class.StandardExceptions::ExcIO"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* %99, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %16)
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1348, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %16)
          to label %100 unwind label %101

; <label>:100:                                    ; preds = %98
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %16) #2
  br label %121

; <label>:101:                                    ; preds = %98
  %102 = load i32, i32* @x.149
  %103 = load i32, i32* @y.150
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %101, %originalBB6alteredBB
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %14, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %15, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %16) #2
  %113 = load i32, i32* @x.149
  %114 = load i32, i32* @y.150
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %122

; <label>:121:                                    ; preds = %100, %59
  ret void

; <label>:122:                                    ; preds = %originalBBpart28, %originalBBpart24
  %123 = load i8*, i8** %14, align 8
  %124 = load i32, i32* %15, align 4
  %125 = insertvalue { i8*, i32 } undef, i8* %123, 0
  %126 = insertvalue { i8*, i32 } %125, i32 %124, 1
  resume { i8*, i32 } %126

originalBBalteredBB:                              ; preds = %originalBB, %2
  %127 = alloca %class.SparseMatrix*, align 8
  %128 = alloca %"class.std::basic_ostream"*, align 8
  %129 = alloca %"class.StandardExceptions::ExcIO", align 8
  %130 = alloca i8*
  %131 = alloca i32
  %132 = alloca %"class.StandardExceptions::ExcIO", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %127, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %128, align 8
  %133 = load %class.SparseMatrix*, %class.SparseMatrix** %127, align 8
  %134 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %128, align 8
  %135 = bitcast %"class.std::basic_ostream"* %134 to i8**
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr i8, i8* %136, i64 -24
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.std::basic_ostream"* %134 to i8*
  %141 = getelementptr inbounds i8, i8* %140, i64 %139
  %142 = bitcast i8* %141 to %"class.std::basic_ios"*
  %143 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"* %142)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %14, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %15, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %13) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %101
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = extractvalue { i8*, i32 } %147, 0
  store i8* %148, i8** %14, align 8
  %149 = extractvalue { i8*, i32 } %147, 1
  store i32 %149, i32* %15, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %16) #2
  br label %originalBB6
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"*, i8*, i64) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE10block_readERSi(%class.SparseMatrix*, %"class.std::basic_istream"* dereferenceable(280)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %"class.std::basic_istream"*, align 8
  %5 = alloca %"class.StandardExceptions::ExcIO", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i8, align 1
  %9 = alloca %"class.StandardExceptions::ExcIO", align 8
  %10 = alloca %"class.StandardExceptions::ExcIO", align 8
  %11 = alloca %"class.StandardExceptions::ExcIO", align 8
  %12 = alloca %"class.StandardExceptions::ExcIO", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %"class.std::basic_istream"* %1, %"class.std::basic_istream"** %4, align 8
  %13 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %14 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %15 = bitcast %"class.std::basic_istream"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::basic_istream"* %14 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = bitcast i8* %21 to %"class.std::basic_ios"*
  %23 = call zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv(%"class.std::basic_ios"* %22)
  br i1 %23, label %24, label %47

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.151
  %26 = load i32, i32* @y.152
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = bitcast %"class.StandardExceptions::ExcIO"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %5)
  %34 = load i32, i32* @x.151
  %35 = load i32, i32* @y.152
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1357, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %5)
          to label %42 unwind label %43

; <label>:42:                                     ; preds = %originalBBpart2
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %5) #2
  br label %47

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %6, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %7, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %5) #2
  br label %203

; <label>:47:                                     ; preds = %42, %2
  %48 = load i32, i32* @x.151
  %49 = load i32, i32* @y.152
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %57 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) %56, i8* dereferenceable(1) %8)
  %58 = load i8, i8* %8, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 91
  %61 = load i32, i32* @x.151
  %62 = load i32, i32* @y.152
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %76, label %69

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = bitcast %"class.StandardExceptions::ExcIO"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* %70, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %9)
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1363, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %9)
          to label %71 unwind label %72

; <label>:71:                                     ; preds = %69
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %9) #2
  br label %76

; <label>:72:                                     ; preds = %69
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %6, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %7, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %9) #2
  br label %203

; <label>:76:                                     ; preds = %71, %originalBBpart24
  %77 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %78 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 3
  %79 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERj(%"class.std::basic_istream"* %77, i32* dereferenceable(4) %78)
  %80 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %81 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) %80, i8* dereferenceable(1) %8)
  %82 = load i8, i8* %8, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %83, 93
  br i1 %84, label %92, label %85

; <label>:85:                                     ; preds = %76
  %86 = bitcast %"class.StandardExceptions::ExcIO"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* %86, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %10)
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1367, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %10)
          to label %87 unwind label %88

; <label>:87:                                     ; preds = %85
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %10) #2
  br label %92

; <label>:88:                                     ; preds = %85
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %6, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %7, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %10) #2
  br label %203

; <label>:92:                                     ; preds = %87, %76
  %93 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %94 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) %93, i8* dereferenceable(1) %8)
  %95 = load i8, i8* %8, align 1
  %96 = sext i8 %95 to i32
  %97 = icmp eq i32 %96, 91
  br i1 %97, label %121, label %98

; <label>:98:                                     ; preds = %92
  %99 = bitcast %"class.StandardExceptions::ExcIO"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* %99, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %11)
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1369, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %11)
          to label %100 unwind label %117

; <label>:100:                                    ; preds = %98
  %101 = load i32, i32* @x.151
  %102 = load i32, i32* @y.152
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %100, %originalBB6alteredBB
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %11) #2
  %109 = load i32, i32* @x.151
  %110 = load i32, i32* @y.152
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %121

; <label>:117:                                    ; preds = %98
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %6, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %7, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %11) #2
  br label %203

; <label>:121:                                    ; preds = %originalBBpart28, %92
  %122 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %123 = load double*, double** %122, align 8
  %124 = icmp eq double* %123, null
  br i1 %124, label %127, label %125

; <label>:125:                                    ; preds = %121
  %126 = bitcast double* %123 to i8*
  call void @_ZdaPv(i8* %126) #12
  br label %127

; <label>:127:                                    ; preds = %125, %121
  %128 = load i32, i32* @x.151
  %129 = load i32, i32* @y.152
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %127, %originalBB10alteredBB
  %136 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = zext i32 %137 to i64
  %139 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %138, i64 8)
  %140 = extractvalue { i64, i1 } %139, 1
  %141 = extractvalue { i64, i1 } %139, 0
  %142 = select i1 %140, i64 -1, i64 %141
  %143 = call i8* @_Znam(i64 %142) #13
  %144 = bitcast i8* %143 to double*
  %145 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  store double* %144, double** %145, align 8
  %146 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %147 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %148 = load double*, double** %147, align 8
  %149 = getelementptr inbounds double, double* %148, i64 0
  %150 = bitcast double* %149 to i8*
  %151 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %152 = load double*, double** %151, align 8
  %153 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 3
  %154 = load i32, i32* %153, align 8
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds double, double* %152, i64 %155
  %157 = bitcast double* %156 to i8*
  %158 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %159 = load double*, double** %158, align 8
  %160 = getelementptr inbounds double, double* %159, i64 0
  %161 = bitcast double* %160 to i8*
  %162 = ptrtoint i8* %157 to i64
  %163 = ptrtoint i8* %161 to i64
  %164 = sub i64 %162, %163
  %165 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %146, i8* %150, i64 %164)
  %166 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %167 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) %166, i8* dereferenceable(1) %8)
  %168 = load i8, i8* %8, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %169, 93
  %171 = load i32, i32* @x.151
  %172 = load i32, i32* @y.152
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart221, label %originalBB10alteredBB

originalBBpart221:                                ; preds = %originalBB10
  br i1 %170, label %202, label %179

; <label>:179:                                    ; preds = %originalBBpart221
  %180 = load i32, i32* @x.151
  %181 = load i32, i32* @y.152
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %179, %originalBB23alteredBB
  %188 = bitcast %"class.StandardExceptions::ExcIO"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* %188, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %12)
  %189 = load i32, i32* @x.151
  %190 = load i32, i32* @y.152
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  invoke void @_ZN18deal_II_exceptions9internals17issue_error_throwIN18StandardExceptions5ExcIOEEEvPKciS5_S5_S5_T_(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0), i32 1380, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %"class.StandardExceptions::ExcIO"* %12)
          to label %197 unwind label %198

; <label>:197:                                    ; preds = %originalBBpart225
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %12) #2
  br label %202

; <label>:198:                                    ; preds = %originalBBpart225
  %199 = landingpad { i8*, i32 }
          cleanup
  %200 = extractvalue { i8*, i32 } %199, 0
  store i8* %200, i8** %6, align 8
  %201 = extractvalue { i8*, i32 } %199, 1
  store i32 %201, i32* %7, align 4
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %12) #2
  br label %203

; <label>:202:                                    ; preds = %197, %originalBBpart221
  ret void

; <label>:203:                                    ; preds = %198, %117, %88, %72, %43
  %204 = load i8*, i8** %6, align 8
  %205 = load i32, i32* %7, align 4
  %206 = insertvalue { i8*, i32 } undef, i8* %204, 0
  %207 = insertvalue { i8*, i32 } %206, i32 %205, 1
  resume { i8*, i32 } %207

originalBBalteredBB:                              ; preds = %originalBB, %24
  %208 = bitcast %"class.StandardExceptions::ExcIO"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* %208, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %5)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %209 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %210 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) %209, i8* dereferenceable(1) %8)
  %211 = load i8, i8* %8, align 1
  %212 = sext i8 %211 to i32
  %213 = icmp eq i32 %212, 91
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %100
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %11) #2
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %127
  %214 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 3
  %215 = load i32, i32* %214, align 8
  %216 = zext i32 %215 to i64
  %217 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %216, i64 8)
  %218 = extractvalue { i64, i1 } %217, 1
  %219 = extractvalue { i64, i1 } %217, 0
  %220 = select i1 %218, i64 -1, i64 %219
  %221 = call i8* @_Znam(i64 %220) #13
  %222 = bitcast i8* %221 to double*
  %223 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  store double* %222, double** %223, align 8
  %224 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %225 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %226 = load double*, double** %225, align 8
  %227 = getelementptr inbounds double, double* %226, i64 0
  %228 = bitcast double* %227 to i8*
  %229 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %230 = load double*, double** %229, align 8
  %231 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 3
  %232 = load i32, i32* %231, align 8
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds double, double* %230, i64 %233
  %235 = bitcast double* %234 to i8*
  %236 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %13, i32 0, i32 2
  %237 = load double*, double** %236, align 8
  %238 = getelementptr inbounds double, double* %237, i64 0
  %239 = bitcast double* %238 to i8*
  %240 = ptrtoint i8* %235 to i64
  %241 = ptrtoint i8* %239 to i64
  %_ = shl i64 %240, %241
  %_11 = sub i64 %240, %241
  %gen = mul i64 %_11, %241
  %_12 = shl i64 %240, %241
  %_13 = sub i64 0, %240
  %gen14 = add i64 %_13, %241
  %_15 = sub i64 %240, %241
  %gen16 = mul i64 %_15, %241
  %_17 = shl i64 %240, %241
  %_18 = sub i64 %240, %241
  %gen19 = mul i64 %_18, %241
  %242 = sub i64 %240, %241
  %243 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %224, i8* %228, i64 %242)
  %244 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %4, align 8
  %245 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) %244, i8* dereferenceable(1) %8)
  %246 = load i8, i8* %8, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %247, 93
  br label %originalBB10

originalBB23alteredBB:                            ; preds = %originalBB23, %179
  %249 = bitcast %"class.StandardExceptions::ExcIO"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* %249, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN18StandardExceptions5ExcIOC2Ev(%"class.StandardExceptions::ExcIO"* %12)
  br label %originalBB23
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERj(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK12SparseMatrixIdE18memory_consumptionEv(%class.SparseMatrix*) #5 comdat align 2 {
  %2 = load i32, i32* @x.153
  %3 = load i32, i32* @y.154
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %10, align 8
  %11 = load %class.SparseMatrix*, %class.SparseMatrix** %10, align 8
  %12 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = mul i64 %14, 8
  %16 = add i64 56, %15
  %17 = trunc i64 %16 to i32
  %18 = load i32, i32* @x.153
  %19 = load i32, i32* @y.154
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %17

originalBBalteredBB:                              ; preds = %originalBB, %1
  %26 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %26, align 8
  %27 = load %class.SparseMatrix*, %class.SparseMatrix** %26, align 8
  %28 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %_ = sub i64 0, %30
  %gen = add i64 %_, 8
  %31 = mul i64 %30, 8
  %_1 = shl i64 56, %31
  %_2 = sub i64 56, %31
  %gen3 = mul i64 %_2, %31
  %_4 = sub i64 0, 56
  %gen5 = add i64 %_4, %31
  %_6 = sub i64 0, 56
  %gen7 = add i64 %_6, %31
  %32 = add i64 56, %31
  %33 = trunc i64 %32 to i32
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE15ExcInvalidIndexC2Eii(%"class.SparseMatrix<double>::ExcInvalidIndex"*, i32, i32) unnamed_addr #0 comdat($_ZN12SparseMatrixIdE15ExcInvalidIndexC5Eii) align 2 {
  %4 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %4, align 8
  %8 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %7 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %8)
  %9 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12SparseMatrixIdE15ExcInvalidIndexE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %7, i32 0, i32 1
  %11 = load i32, i32* %5, align 4
  store i32 %11, i32* %10, align 8
  %12 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %7, i32 0, i32 2
  %13 = load i32, i32* %6, align 4
  store i32 %13, i32* %12, align 4
  ret void
}

declare void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN12SparseMatrixIdE15ExcInvalidIndexD2Ev(%"class.SparseMatrix<double>::ExcInvalidIndex"*) unnamed_addr #5 comdat($_ZN12SparseMatrixIdE15ExcInvalidIndexD5Ev) align 2 {
  %2 = load i32, i32* @x.157
  %3 = load i32, i32* @y.158
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %10, align 8
  %11 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %10, align 8
  %12 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #2
  %13 = load i32, i32* @x.157
  %14 = load i32, i32* @y.158
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %21, align 8
  %22 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %21, align 8
  %23 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #2
  br label %originalBB
}

; Function Attrs: nounwind
declare void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase*) unnamed_addr #9

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN12SparseMatrixIdE15ExcInvalidIndexD0Ev(%"class.SparseMatrix<double>::ExcInvalidIndex"*) unnamed_addr #5 comdat($_ZN12SparseMatrixIdE15ExcInvalidIndexD5Ev) align 2 {
  %2 = load i32, i32* @x.159
  %3 = load i32, i32* @y.160
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %10, align 8
  %11 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %10, align 8
  call void @_ZN12SparseMatrixIdE15ExcInvalidIndexD1Ev(%"class.SparseMatrix<double>::ExcInvalidIndex"* %11) #2
  %12 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %11 to i8*
  call void @_ZdlPv(i8* %12) #12
  %13 = load i32, i32* @x.159
  %14 = load i32, i32* @y.160
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %21, align 8
  %22 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %21, align 8
  call void @_ZN12SparseMatrixIdE15ExcInvalidIndexD1Ev(%"class.SparseMatrix<double>::ExcInvalidIndex"* %22) #2
  %23 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %22 to i8*
  call void @_ZdlPv(i8* %23) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE15ExcInvalidIndex9PrintInfoERSo(%"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.161
  %4 = load i32, i32* @y.162
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  %12 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %11, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %12, align 8
  %13 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %11, align 8
  %14 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %15 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i32 0, i32 0))
  %16 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %13, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %15, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %18, i8 signext 44)
  %20 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %13, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %19, i32 %21)
  %23 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0))
  %24 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %23, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %25 = load i32, i32* @x.161
  %26 = load i32, i32* @y.162
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %33 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  %34 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %33, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %34, align 8
  %35 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %33, align 8
  %36 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %34, align 8
  %37 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %36, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i32 0, i32 0))
  %38 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %37, i32 %39)
  %41 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %40, i8 signext 44)
  %42 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %35, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %41, i32 %43)
  %45 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %44, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0))
  %46 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %45, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %originalBB
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE16ExcInvalidIndex1C2Ei(%"class.SparseMatrix<double>::ExcInvalidIndex1"*, i32) unnamed_addr #0 comdat($_ZN12SparseMatrixIdE16ExcInvalidIndex1C5Ei) align 2 {
  %3 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex1"*, align 8
  %4 = alloca i32, align 4
  store %"class.SparseMatrix<double>::ExcInvalidIndex1"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %3, align 8
  %6 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex1"* %5 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %6)
  %7 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex1"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12SparseMatrixIdE16ExcInvalidIndex1E, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex1", %"class.SparseMatrix<double>::ExcInvalidIndex1"* %5, i32 0, i32 1
  %9 = load i32, i32* %4, align 4
  store i32 %9, i32* %8, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN12SparseMatrixIdE16ExcInvalidIndex1D2Ev(%"class.SparseMatrix<double>::ExcInvalidIndex1"*) unnamed_addr #5 comdat($_ZN12SparseMatrixIdE16ExcInvalidIndex1D5Ev) align 2 {
  %2 = load i32, i32* @x.165
  %3 = load i32, i32* @y.166
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex1"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex1"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %10, align 8
  %11 = load %"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %10, align 8
  %12 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex1"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #2
  %13 = load i32, i32* @x.165
  %14 = load i32, i32* @y.166
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex1"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex1"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %21, align 8
  %22 = load %"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %21, align 8
  %23 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex1"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN12SparseMatrixIdE16ExcInvalidIndex1D0Ev(%"class.SparseMatrix<double>::ExcInvalidIndex1"*) unnamed_addr #5 comdat($_ZN12SparseMatrixIdE16ExcInvalidIndex1D5Ev) align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex1"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex1"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %2, align 8
  call void @_ZN12SparseMatrixIdE16ExcInvalidIndex1D1Ev(%"class.SparseMatrix<double>::ExcInvalidIndex1"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex1"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE16ExcInvalidIndex19PrintInfoERSo(%"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.169
  %4 = load i32, i32* @y.170
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex1"*, align 8
  %12 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex1"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %11, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %12, align 8
  %13 = load %"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %11, align 8
  %14 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %15 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0))
  %16 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex1", %"class.SparseMatrix<double>::ExcInvalidIndex1"* %13, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %15, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %18, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0))
  %20 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %19, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %21 = load i32, i32* @x.169
  %22 = load i32, i32* @y.170
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex1"*, align 8
  %30 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex1"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %29, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %30, align 8
  %31 = load %"class.SparseMatrix<double>::ExcInvalidIndex1"*, %"class.SparseMatrix<double>::ExcInvalidIndex1"** %29, align 8
  %32 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %30, align 8
  %33 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0))
  %34 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex1", %"class.SparseMatrix<double>::ExcInvalidIndex1"* %31, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %33, i32 %35)
  %37 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %36, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0))
  %38 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %37, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE16ExcIteratorRangeC2Eii(%"class.SparseMatrix<double>::ExcIteratorRange"*, i32, i32) unnamed_addr #0 comdat($_ZN12SparseMatrixIdE16ExcIteratorRangeC5Eii) align 2 {
  %4 = alloca %"class.SparseMatrix<double>::ExcIteratorRange"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %"class.SparseMatrix<double>::ExcIteratorRange"* %0, %"class.SparseMatrix<double>::ExcIteratorRange"** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %"class.SparseMatrix<double>::ExcIteratorRange"*, %"class.SparseMatrix<double>::ExcIteratorRange"** %4, align 8
  %8 = bitcast %"class.SparseMatrix<double>::ExcIteratorRange"* %7 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %8)
  %9 = bitcast %"class.SparseMatrix<double>::ExcIteratorRange"* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12SparseMatrixIdE16ExcIteratorRangeE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.SparseMatrix<double>::ExcIteratorRange", %"class.SparseMatrix<double>::ExcIteratorRange"* %7, i32 0, i32 1
  %11 = load i32, i32* %5, align 4
  store i32 %11, i32* %10, align 8
  %12 = getelementptr inbounds %"class.SparseMatrix<double>::ExcIteratorRange", %"class.SparseMatrix<double>::ExcIteratorRange"* %7, i32 0, i32 2
  %13 = load i32, i32* %6, align 4
  store i32 %13, i32* %12, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN12SparseMatrixIdE16ExcIteratorRangeD2Ev(%"class.SparseMatrix<double>::ExcIteratorRange"*) unnamed_addr #5 comdat($_ZN12SparseMatrixIdE16ExcIteratorRangeD5Ev) align 2 {
  %2 = load i32, i32* @x.173
  %3 = load i32, i32* @y.174
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.SparseMatrix<double>::ExcIteratorRange"*, align 8
  store %"class.SparseMatrix<double>::ExcIteratorRange"* %0, %"class.SparseMatrix<double>::ExcIteratorRange"** %10, align 8
  %11 = load %"class.SparseMatrix<double>::ExcIteratorRange"*, %"class.SparseMatrix<double>::ExcIteratorRange"** %10, align 8
  %12 = bitcast %"class.SparseMatrix<double>::ExcIteratorRange"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #2
  %13 = load i32, i32* @x.173
  %14 = load i32, i32* @y.174
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.SparseMatrix<double>::ExcIteratorRange"*, align 8
  store %"class.SparseMatrix<double>::ExcIteratorRange"* %0, %"class.SparseMatrix<double>::ExcIteratorRange"** %21, align 8
  %22 = load %"class.SparseMatrix<double>::ExcIteratorRange"*, %"class.SparseMatrix<double>::ExcIteratorRange"** %21, align 8
  %23 = bitcast %"class.SparseMatrix<double>::ExcIteratorRange"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN12SparseMatrixIdE16ExcIteratorRangeD0Ev(%"class.SparseMatrix<double>::ExcIteratorRange"*) unnamed_addr #5 comdat($_ZN12SparseMatrixIdE16ExcIteratorRangeD5Ev) align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcIteratorRange"*, align 8
  store %"class.SparseMatrix<double>::ExcIteratorRange"* %0, %"class.SparseMatrix<double>::ExcIteratorRange"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcIteratorRange"*, %"class.SparseMatrix<double>::ExcIteratorRange"** %2, align 8
  call void @_ZN12SparseMatrixIdE16ExcIteratorRangeD1Ev(%"class.SparseMatrix<double>::ExcIteratorRange"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcIteratorRange"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE16ExcIteratorRange9PrintInfoERSo(%"class.SparseMatrix<double>::ExcIteratorRange"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SparseMatrix<double>::ExcIteratorRange"*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.SparseMatrix<double>::ExcIteratorRange"* %0, %"class.SparseMatrix<double>::ExcIteratorRange"** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %5 = load %"class.SparseMatrix<double>::ExcIteratorRange"*, %"class.SparseMatrix<double>::ExcIteratorRange"** %3, align 8
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i32 0, i32 0))
  %8 = getelementptr inbounds %"class.SparseMatrix<double>::ExcIteratorRange", %"class.SparseMatrix<double>::ExcIteratorRange"* %5, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %7, i32 %9)
  %11 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %10, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i32 0, i32 0))
  %12 = getelementptr inbounds %"class.SparseMatrix<double>::ExcIteratorRange", %"class.SparseMatrix<double>::ExcIteratorRange"* %5, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %11, i32 %13)
  %15 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %14, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdE9copy_fromIfEERS0_RKS_IT_E(%class.SparseMatrix*, %class.SparseMatrix.2* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %class.SparseMatrix.2*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %class.SparseMatrix.2* %1, %class.SparseMatrix.2** %4, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %6 = load %class.SparseMatrix.2*, %class.SparseMatrix.2** %4, align 8
  %7 = getelementptr inbounds %class.SparseMatrix.2, %class.SparseMatrix.2* %6, i32 0, i32 2
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds float, float* %8, i64 0
  %10 = load %class.SparseMatrix.2*, %class.SparseMatrix.2** %4, align 8
  %11 = getelementptr inbounds %class.SparseMatrix.2, %class.SparseMatrix.2* %10, i32 0, i32 2
  %12 = load float*, float** %11, align 8
  %13 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  %14 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %13)
  %15 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %14)
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds float, float* %12, i64 %16
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 2
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds double, double* %19, i64 0
  %21 = call double* @_ZSt4copyIPfPdET0_T_S3_S2_(float* %9, float* %17, double* %20)
  ret %class.SparseMatrix* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIPfPdET0_T_S3_S2_(float*, float*, double*) #0 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca double*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__miter_baseIPfET_S1_(float* %7)
  %9 = load float*, float** %5, align 8
  %10 = call float* @_ZSt12__miter_baseIPfET_S1_(float* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt14__copy_move_a2ILb0EPfPdET1_T0_S3_S2_(float* %8, float* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE9copy_fromIfEEvRK10FullMatrixIT_E(%class.SparseMatrix*, %class.FullMatrix* dereferenceable(48)) #0 comdat align 2 {
  %3 = load i32, i32* @x.183
  %4 = load i32, i32* @y.184
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca %class.FullMatrix*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store %class.FullMatrix* %1, %class.FullMatrix** %12, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %16 = call dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdEaSEd(%class.SparseMatrix* %15, double 0.000000e+00)
  store i32 0, i32* %13, align 4
  %17 = load i32, i32* @x.183
  %18 = load i32, i32* @y.184
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %107, %originalBBpart2
  %26 = load i32, i32* %13, align 4
  %27 = load %class.FullMatrix*, %class.FullMatrix** %12, align 8
  %28 = call i32 @_ZNK10FullMatrixIfE1mEv(%class.FullMatrix* %27)
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %30, label %110

; <label>:30:                                     ; preds = %25
  %31 = load i32, i32* @x.183
  %32 = load i32, i32* @y.184
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  store i32 0, i32* %14, align 4
  %39 = load i32, i32* @x.183
  %40 = load i32, i32* @y.184
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart215, %originalBBpart24
  %48 = load i32, i32* %14, align 4
  %49 = load %class.FullMatrix*, %class.FullMatrix** %12, align 8
  %50 = call i32 @_ZNK10FullMatrixIfE1nEv(%class.FullMatrix* %49)
  %51 = icmp ult i32 %48, %50
  br i1 %51, label %52, label %90

; <label>:52:                                     ; preds = %47
  %53 = load %class.FullMatrix*, %class.FullMatrix** %12, align 8
  %54 = bitcast %class.FullMatrix* %53 to %class.Table*
  %55 = load i32, i32* %13, align 4
  %56 = load i32, i32* %14, align 4
  %57 = call dereferenceable(4) float* @_ZNK5TableILi2EfEclEjj(%class.Table* %54, i32 %55, i32 %56)
  %58 = load float, float* %57, align 4
  %59 = fcmp une float %58, 0.000000e+00
  br i1 %59, label %60, label %70

; <label>:60:                                     ; preds = %52
  %61 = load i32, i32* %13, align 4
  %62 = load i32, i32* %14, align 4
  %63 = load %class.FullMatrix*, %class.FullMatrix** %12, align 8
  %64 = bitcast %class.FullMatrix* %63 to %class.Table*
  %65 = load i32, i32* %13, align 4
  %66 = load i32, i32* %14, align 4
  %67 = call dereferenceable(4) float* @_ZNK5TableILi2EfEclEjj(%class.Table* %64, i32 %65, i32 %66)
  %68 = load float, float* %67, align 4
  %69 = fpext float %68 to double
  call void @_ZN12SparseMatrixIdE3setEjjd(%class.SparseMatrix* %15, i32 %61, i32 %62, double %69)
  br label %70

; <label>:70:                                     ; preds = %60, %52
  br label %71

; <label>:71:                                     ; preds = %70
  %72 = load i32, i32* @x.183
  %73 = load i32, i32* @y.184
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %71, %originalBB6alteredBB
  %80 = load i32, i32* %14, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %14, align 4
  %82 = load i32, i32* @x.183
  %83 = load i32, i32* @y.184
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart215, label %originalBB6alteredBB

originalBBpart215:                                ; preds = %originalBB6
  br label %47

; <label>:90:                                     ; preds = %47
  %91 = load i32, i32* @x.183
  %92 = load i32, i32* @y.184
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %90, %originalBB17alteredBB
  %99 = load i32, i32* @x.183
  %100 = load i32, i32* @y.184
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %107

; <label>:107:                                    ; preds = %originalBBpart219
  %108 = load i32, i32* %13, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %13, align 4
  br label %25

; <label>:110:                                    ; preds = %25
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %111 = alloca %class.SparseMatrix*, align 8
  %112 = alloca %class.FullMatrix*, align 8
  %113 = alloca i32, align 4
  %114 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %111, align 8
  store %class.FullMatrix* %1, %class.FullMatrix** %112, align 8
  %115 = load %class.SparseMatrix*, %class.SparseMatrix** %111, align 8
  %116 = call dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdEaSEd(%class.SparseMatrix* %115, double 0.000000e+00)
  store i32 0, i32* %113, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  store i32 0, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %117 = load i32, i32* %14, align 4
  %_ = sub i32 0, %117
  %gen = add i32 %_, 1
  %_7 = sub i32 0, %117
  %gen8 = add i32 %_7, 1
  %_9 = shl i32 %117, 1
  %_10 = sub i32 %117, 1
  %gen11 = mul i32 %_10, 1
  %_12 = shl i32 %117, 1
  %_13 = shl i32 %117, 1
  %118 = add i32 %117, 1
  store i32 %118, i32* %14, align 4
  br label %originalBB6

originalBB17alteredBB:                            ; preds = %originalBB17, %90
  br label %originalBB17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK10FullMatrixIfE1mEv(%class.FullMatrix*) #0 comdat align 2 {
  %2 = alloca %class.FullMatrix*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %2, align 8
  %3 = load %class.FullMatrix*, %class.FullMatrix** %2, align 8
  %4 = bitcast %class.FullMatrix* %3 to %class.Table*
  %5 = call i32 @_ZNK5TableILi2EfE6n_rowsEv(%class.Table* %4)
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK10FullMatrixIfE1nEv(%class.FullMatrix*) #0 comdat align 2 {
  %2 = load i32, i32* @x.187
  %3 = load i32, i32* @y.188
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.FullMatrix*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %10, align 8
  %11 = load %class.FullMatrix*, %class.FullMatrix** %10, align 8
  %12 = bitcast %class.FullMatrix* %11 to %class.Table*
  %13 = call i32 @_ZNK5TableILi2EfE6n_colsEv(%class.Table* %12)
  %14 = load i32, i32* @x.187
  %15 = load i32, i32* @y.188
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.FullMatrix*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %22, align 8
  %23 = load %class.FullMatrix*, %class.FullMatrix** %22, align 8
  %24 = bitcast %class.FullMatrix* %23 to %class.Table*
  %25 = call i32 @_ZNK5TableILi2EfE6n_colsEv(%class.Table* %24)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) float* @_ZNK5TableILi2EfEclEjj(%class.Table*, i32, i32) #5 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Table*, %class.Table** %4, align 8
  %8 = bitcast %class.Table* %7 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load float*, float** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = bitcast %class.Table* %7 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = mul i32 %11, %15
  %17 = load i32, i32* %6, align 4
  %18 = add i32 %16, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds float, float* %10, i64 %19
  ret float* %20
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE10add_scaledIfEEvdRKS_IT_E(%class.SparseMatrix*, double, %class.SparseMatrix.2* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca double, align 8
  %6 = alloca %class.SparseMatrix.2*, align 8
  %7 = alloca double*, align 8
  %8 = alloca float*, align 8
  %9 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store double %1, double* %5, align 8
  store %class.SparseMatrix.2* %2, %class.SparseMatrix.2** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %12 = load double*, double** %11, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  store double* %13, double** %7, align 8
  %14 = load %class.SparseMatrix.2*, %class.SparseMatrix.2** %6, align 8
  %15 = getelementptr inbounds %class.SparseMatrix.2, %class.SparseMatrix.2* %14, i32 0, i32 2
  %16 = load float*, float** %15, align 8
  %17 = getelementptr inbounds float, float* %16, i64 0
  store float* %17, float** %8, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %21 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %20)
  %22 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %21)
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds double, double* %19, i64 %23
  store double* %24, double** %9, align 8
  br label %25

; <label>:25:                                     ; preds = %29, %3
  %26 = load double*, double** %7, align 8
  %27 = load double*, double** %9, align 8
  %28 = icmp ne double* %26, %27
  br i1 %28, label %29, label %40

; <label>:29:                                     ; preds = %25
  %30 = load double, double* %5, align 8
  %31 = load float*, float** %8, align 8
  %32 = getelementptr inbounds float, float* %31, i32 1
  store float* %32, float** %8, align 8
  %33 = load float, float* %31, align 4
  %34 = fpext float %33 to double
  %35 = fmul double %30, %34
  %36 = load double*, double** %7, align 8
  %37 = getelementptr inbounds double, double* %36, i32 1
  store double* %37, double** %7, align 8
  %38 = load double, double* %36, align 8
  %39 = fadd double %38, %35
  store double %39, double* %36, align 8
  br label %25

; <label>:40:                                     ; preds = %25
  %41 = load i32, i32* @x.191
  %42 = load i32, i32* @y.192
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %40, %originalBBalteredBB
  %49 = load i32, i32* @x.191
  %50 = load i32, i32* @y.192
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %40
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdE9copy_fromIdEERS0_RKS_IT_E(%class.SparseMatrix*, %class.SparseMatrix* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %class.SparseMatrix*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %4, align 8
  %5 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %6 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %7 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %6, i32 0, i32 2
  %8 = load double*, double** %7, align 8
  %9 = getelementptr inbounds double, double* %8, i64 0
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %12 = load double*, double** %11, align 8
  %13 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 1
  %14 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %13)
  %15 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %14)
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds double, double* %12, i64 %16
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %5, i32 0, i32 2
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds double, double* %19, i64 0
  %21 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %9, double* %17, double* %20)
  ret %class.SparseMatrix* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.195
  %5 = load i32, i32* @y.196
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %15)
  %17 = load double*, double** %13, align 8
  %18 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %17)
  %19 = load double*, double** %14, align 8
  %20 = call double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %16, double* %18, double* %19)
  %21 = load i32, i32* @x.195
  %22 = load i32, i32* @y.196
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  store double* %0, double** %29, align 8
  store double* %1, double** %30, align 8
  store double* %2, double** %31, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %32)
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %34)
  %36 = load double*, double** %31, align 8
  %37 = call double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %33, double* %35, double* %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE9copy_fromIdEEvRK10FullMatrixIT_E(%class.SparseMatrix*, %class.FullMatrix.4* dereferenceable(48)) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %class.FullMatrix.4*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %class.FullMatrix.4* %1, %class.FullMatrix.4** %4, align 8
  %7 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %8 = call dereferenceable(56) %class.SparseMatrix* @_ZN12SparseMatrixIdEaSEd(%class.SparseMatrix* %7, double 0.000000e+00)
  store i32 0, i32* %5, align 4
  br label %9

; <label>:9:                                      ; preds = %58, %2
  %10 = load i32, i32* %5, align 4
  %11 = load %class.FullMatrix.4*, %class.FullMatrix.4** %4, align 8
  %12 = call i32 @_ZNK10FullMatrixIdE1mEv(%class.FullMatrix.4* %11)
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %61

; <label>:14:                                     ; preds = %9
  store i32 0, i32* %6, align 4
  br label %15

; <label>:15:                                     ; preds = %54, %14
  %16 = load i32, i32* %6, align 4
  %17 = load %class.FullMatrix.4*, %class.FullMatrix.4** %4, align 8
  %18 = call i32 @_ZNK10FullMatrixIdE1nEv(%class.FullMatrix.4* %17)
  %19 = icmp ult i32 %16, %18
  br i1 %19, label %20, label %57

; <label>:20:                                     ; preds = %15
  %21 = load %class.FullMatrix.4*, %class.FullMatrix.4** %4, align 8
  %22 = bitcast %class.FullMatrix.4* %21 to %class.Table.5*
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %6, align 4
  %25 = call dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table.5* %22, i32 %23, i32 %24)
  %26 = load double, double* %25, align 8
  %27 = fcmp une double %26, 0.000000e+00
  br i1 %27, label %28, label %53

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.197
  %30 = load i32, i32* @y.198
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i32, i32* %5, align 4
  %38 = load i32, i32* %6, align 4
  %39 = load %class.FullMatrix.4*, %class.FullMatrix.4** %4, align 8
  %40 = bitcast %class.FullMatrix.4* %39 to %class.Table.5*
  %41 = load i32, i32* %5, align 4
  %42 = load i32, i32* %6, align 4
  %43 = call dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table.5* %40, i32 %41, i32 %42)
  %44 = load double, double* %43, align 8
  call void @_ZN12SparseMatrixIdE3setEjjd(%class.SparseMatrix* %7, i32 %37, i32 %38, double %44)
  %45 = load i32, i32* @x.197
  %46 = load i32, i32* @y.198
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %53

; <label>:53:                                     ; preds = %originalBBpart2, %20
  br label %54

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* %6, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %6, align 4
  br label %15

; <label>:57:                                     ; preds = %15
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %9

; <label>:61:                                     ; preds = %9
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %28
  %62 = load i32, i32* %5, align 4
  %63 = load i32, i32* %6, align 4
  %64 = load %class.FullMatrix.4*, %class.FullMatrix.4** %4, align 8
  %65 = bitcast %class.FullMatrix.4* %64 to %class.Table.5*
  %66 = load i32, i32* %5, align 4
  %67 = load i32, i32* %6, align 4
  %68 = call dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table.5* %65, i32 %66, i32 %67)
  %69 = load double, double* %68, align 8
  call void @_ZN12SparseMatrixIdE3setEjjd(%class.SparseMatrix* %7, i32 %62, i32 %63, double %69)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK10FullMatrixIdE1mEv(%class.FullMatrix.4*) #0 comdat align 2 {
  %2 = alloca %class.FullMatrix.4*, align 8
  store %class.FullMatrix.4* %0, %class.FullMatrix.4** %2, align 8
  %3 = load %class.FullMatrix.4*, %class.FullMatrix.4** %2, align 8
  %4 = bitcast %class.FullMatrix.4* %3 to %class.Table.5*
  %5 = call i32 @_ZNK5TableILi2EdE6n_rowsEv(%class.Table.5* %4)
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK10FullMatrixIdE1nEv(%class.FullMatrix.4*) #0 comdat align 2 {
  %2 = load i32, i32* @x.201
  %3 = load i32, i32* @y.202
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.FullMatrix.4*, align 8
  store %class.FullMatrix.4* %0, %class.FullMatrix.4** %10, align 8
  %11 = load %class.FullMatrix.4*, %class.FullMatrix.4** %10, align 8
  %12 = bitcast %class.FullMatrix.4* %11 to %class.Table.5*
  %13 = call i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table.5* %12)
  %14 = load i32, i32* @x.201
  %15 = load i32, i32* @y.202
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.FullMatrix.4*, align 8
  store %class.FullMatrix.4* %0, %class.FullMatrix.4** %22, align 8
  %23 = load %class.FullMatrix.4*, %class.FullMatrix.4** %22, align 8
  %24 = bitcast %class.FullMatrix.4* %23 to %class.Table.5*
  %25 = call i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table.5* %24)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table.5*, i32, i32) #5 comdat align 2 {
  %4 = alloca %class.Table.5*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Table.5* %0, %class.Table.5** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Table.5*, %class.Table.5** %4, align 8
  %8 = bitcast %class.Table.5* %7 to %class.TableBase.6*
  %9 = getelementptr inbounds %class.TableBase.6, %class.TableBase.6* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = bitcast %class.Table.5* %7 to %class.TableBase.6*
  %13 = getelementptr inbounds %class.TableBase.6, %class.TableBase.6* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = mul i32 %11, %15
  %17 = load i32, i32* %6, align 4
  %18 = add i32 %16, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds double, double* %10, i64 %19
  ret double* %20
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN12SparseMatrixIdE10add_scaledIdEEvdRKS_IT_E(%class.SparseMatrix*, double, %class.SparseMatrix* dereferenceable(56)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca double, align 8
  %6 = alloca %class.SparseMatrix*, align 8
  %7 = alloca double*, align 8
  %8 = alloca double*, align 8
  %9 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store double %1, double* %5, align 8
  store %class.SparseMatrix* %2, %class.SparseMatrix** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %12 = load double*, double** %11, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  store double* %13, double** %7, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %6, align 8
  %15 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %16 = load double*, double** %15, align 8
  %17 = getelementptr inbounds double, double* %16, i64 0
  store double* %17, double** %8, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %21 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %20)
  %22 = call i32 @_ZNK15SparsityPattern18n_nonzero_elementsEv(%class.SparsityPattern* %21)
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds double, double* %19, i64 %23
  store double* %24, double** %9, align 8
  br label %25

; <label>:25:                                     ; preds = %29, %3
  %26 = load double*, double** %7, align 8
  %27 = load double*, double** %9, align 8
  %28 = icmp ne double* %26, %27
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %25
  %30 = load double, double* %5, align 8
  %31 = load double*, double** %8, align 8
  %32 = getelementptr inbounds double, double* %31, i32 1
  store double* %32, double** %8, align 8
  %33 = load double, double* %31, align 8
  %34 = fmul double %30, %33
  %35 = load double*, double** %7, align 8
  %36 = getelementptr inbounds double, double* %35, i32 1
  store double* %36, double** %7, align 8
  %37 = load double, double* %35, align 8
  %38 = fadd double %37, %34
  store double %38, double* %35, align 8
  br label %25

; <label>:39:                                     ; preds = %25
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5vmultI6VectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24)) #0 comdat align 2 {
  %4 = load i32, i32* @x.207
  %5 = load i32, i32* @y.208
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca %class.Vector.10*, align 8
  %14 = alloca %class.Vector.10*, align 8
  %15 = alloca i32, align 4
  %16 = alloca double*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca float*, align 8
  %19 = alloca i32, align 4
  %20 = alloca float, align 4
  %21 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store %class.Vector.10* %1, %class.Vector.10** %13, align 8
  store %class.Vector.10* %2, %class.Vector.10** %14, align 8
  %22 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  %23 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %22)
  store i32 %23, i32* %15, align 4
  %24 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %25 = load double*, double** %24, align 8
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 7
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds double, double* %25, i64 %32
  store double* %33, double** %16, align 8
  %34 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %35 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %34)
  %36 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %35, i32 0, i32 8
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %39 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %38)
  %40 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %39, i32 0, i32 7
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %37, i64 %44
  store i32* %45, i32** %17, align 8
  %46 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %47 = call float* @_ZN6VectorIfE5beginEv(%class.Vector.10* %46)
  store float* %47, float** %18, align 8
  store i32 0, i32* %19, align 4
  %48 = load i32, i32* @x.207
  %49 = load i32, i32* @y.208
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:56:                                     ; preds = %145, %originalBBpart2
  %57 = load i32, i32* @x.207
  %58 = load i32, i32* @y.208
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %56, %originalBB1alteredBB
  %65 = load i32, i32* %19, align 4
  %66 = load i32, i32* %15, align 4
  %67 = icmp ult i32 %65, %66
  %68 = load i32, i32* @x.207
  %69 = load i32, i32* @y.208
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %67, label %76, label %148

; <label>:76:                                     ; preds = %originalBBpart24
  store float 0.000000e+00, float* %20, align 4
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %78 = load double*, double** %77, align 8
  %79 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %80 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %79)
  %81 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %80, i32 0, i32 7
  %82 = load i32*, i32** %81, align 8
  %83 = load i32, i32* %19, align 4
  %84 = add i32 %83, 1
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %82, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds double, double* %78, i64 %88
  store double* %89, double** %21, align 8
  br label %90

; <label>:90:                                     ; preds = %110, %76
  %91 = load i32, i32* @x.207
  %92 = load i32, i32* @y.208
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %90, %originalBB6alteredBB
  %99 = load double*, double** %16, align 8
  %100 = load double*, double** %21, align 8
  %101 = icmp ne double* %99, %100
  %102 = load i32, i32* @x.207
  %103 = load i32, i32* @y.208
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %101, label %110, label %125

; <label>:110:                                    ; preds = %originalBBpart28
  %111 = load double*, double** %16, align 8
  %112 = getelementptr inbounds double, double* %111, i32 1
  store double* %112, double** %16, align 8
  %113 = load double, double* %111, align 8
  %114 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %115 = load i32*, i32** %17, align 8
  %116 = getelementptr inbounds i32, i32* %115, i32 1
  store i32* %116, i32** %17, align 8
  %117 = load i32, i32* %115, align 4
  %118 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %114, i32 %117)
  %119 = fpext float %118 to double
  %120 = fmul double %113, %119
  %121 = load float, float* %20, align 4
  %122 = fpext float %121 to double
  %123 = fadd double %122, %120
  %124 = fptrunc double %123 to float
  store float %124, float* %20, align 4
  br label %90

; <label>:125:                                    ; preds = %originalBBpart28
  %126 = load i32, i32* @x.207
  %127 = load i32, i32* @y.208
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %125, %originalBB10alteredBB
  %134 = load float, float* %20, align 4
  %135 = load float*, float** %18, align 8
  %136 = getelementptr inbounds float, float* %135, i32 1
  store float* %136, float** %18, align 8
  store float %134, float* %135, align 4
  %137 = load i32, i32* @x.207
  %138 = load i32, i32* @y.208
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %145

; <label>:145:                                    ; preds = %originalBBpart212
  %146 = load i32, i32* %19, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %19, align 4
  br label %56

; <label>:148:                                    ; preds = %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %149 = alloca %class.SparseMatrix*, align 8
  %150 = alloca %class.Vector.10*, align 8
  %151 = alloca %class.Vector.10*, align 8
  %152 = alloca i32, align 4
  %153 = alloca double*, align 8
  %154 = alloca i32*, align 8
  %155 = alloca float*, align 8
  %156 = alloca i32, align 4
  %157 = alloca float, align 4
  %158 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %149, align 8
  store %class.Vector.10* %1, %class.Vector.10** %150, align 8
  store %class.Vector.10* %2, %class.Vector.10** %151, align 8
  %159 = load %class.SparseMatrix*, %class.SparseMatrix** %149, align 8
  %160 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %159)
  store i32 %160, i32* %152, align 4
  %161 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %159, i32 0, i32 2
  %162 = load double*, double** %161, align 8
  %163 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %159, i32 0, i32 1
  %164 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %163)
  %165 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %164, i32 0, i32 7
  %166 = load i32*, i32** %165, align 8
  %167 = getelementptr inbounds i32, i32* %166, i64 0
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds double, double* %162, i64 %169
  store double* %170, double** %153, align 8
  %171 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %159, i32 0, i32 1
  %172 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %171)
  %173 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %172, i32 0, i32 8
  %174 = load i32*, i32** %173, align 8
  %175 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %159, i32 0, i32 1
  %176 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %175)
  %177 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %176, i32 0, i32 7
  %178 = load i32*, i32** %177, align 8
  %179 = getelementptr inbounds i32, i32* %178, i64 0
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds i32, i32* %174, i64 %181
  store i32* %182, i32** %154, align 8
  %183 = load %class.Vector.10*, %class.Vector.10** %150, align 8
  %184 = call float* @_ZN6VectorIfE5beginEv(%class.Vector.10* %183)
  store float* %184, float** %155, align 8
  store i32 0, i32* %156, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %56
  %185 = load i32, i32* %19, align 4
  %186 = load i32, i32* %15, align 4
  %187 = icmp ult i32 %185, %186
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  %188 = load double*, double** %16, align 8
  %189 = load double*, double** %21, align 8
  %190 = icmp ne double* %188, %189
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %125
  %191 = load float, float* %20, align 4
  %192 = load float*, float** %18, align 8
  %193 = getelementptr inbounds float, float* %192, i32 1
  store float* %193, float** %18, align 8
  store float %191, float* %192, align 4
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZN6VectorIfE5beginEv(%class.Vector.10*) #5 comdat align 2 {
  %2 = alloca %class.Vector.10*, align 8
  store %class.Vector.10* %0, %class.Vector.10** %2, align 8
  %3 = load %class.Vector.10*, %class.Vector.10** %2, align 8
  %4 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %3, i32 0, i32 3
  %5 = load float*, float** %4, align 8
  %6 = getelementptr inbounds float, float* %5, i64 0
  ret float* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float @_ZNK6VectorIfEclEj(%class.Vector.10*, i32) #5 comdat align 2 {
  %3 = alloca %class.Vector.10*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.10* %0, %class.Vector.10** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.10*, %class.Vector.10** %3, align 8
  %6 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %5, i32 0, i32 3
  %7 = load float*, float** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds float, float* %7, i64 %9
  %11 = load float, float* %10, align 4
  ret float %11
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE6TvmultI6VectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector.10*, align 8
  %6 = alloca %class.Vector.10*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector.10* %1, %class.Vector.10** %5, align 8
  store %class.Vector.10* %2, %class.Vector.10** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = load %class.Vector.10*, %class.Vector.10** %5, align 8
  %12 = call dereferenceable(24) %class.Vector.10* @_ZN6VectorIfEaSEf(%class.Vector.10* %11, float 0.000000e+00)
  store i32 0, i32* %7, align 4
  br label %13

; <label>:13:                                     ; preds = %85, %3
  %14 = load i32, i32* %7, align 4
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %88

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %19 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %18)
  %20 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %19, i32 0, i32 7
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %7, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %8, align 4
  br label %26

; <label>:26:                                     ; preds = %65, %17
  %27 = load i32, i32* %8, align 4
  %28 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %29 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %28)
  %30 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %29, i32 0, i32 7
  %31 = load i32*, i32** %30, align 8
  %32 = load i32, i32* %7, align 4
  %33 = add i32 %32, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %31, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp ult i32 %27, %36
  br i1 %37, label %38, label %68

; <label>:38:                                     ; preds = %26
  %39 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %40 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %39)
  %41 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %40, i32 0, i32 8
  %42 = load i32*, i32** %41, align 8
  %43 = load i32, i32* %8, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %42, i64 %44
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %9, align 4
  %47 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %48 = load double*, double** %47, align 8
  %49 = load i32, i32* %8, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds double, double* %48, i64 %50
  %52 = load double, double* %51, align 8
  %53 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %54 = load i32, i32* %7, align 4
  %55 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %53, i32 %54)
  %56 = fpext float %55 to double
  %57 = fmul double %52, %56
  %58 = load %class.Vector.10*, %class.Vector.10** %5, align 8
  %59 = load i32, i32* %9, align 4
  %60 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %58, i32 %59)
  %61 = load float, float* %60, align 4
  %62 = fpext float %61 to double
  %63 = fadd double %62, %57
  %64 = fptrunc double %63 to float
  store float %64, float* %60, align 4
  br label %65

; <label>:65:                                     ; preds = %38
  %66 = load i32, i32* %8, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %8, align 4
  br label %26

; <label>:68:                                     ; preds = %26
  %69 = load i32, i32* @x.213
  %70 = load i32, i32* @y.214
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %68, %originalBBalteredBB
  %77 = load i32, i32* @x.213
  %78 = load i32, i32* @y.214
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %85

; <label>:85:                                     ; preds = %originalBBpart2
  %86 = load i32, i32* %7, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %7, align 4
  br label %13

; <label>:88:                                     ; preds = %13
  %89 = load i32, i32* @x.213
  %90 = load i32, i32* @y.214
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %88, %originalBB1alteredBB
  %97 = load i32, i32* @x.213
  %98 = load i32, i32* @y.214
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %68
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %88
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector.10* @_ZN6VectorIfEaSEf(%class.Vector.10*, float) #0 comdat align 2 {
  %3 = load i32, i32* @x.215
  %4 = load i32, i32* @y.216
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Vector.10*, align 8
  %12 = alloca float, align 4
  store %class.Vector.10* %0, %class.Vector.10** %11, align 8
  store float %1, float* %12, align 4
  %13 = load %class.Vector.10*, %class.Vector.10** %11, align 8
  %14 = call float* @_ZN6VectorIfE5beginEv(%class.Vector.10* %13)
  %15 = call float* @_ZN6VectorIfE3endEv(%class.Vector.10* %13)
  call void @_ZSt4fillIPffEvT_S1_RKT0_(float* %14, float* %15, float* dereferenceable(4) %12)
  %16 = load i32, i32* @x.215
  %17 = load i32, i32* @y.216
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector.10* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %class.Vector.10*, align 8
  %25 = alloca float, align 4
  store %class.Vector.10* %0, %class.Vector.10** %24, align 8
  store float %1, float* %25, align 4
  %26 = load %class.Vector.10*, %class.Vector.10** %24, align 8
  %27 = call float* @_ZN6VectorIfE5beginEv(%class.Vector.10* %26)
  %28 = call float* @_ZN6VectorIfE3endEv(%class.Vector.10* %26)
  call void @_ZSt4fillIPffEvT_S1_RKT0_(float* %27, float* %28, float* dereferenceable(4) %25)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10*, i32) #5 comdat align 2 {
  %3 = alloca %class.Vector.10*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.10* %0, %class.Vector.10** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.10*, %class.Vector.10** %3, align 8
  %6 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %5, i32 0, i32 3
  %7 = load float*, float** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds float, float* %7, i64 %9
  ret float* %10
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9vmult_addI6VectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector.10*, align 8
  %6 = alloca %class.Vector.10*, align 8
  %7 = alloca i32, align 4
  %8 = alloca double*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca float*, align 8
  %11 = alloca i32, align 4
  %12 = alloca float, align 4
  %13 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector.10* %1, %class.Vector.10** %5, align 8
  store %class.Vector.10* %2, %class.Vector.10** %6, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %14)
  store i32 %15, i32* %7, align 4
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %19 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %18)
  %20 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %19, i32 0, i32 7
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds double, double* %17, i64 %24
  store double* %25, double** %8, align 8
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 8
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %31 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %30)
  %32 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %31, i32 0, i32 7
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %29, i64 %36
  store i32* %37, i32** %9, align 8
  %38 = load %class.Vector.10*, %class.Vector.10** %5, align 8
  %39 = call float* @_ZN6VectorIfE5beginEv(%class.Vector.10* %38)
  store float* %39, float** %10, align 8
  store i32 0, i32* %11, align 4
  br label %40

; <label>:40:                                     ; preds = %originalBBpart24, %3
  %41 = load i32, i32* %11, align 4
  %42 = load i32, i32* %7, align 4
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %44, label %118

; <label>:44:                                     ; preds = %40
  store float 0.000000e+00, float* %12, align 4
  %45 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %46 = load double*, double** %45, align 8
  %47 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %48 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %47)
  %49 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %48, i32 0, i32 7
  %50 = load i32*, i32** %49, align 8
  %51 = load i32, i32* %11, align 4
  %52 = add i32 %51, 1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %50, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds double, double* %46, i64 %56
  store double* %57, double** %13, align 8
  br label %58

; <label>:58:                                     ; preds = %78, %44
  %59 = load i32, i32* @x.219
  %60 = load i32, i32* @y.220
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %58, %originalBBalteredBB
  %67 = load double*, double** %8, align 8
  %68 = load double*, double** %13, align 8
  %69 = icmp ne double* %67, %68
  %70 = load i32, i32* @x.219
  %71 = load i32, i32* @y.220
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %69, label %78, label %93

; <label>:78:                                     ; preds = %originalBBpart2
  %79 = load double*, double** %8, align 8
  %80 = getelementptr inbounds double, double* %79, i32 1
  store double* %80, double** %8, align 8
  %81 = load double, double* %79, align 8
  %82 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %83 = load i32*, i32** %9, align 8
  %84 = getelementptr inbounds i32, i32* %83, i32 1
  store i32* %84, i32** %9, align 8
  %85 = load i32, i32* %83, align 4
  %86 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %82, i32 %85)
  %87 = fpext float %86 to double
  %88 = fmul double %81, %87
  %89 = load float, float* %12, align 4
  %90 = fpext float %89 to double
  %91 = fadd double %90, %88
  %92 = fptrunc double %91 to float
  store float %92, float* %12, align 4
  br label %58

; <label>:93:                                     ; preds = %originalBBpart2
  %94 = load float, float* %12, align 4
  %95 = load float*, float** %10, align 8
  %96 = getelementptr inbounds float, float* %95, i32 1
  store float* %96, float** %10, align 8
  %97 = load float, float* %95, align 4
  %98 = fadd float %97, %94
  store float %98, float* %95, align 4
  br label %99

; <label>:99:                                     ; preds = %93
  %100 = load i32, i32* @x.219
  %101 = load i32, i32* @y.220
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %99, %originalBB1alteredBB
  %108 = load i32, i32* %11, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %11, align 4
  %110 = load i32, i32* @x.219
  %111 = load i32, i32* @y.220
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %40

; <label>:118:                                    ; preds = %40
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %58
  %119 = load double*, double** %8, align 8
  %120 = load double*, double** %13, align 8
  %121 = icmp ne double* %119, %120
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %99
  %122 = load i32, i32* %11, align 4
  %_ = shl i32 %122, 1
  %_2 = sub i32 0, %122
  %gen = add i32 %_2, 1
  %123 = add i32 %122, 1
  store i32 %123, i32* %11, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE10Tvmult_addI6VectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24)) #0 comdat align 2 {
  %4 = load i32, i32* @x.221
  %5 = load i32, i32* @y.222
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca %class.Vector.10*, align 8
  %14 = alloca %class.Vector.10*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store %class.Vector.10* %1, %class.Vector.10** %13, align 8
  store %class.Vector.10* %2, %class.Vector.10** %14, align 8
  %18 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  store i32 0, i32* %15, align 4
  %19 = load i32, i32* @x.221
  %20 = load i32, i32* @y.222
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %99, %originalBBpart2
  %28 = load i32, i32* %15, align 4
  %29 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %18)
  %30 = icmp ult i32 %28, %29
  br i1 %30, label %31, label %102

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* @x.221
  %33 = load i32, i32* @y.222
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %41 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %40)
  %42 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %41, i32 0, i32 7
  %43 = load i32*, i32** %42, align 8
  %44 = load i32, i32* %15, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %16, align 4
  %48 = load i32, i32* @x.221
  %49 = load i32, i32* @y.222
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %56

; <label>:56:                                     ; preds = %95, %originalBBpart24
  %57 = load i32, i32* %16, align 4
  %58 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %59 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %58)
  %60 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %59, i32 0, i32 7
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %15, align 4
  %63 = add i32 %62, 1
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %61, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = icmp ult i32 %57, %66
  br i1 %67, label %68, label %98

; <label>:68:                                     ; preds = %56
  %69 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %70 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %69)
  %71 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %70, i32 0, i32 8
  %72 = load i32*, i32** %71, align 8
  %73 = load i32, i32* %16, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %17, align 4
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 2
  %78 = load double*, double** %77, align 8
  %79 = load i32, i32* %16, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds double, double* %78, i64 %80
  %82 = load double, double* %81, align 8
  %83 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %84 = load i32, i32* %15, align 4
  %85 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %83, i32 %84)
  %86 = fpext float %85 to double
  %87 = fmul double %82, %86
  %88 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %89 = load i32, i32* %17, align 4
  %90 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %88, i32 %89)
  %91 = load float, float* %90, align 4
  %92 = fpext float %91 to double
  %93 = fadd double %92, %87
  %94 = fptrunc double %93 to float
  store float %94, float* %90, align 4
  br label %95

; <label>:95:                                     ; preds = %68
  %96 = load i32, i32* %16, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %16, align 4
  br label %56

; <label>:98:                                     ; preds = %56
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* %15, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %15, align 4
  br label %27

; <label>:102:                                    ; preds = %27
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %103 = alloca %class.SparseMatrix*, align 8
  %104 = alloca %class.Vector.10*, align 8
  %105 = alloca %class.Vector.10*, align 8
  %106 = alloca i32, align 4
  %107 = alloca i32, align 4
  %108 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %103, align 8
  store %class.Vector.10* %1, %class.Vector.10** %104, align 8
  store %class.Vector.10* %2, %class.Vector.10** %105, align 8
  %109 = load %class.SparseMatrix*, %class.SparseMatrix** %103, align 8
  store i32 0, i32* %106, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %110 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %111 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %110)
  %112 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %111, i32 0, i32 7
  %113 = load i32*, i32** %112, align 8
  %114 = load i32, i32* %15, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %113, i64 %115
  %117 = load i32, i32* %116, align 4
  store i32 %117, i32* %16, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5vmultI11BlockVectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector* dereferenceable(64), %class.BlockVector* dereferenceable(64)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.BlockVector*, align 8
  %6 = alloca %class.BlockVector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca double*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.internal::BlockVectorIterators::Iterator", align 8
  %11 = alloca i32, align 4
  %12 = alloca float, align 4
  %13 = alloca double*, align 8
  %14 = alloca %"class.internal::BlockVectorIterators::Iterator", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.BlockVector* %1, %class.BlockVector** %5, align 8
  store %class.BlockVector* %2, %class.BlockVector** %6, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %16 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %15)
  store i32 %16, i32* %7, align 4
  %17 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %18 = load double*, double** %17, align 8
  %19 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %20 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %19)
  %21 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %20, i32 0, i32 7
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds double, double* %18, i64 %25
  store double* %26, double** %8, align 8
  %27 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %28 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %27)
  %29 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %28, i32 0, i32 8
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %32 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %31)
  %33 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %32, i32 0, i32 7
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %30, i64 %37
  store i32* %38, i32** %9, align 8
  %39 = load %class.BlockVector*, %class.BlockVector** %5, align 8
  call void @_ZN11BlockVectorIfE5beginEv(%"class.internal::BlockVectorIterators::Iterator"* sret %10, %class.BlockVector* %39)
  store i32 0, i32* %11, align 4
  br label %40

; <label>:40:                                     ; preds = %96, %3
  %41 = load i32, i32* %11, align 4
  %42 = load i32, i32* %7, align 4
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %44, label %99

; <label>:44:                                     ; preds = %40
  %45 = load i32, i32* @x.223
  %46 = load i32, i32* @y.224
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %44, %originalBBalteredBB
  store float 0.000000e+00, float* %12, align 4
  %53 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %54 = load double*, double** %53, align 8
  %55 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %56 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %55)
  %57 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %56, i32 0, i32 7
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %11, align 4
  %60 = add i32 %59, 1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %58, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds double, double* %54, i64 %64
  store double* %65, double** %13, align 8
  %66 = load i32, i32* @x.223
  %67 = load i32, i32* @y.224
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %74

; <label>:74:                                     ; preds = %78, %originalBBpart2
  %75 = load double*, double** %8, align 8
  %76 = load double*, double** %13, align 8
  %77 = icmp ne double* %75, %76
  br i1 %77, label %78, label %93

; <label>:78:                                     ; preds = %74
  %79 = load double*, double** %8, align 8
  %80 = getelementptr inbounds double, double* %79, i32 1
  store double* %80, double** %8, align 8
  %81 = load double, double* %79, align 8
  %82 = load %class.BlockVector*, %class.BlockVector** %6, align 8
  %83 = load i32*, i32** %9, align 8
  %84 = getelementptr inbounds i32, i32* %83, i32 1
  store i32* %84, i32** %9, align 8
  %85 = load i32, i32* %83, align 4
  %86 = call float @_ZNK11BlockVectorIfEclEj(%class.BlockVector* %82, i32 %85)
  %87 = fpext float %86 to double
  %88 = fmul double %81, %87
  %89 = load float, float* %12, align 4
  %90 = fpext float %89 to double
  %91 = fadd double %90, %88
  %92 = fptrunc double %91 to float
  store float %92, float* %12, align 4
  br label %74

; <label>:93:                                     ; preds = %74
  %94 = load float, float* %12, align 4
  call void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EEppEi(%"class.internal::BlockVectorIterators::Iterator"* sret %14, %"class.internal::BlockVectorIterators::Iterator"* %10, i32 0)
  %95 = call dereferenceable(4) float* @_ZNK8internal20BlockVectorIterators8IteratorIfLb0EEdeEv(%"class.internal::BlockVectorIterators::Iterator"* %14)
  store float %94, float* %95, align 4
  br label %96

; <label>:96:                                     ; preds = %93
  %97 = load i32, i32* %11, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %11, align 4
  br label %40

; <label>:99:                                     ; preds = %40
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %44
  store float 0.000000e+00, float* %12, align 4
  %100 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %101 = load double*, double** %100, align 8
  %102 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %103 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %102)
  %104 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %103, i32 0, i32 7
  %105 = load i32*, i32** %104, align 8
  %106 = load i32, i32* %11, align 4
  %_ = sub i32 %106, 1
  %gen = mul i32 %_, 1
  %_1 = shl i32 %106, 1
  %_2 = sub i32 %106, 1
  %gen3 = mul i32 %_2, 1
  %_4 = sub i32 %106, 1
  %gen5 = mul i32 %_4, 1
  %107 = add i32 %106, 1
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %105, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds double, double* %101, i64 %111
  store double* %112, double** %13, align 8
  br label %originalBB
}

declare void @_ZN11BlockVectorIfE5beginEv(%"class.internal::BlockVectorIterators::Iterator"* sret, %class.BlockVector*) #1

; Function Attrs: noinline uwtable
define linkonce_odr float @_ZNK11BlockVectorIfEclEj(%class.BlockVector*, i32) #0 comdat align 2 {
  %3 = alloca %class.BlockVector*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"struct.std::pair", align 4
  store %class.BlockVector* %0, %class.BlockVector** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.BlockVector*, %class.BlockVector** %3, align 8
  %7 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %6, i32 0, i32 1
  %8 = load i32, i32* %4, align 4
  %9 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %7, i32 %8)
  %10 = bitcast %"struct.std::pair"* %5 to i64*
  store i64 %9, i64* %10, align 4
  %11 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %6, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = call dereferenceable(24) %class.Vector.10* @_ZNKSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector"* %11, i64 %14)
  %16 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %15, i32 %17)
  ret float %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EEppEi(%"class.internal::BlockVectorIterators::Iterator"* noalias sret, %"class.internal::BlockVectorIterators::Iterator"*, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.227
  %5 = load i32, i32* @y.228
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::BlockVectorIterators::Iterator"*, align 8
  %13 = alloca i32, align 4
  store %"class.internal::BlockVectorIterators::Iterator"* %1, %"class.internal::BlockVectorIterators::Iterator"** %12, align 8
  store i32 %2, i32* %13, align 4
  %14 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %12, align 8
  call void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EEC2ERKS2_(%"class.internal::BlockVectorIterators::Iterator"* %0, %"class.internal::BlockVectorIterators::Iterator"* dereferenceable(32) %14)
  call void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EE12move_forwardEv(%"class.internal::BlockVectorIterators::Iterator"* %14)
  %15 = load i32, i32* @x.227
  %16 = load i32, i32* @y.228
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %23 = alloca %"class.internal::BlockVectorIterators::Iterator"*, align 8
  %24 = alloca i32, align 4
  store %"class.internal::BlockVectorIterators::Iterator"* %1, %"class.internal::BlockVectorIterators::Iterator"** %23, align 8
  store i32 %2, i32* %24, align 4
  %25 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %23, align 8
  call void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EEC2ERKS2_(%"class.internal::BlockVectorIterators::Iterator"* %0, %"class.internal::BlockVectorIterators::Iterator"* dereferenceable(32) %25)
  call void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EE12move_forwardEv(%"class.internal::BlockVectorIterators::Iterator"* %25)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) float* @_ZNK8internal20BlockVectorIterators8IteratorIfLb0EEdeEv(%"class.internal::BlockVectorIterators::Iterator"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.229
  %3 = load i32, i32* @y.230
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.internal::BlockVectorIterators::Iterator"*, align 8
  %11 = alloca float*, align 8
  store %"class.internal::BlockVectorIterators::Iterator"* %0, %"class.internal::BlockVectorIterators::Iterator"** %10, align 8
  %12 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %10, align 8
  %13 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %12, i32 0, i32 0
  %14 = load %class.BlockVector*, %class.BlockVector** %13, align 8
  %15 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %12, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = call dereferenceable(24) %class.Vector.10* @_ZN11BlockVectorIfE5blockEj(%class.BlockVector* %14, i32 %16)
  %18 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %12, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %17, i32 %19)
  store float* %20, float** %11, align 8
  %21 = load float*, float** %11, align 8
  %22 = load i32, i32* @x.229
  %23 = load i32, i32* @y.230
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float* %21

originalBBalteredBB:                              ; preds = %originalBB, %1
  %30 = alloca %"class.internal::BlockVectorIterators::Iterator"*, align 8
  %31 = alloca float*, align 8
  store %"class.internal::BlockVectorIterators::Iterator"* %0, %"class.internal::BlockVectorIterators::Iterator"** %30, align 8
  %32 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %30, align 8
  %33 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %32, i32 0, i32 0
  %34 = load %class.BlockVector*, %class.BlockVector** %33, align 8
  %35 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %32, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = call dereferenceable(24) %class.Vector.10* @_ZN11BlockVectorIfE5blockEj(%class.BlockVector* %34, i32 %36)
  %38 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %32, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %37, i32 %39)
  store float* %40, float** %31, align 8
  %41 = load float*, float** %31, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE6TvmultI11BlockVectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector* dereferenceable(64), %class.BlockVector* dereferenceable(64)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.BlockVector*, align 8
  %6 = alloca %class.BlockVector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.BlockVector* %1, %class.BlockVector** %5, align 8
  store %class.BlockVector* %2, %class.BlockVector** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = load %class.BlockVector*, %class.BlockVector** %5, align 8
  %12 = call dereferenceable(64) %class.BlockVector* @_ZN11BlockVectorIfEaSEf(%class.BlockVector* %11, float 0.000000e+00)
  store i32 0, i32* %7, align 4
  br label %13

; <label>:13:                                     ; preds = %originalBBpart233, %3
  %14 = load i32, i32* %7, align 4
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %136

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* @x.231
  %19 = load i32, i32* @y.232
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 7
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %7, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %8, align 4
  %34 = load i32, i32* @x.231
  %35 = load i32, i32* @y.232
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %113, %originalBBpart2
  %43 = load i32, i32* @x.231
  %44 = load i32, i32* @y.232
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* %8, align 4
  %52 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %53 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %52)
  %54 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %53, i32 0, i32 7
  %55 = load i32*, i32** %54, align 8
  %56 = load i32, i32* %7, align 4
  %57 = add i32 %56, 1
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %55, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %51, %60
  %62 = load i32, i32* @x.231
  %63 = load i32, i32* @y.232
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %61, label %70, label %116

; <label>:70:                                     ; preds = %originalBBpart24
  %71 = load i32, i32* @x.231
  %72 = load i32, i32* @y.232
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %80 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %79)
  %81 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %80, i32 0, i32 8
  %82 = load i32*, i32** %81, align 8
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %82, i64 %84
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %9, align 4
  %87 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %88 = load double*, double** %87, align 8
  %89 = load i32, i32* %8, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds double, double* %88, i64 %90
  %92 = load double, double* %91, align 8
  %93 = load %class.BlockVector*, %class.BlockVector** %6, align 8
  %94 = load i32, i32* %7, align 4
  %95 = call float @_ZNK11BlockVectorIfEclEj(%class.BlockVector* %93, i32 %94)
  %96 = fpext float %95 to double
  %97 = fmul double %92, %96
  %98 = load %class.BlockVector*, %class.BlockVector** %5, align 8
  %99 = load i32, i32* %9, align 4
  %100 = call dereferenceable(4) float* @_ZN11BlockVectorIfEclEj(%class.BlockVector* %98, i32 %99)
  %101 = load float, float* %100, align 4
  %102 = fpext float %101 to double
  %103 = fadd double %102, %97
  %104 = fptrunc double %103 to float
  store float %104, float* %100, align 4
  %105 = load i32, i32* @x.231
  %106 = load i32, i32* @y.232
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart218, label %originalBB6alteredBB

originalBBpart218:                                ; preds = %originalBB6
  br label %113

; <label>:113:                                    ; preds = %originalBBpart218
  %114 = load i32, i32* %8, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %8, align 4
  br label %42

; <label>:116:                                    ; preds = %originalBBpart24
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = load i32, i32* @x.231
  %119 = load i32, i32* @y.232
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %117, %originalBB20alteredBB
  %126 = load i32, i32* %7, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %7, align 4
  %128 = load i32, i32* @x.231
  %129 = load i32, i32* @y.232
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart233, label %originalBB20alteredBB

originalBBpart233:                                ; preds = %originalBB20
  br label %13

; <label>:136:                                    ; preds = %13
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %17
  %137 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %138 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %137)
  %139 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %138, i32 0, i32 7
  %140 = load i32*, i32** %139, align 8
  %141 = load i32, i32* %7, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i32, i32* %140, i64 %142
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %145 = load i32, i32* %8, align 4
  %146 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %147 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %146)
  %148 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %147, i32 0, i32 7
  %149 = load i32*, i32** %148, align 8
  %150 = load i32, i32* %7, align 4
  %_ = shl i32 %150, 1
  %_2 = sub i32 %150, 1
  %gen = mul i32 %_2, 1
  %151 = add i32 %150, 1
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %149, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = icmp ult i32 %145, %154
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  %156 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %157 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %156)
  %158 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %157, i32 0, i32 8
  %159 = load i32*, i32** %158, align 8
  %160 = load i32, i32* %8, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i32, i32* %159, i64 %161
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %9, align 4
  %164 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %165 = load double*, double** %164, align 8
  %166 = load i32, i32* %8, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds double, double* %165, i64 %167
  %169 = load double, double* %168, align 8
  %170 = load %class.BlockVector*, %class.BlockVector** %6, align 8
  %171 = load i32, i32* %7, align 4
  %172 = call float @_ZNK11BlockVectorIfEclEj(%class.BlockVector* %170, i32 %171)
  %173 = fpext float %172 to double
  %174 = fmul double %169, %173
  %175 = load %class.BlockVector*, %class.BlockVector** %5, align 8
  %176 = load i32, i32* %9, align 4
  %177 = call dereferenceable(4) float* @_ZN11BlockVectorIfEclEj(%class.BlockVector* %175, i32 %176)
  %178 = load float, float* %177, align 4
  %179 = fpext float %178 to double
  %_7 = fsub double %179, %174
  %gen8 = fmul double %_7, %174
  %_9 = fsub double %179, %174
  %gen10 = fmul double %_9, %174
  %_11 = fsub double %179, %174
  %gen12 = fmul double %_11, %174
  %_13 = fsub double %179, %174
  %gen14 = fmul double %_13, %174
  %_15 = fsub double %179, %174
  %gen16 = fmul double %_15, %174
  %180 = fadd double %179, %174
  %181 = fptrunc double %180 to float
  store float %181, float* %177, align 4
  br label %originalBB6

originalBB20alteredBB:                            ; preds = %originalBB20, %117
  %182 = load i32, i32* %7, align 4
  %_21 = sub i32 0, %182
  %gen22 = add i32 %_21, 1
  %_23 = sub i32 %182, 1
  %gen24 = mul i32 %_23, 1
  %_25 = shl i32 %182, 1
  %_26 = sub i32 %182, 1
  %gen27 = mul i32 %_26, 1
  %_28 = shl i32 %182, 1
  %_29 = shl i32 %182, 1
  %_30 = sub i32 0, %182
  %gen31 = add i32 %_30, 1
  %183 = add i32 %182, 1
  store i32 %183, i32* %7, align 4
  br label %originalBB20
}

declare dereferenceable(64) %class.BlockVector* @_ZN11BlockVectorIfEaSEf(%class.BlockVector*, float) #1

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) float* @_ZN11BlockVectorIfEclEj(%class.BlockVector*, i32) #0 comdat align 2 {
  %3 = alloca %class.BlockVector*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"struct.std::pair", align 4
  store %class.BlockVector* %0, %class.BlockVector** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.BlockVector*, %class.BlockVector** %3, align 8
  %7 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %6, i32 0, i32 1
  %8 = load i32, i32* %4, align 4
  %9 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %7, i32 %8)
  %10 = bitcast %"struct.std::pair"* %5 to i64*
  store i64 %9, i64* %10, align 4
  %11 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %6, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = call dereferenceable(24) %class.Vector.10* @_ZNSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector"* %11, i64 %14)
  %16 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %15, i32 %17)
  ret float* %18
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9vmult_addI11BlockVectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector* dereferenceable(64), %class.BlockVector* dereferenceable(64)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.BlockVector*, align 8
  %6 = alloca %class.BlockVector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca double*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.internal::BlockVectorIterators::Iterator", align 8
  %11 = alloca i32, align 4
  %12 = alloca float, align 4
  %13 = alloca double*, align 8
  %14 = alloca %"class.internal::BlockVectorIterators::Iterator", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.BlockVector* %1, %class.BlockVector** %5, align 8
  store %class.BlockVector* %2, %class.BlockVector** %6, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %16 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %15)
  store i32 %16, i32* %7, align 4
  %17 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %18 = load double*, double** %17, align 8
  %19 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %20 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %19)
  %21 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %20, i32 0, i32 7
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds double, double* %18, i64 %25
  store double* %26, double** %8, align 8
  %27 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %28 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %27)
  %29 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %28, i32 0, i32 8
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %32 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %31)
  %33 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %32, i32 0, i32 7
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %30, i64 %37
  store i32* %38, i32** %9, align 8
  %39 = load %class.BlockVector*, %class.BlockVector** %5, align 8
  call void @_ZN11BlockVectorIfE5beginEv(%"class.internal::BlockVectorIterators::Iterator"* sret %10, %class.BlockVector* %39)
  store i32 0, i32* %11, align 4
  br label %40

; <label>:40:                                     ; preds = %130, %3
  %41 = load i32, i32* %11, align 4
  %42 = load i32, i32* %7, align 4
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %44, label %133

; <label>:44:                                     ; preds = %40
  %45 = load i32, i32* @x.235
  %46 = load i32, i32* @y.236
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %44, %originalBBalteredBB
  store float 0.000000e+00, float* %12, align 4
  %53 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %54 = load double*, double** %53, align 8
  %55 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %56 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %55)
  %57 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %56, i32 0, i32 7
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %11, align 4
  %60 = add i32 %59, 1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %58, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds double, double* %54, i64 %64
  store double* %65, double** %13, align 8
  %66 = load i32, i32* @x.235
  %67 = load i32, i32* @y.236
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %74

; <label>:74:                                     ; preds = %94, %originalBBpart2
  %75 = load i32, i32* @x.235
  %76 = load i32, i32* @y.236
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %74, %originalBB6alteredBB
  %83 = load double*, double** %8, align 8
  %84 = load double*, double** %13, align 8
  %85 = icmp ne double* %83, %84
  %86 = load i32, i32* @x.235
  %87 = load i32, i32* @y.236
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %85, label %94, label %109

; <label>:94:                                     ; preds = %originalBBpart28
  %95 = load double*, double** %8, align 8
  %96 = getelementptr inbounds double, double* %95, i32 1
  store double* %96, double** %8, align 8
  %97 = load double, double* %95, align 8
  %98 = load %class.BlockVector*, %class.BlockVector** %6, align 8
  %99 = load i32*, i32** %9, align 8
  %100 = getelementptr inbounds i32, i32* %99, i32 1
  store i32* %100, i32** %9, align 8
  %101 = load i32, i32* %99, align 4
  %102 = call float @_ZNK11BlockVectorIfEclEj(%class.BlockVector* %98, i32 %101)
  %103 = fpext float %102 to double
  %104 = fmul double %97, %103
  %105 = load float, float* %12, align 4
  %106 = fpext float %105 to double
  %107 = fadd double %106, %104
  %108 = fptrunc double %107 to float
  store float %108, float* %12, align 4
  br label %74

; <label>:109:                                    ; preds = %originalBBpart28
  %110 = load i32, i32* @x.235
  %111 = load i32, i32* @y.236
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %109, %originalBB10alteredBB
  %118 = load float, float* %12, align 4
  call void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EEppEi(%"class.internal::BlockVectorIterators::Iterator"* sret %14, %"class.internal::BlockVectorIterators::Iterator"* %10, i32 0)
  %119 = call dereferenceable(4) float* @_ZNK8internal20BlockVectorIterators8IteratorIfLb0EEdeEv(%"class.internal::BlockVectorIterators::Iterator"* %14)
  %120 = load float, float* %119, align 4
  %121 = fadd float %120, %118
  store float %121, float* %119, align 4
  %122 = load i32, i32* @x.235
  %123 = load i32, i32* @y.236
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart220, label %originalBB10alteredBB

originalBBpart220:                                ; preds = %originalBB10
  br label %130

; <label>:130:                                    ; preds = %originalBBpart220
  %131 = load i32, i32* %11, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %11, align 4
  br label %40

; <label>:133:                                    ; preds = %40
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %44
  store float 0.000000e+00, float* %12, align 4
  %134 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %135 = load double*, double** %134, align 8
  %136 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %137 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %136)
  %138 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %137, i32 0, i32 7
  %139 = load i32*, i32** %138, align 8
  %140 = load i32, i32* %11, align 4
  %_ = sub i32 %140, 1
  %gen = mul i32 %_, 1
  %_1 = shl i32 %140, 1
  %_2 = shl i32 %140, 1
  %_3 = sub i32 0, %140
  %gen4 = add i32 %_3, 1
  %_5 = shl i32 %140, 1
  %141 = add i32 %140, 1
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i32, i32* %139, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds double, double* %135, i64 %145
  store double* %146, double** %13, align 8
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  %147 = load double*, double** %8, align 8
  %148 = load double*, double** %13, align 8
  %149 = icmp ne double* %147, %148
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %109
  %150 = load float, float* %12, align 4
  call void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EEppEi(%"class.internal::BlockVectorIterators::Iterator"* sret %14, %"class.internal::BlockVectorIterators::Iterator"* %10, i32 0)
  %151 = call dereferenceable(4) float* @_ZNK8internal20BlockVectorIterators8IteratorIfLb0EEdeEv(%"class.internal::BlockVectorIterators::Iterator"* %14)
  %152 = load float, float* %151, align 4
  %_11 = fsub float %152, %150
  %gen12 = fmul float %_11, %150
  %_13 = fsub float %152, %150
  %gen14 = fmul float %_13, %150
  %_15 = fsub float -0.000000e+00, %152
  %gen16 = fadd float %_15, %150
  %_17 = fsub float -0.000000e+00, %152
  %gen18 = fadd float %_17, %150
  %153 = fadd float %152, %150
  store float %153, float* %151, align 4
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE10Tvmult_addI11BlockVectorIfES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector* dereferenceable(64), %class.BlockVector* dereferenceable(64)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.BlockVector*, align 8
  %6 = alloca %class.BlockVector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.BlockVector* %1, %class.BlockVector** %5, align 8
  store %class.BlockVector* %2, %class.BlockVector** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  store i32 0, i32* %7, align 4
  br label %11

; <label>:11:                                     ; preds = %115, %3
  %12 = load i32, i32* @x.237
  %13 = load i32, i32* @y.238
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %7, align 4
  %21 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %22 = icmp ult i32 %20, %21
  %23 = load i32, i32* @x.237
  %24 = load i32, i32* @y.238
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %118

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %33 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %32)
  %34 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %33, i32 0, i32 7
  %35 = load i32*, i32** %34, align 8
  %36 = load i32, i32* %7, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %8, align 4
  br label %40

; <label>:40:                                     ; preds = %111, %31
  %41 = load i32, i32* @x.237
  %42 = load i32, i32* @y.238
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i32, i32* %8, align 4
  %50 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %51 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %50)
  %52 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %51, i32 0, i32 7
  %53 = load i32*, i32** %52, align 8
  %54 = load i32, i32* %7, align 4
  %55 = add i32 %54, 1
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %53, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = icmp ult i32 %49, %58
  %60 = load i32, i32* @x.237
  %61 = load i32, i32* @y.238
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart214, label %originalBB1alteredBB

originalBBpart214:                                ; preds = %originalBB1
  br i1 %59, label %68, label %114

; <label>:68:                                     ; preds = %originalBBpart214
  %69 = load i32, i32* @x.237
  %70 = load i32, i32* @y.238
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %68, %originalBB16alteredBB
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %78 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %77)
  %79 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %78, i32 0, i32 8
  %80 = load i32*, i32** %79, align 8
  %81 = load i32, i32* %8, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %80, i64 %82
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %9, align 4
  %85 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %86 = load double*, double** %85, align 8
  %87 = load i32, i32* %8, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds double, double* %86, i64 %88
  %90 = load double, double* %89, align 8
  %91 = load %class.BlockVector*, %class.BlockVector** %6, align 8
  %92 = load i32, i32* %7, align 4
  %93 = call float @_ZNK11BlockVectorIfEclEj(%class.BlockVector* %91, i32 %92)
  %94 = fpext float %93 to double
  %95 = fmul double %90, %94
  %96 = load %class.BlockVector*, %class.BlockVector** %5, align 8
  %97 = load i32, i32* %9, align 4
  %98 = call dereferenceable(4) float* @_ZN11BlockVectorIfEclEj(%class.BlockVector* %96, i32 %97)
  %99 = load float, float* %98, align 4
  %100 = fpext float %99 to double
  %101 = fadd double %100, %95
  %102 = fptrunc double %101 to float
  store float %102, float* %98, align 4
  %103 = load i32, i32* @x.237
  %104 = load i32, i32* @y.238
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart228, label %originalBB16alteredBB

originalBBpart228:                                ; preds = %originalBB16
  br label %111

; <label>:111:                                    ; preds = %originalBBpart228
  %112 = load i32, i32* %8, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %8, align 4
  br label %40

; <label>:114:                                    ; preds = %originalBBpart214
  br label %115

; <label>:115:                                    ; preds = %114
  %116 = load i32, i32* %7, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %7, align 4
  br label %11

; <label>:118:                                    ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %119 = load i32, i32* %7, align 4
  %120 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %121 = icmp ult i32 %119, %120
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %122 = load i32, i32* %8, align 4
  %123 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %124 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %123)
  %125 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %124, i32 0, i32 7
  %126 = load i32*, i32** %125, align 8
  %127 = load i32, i32* %7, align 4
  %_ = sub i32 %127, 1
  %gen = mul i32 %_, 1
  %_2 = sub i32 0, %127
  %gen3 = add i32 %_2, 1
  %_4 = shl i32 %127, 1
  %_5 = sub i32 0, %127
  %gen6 = add i32 %_5, 1
  %_7 = sub i32 %127, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 %127, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 %127, 1
  %gen12 = mul i32 %_11, 1
  %128 = add i32 %127, 1
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %126, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = icmp ult i32 %122, %131
  br label %originalBB1

originalBB16alteredBB:                            ; preds = %originalBB16, %68
  %133 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %134 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %133)
  %135 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %134, i32 0, i32 8
  %136 = load i32*, i32** %135, align 8
  %137 = load i32, i32* %8, align 4
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds i32, i32* %136, i64 %138
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %9, align 4
  %141 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %142 = load double*, double** %141, align 8
  %143 = load i32, i32* %8, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds double, double* %142, i64 %144
  %146 = load double, double* %145, align 8
  %147 = load %class.BlockVector*, %class.BlockVector** %6, align 8
  %148 = load i32, i32* %7, align 4
  %149 = call float @_ZNK11BlockVectorIfEclEj(%class.BlockVector* %147, i32 %148)
  %150 = fpext float %149 to double
  %_17 = fsub double %146, %150
  %gen18 = fmul double %_17, %150
  %_19 = fsub double %146, %150
  %gen20 = fmul double %_19, %150
  %_21 = fsub double -0.000000e+00, %146
  %gen22 = fadd double %_21, %150
  %_23 = fsub double -0.000000e+00, %146
  %gen24 = fadd double %_23, %150
  %151 = fmul double %146, %150
  %152 = load %class.BlockVector*, %class.BlockVector** %5, align 8
  %153 = load i32, i32* %9, align 4
  %154 = call dereferenceable(4) float* @_ZN11BlockVectorIfEclEj(%class.BlockVector* %152, i32 %153)
  %155 = load float, float* %154, align 4
  %156 = fpext float %155 to double
  %_25 = fsub double -0.000000e+00, %156
  %gen26 = fadd double %_25, %151
  %157 = fadd double %156, %151
  %158 = fptrunc double %157 to float
  store float %158, float* %154, align 4
  br label %originalBB16
}

; Function Attrs: noinline uwtable
define weak_odr float @_ZNK12SparseMatrixIdE18matrix_norm_squareIfEET_RK6VectorIS2_E(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %class.SparseMatrix*, align 8
  %4 = alloca %class.Vector.10*, align 8
  %5 = alloca i32, align 4
  %6 = alloca float, align 4
  %7 = alloca double*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca float, align 4
  %11 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %3, align 8
  store %class.Vector.10* %1, %class.Vector.10** %4, align 8
  %12 = load %class.SparseMatrix*, %class.SparseMatrix** %3, align 8
  %13 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %12)
  store i32 %13, i32* %5, align 4
  store float 0.000000e+00, float* %6, align 4
  %14 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %15 = load double*, double** %14, align 8
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %17 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %16)
  %18 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %17, i32 0, i32 7
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds double, double* %15, i64 %22
  store double* %23, double** %7, align 8
  %24 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %25 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %24)
  %26 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %25, i32 0, i32 8
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %29 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %28)
  %30 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %29, i32 0, i32 7
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %27, i64 %34
  store i32* %35, i32** %8, align 8
  store i32 0, i32* %9, align 4
  br label %36

; <label>:36:                                     ; preds = %129, %2
  %37 = load i32, i32* %9, align 4
  %38 = load i32, i32* %5, align 4
  %39 = icmp ult i32 %37, %38
  br i1 %39, label %40, label %132

; <label>:40:                                     ; preds = %36
  %41 = load i32, i32* @x.239
  %42 = load i32, i32* @y.240
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %40, %originalBBalteredBB
  store float 0.000000e+00, float* %10, align 4
  %49 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %50 = load double*, double** %49, align 8
  %51 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %52 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %51)
  %53 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %52, i32 0, i32 7
  %54 = load i32*, i32** %53, align 8
  %55 = load i32, i32* %9, align 4
  %56 = add i32 %55, 1
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %54, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds double, double* %50, i64 %60
  store double* %61, double** %11, align 8
  %62 = load i32, i32* @x.239
  %63 = load i32, i32* @y.240
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %70

; <label>:70:                                     ; preds = %originalBBpart218, %originalBBpart2
  %71 = load i32, i32* @x.239
  %72 = load i32, i32* @y.240
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %70, %originalBB1alteredBB
  %79 = load double*, double** %7, align 8
  %80 = load double*, double** %11, align 8
  %81 = icmp ne double* %79, %80
  %82 = load i32, i32* @x.239
  %83 = load i32, i32* @y.240
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %81, label %90, label %121

; <label>:90:                                     ; preds = %originalBBpart24
  %91 = load i32, i32* @x.239
  %92 = load i32, i32* @y.240
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %90, %originalBB6alteredBB
  %99 = load double*, double** %7, align 8
  %100 = getelementptr inbounds double, double* %99, i32 1
  store double* %100, double** %7, align 8
  %101 = load double, double* %99, align 8
  %102 = load %class.Vector.10*, %class.Vector.10** %4, align 8
  %103 = load i32*, i32** %8, align 8
  %104 = getelementptr inbounds i32, i32* %103, i32 1
  store i32* %104, i32** %8, align 8
  %105 = load i32, i32* %103, align 4
  %106 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %102, i32 %105)
  %107 = fpext float %106 to double
  %108 = fmul double %101, %107
  %109 = load float, float* %10, align 4
  %110 = fpext float %109 to double
  %111 = fadd double %110, %108
  %112 = fptrunc double %111 to float
  store float %112, float* %10, align 4
  %113 = load i32, i32* @x.239
  %114 = load i32, i32* @y.240
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart218, label %originalBB6alteredBB

originalBBpart218:                                ; preds = %originalBB6
  br label %70

; <label>:121:                                    ; preds = %originalBBpart24
  %122 = load float, float* %10, align 4
  %123 = load %class.Vector.10*, %class.Vector.10** %4, align 8
  %124 = load i32, i32* %9, align 4
  %125 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %123, i32 %124)
  %126 = fmul float %122, %125
  %127 = load float, float* %6, align 4
  %128 = fadd float %127, %126
  store float %128, float* %6, align 4
  br label %129

; <label>:129:                                    ; preds = %121
  %130 = load i32, i32* %9, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %9, align 4
  br label %36

; <label>:132:                                    ; preds = %36
  %133 = load i32, i32* @x.239
  %134 = load i32, i32* @y.240
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %132, %originalBB20alteredBB
  %141 = load float, float* %6, align 4
  %142 = load i32, i32* @x.239
  %143 = load i32, i32* @y.240
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  ret float %141

originalBBalteredBB:                              ; preds = %originalBB, %40
  store float 0.000000e+00, float* %10, align 4
  %150 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %151 = load double*, double** %150, align 8
  %152 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %153 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %152)
  %154 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %153, i32 0, i32 7
  %155 = load i32*, i32** %154, align 8
  %156 = load i32, i32* %9, align 4
  %157 = add i32 %156, 1
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %155, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds double, double* %151, i64 %161
  store double* %162, double** %11, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %70
  %163 = load double*, double** %7, align 8
  %164 = load double*, double** %11, align 8
  %165 = icmp ne double* %163, %164
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  %166 = load double*, double** %7, align 8
  %167 = getelementptr inbounds double, double* %166, i32 1
  store double* %167, double** %7, align 8
  %168 = load double, double* %166, align 8
  %169 = load %class.Vector.10*, %class.Vector.10** %4, align 8
  %170 = load i32*, i32** %8, align 8
  %171 = getelementptr inbounds i32, i32* %170, i32 1
  store i32* %171, i32** %8, align 8
  %172 = load i32, i32* %170, align 4
  %173 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %169, i32 %172)
  %174 = fpext float %173 to double
  %_ = fsub double -0.000000e+00, %168
  %gen = fadd double %_, %174
  %_7 = fsub double %168, %174
  %gen8 = fmul double %_7, %174
  %_9 = fsub double -0.000000e+00, %168
  %gen10 = fadd double %_9, %174
  %175 = fmul double %168, %174
  %176 = load float, float* %10, align 4
  %177 = fpext float %176 to double
  %_11 = fsub double %177, %175
  %gen12 = fmul double %_11, %175
  %_13 = fsub double %177, %175
  %gen14 = fmul double %_13, %175
  %_15 = fsub double -0.000000e+00, %177
  %gen16 = fadd double %_15, %175
  %178 = fadd double %177, %175
  %179 = fptrunc double %178 to float
  store float %179, float* %10, align 4
  br label %originalBB6

originalBB20alteredBB:                            ; preds = %originalBB20, %132
  %180 = load float, float* %6, align 4
  br label %originalBB20
}

; Function Attrs: noinline uwtable
define weak_odr float @_ZNK12SparseMatrixIdE21matrix_scalar_productIfEET_RK6VectorIS2_ES6_(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24)) #0 comdat align 2 {
  %4 = load i32, i32* @x.241
  %5 = load i32, i32* @y.242
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca %class.Vector.10*, align 8
  %14 = alloca %class.Vector.10*, align 8
  %15 = alloca i32, align 4
  %16 = alloca float, align 4
  %17 = alloca double*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32, align 4
  %20 = alloca float, align 4
  %21 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store %class.Vector.10* %1, %class.Vector.10** %13, align 8
  store %class.Vector.10* %2, %class.Vector.10** %14, align 8
  %22 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  %23 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %22)
  store i32 %23, i32* %15, align 4
  store float 0.000000e+00, float* %16, align 4
  %24 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %25 = load double*, double** %24, align 8
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 7
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds double, double* %25, i64 %32
  store double* %33, double** %17, align 8
  %34 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %35 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %34)
  %36 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %35, i32 0, i32 8
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %39 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %38)
  %40 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %39, i32 0, i32 7
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %37, i64 %44
  store i32* %45, i32** %18, align 8
  store i32 0, i32* %19, align 4
  %46 = load i32, i32* @x.241
  %47 = load i32, i32* @y.242
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %54

; <label>:54:                                     ; preds = %147, %originalBBpart2
  %55 = load i32, i32* @x.241
  %56 = load i32, i32* @y.242
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = load i32, i32* %19, align 4
  %64 = load i32, i32* %15, align 4
  %65 = icmp ult i32 %63, %64
  %66 = load i32, i32* @x.241
  %67 = load i32, i32* @y.242
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %65, label %74, label %150

; <label>:74:                                     ; preds = %originalBBpart24
  store float 0.000000e+00, float* %20, align 4
  %75 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %76 = load double*, double** %75, align 8
  %77 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %78 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %77)
  %79 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %78, i32 0, i32 7
  %80 = load i32*, i32** %79, align 8
  %81 = load i32, i32* %19, align 4
  %82 = add i32 %81, 1
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %80, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds double, double* %76, i64 %86
  store double* %87, double** %21, align 8
  br label %88

; <label>:88:                                     ; preds = %originalBBpart214, %74
  %89 = load double*, double** %17, align 8
  %90 = load double*, double** %21, align 8
  %91 = icmp ne double* %89, %90
  br i1 %91, label %92, label %123

; <label>:92:                                     ; preds = %88
  %93 = load i32, i32* @x.241
  %94 = load i32, i32* @y.242
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %92, %originalBB6alteredBB
  %101 = load double*, double** %17, align 8
  %102 = getelementptr inbounds double, double* %101, i32 1
  store double* %102, double** %17, align 8
  %103 = load double, double* %101, align 8
  %104 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %105 = load i32*, i32** %18, align 8
  %106 = getelementptr inbounds i32, i32* %105, i32 1
  store i32* %106, i32** %18, align 8
  %107 = load i32, i32* %105, align 4
  %108 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %104, i32 %107)
  %109 = fpext float %108 to double
  %110 = fmul double %103, %109
  %111 = load float, float* %20, align 4
  %112 = fpext float %111 to double
  %113 = fadd double %112, %110
  %114 = fptrunc double %113 to float
  store float %114, float* %20, align 4
  %115 = load i32, i32* @x.241
  %116 = load i32, i32* @y.242
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart214, label %originalBB6alteredBB

originalBBpart214:                                ; preds = %originalBB6
  br label %88

; <label>:123:                                    ; preds = %88
  %124 = load i32, i32* @x.241
  %125 = load i32, i32* @y.242
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %123, %originalBB16alteredBB
  %132 = load float, float* %20, align 4
  %133 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %134 = load i32, i32* %19, align 4
  %135 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %133, i32 %134)
  %136 = fmul float %132, %135
  %137 = load float, float* %16, align 4
  %138 = fadd float %137, %136
  store float %138, float* %16, align 4
  %139 = load i32, i32* @x.241
  %140 = load i32, i32* @y.242
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart230, label %originalBB16alteredBB

originalBBpart230:                                ; preds = %originalBB16
  br label %147

; <label>:147:                                    ; preds = %originalBBpart230
  %148 = load i32, i32* %19, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %19, align 4
  br label %54

; <label>:150:                                    ; preds = %originalBBpart24
  %151 = load float, float* %16, align 4
  ret float %151

originalBBalteredBB:                              ; preds = %originalBB, %3
  %152 = alloca %class.SparseMatrix*, align 8
  %153 = alloca %class.Vector.10*, align 8
  %154 = alloca %class.Vector.10*, align 8
  %155 = alloca i32, align 4
  %156 = alloca float, align 4
  %157 = alloca double*, align 8
  %158 = alloca i32*, align 8
  %159 = alloca i32, align 4
  %160 = alloca float, align 4
  %161 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %152, align 8
  store %class.Vector.10* %1, %class.Vector.10** %153, align 8
  store %class.Vector.10* %2, %class.Vector.10** %154, align 8
  %162 = load %class.SparseMatrix*, %class.SparseMatrix** %152, align 8
  %163 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %162)
  store i32 %163, i32* %155, align 4
  store float 0.000000e+00, float* %156, align 4
  %164 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %162, i32 0, i32 2
  %165 = load double*, double** %164, align 8
  %166 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %162, i32 0, i32 1
  %167 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %166)
  %168 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %167, i32 0, i32 7
  %169 = load i32*, i32** %168, align 8
  %170 = getelementptr inbounds i32, i32* %169, i64 0
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds double, double* %165, i64 %172
  store double* %173, double** %157, align 8
  %174 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %162, i32 0, i32 1
  %175 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %174)
  %176 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %175, i32 0, i32 8
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %162, i32 0, i32 1
  %179 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %178)
  %180 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %179, i32 0, i32 7
  %181 = load i32*, i32** %180, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 0
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %177, i64 %184
  store i32* %185, i32** %158, align 8
  store i32 0, i32* %159, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  %186 = load i32, i32* %19, align 4
  %187 = load i32, i32* %15, align 4
  %188 = icmp ult i32 %186, %187
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %92
  %189 = load double*, double** %17, align 8
  %190 = getelementptr inbounds double, double* %189, i32 1
  store double* %190, double** %17, align 8
  %191 = load double, double* %189, align 8
  %192 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %193 = load i32*, i32** %18, align 8
  %194 = getelementptr inbounds i32, i32* %193, i32 1
  store i32* %194, i32** %18, align 8
  %195 = load i32, i32* %193, align 4
  %196 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %192, i32 %195)
  %197 = fpext float %196 to double
  %_ = fsub double -0.000000e+00, %191
  %gen = fadd double %_, %197
  %_7 = fsub double %191, %197
  %gen8 = fmul double %_7, %197
  %_9 = fsub double %191, %197
  %gen10 = fmul double %_9, %197
  %198 = fmul double %191, %197
  %199 = load float, float* %20, align 4
  %200 = fpext float %199 to double
  %_11 = fsub double -0.000000e+00, %200
  %gen12 = fadd double %_11, %198
  %201 = fadd double %200, %198
  %202 = fptrunc double %201 to float
  store float %202, float* %20, align 4
  br label %originalBB6

originalBB16alteredBB:                            ; preds = %originalBB16, %123
  %203 = load float, float* %20, align 4
  %204 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %205 = load i32, i32* %19, align 4
  %206 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %204, i32 %205)
  %_17 = fsub float %203, %206
  %gen18 = fmul float %_17, %206
  %_19 = fsub float %203, %206
  %gen20 = fmul float %_19, %206
  %_21 = fsub float %203, %206
  %gen22 = fmul float %_21, %206
  %_23 = fsub float -0.000000e+00, %203
  %gen24 = fadd float %_23, %206
  %_25 = fsub float %203, %206
  %gen26 = fmul float %_25, %206
  %207 = fmul float %203, %206
  %208 = load float, float* %16, align 4
  %_27 = fsub float %208, %207
  %gen28 = fmul float %_27, %207
  %209 = fadd float %208, %207
  store float %209, float* %16, align 4
  br label %originalBB16
}

; Function Attrs: noinline uwtable
define weak_odr float @_ZNK12SparseMatrixIdE8residualIfEET_R6VectorIS2_ERKS4_S7_(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector.10*, align 8
  %7 = alloca %class.Vector.10*, align 8
  %8 = alloca %class.Vector.10*, align 8
  %9 = alloca i32, align 4
  %10 = alloca float, align 4
  %11 = alloca i32, align 4
  %12 = alloca float, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector.10* %1, %class.Vector.10** %6, align 8
  store %class.Vector.10* %2, %class.Vector.10** %7, align 8
  store %class.Vector.10* %3, %class.Vector.10** %8, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %16 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %15)
  store i32 %16, i32* %9, align 4
  store float 0.000000e+00, float* %10, align 4
  store i32 0, i32* %11, align 4
  br label %17

; <label>:17:                                     ; preds = %136, %4
  %18 = load i32, i32* %11, align 4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %21, label %139

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @x.243
  %23 = load i32, i32* @y.244
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load %class.Vector.10*, %class.Vector.10** %8, align 8
  %31 = load i32, i32* %11, align 4
  %32 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %30, i32 %31)
  store float %32, float* %12, align 4
  %33 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %34 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %33)
  %35 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %34, i32 0, i32 7
  %36 = load i32*, i32** %35, align 8
  %37 = load i32, i32* %11, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %13, align 4
  %41 = load i32, i32* @x.243
  %42 = load i32, i32* @y.244
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart214, %originalBBpart2
  %50 = load i32, i32* @x.243
  %51 = load i32, i32* @y.244
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* %13, align 4
  %59 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %60 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %59)
  %61 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %60, i32 0, i32 7
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %11, align 4
  %64 = add i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %62, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = icmp ult i32 %58, %67
  %69 = load i32, i32* @x.243
  %70 = load i32, i32* @y.244
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart25, label %originalBB1alteredBB

originalBBpart25:                                 ; preds = %originalBB1
  br i1 %68, label %77, label %120

; <label>:77:                                     ; preds = %originalBBpart25
  %78 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %79 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %78)
  %80 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %79, i32 0, i32 8
  %81 = load i32*, i32** %80, align 8
  %82 = load i32, i32* %13, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %81, i64 %83
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %14, align 4
  %86 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %87 = load double*, double** %86, align 8
  %88 = load i32, i32* %13, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds double, double* %87, i64 %89
  %91 = load double, double* %90, align 8
  %92 = load %class.Vector.10*, %class.Vector.10** %7, align 8
  %93 = load i32, i32* %14, align 4
  %94 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %92, i32 %93)
  %95 = fpext float %94 to double
  %96 = fmul double %91, %95
  %97 = load float, float* %12, align 4
  %98 = fpext float %97 to double
  %99 = fsub double %98, %96
  %100 = fptrunc double %99 to float
  store float %100, float* %12, align 4
  br label %101

; <label>:101:                                    ; preds = %77
  %102 = load i32, i32* @x.243
  %103 = load i32, i32* @y.244
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %101, %originalBB7alteredBB
  %110 = load i32, i32* %13, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %13, align 4
  %112 = load i32, i32* @x.243
  %113 = load i32, i32* @y.244
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart214, label %originalBB7alteredBB

originalBBpart214:                                ; preds = %originalBB7
  br label %49

; <label>:120:                                    ; preds = %originalBBpart25
  %121 = load float, float* %12, align 4
  %122 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %123 = load i32, i32* %11, align 4
  %124 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %122, i32 %123)
  store float %121, float* %124, align 4
  %125 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %126 = load i32, i32* %11, align 4
  %127 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %125, i32 %126)
  %128 = load float, float* %127, align 4
  %129 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %130 = load i32, i32* %11, align 4
  %131 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %129, i32 %130)
  %132 = load float, float* %131, align 4
  %133 = fmul float %128, %132
  %134 = load float, float* %10, align 4
  %135 = fadd float %134, %133
  store float %135, float* %10, align 4
  br label %136

; <label>:136:                                    ; preds = %120
  %137 = load i32, i32* %11, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %11, align 4
  br label %17

; <label>:139:                                    ; preds = %17
  %140 = load float, float* %10, align 4
  %141 = call float @_ZSt4sqrtf(float %140)
  ret float %141

originalBBalteredBB:                              ; preds = %originalBB, %21
  %142 = load %class.Vector.10*, %class.Vector.10** %8, align 8
  %143 = load i32, i32* %11, align 4
  %144 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %142, i32 %143)
  store float %144, float* %12, align 4
  %145 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %146 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %145)
  %147 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %146, i32 0, i32 7
  %148 = load i32*, i32** %147, align 8
  %149 = load i32, i32* %11, align 4
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %148, i64 %150
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %13, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  %153 = load i32, i32* %13, align 4
  %154 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %155 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %154)
  %156 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %155, i32 0, i32 7
  %157 = load i32*, i32** %156, align 8
  %158 = load i32, i32* %11, align 4
  %_ = sub i32 0, %158
  %gen = add i32 %_, 1
  %_2 = sub i32 0, %158
  %gen3 = add i32 %_2, 1
  %159 = add i32 %158, 1
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds i32, i32* %157, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = icmp ult i32 %153, %162
  br label %originalBB1

originalBB7alteredBB:                             ; preds = %originalBB7, %101
  %164 = load i32, i32* %13, align 4
  %_8 = sub i32 %164, 1
  %gen9 = mul i32 %_8, 1
  %_10 = shl i32 %164, 1
  %_11 = sub i32 0, %164
  %gen12 = add i32 %_11, 1
  %165 = add i32 %164, 1
  store i32 %165, i32* %13, align 4
  br label %originalBB7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float @_ZSt4sqrtf(float) #5 comdat {
  %2 = load i32, i32* @x.245
  %3 = load i32, i32* @y.246
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca float, align 4
  store float %0, float* %10, align 4
  %11 = load float, float* %10, align 4
  %12 = call float @sqrtf(float %11) #6
  %13 = load i32, i32* @x.245
  %14 = load i32, i32* @y.246
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca float, align 4
  store float %0, float* %21, align 4
  %22 = load float, float* %21, align 4
  %23 = call float @sqrtf(float %22) #6
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE17precondition_SSORIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector.10*, align 8
  %7 = alloca %class.Vector.10*, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca float*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector.10* %1, %class.Vector.10** %6, align 8
  store %class.Vector.10* %2, %class.Vector.10** %7, align 8
  store double %3, double* %8, align 8
  %20 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %21 = load %class.Vector.10*, %class.Vector.10** %7, align 8
  %22 = call i32 @_ZNK6VectorIfE4sizeEv(%class.Vector.10* %21)
  store i32 %22, i32* %9, align 4
  %23 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %24 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %23)
  %25 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %24, i32 0, i32 7
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  store i32* %27, i32** %10, align 8
  %28 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %29 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %28, i32 0)
  store float* %29, float** %11, align 8
  store i32 0, i32* %12, align 4
  br label %30

; <label>:30:                                     ; preds = %150, %4
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %9, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %34, label %157

; <label>:34:                                     ; preds = %30
  %35 = load %class.Vector.10*, %class.Vector.10** %7, align 8
  %36 = load i32, i32* %12, align 4
  %37 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %35, i32 %36)
  %38 = load float*, float** %11, align 8
  store float %37, float* %38, align 4
  %39 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %40 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %39)
  %41 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %40, i32 0, i32 8
  %42 = load i32*, i32** %41, align 8
  %43 = load i32*, i32** %10, align 8
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %42, i64 %46
  %48 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %49 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %48)
  %50 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %49, i32 0, i32 8
  %51 = load i32*, i32** %50, align 8
  %52 = load i32*, i32** %10, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %51, i64 %55
  %57 = call i32* @_ZN15SparsityPattern21optimized_lower_boundEPKjS1_RS0_(i32* %47, i32* %56, i32* dereferenceable(4) %12)
  %58 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %59 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %58)
  %60 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %59, i32 0, i32 8
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 0
  %63 = ptrtoint i32* %57 to i64
  %64 = ptrtoint i32* %62 to i64
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 4
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %13, align 4
  %68 = load i32*, i32** %10, align 8
  %69 = load i32, i32* %68, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %14, align 4
  br label %71

; <label>:71:                                     ; preds = %originalBBpart214, %34
  %72 = load i32, i32* %14, align 4
  %73 = load i32, i32* %13, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %75, label %137

; <label>:75:                                     ; preds = %71
  %76 = load i32, i32* @x.247
  %77 = load i32, i32* @y.248
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %75, %originalBBalteredBB
  %84 = load double, double* %8, align 8
  %85 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %86 = load double*, double** %85, align 8
  %87 = load i32, i32* %14, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds double, double* %86, i64 %88
  %90 = load double, double* %89, align 8
  %91 = fmul double %84, %90
  %92 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %93 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %94 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %93)
  %95 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %94, i32 0, i32 8
  %96 = load i32*, i32** %95, align 8
  %97 = load i32, i32* %14, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %92, i32 %100)
  %102 = load float, float* %101, align 4
  %103 = fpext float %102 to double
  %104 = fmul double %91, %103
  %105 = load float*, float** %11, align 8
  %106 = load float, float* %105, align 4
  %107 = fpext float %106 to double
  %108 = fsub double %107, %104
  %109 = fptrunc double %108 to float
  store float %109, float* %105, align 4
  %110 = load i32, i32* @x.247
  %111 = load i32, i32* @y.248
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %118

; <label>:118:                                    ; preds = %originalBBpart2
  %119 = load i32, i32* @x.247
  %120 = load i32, i32* @y.248
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %118, %originalBB3alteredBB
  %127 = load i32, i32* %14, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %14, align 4
  %129 = load i32, i32* @x.247
  %130 = load i32, i32* @y.248
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart214, label %originalBB3alteredBB

originalBBpart214:                                ; preds = %originalBB3
  br label %71

; <label>:137:                                    ; preds = %71
  %138 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %139 = load double*, double** %138, align 8
  %140 = load i32*, i32** %10, align 8
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds double, double* %139, i64 %142
  %144 = load double, double* %143, align 8
  %145 = load float*, float** %11, align 8
  %146 = load float, float* %145, align 4
  %147 = fpext float %146 to double
  %148 = fdiv double %147, %144
  %149 = fptrunc double %148 to float
  store float %149, float* %145, align 4
  br label %150

; <label>:150:                                    ; preds = %137
  %151 = load i32, i32* %12, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %12, align 4
  %153 = load float*, float** %11, align 8
  %154 = getelementptr inbounds float, float* %153, i32 1
  store float* %154, float** %11, align 8
  %155 = load i32*, i32** %10, align 8
  %156 = getelementptr inbounds i32, i32* %155, i32 1
  store i32* %156, i32** %10, align 8
  br label %30

; <label>:157:                                    ; preds = %30
  %158 = load i32, i32* @x.247
  %159 = load i32, i32* @y.248
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %157, %originalBB16alteredBB
  %166 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %167 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %166)
  %168 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %167, i32 0, i32 7
  %169 = load i32*, i32** %168, align 8
  %170 = getelementptr inbounds i32, i32* %169, i64 0
  store i32* %170, i32** %10, align 8
  %171 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %172 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %171, i32 0)
  store float* %172, float** %11, align 8
  store i32 0, i32* %15, align 4
  %173 = load i32, i32* @x.247
  %174 = load i32, i32* @y.248
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %181

; <label>:181:                                    ; preds = %201, %originalBBpart218
  %182 = load i32, i32* %15, align 4
  %183 = load i32, i32* %9, align 4
  %184 = icmp ult i32 %182, %183
  br i1 %184, label %185, label %208

; <label>:185:                                    ; preds = %181
  %186 = load double, double* %8, align 8
  %187 = fsub double 2.000000e+00, %186
  %188 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %189 = load double*, double** %188, align 8
  %190 = load i32*, i32** %10, align 8
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds double, double* %189, i64 %192
  %194 = load double, double* %193, align 8
  %195 = fmul double %187, %194
  %196 = load float*, float** %11, align 8
  %197 = load float, float* %196, align 4
  %198 = fpext float %197 to double
  %199 = fmul double %198, %195
  %200 = fptrunc double %199 to float
  store float %200, float* %196, align 4
  br label %201

; <label>:201:                                    ; preds = %185
  %202 = load i32, i32* %15, align 4
  %203 = add i32 %202, 1
  store i32 %203, i32* %15, align 4
  %204 = load i32*, i32** %10, align 8
  %205 = getelementptr inbounds i32, i32* %204, i32 1
  store i32* %205, i32** %10, align 8
  %206 = load float*, float** %11, align 8
  %207 = getelementptr inbounds float, float* %206, i32 1
  store float* %207, float** %11, align 8
  br label %181

; <label>:208:                                    ; preds = %181
  %209 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %210 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %209)
  %211 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %210, i32 0, i32 7
  %212 = load i32*, i32** %211, align 8
  %213 = load i32, i32* %9, align 4
  %214 = sub i32 %213, 1
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i32, i32* %212, i64 %215
  store i32* %216, i32** %10, align 8
  %217 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %218 = load i32, i32* %9, align 4
  %219 = sub i32 %218, 1
  %220 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %217, i32 %219)
  store float* %220, float** %11, align 8
  %221 = load i32, i32* %9, align 4
  %222 = sub i32 %221, 1
  store i32 %222, i32* %16, align 4
  br label %223

; <label>:223:                                    ; preds = %319, %208
  %224 = load i32, i32* %16, align 4
  %225 = icmp sge i32 %224, 0
  br i1 %225, label %226, label %326

; <label>:226:                                    ; preds = %223
  %227 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %228 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %227)
  %229 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %228, i32 0, i32 8
  %230 = load i32*, i32** %229, align 8
  %231 = load i32*, i32** %10, align 8
  %232 = load i32, i32* %231, align 4
  %233 = add i32 %232, 1
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds i32, i32* %230, i64 %234
  %236 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %237 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %236)
  %238 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %237, i32 0, i32 8
  %239 = load i32*, i32** %238, align 8
  %240 = load i32*, i32** %10, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 1
  %242 = load i32, i32* %241, align 4
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds i32, i32* %239, i64 %243
  %245 = load i32, i32* %16, align 4
  store i32 %245, i32* %18, align 4
  %246 = call i32* @_ZN15SparsityPattern21optimized_lower_boundEPKjS1_RS0_(i32* %235, i32* %244, i32* dereferenceable(4) %18)
  %247 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %248 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %247)
  %249 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %248, i32 0, i32 8
  %250 = load i32*, i32** %249, align 8
  %251 = getelementptr inbounds i32, i32* %250, i64 0
  %252 = ptrtoint i32* %246 to i64
  %253 = ptrtoint i32* %251 to i64
  %254 = sub i64 %252, %253
  %255 = sdiv exact i64 %254, 4
  %256 = trunc i64 %255 to i32
  store i32 %256, i32* %17, align 4
  %257 = load i32, i32* %17, align 4
  store i32 %257, i32* %19, align 4
  br label %258

; <label>:258:                                    ; preds = %303, %226
  %259 = load i32, i32* %19, align 4
  %260 = load i32*, i32** %10, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 1
  %262 = load i32, i32* %261, align 4
  %263 = icmp ult i32 %259, %262
  br i1 %263, label %264, label %306

; <label>:264:                                    ; preds = %258
  %265 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %266 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %265)
  %267 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %266, i32 0, i32 8
  %268 = load i32*, i32** %267, align 8
  %269 = load i32, i32* %19, align 4
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds i32, i32* %268, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = load i32, i32* %16, align 4
  %274 = icmp ugt i32 %272, %273
  br i1 %274, label %275, label %302

; <label>:275:                                    ; preds = %264
  %276 = load double, double* %8, align 8
  %277 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %278 = load double*, double** %277, align 8
  %279 = load i32, i32* %19, align 4
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds double, double* %278, i64 %280
  %282 = load double, double* %281, align 8
  %283 = fmul double %276, %282
  %284 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %285 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %286 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %285)
  %287 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %286, i32 0, i32 8
  %288 = load i32*, i32** %287, align 8
  %289 = load i32, i32* %19, align 4
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds i32, i32* %288, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %284, i32 %292)
  %294 = load float, float* %293, align 4
  %295 = fpext float %294 to double
  %296 = fmul double %283, %295
  %297 = load float*, float** %11, align 8
  %298 = load float, float* %297, align 4
  %299 = fpext float %298 to double
  %300 = fsub double %299, %296
  %301 = fptrunc double %300 to float
  store float %301, float* %297, align 4
  br label %302

; <label>:302:                                    ; preds = %275, %264
  br label %303

; <label>:303:                                    ; preds = %302
  %304 = load i32, i32* %19, align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %19, align 4
  br label %258

; <label>:306:                                    ; preds = %258
  %307 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %308 = load double*, double** %307, align 8
  %309 = load i32*, i32** %10, align 8
  %310 = load i32, i32* %309, align 4
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds double, double* %308, i64 %311
  %313 = load double, double* %312, align 8
  %314 = load float*, float** %11, align 8
  %315 = load float, float* %314, align 4
  %316 = fpext float %315 to double
  %317 = fdiv double %316, %313
  %318 = fptrunc double %317 to float
  store float %318, float* %314, align 4
  br label %319

; <label>:319:                                    ; preds = %306
  %320 = load i32, i32* %16, align 4
  %321 = add nsw i32 %320, -1
  store i32 %321, i32* %16, align 4
  %322 = load i32*, i32** %10, align 8
  %323 = getelementptr inbounds i32, i32* %322, i32 -1
  store i32* %323, i32** %10, align 8
  %324 = load float*, float** %11, align 8
  %325 = getelementptr inbounds float, float* %324, i32 -1
  store float* %325, float** %11, align 8
  br label %223

; <label>:326:                                    ; preds = %223
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %75
  %327 = load double, double* %8, align 8
  %328 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %329 = load double*, double** %328, align 8
  %330 = load i32, i32* %14, align 4
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds double, double* %329, i64 %331
  %333 = load double, double* %332, align 8
  %_ = fsub double -0.000000e+00, %327
  %gen = fadd double %_, %333
  %334 = fmul double %327, %333
  %335 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %336 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %337 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %336)
  %338 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %337, i32 0, i32 8
  %339 = load i32*, i32** %338, align 8
  %340 = load i32, i32* %14, align 4
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds i32, i32* %339, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %335, i32 %343)
  %345 = load float, float* %344, align 4
  %346 = fpext float %345 to double
  %_1 = fsub double %334, %346
  %gen2 = fmul double %_1, %346
  %347 = fmul double %334, %346
  %348 = load float*, float** %11, align 8
  %349 = load float, float* %348, align 4
  %350 = fpext float %349 to double
  %351 = fsub double %350, %347
  %352 = fptrunc double %351 to float
  store float %352, float* %348, align 4
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %118
  %353 = load i32, i32* %14, align 4
  %_4 = shl i32 %353, 1
  %_5 = sub i32 %353, 1
  %gen6 = mul i32 %_5, 1
  %_7 = sub i32 %353, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 %353, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 %353, 1
  %gen12 = mul i32 %_11, 1
  %354 = add i32 %353, 1
  store i32 %354, i32* %14, align 4
  br label %originalBB3

originalBB16alteredBB:                            ; preds = %originalBB16, %157
  %355 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %356 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %355)
  %357 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %356, i32 0, i32 7
  %358 = load i32*, i32** %357, align 8
  %359 = getelementptr inbounds i32, i32* %358, i64 0
  store i32* %359, i32** %10, align 8
  %360 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %361 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %360, i32 0)
  store float* %361, float** %11, align 8
  store i32 0, i32* %15, align 4
  br label %originalBB16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK6VectorIfE4sizeEv(%class.Vector.10*) #5 comdat align 2 {
  %2 = alloca %class.Vector.10*, align 8
  store %class.Vector.10* %0, %class.Vector.10** %2, align 8
  %3 = load %class.Vector.10*, %class.Vector.10** %2, align 8
  %4 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZN15SparsityPattern21optimized_lower_boundEPKjS1_RS0_(i32*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %11 = load i32*, i32** %6, align 8
  %12 = load i32*, i32** %5, align 8
  %13 = ptrtoint i32* %11 to i64
  %14 = ptrtoint i32* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 4
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %8, align 4
  %18 = load i32, i32* %8, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

; <label>:20:                                     ; preds = %3
  %21 = load i32*, i32** %5, align 8
  store i32* %21, i32** %4, align 8
  br label %273

; <label>:22:                                     ; preds = %3
  br label %23

; <label>:23:                                     ; preds = %originalBBpart232, %22
  %24 = load i32, i32* %8, align 4
  %25 = icmp ult i32 %24, 8
  br i1 %25, label %26, label %235

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* %8, align 4
  switch i32 %27, label %201 [
    i32 7, label %28
    i32 6, label %71
    i32 5, label %82
    i32 4, label %125
    i32 3, label %136
    i32 2, label %163
    i32 1, label %190
  ]

; <label>:28:                                     ; preds = %26
  %29 = load i32, i32* @x.251
  %30 = load i32, i32* @y.252
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i32*, i32** %5, align 8
  %38 = load i32, i32* %37, align 4
  %39 = load i32*, i32** %7, align 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp uge i32 %38, %40
  %42 = load i32, i32* @x.251
  %43 = load i32, i32* @y.252
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %50, label %68

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i32, i32* @x.251
  %52 = load i32, i32* @y.252
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %59 = load i32*, i32** %5, align 8
  store i32* %59, i32** %4, align 8
  %60 = load i32, i32* @x.251
  %61 = load i32, i32* @y.252
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %273

; <label>:68:                                     ; preds = %originalBBpart2
  %69 = load i32*, i32** %5, align 8
  %70 = getelementptr inbounds i32, i32* %69, i32 1
  store i32* %70, i32** %5, align 8
  br label %71

; <label>:71:                                     ; preds = %68, %26
  %72 = load i32*, i32** %5, align 8
  %73 = load i32, i32* %72, align 4
  %74 = load i32*, i32** %7, align 8
  %75 = load i32, i32* %74, align 4
  %76 = icmp uge i32 %73, %75
  br i1 %76, label %77, label %79

; <label>:77:                                     ; preds = %71
  %78 = load i32*, i32** %5, align 8
  store i32* %78, i32** %4, align 8
  br label %273

; <label>:79:                                     ; preds = %71
  %80 = load i32*, i32** %5, align 8
  %81 = getelementptr inbounds i32, i32* %80, i32 1
  store i32* %81, i32** %5, align 8
  br label %82

; <label>:82:                                     ; preds = %79, %26
  %83 = load i32, i32* @x.251
  %84 = load i32, i32* @y.252
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %82, %originalBB6alteredBB
  %91 = load i32*, i32** %5, align 8
  %92 = load i32, i32* %91, align 4
  %93 = load i32*, i32** %7, align 8
  %94 = load i32, i32* %93, align 4
  %95 = icmp uge i32 %92, %94
  %96 = load i32, i32* @x.251
  %97 = load i32, i32* @y.252
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %95, label %104, label %106

; <label>:104:                                    ; preds = %originalBBpart28
  %105 = load i32*, i32** %5, align 8
  store i32* %105, i32** %4, align 8
  br label %273

; <label>:106:                                    ; preds = %originalBBpart28
  %107 = load i32, i32* @x.251
  %108 = load i32, i32* @y.252
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %106, %originalBB10alteredBB
  %115 = load i32*, i32** %5, align 8
  %116 = getelementptr inbounds i32, i32* %115, i32 1
  store i32* %116, i32** %5, align 8
  %117 = load i32, i32* @x.251
  %118 = load i32, i32* @y.252
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %125

; <label>:125:                                    ; preds = %originalBBpart212, %26
  %126 = load i32*, i32** %5, align 8
  %127 = load i32, i32* %126, align 4
  %128 = load i32*, i32** %7, align 8
  %129 = load i32, i32* %128, align 4
  %130 = icmp uge i32 %127, %129
  br i1 %130, label %131, label %133

; <label>:131:                                    ; preds = %125
  %132 = load i32*, i32** %5, align 8
  store i32* %132, i32** %4, align 8
  br label %273

; <label>:133:                                    ; preds = %125
  %134 = load i32*, i32** %5, align 8
  %135 = getelementptr inbounds i32, i32* %134, i32 1
  store i32* %135, i32** %5, align 8
  br label %136

; <label>:136:                                    ; preds = %133, %26
  %137 = load i32*, i32** %5, align 8
  %138 = load i32, i32* %137, align 4
  %139 = load i32*, i32** %7, align 8
  %140 = load i32, i32* %139, align 4
  %141 = icmp uge i32 %138, %140
  br i1 %141, label %142, label %144

; <label>:142:                                    ; preds = %136
  %143 = load i32*, i32** %5, align 8
  store i32* %143, i32** %4, align 8
  br label %273

; <label>:144:                                    ; preds = %136
  %145 = load i32, i32* @x.251
  %146 = load i32, i32* @y.252
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %144, %originalBB14alteredBB
  %153 = load i32*, i32** %5, align 8
  %154 = getelementptr inbounds i32, i32* %153, i32 1
  store i32* %154, i32** %5, align 8
  %155 = load i32, i32* @x.251
  %156 = load i32, i32* @y.252
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %163

; <label>:163:                                    ; preds = %originalBBpart216, %26
  %164 = load i32*, i32** %5, align 8
  %165 = load i32, i32* %164, align 4
  %166 = load i32*, i32** %7, align 8
  %167 = load i32, i32* %166, align 4
  %168 = icmp uge i32 %165, %167
  br i1 %168, label %169, label %187

; <label>:169:                                    ; preds = %163
  %170 = load i32, i32* @x.251
  %171 = load i32, i32* @y.252
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %169, %originalBB18alteredBB
  %178 = load i32*, i32** %5, align 8
  store i32* %178, i32** %4, align 8
  %179 = load i32, i32* @x.251
  %180 = load i32, i32* @y.252
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %273

; <label>:187:                                    ; preds = %163
  %188 = load i32*, i32** %5, align 8
  %189 = getelementptr inbounds i32, i32* %188, i32 1
  store i32* %189, i32** %5, align 8
  br label %190

; <label>:190:                                    ; preds = %187, %26
  %191 = load i32*, i32** %5, align 8
  %192 = load i32, i32* %191, align 4
  %193 = load i32*, i32** %7, align 8
  %194 = load i32, i32* %193, align 4
  %195 = icmp uge i32 %192, %194
  br i1 %195, label %196, label %198

; <label>:196:                                    ; preds = %190
  %197 = load i32*, i32** %5, align 8
  store i32* %197, i32** %4, align 8
  br label %273

; <label>:198:                                    ; preds = %190
  %199 = load i32*, i32** %5, align 8
  %200 = getelementptr inbounds i32, i32* %199, i64 1
  store i32* %200, i32** %4, align 8
  br label %273

; <label>:201:                                    ; preds = %26
  %202 = load i32, i32* @x.251
  %203 = load i32, i32* @y.252
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %201, %originalBB22alteredBB
  %210 = load i32, i32* @x.251
  %211 = load i32, i32* @y.252
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %218

; <label>:218:                                    ; preds = %originalBBpart224
  %219 = load i32, i32* @x.251
  %220 = load i32, i32* @y.252
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %218, %originalBB26alteredBB
  %227 = load i32, i32* @x.251
  %228 = load i32, i32* @y.252
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %235

; <label>:235:                                    ; preds = %originalBBpart228, %23
  %236 = load i32, i32* %8, align 4
  %237 = lshr i32 %236, 1
  store i32 %237, i32* %9, align 4
  %238 = load i32*, i32** %5, align 8
  %239 = load i32, i32* %9, align 4
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds i32, i32* %238, i64 %240
  store i32* %241, i32** %10, align 8
  %242 = load i32*, i32** %10, align 8
  %243 = load i32, i32* %242, align 4
  %244 = load i32*, i32** %7, align 8
  %245 = load i32, i32* %244, align 4
  %246 = icmp ult i32 %243, %245
  br i1 %246, label %247, label %254

; <label>:247:                                    ; preds = %235
  %248 = load i32*, i32** %10, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 1
  store i32* %249, i32** %5, align 8
  %250 = load i32, i32* %9, align 4
  %251 = add i32 %250, 1
  %252 = load i32, i32* %8, align 4
  %253 = sub i32 %252, %251
  store i32 %253, i32* %8, align 4
  br label %256

; <label>:254:                                    ; preds = %235
  %255 = load i32, i32* %9, align 4
  store i32 %255, i32* %8, align 4
  br label %256

; <label>:256:                                    ; preds = %254, %247
  %257 = load i32, i32* @x.251
  %258 = load i32, i32* @y.252
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %256, %originalBB30alteredBB
  %265 = load i32, i32* @x.251
  %266 = load i32, i32* @y.252
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %23

; <label>:273:                                    ; preds = %198, %196, %originalBBpart220, %142, %131, %104, %77, %originalBBpart24, %20
  %274 = load i32*, i32** %4, align 8
  ret i32* %274

originalBBalteredBB:                              ; preds = %originalBB, %28
  %275 = load i32*, i32** %5, align 8
  %276 = load i32, i32* %275, align 4
  %277 = load i32*, i32** %7, align 8
  %278 = load i32, i32* %277, align 4
  %279 = icmp uge i32 %276, %278
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %280 = load i32*, i32** %5, align 8
  store i32* %280, i32** %4, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %82
  %281 = load i32*, i32** %5, align 8
  %282 = load i32, i32* %281, align 4
  %283 = load i32*, i32** %7, align 8
  %284 = load i32, i32* %283, align 4
  %285 = icmp uge i32 %282, %284
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %106
  %286 = load i32*, i32** %5, align 8
  %287 = getelementptr inbounds i32, i32* %286, i32 1
  store i32* %287, i32** %5, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %144
  %288 = load i32*, i32** %5, align 8
  %289 = getelementptr inbounds i32, i32* %288, i32 1
  store i32* %289, i32** %5, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %169
  %290 = load i32*, i32** %5, align 8
  store i32* %290, i32** %4, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %201
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %218
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %256
  br label %originalBB30
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE16precondition_SORIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %5 = load i32, i32* @x.253
  %6 = load i32, i32* @y.254
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector.10*, align 8
  %15 = alloca %class.Vector.10*, align 8
  %16 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector.10* %1, %class.Vector.10** %14, align 8
  store %class.Vector.10* %2, %class.Vector.10** %15, align 8
  store double %3, double* %16, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %18 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %19 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %20 = call dereferenceable(24) %class.Vector.10* @_ZN6VectorIfEaSERKS0_(%class.Vector.10* %19, %class.Vector.10* dereferenceable(24) %18)
  %21 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %22 = load double, double* %16, align 8
  call void @_ZNK12SparseMatrixIdE3SORIfEEvR6VectorIT_Ed(%class.SparseMatrix* %17, %class.Vector.10* dereferenceable(24) %21, double %22)
  %23 = load i32, i32* @x.253
  %24 = load i32, i32* @y.254
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %31 = alloca %class.SparseMatrix*, align 8
  %32 = alloca %class.Vector.10*, align 8
  %33 = alloca %class.Vector.10*, align 8
  %34 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %31, align 8
  store %class.Vector.10* %1, %class.Vector.10** %32, align 8
  store %class.Vector.10* %2, %class.Vector.10** %33, align 8
  store double %3, double* %34, align 8
  %35 = load %class.SparseMatrix*, %class.SparseMatrix** %31, align 8
  %36 = load %class.Vector.10*, %class.Vector.10** %33, align 8
  %37 = load %class.Vector.10*, %class.Vector.10** %32, align 8
  %38 = call dereferenceable(24) %class.Vector.10* @_ZN6VectorIfEaSERKS0_(%class.Vector.10* %37, %class.Vector.10* dereferenceable(24) %36)
  %39 = load %class.Vector.10*, %class.Vector.10** %32, align 8
  %40 = load double, double* %34, align 8
  call void @_ZNK12SparseMatrixIdE3SORIfEEvR6VectorIT_Ed(%class.SparseMatrix* %35, %class.Vector.10* dereferenceable(24) %39, double %40)
  br label %originalBB
}

declare dereferenceable(24) %class.Vector.10* @_ZN6VectorIfEaSERKS0_(%class.Vector.10*, %class.Vector.10* dereferenceable(24)) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE3SORIfEEvR6VectorIT_Ed(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %4 = load i32, i32* @x.255
  %5 = load i32, i32* @y.256
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca %class.Vector.10*, align 8
  %14 = alloca double, align 8
  %15 = alloca i32, align 4
  %16 = alloca float, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store %class.Vector.10* %1, %class.Vector.10** %13, align 8
  store double %2, double* %14, align 8
  %19 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  store i32 0, i32* %15, align 4
  %20 = load i32, i32* @x.255
  %21 = load i32, i32* @y.256
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %145, %originalBBpart2
  %29 = load i32, i32* %15, align 4
  %30 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %19)
  %31 = icmp ult i32 %29, %30
  br i1 %31, label %32, label %148

; <label>:32:                                     ; preds = %28
  %33 = load i32, i32* @x.255
  %34 = load i32, i32* @y.256
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %42 = load i32, i32* %15, align 4
  %43 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %41, i32 %42)
  %44 = load float, float* %43, align 4
  store float %44, float* %16, align 4
  %45 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %19, i32 0, i32 1
  %46 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %45)
  %47 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %46, i32 0, i32 7
  %48 = load i32*, i32** %47, align 8
  %49 = load i32, i32* %15, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %48, i64 %50
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %17, align 4
  %53 = load i32, i32* @x.255
  %54 = load i32, i32* @y.256
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %61

; <label>:61:                                     ; preds = %originalBBpart210, %originalBBpart24
  %62 = load i32, i32* %17, align 4
  %63 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %19, i32 0, i32 1
  %64 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %63)
  %65 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %64, i32 0, i32 7
  %66 = load i32*, i32** %65, align 8
  %67 = load i32, i32* %15, align 4
  %68 = add i32 %67, 1
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = icmp ult i32 %62, %71
  br i1 %72, label %73, label %122

; <label>:73:                                     ; preds = %61
  %74 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %19, i32 0, i32 1
  %75 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %74)
  %76 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %75, i32 0, i32 8
  %77 = load i32*, i32** %76, align 8
  %78 = load i32, i32* %17, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %18, align 4
  %82 = load i32, i32* %18, align 4
  %83 = load i32, i32* %15, align 4
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %85, label %102

; <label>:85:                                     ; preds = %73
  %86 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %19, i32 0, i32 2
  %87 = load double*, double** %86, align 8
  %88 = load i32, i32* %17, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds double, double* %87, i64 %89
  %91 = load double, double* %90, align 8
  %92 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %93 = load i32, i32* %18, align 4
  %94 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %92, i32 %93)
  %95 = load float, float* %94, align 4
  %96 = fpext float %95 to double
  %97 = fmul double %91, %96
  %98 = load float, float* %16, align 4
  %99 = fpext float %98 to double
  %100 = fsub double %99, %97
  %101 = fptrunc double %100 to float
  store float %101, float* %16, align 4
  br label %102

; <label>:102:                                    ; preds = %85, %73
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* @x.255
  %105 = load i32, i32* @y.256
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %103, %originalBB6alteredBB
  %112 = load i32, i32* %17, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %17, align 4
  %114 = load i32, i32* @x.255
  %115 = load i32, i32* @y.256
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart210, label %originalBB6alteredBB

originalBBpart210:                                ; preds = %originalBB6
  br label %61

; <label>:122:                                    ; preds = %61
  %123 = load float, float* %16, align 4
  %124 = fpext float %123 to double
  %125 = load double, double* %14, align 8
  %126 = fmul double %124, %125
  %127 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %19, i32 0, i32 2
  %128 = load double*, double** %127, align 8
  %129 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %19, i32 0, i32 1
  %130 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %129)
  %131 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %130, i32 0, i32 7
  %132 = load i32*, i32** %131, align 8
  %133 = load i32, i32* %15, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %132, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, double* %128, i64 %137
  %139 = load double, double* %138, align 8
  %140 = fdiv double %126, %139
  %141 = fptrunc double %140 to float
  %142 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %143 = load i32, i32* %15, align 4
  %144 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %142, i32 %143)
  store float %141, float* %144, align 4
  br label %145

; <label>:145:                                    ; preds = %122
  %146 = load i32, i32* %15, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %15, align 4
  br label %28

; <label>:148:                                    ; preds = %28
  %149 = load i32, i32* @x.255
  %150 = load i32, i32* @y.256
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %148, %originalBB12alteredBB
  %157 = load i32, i32* @x.255
  %158 = load i32, i32* @y.256
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %165 = alloca %class.SparseMatrix*, align 8
  %166 = alloca %class.Vector.10*, align 8
  %167 = alloca double, align 8
  %168 = alloca i32, align 4
  %169 = alloca float, align 4
  %170 = alloca i32, align 4
  %171 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %165, align 8
  store %class.Vector.10* %1, %class.Vector.10** %166, align 8
  store double %2, double* %167, align 8
  %172 = load %class.SparseMatrix*, %class.SparseMatrix** %165, align 8
  store i32 0, i32* %168, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %173 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %174 = load i32, i32* %15, align 4
  %175 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %173, i32 %174)
  %176 = load float, float* %175, align 4
  store float %176, float* %16, align 4
  %177 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %19, i32 0, i32 1
  %178 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %177)
  %179 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %178, i32 0, i32 7
  %180 = load i32*, i32** %179, align 8
  %181 = load i32, i32* %15, align 4
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds i32, i32* %180, i64 %182
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %17, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %103
  %185 = load i32, i32* %17, align 4
  %_ = sub i32 0, %185
  %gen = add i32 %_, 1
  %_7 = shl i32 %185, 1
  %_8 = shl i32 %185, 1
  %186 = add i32 %185, 1
  store i32 %186, i32* %17, align 4
  br label %originalBB6

originalBB12alteredBB:                            ; preds = %originalBB12, %148
  br label %originalBB12
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE17precondition_TSORIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %5 = load i32, i32* @x.257
  %6 = load i32, i32* @y.258
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector.10*, align 8
  %15 = alloca %class.Vector.10*, align 8
  %16 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector.10* %1, %class.Vector.10** %14, align 8
  store %class.Vector.10* %2, %class.Vector.10** %15, align 8
  store double %3, double* %16, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %18 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %19 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %20 = call dereferenceable(24) %class.Vector.10* @_ZN6VectorIfEaSERKS0_(%class.Vector.10* %19, %class.Vector.10* dereferenceable(24) %18)
  %21 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %22 = load double, double* %16, align 8
  call void @_ZNK12SparseMatrixIdE4TSORIfEEvR6VectorIT_Ed(%class.SparseMatrix* %17, %class.Vector.10* dereferenceable(24) %21, double %22)
  %23 = load i32, i32* @x.257
  %24 = load i32, i32* @y.258
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %31 = alloca %class.SparseMatrix*, align 8
  %32 = alloca %class.Vector.10*, align 8
  %33 = alloca %class.Vector.10*, align 8
  %34 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %31, align 8
  store %class.Vector.10* %1, %class.Vector.10** %32, align 8
  store %class.Vector.10* %2, %class.Vector.10** %33, align 8
  store double %3, double* %34, align 8
  %35 = load %class.SparseMatrix*, %class.SparseMatrix** %31, align 8
  %36 = load %class.Vector.10*, %class.Vector.10** %33, align 8
  %37 = load %class.Vector.10*, %class.Vector.10** %32, align 8
  %38 = call dereferenceable(24) %class.Vector.10* @_ZN6VectorIfEaSERKS0_(%class.Vector.10* %37, %class.Vector.10* dereferenceable(24) %36)
  %39 = load %class.Vector.10*, %class.Vector.10** %32, align 8
  %40 = load double, double* %34, align 8
  call void @_ZNK12SparseMatrixIdE4TSORIfEEvR6VectorIT_Ed(%class.SparseMatrix* %35, %class.Vector.10* dereferenceable(24) %39, double %40)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE4TSORIfEEvR6VectorIT_Ed(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector.10*, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector.10* %1, %class.Vector.10** %5, align 8
  store double %2, double* %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  store i32 %11, i32* %7, align 4
  br label %12

; <label>:12:                                     ; preds = %originalBBpart230, %3
  %13 = load i32, i32* @x.259
  %14 = load i32, i32* @y.260
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i32, i32* %7, align 4
  %22 = icmp ne i32 %21, 0
  %23 = load i32, i32* @x.259
  %24 = load i32, i32* @y.260
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %168

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* %7, align 4
  %33 = add i32 %32, -1
  store i32 %33, i32* %7, align 4
  %34 = load %class.Vector.10*, %class.Vector.10** %5, align 8
  %35 = load i32, i32* %7, align 4
  %36 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %34, i32 %35)
  %37 = load float, float* %36, align 4
  store float %37, float* %8, align 4
  %38 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %39 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %38)
  %40 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %39, i32 0, i32 7
  %41 = load i32*, i32** %40, align 8
  %42 = load i32, i32* %7, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %9, align 4
  br label %46

; <label>:46:                                     ; preds = %originalBBpart210, %31
  %47 = load i32, i32* %9, align 4
  %48 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %49 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %48)
  %50 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %49, i32 0, i32 7
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %7, align 4
  %53 = add i32 %52, 1
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %51, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %47, %56
  br i1 %57, label %58, label %129

; <label>:58:                                     ; preds = %46
  %59 = load i32, i32* @x.259
  %60 = load i32, i32* @y.260
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %58, %originalBB1alteredBB
  %67 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %68 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %67)
  %69 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %68, i32 0, i32 8
  %70 = load i32*, i32** %69, align 8
  %71 = load i32, i32* %9, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = load i32, i32* %7, align 4
  %76 = icmp ugt i32 %74, %75
  %77 = load i32, i32* @x.259
  %78 = load i32, i32* @y.260
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %76, label %85, label %109

; <label>:85:                                     ; preds = %originalBBpart24
  %86 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %87 = load double*, double** %86, align 8
  %88 = load i32, i32* %9, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds double, double* %87, i64 %89
  %91 = load double, double* %90, align 8
  %92 = load %class.Vector.10*, %class.Vector.10** %5, align 8
  %93 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %94 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %93)
  %95 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %94, i32 0, i32 8
  %96 = load i32*, i32** %95, align 8
  %97 = load i32, i32* %9, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %92, i32 %100)
  %102 = load float, float* %101, align 4
  %103 = fpext float %102 to double
  %104 = fmul double %91, %103
  %105 = load float, float* %8, align 4
  %106 = fpext float %105 to double
  %107 = fsub double %106, %104
  %108 = fptrunc double %107 to float
  store float %108, float* %8, align 4
  br label %109

; <label>:109:                                    ; preds = %85, %originalBBpart24
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i32, i32* @x.259
  %112 = load i32, i32* @y.260
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %110, %originalBB6alteredBB
  %119 = load i32, i32* %9, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %9, align 4
  %121 = load i32, i32* @x.259
  %122 = load i32, i32* @y.260
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart210, label %originalBB6alteredBB

originalBBpart210:                                ; preds = %originalBB6
  br label %46

; <label>:129:                                    ; preds = %46
  %130 = load i32, i32* @x.259
  %131 = load i32, i32* @y.260
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %129, %originalBB12alteredBB
  %138 = load float, float* %8, align 4
  %139 = fpext float %138 to double
  %140 = load double, double* %6, align 8
  %141 = fmul double %139, %140
  %142 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %143 = load double*, double** %142, align 8
  %144 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %145 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %144)
  %146 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %145, i32 0, i32 7
  %147 = load i32*, i32** %146, align 8
  %148 = load i32, i32* %7, align 4
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds double, double* %143, i64 %152
  %154 = load double, double* %153, align 8
  %155 = fdiv double %141, %154
  %156 = fptrunc double %155 to float
  %157 = load %class.Vector.10*, %class.Vector.10** %5, align 8
  %158 = load i32, i32* %7, align 4
  %159 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %157, i32 %158)
  store float %156, float* %159, align 4
  %160 = load i32, i32* @x.259
  %161 = load i32, i32* @y.260
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart230, label %originalBB12alteredBB

originalBBpart230:                                ; preds = %originalBB12
  br label %12

; <label>:168:                                    ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %169 = load i32, i32* %7, align 4
  %170 = icmp ne i32 %169, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  %171 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %172 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %171)
  %173 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %172, i32 0, i32 8
  %174 = load i32*, i32** %173, align 8
  %175 = load i32, i32* %9, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds i32, i32* %174, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = load i32, i32* %7, align 4
  %180 = icmp ugt i32 %178, %179
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %110
  %181 = load i32, i32* %9, align 4
  %_ = shl i32 %181, 1
  %_7 = sub i32 %181, 1
  %gen = mul i32 %_7, 1
  %_8 = shl i32 %181, 1
  %182 = add i32 %181, 1
  store i32 %182, i32* %9, align 4
  br label %originalBB6

originalBB12alteredBB:                            ; preds = %originalBB12, %129
  %183 = load float, float* %8, align 4
  %184 = fpext float %183 to double
  %185 = load double, double* %6, align 8
  %_13 = fsub double -0.000000e+00, %184
  %gen14 = fadd double %_13, %185
  %_15 = fsub double -0.000000e+00, %184
  %gen16 = fadd double %_15, %185
  %186 = fmul double %184, %185
  %187 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %188 = load double*, double** %187, align 8
  %189 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %190 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %189)
  %191 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %190, i32 0, i32 7
  %192 = load i32*, i32** %191, align 8
  %193 = load i32, i32* %7, align 4
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32* %192, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds double, double* %188, i64 %197
  %199 = load double, double* %198, align 8
  %_17 = fsub double -0.000000e+00, %186
  %gen18 = fadd double %_17, %199
  %_19 = fsub double %186, %199
  %gen20 = fmul double %_19, %199
  %_21 = fsub double %186, %199
  %gen22 = fmul double %_21, %199
  %_23 = fsub double -0.000000e+00, %186
  %gen24 = fadd double %_23, %199
  %_25 = fsub double %186, %199
  %gen26 = fmul double %_25, %199
  %_27 = fsub double %186, %199
  %gen28 = fmul double %_27, %199
  %200 = fdiv double %186, %199
  %201 = fptrunc double %200 to float
  %202 = load %class.Vector.10*, %class.Vector.10** %5, align 8
  %203 = load i32, i32* %7, align 4
  %204 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %202, i32 %203)
  store float %201, float* %204, align 4
  br label %originalBB12
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE19precondition_JacobiIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector.10*, align 8
  %7 = alloca %class.Vector.10*, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector.10* %1, %class.Vector.10** %6, align 8
  store %class.Vector.10* %2, %class.Vector.10** %7, align 8
  store double %3, double* %8, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %16 = load %class.Vector.10*, %class.Vector.10** %7, align 8
  %17 = call i32 @_ZNK6VectorIfE4sizeEv(%class.Vector.10* %16)
  store i32 %17, i32* %9, align 4
  %18 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %19 = call float* @_ZN6VectorIfE5beginEv(%class.Vector.10* %18)
  store float* %19, float** %10, align 8
  %20 = load %class.Vector.10*, %class.Vector.10** %7, align 8
  %21 = call float* @_ZNK6VectorIfE5beginEv(%class.Vector.10* %20)
  store float* %21, float** %11, align 8
  %22 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %23 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %22)
  %24 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %23, i32 0, i32 7
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 0
  store i32* %26, i32** %12, align 8
  %27 = load double, double* %8, align 8
  %28 = fcmp une double %27, 1.000000e+00
  br i1 %28, label %29, label %76

; <label>:29:                                     ; preds = %4
  store i32 0, i32* %13, align 4
  br label %30

; <label>:30:                                     ; preds = %66, %29
  %31 = load i32, i32* @x.261
  %32 = load i32, i32* @y.262
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %30, %originalBBalteredBB
  %39 = load i32, i32* %13, align 4
  %40 = load i32, i32* %9, align 4
  %41 = icmp ult i32 %39, %40
  %42 = load i32, i32* @x.261
  %43 = load i32, i32* @y.262
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %50, label %75

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load double, double* %8, align 8
  %52 = load float*, float** %11, align 8
  %53 = load float, float* %52, align 4
  %54 = fpext float %53 to double
  %55 = fmul double %51, %54
  %56 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %57 = load double*, double** %56, align 8
  %58 = load i32*, i32** %12, align 8
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds double, double* %57, i64 %60
  %62 = load double, double* %61, align 8
  %63 = fdiv double %55, %62
  %64 = fptrunc double %63 to float
  %65 = load float*, float** %10, align 8
  store float %64, float* %65, align 4
  br label %66

; <label>:66:                                     ; preds = %50
  %67 = load i32, i32* %13, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %13, align 4
  %69 = load float*, float** %10, align 8
  %70 = getelementptr inbounds float, float* %69, i32 1
  store float* %70, float** %10, align 8
  %71 = load float*, float** %11, align 8
  %72 = getelementptr inbounds float, float* %71, i32 1
  store float* %72, float** %11, align 8
  %73 = load i32*, i32** %12, align 8
  %74 = getelementptr inbounds i32, i32* %73, i32 1
  store i32* %74, i32** %12, align 8
  br label %30

; <label>:75:                                     ; preds = %originalBBpart2
  br label %169

; <label>:76:                                     ; preds = %4
  %77 = load i32, i32* @x.261
  %78 = load i32, i32* @y.262
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %76, %originalBB1alteredBB
  store i32 0, i32* %14, align 4
  %85 = load i32, i32* @x.261
  %86 = load i32, i32* @y.262
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %93

; <label>:93:                                     ; preds = %originalBBpart212, %originalBBpart24
  %94 = load i32, i32* @x.261
  %95 = load i32, i32* @y.262
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %93, %originalBB6alteredBB
  %102 = load i32, i32* %14, align 4
  %103 = load i32, i32* %9, align 4
  %104 = icmp ult i32 %102, %103
  %105 = load i32, i32* @x.261
  %106 = load i32, i32* @y.262
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %104, label %113, label %152

; <label>:113:                                    ; preds = %originalBBpart28
  %114 = load float*, float** %11, align 8
  %115 = load float, float* %114, align 4
  %116 = fpext float %115 to double
  %117 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %118 = load double*, double** %117, align 8
  %119 = load i32*, i32** %12, align 8
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, double* %118, i64 %121
  %123 = load double, double* %122, align 8
  %124 = fdiv double %116, %123
  %125 = fptrunc double %124 to float
  %126 = load float*, float** %10, align 8
  store float %125, float* %126, align 4
  br label %127

; <label>:127:                                    ; preds = %113
  %128 = load i32, i32* @x.261
  %129 = load i32, i32* @y.262
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %127, %originalBB10alteredBB
  %136 = load i32, i32* %14, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %14, align 4
  %138 = load float*, float** %10, align 8
  %139 = getelementptr inbounds float, float* %138, i32 1
  store float* %139, float** %10, align 8
  %140 = load float*, float** %11, align 8
  %141 = getelementptr inbounds float, float* %140, i32 1
  store float* %141, float** %11, align 8
  %142 = load i32*, i32** %12, align 8
  %143 = getelementptr inbounds i32, i32* %142, i32 1
  store i32* %143, i32** %12, align 8
  %144 = load i32, i32* @x.261
  %145 = load i32, i32* @y.262
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %93

; <label>:152:                                    ; preds = %originalBBpart28
  %153 = load i32, i32* @x.261
  %154 = load i32, i32* @y.262
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %152, %originalBB14alteredBB
  %161 = load i32, i32* @x.261
  %162 = load i32, i32* @y.262
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %169

; <label>:169:                                    ; preds = %originalBBpart216, %75
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %30
  %170 = load i32, i32* %13, align 4
  %171 = load i32, i32* %9, align 4
  %172 = icmp ult i32 %170, %171
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %76
  store i32 0, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %93
  %173 = load i32, i32* %14, align 4
  %174 = load i32, i32* %9, align 4
  %175 = icmp ult i32 %173, %174
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %127
  %176 = load i32, i32* %14, align 4
  %_ = sub i32 %176, 1
  %gen = mul i32 %_, 1
  %177 = add i32 %176, 1
  store i32 %177, i32* %14, align 4
  %178 = load float*, float** %10, align 8
  %179 = getelementptr inbounds float, float* %178, i32 1
  store float* %179, float** %10, align 8
  %180 = load float*, float** %11, align 8
  %181 = getelementptr inbounds float, float* %180, i32 1
  store float* %181, float** %11, align 8
  %182 = load i32*, i32** %12, align 8
  %183 = getelementptr inbounds i32, i32* %182, i32 1
  store i32* %183, i32** %12, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %152
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZNK6VectorIfE5beginEv(%class.Vector.10*) #5 comdat align 2 {
  %2 = alloca %class.Vector.10*, align 8
  store %class.Vector.10* %0, %class.Vector.10** %2, align 8
  %3 = load %class.Vector.10*, %class.Vector.10** %2, align 8
  %4 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %3, i32 0, i32 3
  %5 = load float*, float** %4, align 8
  %6 = getelementptr inbounds float, float* %5, i64 0
  ret float* %6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE4SSORIfEEvR6VectorIT_Ed(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %4 = load i32, i32* @x.265
  %5 = load i32, i32* @y.266
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca %class.Vector.10*, align 8
  %14 = alloca double, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca float, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store %class.Vector.10* %1, %class.Vector.10** %13, align 8
  store double %2, double* %14, align 8
  %22 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  %23 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %24 = call i32 @_ZNK6VectorIfE4sizeEv(%class.Vector.10* %23)
  store i32 %24, i32* %15, align 4
  store i32 0, i32* %18, align 4
  %25 = load i32, i32* @x.265
  %26 = load i32, i32* @y.266
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %143, %originalBBpart2
  %34 = load i32, i32* @x.265
  %35 = load i32, i32* @y.266
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i32, i32* %18, align 4
  %43 = load i32, i32* %15, align 4
  %44 = icmp ult i32 %42, %43
  %45 = load i32, i32* @x.265
  %46 = load i32, i32* @y.266
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %146

; <label>:53:                                     ; preds = %originalBBpart24
  store float 0.000000e+00, float* %17, align 4
  %54 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %55 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %54)
  %56 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %55, i32 0, i32 7
  %57 = load i32*, i32** %56, align 8
  %58 = load i32, i32* %18, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %57, i64 %59
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %16, align 4
  br label %62

; <label>:62:                                     ; preds = %108, %53
  %63 = load i32, i32* %16, align 4
  %64 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %65 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %64)
  %66 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %65, i32 0, i32 7
  %67 = load i32*, i32** %66, align 8
  %68 = load i32, i32* %18, align 4
  %69 = add i32 %68, 1
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %67, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp ult i32 %63, %72
  br i1 %73, label %74, label %111

; <label>:74:                                     ; preds = %62
  %75 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %76 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %75)
  %77 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %76, i32 0, i32 8
  %78 = load i32*, i32** %77, align 8
  %79 = load i32, i32* %16, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %19, align 4
  %83 = load i32, i32* %19, align 4
  %84 = icmp ne i32 %83, -1
  br i1 %84, label %85, label %107

; <label>:85:                                     ; preds = %74
  %86 = load i32, i32* %18, align 4
  %87 = load i32, i32* %16, align 4
  %88 = icmp ugt i32 %86, %87
  br i1 %88, label %89, label %106

; <label>:89:                                     ; preds = %85
  %90 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %91 = load double*, double** %90, align 8
  %92 = load i32, i32* %16, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds double, double* %91, i64 %93
  %95 = load double, double* %94, align 8
  %96 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %97 = load i32, i32* %19, align 4
  %98 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %96, i32 %97)
  %99 = load float, float* %98, align 4
  %100 = fpext float %99 to double
  %101 = fmul double %95, %100
  %102 = load float, float* %17, align 4
  %103 = fpext float %102 to double
  %104 = fadd double %103, %101
  %105 = fptrunc double %104 to float
  store float %105, float* %17, align 4
  br label %106

; <label>:106:                                    ; preds = %89, %85
  br label %107

; <label>:107:                                    ; preds = %106, %74
  br label %108

; <label>:108:                                    ; preds = %107
  %109 = load i32, i32* %16, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %16, align 4
  br label %62

; <label>:111:                                    ; preds = %62
  %112 = load float, float* %17, align 4
  %113 = fpext float %112 to double
  %114 = load double, double* %14, align 8
  %115 = fmul double %113, %114
  %116 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %117 = load i32, i32* %18, align 4
  %118 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %116, i32 %117)
  %119 = load float, float* %118, align 4
  %120 = fpext float %119 to double
  %121 = fsub double %120, %115
  %122 = fptrunc double %121 to float
  store float %122, float* %118, align 4
  %123 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %124 = load double*, double** %123, align 8
  %125 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %126 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %125)
  %127 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %126, i32 0, i32 7
  %128 = load i32*, i32** %127, align 8
  %129 = load i32, i32* %18, align 4
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i32, i32* %128, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds double, double* %124, i64 %133
  %135 = load double, double* %134, align 8
  %136 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %137 = load i32, i32* %18, align 4
  %138 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %136, i32 %137)
  %139 = load float, float* %138, align 4
  %140 = fpext float %139 to double
  %141 = fdiv double %140, %135
  %142 = fptrunc double %141 to float
  store float %142, float* %138, align 4
  br label %143

; <label>:143:                                    ; preds = %111
  %144 = load i32, i32* %18, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %18, align 4
  br label %33

; <label>:146:                                    ; preds = %originalBBpart24
  %147 = load i32, i32* %15, align 4
  %148 = sub i32 %147, 1
  store i32 %148, i32* %20, align 4
  br label %149

; <label>:149:                                    ; preds = %316, %146
  %150 = load i32, i32* %20, align 4
  %151 = icmp sge i32 %150, 0
  br i1 %151, label %152, label %319

; <label>:152:                                    ; preds = %149
  store float 0.000000e+00, float* %17, align 4
  %153 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %154 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %153)
  %155 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %154, i32 0, i32 7
  %156 = load i32*, i32** %155, align 8
  %157 = load i32, i32* %20, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %156, i64 %158
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %16, align 4
  br label %161

; <label>:161:                                    ; preds = %originalBBpart222, %152
  %162 = load i32, i32* %16, align 4
  %163 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %164 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %163)
  %165 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %164, i32 0, i32 7
  %166 = load i32*, i32** %165, align 8
  %167 = load i32, i32* %20, align 4
  %168 = add nsw i32 %167, 1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, i32* %166, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = icmp ult i32 %162, %171
  br i1 %172, label %173, label %274

; <label>:173:                                    ; preds = %161
  %174 = load i32, i32* @x.265
  %175 = load i32, i32* @y.266
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %173, %originalBB6alteredBB
  %182 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %183 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %182)
  %184 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %183, i32 0, i32 8
  %185 = load i32*, i32** %184, align 8
  %186 = load i32, i32* %16, align 4
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds i32, i32* %185, i64 %187
  %189 = load i32, i32* %188, align 4
  store i32 %189, i32* %21, align 4
  %190 = load i32, i32* %21, align 4
  %191 = icmp ne i32 %190, -1
  %192 = load i32, i32* @x.265
  %193 = load i32, i32* @y.266
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %191, label %200, label %238

; <label>:200:                                    ; preds = %originalBBpart28
  %201 = load i32, i32* @x.265
  %202 = load i32, i32* @y.266
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %200, %originalBB10alteredBB
  %209 = load i32, i32* %20, align 4
  %210 = load i32, i32* %16, align 4
  %211 = icmp ult i32 %209, %210
  %212 = load i32, i32* @x.265
  %213 = load i32, i32* @y.266
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %211, label %220, label %237

; <label>:220:                                    ; preds = %originalBBpart212
  %221 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %222 = load double*, double** %221, align 8
  %223 = load i32, i32* %16, align 4
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds double, double* %222, i64 %224
  %226 = load double, double* %225, align 8
  %227 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %228 = load i32, i32* %21, align 4
  %229 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %227, i32 %228)
  %230 = load float, float* %229, align 4
  %231 = fpext float %230 to double
  %232 = fmul double %226, %231
  %233 = load float, float* %17, align 4
  %234 = fpext float %233 to double
  %235 = fadd double %234, %232
  %236 = fptrunc double %235 to float
  store float %236, float* %17, align 4
  br label %237

; <label>:237:                                    ; preds = %220, %originalBBpart212
  br label %238

; <label>:238:                                    ; preds = %237, %originalBBpart28
  %239 = load i32, i32* @x.265
  %240 = load i32, i32* @y.266
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %238, %originalBB14alteredBB
  %247 = load i32, i32* @x.265
  %248 = load i32, i32* @y.266
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %255

; <label>:255:                                    ; preds = %originalBBpart216
  %256 = load i32, i32* @x.265
  %257 = load i32, i32* @y.266
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %255, %originalBB18alteredBB
  %264 = load i32, i32* %16, align 4
  %265 = add i32 %264, 1
  store i32 %265, i32* %16, align 4
  %266 = load i32, i32* @x.265
  %267 = load i32, i32* @y.266
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBBpart222, label %originalBB18alteredBB

originalBBpart222:                                ; preds = %originalBB18
  br label %161

; <label>:274:                                    ; preds = %161
  %275 = load i32, i32* @x.265
  %276 = load i32, i32* @y.266
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %274, %originalBB24alteredBB
  %283 = load float, float* %17, align 4
  %284 = fpext float %283 to double
  %285 = load double, double* %14, align 8
  %286 = fmul double %284, %285
  %287 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %288 = load double*, double** %287, align 8
  %289 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %290 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %289)
  %291 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %290, i32 0, i32 7
  %292 = load i32*, i32** %291, align 8
  %293 = load i32, i32* %20, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i32, i32* %292, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds double, double* %288, i64 %297
  %299 = load double, double* %298, align 8
  %300 = fdiv double %286, %299
  %301 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %302 = load i32, i32* %20, align 4
  %303 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %301, i32 %302)
  %304 = load float, float* %303, align 4
  %305 = fpext float %304 to double
  %306 = fsub double %305, %300
  %307 = fptrunc double %306 to float
  store float %307, float* %303, align 4
  %308 = load i32, i32* @x.265
  %309 = load i32, i32* @y.266
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart242, label %originalBB24alteredBB

originalBBpart242:                                ; preds = %originalBB24
  br label %316

; <label>:316:                                    ; preds = %originalBBpart242
  %317 = load i32, i32* %20, align 4
  %318 = add nsw i32 %317, -1
  store i32 %318, i32* %20, align 4
  br label %149

; <label>:319:                                    ; preds = %149
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %320 = alloca %class.SparseMatrix*, align 8
  %321 = alloca %class.Vector.10*, align 8
  %322 = alloca double, align 8
  %323 = alloca i32, align 4
  %324 = alloca i32, align 4
  %325 = alloca float, align 4
  %326 = alloca i32, align 4
  %327 = alloca i32, align 4
  %328 = alloca i32, align 4
  %329 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %320, align 8
  store %class.Vector.10* %1, %class.Vector.10** %321, align 8
  store double %2, double* %322, align 8
  %330 = load %class.SparseMatrix*, %class.SparseMatrix** %320, align 8
  %331 = load %class.Vector.10*, %class.Vector.10** %321, align 8
  %332 = call i32 @_ZNK6VectorIfE4sizeEv(%class.Vector.10* %331)
  store i32 %332, i32* %323, align 4
  store i32 0, i32* %326, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %333 = load i32, i32* %18, align 4
  %334 = load i32, i32* %15, align 4
  %335 = icmp ult i32 %333, %334
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %173
  %336 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %337 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %336)
  %338 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %337, i32 0, i32 8
  %339 = load i32*, i32** %338, align 8
  %340 = load i32, i32* %16, align 4
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds i32, i32* %339, i64 %341
  %343 = load i32, i32* %342, align 4
  store i32 %343, i32* %21, align 4
  %344 = load i32, i32* %21, align 4
  %345 = icmp ne i32 %344, -1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %200
  %346 = load i32, i32* %20, align 4
  %347 = load i32, i32* %16, align 4
  %348 = icmp ult i32 %346, %347
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %238
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %255
  %349 = load i32, i32* %16, align 4
  %_ = shl i32 %349, 1
  %_19 = sub i32 %349, 1
  %gen = mul i32 %_19, 1
  %_20 = shl i32 %349, 1
  %350 = add i32 %349, 1
  store i32 %350, i32* %16, align 4
  br label %originalBB18

originalBB24alteredBB:                            ; preds = %originalBB24, %274
  %351 = load float, float* %17, align 4
  %352 = fpext float %351 to double
  %353 = load double, double* %14, align 8
  %_25 = fsub double -0.000000e+00, %352
  %gen26 = fadd double %_25, %353
  %_27 = fsub double %352, %353
  %gen28 = fmul double %_27, %353
  %_29 = fsub double -0.000000e+00, %352
  %gen30 = fadd double %_29, %353
  %_31 = fsub double %352, %353
  %gen32 = fmul double %_31, %353
  %_33 = fsub double %352, %353
  %gen34 = fmul double %_33, %353
  %354 = fmul double %352, %353
  %355 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 2
  %356 = load double*, double** %355, align 8
  %357 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %22, i32 0, i32 1
  %358 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %357)
  %359 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %358, i32 0, i32 7
  %360 = load i32*, i32** %359, align 8
  %361 = load i32, i32* %20, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds i32, i32* %360, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds double, double* %356, i64 %365
  %367 = load double, double* %366, align 8
  %368 = fdiv double %354, %367
  %369 = load %class.Vector.10*, %class.Vector.10** %13, align 8
  %370 = load i32, i32* %20, align 4
  %371 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %369, i32 %370)
  %372 = load float, float* %371, align 4
  %373 = fpext float %372 to double
  %_35 = fsub double %373, %368
  %gen36 = fmul double %_35, %368
  %_37 = fsub double %373, %368
  %gen38 = fmul double %_37, %368
  %_39 = fsub double %373, %368
  %gen40 = fmul double %_39, %368
  %374 = fsub double %373, %368
  %375 = fptrunc double %374 to float
  store float %375, float* %371, align 4
  br label %originalBB24
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE4PSORIfEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), double) #0 comdat align 2 {
  %6 = load i32, i32* @x.267
  %7 = load i32, i32* @y.268
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.SparseMatrix*, align 8
  %15 = alloca %class.Vector.10*, align 8
  %16 = alloca %"class.std::vector.11"*, align 8
  %17 = alloca %"class.std::vector.11"*, align 8
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca float, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %14, align 8
  store %class.Vector.10* %1, %class.Vector.10** %15, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %16, align 8
  store %"class.std::vector.11"* %3, %"class.std::vector.11"** %17, align 8
  store double %4, double* %18, align 8
  %24 = load %class.SparseMatrix*, %class.SparseMatrix** %14, align 8
  store i32 0, i32* %19, align 4
  %25 = load i32, i32* @x.267
  %26 = load i32, i32* @y.268
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %143, %originalBBpart2
  %34 = load i32, i32* %19, align 4
  %35 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %24)
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %37, label %146

; <label>:37:                                     ; preds = %33
  %38 = load %"class.std::vector.11"*, %"class.std::vector.11"** %16, align 8
  %39 = load i32, i32* %19, align 4
  %40 = zext i32 %39 to i64
  %41 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %38, i64 %40)
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %20, align 4
  %43 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %44 = load i32, i32* %20, align 4
  %45 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %43, i32 %44)
  %46 = load float, float* %45, align 4
  store float %46, float* %21, align 4
  %47 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %48 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %47)
  %49 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %48, i32 0, i32 7
  %50 = load i32*, i32** %49, align 8
  %51 = load i32, i32* %20, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %22, align 4
  br label %55

; <label>:55:                                     ; preds = %117, %37
  %56 = load i32, i32* %22, align 4
  %57 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %58 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %57)
  %59 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %58, i32 0, i32 7
  %60 = load i32*, i32** %59, align 8
  %61 = load i32, i32* %20, align 4
  %62 = add i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %60, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = icmp ult i32 %56, %65
  br i1 %66, label %67, label %120

; <label>:67:                                     ; preds = %55
  %68 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %69 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %68)
  %70 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %69, i32 0, i32 8
  %71 = load i32*, i32** %70, align 8
  %72 = load i32, i32* %22, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %23, align 4
  %76 = load %"class.std::vector.11"*, %"class.std::vector.11"** %17, align 8
  %77 = load i32, i32* %23, align 4
  %78 = zext i32 %77 to i64
  %79 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %76, i64 %78)
  %80 = load i32, i32* %79, align 4
  %81 = load i32, i32* %19, align 4
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %83, label %100

; <label>:83:                                     ; preds = %67
  %84 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 2
  %85 = load double*, double** %84, align 8
  %86 = load i32, i32* %22, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds double, double* %85, i64 %87
  %89 = load double, double* %88, align 8
  %90 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %91 = load i32, i32* %23, align 4
  %92 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %90, i32 %91)
  %93 = load float, float* %92, align 4
  %94 = fpext float %93 to double
  %95 = fmul double %89, %94
  %96 = load float, float* %21, align 4
  %97 = fpext float %96 to double
  %98 = fsub double %97, %95
  %99 = fptrunc double %98 to float
  store float %99, float* %21, align 4
  br label %100

; <label>:100:                                    ; preds = %83, %67
  %101 = load i32, i32* @x.267
  %102 = load i32, i32* @y.268
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %100, %originalBB1alteredBB
  %109 = load i32, i32* @x.267
  %110 = load i32, i32* @y.268
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %117

; <label>:117:                                    ; preds = %originalBBpart24
  %118 = load i32, i32* %22, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %22, align 4
  br label %55

; <label>:120:                                    ; preds = %55
  %121 = load float, float* %21, align 4
  %122 = fpext float %121 to double
  %123 = load double, double* %18, align 8
  %124 = fmul double %122, %123
  %125 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 2
  %126 = load double*, double** %125, align 8
  %127 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %128 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %127)
  %129 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %128, i32 0, i32 7
  %130 = load i32*, i32** %129, align 8
  %131 = load i32, i32* %20, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %130, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds double, double* %126, i64 %135
  %137 = load double, double* %136, align 8
  %138 = fdiv double %124, %137
  %139 = fptrunc double %138 to float
  %140 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %141 = load i32, i32* %20, align 4
  %142 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %140, i32 %141)
  store float %139, float* %142, align 4
  br label %143

; <label>:143:                                    ; preds = %120
  %144 = load i32, i32* %19, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %19, align 4
  br label %33

; <label>:146:                                    ; preds = %33
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %147 = alloca %class.SparseMatrix*, align 8
  %148 = alloca %class.Vector.10*, align 8
  %149 = alloca %"class.std::vector.11"*, align 8
  %150 = alloca %"class.std::vector.11"*, align 8
  %151 = alloca double, align 8
  %152 = alloca i32, align 4
  %153 = alloca i32, align 4
  %154 = alloca float, align 4
  %155 = alloca i32, align 4
  %156 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %147, align 8
  store %class.Vector.10* %1, %class.Vector.10** %148, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %149, align 8
  store %"class.std::vector.11"* %3, %"class.std::vector.11"** %150, align 8
  store double %4, double* %151, align 8
  %157 = load %class.SparseMatrix*, %class.SparseMatrix** %147, align 8
  store i32 0, i32* %152, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %100
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  ret i32* %12
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5TPSORIfEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), double) #0 comdat align 2 {
  %6 = load i32, i32* @x.271
  %7 = load i32, i32* @y.272
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.SparseMatrix*, align 8
  %15 = alloca %class.Vector.10*, align 8
  %16 = alloca %"class.std::vector.11"*, align 8
  %17 = alloca %"class.std::vector.11"*, align 8
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca float, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %14, align 8
  store %class.Vector.10* %1, %class.Vector.10** %15, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %16, align 8
  store %"class.std::vector.11"* %3, %"class.std::vector.11"** %17, align 8
  store double %4, double* %18, align 8
  %24 = load %class.SparseMatrix*, %class.SparseMatrix** %14, align 8
  %25 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %24)
  store i32 %25, i32* %19, align 4
  %26 = load i32, i32* @x.271
  %27 = load i32, i32* @y.272
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %138, %originalBBpart2
  %35 = load i32, i32* @x.271
  %36 = load i32, i32* @y.272
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i32, i32* %19, align 4
  %44 = icmp ne i32 %43, 0
  %45 = load i32, i32* @x.271
  %46 = load i32, i32* @y.272
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %161

; <label>:53:                                     ; preds = %originalBBpart24
  %54 = load i32, i32* %19, align 4
  %55 = add i32 %54, -1
  store i32 %55, i32* %19, align 4
  %56 = load %"class.std::vector.11"*, %"class.std::vector.11"** %16, align 8
  %57 = load i32, i32* %19, align 4
  %58 = zext i32 %57 to i64
  %59 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %56, i64 %58)
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %20, align 4
  %61 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %62 = load i32, i32* %20, align 4
  %63 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %61, i32 %62)
  %64 = load float, float* %63, align 4
  store float %64, float* %21, align 4
  %65 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %66 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %65)
  %67 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %66, i32 0, i32 7
  %68 = load i32*, i32** %67, align 8
  %69 = load i32, i32* %20, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %22, align 4
  br label %73

; <label>:73:                                     ; preds = %135, %53
  %74 = load i32, i32* %22, align 4
  %75 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %76 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %75)
  %77 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %76, i32 0, i32 7
  %78 = load i32*, i32** %77, align 8
  %79 = load i32, i32* %20, align 4
  %80 = add i32 %79, 1
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %78, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp ult i32 %74, %83
  br i1 %84, label %85, label %138

; <label>:85:                                     ; preds = %73
  %86 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %87 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %86)
  %88 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %87, i32 0, i32 8
  %89 = load i32*, i32** %88, align 8
  %90 = load i32, i32* %22, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %23, align 4
  %94 = load %"class.std::vector.11"*, %"class.std::vector.11"** %17, align 8
  %95 = load i32, i32* %23, align 4
  %96 = zext i32 %95 to i64
  %97 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %94, i64 %96)
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %19, align 4
  %100 = icmp ugt i32 %98, %99
  br i1 %100, label %101, label %134

; <label>:101:                                    ; preds = %85
  %102 = load i32, i32* @x.271
  %103 = load i32, i32* @y.272
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %101, %originalBB6alteredBB
  %110 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 2
  %111 = load double*, double** %110, align 8
  %112 = load i32, i32* %22, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds double, double* %111, i64 %113
  %115 = load double, double* %114, align 8
  %116 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %117 = load i32, i32* %23, align 4
  %118 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %116, i32 %117)
  %119 = load float, float* %118, align 4
  %120 = fpext float %119 to double
  %121 = fmul double %115, %120
  %122 = load float, float* %21, align 4
  %123 = fpext float %122 to double
  %124 = fsub double %123, %121
  %125 = fptrunc double %124 to float
  store float %125, float* %21, align 4
  %126 = load i32, i32* @x.271
  %127 = load i32, i32* @y.272
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %134

; <label>:134:                                    ; preds = %originalBBpart28, %85
  br label %135

; <label>:135:                                    ; preds = %134
  %136 = load i32, i32* %22, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %22, align 4
  br label %73

; <label>:138:                                    ; preds = %73
  %139 = load float, float* %21, align 4
  %140 = fpext float %139 to double
  %141 = load double, double* %18, align 8
  %142 = fmul double %140, %141
  %143 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 2
  %144 = load double*, double** %143, align 8
  %145 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %146 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %145)
  %147 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %146, i32 0, i32 7
  %148 = load i32*, i32** %147, align 8
  %149 = load i32, i32* %20, align 4
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %148, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds double, double* %144, i64 %153
  %155 = load double, double* %154, align 8
  %156 = fdiv double %142, %155
  %157 = fptrunc double %156 to float
  %158 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %159 = load i32, i32* %20, align 4
  %160 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %158, i32 %159)
  store float %157, float* %160, align 4
  br label %34

; <label>:161:                                    ; preds = %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %162 = alloca %class.SparseMatrix*, align 8
  %163 = alloca %class.Vector.10*, align 8
  %164 = alloca %"class.std::vector.11"*, align 8
  %165 = alloca %"class.std::vector.11"*, align 8
  %166 = alloca double, align 8
  %167 = alloca i32, align 4
  %168 = alloca i32, align 4
  %169 = alloca float, align 4
  %170 = alloca i32, align 4
  %171 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %162, align 8
  store %class.Vector.10* %1, %class.Vector.10** %163, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %164, align 8
  store %"class.std::vector.11"* %3, %"class.std::vector.11"** %165, align 8
  store double %4, double* %166, align 8
  %172 = load %class.SparseMatrix*, %class.SparseMatrix** %162, align 8
  %173 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %172)
  store i32 %173, i32* %167, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %174 = load i32, i32* %19, align 4
  %175 = icmp ne i32 %174, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %101
  %176 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 2
  %177 = load double*, double** %176, align 8
  %178 = load i32, i32* %22, align 4
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds double, double* %177, i64 %179
  %181 = load double, double* %180, align 8
  %182 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %183 = load i32, i32* %23, align 4
  %184 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %182, i32 %183)
  %185 = load float, float* %184, align 4
  %186 = fpext float %185 to double
  %_ = fsub double -0.000000e+00, %181
  %gen = fadd double %_, %186
  %187 = fmul double %181, %186
  %188 = load float, float* %21, align 4
  %189 = fpext float %188 to double
  %190 = fsub double %189, %187
  %191 = fptrunc double %190 to float
  store float %191, float* %21, align 4
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE8SOR_stepIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector.10*, align 8
  %7 = alloca %class.Vector.10*, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca float, align 4
  %11 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector.10* %1, %class.Vector.10** %6, align 8
  store %class.Vector.10* %2, %class.Vector.10** %7, align 8
  store double %3, double* %8, align 8
  %12 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  store i32 0, i32* %9, align 4
  br label %13

; <label>:13:                                     ; preds = %originalBBpart215, %4
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %12)
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %145

; <label>:17:                                     ; preds = %13
  %18 = load %class.Vector.10*, %class.Vector.10** %7, align 8
  %19 = load i32, i32* %9, align 4
  %20 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %18, i32 %19)
  store float %20, float* %10, align 4
  %21 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %22 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %21)
  %23 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %22, i32 0, i32 7
  %24 = load i32*, i32** %23, align 8
  %25 = load i32, i32* %9, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %11, align 4
  br label %29

; <label>:29:                                     ; preds = %originalBBpart29, %17
  %30 = load i32, i32* @x.273
  %31 = load i32, i32* @y.274
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %29, %originalBBalteredBB
  %38 = load i32, i32* %11, align 4
  %39 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %40 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %39)
  %41 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %40, i32 0, i32 7
  %42 = load i32*, i32** %41, align 8
  %43 = load i32, i32* %9, align 4
  %44 = add i32 %43, 1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %42, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp ult i32 %38, %47
  %49 = load i32, i32* @x.273
  %50 = load i32, i32* @y.274
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %48, label %57, label %100

; <label>:57:                                     ; preds = %originalBBpart2
  %58 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %59 = load double*, double** %58, align 8
  %60 = load i32, i32* %11, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds double, double* %59, i64 %61
  %63 = load double, double* %62, align 8
  %64 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %65 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %66 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %65)
  %67 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %66, i32 0, i32 8
  %68 = load i32*, i32** %67, align 8
  %69 = load i32, i32* %11, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %64, i32 %72)
  %74 = load float, float* %73, align 4
  %75 = fpext float %74 to double
  %76 = fmul double %63, %75
  %77 = load float, float* %10, align 4
  %78 = fpext float %77 to double
  %79 = fsub double %78, %76
  %80 = fptrunc double %79 to float
  store float %80, float* %10, align 4
  br label %81

; <label>:81:                                     ; preds = %57
  %82 = load i32, i32* @x.273
  %83 = load i32, i32* @y.274
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %81, %originalBB1alteredBB
  %90 = load i32, i32* %11, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %11, align 4
  %92 = load i32, i32* @x.273
  %93 = load i32, i32* @y.274
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %29

; <label>:100:                                    ; preds = %originalBBpart2
  %101 = load float, float* %10, align 4
  %102 = fpext float %101 to double
  %103 = load double, double* %8, align 8
  %104 = fmul double %102, %103
  %105 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %106 = load double*, double** %105, align 8
  %107 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %108 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %107)
  %109 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %108, i32 0, i32 7
  %110 = load i32*, i32** %109, align 8
  %111 = load i32, i32* %9, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %110, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds double, double* %106, i64 %115
  %117 = load double, double* %116, align 8
  %118 = fdiv double %104, %117
  %119 = load %class.Vector.10*, %class.Vector.10** %6, align 8
  %120 = load i32, i32* %9, align 4
  %121 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %119, i32 %120)
  %122 = load float, float* %121, align 4
  %123 = fpext float %122 to double
  %124 = fadd double %123, %118
  %125 = fptrunc double %124 to float
  store float %125, float* %121, align 4
  br label %126

; <label>:126:                                    ; preds = %100
  %127 = load i32, i32* @x.273
  %128 = load i32, i32* @y.274
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %126, %originalBB11alteredBB
  %135 = load i32, i32* %9, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %9, align 4
  %137 = load i32, i32* @x.273
  %138 = load i32, i32* @y.274
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart215, label %originalBB11alteredBB

originalBBpart215:                                ; preds = %originalBB11
  br label %13

; <label>:145:                                    ; preds = %13
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %29
  %146 = load i32, i32* %11, align 4
  %147 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %148 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %147)
  %149 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %148, i32 0, i32 7
  %150 = load i32*, i32** %149, align 8
  %151 = load i32, i32* %9, align 4
  %_ = shl i32 %151, 1
  %152 = add i32 %151, 1
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %150, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = icmp ult i32 %146, %155
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %81
  %157 = load i32, i32* %11, align 4
  %_2 = shl i32 %157, 1
  %_3 = shl i32 %157, 1
  %_4 = shl i32 %157, 1
  %_5 = shl i32 %157, 1
  %_6 = sub i32 %157, 1
  %gen = mul i32 %_6, 1
  %_7 = shl i32 %157, 1
  %158 = add i32 %157, 1
  store i32 %158, i32* %11, align 4
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %126
  %159 = load i32, i32* %9, align 4
  %_12 = sub i32 0, %159
  %gen13 = add i32 %_12, 1
  %160 = add i32 %159, 1
  store i32 %160, i32* %9, align 4
  br label %originalBB11
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9TSOR_stepIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %5 = load i32, i32* @x.275
  %6 = load i32, i32* @y.276
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector.10*, align 8
  %15 = alloca %class.Vector.10*, align 8
  %16 = alloca double, align 8
  %17 = alloca i32, align 4
  %18 = alloca float, align 4
  %19 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector.10* %1, %class.Vector.10** %14, align 8
  store %class.Vector.10* %2, %class.Vector.10** %15, align 8
  store double %3, double* %16, align 8
  %20 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %21 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %20)
  %22 = sub i32 %21, 1
  store i32 %22, i32* %17, align 4
  %23 = load i32, i32* @x.275
  %24 = load i32, i32* @y.276
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %111, %originalBBpart2
  %32 = load i32, i32* %17, align 4
  %33 = icmp sge i32 %32, 0
  br i1 %33, label %34, label %114

; <label>:34:                                     ; preds = %31
  %35 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %36 = load i32, i32* %17, align 4
  %37 = call float @_ZNK6VectorIfEclEj(%class.Vector.10* %35, i32 %36)
  store float %37, float* %18, align 4
  %38 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %39 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %38)
  %40 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %39, i32 0, i32 7
  %41 = load i32*, i32** %40, align 8
  %42 = load i32, i32* %17, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %19, align 4
  br label %46

; <label>:46:                                     ; preds = %82, %34
  %47 = load i32, i32* %19, align 4
  %48 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %49 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %48)
  %50 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %49, i32 0, i32 7
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %17, align 4
  %53 = add nsw i32 %52, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %51, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %47, %56
  br i1 %57, label %58, label %85

; <label>:58:                                     ; preds = %46
  %59 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %60 = load double*, double** %59, align 8
  %61 = load i32, i32* %19, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds double, double* %60, i64 %62
  %64 = load double, double* %63, align 8
  %65 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %66 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %67 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %66)
  %68 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %67, i32 0, i32 8
  %69 = load i32*, i32** %68, align 8
  %70 = load i32, i32* %19, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %69, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %65, i32 %73)
  %75 = load float, float* %74, align 4
  %76 = fpext float %75 to double
  %77 = fmul double %64, %76
  %78 = load float, float* %18, align 4
  %79 = fpext float %78 to double
  %80 = fsub double %79, %77
  %81 = fptrunc double %80 to float
  store float %81, float* %18, align 4
  br label %82

; <label>:82:                                     ; preds = %58
  %83 = load i32, i32* %19, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %19, align 4
  br label %46

; <label>:85:                                     ; preds = %46
  %86 = load float, float* %18, align 4
  %87 = fpext float %86 to double
  %88 = load double, double* %16, align 8
  %89 = fmul double %87, %88
  %90 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %91 = load double*, double** %90, align 8
  %92 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %93 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %92)
  %94 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %93, i32 0, i32 7
  %95 = load i32*, i32** %94, align 8
  %96 = load i32, i32* %17, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i32, i32* %95, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds double, double* %91, i64 %100
  %102 = load double, double* %101, align 8
  %103 = fdiv double %89, %102
  %104 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %105 = load i32, i32* %17, align 4
  %106 = call dereferenceable(4) float* @_ZN6VectorIfEclEj(%class.Vector.10* %104, i32 %105)
  %107 = load float, float* %106, align 4
  %108 = fpext float %107 to double
  %109 = fadd double %108, %103
  %110 = fptrunc double %109 to float
  store float %110, float* %106, align 4
  br label %111

; <label>:111:                                    ; preds = %85
  %112 = load i32, i32* %17, align 4
  %113 = add nsw i32 %112, -1
  store i32 %113, i32* %17, align 4
  br label %31

; <label>:114:                                    ; preds = %31
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %115 = alloca %class.SparseMatrix*, align 8
  %116 = alloca %class.Vector.10*, align 8
  %117 = alloca %class.Vector.10*, align 8
  %118 = alloca double, align 8
  %119 = alloca i32, align 4
  %120 = alloca float, align 4
  %121 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %115, align 8
  store %class.Vector.10* %1, %class.Vector.10** %116, align 8
  store %class.Vector.10* %2, %class.Vector.10** %117, align 8
  store double %3, double* %118, align 8
  %122 = load %class.SparseMatrix*, %class.SparseMatrix** %115, align 8
  %123 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %122)
  %_ = shl i32 %123, 1
  %_1 = sub i32 %123, 1
  %gen = mul i32 %_1, 1
  %_2 = shl i32 %123, 1
  %124 = sub i32 %123, 1
  store i32 %124, i32* %119, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9SSOR_stepIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector.10* dereferenceable(24), %class.Vector.10* dereferenceable(24), double) #0 comdat align 2 {
  %5 = load i32, i32* @x.277
  %6 = load i32, i32* @y.278
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector.10*, align 8
  %15 = alloca %class.Vector.10*, align 8
  %16 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector.10* %1, %class.Vector.10** %14, align 8
  store %class.Vector.10* %2, %class.Vector.10** %15, align 8
  store double %3, double* %16, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %18 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %19 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %20 = load double, double* %16, align 8
  call void @_ZNK12SparseMatrixIdE8SOR_stepIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %17, %class.Vector.10* dereferenceable(24) %18, %class.Vector.10* dereferenceable(24) %19, double %20)
  %21 = load %class.Vector.10*, %class.Vector.10** %14, align 8
  %22 = load %class.Vector.10*, %class.Vector.10** %15, align 8
  %23 = load double, double* %16, align 8
  call void @_ZNK12SparseMatrixIdE9TSOR_stepIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %17, %class.Vector.10* dereferenceable(24) %21, %class.Vector.10* dereferenceable(24) %22, double %23)
  %24 = load i32, i32* @x.277
  %25 = load i32, i32* @y.278
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %32 = alloca %class.SparseMatrix*, align 8
  %33 = alloca %class.Vector.10*, align 8
  %34 = alloca %class.Vector.10*, align 8
  %35 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %32, align 8
  store %class.Vector.10* %1, %class.Vector.10** %33, align 8
  store %class.Vector.10* %2, %class.Vector.10** %34, align 8
  store double %3, double* %35, align 8
  %36 = load %class.SparseMatrix*, %class.SparseMatrix** %32, align 8
  %37 = load %class.Vector.10*, %class.Vector.10** %33, align 8
  %38 = load %class.Vector.10*, %class.Vector.10** %34, align 8
  %39 = load double, double* %35, align 8
  call void @_ZNK12SparseMatrixIdE8SOR_stepIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %36, %class.Vector.10* dereferenceable(24) %37, %class.Vector.10* dereferenceable(24) %38, double %39)
  %40 = load %class.Vector.10*, %class.Vector.10** %33, align 8
  %41 = load %class.Vector.10*, %class.Vector.10** %34, align 8
  %42 = load double, double* %35, align 8
  call void @_ZNK12SparseMatrixIdE9TSOR_stepIfEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %36, %class.Vector.10* dereferenceable(24) %40, %class.Vector.10* dereferenceable(24) %41, double %42)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5vmultI6VectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca double*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca double*, align 8
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %14)
  store i32 %15, i32* %7, align 4
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %19 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %18)
  %20 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %19, i32 0, i32 7
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds double, double* %17, i64 %24
  store double* %25, double** %8, align 8
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 8
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %31 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %30)
  %32 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %31, i32 0, i32 7
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %29, i64 %36
  store i32* %37, i32** %9, align 8
  %38 = load %class.Vector*, %class.Vector** %5, align 8
  %39 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %38)
  store double* %39, double** %10, align 8
  store i32 0, i32* %11, align 4
  br label %40

; <label>:40:                                     ; preds = %originalBBpart220, %3
  %41 = load i32, i32* @x.279
  %42 = load i32, i32* @y.280
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %40, %originalBBalteredBB
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %7, align 4
  %51 = icmp ult i32 %49, %50
  %52 = load i32, i32* @x.279
  %53 = load i32, i32* @y.280
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %51, label %60, label %129

; <label>:60:                                     ; preds = %originalBBpart2
  %61 = load i32, i32* @x.279
  %62 = load i32, i32* @y.280
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  store double 0.000000e+00, double* %12, align 8
  %69 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %70 = load double*, double** %69, align 8
  %71 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %72 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %71)
  %73 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %72, i32 0, i32 7
  %74 = load i32*, i32** %73, align 8
  %75 = load i32, i32* %11, align 4
  %76 = add i32 %75, 1
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %74, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds double, double* %70, i64 %80
  store double* %81, double** %13, align 8
  %82 = load i32, i32* @x.279
  %83 = load i32, i32* @y.280
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %90

; <label>:90:                                     ; preds = %94, %originalBBpart29
  %91 = load double*, double** %8, align 8
  %92 = load double*, double** %13, align 8
  %93 = icmp ne double* %91, %92
  br i1 %93, label %94, label %106

; <label>:94:                                     ; preds = %90
  %95 = load double*, double** %8, align 8
  %96 = getelementptr inbounds double, double* %95, i32 1
  store double* %96, double** %8, align 8
  %97 = load double, double* %95, align 8
  %98 = load %class.Vector*, %class.Vector** %6, align 8
  %99 = load i32*, i32** %9, align 8
  %100 = getelementptr inbounds i32, i32* %99, i32 1
  store i32* %100, i32** %9, align 8
  %101 = load i32, i32* %99, align 4
  %102 = call double @_ZNK6VectorIdEclEj(%class.Vector* %98, i32 %101)
  %103 = fmul double %97, %102
  %104 = load double, double* %12, align 8
  %105 = fadd double %104, %103
  store double %105, double* %12, align 8
  br label %90

; <label>:106:                                    ; preds = %90
  %107 = load double, double* %12, align 8
  %108 = load double*, double** %10, align 8
  %109 = getelementptr inbounds double, double* %108, i32 1
  store double* %109, double** %10, align 8
  store double %107, double* %108, align 8
  br label %110

; <label>:110:                                    ; preds = %106
  %111 = load i32, i32* @x.279
  %112 = load i32, i32* @y.280
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %110, %originalBB11alteredBB
  %119 = load i32, i32* %11, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %11, align 4
  %121 = load i32, i32* @x.279
  %122 = load i32, i32* @y.280
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB11alteredBB

originalBBpart220:                                ; preds = %originalBB11
  br label %40

; <label>:129:                                    ; preds = %originalBBpart2
  %130 = load i32, i32* @x.279
  %131 = load i32, i32* @y.280
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load i32, i32* @x.279
  %139 = load i32, i32* @y.280
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %40
  %146 = load i32, i32* %11, align 4
  %147 = load i32, i32* %7, align 4
  %148 = icmp ult i32 %146, %147
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  store double 0.000000e+00, double* %12, align 8
  %149 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %150 = load double*, double** %149, align 8
  %151 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %152 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %151)
  %153 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %152, i32 0, i32 7
  %154 = load i32*, i32** %153, align 8
  %155 = load i32, i32* %11, align 4
  %_ = sub i32 %155, 1
  %gen = mul i32 %_, 1
  %_2 = sub i32 0, %155
  %gen3 = add i32 %_2, 1
  %_4 = sub i32 0, %155
  %gen5 = add i32 %_4, 1
  %_6 = sub i32 0, %155
  %gen7 = add i32 %_6, 1
  %156 = add i32 %155, 1
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %154, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds double, double* %150, i64 %160
  store double* %161, double** %13, align 8
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %110
  %162 = load i32, i32* %11, align 4
  %_12 = shl i32 %162, 1
  %_13 = shl i32 %162, 1
  %_14 = shl i32 %162, 1
  %_15 = sub i32 0, %162
  %gen16 = add i32 %_15, 1
  %_17 = sub i32 0, %162
  %gen18 = add i32 %_17, 1
  %163 = add i32 %162, 1
  store i32 %163, i32* %11, align 4
  br label %originalBB11

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  br label %originalBB22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZN6VectorIdE5beginEv(%class.Vector*) #5 comdat align 2 {
  %2 = load i32, i32* @x.281
  %3 = load i32, i32* @y.282
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds double, double* %13, i64 0
  %15 = load i32, i32* @x.281
  %16 = load i32, i32* @y.282
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %23, align 8
  %24 = load %class.Vector*, %class.Vector** %23, align 8
  %25 = getelementptr inbounds %class.Vector, %class.Vector* %24, i32 0, i32 3
  %26 = load double*, double** %25, align 8
  %27 = getelementptr inbounds double, double* %26, i64 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZNK6VectorIdEclEj(%class.Vector*, i32) #5 comdat align 2 {
  %3 = alloca %class.Vector*, align 8
  %4 = alloca i32, align 4
  store %class.Vector* %0, %class.Vector** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector*, %class.Vector** %3, align 8
  %6 = getelementptr inbounds %class.Vector, %class.Vector* %5, i32 0, i32 3
  %7 = load double*, double** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds double, double* %7, i64 %9
  %11 = load double, double* %10, align 8
  ret double %11
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE6TvmultI6VectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = load %class.Vector*, %class.Vector** %5, align 8
  %12 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector* %11, double 0.000000e+00)
  store i32 0, i32* %7, align 4
  br label %13

; <label>:13:                                     ; preds = %82, %3
  %14 = load i32, i32* %7, align 4
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %85

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* @x.285
  %19 = load i32, i32* @y.286
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 7
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %7, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %8, align 4
  %34 = load i32, i32* @x.285
  %35 = load i32, i32* @y.286
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %78, %originalBBpart2
  %43 = load i32, i32* %8, align 4
  %44 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %45 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %44)
  %46 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %45, i32 0, i32 7
  %47 = load i32*, i32** %46, align 8
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %47, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp ult i32 %43, %52
  br i1 %53, label %54, label %81

; <label>:54:                                     ; preds = %42
  %55 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %56 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %55)
  %57 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %56, i32 0, i32 8
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %8, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %9, align 4
  %63 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %64 = load double*, double** %63, align 8
  %65 = load i32, i32* %8, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds double, double* %64, i64 %66
  %68 = load double, double* %67, align 8
  %69 = load %class.Vector*, %class.Vector** %6, align 8
  %70 = load i32, i32* %7, align 4
  %71 = call double @_ZNK6VectorIdEclEj(%class.Vector* %69, i32 %70)
  %72 = fmul double %68, %71
  %73 = load %class.Vector*, %class.Vector** %5, align 8
  %74 = load i32, i32* %9, align 4
  %75 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %73, i32 %74)
  %76 = load double, double* %75, align 8
  %77 = fadd double %76, %72
  store double %77, double* %75, align 8
  br label %78

; <label>:78:                                     ; preds = %54
  %79 = load i32, i32* %8, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %8, align 4
  br label %42

; <label>:81:                                     ; preds = %42
  br label %82

; <label>:82:                                     ; preds = %81
  %83 = load i32, i32* %7, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %7, align 4
  br label %13

; <label>:85:                                     ; preds = %13
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %17
  %86 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %87 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %86)
  %88 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %87, i32 0, i32 7
  %89 = load i32*, i32** %88, align 8
  %90 = load i32, i32* %7, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %8, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector*, double) #0 comdat align 2 {
  %3 = load i32, i32* @x.287
  %4 = load i32, i32* @y.288
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Vector*, align 8
  %12 = alloca double, align 8
  store %class.Vector* %0, %class.Vector** %11, align 8
  store double %1, double* %12, align 8
  %13 = load %class.Vector*, %class.Vector** %11, align 8
  %14 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %13)
  %15 = call double* @_ZN6VectorIdE3endEv(%class.Vector* %13)
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %14, double* %15, double* dereferenceable(8) %12)
  %16 = load i32, i32* @x.287
  %17 = load i32, i32* @y.288
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %class.Vector*, align 8
  %25 = alloca double, align 8
  store %class.Vector* %0, %class.Vector** %24, align 8
  store double %1, double* %25, align 8
  %26 = load %class.Vector*, %class.Vector** %24, align 8
  %27 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %26)
  %28 = call double* @_ZN6VectorIdE3endEv(%class.Vector* %26)
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %27, double* %28, double* dereferenceable(8) %25)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9vmult_addI6VectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca double*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca double*, align 8
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %14)
  store i32 %15, i32* %7, align 4
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %19 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %18)
  %20 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %19, i32 0, i32 7
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds double, double* %17, i64 %24
  store double* %25, double** %8, align 8
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 8
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %31 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %30)
  %32 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %31, i32 0, i32 7
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %29, i64 %36
  store i32* %37, i32** %9, align 8
  %38 = load %class.Vector*, %class.Vector** %5, align 8
  %39 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %38)
  store double* %39, double** %10, align 8
  store i32 0, i32* %11, align 4
  br label %40

; <label>:40:                                     ; preds = %originalBBpart24, %3
  %41 = load i32, i32* @x.289
  %42 = load i32, i32* @y.290
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %40, %originalBBalteredBB
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %7, align 4
  %51 = icmp ult i32 %49, %50
  %52 = load i32, i32* @x.289
  %53 = load i32, i32* @y.290
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %51, label %60, label %115

; <label>:60:                                     ; preds = %originalBBpart2
  store double 0.000000e+00, double* %12, align 8
  %61 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %62 = load double*, double** %61, align 8
  %63 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %64 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %63)
  %65 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %64, i32 0, i32 7
  %66 = load i32*, i32** %65, align 8
  %67 = load i32, i32* %11, align 4
  %68 = add i32 %67, 1
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds double, double* %62, i64 %72
  store double* %73, double** %13, align 8
  br label %74

; <label>:74:                                     ; preds = %78, %60
  %75 = load double*, double** %8, align 8
  %76 = load double*, double** %13, align 8
  %77 = icmp ne double* %75, %76
  br i1 %77, label %78, label %90

; <label>:78:                                     ; preds = %74
  %79 = load double*, double** %8, align 8
  %80 = getelementptr inbounds double, double* %79, i32 1
  store double* %80, double** %8, align 8
  %81 = load double, double* %79, align 8
  %82 = load %class.Vector*, %class.Vector** %6, align 8
  %83 = load i32*, i32** %9, align 8
  %84 = getelementptr inbounds i32, i32* %83, i32 1
  store i32* %84, i32** %9, align 8
  %85 = load i32, i32* %83, align 4
  %86 = call double @_ZNK6VectorIdEclEj(%class.Vector* %82, i32 %85)
  %87 = fmul double %81, %86
  %88 = load double, double* %12, align 8
  %89 = fadd double %88, %87
  store double %89, double* %12, align 8
  br label %74

; <label>:90:                                     ; preds = %74
  %91 = load double, double* %12, align 8
  %92 = load double*, double** %10, align 8
  %93 = getelementptr inbounds double, double* %92, i32 1
  store double* %93, double** %10, align 8
  %94 = load double, double* %92, align 8
  %95 = fadd double %94, %91
  store double %95, double* %92, align 8
  br label %96

; <label>:96:                                     ; preds = %90
  %97 = load i32, i32* @x.289
  %98 = load i32, i32* @y.290
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %96, %originalBB1alteredBB
  %105 = load i32, i32* %11, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %11, align 4
  %107 = load i32, i32* @x.289
  %108 = load i32, i32* @y.290
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %40

; <label>:115:                                    ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %40
  %116 = load i32, i32* %11, align 4
  %117 = load i32, i32* %7, align 4
  %118 = icmp ult i32 %116, %117
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %96
  %119 = load i32, i32* %11, align 4
  %_ = sub i32 0, %119
  %gen = add i32 %_, 1
  %120 = add i32 %119, 1
  store i32 %120, i32* %11, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE10Tvmult_addI6VectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24)) #0 comdat align 2 {
  %4 = load i32, i32* @x.291
  %5 = load i32, i32* @y.292
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca %class.Vector*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store %class.Vector* %1, %class.Vector** %13, align 8
  store %class.Vector* %2, %class.Vector** %14, align 8
  %18 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  store i32 0, i32* %15, align 4
  %19 = load i32, i32* @x.291
  %20 = load i32, i32* @y.292
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %80, %originalBBpart2
  %28 = load i32, i32* %15, align 4
  %29 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %18)
  %30 = icmp ult i32 %28, %29
  br i1 %30, label %31, label %83

; <label>:31:                                     ; preds = %27
  %32 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %33 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %32)
  %34 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %33, i32 0, i32 7
  %35 = load i32*, i32** %34, align 8
  %36 = load i32, i32* %15, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %16, align 4
  br label %40

; <label>:40:                                     ; preds = %76, %31
  %41 = load i32, i32* %16, align 4
  %42 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %43 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %42)
  %44 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %43, i32 0, i32 7
  %45 = load i32*, i32** %44, align 8
  %46 = load i32, i32* %15, align 4
  %47 = add i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %45, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp ult i32 %41, %50
  br i1 %51, label %52, label %79

; <label>:52:                                     ; preds = %40
  %53 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 1
  %54 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %53)
  %55 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %54, i32 0, i32 8
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %16, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %17, align 4
  %61 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %18, i32 0, i32 2
  %62 = load double*, double** %61, align 8
  %63 = load i32, i32* %16, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds double, double* %62, i64 %64
  %66 = load double, double* %65, align 8
  %67 = load %class.Vector*, %class.Vector** %14, align 8
  %68 = load i32, i32* %15, align 4
  %69 = call double @_ZNK6VectorIdEclEj(%class.Vector* %67, i32 %68)
  %70 = fmul double %66, %69
  %71 = load %class.Vector*, %class.Vector** %13, align 8
  %72 = load i32, i32* %17, align 4
  %73 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %71, i32 %72)
  %74 = load double, double* %73, align 8
  %75 = fadd double %74, %70
  store double %75, double* %73, align 8
  br label %76

; <label>:76:                                     ; preds = %52
  %77 = load i32, i32* %16, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %16, align 4
  br label %40

; <label>:79:                                     ; preds = %40
  br label %80

; <label>:80:                                     ; preds = %79
  %81 = load i32, i32* %15, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %15, align 4
  br label %27

; <label>:83:                                     ; preds = %27
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %84 = alloca %class.SparseMatrix*, align 8
  %85 = alloca %class.Vector*, align 8
  %86 = alloca %class.Vector*, align 8
  %87 = alloca i32, align 4
  %88 = alloca i32, align 4
  %89 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %84, align 8
  store %class.Vector* %1, %class.Vector** %85, align 8
  store %class.Vector* %2, %class.Vector** %86, align 8
  %90 = load %class.SparseMatrix*, %class.SparseMatrix** %84, align 8
  store i32 0, i32* %87, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5vmultI11BlockVectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector.16* dereferenceable(64), %class.BlockVector.16* dereferenceable(64)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.BlockVector.16*, align 8
  %6 = alloca %class.BlockVector.16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca double*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.internal::BlockVectorIterators::Iterator.23", align 8
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double*, align 8
  %14 = alloca %"class.internal::BlockVectorIterators::Iterator.23", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.BlockVector.16* %1, %class.BlockVector.16** %5, align 8
  store %class.BlockVector.16* %2, %class.BlockVector.16** %6, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %16 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %15)
  store i32 %16, i32* %7, align 4
  %17 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %18 = load double*, double** %17, align 8
  %19 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %20 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %19)
  %21 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %20, i32 0, i32 7
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds double, double* %18, i64 %25
  store double* %26, double** %8, align 8
  %27 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %28 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %27)
  %29 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %28, i32 0, i32 8
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %32 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %31)
  %33 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %32, i32 0, i32 7
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %30, i64 %37
  store i32* %38, i32** %9, align 8
  %39 = load %class.BlockVector.16*, %class.BlockVector.16** %5, align 8
  call void @_ZN11BlockVectorIdE5beginEv(%"class.internal::BlockVectorIterators::Iterator.23"* sret %10, %class.BlockVector.16* %39)
  store i32 0, i32* %11, align 4
  br label %40

; <label>:40:                                     ; preds = %109, %3
  %41 = load i32, i32* @x.293
  %42 = load i32, i32* @y.294
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %40, %originalBBalteredBB
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %7, align 4
  %51 = icmp ult i32 %49, %50
  %52 = load i32, i32* @x.293
  %53 = load i32, i32* @y.294
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %51, label %60, label %112

; <label>:60:                                     ; preds = %originalBBpart2
  store double 0.000000e+00, double* %12, align 8
  %61 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %62 = load double*, double** %61, align 8
  %63 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %64 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %63)
  %65 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %64, i32 0, i32 7
  %66 = load i32*, i32** %65, align 8
  %67 = load i32, i32* %11, align 4
  %68 = add i32 %67, 1
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds double, double* %62, i64 %72
  store double* %73, double** %13, align 8
  br label %74

; <label>:74:                                     ; preds = %originalBBpart24, %60
  %75 = load double*, double** %8, align 8
  %76 = load double*, double** %13, align 8
  %77 = icmp ne double* %75, %76
  br i1 %77, label %78, label %106

; <label>:78:                                     ; preds = %74
  %79 = load i32, i32* @x.293
  %80 = load i32, i32* @y.294
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %78, %originalBB1alteredBB
  %87 = load double*, double** %8, align 8
  %88 = getelementptr inbounds double, double* %87, i32 1
  store double* %88, double** %8, align 8
  %89 = load double, double* %87, align 8
  %90 = load %class.BlockVector.16*, %class.BlockVector.16** %6, align 8
  %91 = load i32*, i32** %9, align 8
  %92 = getelementptr inbounds i32, i32* %91, i32 1
  store i32* %92, i32** %9, align 8
  %93 = load i32, i32* %91, align 4
  %94 = call double @_ZNK11BlockVectorIdEclEj(%class.BlockVector.16* %90, i32 %93)
  %95 = fmul double %89, %94
  %96 = load double, double* %12, align 8
  %97 = fadd double %96, %95
  store double %97, double* %12, align 8
  %98 = load i32, i32* @x.293
  %99 = load i32, i32* @y.294
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %74

; <label>:106:                                    ; preds = %74
  %107 = load double, double* %12, align 8
  call void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EEppEi(%"class.internal::BlockVectorIterators::Iterator.23"* sret %14, %"class.internal::BlockVectorIterators::Iterator.23"* %10, i32 0)
  %108 = call dereferenceable(8) double* @_ZNK8internal20BlockVectorIterators8IteratorIdLb0EEdeEv(%"class.internal::BlockVectorIterators::Iterator.23"* %14)
  store double %107, double* %108, align 8
  br label %109

; <label>:109:                                    ; preds = %106
  %110 = load i32, i32* %11, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %11, align 4
  br label %40

; <label>:112:                                    ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %40
  %113 = load i32, i32* %11, align 4
  %114 = load i32, i32* %7, align 4
  %115 = icmp ult i32 %113, %114
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %78
  %116 = load double*, double** %8, align 8
  %117 = getelementptr inbounds double, double* %116, i32 1
  store double* %117, double** %8, align 8
  %118 = load double, double* %116, align 8
  %119 = load %class.BlockVector.16*, %class.BlockVector.16** %6, align 8
  %120 = load i32*, i32** %9, align 8
  %121 = getelementptr inbounds i32, i32* %120, i32 1
  store i32* %121, i32** %9, align 8
  %122 = load i32, i32* %120, align 4
  %123 = call double @_ZNK11BlockVectorIdEclEj(%class.BlockVector.16* %119, i32 %122)
  %_ = fsub double %118, %123
  %gen = fmul double %_, %123
  %124 = fmul double %118, %123
  %125 = load double, double* %12, align 8
  %126 = fadd double %125, %124
  store double %126, double* %12, align 8
  br label %originalBB1
}

declare void @_ZN11BlockVectorIdE5beginEv(%"class.internal::BlockVectorIterators::Iterator.23"* sret, %class.BlockVector.16*) #1

; Function Attrs: noinline uwtable
define linkonce_odr double @_ZNK11BlockVectorIdEclEj(%class.BlockVector.16*, i32) #0 comdat align 2 {
  %3 = alloca %class.BlockVector.16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"struct.std::pair", align 4
  store %class.BlockVector.16* %0, %class.BlockVector.16** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.BlockVector.16*, %class.BlockVector.16** %3, align 8
  %7 = getelementptr inbounds %class.BlockVector.16, %class.BlockVector.16* %6, i32 0, i32 1
  %8 = load i32, i32* %4, align 4
  %9 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %7, i32 %8)
  %10 = bitcast %"struct.std::pair"* %5 to i64*
  store i64 %9, i64* %10, align 4
  %11 = getelementptr inbounds %class.BlockVector.16, %class.BlockVector.16* %6, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = call dereferenceable(24) %class.Vector* @_ZNKSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.17"* %11, i64 %14)
  %16 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = call double @_ZNK6VectorIdEclEj(%class.Vector* %15, i32 %17)
  ret double %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EEppEi(%"class.internal::BlockVectorIterators::Iterator.23"* noalias sret, %"class.internal::BlockVectorIterators::Iterator.23"*, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.297
  %5 = load i32, i32* @y.298
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  %13 = alloca i32, align 4
  store %"class.internal::BlockVectorIterators::Iterator.23"* %1, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  store i32 %2, i32* %13, align 4
  %14 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  call void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EEC2ERKS2_(%"class.internal::BlockVectorIterators::Iterator.23"* %0, %"class.internal::BlockVectorIterators::Iterator.23"* dereferenceable(32) %14)
  call void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EE12move_forwardEv(%"class.internal::BlockVectorIterators::Iterator.23"* %14)
  %15 = load i32, i32* @x.297
  %16 = load i32, i32* @y.298
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %23 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  %24 = alloca i32, align 4
  store %"class.internal::BlockVectorIterators::Iterator.23"* %1, %"class.internal::BlockVectorIterators::Iterator.23"** %23, align 8
  store i32 %2, i32* %24, align 4
  %25 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %23, align 8
  call void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EEC2ERKS2_(%"class.internal::BlockVectorIterators::Iterator.23"* %0, %"class.internal::BlockVectorIterators::Iterator.23"* dereferenceable(32) %25)
  call void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EE12move_forwardEv(%"class.internal::BlockVectorIterators::Iterator.23"* %25)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) double* @_ZNK8internal20BlockVectorIterators8IteratorIdLb0EEdeEv(%"class.internal::BlockVectorIterators::Iterator.23"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.299
  %3 = load i32, i32* @y.300
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  %11 = alloca double*, align 8
  store %"class.internal::BlockVectorIterators::Iterator.23"* %0, %"class.internal::BlockVectorIterators::Iterator.23"** %10, align 8
  %12 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %10, align 8
  %13 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %12, i32 0, i32 0
  %14 = load %class.BlockVector.16*, %class.BlockVector.16** %13, align 8
  %15 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %12, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = call dereferenceable(24) %class.Vector* @_ZN11BlockVectorIdE5blockEj(%class.BlockVector.16* %14, i32 %16)
  %18 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %12, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %17, i32 %19)
  store double* %20, double** %11, align 8
  %21 = load double*, double** %11, align 8
  %22 = load i32, i32* @x.299
  %23 = load i32, i32* @y.300
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %21

originalBBalteredBB:                              ; preds = %originalBB, %1
  %30 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  %31 = alloca double*, align 8
  store %"class.internal::BlockVectorIterators::Iterator.23"* %0, %"class.internal::BlockVectorIterators::Iterator.23"** %30, align 8
  %32 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %30, align 8
  %33 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %32, i32 0, i32 0
  %34 = load %class.BlockVector.16*, %class.BlockVector.16** %33, align 8
  %35 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %32, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = call dereferenceable(24) %class.Vector* @_ZN11BlockVectorIdE5blockEj(%class.BlockVector.16* %34, i32 %36)
  %38 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %32, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %37, i32 %39)
  store double* %40, double** %31, align 8
  %41 = load double*, double** %31, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE6TvmultI11BlockVectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector.16* dereferenceable(64), %class.BlockVector.16* dereferenceable(64)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.BlockVector.16*, align 8
  %6 = alloca %class.BlockVector.16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.BlockVector.16* %1, %class.BlockVector.16** %5, align 8
  store %class.BlockVector.16* %2, %class.BlockVector.16** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = load %class.BlockVector.16*, %class.BlockVector.16** %5, align 8
  %12 = call dereferenceable(64) %class.BlockVector.16* @_ZN11BlockVectorIdEaSEd(%class.BlockVector.16* %11, double 0.000000e+00)
  store i32 0, i32* %7, align 4
  br label %13

; <label>:13:                                     ; preds = %98, %3
  %14 = load i32, i32* %7, align 4
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %101

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* @x.301
  %19 = load i32, i32* @y.302
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 7
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %7, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %8, align 4
  %34 = load i32, i32* @x.301
  %35 = load i32, i32* @y.302
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %78, %originalBBpart2
  %43 = load i32, i32* %8, align 4
  %44 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %45 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %44)
  %46 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %45, i32 0, i32 7
  %47 = load i32*, i32** %46, align 8
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %47, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp ult i32 %43, %52
  br i1 %53, label %54, label %81

; <label>:54:                                     ; preds = %42
  %55 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %56 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %55)
  %57 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %56, i32 0, i32 8
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %8, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %9, align 4
  %63 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %64 = load double*, double** %63, align 8
  %65 = load i32, i32* %8, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds double, double* %64, i64 %66
  %68 = load double, double* %67, align 8
  %69 = load %class.BlockVector.16*, %class.BlockVector.16** %6, align 8
  %70 = load i32, i32* %7, align 4
  %71 = call double @_ZNK11BlockVectorIdEclEj(%class.BlockVector.16* %69, i32 %70)
  %72 = fmul double %68, %71
  %73 = load %class.BlockVector.16*, %class.BlockVector.16** %5, align 8
  %74 = load i32, i32* %9, align 4
  %75 = call dereferenceable(8) double* @_ZN11BlockVectorIdEclEj(%class.BlockVector.16* %73, i32 %74)
  %76 = load double, double* %75, align 8
  %77 = fadd double %76, %72
  store double %77, double* %75, align 8
  br label %78

; <label>:78:                                     ; preds = %54
  %79 = load i32, i32* %8, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %8, align 4
  br label %42

; <label>:81:                                     ; preds = %42
  %82 = load i32, i32* @x.301
  %83 = load i32, i32* @y.302
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %81, %originalBB1alteredBB
  %90 = load i32, i32* @x.301
  %91 = load i32, i32* @y.302
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %98

; <label>:98:                                     ; preds = %originalBBpart24
  %99 = load i32, i32* %7, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %7, align 4
  br label %13

; <label>:101:                                    ; preds = %13
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %17
  %102 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %103 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %102)
  %104 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %103, i32 0, i32 7
  %105 = load i32*, i32** %104, align 8
  %106 = load i32, i32* %7, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %105, i64 %107
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %81
  br label %originalBB1
}

declare dereferenceable(64) %class.BlockVector.16* @_ZN11BlockVectorIdEaSEd(%class.BlockVector.16*, double) #1

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) double* @_ZN11BlockVectorIdEclEj(%class.BlockVector.16*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.303
  %4 = load i32, i32* @y.304
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.BlockVector.16*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %"struct.std::pair", align 4
  store %class.BlockVector.16* %0, %class.BlockVector.16** %11, align 8
  store i32 %1, i32* %12, align 4
  %14 = load %class.BlockVector.16*, %class.BlockVector.16** %11, align 8
  %15 = getelementptr inbounds %class.BlockVector.16, %class.BlockVector.16* %14, i32 0, i32 1
  %16 = load i32, i32* %12, align 4
  %17 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %15, i32 %16)
  %18 = bitcast %"struct.std::pair"* %13 to i64*
  store i64 %17, i64* %18, align 4
  %19 = getelementptr inbounds %class.BlockVector.16, %class.BlockVector.16* %14, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = call dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.17"* %19, i64 %22)
  %24 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %23, i32 %25)
  %27 = load i32, i32* @x.303
  %28 = load i32, i32* @y.304
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %26

originalBBalteredBB:                              ; preds = %originalBB, %2
  %35 = alloca %class.BlockVector.16*, align 8
  %36 = alloca i32, align 4
  %37 = alloca %"struct.std::pair", align 4
  store %class.BlockVector.16* %0, %class.BlockVector.16** %35, align 8
  store i32 %1, i32* %36, align 4
  %38 = load %class.BlockVector.16*, %class.BlockVector.16** %35, align 8
  %39 = getelementptr inbounds %class.BlockVector.16, %class.BlockVector.16* %38, i32 0, i32 1
  %40 = load i32, i32* %36, align 4
  %41 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %39, i32 %40)
  %42 = bitcast %"struct.std::pair"* %37 to i64*
  store i64 %41, i64* %42, align 4
  %43 = getelementptr inbounds %class.BlockVector.16, %class.BlockVector.16* %38, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %37, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = call dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.17"* %43, i64 %46)
  %48 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %37, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %47, i32 %49)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9vmult_addI11BlockVectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector.16* dereferenceable(64), %class.BlockVector.16* dereferenceable(64)) #0 comdat align 2 {
  %4 = load i32, i32* @x.305
  %5 = load i32, i32* @y.306
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.SparseMatrix*, align 8
  %13 = alloca %class.BlockVector.16*, align 8
  %14 = alloca %class.BlockVector.16*, align 8
  %15 = alloca i32, align 4
  %16 = alloca double*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca %"class.internal::BlockVectorIterators::Iterator.23", align 8
  %19 = alloca i32, align 4
  %20 = alloca double, align 8
  %21 = alloca double*, align 8
  %22 = alloca %"class.internal::BlockVectorIterators::Iterator.23", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %12, align 8
  store %class.BlockVector.16* %1, %class.BlockVector.16** %13, align 8
  store %class.BlockVector.16* %2, %class.BlockVector.16** %14, align 8
  %23 = load %class.SparseMatrix*, %class.SparseMatrix** %12, align 8
  %24 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %23)
  store i32 %24, i32* %15, align 4
  %25 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 2
  %26 = load double*, double** %25, align 8
  %27 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %28 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %27)
  %29 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %28, i32 0, i32 7
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds double, double* %26, i64 %33
  store double* %34, double** %16, align 8
  %35 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %36 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %35)
  %37 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %36, i32 0, i32 8
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %40 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %39)
  %41 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %40, i32 0, i32 7
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %38, i64 %45
  store i32* %46, i32** %17, align 8
  %47 = load %class.BlockVector.16*, %class.BlockVector.16** %13, align 8
  call void @_ZN11BlockVectorIdE5beginEv(%"class.internal::BlockVectorIterators::Iterator.23"* sret %18, %class.BlockVector.16* %47)
  store i32 0, i32* %19, align 4
  %48 = load i32, i32* @x.305
  %49 = load i32, i32* @y.306
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:56:                                     ; preds = %originalBBpart215, %originalBBpart2
  %57 = load i32, i32* %19, align 4
  %58 = load i32, i32* %15, align 4
  %59 = icmp ult i32 %57, %58
  br i1 %59, label %60, label %146

; <label>:60:                                     ; preds = %56
  store double 0.000000e+00, double* %20, align 8
  %61 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 2
  %62 = load double*, double** %61, align 8
  %63 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %64 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %63)
  %65 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %64, i32 0, i32 7
  %66 = load i32*, i32** %65, align 8
  %67 = load i32, i32* %19, align 4
  %68 = add i32 %67, 1
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds double, double* %62, i64 %72
  store double* %73, double** %21, align 8
  br label %74

; <label>:74:                                     ; preds = %originalBBpart28, %60
  %75 = load i32, i32* @x.305
  %76 = load i32, i32* @y.306
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %74, %originalBB1alteredBB
  %83 = load double*, double** %16, align 8
  %84 = load double*, double** %21, align 8
  %85 = icmp ne double* %83, %84
  %86 = load i32, i32* @x.305
  %87 = load i32, i32* @y.306
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %85, label %94, label %122

; <label>:94:                                     ; preds = %originalBBpart24
  %95 = load i32, i32* @x.305
  %96 = load i32, i32* @y.306
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %94, %originalBB6alteredBB
  %103 = load double*, double** %16, align 8
  %104 = getelementptr inbounds double, double* %103, i32 1
  store double* %104, double** %16, align 8
  %105 = load double, double* %103, align 8
  %106 = load %class.BlockVector.16*, %class.BlockVector.16** %14, align 8
  %107 = load i32*, i32** %17, align 8
  %108 = getelementptr inbounds i32, i32* %107, i32 1
  store i32* %108, i32** %17, align 8
  %109 = load i32, i32* %107, align 4
  %110 = call double @_ZNK11BlockVectorIdEclEj(%class.BlockVector.16* %106, i32 %109)
  %111 = fmul double %105, %110
  %112 = load double, double* %20, align 8
  %113 = fadd double %112, %111
  store double %113, double* %20, align 8
  %114 = load i32, i32* @x.305
  %115 = load i32, i32* @y.306
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

; <label>:122:                                    ; preds = %originalBBpart24
  %123 = load double, double* %20, align 8
  call void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EEppEi(%"class.internal::BlockVectorIterators::Iterator.23"* sret %22, %"class.internal::BlockVectorIterators::Iterator.23"* %18, i32 0)
  %124 = call dereferenceable(8) double* @_ZNK8internal20BlockVectorIterators8IteratorIdLb0EEdeEv(%"class.internal::BlockVectorIterators::Iterator.23"* %22)
  %125 = load double, double* %124, align 8
  %126 = fadd double %125, %123
  store double %126, double* %124, align 8
  br label %127

; <label>:127:                                    ; preds = %122
  %128 = load i32, i32* @x.305
  %129 = load i32, i32* @y.306
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %127, %originalBB10alteredBB
  %136 = load i32, i32* %19, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %19, align 4
  %138 = load i32, i32* @x.305
  %139 = load i32, i32* @y.306
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart215, label %originalBB10alteredBB

originalBBpart215:                                ; preds = %originalBB10
  br label %56

; <label>:146:                                    ; preds = %56
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %147 = alloca %class.SparseMatrix*, align 8
  %148 = alloca %class.BlockVector.16*, align 8
  %149 = alloca %class.BlockVector.16*, align 8
  %150 = alloca i32, align 4
  %151 = alloca double*, align 8
  %152 = alloca i32*, align 8
  %153 = alloca %"class.internal::BlockVectorIterators::Iterator.23", align 8
  %154 = alloca i32, align 4
  %155 = alloca double, align 8
  %156 = alloca double*, align 8
  %157 = alloca %"class.internal::BlockVectorIterators::Iterator.23", align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %147, align 8
  store %class.BlockVector.16* %1, %class.BlockVector.16** %148, align 8
  store %class.BlockVector.16* %2, %class.BlockVector.16** %149, align 8
  %158 = load %class.SparseMatrix*, %class.SparseMatrix** %147, align 8
  %159 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %158)
  store i32 %159, i32* %150, align 4
  %160 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %158, i32 0, i32 2
  %161 = load double*, double** %160, align 8
  %162 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %158, i32 0, i32 1
  %163 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %162)
  %164 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %163, i32 0, i32 7
  %165 = load i32*, i32** %164, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 0
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds double, double* %161, i64 %168
  store double* %169, double** %151, align 8
  %170 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %158, i32 0, i32 1
  %171 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %170)
  %172 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %171, i32 0, i32 8
  %173 = load i32*, i32** %172, align 8
  %174 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %158, i32 0, i32 1
  %175 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %174)
  %176 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %175, i32 0, i32 7
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 0
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %173, i64 %180
  store i32* %181, i32** %152, align 8
  %182 = load %class.BlockVector.16*, %class.BlockVector.16** %148, align 8
  call void @_ZN11BlockVectorIdE5beginEv(%"class.internal::BlockVectorIterators::Iterator.23"* sret %153, %class.BlockVector.16* %182)
  store i32 0, i32* %154, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %74
  %183 = load double*, double** %16, align 8
  %184 = load double*, double** %21, align 8
  %185 = icmp ne double* %183, %184
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %94
  %186 = load double*, double** %16, align 8
  %187 = getelementptr inbounds double, double* %186, i32 1
  store double* %187, double** %16, align 8
  %188 = load double, double* %186, align 8
  %189 = load %class.BlockVector.16*, %class.BlockVector.16** %14, align 8
  %190 = load i32*, i32** %17, align 8
  %191 = getelementptr inbounds i32, i32* %190, i32 1
  store i32* %191, i32** %17, align 8
  %192 = load i32, i32* %190, align 4
  %193 = call double @_ZNK11BlockVectorIdEclEj(%class.BlockVector.16* %189, i32 %192)
  %194 = fmul double %188, %193
  %195 = load double, double* %20, align 8
  %196 = fadd double %195, %194
  store double %196, double* %20, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %127
  %197 = load i32, i32* %19, align 4
  %_ = shl i32 %197, 1
  %_11 = sub i32 0, %197
  %gen = add i32 %_11, 1
  %_12 = sub i32 0, %197
  %gen13 = add i32 %_12, 1
  %198 = add i32 %197, 1
  store i32 %198, i32* %19, align 4
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE10Tvmult_addI11BlockVectorIdES3_EEvRT_RKT0_(%class.SparseMatrix*, %class.BlockVector.16* dereferenceable(64), %class.BlockVector.16* dereferenceable(64)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.BlockVector.16*, align 8
  %6 = alloca %class.BlockVector.16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.BlockVector.16* %1, %class.BlockVector.16** %5, align 8
  store %class.BlockVector.16* %2, %class.BlockVector.16** %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  store i32 0, i32* %7, align 4
  br label %11

; <label>:11:                                     ; preds = %80, %3
  %12 = load i32, i32* @x.307
  %13 = load i32, i32* @y.308
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %7, align 4
  %21 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %22 = icmp ult i32 %20, %21
  %23 = load i32, i32* @x.307
  %24 = load i32, i32* @y.308
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %83

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %33 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %32)
  %34 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %33, i32 0, i32 7
  %35 = load i32*, i32** %34, align 8
  %36 = load i32, i32* %7, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %8, align 4
  br label %40

; <label>:40:                                     ; preds = %76, %31
  %41 = load i32, i32* %8, align 4
  %42 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %43 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %42)
  %44 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %43, i32 0, i32 7
  %45 = load i32*, i32** %44, align 8
  %46 = load i32, i32* %7, align 4
  %47 = add i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %45, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp ult i32 %41, %50
  br i1 %51, label %52, label %79

; <label>:52:                                     ; preds = %40
  %53 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %54 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %53)
  %55 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %54, i32 0, i32 8
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %8, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %9, align 4
  %61 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %62 = load double*, double** %61, align 8
  %63 = load i32, i32* %8, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds double, double* %62, i64 %64
  %66 = load double, double* %65, align 8
  %67 = load %class.BlockVector.16*, %class.BlockVector.16** %6, align 8
  %68 = load i32, i32* %7, align 4
  %69 = call double @_ZNK11BlockVectorIdEclEj(%class.BlockVector.16* %67, i32 %68)
  %70 = fmul double %66, %69
  %71 = load %class.BlockVector.16*, %class.BlockVector.16** %5, align 8
  %72 = load i32, i32* %9, align 4
  %73 = call dereferenceable(8) double* @_ZN11BlockVectorIdEclEj(%class.BlockVector.16* %71, i32 %72)
  %74 = load double, double* %73, align 8
  %75 = fadd double %74, %70
  store double %75, double* %73, align 8
  br label %76

; <label>:76:                                     ; preds = %52
  %77 = load i32, i32* %8, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %8, align 4
  br label %40

; <label>:79:                                     ; preds = %40
  br label %80

; <label>:80:                                     ; preds = %79
  %81 = load i32, i32* %7, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %7, align 4
  br label %11

; <label>:83:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %84 = load i32, i32* %7, align 4
  %85 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  %86 = icmp ult i32 %84, %85
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE18matrix_norm_squareIdEET_RK6VectorIS2_E(%class.SparseMatrix*, %class.Vector* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.309
  %4 = load i32, i32* @y.310
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.SparseMatrix*, align 8
  %12 = alloca %class.Vector*, align 8
  %13 = alloca i32, align 4
  %14 = alloca double, align 8
  %15 = alloca double*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca double, align 8
  %19 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %11, align 8
  store %class.Vector* %1, %class.Vector** %12, align 8
  %20 = load %class.SparseMatrix*, %class.SparseMatrix** %11, align 8
  %21 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %20)
  store i32 %21, i32* %13, align 4
  store double 0.000000e+00, double* %14, align 8
  %22 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %23 = load double*, double** %22, align 8
  %24 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %25 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %24)
  %26 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %25, i32 0, i32 7
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds double, double* %23, i64 %30
  store double* %31, double** %15, align 8
  %32 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %33 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %32)
  %34 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %33, i32 0, i32 8
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %37 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %36)
  %38 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %37, i32 0, i32 7
  %39 = load i32*, i32** %38, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %35, i64 %42
  store i32* %43, i32** %16, align 8
  store i32 0, i32* %17, align 4
  %44 = load i32, i32* @x.309
  %45 = load i32, i32* @y.310
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %52

; <label>:52:                                     ; preds = %110, %originalBBpart2
  %53 = load i32, i32* %17, align 4
  %54 = load i32, i32* %13, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %56, label %113

; <label>:56:                                     ; preds = %52
  store double 0.000000e+00, double* %18, align 8
  %57 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %58 = load double*, double** %57, align 8
  %59 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %60 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %59)
  %61 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %60, i32 0, i32 7
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %17, align 4
  %64 = add i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %62, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds double, double* %58, i64 %68
  store double* %69, double** %19, align 8
  br label %70

; <label>:70:                                     ; preds = %74, %56
  %71 = load double*, double** %15, align 8
  %72 = load double*, double** %19, align 8
  %73 = icmp ne double* %71, %72
  br i1 %73, label %74, label %86

; <label>:74:                                     ; preds = %70
  %75 = load double*, double** %15, align 8
  %76 = getelementptr inbounds double, double* %75, i32 1
  store double* %76, double** %15, align 8
  %77 = load double, double* %75, align 8
  %78 = load %class.Vector*, %class.Vector** %12, align 8
  %79 = load i32*, i32** %16, align 8
  %80 = getelementptr inbounds i32, i32* %79, i32 1
  store i32* %80, i32** %16, align 8
  %81 = load i32, i32* %79, align 4
  %82 = call double @_ZNK6VectorIdEclEj(%class.Vector* %78, i32 %81)
  %83 = fmul double %77, %82
  %84 = load double, double* %18, align 8
  %85 = fadd double %84, %83
  store double %85, double* %18, align 8
  br label %70

; <label>:86:                                     ; preds = %70
  %87 = load i32, i32* @x.309
  %88 = load i32, i32* @y.310
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %86, %originalBB1alteredBB
  %95 = load double, double* %18, align 8
  %96 = load %class.Vector*, %class.Vector** %12, align 8
  %97 = load i32, i32* %17, align 4
  %98 = call double @_ZNK6VectorIdEclEj(%class.Vector* %96, i32 %97)
  %99 = fmul double %95, %98
  %100 = load double, double* %14, align 8
  %101 = fadd double %100, %99
  store double %101, double* %14, align 8
  %102 = load i32, i32* @x.309
  %103 = load i32, i32* @y.310
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart217, label %originalBB1alteredBB

originalBBpart217:                                ; preds = %originalBB1
  br label %110

; <label>:110:                                    ; preds = %originalBBpart217
  %111 = load i32, i32* %17, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %17, align 4
  br label %52

; <label>:113:                                    ; preds = %52
  %114 = load double, double* %14, align 8
  ret double %114

originalBBalteredBB:                              ; preds = %originalBB, %2
  %115 = alloca %class.SparseMatrix*, align 8
  %116 = alloca %class.Vector*, align 8
  %117 = alloca i32, align 4
  %118 = alloca double, align 8
  %119 = alloca double*, align 8
  %120 = alloca i32*, align 8
  %121 = alloca i32, align 4
  %122 = alloca double, align 8
  %123 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %115, align 8
  store %class.Vector* %1, %class.Vector** %116, align 8
  %124 = load %class.SparseMatrix*, %class.SparseMatrix** %115, align 8
  %125 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %124)
  store i32 %125, i32* %117, align 4
  store double 0.000000e+00, double* %118, align 8
  %126 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %124, i32 0, i32 2
  %127 = load double*, double** %126, align 8
  %128 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %124, i32 0, i32 1
  %129 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %128)
  %130 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %129, i32 0, i32 7
  %131 = load i32*, i32** %130, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds double, double* %127, i64 %134
  store double* %135, double** %119, align 8
  %136 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %124, i32 0, i32 1
  %137 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %136)
  %138 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %137, i32 0, i32 8
  %139 = load i32*, i32** %138, align 8
  %140 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %124, i32 0, i32 1
  %141 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %140)
  %142 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %141, i32 0, i32 7
  %143 = load i32*, i32** %142, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i32, i32* %139, i64 %146
  store i32* %147, i32** %120, align 8
  store i32 0, i32* %121, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %86
  %148 = load double, double* %18, align 8
  %149 = load %class.Vector*, %class.Vector** %12, align 8
  %150 = load i32, i32* %17, align 4
  %151 = call double @_ZNK6VectorIdEclEj(%class.Vector* %149, i32 %150)
  %_ = fsub double %148, %151
  %gen = fmul double %_, %151
  %_2 = fsub double -0.000000e+00, %148
  %gen3 = fadd double %_2, %151
  %152 = fmul double %148, %151
  %153 = load double, double* %14, align 8
  %_4 = fsub double %153, %152
  %gen5 = fmul double %_4, %152
  %_6 = fsub double %153, %152
  %gen7 = fmul double %_6, %152
  %_8 = fsub double -0.000000e+00, %153
  %gen9 = fadd double %_8, %152
  %_10 = fsub double %153, %152
  %gen11 = fmul double %_10, %152
  %_12 = fsub double %153, %152
  %gen13 = fmul double %_12, %152
  %_14 = fsub double %153, %152
  %gen15 = fmul double %_14, %152
  %154 = fadd double %153, %152
  store double %154, double* %14, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE21matrix_scalar_productIdEET_RK6VectorIS2_ES6_(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca double*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double*, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %15 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %14)
  store i32 %15, i32* %7, align 4
  store double 0.000000e+00, double* %8, align 8
  %16 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %19 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %18)
  %20 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %19, i32 0, i32 7
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds double, double* %17, i64 %24
  store double* %25, double** %9, align 8
  %26 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %27 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %26)
  %28 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %27, i32 0, i32 8
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %31 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %30)
  %32 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %31, i32 0, i32 7
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %29, i64 %36
  store i32* %37, i32** %10, align 8
  store i32 0, i32* %11, align 4
  br label %38

; <label>:38:                                     ; preds = %originalBBpart219, %3
  %39 = load i32, i32* %11, align 4
  %40 = load i32, i32* %7, align 4
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %42, label %131

; <label>:42:                                     ; preds = %38
  %43 = load i32, i32* @x.311
  %44 = load i32, i32* @y.312
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %42, %originalBBalteredBB
  store double 0.000000e+00, double* %12, align 8
  %51 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %52 = load double*, double** %51, align 8
  %53 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %54 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %53)
  %55 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %54, i32 0, i32 7
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %11, align 4
  %58 = add i32 %57, 1
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %56, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds double, double* %52, i64 %62
  store double* %63, double** %13, align 8
  %64 = load i32, i32* @x.311
  %65 = load i32, i32* @y.312
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %72

; <label>:72:                                     ; preds = %92, %originalBBpart2
  %73 = load i32, i32* @x.311
  %74 = load i32, i32* @y.312
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %72, %originalBB12alteredBB
  %81 = load double*, double** %9, align 8
  %82 = load double*, double** %13, align 8
  %83 = icmp ne double* %81, %82
  %84 = load i32, i32* @x.311
  %85 = load i32, i32* @y.312
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br i1 %83, label %92, label %104

; <label>:92:                                     ; preds = %originalBBpart214
  %93 = load double*, double** %9, align 8
  %94 = getelementptr inbounds double, double* %93, i32 1
  store double* %94, double** %9, align 8
  %95 = load double, double* %93, align 8
  %96 = load %class.Vector*, %class.Vector** %6, align 8
  %97 = load i32*, i32** %10, align 8
  %98 = getelementptr inbounds i32, i32* %97, i32 1
  store i32* %98, i32** %10, align 8
  %99 = load i32, i32* %97, align 4
  %100 = call double @_ZNK6VectorIdEclEj(%class.Vector* %96, i32 %99)
  %101 = fmul double %95, %100
  %102 = load double, double* %12, align 8
  %103 = fadd double %102, %101
  store double %103, double* %12, align 8
  br label %72

; <label>:104:                                    ; preds = %originalBBpart214
  %105 = load double, double* %12, align 8
  %106 = load %class.Vector*, %class.Vector** %5, align 8
  %107 = load i32, i32* %11, align 4
  %108 = call double @_ZNK6VectorIdEclEj(%class.Vector* %106, i32 %107)
  %109 = fmul double %105, %108
  %110 = load double, double* %8, align 8
  %111 = fadd double %110, %109
  store double %111, double* %8, align 8
  br label %112

; <label>:112:                                    ; preds = %104
  %113 = load i32, i32* @x.311
  %114 = load i32, i32* @y.312
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %112, %originalBB16alteredBB
  %121 = load i32, i32* %11, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %11, align 4
  %123 = load i32, i32* @x.311
  %124 = load i32, i32* @y.312
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart219, label %originalBB16alteredBB

originalBBpart219:                                ; preds = %originalBB16
  br label %38

; <label>:131:                                    ; preds = %38
  %132 = load double, double* %8, align 8
  ret double %132

originalBBalteredBB:                              ; preds = %originalBB, %42
  store double 0.000000e+00, double* %12, align 8
  %133 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %134 = load double*, double** %133, align 8
  %135 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %136 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %135)
  %137 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %136, i32 0, i32 7
  %138 = load i32*, i32** %137, align 8
  %139 = load i32, i32* %11, align 4
  %_ = sub i32 %139, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 0, %139
  %gen2 = add i32 %_1, 1
  %_3 = shl i32 %139, 1
  %_4 = sub i32 0, %139
  %gen5 = add i32 %_4, 1
  %_6 = sub i32 0, %139
  %gen7 = add i32 %_6, 1
  %_8 = sub i32 0, %139
  %gen9 = add i32 %_8, 1
  %_10 = sub i32 0, %139
  %gen11 = add i32 %_10, 1
  %140 = add i32 %139, 1
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i32, i32* %138, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds double, double* %134, i64 %144
  store double* %145, double** %13, align 8
  br label %originalBB

originalBB12alteredBB:                            ; preds = %originalBB12, %72
  %146 = load double*, double** %9, align 8
  %147 = load double*, double** %13, align 8
  %148 = icmp ne double* %146, %147
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %112
  %149 = load i32, i32* %11, align 4
  %_17 = shl i32 %149, 1
  %150 = add i32 %149, 1
  store i32 %150, i32* %11, align 4
  br label %originalBB16
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK12SparseMatrixIdE8residualIdEET_R6VectorIS2_ERKS4_S7_(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24)) #0 comdat align 2 {
  %5 = load i32, i32* @x.313
  %6 = load i32, i32* @y.314
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca %class.Vector*, align 8
  %16 = alloca %class.Vector*, align 8
  %17 = alloca i32, align 4
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  %20 = alloca double, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector* %1, %class.Vector** %14, align 8
  store %class.Vector* %2, %class.Vector** %15, align 8
  store %class.Vector* %3, %class.Vector** %16, align 8
  %23 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %24 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %23)
  store i32 %24, i32* %17, align 4
  store double 0.000000e+00, double* %18, align 8
  store i32 0, i32* %19, align 4
  %25 = load i32, i32* @x.313
  %26 = load i32, i32* @y.314
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %117, %originalBBpart2
  %34 = load i32, i32* %19, align 4
  %35 = load i32, i32* %17, align 4
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %37, label %120

; <label>:37:                                     ; preds = %33
  %38 = load %class.Vector*, %class.Vector** %16, align 8
  %39 = load i32, i32* %19, align 4
  %40 = call double @_ZNK6VectorIdEclEj(%class.Vector* %38, i32 %39)
  store double %40, double* %20, align 8
  %41 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %42 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %41)
  %43 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %42, i32 0, i32 7
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* %19, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %44, i64 %46
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %21, align 4
  br label %49

; <label>:49:                                     ; preds = %98, %37
  %50 = load i32, i32* %21, align 4
  %51 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %52 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %51)
  %53 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %52, i32 0, i32 7
  %54 = load i32*, i32** %53, align 8
  %55 = load i32, i32* %19, align 4
  %56 = add i32 %55, 1
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %54, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = icmp ult i32 %50, %59
  br i1 %60, label %61, label %101

; <label>:61:                                     ; preds = %49
  %62 = load i32, i32* @x.313
  %63 = load i32, i32* @y.314
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %61, %originalBB1alteredBB
  %70 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %71 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %70)
  %72 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %71, i32 0, i32 8
  %73 = load i32*, i32** %72, align 8
  %74 = load i32, i32* %21, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %22, align 4
  %78 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 2
  %79 = load double*, double** %78, align 8
  %80 = load i32, i32* %21, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds double, double* %79, i64 %81
  %83 = load double, double* %82, align 8
  %84 = load %class.Vector*, %class.Vector** %15, align 8
  %85 = load i32, i32* %22, align 4
  %86 = call double @_ZNK6VectorIdEclEj(%class.Vector* %84, i32 %85)
  %87 = fmul double %83, %86
  %88 = load double, double* %20, align 8
  %89 = fsub double %88, %87
  store double %89, double* %20, align 8
  %90 = load i32, i32* @x.313
  %91 = load i32, i32* @y.314
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart221, label %originalBB1alteredBB

originalBBpart221:                                ; preds = %originalBB1
  br label %98

; <label>:98:                                     ; preds = %originalBBpart221
  %99 = load i32, i32* %21, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %21, align 4
  br label %49

; <label>:101:                                    ; preds = %49
  %102 = load double, double* %20, align 8
  %103 = load %class.Vector*, %class.Vector** %14, align 8
  %104 = load i32, i32* %19, align 4
  %105 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %103, i32 %104)
  store double %102, double* %105, align 8
  %106 = load %class.Vector*, %class.Vector** %14, align 8
  %107 = load i32, i32* %19, align 4
  %108 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %106, i32 %107)
  %109 = load double, double* %108, align 8
  %110 = load %class.Vector*, %class.Vector** %14, align 8
  %111 = load i32, i32* %19, align 4
  %112 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %110, i32 %111)
  %113 = load double, double* %112, align 8
  %114 = fmul double %109, %113
  %115 = load double, double* %18, align 8
  %116 = fadd double %115, %114
  store double %116, double* %18, align 8
  br label %117

; <label>:117:                                    ; preds = %101
  %118 = load i32, i32* %19, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %19, align 4
  br label %33

; <label>:120:                                    ; preds = %33
  %121 = load double, double* %18, align 8
  %122 = call double @sqrt(double %121) #2
  ret double %122

originalBBalteredBB:                              ; preds = %originalBB, %4
  %123 = alloca %class.SparseMatrix*, align 8
  %124 = alloca %class.Vector*, align 8
  %125 = alloca %class.Vector*, align 8
  %126 = alloca %class.Vector*, align 8
  %127 = alloca i32, align 4
  %128 = alloca double, align 8
  %129 = alloca i32, align 4
  %130 = alloca double, align 8
  %131 = alloca i32, align 4
  %132 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %123, align 8
  store %class.Vector* %1, %class.Vector** %124, align 8
  store %class.Vector* %2, %class.Vector** %125, align 8
  store %class.Vector* %3, %class.Vector** %126, align 8
  %133 = load %class.SparseMatrix*, %class.SparseMatrix** %123, align 8
  %134 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %133)
  store i32 %134, i32* %127, align 4
  store double 0.000000e+00, double* %128, align 8
  store i32 0, i32* %129, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  %135 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 1
  %136 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %135)
  %137 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %136, i32 0, i32 8
  %138 = load i32*, i32** %137, align 8
  %139 = load i32, i32* %21, align 4
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32* %138, i64 %140
  %142 = load i32, i32* %141, align 4
  store i32 %142, i32* %22, align 4
  %143 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %23, i32 0, i32 2
  %144 = load double*, double** %143, align 8
  %145 = load i32, i32* %21, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds double, double* %144, i64 %146
  %148 = load double, double* %147, align 8
  %149 = load %class.Vector*, %class.Vector** %15, align 8
  %150 = load i32, i32* %22, align 4
  %151 = call double @_ZNK6VectorIdEclEj(%class.Vector* %149, i32 %150)
  %_ = fsub double -0.000000e+00, %148
  %gen = fadd double %_, %151
  %_2 = fsub double -0.000000e+00, %148
  %gen3 = fadd double %_2, %151
  %_4 = fsub double %148, %151
  %gen5 = fmul double %_4, %151
  %_6 = fsub double %148, %151
  %gen7 = fmul double %_6, %151
  %_8 = fsub double -0.000000e+00, %148
  %gen9 = fadd double %_8, %151
  %_10 = fsub double %148, %151
  %gen11 = fmul double %_10, %151
  %152 = fmul double %148, %151
  %153 = load double, double* %20, align 8
  %_12 = fsub double %153, %152
  %gen13 = fmul double %_12, %152
  %_14 = fsub double -0.000000e+00, %153
  %gen15 = fadd double %_14, %152
  %_16 = fsub double -0.000000e+00, %153
  %gen17 = fadd double %_16, %152
  %_18 = fsub double %153, %152
  %gen19 = fmul double %_18, %152
  %154 = fsub double %153, %152
  store double %154, double* %20, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE17precondition_SSORIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca double*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector* %1, %class.Vector** %6, align 8
  store %class.Vector* %2, %class.Vector** %7, align 8
  store double %3, double* %8, align 8
  %20 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %21 = load %class.Vector*, %class.Vector** %7, align 8
  %22 = call i32 @_ZNK6VectorIdE4sizeEv(%class.Vector* %21)
  store i32 %22, i32* %9, align 4
  %23 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %24 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %23)
  %25 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %24, i32 0, i32 7
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  store i32* %27, i32** %10, align 8
  %28 = load %class.Vector*, %class.Vector** %6, align 8
  %29 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %28, i32 0)
  store double* %29, double** %11, align 8
  store i32 0, i32* %12, align 4
  br label %30

; <label>:30:                                     ; preds = %originalBBpart213, %4
  %31 = load i32, i32* @x.315
  %32 = load i32, i32* @y.316
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %30, %originalBBalteredBB
  %39 = load i32, i32* %12, align 4
  %40 = load i32, i32* %9, align 4
  %41 = icmp ult i32 %39, %40
  %42 = load i32, i32* @x.315
  %43 = load i32, i32* @y.316
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %50, label %152

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load %class.Vector*, %class.Vector** %7, align 8
  %52 = load i32, i32* %12, align 4
  %53 = call double @_ZNK6VectorIdEclEj(%class.Vector* %51, i32 %52)
  %54 = load double*, double** %11, align 8
  store double %53, double* %54, align 8
  %55 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %56 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %55)
  %57 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %56, i32 0, i32 8
  %58 = load i32*, i32** %57, align 8
  %59 = load i32*, i32** %10, align 8
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, 1
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %58, i64 %62
  %64 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %65 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %64)
  %66 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %65, i32 0, i32 8
  %67 = load i32*, i32** %66, align 8
  %68 = load i32*, i32** %10, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 1
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %67, i64 %71
  %73 = call i32* @_ZN15SparsityPattern21optimized_lower_boundEPKjS1_RS0_(i32* %63, i32* %72, i32* dereferenceable(4) %12)
  %74 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %75 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %74)
  %76 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %75, i32 0, i32 8
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 0
  %79 = ptrtoint i32* %73 to i64
  %80 = ptrtoint i32* %78 to i64
  %81 = sub i64 %79, %80
  %82 = sdiv exact i64 %81, 4
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %13, align 4
  %84 = load i32*, i32** %10, align 8
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %14, align 4
  br label %87

; <label>:87:                                     ; preds = %115, %50
  %88 = load i32, i32* %14, align 4
  %89 = load i32, i32* %13, align 4
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %91, label %118

; <label>:91:                                     ; preds = %87
  %92 = load double, double* %8, align 8
  %93 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %94 = load double*, double** %93, align 8
  %95 = load i32, i32* %14, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds double, double* %94, i64 %96
  %98 = load double, double* %97, align 8
  %99 = fmul double %92, %98
  %100 = load %class.Vector*, %class.Vector** %6, align 8
  %101 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %102 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %101)
  %103 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %102, i32 0, i32 8
  %104 = load i32*, i32** %103, align 8
  %105 = load i32, i32* %14, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %100, i32 %108)
  %110 = load double, double* %109, align 8
  %111 = fmul double %99, %110
  %112 = load double*, double** %11, align 8
  %113 = load double, double* %112, align 8
  %114 = fsub double %113, %111
  store double %114, double* %112, align 8
  br label %115

; <label>:115:                                    ; preds = %91
  %116 = load i32, i32* %14, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %14, align 4
  br label %87

; <label>:118:                                    ; preds = %87
  %119 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %120 = load double*, double** %119, align 8
  %121 = load i32*, i32** %10, align 8
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds double, double* %120, i64 %123
  %125 = load double, double* %124, align 8
  %126 = load double*, double** %11, align 8
  %127 = load double, double* %126, align 8
  %128 = fdiv double %127, %125
  store double %128, double* %126, align 8
  br label %129

; <label>:129:                                    ; preds = %118
  %130 = load i32, i32* @x.315
  %131 = load i32, i32* @y.316
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %129, %originalBB1alteredBB
  %138 = load i32, i32* %12, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %12, align 4
  %140 = load double*, double** %11, align 8
  %141 = getelementptr inbounds double, double* %140, i32 1
  store double* %141, double** %11, align 8
  %142 = load i32*, i32** %10, align 8
  %143 = getelementptr inbounds i32, i32* %142, i32 1
  store i32* %143, i32** %10, align 8
  %144 = load i32, i32* @x.315
  %145 = load i32, i32* @y.316
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br label %30

; <label>:152:                                    ; preds = %originalBBpart2
  %153 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %154 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %153)
  %155 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %154, i32 0, i32 7
  %156 = load i32*, i32** %155, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 0
  store i32* %157, i32** %10, align 8
  %158 = load %class.Vector*, %class.Vector** %6, align 8
  %159 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %158, i32 0)
  store double* %159, double** %11, align 8
  store i32 0, i32* %15, align 4
  br label %160

; <label>:160:                                    ; preds = %originalBBpart229, %152
  %161 = load i32, i32* @x.315
  %162 = load i32, i32* @y.316
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %160, %originalBB15alteredBB
  %169 = load i32, i32* %15, align 4
  %170 = load i32, i32* %9, align 4
  %171 = icmp ult i32 %169, %170
  %172 = load i32, i32* @x.315
  %173 = load i32, i32* @y.316
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br i1 %171, label %180, label %217

; <label>:180:                                    ; preds = %originalBBpart217
  %181 = load double, double* %8, align 8
  %182 = fsub double 2.000000e+00, %181
  %183 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %184 = load double*, double** %183, align 8
  %185 = load i32*, i32** %10, align 8
  %186 = load i32, i32* %185, align 4
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds double, double* %184, i64 %187
  %189 = load double, double* %188, align 8
  %190 = fmul double %182, %189
  %191 = load double*, double** %11, align 8
  %192 = load double, double* %191, align 8
  %193 = fmul double %192, %190
  store double %193, double* %191, align 8
  br label %194

; <label>:194:                                    ; preds = %180
  %195 = load i32, i32* @x.315
  %196 = load i32, i32* @y.316
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %194, %originalBB19alteredBB
  %203 = load i32, i32* %15, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %15, align 4
  %205 = load i32*, i32** %10, align 8
  %206 = getelementptr inbounds i32, i32* %205, i32 1
  store i32* %206, i32** %10, align 8
  %207 = load double*, double** %11, align 8
  %208 = getelementptr inbounds double, double* %207, i32 1
  store double* %208, double** %11, align 8
  %209 = load i32, i32* @x.315
  %210 = load i32, i32* @y.316
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart229, label %originalBB19alteredBB

originalBBpart229:                                ; preds = %originalBB19
  br label %160

; <label>:217:                                    ; preds = %originalBBpart217
  %218 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %219 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %218)
  %220 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %219, i32 0, i32 7
  %221 = load i32*, i32** %220, align 8
  %222 = load i32, i32* %9, align 4
  %223 = sub i32 %222, 1
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds i32, i32* %221, i64 %224
  store i32* %225, i32** %10, align 8
  %226 = load %class.Vector*, %class.Vector** %6, align 8
  %227 = load i32, i32* %9, align 4
  %228 = sub i32 %227, 1
  %229 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %226, i32 %228)
  store double* %229, double** %11, align 8
  %230 = load i32, i32* %9, align 4
  %231 = sub i32 %230, 1
  store i32 %231, i32* %16, align 4
  br label %232

; <label>:232:                                    ; preds = %originalBBpart265, %217
  %233 = load i32, i32* @x.315
  %234 = load i32, i32* @y.316
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %232, %originalBB31alteredBB
  %241 = load i32, i32* %16, align 4
  %242 = icmp sge i32 %241, 0
  %243 = load i32, i32* @x.315
  %244 = load i32, i32* @y.316
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %242, label %251, label %394

; <label>:251:                                    ; preds = %originalBBpart233
  %252 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %253 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %252)
  %254 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %253, i32 0, i32 8
  %255 = load i32*, i32** %254, align 8
  %256 = load i32*, i32** %10, align 8
  %257 = load i32, i32* %256, align 4
  %258 = add i32 %257, 1
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds i32, i32* %255, i64 %259
  %261 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %262 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %261)
  %263 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %262, i32 0, i32 8
  %264 = load i32*, i32** %263, align 8
  %265 = load i32*, i32** %10, align 8
  %266 = getelementptr inbounds i32, i32* %265, i64 1
  %267 = load i32, i32* %266, align 4
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds i32, i32* %264, i64 %268
  %270 = load i32, i32* %16, align 4
  store i32 %270, i32* %18, align 4
  %271 = call i32* @_ZN15SparsityPattern21optimized_lower_boundEPKjS1_RS0_(i32* %260, i32* %269, i32* dereferenceable(4) %18)
  %272 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %273 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %272)
  %274 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %273, i32 0, i32 8
  %275 = load i32*, i32** %274, align 8
  %276 = getelementptr inbounds i32, i32* %275, i64 0
  %277 = ptrtoint i32* %271 to i64
  %278 = ptrtoint i32* %276 to i64
  %279 = sub i64 %277, %278
  %280 = sdiv exact i64 %279, 4
  %281 = trunc i64 %280 to i32
  store i32 %281, i32* %17, align 4
  %282 = load i32, i32* %17, align 4
  store i32 %282, i32* %19, align 4
  br label %283

; <label>:283:                                    ; preds = %originalBBpart252, %251
  %284 = load i32, i32* %19, align 4
  %285 = load i32*, i32** %10, align 8
  %286 = getelementptr inbounds i32, i32* %285, i64 1
  %287 = load i32, i32* %286, align 4
  %288 = icmp ult i32 %284, %287
  br i1 %288, label %289, label %360

; <label>:289:                                    ; preds = %283
  %290 = load i32, i32* @x.315
  %291 = load i32, i32* @y.316
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %289, %originalBB35alteredBB
  %298 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %299 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %298)
  %300 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %299, i32 0, i32 8
  %301 = load i32*, i32** %300, align 8
  %302 = load i32, i32* %19, align 4
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds i32, i32* %301, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = load i32, i32* %16, align 4
  %307 = icmp ugt i32 %305, %306
  %308 = load i32, i32* @x.315
  %309 = load i32, i32* @y.316
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %307, label %316, label %340

; <label>:316:                                    ; preds = %originalBBpart237
  %317 = load double, double* %8, align 8
  %318 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %319 = load double*, double** %318, align 8
  %320 = load i32, i32* %19, align 4
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds double, double* %319, i64 %321
  %323 = load double, double* %322, align 8
  %324 = fmul double %317, %323
  %325 = load %class.Vector*, %class.Vector** %6, align 8
  %326 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %327 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %326)
  %328 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %327, i32 0, i32 8
  %329 = load i32*, i32** %328, align 8
  %330 = load i32, i32* %19, align 4
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds i32, i32* %329, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %325, i32 %333)
  %335 = load double, double* %334, align 8
  %336 = fmul double %324, %335
  %337 = load double*, double** %11, align 8
  %338 = load double, double* %337, align 8
  %339 = fsub double %338, %336
  store double %339, double* %337, align 8
  br label %340

; <label>:340:                                    ; preds = %316, %originalBBpart237
  br label %341

; <label>:341:                                    ; preds = %340
  %342 = load i32, i32* @x.315
  %343 = load i32, i32* @y.316
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %341, %originalBB39alteredBB
  %350 = load i32, i32* %19, align 4
  %351 = add i32 %350, 1
  store i32 %351, i32* %19, align 4
  %352 = load i32, i32* @x.315
  %353 = load i32, i32* @y.316
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart252, label %originalBB39alteredBB

originalBBpart252:                                ; preds = %originalBB39
  br label %283

; <label>:360:                                    ; preds = %283
  %361 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %362 = load double*, double** %361, align 8
  %363 = load i32*, i32** %10, align 8
  %364 = load i32, i32* %363, align 4
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds double, double* %362, i64 %365
  %367 = load double, double* %366, align 8
  %368 = load double*, double** %11, align 8
  %369 = load double, double* %368, align 8
  %370 = fdiv double %369, %367
  store double %370, double* %368, align 8
  br label %371

; <label>:371:                                    ; preds = %360
  %372 = load i32, i32* @x.315
  %373 = load i32, i32* @y.316
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %371, %originalBB54alteredBB
  %380 = load i32, i32* %16, align 4
  %381 = add nsw i32 %380, -1
  store i32 %381, i32* %16, align 4
  %382 = load i32*, i32** %10, align 8
  %383 = getelementptr inbounds i32, i32* %382, i32 -1
  store i32* %383, i32** %10, align 8
  %384 = load double*, double** %11, align 8
  %385 = getelementptr inbounds double, double* %384, i32 -1
  store double* %385, double** %11, align 8
  %386 = load i32, i32* @x.315
  %387 = load i32, i32* @y.316
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart265, label %originalBB54alteredBB

originalBBpart265:                                ; preds = %originalBB54
  br label %232

; <label>:394:                                    ; preds = %originalBBpart233
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %30
  %395 = load i32, i32* %12, align 4
  %396 = load i32, i32* %9, align 4
  %397 = icmp ult i32 %395, %396
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %129
  %398 = load i32, i32* %12, align 4
  %_ = sub i32 %398, 1
  %gen = mul i32 %_, 1
  %_2 = shl i32 %398, 1
  %_3 = shl i32 %398, 1
  %_4 = shl i32 %398, 1
  %_5 = shl i32 %398, 1
  %_6 = sub i32 0, %398
  %gen7 = add i32 %_6, 1
  %_8 = sub i32 %398, 1
  %gen9 = mul i32 %_8, 1
  %_10 = sub i32 %398, 1
  %gen11 = mul i32 %_10, 1
  %399 = add i32 %398, 1
  store i32 %399, i32* %12, align 4
  %400 = load double*, double** %11, align 8
  %401 = getelementptr inbounds double, double* %400, i32 1
  store double* %401, double** %11, align 8
  %402 = load i32*, i32** %10, align 8
  %403 = getelementptr inbounds i32, i32* %402, i32 1
  store i32* %403, i32** %10, align 8
  br label %originalBB1

originalBB15alteredBB:                            ; preds = %originalBB15, %160
  %404 = load i32, i32* %15, align 4
  %405 = load i32, i32* %9, align 4
  %406 = icmp ult i32 %404, %405
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %194
  %407 = load i32, i32* %15, align 4
  %_20 = sub i32 0, %407
  %gen21 = add i32 %_20, 1
  %_22 = sub i32 0, %407
  %gen23 = add i32 %_22, 1
  %_24 = sub i32 0, %407
  %gen25 = add i32 %_24, 1
  %_26 = sub i32 %407, 1
  %gen27 = mul i32 %_26, 1
  %408 = add i32 %407, 1
  store i32 %408, i32* %15, align 4
  %409 = load i32*, i32** %10, align 8
  %410 = getelementptr inbounds i32, i32* %409, i32 1
  store i32* %410, i32** %10, align 8
  %411 = load double*, double** %11, align 8
  %412 = getelementptr inbounds double, double* %411, i32 1
  store double* %412, double** %11, align 8
  br label %originalBB19

originalBB31alteredBB:                            ; preds = %originalBB31, %232
  %413 = load i32, i32* %16, align 4
  %414 = icmp sge i32 %413, 0
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %289
  %415 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %416 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %415)
  %417 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %416, i32 0, i32 8
  %418 = load i32*, i32** %417, align 8
  %419 = load i32, i32* %19, align 4
  %420 = zext i32 %419 to i64
  %421 = getelementptr inbounds i32, i32* %418, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = load i32, i32* %16, align 4
  %424 = icmp ugt i32 %422, %423
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %341
  %425 = load i32, i32* %19, align 4
  %_40 = sub i32 %425, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 %425, 1
  %gen43 = mul i32 %_42, 1
  %_44 = sub i32 %425, 1
  %gen45 = mul i32 %_44, 1
  %_46 = shl i32 %425, 1
  %_47 = sub i32 0, %425
  %gen48 = add i32 %_47, 1
  %_49 = sub i32 %425, 1
  %gen50 = mul i32 %_49, 1
  %426 = add i32 %425, 1
  store i32 %426, i32* %19, align 4
  br label %originalBB39

originalBB54alteredBB:                            ; preds = %originalBB54, %371
  %427 = load i32, i32* %16, align 4
  %_55 = sub i32 %427, -1
  %gen56 = mul i32 %_55, -1
  %_57 = shl i32 %427, -1
  %_58 = sub i32 0, %427
  %gen59 = add i32 %_58, -1
  %_60 = sub i32 0, %427
  %gen61 = add i32 %_60, -1
  %_62 = sub i32 0, %427
  %gen63 = add i32 %_62, -1
  %428 = add nsw i32 %427, -1
  store i32 %428, i32* %16, align 4
  %429 = load i32*, i32** %10, align 8
  %430 = getelementptr inbounds i32, i32* %429, i32 -1
  store i32* %430, i32** %10, align 8
  %431 = load double*, double** %11, align 8
  %432 = getelementptr inbounds double, double* %431, i32 -1
  store double* %432, double** %11, align 8
  br label %originalBB54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK6VectorIdE4sizeEv(%class.Vector*) #5 comdat align 2 {
  %2 = load i32, i32* @x.317
  %3 = load i32, i32* @y.318
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i32, i32* @x.317
  %15 = load i32, i32* @y.318
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %22, align 8
  %23 = load %class.Vector*, %class.Vector** %22, align 8
  %24 = getelementptr inbounds %class.Vector, %class.Vector* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE16precondition_SORIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %5 = load i32, i32* @x.319
  %6 = load i32, i32* @y.320
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca %class.Vector*, align 8
  %16 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector* %1, %class.Vector** %14, align 8
  store %class.Vector* %2, %class.Vector** %15, align 8
  store double %3, double* %16, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %18 = load %class.Vector*, %class.Vector** %15, align 8
  %19 = load %class.Vector*, %class.Vector** %14, align 8
  %20 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector* %19, %class.Vector* dereferenceable(24) %18)
  %21 = load %class.Vector*, %class.Vector** %14, align 8
  %22 = load double, double* %16, align 8
  call void @_ZNK12SparseMatrixIdE3SORIdEEvR6VectorIT_Ed(%class.SparseMatrix* %17, %class.Vector* dereferenceable(24) %21, double %22)
  %23 = load i32, i32* @x.319
  %24 = load i32, i32* @y.320
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %31 = alloca %class.SparseMatrix*, align 8
  %32 = alloca %class.Vector*, align 8
  %33 = alloca %class.Vector*, align 8
  %34 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %31, align 8
  store %class.Vector* %1, %class.Vector** %32, align 8
  store %class.Vector* %2, %class.Vector** %33, align 8
  store double %3, double* %34, align 8
  %35 = load %class.SparseMatrix*, %class.SparseMatrix** %31, align 8
  %36 = load %class.Vector*, %class.Vector** %33, align 8
  %37 = load %class.Vector*, %class.Vector** %32, align 8
  %38 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector* %37, %class.Vector* dereferenceable(24) %36)
  %39 = load %class.Vector*, %class.Vector** %32, align 8
  %40 = load double, double* %34, align 8
  call void @_ZNK12SparseMatrixIdE3SORIdEEvR6VectorIT_Ed(%class.SparseMatrix* %35, %class.Vector* dereferenceable(24) %39, double %40)
  br label %originalBB
}

declare dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector*, %class.Vector* dereferenceable(24)) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE3SORIdEEvR6VectorIT_Ed(%class.SparseMatrix*, %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store double %2, double* %6, align 8
  %11 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  store i32 0, i32* %7, align 4
  br label %12

; <label>:12:                                     ; preds = %originalBBpart219, %3
  %13 = load i32, i32* @x.321
  %14 = load i32, i32* @y.322
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i32, i32* %7, align 4
  %22 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %11)
  %23 = icmp ult i32 %21, %22
  %24 = load i32, i32* @x.321
  %25 = load i32, i32* @y.322
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %143

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load %class.Vector*, %class.Vector** %5, align 8
  %34 = load i32, i32* %7, align 4
  %35 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %33, i32 %34)
  %36 = load double, double* %35, align 8
  store double %36, double* %8, align 8
  %37 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 1
  %38 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %37)
  %39 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %38, i32 0, i32 7
  %40 = load i32*, i32** %39, align 8
  %41 = load i32, i32* %7, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %9, align 4
  br label %45

; <label>:45:                                     ; preds = %100, %32
  %46 = load i32, i32* %9, align 4
  %47 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 1
  %48 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %47)
  %49 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %48, i32 0, i32 7
  %50 = load i32*, i32** %49, align 8
  %51 = load i32, i32* %7, align 4
  %52 = add i32 %51, 1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %50, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp ult i32 %46, %55
  br i1 %56, label %57, label %103

; <label>:57:                                     ; preds = %45
  %58 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 1
  %59 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %58)
  %60 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %59, i32 0, i32 8
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %9, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %10, align 4
  %66 = load i32, i32* %10, align 4
  %67 = load i32, i32* %7, align 4
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %99

; <label>:69:                                     ; preds = %57
  %70 = load i32, i32* @x.321
  %71 = load i32, i32* @y.322
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %69, %originalBB1alteredBB
  %78 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 2
  %79 = load double*, double** %78, align 8
  %80 = load i32, i32* %9, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds double, double* %79, i64 %81
  %83 = load double, double* %82, align 8
  %84 = load %class.Vector*, %class.Vector** %5, align 8
  %85 = load i32, i32* %10, align 4
  %86 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %84, i32 %85)
  %87 = load double, double* %86, align 8
  %88 = fmul double %83, %87
  %89 = load double, double* %8, align 8
  %90 = fsub double %89, %88
  store double %90, double* %8, align 8
  %91 = load i32, i32* @x.321
  %92 = load i32, i32* @y.322
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %99

; <label>:99:                                     ; preds = %originalBBpart211, %57
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i32, i32* %9, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %9, align 4
  br label %45

; <label>:103:                                    ; preds = %45
  %104 = load double, double* %8, align 8
  %105 = load double, double* %6, align 8
  %106 = fmul double %104, %105
  %107 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 2
  %108 = load double*, double** %107, align 8
  %109 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 1
  %110 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %109)
  %111 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %110, i32 0, i32 7
  %112 = load i32*, i32** %111, align 8
  %113 = load i32, i32* %7, align 4
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds double, double* %108, i64 %117
  %119 = load double, double* %118, align 8
  %120 = fdiv double %106, %119
  %121 = load %class.Vector*, %class.Vector** %5, align 8
  %122 = load i32, i32* %7, align 4
  %123 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %121, i32 %122)
  store double %120, double* %123, align 8
  br label %124

; <label>:124:                                    ; preds = %103
  %125 = load i32, i32* @x.321
  %126 = load i32, i32* @y.322
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %124, %originalBB13alteredBB
  %133 = load i32, i32* %7, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %7, align 4
  %135 = load i32, i32* @x.321
  %136 = load i32, i32* @y.322
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart219, label %originalBB13alteredBB

originalBBpart219:                                ; preds = %originalBB13
  br label %12

; <label>:143:                                    ; preds = %originalBBpart2
  %144 = load i32, i32* @x.321
  %145 = load i32, i32* @y.322
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %143, %originalBB21alteredBB
  %152 = load i32, i32* @x.321
  %153 = load i32, i32* @y.322
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %160 = load i32, i32* %7, align 4
  %161 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %11)
  %162 = icmp ult i32 %160, %161
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %69
  %163 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %11, i32 0, i32 2
  %164 = load double*, double** %163, align 8
  %165 = load i32, i32* %9, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds double, double* %164, i64 %166
  %168 = load double, double* %167, align 8
  %169 = load %class.Vector*, %class.Vector** %5, align 8
  %170 = load i32, i32* %10, align 4
  %171 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %169, i32 %170)
  %172 = load double, double* %171, align 8
  %_ = fsub double -0.000000e+00, %168
  %gen = fadd double %_, %172
  %_2 = fsub double -0.000000e+00, %168
  %gen3 = fadd double %_2, %172
  %173 = fmul double %168, %172
  %174 = load double, double* %8, align 8
  %_4 = fsub double %174, %173
  %gen5 = fmul double %_4, %173
  %_6 = fsub double -0.000000e+00, %174
  %gen7 = fadd double %_6, %173
  %_8 = fsub double %174, %173
  %gen9 = fmul double %_8, %173
  %175 = fsub double %174, %173
  store double %175, double* %8, align 8
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %124
  %176 = load i32, i32* %7, align 4
  %_14 = sub i32 0, %176
  %gen15 = add i32 %_14, 1
  %_16 = sub i32 0, %176
  %gen17 = add i32 %_16, 1
  %177 = add i32 %176, 1
  store i32 %177, i32* %7, align 4
  br label %originalBB13

originalBB21alteredBB:                            ; preds = %originalBB21, %143
  br label %originalBB21
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE17precondition_TSORIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector* %1, %class.Vector** %6, align 8
  store %class.Vector* %2, %class.Vector** %7, align 8
  store double %3, double* %8, align 8
  %9 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %10 = load %class.Vector*, %class.Vector** %7, align 8
  %11 = load %class.Vector*, %class.Vector** %6, align 8
  %12 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector* %11, %class.Vector* dereferenceable(24) %10)
  %13 = load %class.Vector*, %class.Vector** %6, align 8
  %14 = load double, double* %8, align 8
  call void @_ZNK12SparseMatrixIdE4TSORIdEEvR6VectorIT_Ed(%class.SparseMatrix* %9, %class.Vector* dereferenceable(24) %13, double %14)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE4TSORIdEEvR6VectorIT_Ed(%class.SparseMatrix*, %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store double %2, double* %6, align 8
  %10 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %11 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %10)
  store i32 %11, i32* %7, align 4
  br label %12

; <label>:12:                                     ; preds = %126, %3
  %13 = load i32, i32* %7, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %147

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %7, align 4
  %17 = add i32 %16, -1
  store i32 %17, i32* %7, align 4
  %18 = load %class.Vector*, %class.Vector** %5, align 8
  %19 = load i32, i32* %7, align 4
  %20 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %18, i32 %19)
  %21 = load double, double* %20, align 8
  store double %21, double* %8, align 8
  %22 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %23 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %22)
  %24 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %23, i32 0, i32 7
  %25 = load i32*, i32** %24, align 8
  %26 = load i32, i32* %7, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %9, align 4
  br label %30

; <label>:30:                                     ; preds = %originalBBpart239, %15
  %31 = load i32, i32* @x.325
  %32 = load i32, i32* @y.326
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %30, %originalBBalteredBB
  %39 = load i32, i32* %9, align 4
  %40 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %41 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %40)
  %42 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %41, i32 0, i32 7
  %43 = load i32*, i32** %42, align 8
  %44 = load i32, i32* %7, align 4
  %45 = add i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %43, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = icmp ult i32 %39, %48
  %50 = load i32, i32* @x.325
  %51 = load i32, i32* @y.326
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %49, label %58, label %126

; <label>:58:                                     ; preds = %originalBBpart2
  %59 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %60 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %59)
  %61 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %60, i32 0, i32 8
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %9, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = load i32, i32* %7, align 4
  %68 = icmp ugt i32 %66, %67
  br i1 %68, label %69, label %106

; <label>:69:                                     ; preds = %58
  %70 = load i32, i32* @x.325
  %71 = load i32, i32* @y.326
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %69, %originalBB3alteredBB
  %78 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %79 = load double*, double** %78, align 8
  %80 = load i32, i32* %9, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds double, double* %79, i64 %81
  %83 = load double, double* %82, align 8
  %84 = load %class.Vector*, %class.Vector** %5, align 8
  %85 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %86 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %85)
  %87 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %86, i32 0, i32 8
  %88 = load i32*, i32** %87, align 8
  %89 = load i32, i32* %9, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %84, i32 %92)
  %94 = load double, double* %93, align 8
  %95 = fmul double %83, %94
  %96 = load double, double* %8, align 8
  %97 = fsub double %96, %95
  store double %97, double* %8, align 8
  %98 = load i32, i32* @x.325
  %99 = load i32, i32* @y.326
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart227, label %originalBB3alteredBB

originalBBpart227:                                ; preds = %originalBB3
  br label %106

; <label>:106:                                    ; preds = %originalBBpart227, %58
  br label %107

; <label>:107:                                    ; preds = %106
  %108 = load i32, i32* @x.325
  %109 = load i32, i32* @y.326
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %107, %originalBB29alteredBB
  %116 = load i32, i32* %9, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %9, align 4
  %118 = load i32, i32* @x.325
  %119 = load i32, i32* @y.326
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart239, label %originalBB29alteredBB

originalBBpart239:                                ; preds = %originalBB29
  br label %30

; <label>:126:                                    ; preds = %originalBBpart2
  %127 = load double, double* %8, align 8
  %128 = load double, double* %6, align 8
  %129 = fmul double %127, %128
  %130 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %131 = load double*, double** %130, align 8
  %132 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %133 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %132)
  %134 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %133, i32 0, i32 7
  %135 = load i32*, i32** %134, align 8
  %136 = load i32, i32* %7, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %135, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds double, double* %131, i64 %140
  %142 = load double, double* %141, align 8
  %143 = fdiv double %129, %142
  %144 = load %class.Vector*, %class.Vector** %5, align 8
  %145 = load i32, i32* %7, align 4
  %146 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %144, i32 %145)
  store double %143, double* %146, align 8
  br label %12

; <label>:147:                                    ; preds = %12
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %30
  %148 = load i32, i32* %9, align 4
  %149 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %150 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %149)
  %151 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %150, i32 0, i32 7
  %152 = load i32*, i32** %151, align 8
  %153 = load i32, i32* %7, align 4
  %_ = sub i32 %153, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 %153, 1
  %gen2 = mul i32 %_1, 1
  %154 = add i32 %153, 1
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i32, i32* %152, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = icmp ult i32 %148, %157
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %69
  %159 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 2
  %160 = load double*, double** %159, align 8
  %161 = load i32, i32* %9, align 4
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds double, double* %160, i64 %162
  %164 = load double, double* %163, align 8
  %165 = load %class.Vector*, %class.Vector** %5, align 8
  %166 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %10, i32 0, i32 1
  %167 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %166)
  %168 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %167, i32 0, i32 8
  %169 = load i32*, i32** %168, align 8
  %170 = load i32, i32* %9, align 4
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i32, i32* %169, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %165, i32 %173)
  %175 = load double, double* %174, align 8
  %_4 = fsub double -0.000000e+00, %164
  %gen5 = fadd double %_4, %175
  %_6 = fsub double %164, %175
  %gen7 = fmul double %_6, %175
  %_8 = fsub double -0.000000e+00, %164
  %gen9 = fadd double %_8, %175
  %_10 = fsub double %164, %175
  %gen11 = fmul double %_10, %175
  %_12 = fsub double -0.000000e+00, %164
  %gen13 = fadd double %_12, %175
  %176 = fmul double %164, %175
  %177 = load double, double* %8, align 8
  %_14 = fsub double %177, %176
  %gen15 = fmul double %_14, %176
  %_16 = fsub double %177, %176
  %gen17 = fmul double %_16, %176
  %_18 = fsub double -0.000000e+00, %177
  %gen19 = fadd double %_18, %176
  %_20 = fsub double -0.000000e+00, %177
  %gen21 = fadd double %_20, %176
  %_22 = fsub double -0.000000e+00, %177
  %gen23 = fadd double %_22, %176
  %_24 = fsub double %177, %176
  %gen25 = fmul double %_24, %176
  %178 = fsub double %177, %176
  store double %178, double* %8, align 8
  br label %originalBB3

originalBB29alteredBB:                            ; preds = %originalBB29, %107
  %179 = load i32, i32* %9, align 4
  %_30 = shl i32 %179, 1
  %_31 = sub i32 %179, 1
  %gen32 = mul i32 %_31, 1
  %_33 = sub i32 %179, 1
  %gen34 = mul i32 %_33, 1
  %_35 = shl i32 %179, 1
  %_36 = sub i32 0, %179
  %gen37 = add i32 %_36, 1
  %180 = add i32 %179, 1
  store i32 %180, i32* %9, align 4
  br label %originalBB29
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE19precondition_JacobiIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector* %1, %class.Vector** %6, align 8
  store %class.Vector* %2, %class.Vector** %7, align 8
  store double %3, double* %8, align 8
  %15 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %16 = load %class.Vector*, %class.Vector** %7, align 8
  %17 = call i32 @_ZNK6VectorIdE4sizeEv(%class.Vector* %16)
  store i32 %17, i32* %9, align 4
  %18 = load %class.Vector*, %class.Vector** %6, align 8
  %19 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %18)
  store double* %19, double** %10, align 8
  %20 = load %class.Vector*, %class.Vector** %7, align 8
  %21 = call double* @_ZNK6VectorIdE5beginEv(%class.Vector* %20)
  store double* %21, double** %11, align 8
  %22 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 1
  %23 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %22)
  %24 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %23, i32 0, i32 7
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 0
  store i32* %26, i32** %12, align 8
  %27 = load double, double* %8, align 8
  %28 = fcmp une double %27, 1.000000e+00
  br i1 %28, label %29, label %74

; <label>:29:                                     ; preds = %4
  %30 = load i32, i32* @x.327
  %31 = load i32, i32* @y.328
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %29, %originalBBalteredBB
  store i32 0, i32* %13, align 4
  %38 = load i32, i32* @x.327
  %39 = load i32, i32* @y.328
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:46:                                     ; preds = %64, %originalBBpart2
  %47 = load i32, i32* %13, align 4
  %48 = load i32, i32* %9, align 4
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %50, label %73

; <label>:50:                                     ; preds = %46
  %51 = load double, double* %8, align 8
  %52 = load double*, double** %11, align 8
  %53 = load double, double* %52, align 8
  %54 = fmul double %51, %53
  %55 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %56 = load double*, double** %55, align 8
  %57 = load i32*, i32** %12, align 8
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds double, double* %56, i64 %59
  %61 = load double, double* %60, align 8
  %62 = fdiv double %54, %61
  %63 = load double*, double** %10, align 8
  store double %62, double* %63, align 8
  br label %64

; <label>:64:                                     ; preds = %50
  %65 = load i32, i32* %13, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %13, align 4
  %67 = load double*, double** %10, align 8
  %68 = getelementptr inbounds double, double* %67, i32 1
  store double* %68, double** %10, align 8
  %69 = load double*, double** %11, align 8
  %70 = getelementptr inbounds double, double* %69, i32 1
  store double* %70, double** %11, align 8
  %71 = load i32*, i32** %12, align 8
  %72 = getelementptr inbounds i32, i32* %71, i32 1
  store i32* %72, i32** %12, align 8
  br label %46

; <label>:73:                                     ; preds = %46
  br label %117

; <label>:74:                                     ; preds = %4
  %75 = load i32, i32* @x.327
  %76 = load i32, i32* @y.328
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %74, %originalBB1alteredBB
  store i32 0, i32* %14, align 4
  %83 = load i32, i32* @x.327
  %84 = load i32, i32* @y.328
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %91

; <label>:91:                                     ; preds = %107, %originalBBpart24
  %92 = load i32, i32* %14, align 4
  %93 = load i32, i32* %9, align 4
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %95, label %116

; <label>:95:                                     ; preds = %91
  %96 = load double*, double** %11, align 8
  %97 = load double, double* %96, align 8
  %98 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %15, i32 0, i32 2
  %99 = load double*, double** %98, align 8
  %100 = load i32*, i32** %12, align 8
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds double, double* %99, i64 %102
  %104 = load double, double* %103, align 8
  %105 = fdiv double %97, %104
  %106 = load double*, double** %10, align 8
  store double %105, double* %106, align 8
  br label %107

; <label>:107:                                    ; preds = %95
  %108 = load i32, i32* %14, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %14, align 4
  %110 = load double*, double** %10, align 8
  %111 = getelementptr inbounds double, double* %110, i32 1
  store double* %111, double** %10, align 8
  %112 = load double*, double** %11, align 8
  %113 = getelementptr inbounds double, double* %112, i32 1
  store double* %113, double** %11, align 8
  %114 = load i32*, i32** %12, align 8
  %115 = getelementptr inbounds i32, i32* %114, i32 1
  store i32* %115, i32** %12, align 8
  br label %91

; <label>:116:                                    ; preds = %91
  br label %117

; <label>:117:                                    ; preds = %116, %73
  %118 = load i32, i32* @x.327
  %119 = load i32, i32* @y.328
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %117, %originalBB6alteredBB
  %126 = load i32, i32* @x.327
  %127 = load i32, i32* @y.328
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %29
  store i32 0, i32* %13, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %74
  store i32 0, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %117
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNK6VectorIdE5beginEv(%class.Vector*) #5 comdat align 2 {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  %4 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 3
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds double, double* %5, i64 0
  ret double* %6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE4SSORIdEEvR6VectorIT_Ed(%class.SparseMatrix*, %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %4 = alloca %class.SparseMatrix*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store double %2, double* %6, align 8
  %14 = load %class.SparseMatrix*, %class.SparseMatrix** %4, align 8
  %15 = load %class.Vector*, %class.Vector** %5, align 8
  %16 = call i32 @_ZNK6VectorIdE4sizeEv(%class.Vector* %15)
  store i32 %16, i32* %7, align 4
  store i32 0, i32* %10, align 4
  br label %17

; <label>:17:                                     ; preds = %originalBBpart233, %3
  %18 = load i32, i32* %10, align 4
  %19 = load i32, i32* %7, align 4
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %21, label %154

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @x.331
  %23 = load i32, i32* @y.332
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  store double 0.000000e+00, double* %9, align 8
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %31 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %30)
  %32 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %31, i32 0, i32 7
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %10, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %8, align 4
  %38 = load i32, i32* @x.331
  %39 = load i32, i32* @y.332
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:46:                                     ; preds = %89, %originalBBpart2
  %47 = load i32, i32* %8, align 4
  %48 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %49 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %48)
  %50 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %49, i32 0, i32 7
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %10, align 4
  %53 = add i32 %52, 1
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %51, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %47, %56
  br i1 %57, label %58, label %92

; <label>:58:                                     ; preds = %46
  %59 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %60 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %59)
  %61 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %60, i32 0, i32 8
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %8, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %11, align 4
  %67 = load i32, i32* %11, align 4
  %68 = icmp ne i32 %67, -1
  br i1 %68, label %69, label %88

; <label>:69:                                     ; preds = %58
  %70 = load i32, i32* %10, align 4
  %71 = load i32, i32* %8, align 4
  %72 = icmp ugt i32 %70, %71
  br i1 %72, label %73, label %87

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %75 = load double*, double** %74, align 8
  %76 = load i32, i32* %8, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds double, double* %75, i64 %77
  %79 = load double, double* %78, align 8
  %80 = load %class.Vector*, %class.Vector** %5, align 8
  %81 = load i32, i32* %11, align 4
  %82 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %80, i32 %81)
  %83 = load double, double* %82, align 8
  %84 = fmul double %79, %83
  %85 = load double, double* %9, align 8
  %86 = fadd double %85, %84
  store double %86, double* %9, align 8
  br label %87

; <label>:87:                                     ; preds = %73, %69
  br label %88

; <label>:88:                                     ; preds = %87, %58
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i32, i32* %8, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %8, align 4
  br label %46

; <label>:92:                                     ; preds = %46
  %93 = load i32, i32* @x.331
  %94 = load i32, i32* @y.332
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %92, %originalBB1alteredBB
  %101 = load double, double* %9, align 8
  %102 = load double, double* %6, align 8
  %103 = fmul double %101, %102
  %104 = load %class.Vector*, %class.Vector** %5, align 8
  %105 = load i32, i32* %10, align 4
  %106 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %104, i32 %105)
  %107 = load double, double* %106, align 8
  %108 = fsub double %107, %103
  store double %108, double* %106, align 8
  %109 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %110 = load double*, double** %109, align 8
  %111 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %112 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %111)
  %113 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %112, i32 0, i32 7
  %114 = load i32*, i32** %113, align 8
  %115 = load i32, i32* %10, align 4
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %114, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds double, double* %110, i64 %119
  %121 = load double, double* %120, align 8
  %122 = load %class.Vector*, %class.Vector** %5, align 8
  %123 = load i32, i32* %10, align 4
  %124 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %122, i32 %123)
  %125 = load double, double* %124, align 8
  %126 = fdiv double %125, %121
  store double %126, double* %124, align 8
  %127 = load i32, i32* @x.331
  %128 = load i32, i32* @y.332
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart221, label %originalBB1alteredBB

originalBBpart221:                                ; preds = %originalBB1
  br label %135

; <label>:135:                                    ; preds = %originalBBpart221
  %136 = load i32, i32* @x.331
  %137 = load i32, i32* @y.332
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %135, %originalBB23alteredBB
  %144 = load i32, i32* %10, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %10, align 4
  %146 = load i32, i32* @x.331
  %147 = load i32, i32* @y.332
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart233, label %originalBB23alteredBB

originalBBpart233:                                ; preds = %originalBB23
  br label %17

; <label>:154:                                    ; preds = %17
  %155 = load i32, i32* @x.331
  %156 = load i32, i32* @y.332
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %154, %originalBB35alteredBB
  %163 = load i32, i32* %7, align 4
  %164 = sub i32 %163, 1
  store i32 %164, i32* %12, align 4
  %165 = load i32, i32* @x.331
  %166 = load i32, i32* @y.332
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart245, label %originalBB35alteredBB

originalBBpart245:                                ; preds = %originalBB35
  br label %173

; <label>:173:                                    ; preds = %318, %originalBBpart245
  %174 = load i32, i32* %12, align 4
  %175 = icmp sge i32 %174, 0
  br i1 %175, label %176, label %321

; <label>:176:                                    ; preds = %173
  %177 = load i32, i32* @x.331
  %178 = load i32, i32* @y.332
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %176, %originalBB47alteredBB
  store double 0.000000e+00, double* %9, align 8
  %185 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %186 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %185)
  %187 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %186, i32 0, i32 7
  %188 = load i32*, i32** %187, align 8
  %189 = load i32, i32* %12, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i32, i32* %188, i64 %190
  %192 = load i32, i32* %191, align 4
  store i32 %192, i32* %8, align 4
  %193 = load i32, i32* @x.331
  %194 = load i32, i32* @y.332
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %201

; <label>:201:                                    ; preds = %276, %originalBBpart249
  %202 = load i32, i32* @x.331
  %203 = load i32, i32* @y.332
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %201, %originalBB51alteredBB
  %210 = load i32, i32* %8, align 4
  %211 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %212 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %211)
  %213 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %212, i32 0, i32 7
  %214 = load i32*, i32** %213, align 8
  %215 = load i32, i32* %12, align 4
  %216 = add nsw i32 %215, 1
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i32, i32* %214, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = icmp ult i32 %210, %219
  %221 = load i32, i32* @x.331
  %222 = load i32, i32* @y.332
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart264, label %originalBB51alteredBB

originalBBpart264:                                ; preds = %originalBB51
  br i1 %220, label %229, label %279

; <label>:229:                                    ; preds = %originalBBpart264
  %230 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %231 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %230)
  %232 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %231, i32 0, i32 8
  %233 = load i32*, i32** %232, align 8
  %234 = load i32, i32* %8, align 4
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %233, i64 %235
  %237 = load i32, i32* %236, align 4
  store i32 %237, i32* %13, align 4
  %238 = load i32, i32* %13, align 4
  %239 = icmp ne i32 %238, -1
  br i1 %239, label %240, label %259

; <label>:240:                                    ; preds = %229
  %241 = load i32, i32* %12, align 4
  %242 = load i32, i32* %8, align 4
  %243 = icmp ult i32 %241, %242
  br i1 %243, label %244, label %258

; <label>:244:                                    ; preds = %240
  %245 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %246 = load double*, double** %245, align 8
  %247 = load i32, i32* %8, align 4
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds double, double* %246, i64 %248
  %250 = load double, double* %249, align 8
  %251 = load %class.Vector*, %class.Vector** %5, align 8
  %252 = load i32, i32* %13, align 4
  %253 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %251, i32 %252)
  %254 = load double, double* %253, align 8
  %255 = fmul double %250, %254
  %256 = load double, double* %9, align 8
  %257 = fadd double %256, %255
  store double %257, double* %9, align 8
  br label %258

; <label>:258:                                    ; preds = %244, %240
  br label %259

; <label>:259:                                    ; preds = %258, %229
  %260 = load i32, i32* @x.331
  %261 = load i32, i32* @y.332
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %259, %originalBB66alteredBB
  %268 = load i32, i32* @x.331
  %269 = load i32, i32* @y.332
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %276

; <label>:276:                                    ; preds = %originalBBpart268
  %277 = load i32, i32* %8, align 4
  %278 = add i32 %277, 1
  store i32 %278, i32* %8, align 4
  br label %201

; <label>:279:                                    ; preds = %originalBBpart264
  %280 = load i32, i32* @x.331
  %281 = load i32, i32* @y.332
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %279, %originalBB70alteredBB
  %288 = load double, double* %9, align 8
  %289 = load double, double* %6, align 8
  %290 = fmul double %288, %289
  %291 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %292 = load double*, double** %291, align 8
  %293 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %294 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %293)
  %295 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %294, i32 0, i32 7
  %296 = load i32*, i32** %295, align 8
  %297 = load i32, i32* %12, align 4
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds i32, i32* %296, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds double, double* %292, i64 %301
  %303 = load double, double* %302, align 8
  %304 = fdiv double %290, %303
  %305 = load %class.Vector*, %class.Vector** %5, align 8
  %306 = load i32, i32* %12, align 4
  %307 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %305, i32 %306)
  %308 = load double, double* %307, align 8
  %309 = fsub double %308, %304
  store double %309, double* %307, align 8
  %310 = load i32, i32* @x.331
  %311 = load i32, i32* @y.332
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart284, label %originalBB70alteredBB

originalBBpart284:                                ; preds = %originalBB70
  br label %318

; <label>:318:                                    ; preds = %originalBBpart284
  %319 = load i32, i32* %12, align 4
  %320 = add nsw i32 %319, -1
  store i32 %320, i32* %12, align 4
  br label %173

; <label>:321:                                    ; preds = %173
  %322 = load i32, i32* @x.331
  %323 = load i32, i32* @y.332
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %321, %originalBB86alteredBB
  %330 = load i32, i32* @x.331
  %331 = load i32, i32* @y.332
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %21
  store double 0.000000e+00, double* %9, align 8
  %338 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %339 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %338)
  %340 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %339, i32 0, i32 7
  %341 = load i32*, i32** %340, align 8
  %342 = load i32, i32* %10, align 4
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds i32, i32* %341, i64 %343
  %345 = load i32, i32* %344, align 4
  store i32 %345, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %92
  %346 = load double, double* %9, align 8
  %347 = load double, double* %6, align 8
  %_ = fsub double -0.000000e+00, %346
  %gen = fadd double %_, %347
  %_2 = fsub double %346, %347
  %gen3 = fmul double %_2, %347
  %_4 = fsub double -0.000000e+00, %346
  %gen5 = fadd double %_4, %347
  %_6 = fsub double -0.000000e+00, %346
  %gen7 = fadd double %_6, %347
  %_8 = fsub double %346, %347
  %gen9 = fmul double %_8, %347
  %348 = fmul double %346, %347
  %349 = load %class.Vector*, %class.Vector** %5, align 8
  %350 = load i32, i32* %10, align 4
  %351 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %349, i32 %350)
  %352 = load double, double* %351, align 8
  %_10 = fsub double -0.000000e+00, %352
  %gen11 = fadd double %_10, %348
  %353 = fsub double %352, %348
  store double %353, double* %351, align 8
  %354 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %355 = load double*, double** %354, align 8
  %356 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %357 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %356)
  %358 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %357, i32 0, i32 7
  %359 = load i32*, i32** %358, align 8
  %360 = load i32, i32* %10, align 4
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds i32, i32* %359, i64 %361
  %363 = load i32, i32* %362, align 4
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds double, double* %355, i64 %364
  %366 = load double, double* %365, align 8
  %367 = load %class.Vector*, %class.Vector** %5, align 8
  %368 = load i32, i32* %10, align 4
  %369 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %367, i32 %368)
  %370 = load double, double* %369, align 8
  %_12 = fsub double %370, %366
  %gen13 = fmul double %_12, %366
  %_14 = fsub double -0.000000e+00, %370
  %gen15 = fadd double %_14, %366
  %_16 = fsub double -0.000000e+00, %370
  %gen17 = fadd double %_16, %366
  %_18 = fsub double -0.000000e+00, %370
  %gen19 = fadd double %_18, %366
  %371 = fdiv double %370, %366
  store double %371, double* %369, align 8
  br label %originalBB1

originalBB23alteredBB:                            ; preds = %originalBB23, %135
  %372 = load i32, i32* %10, align 4
  %_24 = shl i32 %372, 1
  %_25 = sub i32 0, %372
  %gen26 = add i32 %_25, 1
  %_27 = shl i32 %372, 1
  %_28 = shl i32 %372, 1
  %_29 = sub i32 %372, 1
  %gen30 = mul i32 %_29, 1
  %_31 = shl i32 %372, 1
  %373 = add i32 %372, 1
  store i32 %373, i32* %10, align 4
  br label %originalBB23

originalBB35alteredBB:                            ; preds = %originalBB35, %154
  %374 = load i32, i32* %7, align 4
  %_36 = shl i32 %374, 1
  %_37 = shl i32 %374, 1
  %_38 = shl i32 %374, 1
  %_39 = shl i32 %374, 1
  %_40 = sub i32 0, %374
  %gen41 = add i32 %_40, 1
  %_42 = shl i32 %374, 1
  %_43 = shl i32 %374, 1
  %375 = sub i32 %374, 1
  store i32 %375, i32* %12, align 4
  br label %originalBB35

originalBB47alteredBB:                            ; preds = %originalBB47, %176
  store double 0.000000e+00, double* %9, align 8
  %376 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %377 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %376)
  %378 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %377, i32 0, i32 7
  %379 = load i32*, i32** %378, align 8
  %380 = load i32, i32* %12, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds i32, i32* %379, i64 %381
  %383 = load i32, i32* %382, align 4
  store i32 %383, i32* %8, align 4
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %201
  %384 = load i32, i32* %8, align 4
  %385 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %386 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %385)
  %387 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %386, i32 0, i32 7
  %388 = load i32*, i32** %387, align 8
  %389 = load i32, i32* %12, align 4
  %_52 = sub i32 0, %389
  %gen53 = add i32 %_52, 1
  %_54 = sub i32 0, %389
  %gen55 = add i32 %_54, 1
  %_56 = shl i32 %389, 1
  %_57 = sub i32 %389, 1
  %gen58 = mul i32 %_57, 1
  %_59 = sub i32 0, %389
  %gen60 = add i32 %_59, 1
  %_61 = sub i32 0, %389
  %gen62 = add i32 %_61, 1
  %390 = add nsw i32 %389, 1
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i32, i32* %388, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = icmp ult i32 %384, %393
  br label %originalBB51

originalBB66alteredBB:                            ; preds = %originalBB66, %259
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %279
  %395 = load double, double* %9, align 8
  %396 = load double, double* %6, align 8
  %_71 = fsub double %395, %396
  %gen72 = fmul double %_71, %396
  %397 = fmul double %395, %396
  %398 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 2
  %399 = load double*, double** %398, align 8
  %400 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %14, i32 0, i32 1
  %401 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %400)
  %402 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %401, i32 0, i32 7
  %403 = load i32*, i32** %402, align 8
  %404 = load i32, i32* %12, align 4
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i32, i32* %403, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds double, double* %399, i64 %408
  %410 = load double, double* %409, align 8
  %_73 = fsub double -0.000000e+00, %397
  %gen74 = fadd double %_73, %410
  %_75 = fsub double -0.000000e+00, %397
  %gen76 = fadd double %_75, %410
  %411 = fdiv double %397, %410
  %412 = load %class.Vector*, %class.Vector** %5, align 8
  %413 = load i32, i32* %12, align 4
  %414 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %412, i32 %413)
  %415 = load double, double* %414, align 8
  %_77 = fsub double -0.000000e+00, %415
  %gen78 = fadd double %_77, %411
  %_79 = fsub double -0.000000e+00, %415
  %gen80 = fadd double %_79, %411
  %_81 = fsub double -0.000000e+00, %415
  %gen82 = fadd double %_81, %411
  %416 = fsub double %415, %411
  store double %416, double* %414, align 8
  br label %originalBB70

originalBB86alteredBB:                            ; preds = %originalBB86, %321
  br label %originalBB86
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE4PSORIdEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), double) #0 comdat align 2 {
  %6 = load i32, i32* @x.333
  %7 = load i32, i32* @y.334
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.SparseMatrix*, align 8
  %15 = alloca %class.Vector*, align 8
  %16 = alloca %"class.std::vector.11"*, align 8
  %17 = alloca %"class.std::vector.11"*, align 8
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca double, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %14, align 8
  store %class.Vector* %1, %class.Vector** %15, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %16, align 8
  store %"class.std::vector.11"* %3, %"class.std::vector.11"** %17, align 8
  store double %4, double* %18, align 8
  %24 = load %class.SparseMatrix*, %class.SparseMatrix** %14, align 8
  store i32 0, i32* %19, align 4
  %25 = load i32, i32* @x.333
  %26 = load i32, i32* @y.334
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %138, %originalBBpart2
  %34 = load i32, i32* %19, align 4
  %35 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %24)
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %37, label %141

; <label>:37:                                     ; preds = %33
  %38 = load %"class.std::vector.11"*, %"class.std::vector.11"** %16, align 8
  %39 = load i32, i32* %19, align 4
  %40 = zext i32 %39 to i64
  %41 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %38, i64 %40)
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %20, align 4
  %43 = load %class.Vector*, %class.Vector** %15, align 8
  %44 = load i32, i32* %20, align 4
  %45 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %43, i32 %44)
  %46 = load double, double* %45, align 8
  store double %46, double* %21, align 8
  %47 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %48 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %47)
  %49 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %48, i32 0, i32 7
  %50 = load i32*, i32** %49, align 8
  %51 = load i32, i32* %20, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %22, align 4
  br label %55

; <label>:55:                                     ; preds = %114, %37
  %56 = load i32, i32* %22, align 4
  %57 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %58 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %57)
  %59 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %58, i32 0, i32 7
  %60 = load i32*, i32** %59, align 8
  %61 = load i32, i32* %20, align 4
  %62 = add i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %60, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = icmp ult i32 %56, %65
  br i1 %66, label %67, label %117

; <label>:67:                                     ; preds = %55
  %68 = load i32, i32* @x.333
  %69 = load i32, i32* @y.334
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %67, %originalBB1alteredBB
  %76 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %77 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %76)
  %78 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %77, i32 0, i32 8
  %79 = load i32*, i32** %78, align 8
  %80 = load i32, i32* %22, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %79, i64 %81
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %23, align 4
  %84 = load %"class.std::vector.11"*, %"class.std::vector.11"** %17, align 8
  %85 = load i32, i32* %23, align 4
  %86 = zext i32 %85 to i64
  %87 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %84, i64 %86)
  %88 = load i32, i32* %87, align 4
  %89 = load i32, i32* %19, align 4
  %90 = icmp ult i32 %88, %89
  %91 = load i32, i32* @x.333
  %92 = load i32, i32* @y.334
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %90, label %99, label %113

; <label>:99:                                     ; preds = %originalBBpart24
  %100 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 2
  %101 = load double*, double** %100, align 8
  %102 = load i32, i32* %22, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds double, double* %101, i64 %103
  %105 = load double, double* %104, align 8
  %106 = load %class.Vector*, %class.Vector** %15, align 8
  %107 = load i32, i32* %23, align 4
  %108 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %106, i32 %107)
  %109 = load double, double* %108, align 8
  %110 = fmul double %105, %109
  %111 = load double, double* %21, align 8
  %112 = fsub double %111, %110
  store double %112, double* %21, align 8
  br label %113

; <label>:113:                                    ; preds = %99, %originalBBpart24
  br label %114

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* %22, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %22, align 4
  br label %55

; <label>:117:                                    ; preds = %55
  %118 = load double, double* %21, align 8
  %119 = load double, double* %18, align 8
  %120 = fmul double %118, %119
  %121 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 2
  %122 = load double*, double** %121, align 8
  %123 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %124 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %123)
  %125 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %124, i32 0, i32 7
  %126 = load i32*, i32** %125, align 8
  %127 = load i32, i32* %20, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %126, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds double, double* %122, i64 %131
  %133 = load double, double* %132, align 8
  %134 = fdiv double %120, %133
  %135 = load %class.Vector*, %class.Vector** %15, align 8
  %136 = load i32, i32* %20, align 4
  %137 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %135, i32 %136)
  store double %134, double* %137, align 8
  br label %138

; <label>:138:                                    ; preds = %117
  %139 = load i32, i32* %19, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %19, align 4
  br label %33

; <label>:141:                                    ; preds = %33
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %142 = alloca %class.SparseMatrix*, align 8
  %143 = alloca %class.Vector*, align 8
  %144 = alloca %"class.std::vector.11"*, align 8
  %145 = alloca %"class.std::vector.11"*, align 8
  %146 = alloca double, align 8
  %147 = alloca i32, align 4
  %148 = alloca i32, align 4
  %149 = alloca double, align 8
  %150 = alloca i32, align 4
  %151 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %142, align 8
  store %class.Vector* %1, %class.Vector** %143, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %144, align 8
  store %"class.std::vector.11"* %3, %"class.std::vector.11"** %145, align 8
  store double %4, double* %146, align 8
  %152 = load %class.SparseMatrix*, %class.SparseMatrix** %142, align 8
  store i32 0, i32* %147, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  %153 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %24, i32 0, i32 1
  %154 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %153)
  %155 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %154, i32 0, i32 8
  %156 = load i32*, i32** %155, align 8
  %157 = load i32, i32* %22, align 4
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %156, i64 %158
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %23, align 4
  %161 = load %"class.std::vector.11"*, %"class.std::vector.11"** %17, align 8
  %162 = load i32, i32* %23, align 4
  %163 = zext i32 %162 to i64
  %164 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %161, i64 %163)
  %165 = load i32, i32* %164, align 4
  %166 = load i32, i32* %19, align 4
  %167 = icmp ult i32 %165, %166
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE5TPSORIdEEvR6VectorIT_ERKSt6vectorIjSaIjEESA_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), %"class.std::vector.11"* dereferenceable(24), double) #0 comdat align 2 {
  %6 = alloca %class.SparseMatrix*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca %"class.std::vector.11"*, align 8
  %9 = alloca %"class.std::vector.11"*, align 8
  %10 = alloca double, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca double, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %6, align 8
  store %class.Vector* %1, %class.Vector** %7, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %8, align 8
  store %"class.std::vector.11"* %3, %"class.std::vector.11"** %9, align 8
  store double %4, double* %10, align 8
  %16 = load %class.SparseMatrix*, %class.SparseMatrix** %6, align 8
  %17 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %16)
  store i32 %17, i32* %11, align 4
  br label %18

; <label>:18:                                     ; preds = %originalBBpart250, %5
  %19 = load i32, i32* @x.335
  %20 = load i32, i32* @y.336
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* %11, align 4
  %28 = icmp ne i32 %27, 0
  %29 = load i32, i32* @x.335
  %30 = load i32, i32* @y.336
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %188

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.335
  %39 = load i32, i32* @y.336
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i32, i32* %11, align 4
  %47 = add i32 %46, -1
  store i32 %47, i32* %11, align 4
  %48 = load %"class.std::vector.11"*, %"class.std::vector.11"** %8, align 8
  %49 = load i32, i32* %11, align 4
  %50 = zext i32 %49 to i64
  %51 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %48, i64 %50)
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %12, align 4
  %53 = load %class.Vector*, %class.Vector** %7, align 8
  %54 = load i32, i32* %12, align 4
  %55 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %53, i32 %54)
  %56 = load double, double* %55, align 8
  store double %56, double* %13, align 8
  %57 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 1
  %58 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %57)
  %59 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %58, i32 0, i32 7
  %60 = load i32*, i32** %59, align 8
  %61 = load i32, i32* %12, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %14, align 4
  %65 = load i32, i32* @x.335
  %66 = load i32, i32* @y.336
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br label %73

; <label>:73:                                     ; preds = %originalBBpart236, %originalBBpart213
  %74 = load i32, i32* @x.335
  %75 = load i32, i32* @y.336
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %73, %originalBB15alteredBB
  %82 = load i32, i32* %14, align 4
  %83 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 1
  %84 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %83)
  %85 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %84, i32 0, i32 7
  %86 = load i32*, i32** %85, align 8
  %87 = load i32, i32* %12, align 4
  %88 = add i32 %87, 1
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %86, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = icmp ult i32 %82, %91
  %93 = load i32, i32* @x.335
  %94 = load i32, i32* @y.336
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart227, label %originalBB15alteredBB

originalBBpart227:                                ; preds = %originalBB15
  br i1 %92, label %101, label %151

; <label>:101:                                    ; preds = %originalBBpart227
  %102 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 1
  %103 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %102)
  %104 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %103, i32 0, i32 8
  %105 = load i32*, i32** %104, align 8
  %106 = load i32, i32* %14, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %105, i64 %107
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %15, align 4
  %110 = load %"class.std::vector.11"*, %"class.std::vector.11"** %9, align 8
  %111 = load i32, i32* %15, align 4
  %112 = zext i32 %111 to i64
  %113 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %110, i64 %112)
  %114 = load i32, i32* %113, align 4
  %115 = load i32, i32* %11, align 4
  %116 = icmp ugt i32 %114, %115
  br i1 %116, label %117, label %131

; <label>:117:                                    ; preds = %101
  %118 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 2
  %119 = load double*, double** %118, align 8
  %120 = load i32, i32* %14, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, double* %119, i64 %121
  %123 = load double, double* %122, align 8
  %124 = load %class.Vector*, %class.Vector** %7, align 8
  %125 = load i32, i32* %15, align 4
  %126 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %124, i32 %125)
  %127 = load double, double* %126, align 8
  %128 = fmul double %123, %127
  %129 = load double, double* %13, align 8
  %130 = fsub double %129, %128
  store double %130, double* %13, align 8
  br label %131

; <label>:131:                                    ; preds = %117, %101
  br label %132

; <label>:132:                                    ; preds = %131
  %133 = load i32, i32* @x.335
  %134 = load i32, i32* @y.336
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %132, %originalBB29alteredBB
  %141 = load i32, i32* %14, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %14, align 4
  %143 = load i32, i32* @x.335
  %144 = load i32, i32* @y.336
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart236, label %originalBB29alteredBB

originalBBpart236:                                ; preds = %originalBB29
  br label %73

; <label>:151:                                    ; preds = %originalBBpart227
  %152 = load i32, i32* @x.335
  %153 = load i32, i32* @y.336
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %151, %originalBB38alteredBB
  %160 = load double, double* %13, align 8
  %161 = load double, double* %10, align 8
  %162 = fmul double %160, %161
  %163 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 2
  %164 = load double*, double** %163, align 8
  %165 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 1
  %166 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %165)
  %167 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %166, i32 0, i32 7
  %168 = load i32*, i32** %167, align 8
  %169 = load i32, i32* %12, align 4
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds i32, i32* %168, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds double, double* %164, i64 %173
  %175 = load double, double* %174, align 8
  %176 = fdiv double %162, %175
  %177 = load %class.Vector*, %class.Vector** %7, align 8
  %178 = load i32, i32* %12, align 4
  %179 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %177, i32 %178)
  store double %176, double* %179, align 8
  %180 = load i32, i32* @x.335
  %181 = load i32, i32* @y.336
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart250, label %originalBB38alteredBB

originalBBpart250:                                ; preds = %originalBB38
  br label %18

; <label>:188:                                    ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  %189 = load i32, i32* %11, align 4
  %190 = icmp ne i32 %189, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %191 = load i32, i32* %11, align 4
  %_ = shl i32 %191, -1
  %_2 = sub i32 %191, -1
  %gen = mul i32 %_2, -1
  %_3 = sub i32 %191, -1
  %gen4 = mul i32 %_3, -1
  %_5 = sub i32 %191, -1
  %gen6 = mul i32 %_5, -1
  %_7 = sub i32 0, %191
  %gen8 = add i32 %_7, -1
  %_9 = shl i32 %191, -1
  %_10 = sub i32 %191, -1
  %gen11 = mul i32 %_10, -1
  %192 = add i32 %191, -1
  store i32 %192, i32* %11, align 4
  %193 = load %"class.std::vector.11"*, %"class.std::vector.11"** %8, align 8
  %194 = load i32, i32* %11, align 4
  %195 = zext i32 %194 to i64
  %196 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %193, i64 %195)
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %12, align 4
  %198 = load %class.Vector*, %class.Vector** %7, align 8
  %199 = load i32, i32* %12, align 4
  %200 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %198, i32 %199)
  %201 = load double, double* %200, align 8
  store double %201, double* %13, align 8
  %202 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 1
  %203 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %202)
  %204 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %203, i32 0, i32 7
  %205 = load i32*, i32** %204, align 8
  %206 = load i32, i32* %12, align 4
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds i32, i32* %205, i64 %207
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %14, align 4
  br label %originalBB1

originalBB15alteredBB:                            ; preds = %originalBB15, %73
  %210 = load i32, i32* %14, align 4
  %211 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 1
  %212 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %211)
  %213 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %212, i32 0, i32 7
  %214 = load i32*, i32** %213, align 8
  %215 = load i32, i32* %12, align 4
  %_16 = sub i32 %215, 1
  %gen17 = mul i32 %_16, 1
  %_18 = sub i32 %215, 1
  %gen19 = mul i32 %_18, 1
  %_20 = shl i32 %215, 1
  %_21 = sub i32 %215, 1
  %gen22 = mul i32 %_21, 1
  %_23 = shl i32 %215, 1
  %_24 = sub i32 0, %215
  %gen25 = add i32 %_24, 1
  %216 = add i32 %215, 1
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds i32, i32* %214, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = icmp ult i32 %210, %219
  br label %originalBB15

originalBB29alteredBB:                            ; preds = %originalBB29, %132
  %221 = load i32, i32* %14, align 4
  %_30 = shl i32 %221, 1
  %_31 = sub i32 %221, 1
  %gen32 = mul i32 %_31, 1
  %_33 = sub i32 0, %221
  %gen34 = add i32 %_33, 1
  %222 = add i32 %221, 1
  store i32 %222, i32* %14, align 4
  br label %originalBB29

originalBB38alteredBB:                            ; preds = %originalBB38, %151
  %223 = load double, double* %13, align 8
  %224 = load double, double* %10, align 8
  %_39 = fsub double %223, %224
  %gen40 = fmul double %_39, %224
  %_41 = fsub double -0.000000e+00, %223
  %gen42 = fadd double %_41, %224
  %_43 = fsub double %223, %224
  %gen44 = fmul double %_43, %224
  %225 = fmul double %223, %224
  %226 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 2
  %227 = load double*, double** %226, align 8
  %228 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %16, i32 0, i32 1
  %229 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %228)
  %230 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %229, i32 0, i32 7
  %231 = load i32*, i32** %230, align 8
  %232 = load i32, i32* %12, align 4
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds i32, i32* %231, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds double, double* %227, i64 %236
  %238 = load double, double* %237, align 8
  %_45 = fsub double -0.000000e+00, %225
  %gen46 = fadd double %_45, %238
  %_47 = fsub double %225, %238
  %gen48 = fmul double %_47, %238
  %239 = fdiv double %225, %238
  %240 = load %class.Vector*, %class.Vector** %7, align 8
  %241 = load i32, i32* %12, align 4
  %242 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %240, i32 %241)
  store double %239, double* %242, align 8
  br label %originalBB38
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE8SOR_stepIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %5 = load i32, i32* @x.337
  %6 = load i32, i32* @y.338
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca %class.Vector*, align 8
  %16 = alloca double, align 8
  %17 = alloca i32, align 4
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector* %1, %class.Vector** %14, align 8
  store %class.Vector* %2, %class.Vector** %15, align 8
  store double %3, double* %16, align 8
  %20 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  store i32 0, i32* %17, align 4
  %21 = load i32, i32* @x.337
  %22 = load i32, i32* @y.338
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart256, %originalBBpart2
  %30 = load i32, i32* @x.337
  %31 = load i32, i32* @y.338
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i32, i32* %17, align 4
  %39 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %20)
  %40 = icmp ult i32 %38, %39
  %41 = load i32, i32* @x.337
  %42 = load i32, i32* @y.338
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %187

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load i32, i32* @x.337
  %51 = load i32, i32* @y.338
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load %class.Vector*, %class.Vector** %15, align 8
  %59 = load i32, i32* %17, align 4
  %60 = call double @_ZNK6VectorIdEclEj(%class.Vector* %58, i32 %59)
  store double %60, double* %18, align 8
  %61 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %62 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %61)
  %63 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %62, i32 0, i32 7
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %17, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %64, i64 %66
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %19, align 4
  %69 = load i32, i32* @x.337
  %70 = load i32, i32* @y.338
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %77

; <label>:77:                                     ; preds = %originalBBpart246, %originalBBpart28
  %78 = load i32, i32* %19, align 4
  %79 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %80 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %79)
  %81 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %80, i32 0, i32 7
  %82 = load i32*, i32** %81, align 8
  %83 = load i32, i32* %17, align 4
  %84 = add i32 %83, 1
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %82, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = icmp ult i32 %78, %87
  br i1 %88, label %89, label %145

; <label>:89:                                     ; preds = %77
  %90 = load i32, i32* @x.337
  %91 = load i32, i32* @y.338
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %89, %originalBB10alteredBB
  %98 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %99 = load double*, double** %98, align 8
  %100 = load i32, i32* %19, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds double, double* %99, i64 %101
  %103 = load double, double* %102, align 8
  %104 = load %class.Vector*, %class.Vector** %14, align 8
  %105 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %106 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %105)
  %107 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %106, i32 0, i32 8
  %108 = load i32*, i32** %107, align 8
  %109 = load i32, i32* %19, align 4
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %104, i32 %112)
  %114 = load double, double* %113, align 8
  %115 = fmul double %103, %114
  %116 = load double, double* %18, align 8
  %117 = fsub double %116, %115
  store double %117, double* %18, align 8
  %118 = load i32, i32* @x.337
  %119 = load i32, i32* @y.338
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart232, label %originalBB10alteredBB

originalBBpart232:                                ; preds = %originalBB10
  br label %126

; <label>:126:                                    ; preds = %originalBBpart232
  %127 = load i32, i32* @x.337
  %128 = load i32, i32* @y.338
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %126, %originalBB34alteredBB
  %135 = load i32, i32* %19, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %19, align 4
  %137 = load i32, i32* @x.337
  %138 = load i32, i32* @y.338
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart246, label %originalBB34alteredBB

originalBBpart246:                                ; preds = %originalBB34
  br label %77

; <label>:145:                                    ; preds = %77
  %146 = load double, double* %18, align 8
  %147 = load double, double* %16, align 8
  %148 = fmul double %146, %147
  %149 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %150 = load double*, double** %149, align 8
  %151 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %152 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %151)
  %153 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %152, i32 0, i32 7
  %154 = load i32*, i32** %153, align 8
  %155 = load i32, i32* %17, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i32, i32* %154, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds double, double* %150, i64 %159
  %161 = load double, double* %160, align 8
  %162 = fdiv double %148, %161
  %163 = load %class.Vector*, %class.Vector** %14, align 8
  %164 = load i32, i32* %17, align 4
  %165 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %163, i32 %164)
  %166 = load double, double* %165, align 8
  %167 = fadd double %166, %162
  store double %167, double* %165, align 8
  br label %168

; <label>:168:                                    ; preds = %145
  %169 = load i32, i32* @x.337
  %170 = load i32, i32* @y.338
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %168, %originalBB48alteredBB
  %177 = load i32, i32* %17, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %17, align 4
  %179 = load i32, i32* @x.337
  %180 = load i32, i32* @y.338
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart256, label %originalBB48alteredBB

originalBBpart256:                                ; preds = %originalBB48
  br label %29

; <label>:187:                                    ; preds = %originalBBpart24
  %188 = load i32, i32* @x.337
  %189 = load i32, i32* @y.338
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %187, %originalBB58alteredBB
  %196 = load i32, i32* @x.337
  %197 = load i32, i32* @y.338
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %204 = alloca %class.SparseMatrix*, align 8
  %205 = alloca %class.Vector*, align 8
  %206 = alloca %class.Vector*, align 8
  %207 = alloca double, align 8
  %208 = alloca i32, align 4
  %209 = alloca double, align 8
  %210 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %204, align 8
  store %class.Vector* %1, %class.Vector** %205, align 8
  store %class.Vector* %2, %class.Vector** %206, align 8
  store double %3, double* %207, align 8
  %211 = load %class.SparseMatrix*, %class.SparseMatrix** %204, align 8
  store i32 0, i32* %208, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %212 = load i32, i32* %17, align 4
  %213 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %20)
  %214 = icmp ult i32 %212, %213
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %215 = load %class.Vector*, %class.Vector** %15, align 8
  %216 = load i32, i32* %17, align 4
  %217 = call double @_ZNK6VectorIdEclEj(%class.Vector* %215, i32 %216)
  store double %217, double* %18, align 8
  %218 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %219 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %218)
  %220 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %219, i32 0, i32 7
  %221 = load i32*, i32** %220, align 8
  %222 = load i32, i32* %17, align 4
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds i32, i32* %221, i64 %223
  %225 = load i32, i32* %224, align 4
  store i32 %225, i32* %19, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  %226 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 2
  %227 = load double*, double** %226, align 8
  %228 = load i32, i32* %19, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds double, double* %227, i64 %229
  %231 = load double, double* %230, align 8
  %232 = load %class.Vector*, %class.Vector** %14, align 8
  %233 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %20, i32 0, i32 1
  %234 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %233)
  %235 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %234, i32 0, i32 8
  %236 = load i32*, i32** %235, align 8
  %237 = load i32, i32* %19, align 4
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds i32, i32* %236, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %232, i32 %240)
  %242 = load double, double* %241, align 8
  %_ = fsub double -0.000000e+00, %231
  %gen = fadd double %_, %242
  %_11 = fsub double %231, %242
  %gen12 = fmul double %_11, %242
  %_13 = fsub double -0.000000e+00, %231
  %gen14 = fadd double %_13, %242
  %_15 = fsub double %231, %242
  %gen16 = fmul double %_15, %242
  %_17 = fsub double %231, %242
  %gen18 = fmul double %_17, %242
  %_19 = fsub double -0.000000e+00, %231
  %gen20 = fadd double %_19, %242
  %_21 = fsub double %231, %242
  %gen22 = fmul double %_21, %242
  %243 = fmul double %231, %242
  %244 = load double, double* %18, align 8
  %_23 = fsub double %244, %243
  %gen24 = fmul double %_23, %243
  %_25 = fsub double %244, %243
  %gen26 = fmul double %_25, %243
  %_27 = fsub double -0.000000e+00, %244
  %gen28 = fadd double %_27, %243
  %_29 = fsub double -0.000000e+00, %244
  %gen30 = fadd double %_29, %243
  %245 = fsub double %244, %243
  store double %245, double* %18, align 8
  br label %originalBB10

originalBB34alteredBB:                            ; preds = %originalBB34, %126
  %246 = load i32, i32* %19, align 4
  %_35 = shl i32 %246, 1
  %_36 = sub i32 0, %246
  %gen37 = add i32 %_36, 1
  %_38 = sub i32 0, %246
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 %246, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 0, %246
  %gen43 = add i32 %_42, 1
  %_44 = shl i32 %246, 1
  %247 = add i32 %246, 1
  store i32 %247, i32* %19, align 4
  br label %originalBB34

originalBB48alteredBB:                            ; preds = %originalBB48, %168
  %248 = load i32, i32* %17, align 4
  %_49 = sub i32 0, %248
  %gen50 = add i32 %_49, 1
  %_51 = shl i32 %248, 1
  %_52 = sub i32 0, %248
  %gen53 = add i32 %_52, 1
  %_54 = shl i32 %248, 1
  %249 = add i32 %248, 1
  store i32 %249, i32* %17, align 4
  br label %originalBB48

originalBB58alteredBB:                            ; preds = %originalBB58, %187
  br label %originalBB58
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9TSOR_stepIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %5 = alloca %class.SparseMatrix*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca double, align 8
  %11 = alloca i32, align 4
  store %class.SparseMatrix* %0, %class.SparseMatrix** %5, align 8
  store %class.Vector* %1, %class.Vector** %6, align 8
  store %class.Vector* %2, %class.Vector** %7, align 8
  store double %3, double* %8, align 8
  %12 = load %class.SparseMatrix*, %class.SparseMatrix** %5, align 8
  %13 = call i32 @_ZNK12SparseMatrixIdE1mEv(%class.SparseMatrix* %12)
  %14 = sub i32 %13, 1
  store i32 %14, i32* %9, align 4
  br label %15

; <label>:15:                                     ; preds = %121, %4
  %16 = load i32, i32* %9, align 4
  %17 = icmp sge i32 %16, 0
  br i1 %17, label %18, label %124

; <label>:18:                                     ; preds = %15
  %19 = load i32, i32* @x.339
  %20 = load i32, i32* @y.340
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load %class.Vector*, %class.Vector** %7, align 8
  %28 = load i32, i32* %9, align 4
  %29 = call double @_ZNK6VectorIdEclEj(%class.Vector* %27, i32 %28)
  store double %29, double* %10, align 8
  %30 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %31 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %30)
  %32 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %31, i32 0, i32 7
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %9, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %11, align 4
  %38 = load i32, i32* @x.339
  %39 = load i32, i32* @y.340
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:46:                                     ; preds = %95, %originalBBpart2
  %47 = load i32, i32* %11, align 4
  %48 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %49 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %48)
  %50 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %49, i32 0, i32 7
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %9, align 4
  %53 = add nsw i32 %52, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %51, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %47, %56
  br i1 %57, label %58, label %98

; <label>:58:                                     ; preds = %46
  %59 = load i32, i32* @x.339
  %60 = load i32, i32* @y.340
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %58, %originalBB1alteredBB
  %67 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %68 = load double*, double** %67, align 8
  %69 = load i32, i32* %11, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds double, double* %68, i64 %70
  %72 = load double, double* %71, align 8
  %73 = load %class.Vector*, %class.Vector** %6, align 8
  %74 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %75 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %74)
  %76 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %75, i32 0, i32 8
  %77 = load i32*, i32** %76, align 8
  %78 = load i32, i32* %11, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %73, i32 %81)
  %83 = load double, double* %82, align 8
  %84 = fmul double %72, %83
  %85 = load double, double* %10, align 8
  %86 = fsub double %85, %84
  store double %86, double* %10, align 8
  %87 = load i32, i32* @x.339
  %88 = load i32, i32* @y.340
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br label %95

; <label>:95:                                     ; preds = %originalBBpart213
  %96 = load i32, i32* %11, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %11, align 4
  br label %46

; <label>:98:                                     ; preds = %46
  %99 = load double, double* %10, align 8
  %100 = load double, double* %8, align 8
  %101 = fmul double %99, %100
  %102 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %103 = load double*, double** %102, align 8
  %104 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %105 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %104)
  %106 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %105, i32 0, i32 7
  %107 = load i32*, i32** %106, align 8
  %108 = load i32, i32* %9, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %107, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds double, double* %103, i64 %112
  %114 = load double, double* %113, align 8
  %115 = fdiv double %101, %114
  %116 = load %class.Vector*, %class.Vector** %6, align 8
  %117 = load i32, i32* %9, align 4
  %118 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %116, i32 %117)
  %119 = load double, double* %118, align 8
  %120 = fadd double %119, %115
  store double %120, double* %118, align 8
  br label %121

; <label>:121:                                    ; preds = %98
  %122 = load i32, i32* %9, align 4
  %123 = add nsw i32 %122, -1
  store i32 %123, i32* %9, align 4
  br label %15

; <label>:124:                                    ; preds = %15
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  %125 = load %class.Vector*, %class.Vector** %7, align 8
  %126 = load i32, i32* %9, align 4
  %127 = call double @_ZNK6VectorIdEclEj(%class.Vector* %125, i32 %126)
  store double %127, double* %10, align 8
  %128 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %129 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %128)
  %130 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %129, i32 0, i32 7
  %131 = load i32*, i32** %130, align 8
  %132 = load i32, i32* %9, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %131, i64 %133
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* %11, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  %136 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 2
  %137 = load double*, double** %136, align 8
  %138 = load i32, i32* %11, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds double, double* %137, i64 %139
  %141 = load double, double* %140, align 8
  %142 = load %class.Vector*, %class.Vector** %6, align 8
  %143 = getelementptr inbounds %class.SparseMatrix, %class.SparseMatrix* %12, i32 0, i32 1
  %144 = call %class.SparsityPattern* @_ZNK12SmartPointerIK15SparsityPatternEptEv(%class.SmartPointer* %143)
  %145 = getelementptr inbounds %class.SparsityPattern, %class.SparsityPattern* %144, i32 0, i32 8
  %146 = load i32*, i32** %145, align 8
  %147 = load i32, i32* %11, align 4
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i32, i32* %146, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = call dereferenceable(8) double* @_ZN6VectorIdEclEj(%class.Vector* %142, i32 %150)
  %152 = load double, double* %151, align 8
  %_ = fsub double %141, %152
  %gen = fmul double %_, %152
  %_2 = fsub double %141, %152
  %gen3 = fmul double %_2, %152
  %_4 = fsub double -0.000000e+00, %141
  %gen5 = fadd double %_4, %152
  %_6 = fsub double -0.000000e+00, %141
  %gen7 = fadd double %_6, %152
  %_8 = fsub double -0.000000e+00, %141
  %gen9 = fadd double %_8, %152
  %_10 = fsub double -0.000000e+00, %141
  %gen11 = fadd double %_10, %152
  %153 = fmul double %141, %152
  %154 = load double, double* %10, align 8
  %155 = fsub double %154, %153
  store double %155, double* %10, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK12SparseMatrixIdE9SSOR_stepIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix*, %class.Vector* dereferenceable(24), %class.Vector* dereferenceable(24), double) #0 comdat align 2 {
  %5 = load i32, i32* @x.341
  %6 = load i32, i32* @y.342
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.SparseMatrix*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca %class.Vector*, align 8
  %16 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %13, align 8
  store %class.Vector* %1, %class.Vector** %14, align 8
  store %class.Vector* %2, %class.Vector** %15, align 8
  store double %3, double* %16, align 8
  %17 = load %class.SparseMatrix*, %class.SparseMatrix** %13, align 8
  %18 = load %class.Vector*, %class.Vector** %14, align 8
  %19 = load %class.Vector*, %class.Vector** %15, align 8
  %20 = load double, double* %16, align 8
  call void @_ZNK12SparseMatrixIdE8SOR_stepIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %17, %class.Vector* dereferenceable(24) %18, %class.Vector* dereferenceable(24) %19, double %20)
  %21 = load %class.Vector*, %class.Vector** %14, align 8
  %22 = load %class.Vector*, %class.Vector** %15, align 8
  %23 = load double, double* %16, align 8
  call void @_ZNK12SparseMatrixIdE9TSOR_stepIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %17, %class.Vector* dereferenceable(24) %21, %class.Vector* dereferenceable(24) %22, double %23)
  %24 = load i32, i32* @x.341
  %25 = load i32, i32* @y.342
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %32 = alloca %class.SparseMatrix*, align 8
  %33 = alloca %class.Vector*, align 8
  %34 = alloca %class.Vector*, align 8
  %35 = alloca double, align 8
  store %class.SparseMatrix* %0, %class.SparseMatrix** %32, align 8
  store %class.Vector* %1, %class.Vector** %33, align 8
  store %class.Vector* %2, %class.Vector** %34, align 8
  store double %3, double* %35, align 8
  %36 = load %class.SparseMatrix*, %class.SparseMatrix** %32, align 8
  %37 = load %class.Vector*, %class.Vector** %33, align 8
  %38 = load %class.Vector*, %class.Vector** %34, align 8
  %39 = load double, double* %35, align 8
  call void @_ZNK12SparseMatrixIdE8SOR_stepIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %36, %class.Vector* dereferenceable(24) %37, %class.Vector* dereferenceable(24) %38, double %39)
  %40 = load %class.Vector*, %class.Vector** %33, align 8
  %41 = load %class.Vector*, %class.Vector** %34, align 8
  %42 = load double, double* %35, align 8
  call void @_ZNK12SparseMatrixIdE9TSOR_stepIdEEvR6VectorIT_ERKS4_d(%class.SparseMatrix* %36, %class.Vector* dereferenceable(24) %40, %class.Vector* dereferenceable(24) %41, double %42)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE16ExcNotCompressedD2Ev(%"class.SparseMatrix<double>::ExcNotCompressed"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcNotCompressed"*, align 8
  store %"class.SparseMatrix<double>::ExcNotCompressed"* %0, %"class.SparseMatrix<double>::ExcNotCompressed"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcNotCompressed"*, %"class.SparseMatrix<double>::ExcNotCompressed"** %2, align 8
  %4 = bitcast %"class.SparseMatrix<double>::ExcNotCompressed"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE16ExcNotCompressedD0Ev(%"class.SparseMatrix<double>::ExcNotCompressed"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcNotCompressed"*, align 8
  store %"class.SparseMatrix<double>::ExcNotCompressed"* %0, %"class.SparseMatrix<double>::ExcNotCompressed"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcNotCompressed"*, %"class.SparseMatrix<double>::ExcNotCompressed"** %2, align 8
  call void @_ZN12SparseMatrixIdE16ExcNotCompressedD2Ev(%"class.SparseMatrix<double>::ExcNotCompressed"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcNotCompressed"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNK13ExceptionBase4whatEv(%class.ExceptionBase*) unnamed_addr #9

declare void @_ZNK13ExceptionBase9PrintInfoERSo(%class.ExceptionBase*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE23ExcMatrixNotInitializedD2Ev(%"class.SparseMatrix<double>::ExcMatrixNotInitialized"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.347
  %3 = load i32, i32* @y.348
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.SparseMatrix<double>::ExcMatrixNotInitialized"*, align 8
  store %"class.SparseMatrix<double>::ExcMatrixNotInitialized"* %0, %"class.SparseMatrix<double>::ExcMatrixNotInitialized"** %10, align 8
  %11 = load %"class.SparseMatrix<double>::ExcMatrixNotInitialized"*, %"class.SparseMatrix<double>::ExcMatrixNotInitialized"** %10, align 8
  %12 = bitcast %"class.SparseMatrix<double>::ExcMatrixNotInitialized"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #2
  %13 = load i32, i32* @x.347
  %14 = load i32, i32* @y.348
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.SparseMatrix<double>::ExcMatrixNotInitialized"*, align 8
  store %"class.SparseMatrix<double>::ExcMatrixNotInitialized"* %0, %"class.SparseMatrix<double>::ExcMatrixNotInitialized"** %21, align 8
  %22 = load %"class.SparseMatrix<double>::ExcMatrixNotInitialized"*, %"class.SparseMatrix<double>::ExcMatrixNotInitialized"** %21, align 8
  %23 = bitcast %"class.SparseMatrix<double>::ExcMatrixNotInitialized"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE23ExcMatrixNotInitializedD0Ev(%"class.SparseMatrix<double>::ExcMatrixNotInitialized"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcMatrixNotInitialized"*, align 8
  store %"class.SparseMatrix<double>::ExcMatrixNotInitialized"* %0, %"class.SparseMatrix<double>::ExcMatrixNotInitialized"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcMatrixNotInitialized"*, %"class.SparseMatrix<double>::ExcMatrixNotInitialized"** %2, align 8
  call void @_ZN12SparseMatrixIdE23ExcMatrixNotInitializedD2Ev(%"class.SparseMatrix<double>::ExcMatrixNotInitialized"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcMatrixNotInitialized"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE18ExcMatrixNotSquareD2Ev(%"class.SparseMatrix<double>::ExcMatrixNotSquare"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.351
  %3 = load i32, i32* @y.352
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.SparseMatrix<double>::ExcMatrixNotSquare"*, align 8
  store %"class.SparseMatrix<double>::ExcMatrixNotSquare"* %0, %"class.SparseMatrix<double>::ExcMatrixNotSquare"** %10, align 8
  %11 = load %"class.SparseMatrix<double>::ExcMatrixNotSquare"*, %"class.SparseMatrix<double>::ExcMatrixNotSquare"** %10, align 8
  %12 = bitcast %"class.SparseMatrix<double>::ExcMatrixNotSquare"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #2
  %13 = load i32, i32* @x.351
  %14 = load i32, i32* @y.352
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.SparseMatrix<double>::ExcMatrixNotSquare"*, align 8
  store %"class.SparseMatrix<double>::ExcMatrixNotSquare"* %0, %"class.SparseMatrix<double>::ExcMatrixNotSquare"** %21, align 8
  %22 = load %"class.SparseMatrix<double>::ExcMatrixNotSquare"*, %"class.SparseMatrix<double>::ExcMatrixNotSquare"** %21, align 8
  %23 = bitcast %"class.SparseMatrix<double>::ExcMatrixNotSquare"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE18ExcMatrixNotSquareD0Ev(%"class.SparseMatrix<double>::ExcMatrixNotSquare"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcMatrixNotSquare"*, align 8
  store %"class.SparseMatrix<double>::ExcMatrixNotSquare"* %0, %"class.SparseMatrix<double>::ExcMatrixNotSquare"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcMatrixNotSquare"*, %"class.SparseMatrix<double>::ExcMatrixNotSquare"** %2, align 8
  call void @_ZN12SparseMatrixIdE18ExcMatrixNotSquareD2Ev(%"class.SparseMatrix<double>::ExcMatrixNotSquare"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcMatrixNotSquare"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE28ExcDifferentSparsityPatternsD2Ev(%"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*, align 8
  store %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"* %0, %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*, %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"** %2, align 8
  %4 = bitcast %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE28ExcDifferentSparsityPatternsD0Ev(%"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*, align 8
  store %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"* %0, %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"*, %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"** %2, align 8
  call void @_ZN12SparseMatrixIdE28ExcDifferentSparsityPatternsD2Ev(%"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcDifferentSparsityPatterns"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE25ExcInvalidConstructorCallD2Ev(%"class.SparseMatrix<double>::ExcInvalidConstructorCall"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.359
  %3 = load i32, i32* @y.360
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.SparseMatrix<double>::ExcInvalidConstructorCall"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidConstructorCall"* %0, %"class.SparseMatrix<double>::ExcInvalidConstructorCall"** %10, align 8
  %11 = load %"class.SparseMatrix<double>::ExcInvalidConstructorCall"*, %"class.SparseMatrix<double>::ExcInvalidConstructorCall"** %10, align 8
  %12 = bitcast %"class.SparseMatrix<double>::ExcInvalidConstructorCall"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #2
  %13 = load i32, i32* @x.359
  %14 = load i32, i32* @y.360
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.SparseMatrix<double>::ExcInvalidConstructorCall"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidConstructorCall"* %0, %"class.SparseMatrix<double>::ExcInvalidConstructorCall"** %21, align 8
  %22 = load %"class.SparseMatrix<double>::ExcInvalidConstructorCall"*, %"class.SparseMatrix<double>::ExcInvalidConstructorCall"** %21, align 8
  %23 = bitcast %"class.SparseMatrix<double>::ExcInvalidConstructorCall"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE25ExcInvalidConstructorCallD0Ev(%"class.SparseMatrix<double>::ExcInvalidConstructorCall"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcInvalidConstructorCall"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidConstructorCall"* %0, %"class.SparseMatrix<double>::ExcInvalidConstructorCall"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcInvalidConstructorCall"*, %"class.SparseMatrix<double>::ExcInvalidConstructorCall"** %2, align 8
  call void @_ZN12SparseMatrixIdE25ExcInvalidConstructorCallD2Ev(%"class.SparseMatrix<double>::ExcInvalidConstructorCall"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcInvalidConstructorCall"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE26ExcSourceEqualsDestinationD2Ev(%"class.SparseMatrix<double>::ExcSourceEqualsDestination"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcSourceEqualsDestination"*, align 8
  store %"class.SparseMatrix<double>::ExcSourceEqualsDestination"* %0, %"class.SparseMatrix<double>::ExcSourceEqualsDestination"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcSourceEqualsDestination"*, %"class.SparseMatrix<double>::ExcSourceEqualsDestination"** %2, align 8
  %4 = bitcast %"class.SparseMatrix<double>::ExcSourceEqualsDestination"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE26ExcSourceEqualsDestinationD0Ev(%"class.SparseMatrix<double>::ExcSourceEqualsDestination"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.SparseMatrix<double>::ExcSourceEqualsDestination"*, align 8
  store %"class.SparseMatrix<double>::ExcSourceEqualsDestination"* %0, %"class.SparseMatrix<double>::ExcSourceEqualsDestination"** %2, align 8
  %3 = load %"class.SparseMatrix<double>::ExcSourceEqualsDestination"*, %"class.SparseMatrix<double>::ExcSourceEqualsDestination"** %2, align 8
  call void @_ZN12SparseMatrixIdE26ExcSourceEqualsDestinationD2Ev(%"class.SparseMatrix<double>::ExcSourceEqualsDestination"* %3) #2
  %4 = bitcast %"class.SparseMatrix<double>::ExcSourceEqualsDestination"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN18StandardExceptions5ExcIOD0Ev(%"class.StandardExceptions::ExcIO"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.StandardExceptions::ExcIO"*, align 8
  store %"class.StandardExceptions::ExcIO"* %0, %"class.StandardExceptions::ExcIO"** %2, align 8
  %3 = load %"class.StandardExceptions::ExcIO"*, %"class.StandardExceptions::ExcIO"** %2, align 8
  call void @_ZN18StandardExceptions5ExcIOD2Ev(%"class.StandardExceptions::ExcIO"* %3) #2
  %4 = bitcast %"class.StandardExceptions::ExcIO"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZStaNRSt13_Ios_FmtflagsS_(i32* dereferenceable(4), i32) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32*, i32** %3, align 8
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @_ZStanSt13_Ios_FmtflagsS_(i32 %6, i32 %7)
  %9 = load i32*, i32** %3, align 8
  store i32 %8, i32* %9, align 4
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZStcoSt13_Ios_Fmtflags(i32) #5 comdat {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = xor i32 %3, -1
  ret i32 %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZStoRRSt13_Ios_FmtflagsS_(i32* dereferenceable(4), i32) #0 comdat {
  %3 = load i32, i32* @x.373
  %4 = load i32, i32* @y.374
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  store i32* %0, i32** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load i32*, i32** %11, align 8
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %12, align 4
  %16 = call i32 @_ZStorSt13_Ios_FmtflagsS_(i32 %14, i32 %15)
  %17 = load i32*, i32** %11, align 8
  store i32 %16, i32* %17, align 4
  %18 = load i32, i32* @x.373
  %19 = load i32, i32* @y.374
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %17

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca i32*, align 8
  %27 = alloca i32, align 4
  store i32* %0, i32** %26, align 8
  store i32 %1, i32* %27, align 4
  %28 = load i32*, i32** %26, align 8
  %29 = load i32, i32* %28, align 4
  %30 = load i32, i32* %27, align 4
  %31 = call i32 @_ZStorSt13_Ios_FmtflagsS_(i32 %29, i32 %30)
  %32 = load i32*, i32** %26, align 8
  store i32 %31, i32* %32, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZStanSt13_Ios_FmtflagsS_(i32, i32) #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = and i32 %5, %6
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZStorSt13_Ios_FmtflagsS_(i32, i32) #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = or i32 %5, %6
  ret i32 %7
}

; Function Attrs: nounwind readnone
declare float @sqrtf(float) #8

declare void @_ZNK11Subscriptor9subscribeEv(%class.Subscriptor*) #1

declare void @_ZNK11Subscriptor11unsubscribeEv(%class.Subscriptor*) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8), double*) #5 comdat {
  %3 = load i32, i32* @x.379
  %4 = load i32, i32* @y.380
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca double**, align 8
  %12 = alloca double*, align 8
  store double** %0, double*** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load double*, double** %12, align 8
  %14 = load i32, i32* @x.379
  %15 = load i32, i32* @y.380
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca double**, align 8
  %23 = alloca double*, align 8
  store double** %0, double*** %22, align 8
  store double* %1, double** %23, align 8
  %24 = load double*, double** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i32, double* dereferenceable(8)) #5 comdat {
  %4 = load i32, i32* @x.381
  %5 = load i32, i32* @y.382
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca i32, align 4
  %14 = alloca double*, align 8
  %15 = alloca double, align 8
  %16 = alloca i32, align 4
  store double* %0, double** %12, align 8
  store i32 %1, i32* %13, align 4
  store double* %2, double** %14, align 8
  %17 = load double*, double** %14, align 8
  %18 = load double, double* %17, align 8
  store double %18, double* %15, align 8
  %19 = load i32, i32* %13, align 4
  store i32 %19, i32* %16, align 4
  %20 = load i32, i32* @x.381
  %21 = load i32, i32* @y.382
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %originalBBpart29, %originalBBpart2
  %29 = load i32, i32* @x.381
  %30 = load i32, i32* @y.382
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i32, i32* %16, align 4
  %38 = icmp ugt i32 %37, 0
  %39 = load i32, i32* @x.381
  %40 = load i32, i32* @y.382
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %71

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = load double, double* %15, align 8
  %49 = load double*, double** %12, align 8
  store double %48, double* %49, align 8
  br label %50

; <label>:50:                                     ; preds = %47
  %51 = load i32, i32* @x.381
  %52 = load i32, i32* @y.382
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i32, i32* %16, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %16, align 4
  %61 = load double*, double** %12, align 8
  %62 = getelementptr inbounds double, double* %61, i32 1
  store double* %62, double** %12, align 8
  %63 = load i32, i32* @x.381
  %64 = load i32, i32* @y.382
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart29, label %originalBB6alteredBB

originalBBpart29:                                 ; preds = %originalBB6
  br label %28

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load double*, double** %12, align 8
  ret double* %72

originalBBalteredBB:                              ; preds = %originalBB, %3
  %73 = alloca double*, align 8
  %74 = alloca i32, align 4
  %75 = alloca double*, align 8
  %76 = alloca double, align 8
  %77 = alloca i32, align 4
  store double* %0, double** %73, align 8
  store i32 %1, i32* %74, align 4
  store double* %2, double** %75, align 8
  %78 = load double*, double** %75, align 8
  %79 = load double, double* %78, align 8
  store double %79, double* %76, align 8
  %80 = load i32, i32* %74, align 4
  store i32 %80, i32* %77, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %81 = load i32, i32* %16, align 4
  %82 = icmp ugt i32 %81, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %83 = load i32, i32* %16, align 4
  %_ = shl i32 %83, -1
  %_7 = shl i32 %83, -1
  %84 = add i32 %83, -1
  store i32 %84, i32* %16, align 4
  %85 = load double*, double** %12, align 8
  %86 = getelementptr inbounds double, double* %85, i32 1
  store double* %86, double** %12, align 8
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdET_S1_(double*) #5 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdjiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i32, i32* dereferenceable(4)) #5 comdat {
  %4 = load i32, i32* @x.385
  %5 = load i32, i32* @y.386
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store double* %0, double** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32* %2, i32** %14, align 8
  %17 = load i32*, i32** %14, align 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %15, align 4
  %19 = load i32, i32* %13, align 4
  store i32 %19, i32* %16, align 4
  %20 = load i32, i32* @x.385
  %21 = load i32, i32* @y.386
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %35, %originalBBpart2
  %29 = load i32, i32* %16, align 4
  %30 = icmp ugt i32 %29, 0
  br i1 %30, label %31, label %40

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* %15, align 4
  %33 = sitofp i32 %32 to double
  %34 = load double*, double** %12, align 8
  store double %33, double* %34, align 8
  br label %35

; <label>:35:                                     ; preds = %31
  %36 = load i32, i32* %16, align 4
  %37 = add i32 %36, -1
  store i32 %37, i32* %16, align 4
  %38 = load double*, double** %12, align 8
  %39 = getelementptr inbounds double, double* %38, i32 1
  store double* %39, double** %12, align 8
  br label %28

; <label>:40:                                     ; preds = %28
  %41 = load double*, double** %12, align 8
  ret double* %41

originalBBalteredBB:                              ; preds = %originalBB, %3
  %42 = alloca double*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32*, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  store double* %0, double** %42, align 8
  store i32 %1, i32* %43, align 4
  store i32* %2, i32** %44, align 8
  %47 = load i32*, i32** %44, align 8
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %45, align 4
  %49 = load i32, i32* %43, align 4
  store i32 %49, i32* %46, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9binder2ndISt12not_equal_toIdEEC2ERKS1_RKd(%"class.std::binder2nd"*, %"struct.std::not_equal_to"* dereferenceable(1), double* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.std::binder2nd"*, align 8
  %5 = alloca %"struct.std::not_equal_to"*, align 8
  %6 = alloca double*, align 8
  store %"class.std::binder2nd"* %0, %"class.std::binder2nd"** %4, align 8
  store %"struct.std::not_equal_to"* %1, %"struct.std::not_equal_to"** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.std::binder2nd"*, %"class.std::binder2nd"** %4, align 8
  %8 = bitcast %"class.std::binder2nd"* %7 to %"struct.std::unary_function"*
  %9 = getelementptr inbounds %"class.std::binder2nd", %"class.std::binder2nd"* %7, i32 0, i32 0
  %10 = load %"struct.std::not_equal_to"*, %"struct.std::not_equal_to"** %5, align 8
  %11 = getelementptr inbounds %"class.std::binder2nd", %"class.std::binder2nd"* %7, i32 0, i32 1
  %12 = load double*, double** %6, align 8
  %13 = load double, double* %12, align 8
  store double %13, double* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt10__count_ifIPdN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_T0_(double*, double*, double) #0 comdat {
  %4 = load i32, i32* @x.389
  %5 = load i32, i32* @y.390
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred", align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i64, align 8
  %16 = bitcast %"struct.__gnu_cxx::__ops::_Iter_pred"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to double*
  store double %2, double* %18, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  store i64 0, i64* %15, align 8
  %19 = load i32, i32* @x.389
  %20 = load i32, i32* @y.390
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %70, %originalBBpart2
  %28 = load i32, i32* @x.389
  %29 = load i32, i32* @y.390
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load double*, double** %13, align 8
  %37 = load double*, double** %14, align 8
  %38 = icmp ne double* %36, %37
  %39 = load i32, i32* @x.389
  %40 = load i32, i32* @y.390
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %73

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = load double*, double** %13, align 8
  %49 = call zeroext i1 @_ZN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEclIPdEEbT_(%"struct.__gnu_cxx::__ops::_Iter_pred"* %12, double* %48)
  br i1 %49, label %50, label %53

; <label>:50:                                     ; preds = %47
  %51 = load i64, i64* %15, align 8
  %52 = add nsw i64 %51, 1
  store i64 %52, i64* %15, align 8
  br label %53

; <label>:53:                                     ; preds = %50, %47
  %54 = load i32, i32* @x.389
  %55 = load i32, i32* @y.390
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load i32, i32* @x.389
  %63 = load i32, i32* @y.390
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %70

; <label>:70:                                     ; preds = %originalBBpart28
  %71 = load double*, double** %13, align 8
  %72 = getelementptr inbounds double, double* %71, i32 1
  store double* %72, double** %13, align 8
  br label %27

; <label>:73:                                     ; preds = %originalBBpart24
  %74 = load i64, i64* %15, align 8
  ret i64 %74

originalBBalteredBB:                              ; preds = %originalBB, %3
  %75 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred", align 8
  %76 = alloca double*, align 8
  %77 = alloca double*, align 8
  %78 = alloca i64, align 8
  %79 = bitcast %"struct.__gnu_cxx::__ops::_Iter_pred"* %75 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 8
  %81 = bitcast i8* %80 to double*
  store double %2, double* %81, align 8
  store double* %0, double** %76, align 8
  store double* %1, double** %77, align 8
  store i64 0, i64* %78, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %82 = load double*, double** %13, align 8
  %83 = load double*, double** %14, align 8
  %84 = icmp ne double* %82, %83
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr double @_ZN9__gnu_cxx5__ops11__pred_iterISt9binder2ndISt12not_equal_toIdEEEENS0_10_Iter_predIT_EES7_(double) #0 comdat {
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred", align 8
  %3 = alloca %"class.std::binder2nd", align 8
  %4 = alloca %"class.std::binder2nd", align 8
  %5 = bitcast %"class.std::binder2nd"* %3 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to double*
  store double %0, double* %7, align 8
  %8 = bitcast %"class.std::binder2nd"* %4 to i8*
  %9 = bitcast %"class.std::binder2nd"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"class.std::binder2nd"* %4 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to double*
  %13 = load double, double* %12, align 8
  call void @_ZN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_pred"* %2, double %13)
  %14 = bitcast %"struct.__gnu_cxx::__ops::_Iter_pred"* %2 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to double*
  %17 = load double, double* %16, align 8
  ret double %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEclIPdEEbT_(%"struct.__gnu_cxx::__ops::_Iter_pred"*, double*) #0 comdat align 2 {
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred"*, align 8
  %4 = alloca double*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_pred"* %0, %"struct.__gnu_cxx::__ops::_Iter_pred"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"struct.__gnu_cxx::__ops::_Iter_pred"*, %"struct.__gnu_cxx::__ops::_Iter_pred"** %3, align 8
  %6 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_pred", %"struct.__gnu_cxx::__ops::_Iter_pred"* %5, i32 0, i32 0
  %7 = load double*, double** %4, align 8
  %8 = call zeroext i1 @_ZNKSt9binder2ndISt12not_equal_toIdEEclERd(%"class.std::binder2nd"* %6, double* dereferenceable(8) %7)
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt9binder2ndISt12not_equal_toIdEEclERd(%"class.std::binder2nd"*, double* dereferenceable(8)) #0 comdat align 2 {
  %3 = load i32, i32* @x.395
  %4 = load i32, i32* @y.396
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::binder2nd"*, align 8
  %12 = alloca double*, align 8
  store %"class.std::binder2nd"* %0, %"class.std::binder2nd"** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load %"class.std::binder2nd"*, %"class.std::binder2nd"** %11, align 8
  %14 = getelementptr inbounds %"class.std::binder2nd", %"class.std::binder2nd"* %13, i32 0, i32 0
  %15 = load double*, double** %12, align 8
  %16 = getelementptr inbounds %"class.std::binder2nd", %"class.std::binder2nd"* %13, i32 0, i32 1
  %17 = call zeroext i1 @_ZNKSt12not_equal_toIdEclERKdS2_(%"struct.std::not_equal_to"* %14, double* dereferenceable(8) %15, double* dereferenceable(8) %16)
  %18 = load i32, i32* @x.395
  %19 = load i32, i32* @y.396
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %17

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %"class.std::binder2nd"*, align 8
  %27 = alloca double*, align 8
  store %"class.std::binder2nd"* %0, %"class.std::binder2nd"** %26, align 8
  store double* %1, double** %27, align 8
  %28 = load %"class.std::binder2nd"*, %"class.std::binder2nd"** %26, align 8
  %29 = getelementptr inbounds %"class.std::binder2nd", %"class.std::binder2nd"* %28, i32 0, i32 0
  %30 = load double*, double** %27, align 8
  %31 = getelementptr inbounds %"class.std::binder2nd", %"class.std::binder2nd"* %28, i32 0, i32 1
  %32 = call zeroext i1 @_ZNKSt12not_equal_toIdEclERKdS2_(%"struct.std::not_equal_to"* %29, double* dereferenceable(8) %30, double* dereferenceable(8) %31)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt12not_equal_toIdEclERKdS2_(%"struct.std::not_equal_to"*, double* dereferenceable(8), double* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca %"struct.std::not_equal_to"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store %"struct.std::not_equal_to"* %0, %"struct.std::not_equal_to"** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"struct.std::not_equal_to"*, %"struct.std::not_equal_to"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double, double* %8, align 8
  %10 = load double*, double** %6, align 8
  %11 = load double, double* %10, align 8
  %12 = fcmp une double %9, %11
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops10_Iter_predISt9binder2ndISt12not_equal_toIdEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_pred"*, double) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.399
  %4 = load i32, i32* @y.400
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::binder2nd", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred"*, align 8
  %13 = bitcast %"class.std::binder2nd"* %11 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to double*
  store double %1, double* %15, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_pred"* %0, %"struct.__gnu_cxx::__ops::_Iter_pred"** %12, align 8
  %16 = load %"struct.__gnu_cxx::__ops::_Iter_pred"*, %"struct.__gnu_cxx::__ops::_Iter_pred"** %12, align 8
  %17 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_pred", %"struct.__gnu_cxx::__ops::_Iter_pred"* %16, i32 0, i32 0
  %18 = bitcast %"class.std::binder2nd"* %17 to i8*
  %19 = bitcast %"class.std::binder2nd"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 16, i32 8, i1 false)
  %20 = load i32, i32* @x.399
  %21 = load i32, i32* @y.400
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"class.std::binder2nd", align 8
  %29 = alloca %"struct.__gnu_cxx::__ops::_Iter_pred"*, align 8
  %30 = bitcast %"class.std::binder2nd"* %28 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to double*
  store double %1, double* %32, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_pred"* %0, %"struct.__gnu_cxx::__ops::_Iter_pred"** %29, align 8
  %33 = load %"struct.__gnu_cxx::__ops::_Iter_pred"*, %"struct.__gnu_cxx::__ops::_Iter_pred"** %29, align 8
  %34 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_pred", %"struct.__gnu_cxx::__ops::_Iter_pred"* %33, i32 0, i32 0
  %35 = bitcast %"class.std::binder2nd"* %34 to i8*
  %36 = bitcast %"class.std::binder2nd"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  br label %originalBB
}

declare void @_ZN13ExceptionBase9SetFieldsEPKciS1_S1_S1_(%class.ExceptionBase*, i8*, i32, i8*, i8*, i8*) #1

declare i8* @__cxa_allocate_exception(i64)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12SparseMatrixIdE15ExcInvalidIndexC2ERKS1_(%"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"* dereferenceable(56)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  %4 = alloca %"class.SparseMatrix<double>::ExcInvalidIndex"*, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %0, %"class.SparseMatrix<double>::ExcInvalidIndex"** %3, align 8
  store %"class.SparseMatrix<double>::ExcInvalidIndex"* %1, %"class.SparseMatrix<double>::ExcInvalidIndex"** %4, align 8
  %5 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %3, align 8
  %6 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %5 to %class.ExceptionBase*
  %7 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %4, align 8
  %8 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %7 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2ERKS_(%class.ExceptionBase* %6, %class.ExceptionBase* dereferenceable(48) %8) #2
  %9 = bitcast %"class.SparseMatrix<double>::ExcInvalidIndex"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12SparseMatrixIdE15ExcInvalidIndexE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %5, i32 0, i32 1
  %11 = load %"class.SparseMatrix<double>::ExcInvalidIndex"*, %"class.SparseMatrix<double>::ExcInvalidIndex"** %4, align 8
  %12 = getelementptr inbounds %"class.SparseMatrix<double>::ExcInvalidIndex", %"class.SparseMatrix<double>::ExcInvalidIndex"* %11, i32 0, i32 1
  %13 = bitcast i32* %10 to i8*
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  ret void
}

declare void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN13ExceptionBaseC2ERKS_(%class.ExceptionBase*, %class.ExceptionBase* dereferenceable(48)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %class.ExceptionBase*, align 8
  %4 = alloca %class.ExceptionBase*, align 8
  store %class.ExceptionBase* %0, %class.ExceptionBase** %3, align 8
  store %class.ExceptionBase* %1, %class.ExceptionBase** %4, align 8
  %5 = load %class.ExceptionBase*, %class.ExceptionBase** %3, align 8
  %6 = bitcast %class.ExceptionBase* %5 to %"class.std::exception"*
  %7 = load %class.ExceptionBase*, %class.ExceptionBase** %4, align 8
  %8 = bitcast %class.ExceptionBase* %7 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2ERKS_(%"class.std::exception"* %6, %"class.std::exception"* dereferenceable(8) %8) #2
  %9 = bitcast %class.ExceptionBase* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV13ExceptionBase, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.ExceptionBase, %class.ExceptionBase* %5, i32 0, i32 1
  %11 = load %class.ExceptionBase*, %class.ExceptionBase** %4, align 8
  %12 = getelementptr inbounds %class.ExceptionBase, %class.ExceptionBase* %11, i32 0, i32 1
  %13 = bitcast i8** %10 to i8*
  %14 = bitcast i8** %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 40, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9exceptionC2ERKS_(%"class.std::exception"*, %"class.std::exception"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.405
  %4 = load i32, i32* @y.406
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::exception"*, align 8
  %12 = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %0, %"class.std::exception"** %11, align 8
  store %"class.std::exception"* %1, %"class.std::exception"** %12, align 8
  %13 = load %"class.std::exception"*, %"class.std::exception"** %11, align 8
  %14 = bitcast %"class.std::exception"* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = load i32, i32* @x.405
  %16 = load i32, i32* @y.406
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.std::exception"*, align 8
  %24 = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %0, %"class.std::exception"** %23, align 8
  store %"class.std::exception"* %1, %"class.std::exception"** %24, align 8
  %25 = load %"class.std::exception"*, %"class.std::exception"** %23, align 8
  %26 = bitcast %"class.std::exception"* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %26, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6VectorIdE6reinitEjb(%class.Vector*, i32, i1 zeroext) #0 comdat align 2 {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %class.Vector* %0, %class.Vector** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  %8 = load %class.Vector*, %class.Vector** %4, align 8
  %9 = load i32, i32* %5, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %42

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %13 = load double*, double** %12, align 8
  %14 = icmp ne double* %13, null
  br i1 %14, label %15, label %38

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.407
  %17 = load i32, i32* @y.408
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %25 = load double*, double** %24, align 8
  %26 = icmp eq double* %25, null
  %27 = load i32, i32* @x.407
  %28 = load i32, i32* @y.408
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %37, label %35

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = bitcast double* %25 to i8*
  call void @_ZdaPv(i8* %36) #12
  br label %37

; <label>:37:                                     ; preds = %35, %originalBBpart2
  br label %38

; <label>:38:                                     ; preds = %37, %11
  %39 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* null, double** %39, align 8
  %40 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 1
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 0, i32* %41, align 4
  br label %143

; <label>:42:                                     ; preds = %3
  %43 = load i32, i32* %5, align 4
  %44 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %43, %45
  br i1 %46, label %47, label %118

; <label>:47:                                     ; preds = %42
  %48 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %49 = load double*, double** %48, align 8
  %50 = icmp ne double* %49, null
  br i1 %50, label %51, label %90

; <label>:51:                                     ; preds = %47
  %52 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %53 = load double*, double** %52, align 8
  %54 = icmp eq double* %53, null
  br i1 %54, label %73, label %55

; <label>:55:                                     ; preds = %51
  %56 = load i32, i32* @x.407
  %57 = load i32, i32* @y.408
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %55, %originalBB1alteredBB
  %64 = bitcast double* %53 to i8*
  call void @_ZdaPv(i8* %64) #12
  %65 = load i32, i32* @x.407
  %66 = load i32, i32* @y.408
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %73

; <label>:73:                                     ; preds = %originalBBpart24, %51
  %74 = load i32, i32* @x.407
  %75 = load i32, i32* @y.408
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = load i32, i32* @x.407
  %83 = load i32, i32* @y.408
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %90

; <label>:90:                                     ; preds = %originalBBpart28, %47
  %91 = load i32, i32* @x.407
  %92 = load i32, i32* @y.408
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %90, %originalBB10alteredBB
  %99 = load i32, i32* %5, align 4
  %100 = zext i32 %99 to i64
  %101 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %100, i64 8)
  %102 = extractvalue { i64, i1 } %101, 1
  %103 = extractvalue { i64, i1 } %101, 0
  %104 = select i1 %102, i64 -1, i64 %103
  %105 = call i8* @_Znam(i64 %104) #13
  %106 = bitcast i8* %105 to double*
  %107 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* %106, double** %107, align 8
  %108 = load i32, i32* %5, align 4
  %109 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 %108, i32* %109, align 4
  %110 = load i32, i32* @x.407
  %111 = load i32, i32* @y.408
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %118

; <label>:118:                                    ; preds = %originalBBpart212, %42
  %119 = load i32, i32* %5, align 4
  %120 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 1
  store i32 %119, i32* %120, align 8
  %121 = load i8, i8* %6, align 1
  %122 = trunc i8 %121 to i1
  %123 = zext i1 %122 to i32
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %143

; <label>:125:                                    ; preds = %118
  %126 = load i32, i32* @x.407
  %127 = load i32, i32* @y.408
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %125, %originalBB14alteredBB
  %134 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector* %8, double 0.000000e+00)
  %135 = load i32, i32* @x.407
  %136 = load i32, i32* @y.408
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %143

; <label>:143:                                    ; preds = %originalBBpart216, %118, %38
  %144 = load i32, i32* @x.407
  %145 = load i32, i32* @y.408
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %143, %originalBB18alteredBB
  %152 = load i32, i32* @x.407
  %153 = load i32, i32* @y.408
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %15
  %160 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %161 = load double*, double** %160, align 8
  %162 = icmp eq double* %161, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %163 = bitcast double* %53 to i8*
  call void @_ZdaPv(i8* %163) #12
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %164 = load i32, i32* %5, align 4
  %165 = zext i32 %164 to i64
  %166 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %165, i64 8)
  %167 = extractvalue { i64, i1 } %166, 1
  %168 = extractvalue { i64, i1 } %166, 0
  %169 = select i1 %167, i64 -1, i64 %168
  %170 = call i8* @_Znam(i64 %169) #13
  %171 = bitcast i8* %170 to double*
  %172 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* %171, double** %172, align 8
  %173 = load i32, i32* %5, align 4
  %174 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 %173, i32* %174, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %125
  %175 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector* %8, double 0.000000e+00)
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %143
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6VectorIdED0Ev(%class.Vector*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Vector*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.Vector* %0, %class.Vector** %2, align 8
  %5 = load %class.Vector*, %class.Vector** %2, align 8
  invoke void @_ZN6VectorIdED2Ev(%class.Vector* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.Vector* %5 to i8*
  call void @_ZdlPv(i8* %7) #12
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.409
  %10 = load i32, i32* @y.410
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %class.Vector* %5 to i8*
  call void @_ZdlPv(i8* %20) #12
  %21 = load i32, i32* @x.409
  %22 = load i32, i32* @y.410
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %class.Vector* %5 to i8*
  call void @_ZdlPv(i8* %37) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9internals21SparseMatrixIterators8AccessorIdLb1EEC2EPK12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Accessor"*, %class.SparseMatrix*, i32, i32) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.internals::SparseMatrixIterators::Accessor"*, align 8
  %6 = alloca %class.SparseMatrix*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %"class.internals::SparseMatrixIterators::Accessor"* %0, %"class.internals::SparseMatrixIterators::Accessor"** %5, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %"class.internals::SparseMatrixIterators::Accessor"*, %"class.internals::SparseMatrixIterators::Accessor"** %5, align 8
  %10 = bitcast %"class.internals::SparseMatrixIterators::Accessor"* %9 to %"class.internals::SparsityPatternIterators::Accessor"*
  %11 = load %class.SparseMatrix*, %class.SparseMatrix** %6, align 8
  %12 = call dereferenceable(72) %class.SparsityPattern* @_ZNK12SparseMatrixIdE20get_sparsity_patternEv(%class.SparseMatrix* %11)
  %13 = load i32, i32* %7, align 4
  %14 = load i32, i32* %8, align 4
  call void @_ZN9internals24SparsityPatternIterators8AccessorC2EPK15SparsityPatternjj(%"class.internals::SparsityPatternIterators::Accessor"* %10, %class.SparsityPattern* %12, i32 %13, i32 %14)
  %15 = getelementptr inbounds %"class.internals::SparseMatrixIterators::Accessor", %"class.internals::SparseMatrixIterators::Accessor"* %9, i32 0, i32 1
  %16 = load %class.SparseMatrix*, %class.SparseMatrix** %6, align 8
  store %class.SparseMatrix* %16, %class.SparseMatrix** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9internals24SparsityPatternIterators8AccessorC2EPK15SparsityPatternjj(%"class.internals::SparsityPatternIterators::Accessor"*, %class.SparsityPattern*, i32, i32) unnamed_addr #5 comdat align 2 {
  %5 = alloca %"class.internals::SparsityPatternIterators::Accessor"*, align 8
  %6 = alloca %class.SparsityPattern*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %"class.internals::SparsityPatternIterators::Accessor"* %0, %"class.internals::SparsityPatternIterators::Accessor"** %5, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %"class.internals::SparsityPatternIterators::Accessor"*, %"class.internals::SparsityPatternIterators::Accessor"** %5, align 8
  %10 = getelementptr inbounds %"class.internals::SparsityPatternIterators::Accessor", %"class.internals::SparsityPatternIterators::Accessor"* %9, i32 0, i32 0
  %11 = load %class.SparsityPattern*, %class.SparsityPattern** %6, align 8
  store %class.SparsityPattern* %11, %class.SparsityPattern** %10, align 8
  %12 = getelementptr inbounds %"class.internals::SparsityPatternIterators::Accessor", %"class.internals::SparsityPatternIterators::Accessor"* %9, i32 0, i32 1
  %13 = load i32, i32* %7, align 4
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %"class.internals::SparsityPatternIterators::Accessor", %"class.internals::SparsityPatternIterators::Accessor"* %9, i32 0, i32 2
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %14, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9internals21SparseMatrixIterators8AccessorIdLb0EEC2EP12SparseMatrixIdEjj(%"class.internals::SparseMatrixIterators::Accessor.1"*, %class.SparseMatrix*, i32, i32) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.internals::SparseMatrixIterators::Accessor.1"*, align 8
  %6 = alloca %class.SparseMatrix*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %"class.internals::SparseMatrixIterators::Accessor.1"* %0, %"class.internals::SparseMatrixIterators::Accessor.1"** %5, align 8
  store %class.SparseMatrix* %1, %class.SparseMatrix** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %"class.internals::SparseMatrixIterators::Accessor.1"*, %"class.internals::SparseMatrixIterators::Accessor.1"** %5, align 8
  %10 = bitcast %"class.internals::SparseMatrixIterators::Accessor.1"* %9 to %"class.internals::SparsityPatternIterators::Accessor"*
  %11 = load %class.SparseMatrix*, %class.SparseMatrix** %6, align 8
  %12 = call dereferenceable(72) %class.SparsityPattern* @_ZNK12SparseMatrixIdE20get_sparsity_patternEv(%class.SparseMatrix* %11)
  %13 = load i32, i32* %7, align 4
  %14 = load i32, i32* %8, align 4
  call void @_ZN9internals24SparsityPatternIterators8AccessorC2EPK15SparsityPatternjj(%"class.internals::SparsityPatternIterators::Accessor"* %10, %class.SparsityPattern* %12, i32 %13, i32 %14)
  %15 = getelementptr inbounds %"class.internals::SparseMatrixIterators::Accessor.1", %"class.internals::SparseMatrixIterators::Accessor.1"* %9, i32 0, i32 1
  %16 = load %class.SparseMatrix*, %class.SparseMatrix** %6, align 8
  store %class.SparseMatrix* %16, %class.SparseMatrix** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN18StandardExceptions5ExcIOC2ERKS0_(%"class.StandardExceptions::ExcIO"*, %"class.StandardExceptions::ExcIO"* dereferenceable(48)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.StandardExceptions::ExcIO"*, align 8
  %4 = alloca %"class.StandardExceptions::ExcIO"*, align 8
  store %"class.StandardExceptions::ExcIO"* %0, %"class.StandardExceptions::ExcIO"** %3, align 8
  store %"class.StandardExceptions::ExcIO"* %1, %"class.StandardExceptions::ExcIO"** %4, align 8
  %5 = load %"class.StandardExceptions::ExcIO"*, %"class.StandardExceptions::ExcIO"** %3, align 8
  %6 = bitcast %"class.StandardExceptions::ExcIO"* %5 to %class.ExceptionBase*
  %7 = load %"class.StandardExceptions::ExcIO"*, %"class.StandardExceptions::ExcIO"** %4, align 8
  %8 = bitcast %"class.StandardExceptions::ExcIO"* %7 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2ERKS_(%class.ExceptionBase* %6, %class.ExceptionBase* dereferenceable(48) %8) #2
  %9 = bitcast %"class.StandardExceptions::ExcIO"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18StandardExceptions5ExcIOE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EPfPdET1_T0_S3_S2_(float*, float*, double*) #0 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca double*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %7)
  %9 = load float*, float** %5, align 8
  %10 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt13__copy_move_aILb0EPfPdET1_T0_S3_S2_(float* %8, float* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__miter_baseIPfET_S1_(float*) #5 comdat {
  %2 = alloca float*, align 8
  store float* %0, float** %2, align 8
  %3 = load float*, float** %2, align 8
  ret float* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPfPdET1_T0_S3_S2_(float*, float*, double*) #0 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store double* %2, double** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load float*, float** %4, align 8
  %9 = load float*, float** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPfPdEET0_T_S6_S5_(float* %8, float* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__niter_baseIPfET_S1_(float*) #5 comdat {
  %2 = load i32, i32* @x.425
  %3 = load i32, i32* @y.426
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca float*, align 8
  store float* %0, float** %10, align 8
  %11 = load float*, float** %10, align 8
  %12 = load i32, i32* @x.425
  %13 = load i32, i32* @y.426
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca float*, align 8
  store float* %0, float** %20, align 8
  %21 = load float*, float** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPfPdEET0_T_S6_S5_(float*, float*, double*) #5 comdat align 2 {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load float*, float** %5, align 8
  %9 = load float*, float** %4, align 8
  %10 = ptrtoint float* %8 to i64
  %11 = ptrtoint float* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  br label %14

; <label>:14:                                     ; preds = %42, %3
  %15 = load i32, i32* @x.427
  %16 = load i32, i32* @y.428
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i64, i64* %7, align 8
  %24 = icmp sgt i64 %23, 0
  %25 = load i32, i32* @x.427
  %26 = load i32, i32* @y.428
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %45

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load float*, float** %4, align 8
  %35 = load float, float* %34, align 4
  %36 = fpext float %35 to double
  %37 = load double*, double** %6, align 8
  store double %36, double* %37, align 8
  %38 = load float*, float** %4, align 8
  %39 = getelementptr inbounds float, float* %38, i32 1
  store float* %39, float** %4, align 8
  %40 = load double*, double** %6, align 8
  %41 = getelementptr inbounds double, double* %40, i32 1
  store double* %41, double** %6, align 8
  br label %42

; <label>:42:                                     ; preds = %33
  %43 = load i64, i64* %7, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %7, align 8
  br label %14

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load double*, double** %6, align 8
  ret double* %46

originalBBalteredBB:                              ; preds = %originalBB, %14
  %47 = load i64, i64* %7, align 8
  %48 = icmp sgt i64 %47, 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK5TableILi2EfE6n_rowsEv(%class.Table*) #0 comdat align 2 {
  %2 = load i32, i32* @x.429
  %3 = load i32, i32* @y.430
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %10, align 8
  %11 = load %class.Table*, %class.Table** %10, align 8
  %12 = bitcast %class.Table* %11 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 0)
  %16 = load i32, i32* @x.429
  %17 = load i32, i32* @y.430
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %15

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %24, align 8
  %25 = load %class.Table*, %class.Table** %24, align 8
  %26 = bitcast %class.Table* %25 to %class.TableBase*
  %27 = getelementptr inbounds %class.TableBase, %class.TableBase* %26, i32 0, i32 3
  %28 = bitcast %class.TableIndices* %27 to %class.TableIndicesBase*
  %29 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %28, i32 0)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #5 comdat align 2 {
  %3 = load i32, i32* @x.431
  %4 = load i32, i32* @y.432
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TableIndicesBase*, align 8
  %12 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.TableIndicesBase*, %class.TableIndicesBase** %11, align 8
  %14 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @x.431
  %20 = load i32, i32* @y.432
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.TableIndicesBase*, align 8
  %28 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.TableIndicesBase*, %class.TableIndicesBase** %27, align 8
  %30 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %29, i32 0, i32 0
  %31 = load i32, i32* %28, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %30, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2EfE6n_colsEv(%class.Table*) #5 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  %5 = getelementptr inbounds %class.TableBase, %class.TableBase* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.435
  %5 = load i32, i32* @y.436
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %15)
  %17 = load double*, double** %13, align 8
  %18 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %17)
  %19 = load double*, double** %14, align 8
  %20 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %19)
  %21 = call double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double* %16, double* %18, double* %20)
  %22 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %14, double* %21)
  %23 = load i32, i32* @x.435
  %24 = load i32, i32* @y.436
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %22

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca double*, align 8
  %32 = alloca double*, align 8
  %33 = alloca double*, align 8
  store double* %0, double** %31, align 8
  store double* %1, double** %32, align 8
  store double* %2, double** %33, align 8
  %34 = load double*, double** %31, align 8
  %35 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %34)
  %36 = load double*, double** %32, align 8
  %37 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %36)
  %38 = load double*, double** %33, align 8
  %39 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %38)
  %40 = call double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double* %35, double* %37, double* %39)
  %41 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %33, double* %40)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIPdET_S1_(double*) #5 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.439
  %5 = load i32, i32* @y.440
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i8, align 1
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load double*, double** %12, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %16, double* %17, double* %18)
  %20 = load i32, i32* @x.439
  %21 = load i32, i32* @y.440
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca i8, align 1
  store double* %0, double** %28, align 8
  store double* %1, double** %29, align 8
  store double* %2, double** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load double*, double** %28, align 8
  %33 = load double*, double** %29, align 8
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %32, double* %33, double* %34)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #5 comdat align 2 {
  %4 = load i32, i32* @x.441
  %5 = load i32, i32* @y.442
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i64, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %16 = load double*, double** %13, align 8
  %17 = load double*, double** %12, align 8
  %18 = ptrtoint double* %16 to i64
  %19 = ptrtoint double* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = icmp ne i64 %22, 0
  %24 = load i32, i32* @x.441
  %25 = load i32, i32* @y.442
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %55

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* @x.441
  %34 = load i32, i32* @y.442
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %32, %originalBB14alteredBB
  %41 = load double*, double** %14, align 8
  %42 = bitcast double* %41 to i8*
  %43 = load double*, double** %12, align 8
  %44 = bitcast double* %43 to i8*
  %45 = load i64, i64* %15, align 8
  %46 = mul i64 8, %45
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %42, i8* %44, i64 %46, i32 8, i1 false)
  %47 = load i32, i32* @x.441
  %48 = load i32, i32* @y.442
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %55

; <label>:55:                                     ; preds = %originalBBpart216, %originalBBpart2
  %56 = load i32, i32* @x.441
  %57 = load i32, i32* @y.442
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %55, %originalBB18alteredBB
  %64 = load double*, double** %14, align 8
  %65 = load i64, i64* %15, align 8
  %66 = getelementptr inbounds double, double* %64, i64 %65
  %67 = load i32, i32* @x.441
  %68 = load i32, i32* @y.442
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret double* %66

originalBBalteredBB:                              ; preds = %originalBB, %3
  %75 = alloca double*, align 8
  %76 = alloca double*, align 8
  %77 = alloca double*, align 8
  %78 = alloca i64, align 8
  store double* %0, double** %75, align 8
  store double* %1, double** %76, align 8
  store double* %2, double** %77, align 8
  %79 = load double*, double** %76, align 8
  %80 = load double*, double** %75, align 8
  %81 = ptrtoint double* %79 to i64
  %82 = ptrtoint double* %80 to i64
  %_ = sub i64 0, %81
  %gen = add i64 %_, %82
  %_1 = shl i64 %81, %82
  %_2 = shl i64 %81, %82
  %83 = sub i64 %81, %82
  %_3 = sub i64 %83, 8
  %gen4 = mul i64 %_3, 8
  %_5 = sub i64 0, %83
  %gen6 = add i64 %_5, 8
  %_7 = sub i64 0, %83
  %gen8 = add i64 %_7, 8
  %_9 = shl i64 %83, 8
  %_10 = sub i64 %83, 8
  %gen11 = mul i64 %_10, 8
  %_12 = shl i64 %83, 8
  %_13 = shl i64 %83, 8
  %84 = sdiv exact i64 %83, 8
  store i64 %84, i64* %78, align 8
  %85 = load i64, i64* %78, align 8
  %86 = icmp ne i64 %85, 0
  br label %originalBB

originalBB14alteredBB:                            ; preds = %originalBB14, %32
  %87 = load double*, double** %14, align 8
  %88 = bitcast double* %87 to i8*
  %89 = load double*, double** %12, align 8
  %90 = bitcast double* %89 to i8*
  %91 = load i64, i64* %15, align 8
  %92 = mul i64 8, %91
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %88, i8* %90, i64 %92, i32 8, i1 false)
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %55
  %93 = load double*, double** %14, align 8
  %94 = load i64, i64* %15, align 8
  %95 = getelementptr inbounds double, double* %93, i64 %94
  br label %originalBB18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2EdE6n_rowsEv(%class.Table.5*) #5 comdat align 2 {
  %2 = load i32, i32* @x.443
  %3 = load i32, i32* @y.444
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table.5*, align 8
  store %class.Table.5* %0, %class.Table.5** %10, align 8
  %11 = load %class.Table.5*, %class.Table.5** %10, align 8
  %12 = bitcast %class.Table.5* %11 to %class.TableBase.6*
  %13 = getelementptr inbounds %class.TableBase.6, %class.TableBase.6* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 0)
  %16 = load i32, i32* @x.443
  %17 = load i32, i32* @y.444
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %15

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %class.Table.5*, align 8
  store %class.Table.5* %0, %class.Table.5** %24, align 8
  %25 = load %class.Table.5*, %class.Table.5** %24, align 8
  %26 = bitcast %class.Table.5* %25 to %class.TableBase.6*
  %27 = getelementptr inbounds %class.TableBase.6, %class.TableBase.6* %26, i32 0, i32 3
  %28 = bitcast %class.TableIndices* %27 to %class.TableIndicesBase*
  %29 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %28, i32 0)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table.5*) #5 comdat align 2 {
  %2 = alloca %class.Table.5*, align 8
  store %class.Table.5* %0, %class.Table.5** %2, align 8
  %3 = load %class.Table.5*, %class.Table.5** %2, align 8
  %4 = bitcast %class.Table.5* %3 to %class.TableBase.6*
  %5 = getelementptr inbounds %class.TableBase.6, %class.TableBase.6* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPffEvT_S1_RKT0_(float*, float*, float* dereferenceable(4)) #0 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %7)
  %9 = load float*, float** %5, align 8
  %10 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %9)
  %11 = load float*, float** %6, align 8
  call void @_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(float* %8, float* %10, float* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZN6VectorIfE3endEv(%class.Vector.10*) #5 comdat align 2 {
  %2 = load i32, i32* @x.449
  %3 = load i32, i32* @y.450
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector.10*, align 8
  store %class.Vector.10* %0, %class.Vector.10** %10, align 8
  %11 = load %class.Vector.10*, %class.Vector.10** %10, align 8
  %12 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %11, i32 0, i32 3
  %13 = load float*, float** %12, align 8
  %14 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds float, float* %13, i64 %16
  %18 = load i32, i32* @x.449
  %19 = load i32, i32* @y.450
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float* %17

originalBBalteredBB:                              ; preds = %originalBB, %1
  %26 = alloca %class.Vector.10*, align 8
  store %class.Vector.10* %0, %class.Vector.10** %26, align 8
  %27 = load %class.Vector.10*, %class.Vector.10** %26, align 8
  %28 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %27, i32 0, i32 3
  %29 = load float*, float** %28, align 8
  %30 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %29, i64 %32
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(float*, float*, float* dereferenceable(4)) #5 comdat {
  %4 = load i32, i32* @x.451
  %5 = load i32, i32* @y.452
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca float*, align 8
  %15 = alloca float, align 4
  store float* %0, float** %12, align 8
  store float* %1, float** %13, align 8
  store float* %2, float** %14, align 8
  %16 = load float*, float** %14, align 8
  %17 = load float, float* %16, align 4
  store float %17, float* %15, align 4
  %18 = load i32, i32* @x.451
  %19 = load i32, i32* @y.452
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %49, %originalBBpart2
  %27 = load float*, float** %12, align 8
  %28 = load float*, float** %13, align 8
  %29 = icmp ne float* %27, %28
  br i1 %29, label %30, label %52

; <label>:30:                                     ; preds = %26
  %31 = load i32, i32* @x.451
  %32 = load i32, i32* @y.452
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load float, float* %15, align 4
  %40 = load float*, float** %12, align 8
  store float %39, float* %40, align 4
  %41 = load i32, i32* @x.451
  %42 = load i32, i32* @y.452
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load float*, float** %12, align 8
  %51 = getelementptr inbounds float, float* %50, i32 1
  store float* %51, float** %12, align 8
  br label %26

; <label>:52:                                     ; preds = %26
  %53 = load i32, i32* @x.451
  %54 = load i32, i32* @y.452
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i32, i32* @x.451
  %62 = load i32, i32* @y.452
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %69 = alloca float*, align 8
  %70 = alloca float*, align 8
  %71 = alloca float*, align 8
  %72 = alloca float, align 4
  store float* %0, float** %69, align 8
  store float* %1, float** %70, align 8
  store float* %2, float** %71, align 8
  %73 = load float*, float** %71, align 8
  %74 = load float, float* %73, align 4
  store float %74, float* %72, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %75 = load float, float* %15, align 4
  %76 = load float*, float** %12, align 8
  store float %75, float* %76, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.453
  %4 = load i32, i32* @y.454
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::pair", align 4
  %12 = alloca %class.BlockIndices*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %12, align 8
  store i32 %1, i32* %13, align 4
  %15 = load %class.BlockIndices*, %class.BlockIndices** %12, align 8
  %16 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sub i32 %17, 1
  store i32 %18, i32* %14, align 4
  %19 = load i32, i32* @x.453
  %20 = load i32, i32* @y.454
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %51, %originalBBpart2
  %28 = load i32, i32* @x.453
  %29 = load i32, i32* @y.454
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %27, %originalBB8alteredBB
  %36 = load i32, i32* %13, align 4
  %37 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 1
  %38 = load i32, i32* %14, align 4
  %39 = sext i32 %38 to i64
  %40 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %37, i64 %39)
  %41 = load i32, i32* %40, align 4
  %42 = icmp ult i32 %36, %41
  %43 = load i32, i32* @x.453
  %44 = load i32, i32* @y.454
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br i1 %42, label %51, label %54

; <label>:51:                                     ; preds = %originalBBpart210
  %52 = load i32, i32* %14, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %14, align 4
  br label %27

; <label>:54:                                     ; preds = %originalBBpart210
  %55 = load i32, i32* %14, align 4
  %56 = load i32, i32* %13, align 4
  %57 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 1
  %58 = load i32, i32* %14, align 4
  %59 = sext i32 %58 to i64
  %60 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %57, i64 %59)
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %56, %61
  %63 = call i64 @_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_(i32 %55, i32 %62)
  %64 = bitcast %"struct.std::pair"* %11 to i64*
  store i64 %63, i64* %64, align 4
  %65 = bitcast %"struct.std::pair"* %11 to i64*
  %66 = load i64, i64* %65, align 4
  ret i64 %66

originalBBalteredBB:                              ; preds = %originalBB, %2
  %67 = alloca %"struct.std::pair", align 4
  %68 = alloca %class.BlockIndices*, align 8
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %68, align 8
  store i32 %1, i32* %69, align 4
  %71 = load %class.BlockIndices*, %class.BlockIndices** %68, align 8
  %72 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %_ = sub i32 0, %73
  %gen = add i32 %_, 1
  %_1 = shl i32 %73, 1
  %_2 = sub i32 0, %73
  %gen3 = add i32 %_2, 1
  %_4 = sub i32 %73, 1
  %gen5 = mul i32 %_4, 1
  %_6 = sub i32 %73, 1
  %gen7 = mul i32 %_6, 1
  %74 = sub i32 %73, 1
  store i32 %74, i32* %70, align 4
  br label %originalBB

originalBB8alteredBB:                             ; preds = %originalBB8, %27
  %75 = load i32, i32* %13, align 4
  %76 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 1
  %77 = load i32, i32* %14, align 4
  %78 = sext i32 %77 to i64
  %79 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.11"* %76, i64 %78)
  %80 = load i32, i32* %79, align 4
  %81 = icmp ult i32 %75, %80
  br label %originalBB8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector.10* @_ZNKSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Vector.10*, %class.Vector.10** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %10, i64 %11
  ret %class.Vector.10* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_(i32, i32) #0 comdat {
  %3 = load i32, i32* @x.457
  %4 = load i32, i32* @y.458
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::pair", align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %12, align 4
  store i32 %1, i32* %13, align 4
  call void @_ZNSt4pairIjjEC2ERKjS2_(%"struct.std::pair"* %11, i32* dereferenceable(4) %12, i32* dereferenceable(4) %13)
  %14 = bitcast %"struct.std::pair"* %11 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = load i32, i32* @x.457
  %17 = load i32, i32* @y.458
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %15

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"struct.std::pair", align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i32 %0, i32* %25, align 4
  store i32 %1, i32* %26, align 4
  call void @_ZNSt4pairIjjEC2ERKjS2_(%"struct.std::pair"* %24, i32* dereferenceable(4) %25, i32* dereferenceable(4) %26)
  %27 = bitcast %"struct.std::pair"* %24 to i64*
  %28 = load i64, i64* %27, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIjjEC2ERKjS2_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = bitcast %"struct.std::pair"* %7 to %"class.std::__pair_base"*
  %9 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %10 = load i32*, i32** %5, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EEC2ERKS2_(%"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.internal::BlockVectorIterators::Iterator"*, align 8
  %4 = alloca %"class.internal::BlockVectorIterators::Iterator"*, align 8
  store %"class.internal::BlockVectorIterators::Iterator"* %0, %"class.internal::BlockVectorIterators::Iterator"** %3, align 8
  store %"class.internal::BlockVectorIterators::Iterator"* %1, %"class.internal::BlockVectorIterators::Iterator"** %4, align 8
  %5 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %3, align 8
  %6 = bitcast %"class.internal::BlockVectorIterators::Iterator"* %5 to %"struct.std::iterator"*
  %7 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %5, i32 0, i32 0
  %8 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %4, align 8
  %9 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %8, i32 0, i32 0
  %10 = load %class.BlockVector*, %class.BlockVector** %9, align 8
  store %class.BlockVector* %10, %class.BlockVector** %7, align 8
  %11 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %5, i32 0, i32 1
  %12 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %4, align 8
  %13 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %11, align 8
  %15 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %5, i32 0, i32 2
  %16 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %4, align 8
  %17 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %15, align 4
  %19 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %5, i32 0, i32 3
  %20 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %4, align 8
  %21 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %19, align 8
  %23 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %5, i32 0, i32 4
  %24 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %4, align 8
  %25 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %23, align 4
  %27 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %5, i32 0, i32 5
  %28 = load %"class.internal::BlockVectorIterators::Iterator"*, %"class.internal::BlockVectorIterators::Iterator"** %4, align 8
  %29 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator", %"class.internal::BlockVectorIterators::Iterator"* %28, i32 0, i32 5
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %27, align 8
  ret void
}

declare void @_ZN8internal20BlockVectorIterators8IteratorIfLb0EE12move_forwardEv(%"class.internal::BlockVectorIterators::Iterator"*) #1

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector.10* @_ZN11BlockVectorIfE5blockEj(%class.BlockVector*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.463
  %4 = load i32, i32* @y.464
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.BlockVector*, align 8
  %12 = alloca i32, align 4
  store %class.BlockVector* %0, %class.BlockVector** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.BlockVector*, %class.BlockVector** %11, align 8
  %14 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = call dereferenceable(24) %class.Vector.10* @_ZNSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector"* %14, i64 %16)
  %18 = load i32, i32* @x.463
  %19 = load i32, i32* @y.464
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector.10* %17

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %class.BlockVector*, align 8
  %27 = alloca i32, align 4
  store %class.BlockVector* %0, %class.BlockVector** %26, align 8
  store i32 %1, i32* %27, align 4
  %28 = load %class.BlockVector*, %class.BlockVector** %26, align 8
  %29 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %28, i32 0, i32 0
  %30 = load i32, i32* %27, align 4
  %31 = zext i32 %30 to i64
  %32 = call dereferenceable(24) %class.Vector.10* @_ZNSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector"* %29, i64 %31)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector.10* @_ZNSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Vector.10*, %class.Vector.10** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Vector.10, %class.Vector.10* %10, i64 %11
  ret %class.Vector.10* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPddEvT_S1_RKT0_(double*, double*, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  call void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double* %8, double* %10, double* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZN6VectorIdE3endEv(%class.Vector*) #5 comdat align 2 {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  %4 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 3
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds double, double* %5, i64 %8
  ret double* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double*, double*, double* dereferenceable(8)) #5 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %6, align 8
  %9 = load double, double* %8, align 8
  store double %9, double* %7, align 8
  br label %10

; <label>:10:                                     ; preds = %17, %3
  %11 = load double*, double** %4, align 8
  %12 = load double*, double** %5, align 8
  %13 = icmp ne double* %11, %12
  br i1 %13, label %14, label %20

; <label>:14:                                     ; preds = %10
  %15 = load double, double* %7, align 8
  %16 = load double*, double** %4, align 8
  store double %15, double* %16, align 8
  br label %17

; <label>:17:                                     ; preds = %14
  %18 = load double*, double** %4, align 8
  %19 = getelementptr inbounds double, double* %18, i32 1
  store double* %19, double** %4, align 8
  br label %10

; <label>:20:                                     ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZNKSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.17"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.17"*, %"class.std::vector.17"** %3, align 8
  %6 = bitcast %"class.std::vector.17"* %5 to %"struct.std::_Vector_base.18"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Vector*, %class.Vector** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %10, i64 %11
  ret %class.Vector* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EEC2ERKS2_(%"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.475
  %4 = load i32, i32* @y.476
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  %12 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  store %"class.internal::BlockVectorIterators::Iterator.23"* %0, %"class.internal::BlockVectorIterators::Iterator.23"** %11, align 8
  store %"class.internal::BlockVectorIterators::Iterator.23"* %1, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  %13 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %11, align 8
  %14 = bitcast %"class.internal::BlockVectorIterators::Iterator.23"* %13 to %"struct.std::iterator.24"*
  %15 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %13, i32 0, i32 0
  %16 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  %17 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %16, i32 0, i32 0
  %18 = load %class.BlockVector.16*, %class.BlockVector.16** %17, align 8
  store %class.BlockVector.16* %18, %class.BlockVector.16** %15, align 8
  %19 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %13, i32 0, i32 1
  %20 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  %21 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %19, align 8
  %23 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %13, i32 0, i32 2
  %24 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  %25 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %23, align 4
  %27 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %13, i32 0, i32 3
  %28 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  %29 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %27, align 8
  %31 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %13, i32 0, i32 4
  %32 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  %33 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %32, i32 0, i32 4
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %31, align 4
  %35 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %13, i32 0, i32 5
  %36 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %12, align 8
  %37 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %36, i32 0, i32 5
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %35, align 8
  %39 = load i32, i32* @x.475
  %40 = load i32, i32* @y.476
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %47 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  %48 = alloca %"class.internal::BlockVectorIterators::Iterator.23"*, align 8
  store %"class.internal::BlockVectorIterators::Iterator.23"* %0, %"class.internal::BlockVectorIterators::Iterator.23"** %47, align 8
  store %"class.internal::BlockVectorIterators::Iterator.23"* %1, %"class.internal::BlockVectorIterators::Iterator.23"** %48, align 8
  %49 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %47, align 8
  %50 = bitcast %"class.internal::BlockVectorIterators::Iterator.23"* %49 to %"struct.std::iterator.24"*
  %51 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %49, i32 0, i32 0
  %52 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %48, align 8
  %53 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %52, i32 0, i32 0
  %54 = load %class.BlockVector.16*, %class.BlockVector.16** %53, align 8
  store %class.BlockVector.16* %54, %class.BlockVector.16** %51, align 8
  %55 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %49, i32 0, i32 1
  %56 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %48, align 8
  %57 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %55, align 8
  %59 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %49, i32 0, i32 2
  %60 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %48, align 8
  %61 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %60, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %59, align 4
  %63 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %49, i32 0, i32 3
  %64 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %48, align 8
  %65 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %64, i32 0, i32 3
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %63, align 8
  %67 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %49, i32 0, i32 4
  %68 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %48, align 8
  %69 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %68, i32 0, i32 4
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %67, align 4
  %71 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %49, i32 0, i32 5
  %72 = load %"class.internal::BlockVectorIterators::Iterator.23"*, %"class.internal::BlockVectorIterators::Iterator.23"** %48, align 8
  %73 = getelementptr inbounds %"class.internal::BlockVectorIterators::Iterator.23", %"class.internal::BlockVectorIterators::Iterator.23"* %72, i32 0, i32 5
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %71, align 8
  br label %originalBB
}

declare void @_ZN8internal20BlockVectorIterators8IteratorIdLb0EE12move_forwardEv(%"class.internal::BlockVectorIterators::Iterator.23"*) #1

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZN11BlockVectorIdE5blockEj(%class.BlockVector.16*, i32) #0 comdat align 2 {
  %3 = alloca %class.BlockVector.16*, align 8
  %4 = alloca i32, align 4
  store %class.BlockVector.16* %0, %class.BlockVector.16** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.BlockVector.16*, %class.BlockVector.16** %3, align 8
  %6 = getelementptr inbounds %class.BlockVector.16, %class.BlockVector.16* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = call dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.17"* %6, i64 %8)
  ret %class.Vector* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.17"*, i64) #5 comdat align 2 {
  %3 = load i32, i32* @x.479
  %4 = load i32, i32* @y.480
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.17"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.17"*, %"class.std::vector.17"** %11, align 8
  %14 = bitcast %"class.std::vector.17"* %13 to %"struct.std::_Vector_base.18"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Vector*, %class.Vector** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %class.Vector, %class.Vector* %18, i64 %19
  %21 = load i32, i32* @x.479
  %22 = load i32, i32* @y.480
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.17"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.17"*, %"class.std::vector.17"** %29, align 8
  %32 = bitcast %"class.std::vector.17"* %31 to %"struct.std::_Vector_base.18"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %class.Vector*, %class.Vector** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %class.Vector, %class.Vector* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_sparse_matrix.double.cc() #0 section ".text.startup" {
  %1 = load i32, i32* @x.481
  %2 = load i32, i32* @y.482
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  call void @__cxx_global_var_init()
  %9 = load i32, i32* @x.481
  %10 = load i32, i32* @y.482
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  call void @__cxx_global_var_init()
  br label %originalBB
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { builtin }
attributes #14 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
