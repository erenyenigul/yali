; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_data_out_rotation.ll'
source_filename = "data_out_rotation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions" = type <{ %class.ExceptionBase, i32, [4 x i8] }>
%class.ExceptionBase = type { %"class.std::exception", i8*, i32, i8*, i8*, i8* }
%"class.std::exception" = type { i32 (...)** }
%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues" = type { %class.ExceptionBase, double }
%"struct.DataOutRotation<3>::Data" = type { i32, i32, i32, i32, i32, i32, %"class.std::vector.73", %"class.std::vector.78" }
%"class.std::vector.73" = type { %"struct.std::_Vector_base.74" }
%"struct.std::_Vector_base.74" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { double*, double*, double* }
%"class.std::vector.78" = type { %"struct.std::_Vector_base.79" }
%"struct.std::_Vector_base.79" = type { %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data" = type { %class.Vector*, %class.Vector*, %class.Vector* }
%class.Vector = type { i32 (...)**, i32, i32, double* }
%class.DataOutRotation = type { %class.DataOut_DoFData }
%class.DataOut_DoFData = type { %class.DataOutInterface.base, %class.SmartPointer, %"class.std::vector.63", %"class.std::vector.63", %"class.std::vector.68" }
%class.DataOutInterface.base = type <{ i32 (...)**, i32, %"struct.DataOutBase::DXFlags", %"struct.DataOutBase::UcdFlags", i8, %"struct.DataOutBase::GnuplotFlags", %"struct.DataOutBase::PovrayFlags", i8, %"struct.DataOutBase::EpsFlags", %"struct.DataOutBase::GmvFlags", [4 x i8], %"struct.DataOutBase::TecplotFlags", %"struct.DataOutBase::VtkFlags" }>
%"struct.DataOutBase::DXFlags" = type { i8, i8 }
%"struct.DataOutBase::UcdFlags" = type { i8 }
%"struct.DataOutBase::GnuplotFlags" = type { i32 }
%"struct.DataOutBase::PovrayFlags" = type { i8, i8, i8 }
%"struct.DataOutBase::EpsFlags" = type { i32, i32, i32, i32, double, double, double, double, i8, i8, i8, { <2 x float>, float } (double, double, double)* }
%"struct.DataOutBase::GmvFlags" = type { i32 }
%"struct.DataOutBase::TecplotFlags" = type { i8* }
%"struct.DataOutBase::VtkFlags" = type { i32 }
%class.SmartPointer = type { %class.DoFHandler* }
%class.DoFHandler = type { %class.Subscriptor, %class.SmartPointer.0, %class.SmartPointer.55, %"class.std::vector.56", i32, %"class.std::vector.13" }
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SmartPointer.0 = type { %class.Triangulation* }
%class.Triangulation = type { %class.Subscriptor, %"class.std::vector", %"class.std::vector.48", %"class.std::vector.4", [255 x %class.Boundary*], i32, %struct.TriaNumberCache }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" = type { %class.TriangulationLevel**, %class.TriangulationLevel**, %class.TriangulationLevel** }
%class.TriangulationLevel = type { %class.TriangulationLevel.1, %"struct.TriangulationLevel<3>::HexesData" }
%class.TriangulationLevel.1 = type { %class.TriangulationLevel.2, %"struct.TriangulationLevel<2>::QuadsData" }
%class.TriangulationLevel.2 = type { %class.TriangulationLevel.3, %"struct.TriangulationLevel<1>::LinesData" }
%class.TriangulationLevel.3 = type { %"class.std::vector.4", %"class.std::vector.4", %"class.std::vector.8", %"class.std::vector.13" }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type opaque
%"struct.TriangulationLevel<1>::LinesData" = type { %"class.std::vector.18", %"class.std::vector.23", %"class.std::vector.4", %"class.std::vector.4", %"class.std::vector.28", %"class.std::vector.33" }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" = type { %class.Line*, %class.Line*, %class.Line* }
%class.Line = type { [2 x i32] }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" = type { i8*, i8*, i8* }
%"class.std::vector.33" = type { %"struct.std::_Vector_base.34" }
%"struct.std::_Vector_base.34" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" = type { i8**, i8**, i8** }
%"struct.TriangulationLevel<2>::QuadsData" = type { %"class.std::vector.38", %"class.std::vector.23", %"class.std::vector.4", %"class.std::vector.4", %"class.std::vector.28", %"class.std::vector.33" }
%"class.std::vector.38" = type { %"struct.std::_Vector_base.39" }
%"struct.std::_Vector_base.39" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" = type { %class.Quad*, %class.Quad*, %class.Quad* }
%class.Quad = type { [4 x i32] }
%"struct.TriangulationLevel<3>::HexesData" = type { %"class.std::vector.43", %"class.std::vector.23", %"class.std::vector.4", %"class.std::vector.4", %"class.std::vector.28", %"class.std::vector.33", %"class.std::vector.4" }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" = type { %class.Hexahedron*, %class.Hexahedron*, %class.Hexahedron* }
%class.Hexahedron = type { [6 x i32] }
%"class.std::vector.48" = type { %"struct.std::_Vector_base.49" }
%"struct.std::_Vector_base.49" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" = type { %class.Point*, %class.Point*, %class.Point* }
%class.Point = type { %class.Tensor }
%class.Tensor = type { [3 x double] }
%"class.std::vector.4" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%class.Boundary = type opaque
%struct.TriaNumberCache = type { %struct.TriaNumberCache.53, i32, %"class.std::vector.13", i32, %"class.std::vector.13" }
%struct.TriaNumberCache.53 = type { %struct.TriaNumberCache.54, i32, %"class.std::vector.13", i32, %"class.std::vector.13" }
%struct.TriaNumberCache.54 = type { i32, %"class.std::vector.13", i32, %"class.std::vector.13" }
%class.SmartPointer.55 = type { %class.FiniteElement* }
%class.FiniteElement = type { %class.FiniteElementBase.base, [7 x i8] }
%class.FiniteElementBase.base = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector.83", %"class.std::vector.83", %"class.std::vector.89", %"class.std::vector.89", %"class.std::vector.83", %"class.std::vector.4", %"class.std::vector.48", %"class.std::vector.96", %"class.std::vector.103", %"class.std::vector.13", i8 }>
%class.FiniteElementData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.FullMatrix = type { %class.Table.base, [4 x i8] }
%class.Table.base = type { %class.TableBase.base }
%class.TableBase.base = type <{ %class.Subscriptor, double*, i32, %class.TableIndices }>
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%"class.std::vector.89" = type { %"struct.std::_Vector_base.90" }
%"struct.std::_Vector_base.90" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.94"*, %"struct.std::pair.94"*, %"struct.std::pair.94"* }
%"struct.std::pair.94" = type { %"struct.std::pair.88", i32 }
%"struct.std::pair.88" = type { i32, i32 }
%"class.std::vector.83" = type { %"struct.std::_Vector_base.84" }
%"struct.std::_Vector_base.84" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.88"*, %"struct.std::pair.88"*, %"struct.std::pair.88"* }
%"class.std::vector.96" = type { %"struct.std::_Vector_base.97" }
%"struct.std::_Vector_base.97" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" = type { %class.Point.101*, %class.Point.101*, %class.Point.101* }
%class.Point.101 = type { %class.Tensor.102 }
%class.Tensor.102 = type { [2 x double] }
%"class.std::vector.103" = type { %"struct.std::_Vector_base.104" }
%"struct.std::_Vector_base.104" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" = type { %"class.std::vector.4"*, %"class.std::vector.4"*, %"class.std::vector.4"* }
%"class.std::vector.56" = type { %"struct.std::_Vector_base.57" }
%"struct.std::_Vector_base.57" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" = type { %class.DoFLevel**, %class.DoFLevel**, %class.DoFLevel** }
%class.DoFLevel = type { %class.DoFLevel.61, %"class.std::vector.13" }
%class.DoFLevel.61 = type { %class.DoFLevel.62, %"class.std::vector.13" }
%class.DoFLevel.62 = type { %"class.std::vector.13" }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector.63" = type { %"struct.std::_Vector_base.64" }
%"struct.std::_Vector_base.64" = type { %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data" = type { %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"* }
%"class.boost::shared_ptr" = type { %"class.DataOut_DoFData<3, 4, 4>::DataEntryBase"*, %"class.boost::detail::shared_count" }
%"class.DataOut_DoFData<3, 4, 4>::DataEntryBase" = type opaque
%"class.boost::detail::shared_count" = type { %"class.boost::detail::sp_counted_base"* }
%"class.boost::detail::sp_counted_base" = type { i32 (...)**, i64, i64 }
%"class.std::vector.68" = type { %"struct.std::_Vector_base.69" }
%"struct.std::_Vector_base.69" = type { %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl" }
%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl" = type { %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data" = type { %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"* }
%"struct.DataOutBase::Patch" = type { [16 x %class.Point.108], [8 x i32], i32, i32, %class.Table.110 }
%class.Point.108 = type { %class.Tensor.109 }
%class.Tensor.109 = type { [4 x double] }
%class.Table.110 = type { %class.TableBase.base.112, [4 x i8] }
%class.TableBase.base.112 = type <{ %class.Subscriptor, float*, i32, %class.TableIndices }>
%class.QTrapez = type { %class.Quadrature }
%class.Quadrature = type { %class.Subscriptor, i32, %"class.std::vector.114", %"class.std::vector.73" }
%"class.std::vector.114" = type { %"struct.std::_Vector_base.115" }
%"struct.std::_Vector_base.115" = type { %"struct.std::_Vector_base<Point<1>, std::allocator<Point<1> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<1>, std::allocator<Point<1> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<1>, std::allocator<Point<1> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<1>, std::allocator<Point<1> > >::_Vector_impl_data" = type { %class.Point.119*, %class.Point.119*, %class.Point.119* }
%class.Point.119 = type { %class.Tensor.120 }
%class.Tensor.120 = type { [1 x double] }
%class.QIterated = type { %class.Quadrature.121 }
%class.Quadrature.121 = type { %class.Subscriptor, i32, %"class.std::vector.48", %"class.std::vector.73" }
%class.TriaIterator = type { %class.TriaRawIterator }
%class.TriaRawIterator = type { %class.DoFCellAccessor }
%class.DoFCellAccessor = type { %class.DoFObjectAccessor }
%class.DoFObjectAccessor = type { %class.DoFAccessor, %class.CellAccessor }
%class.DoFAccessor = type { %class.DoFHandler* }
%class.CellAccessor = type { %class.TriaObjectAccessor }
%class.TriaObjectAccessor = type { %class.TriaAccessor }
%class.TriaAccessor = type { i32, i32, %class.Triangulation* }
%"class.std::vector.123" = type { %"struct.std::_Vector_base.124" }
%"struct.std::_Vector_base.124" = type { %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl" }
%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl" = type { %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data" }
%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data" = type { %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"* }
%"class.std::allocator.125" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.DataOutBase::Patch"* }
%"class.std::allocator.70" = type { i8 }
%"class.__gnu_cxx::new_allocator.126" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.138" = type { double* }
%"class.__gnu_cxx::__normal_iterator.139" = type { %class.Vector* }
%class.TableBase.111 = type <{ %class.Subscriptor, float*, i32, %class.TableIndices, [4 x i8] }>
%class.TriaActiveIterator = type { %class.TriaIterator }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::allocator.75" = type { i8 }
%"class.std::vector.128" = type { %"struct.std::_Vector_base.129" }
%"struct.std::_Vector_base.129" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::allocator.80" = type { i8 }
%"class.__gnu_cxx::new_allocator.81" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.136" = type { double* }
%"class.__gnu_cxx::__normal_iterator.137" = type { %class.Vector* }
%"class.__gnu_cxx::new_allocator.76" = type { i8 }
%"class.__gnu_cxx::new_allocator.71" = type { i8 }
%"struct.std::iterator.122" = type { i8 }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"struct.std::iterator" = type { i8 }

$_ZN15DataOutRotationILi3EE13build_patchesEjjj = comdat any

$_ZNK12SmartPointerIK10DoFHandlerILi3EEEptEv = comdat any

$_ZNK10DoFHandlerILi3EE6get_feEv = comdat any

$_ZNK17FiniteElementDataILi3EE12n_componentsEv = comdat any

$_ZNKSt6vectorIN5boost10shared_ptrIN15DataOut_DoFDataILi3ELi4ELi4EE13DataEntryBaseEEESaIS5_EE4sizeEv = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EEC2Ev = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4swapERS4_ = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEneERKS2_ = comdat any

$_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEaSERKS2_ = comdat any

$_ZNSaIN15DataOutRotationILi3EE4DataEEC2Ev = comdat any

$_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEC2EmRKS2_RKS3_ = comdat any

$_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev = comdat any

$_ZN15DataOutRotationILi3EE4DataD2Ev = comdat any

$_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm = comdat any

$_ZNSt6vectorIdSaIdEE6resizeEmd = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EE6resizeEmS1_ = comdat any

$_ZN6VectorIdEC2Ev = comdat any

$_ZN6VectorIdED2Ev = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EEixEm = comdat any

$_ZN6VectorIdE6reinitEjb = comdat any

$_ZN5TableILi2EfE6reinitEjj = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE3endEv = comdat any

$_ZN15DataOutRotationILi3EE4DataC2ERKS1_ = comdat any

$_ZN11DataOutBase5PatchILi4ELi4EED2Ev = comdat any

$_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev = comdat any

$_ZN9QIteratedILi3EED2Ev = comdat any

$_ZN7QTrapezILi1EED2Ev = comdat any

$_ZN15DataOutRotationILi3EE10first_cellEv = comdat any

$_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_ = comdat any

$_ZN15DataOutRotationILi3EE9next_cellERK12TriaIteratorILi3E15DoFCellAccessorILi3EEE = comdat any

$_ZN18TriaActiveIteratorILi3E15DoFCellAccessorILi3EEEC2ERK12TriaIteratorILi3ES1_E = comdat any

$_ZN18TriaActiveIteratorILi3E15DoFCellAccessorILi3EEEppEv = comdat any

$_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsC5Ei = comdat any

$_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD5Ev = comdat any

$_ZNK15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisions9PrintInfoERSo = comdat any

$_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesC5Ed = comdat any

$_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD5Ev = comdat any

$_ZNK15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValues9PrintInfoERSo = comdat any

$_ZN15DataOutRotationILi3EE4DataC5Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2Ev = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIdSaIdEED2Ev = comdat any

$_ZN15DataOutRotationILi3EED2Ev = comdat any

$_ZN15DataOutRotationILi3EED0Ev = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIP6VectorIdES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIP6VectorIdEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIP6VectorIdEEEvT_S5_ = comdat any

$_ZSt8_DestroyI6VectorIdEEvPT_ = comdat any

$_ZSt11__addressofI6VectorIdEEPT_RS2_ = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6VectorIdEE10deallocateEPS2_m = comdat any

$_ZNSaI6VectorIdEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6VectorIdEED2Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2ERKS1_ = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EEC2ERKS3_ = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIdSaIdEE5beginEv = comdat any

$_ZNKSt6vectorIdSaIdEE3endEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEED2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev = comdat any

$_ZNSaIdEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSaIdED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdED2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_ = comdat any

$_ZSt12__niter_wrapIPdET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EEC2EmRKS2_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorI6VectorIdESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorI6VectorIdESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSaI6VectorIdEEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6VectorIdEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6VectorIdEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI6VectorIdEE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZN9__gnu_cxxneIPK6VectorIdESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt10_ConstructI6VectorIdES1_EvPT_RKT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZN5TableILi2EfED2Ev = comdat any

$_ZN9TableBaseILi2EfED2Ev = comdat any

$_ZN9TableBaseILi2EfED0Ev = comdat any

$_ZNK12SmartPointerIK13FiniteElementILi3EEEdeEv = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN11DataOutBase5PatchILi4ELi4EEEEC2Ev = comdat any

$_ZNSaIN11DataOutBase5PatchILi4ELi4EEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEED2Ev = comdat any

$_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN11DataOutBase5PatchILi4ELi4EEEEEvT_S6_ = comdat any

$_ZSt8_DestroyIN11DataOutBase5PatchILi4ELi4EEEEvPT_ = comdat any

$_ZSt11__addressofIN11DataOutBase5PatchILi4ELi4EEEEPT_RS3_ = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE10deallocateEPS3_m = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_swap_dataERS5_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E10_S_on_swapERS4_S6_ = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_copy_dataERKS5_ = comdat any

$_ZNSt12__alloc_swapISaIN11DataOutBase5PatchILi4ELi4EEEELb1EE8_S_do_itERS3_S5_ = comdat any

$_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_ = comdat any

$_ZNK12TriaAccessorILi3EEneERKS0_ = comdat any

$_ZN17DoFObjectAccessorILi3ELi3EE9copy_fromERKS0_ = comdat any

$_ZN12TriaAccessorILi3EE9copy_fromERKS0_ = comdat any

$_ZN11DoFAccessorILi3EE15set_dof_handlerEP10DoFHandlerILi3EE = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEED2Ev = comdat any

$_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE17_S_check_init_lenEmRKS3_ = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE18_M_fill_initializeEmRKS2_ = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNSaIN15DataOutRotationILi3EE4DataEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E8max_sizeERKS4_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPN15DataOutRotationILi3EE4DataEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPN15DataOutRotationILi3EE4DataEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN15DataOutRotationILi3EE4DataEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructIN15DataOutRotationILi3EE4DataES2_EvPT_RKT0_ = comdat any

$_ZSt11__addressofIN15DataOutRotationILi3EE4DataEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN15DataOutRotationILi3EE4DataEEEvT_S6_ = comdat any

$_ZSt8_DestroyIN15DataOutRotationILi3EE4DataEEvPT_ = comdat any

$_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd = comdat any

$_ZNSt6vectorIdSaIdEE3endEv = comdat any

$_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd = comdat any

$_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZSt4fillIPddEvT_S1_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIdSaIdEE5beginEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPdS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPdET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_ = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_ = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EE3endEv = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZN9__gnu_cxxmiIP6VectorIdESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__uninitialized_move_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt13copy_backwardIP6VectorIdES2_ET0_T_S4_S3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt4fillIP6VectorIdES1_EvT_S3_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIP6VectorIdEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorI6VectorIdESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EE5beginEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aIP6VectorIdES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIP6VectorIdES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6VectorIdES4_EET0_T_S6_S5_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EP6VectorIdES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIP6VectorIdEET_S3_ = comdat any

$_ZSt12__niter_wrapIP6VectorIdEET_RKS3_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EP6VectorIdES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIP6VectorIdEET_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6VectorIdES5_EET0_T_S7_S6_ = comdat any

$_ZSt8__fill_aIP6VectorIdES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZSt20uninitialized_fill_nIP6VectorIdEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6VectorIdEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZNKSt6vectorI6VectorIdESaIS1_EE8max_sizeEv = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E8max_sizeERKS3_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN6VectorIdED0Ev = comdat any

$_ZN6VectorIdEaSEd = comdat any

$_ZN6VectorIdE5beginEv = comdat any

$_ZN6VectorIdE3endEv = comdat any

$_ZN9TableBaseILi2EfE6reinitERK12TableIndicesILi2EE = comdat any

$_ZN12TableIndicesILi2EEC2Ejj = comdat any

$_ZNK9TableBaseILi2EfE10n_elementsEv = comdat any

$_ZN12TableIndicesILi2EEC2Ev = comdat any

$_ZN9TableBaseILi2EfE12reset_valuesEv = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZSt6fill_nIPfjfET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPfET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPfjfEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPfET_S1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZN11DataOutBase5PatchILi4ELi4EEC2ERKS1_ = comdat any

$_ZN9__gnu_cxxmiIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZSt22__uninitialized_move_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZSt13copy_backwardIPN11DataOutBase5PatchILi4ELi4EEES3_ET0_T_S5_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZSt4fillIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPN11DataOutBase5PatchILi4ELi4EEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZN5PointILi4EEC2ERKS0_ = comdat any

$_ZN5TableILi2EfEC2ERKS0_ = comdat any

$_ZN6TensorILi1ELi4EEC2ERKS0_ = comdat any

$_ZN9TableBaseILi2EfEC2ERKS0_ = comdat any

$_ZN5TableILi2EfED0Ev = comdat any

$_ZN9TableBaseILi2EfE4fillIfEEvPKT_ = comdat any

$_ZNK9TableBaseILi2EfE4dataEv = comdat any

$_ZSt4copyIPKfPfET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPKfPfET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPKfET_S2_ = comdat any

$_ZSt13__copy_move_aILb0EPKfPfET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKfET_S2_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_ = comdat any

$_ZSt22__uninitialized_copy_aIPN11DataOutBase5PatchILi4ELi4EEES3_S2_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPN11DataOutBase5PatchILi4ELi4EEES3_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11DataOutBase5PatchILi4ELi4EEES5_EET0_T_S7_S6_ = comdat any

$_ZSt10_ConstructIN11DataOutBase5PatchILi4ELi4EEES2_EvPT_RKT0_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPN11DataOutBase5PatchILi4ELi4EEES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_ = comdat any

$_ZSt12__niter_wrapIPN11DataOutBase5PatchILi4ELi4EEEET_RKS4_S4_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPN11DataOutBase5PatchILi4ELi4EEES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN11DataOutBase5PatchILi4ELi4EEES6_EET0_T_S8_S7_ = comdat any

$_ZN11DataOutBase5PatchILi4ELi4EEaSERKS1_ = comdat any

$_ZN5PointILi4EEaSERKS0_ = comdat any

$_ZN5TableILi2EfEaSERKS0_ = comdat any

$_ZN6TensorILi1ELi4EEaSERKS0_ = comdat any

$_ZN9TableBaseILi2EfEaSERKS0_ = comdat any

$_ZNK9TableBaseILi2EfE4sizeEv = comdat any

$_ZNK9TableBaseILi2EfE5emptyEv = comdat any

$_ZSt4copyIPfS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPfS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPfET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPfS0_ET1_T0_S2_S1_ = comdat any

$_ZSt8__fill_aIPN11DataOutBase5PatchILi4ELi4EEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_ = comdat any

$_ZSt20uninitialized_fill_nIPN11DataOutBase5PatchILi4ELi4EEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN11DataOutBase5PatchILi4ELi4EEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8max_sizeERKS4_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8allocateEmPKv = comdat any

$_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEppEv = comdat any

$_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEE5stateEv = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE12has_childrenEv = comdat any

$_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEppEv = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE4usedEv = comdat any

$_ZN18TriaObjectAccessorILi3ELi3EEppEv = comdat any

$_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm = comdat any

$_ZNKSt6vectorI10HexahedronSaIS0_EE4sizeEv = comdat any

$_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIbSaIbEEixEm = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNK12TriaAccessorILi3EE5stateEv = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev = comdat any

$_ZNSaIdEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2Ev = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaI6VectorIdEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6VectorIdEEC2Ev = comdat any

$_ZTVN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE = comdat any

$_ZTVN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE = comdat any

$_ZTV15DataOutRotationILi3EE = comdat any

$_ZTS15DataOutRotationILi3EE = comdat any

$_ZTS15DataOut_DoFDataILi3ELi4ELi4EE = comdat any

$_ZTS16DataOutInterfaceILi4ELi4EE = comdat any

$_ZTS11DataOutBase = comdat any

$_ZTI11DataOutBase = comdat any

$_ZTI16DataOutInterfaceILi4ELi4EE = comdat any

$_ZTI15DataOut_DoFDataILi3ELi4ELi4EE = comdat any

$_ZTI15DataOutRotationILi3EE = comdat any

$_ZTSN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE = comdat any

$_ZTIN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE = comdat any

$_ZTSN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE = comdat any

$_ZTIN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE = comdat any

$_ZTV9TableBaseILi2EfE = comdat any

$_ZTS9TableBaseILi2EfE = comdat any

$_ZTI9TableBaseILi2EfE = comdat any

$_ZTV6VectorIdE = comdat any

$_ZTS6VectorIdE = comdat any

$_ZTI6VectorIdE = comdat any

$_ZTV5TableILi2EfE = comdat any

$_ZTS5TableILi2EfE = comdat any

$_ZTI5TableILi2EfE = comdat any

@_ZTVN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE to i8*), i8* bitcast (void (%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*)* @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD1Ev to i8*), i8* bitcast (void (%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*)* @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, %"class.std::basic_ostream"*)* @_ZNK15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisions9PrintInfoERSo to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [39 x i8] c"The number of subdivisions per patch, \00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c", is not valid.\00", align 1
@_ZTVN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE to i8*), i8* bitcast (void (%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*)* @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD1Ev to i8*), i8* bitcast (void (%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*)* @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, %"class.std::basic_ostream"*)* @_ZNK15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValues9PrintInfoERSo to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [49 x i8] c"The radial variable attains a negative value of \00", align 1
@_ZTV15DataOutRotationILi3EE = weak_odr unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15DataOutRotationILi3EE to i8*), i8* bitcast (%"class.std::vector.68"* (%class.DataOut_DoFData*)* @_ZNK15DataOut_DoFDataILi3ELi4ELi4EE11get_patchesEv to i8*), i8* bitcast (void (%"class.std::vector.128"*, %class.DataOut_DoFData*)* @_ZNK15DataOut_DoFDataILi3ELi4ELi4EE17get_dataset_namesB5cxx11Ev to i8*), i8* bitcast (void (%class.DataOutRotation*)* @_ZN15DataOutRotationILi3EED2Ev to i8*), i8* bitcast (void (%class.DataOutRotation*)* @_ZN15DataOutRotationILi3EED0Ev to i8*), i8* bitcast (void (%class.DataOut_DoFData*)* @_ZN15DataOut_DoFDataILi3ELi4ELi4EE5clearEv to i8*), i8* bitcast (void (%class.DataOutRotation*, i32, i32, i32)* @_ZN15DataOutRotationILi3EE13build_patchesEjjj to i8*), i8* bitcast (void (%class.TriaIterator*, %class.DataOutRotation*)* @_ZN15DataOutRotationILi3EE10first_cellEv to i8*), i8* bitcast (void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)* @_ZN15DataOutRotationILi3EE9next_cellERK12TriaIteratorILi3E15DoFCellAccessorILi3EEE to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS15DataOutRotationILi3EE = weak_odr constant [24 x i8] c"15DataOutRotationILi3EE\00", comdat
@_ZTS15DataOut_DoFDataILi3ELi4ELi4EE = linkonce_odr constant [32 x i8] c"15DataOut_DoFDataILi3ELi4ELi4EE\00", comdat
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTS16DataOutInterfaceILi4ELi4EE = linkonce_odr constant [29 x i8] c"16DataOutInterfaceILi4ELi4EE\00", comdat
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS11DataOutBase = linkonce_odr constant [14 x i8] c"11DataOutBase\00", comdat
@_ZTI11DataOutBase = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS11DataOutBase, i32 0, i32 0) }, comdat
@_ZTI16DataOutInterfaceILi4ELi4EE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTS16DataOutInterfaceILi4ELi4EE, i32 0, i32 0), i32 0, i32 1, i8* bitcast ({ i8*, i8* }* @_ZTI11DataOutBase to i8*), i64 0 }, comdat
@_ZTI15DataOut_DoFDataILi3ELi4ELi4EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTS15DataOut_DoFDataILi3ELi4ELi4EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI16DataOutInterfaceILi4ELi4EE to i8*) }, comdat
@_ZTI15DataOutRotationILi3EE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTS15DataOutRotationILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15DataOut_DoFDataILi3ELi4ELi4EE to i8*) }, comdat
@_ZTSN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE = weak_odr constant [58 x i8] c"N15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE\00", comdat
@_ZTI13ExceptionBase = external constant i8*
@_ZTIN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZTSN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTSN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE = weak_odr constant [62 x i8] c"N15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE\00", comdat
@_ZTIN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @_ZTSN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTV9TableBaseILi2EfE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2EfE to i8*), i8* bitcast (void (%class.TableBase.111*)* @_ZN9TableBaseILi2EfED2Ev to i8*), i8* bitcast (void (%class.TableBase.111*)* @_ZN9TableBaseILi2EfED0Ev to i8*)] }, comdat, align 8
@_ZTS9TableBaseILi2EfE = linkonce_odr constant [18 x i8] c"9TableBaseILi2EfE\00", comdat
@_ZTI11Subscriptor = external constant i8*
@_ZTI9TableBaseILi2EfE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS9TableBaseILi2EfE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@.str.3 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@_ZTV6VectorIdE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI6VectorIdE to i8*), i8* bitcast (void (%class.Vector*)* @_ZN6VectorIdED2Ev to i8*), i8* bitcast (void (%class.Vector*)* @_ZN6VectorIdED0Ev to i8*)] }, comdat, align 8
@_ZTS6VectorIdE = linkonce_odr constant [11 x i8] c"6VectorIdE\00", comdat
@_ZTI6VectorIdE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZTS6VectorIdE, i32 0, i32 0) }, comdat
@_ZTV5TableILi2EfE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI5TableILi2EfE to i8*), i8* bitcast (void (%class.Table.110*)* @_ZN5TableILi2EfED2Ev to i8*), i8* bitcast (void (%class.Table.110*)* @_ZN5TableILi2EfED0Ev to i8*)] }, comdat, align 8
@_ZTS5TableILi2EfE = linkonce_odr constant [14 x i8] c"5TableILi2EfE\00", comdat
@_ZTI5TableILi2EfE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS5TableILi2EfE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2EfE to i8*) }, comdat
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0

@_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsC1Ei = weak_odr alias void (%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, i32), void (%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, i32)* @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsC2Ei
@_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD1Ev = weak_odr alias void (%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*), void (%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*)* @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD2Ev
@_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesC1Ed = weak_odr alias void (%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, double), void (%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, double)* @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesC2Ed
@_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD1Ev = weak_odr alias void (%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*), void (%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*)* @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD2Ev
@_ZN15DataOutRotationILi3EE4DataC1Ev = weak_odr alias void (%"struct.DataOutRotation<3>::Data"*), void (%"struct.DataOutRotation<3>::Data"*)* @_ZN15DataOutRotationILi3EE4DataC2Ev

; Function Attrs: noinline nounwind uwtable
define void @_ZN15DataOutRotationILi3EE18build_some_patchesENS0_4DataE(%class.DataOutRotation*, %"struct.DataOutRotation<3>::Data"*) #0 align 2 {
  %3 = alloca %class.DataOutRotation*, align 8
  store %class.DataOutRotation* %0, %class.DataOutRotation** %3, align 8
  %4 = load %class.DataOutRotation*, %class.DataOutRotation** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE13build_patchesEjjj(%class.DataOutRotation*, i32, i32, i32) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.1
  %6 = load i32, i32* @y.2
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.DataOutRotation*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %class.QTrapez, align 8
  %19 = alloca %class.QIterated, align 8
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %"class.std::vector.68", align 8
  %26 = alloca i32, align 4
  %27 = alloca %class.TriaIterator, align 8
  %28 = alloca %class.TriaRawIterator, align 8
  %29 = alloca %class.TriaIterator, align 8
  %30 = alloca %"class.std::vector.123", align 8
  %31 = alloca %"struct.DataOutRotation<3>::Data", align 8
  %32 = alloca %"class.std::allocator.125", align 1
  %33 = alloca i32, align 4
  %34 = alloca %class.Vector, align 8
  %35 = alloca i32, align 4
  %36 = alloca %"struct.DataOutBase::Patch", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"struct.DataOutRotation<3>::Data", align 8
  store %class.DataOutRotation* %0, %class.DataOutRotation** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  store i32 %3, i32* %16, align 4
  %39 = load %class.DataOutRotation*, %class.DataOutRotation** %13, align 8
  store i32 1, i32* %17, align 4
  call void @_ZN7QTrapezILi1EEC1Ev(%class.QTrapez* %18)
  %40 = bitcast %class.QTrapez* %18 to %class.Quadrature*
  %41 = load i32, i32* %15, align 4
  %42 = load i32, i32* @x.1
  %43 = load i32, i32* @y.2
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9QIteratedILi3EEC1ERK10QuadratureILi1EEj(%class.QIterated* %19, %class.Quadrature* dereferenceable(80) %40, i32 %41)
          to label %50 unwind label %188

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = bitcast %class.QIterated* %19 to %class.Quadrature.121*
  %52 = getelementptr inbounds %class.Quadrature.121, %class.Quadrature.121* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  store i32 %53, i32* %22, align 4
  %54 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %55 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %54, i32 0, i32 1
  %56 = invoke %class.DoFHandler* @_ZNK12SmartPointerIK10DoFHandlerILi3EEEptEv(%class.SmartPointer* %55)
          to label %57 unwind label %208

; <label>:57:                                     ; preds = %50
  %58 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %56)
          to label %59 unwind label %208

; <label>:59:                                     ; preds = %57
  %60 = bitcast %class.FiniteElement* %58 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 24
  %62 = bitcast i8* %61 to %class.FiniteElementData*
  %63 = invoke i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %62)
          to label %64 unwind label %208

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* @x.1
  %66 = load i32, i32* @y.2
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %64, %originalBB1alteredBB
  store i32 %63, i32* %23, align 4
  %73 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %74 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %73, i32 0, i32 2
  %75 = load i32, i32* @x.1
  %76 = load i32, i32* @y.2
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %83 = invoke i64 @_ZNKSt6vectorIN5boost10shared_ptrIN15DataOut_DoFDataILi3ELi4ELi4EE13DataEntryBaseEEESaIS5_EE4sizeEv(%"class.std::vector.63"* %74)
          to label %84 unwind label %208

; <label>:84:                                     ; preds = %originalBBpart24
  %85 = load i32, i32* %23, align 4
  %86 = zext i32 %85 to i64
  %87 = mul i64 %83, %86
  %88 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %89 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %88, i32 0, i32 3
  %90 = invoke i64 @_ZNKSt6vectorIN5boost10shared_ptrIN15DataOut_DoFDataILi3ELi4ELi4EE13DataEntryBaseEEESaIS5_EE4sizeEv(%"class.std::vector.63"* %89)
          to label %91 unwind label %208

; <label>:91:                                     ; preds = %84
  %92 = load i32, i32* @x.1
  %93 = load i32, i32* @y.2
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %91, %originalBB6alteredBB
  %100 = add i64 %87, %90
  %101 = trunc i64 %100 to i32
  store i32 %101, i32* %24, align 4
  %102 = load i32, i32* @x.1
  %103 = load i32, i32* @y.2
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EEC2Ev(%"class.std::vector.68"* %25)
          to label %110 unwind label %208

; <label>:110:                                    ; preds = %originalBBpart28
  %111 = load i32, i32* @x.1
  %112 = load i32, i32* @y.2
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %110, %originalBB10alteredBB
  %119 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %120 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %119, i32 0, i32 4
  %121 = load i32, i32* @x.1
  %122 = load i32, i32* @y.2
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4swapERS4_(%"class.std::vector.68"* %120, %"class.std::vector.68"* dereferenceable(24) %25)
          to label %129 unwind label %212

; <label>:129:                                    ; preds = %originalBBpart212
  invoke void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev(%"class.std::vector.68"* %25)
          to label %130 unwind label %208

; <label>:130:                                    ; preds = %129
  store i32 0, i32* %26, align 4
  %131 = bitcast %class.DataOutRotation* %39 to void (%class.TriaIterator*, %class.DataOutRotation*)***
  %132 = load void (%class.TriaIterator*, %class.DataOutRotation*)**, void (%class.TriaIterator*, %class.DataOutRotation*)*** %131, align 8
  %133 = getelementptr inbounds void (%class.TriaIterator*, %class.DataOutRotation*)*, void (%class.TriaIterator*, %class.DataOutRotation*)** %132, i64 6
  %134 = load void (%class.TriaIterator*, %class.DataOutRotation*)*, void (%class.TriaIterator*, %class.DataOutRotation*)** %133, align 8
  invoke void %134(%class.TriaIterator* sret %27, %class.DataOutRotation* %39)
          to label %135 unwind label %208

; <label>:135:                                    ; preds = %130
  br label %136

; <label>:136:                                    ; preds = %187, %135
  %137 = bitcast %class.TriaIterator* %27 to %class.TriaRawIterator*
  %138 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %139 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %138, i32 0, i32 1
  %140 = invoke %class.DoFHandler* @_ZNK12SmartPointerIK10DoFHandlerILi3EEEptEv(%class.SmartPointer* %139)
          to label %141 unwind label %208

; <label>:141:                                    ; preds = %136
  invoke void @_ZNK10DoFHandlerILi3EE3endEv(%class.TriaRawIterator* sret %28, %class.DoFHandler* %140)
          to label %142 unwind label %208

; <label>:142:                                    ; preds = %141
  %143 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %137, %class.TriaRawIterator* dereferenceable(24) %28)
          to label %144 unwind label %208

; <label>:144:                                    ; preds = %142
  %145 = load i32, i32* @x.1
  %146 = load i32, i32* @y.2
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %144, %originalBB14alteredBB
  %153 = load i32, i32* @x.1
  %154 = load i32, i32* @y.2
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %143, label %161, label %249

; <label>:161:                                    ; preds = %originalBBpart216
  %162 = load i32, i32* %26, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %26, align 4
  br label %164

; <label>:164:                                    ; preds = %161
  %165 = bitcast %class.DataOutRotation* %39 to void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)***
  %166 = load void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)**, void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)*, void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)** %166, i64 7
  %168 = load void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)*, void (%class.TriaIterator*, %class.DataOutRotation*, %class.TriaIterator*)** %167, align 8
  invoke void %168(%class.TriaIterator* sret %29, %class.DataOutRotation* %39, %class.TriaIterator* dereferenceable(24) %27)
          to label %169 unwind label %208

; <label>:169:                                    ; preds = %164
  %170 = load i32, i32* @x.1
  %171 = load i32, i32* @y.2
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %169, %originalBB18alteredBB
  %178 = load i32, i32* @x.1
  %179 = load i32, i32* @y.2
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %186 = invoke dereferenceable(24) %class.TriaIterator* @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEaSERKS2_(%class.TriaIterator* %27, %class.TriaIterator* dereferenceable(24) %29)
          to label %187 unwind label %208

; <label>:187:                                    ; preds = %originalBBpart220
  br label %136

; <label>:188:                                    ; preds = %475, %originalBBpart2
  %189 = load i32, i32* @x.1
  %190 = load i32, i32* @y.2
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %188, %originalBB22alteredBB
  %197 = landingpad { i8*, i32 }
          cleanup
  %198 = extractvalue { i8*, i32 } %197, 0
  store i8* %198, i8** %20, align 8
  %199 = extractvalue { i8*, i32 } %197, 1
  store i32 %199, i32* %21, align 4
  %200 = load i32, i32* @x.1
  %201 = load i32, i32* @y.2
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %508

; <label>:208:                                    ; preds = %originalBBpart256, %254, %249, %originalBBpart220, %164, %142, %141, %136, %130, %129, %originalBBpart28, %84, %originalBBpart24, %59, %57, %50
  %209 = landingpad { i8*, i32 }
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  store i8* %210, i8** %20, align 8
  %211 = extractvalue { i8*, i32 } %209, 1
  store i32 %211, i32* %21, align 4
  br label %506

; <label>:212:                                    ; preds = %originalBBpart212
  %213 = load i32, i32* @x.1
  %214 = load i32, i32* @y.2
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %212, %originalBB26alteredBB
  %221 = landingpad { i8*, i32 }
          cleanup
  %222 = extractvalue { i8*, i32 } %221, 0
  store i8* %222, i8** %20, align 8
  %223 = extractvalue { i8*, i32 } %221, 1
  store i32 %223, i32* %21, align 4
  %224 = load i32, i32* @x.1
  %225 = load i32, i32* @y.2
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  invoke void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev(%"class.std::vector.68"* %25)
          to label %232 unwind label %547

; <label>:232:                                    ; preds = %originalBBpart228
  %233 = load i32, i32* @x.1
  %234 = load i32, i32* @y.2
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %232, %originalBB30alteredBB
  %241 = load i32, i32* @x.1
  %242 = load i32, i32* @y.2
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %506

; <label>:249:                                    ; preds = %originalBBpart216
  %250 = load i32, i32* %14, align 4
  %251 = load i32, i32* %26, align 4
  %252 = mul i32 %251, %250
  store i32 %252, i32* %26, align 4
  invoke void @_ZN15DataOutRotationILi3EE4DataC1Ev(%"struct.DataOutRotation<3>::Data"* %31)
          to label %253 unwind label %208

; <label>:253:                                    ; preds = %249
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEEC2Ev(%"class.std::allocator.125"* %32) #11
  invoke void @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEC2EmRKS2_RKS3_(%"class.std::vector.123"* %30, i64 1, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %31, %"class.std::allocator.125"* dereferenceable(1) %32)
          to label %254 unwind label %380

; <label>:254:                                    ; preds = %253
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"* %32) #11
  invoke void @_ZN15DataOutRotationILi3EE4DataD2Ev(%"struct.DataOutRotation<3>::Data"* %31)
          to label %255 unwind label %208

; <label>:255:                                    ; preds = %254
  store i32 0, i32* %33, align 4
  br label %256

; <label>:256:                                    ; preds = %411, %255
  %257 = load i32, i32* %33, align 4
  %258 = icmp ult i32 %257, 1
  br i1 %258, label %259, label %414

; <label>:259:                                    ; preds = %256
  %260 = load i32, i32* %33, align 4
  %261 = zext i32 %260 to i64
  %262 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %261)
          to label %263 unwind label %385

; <label>:263:                                    ; preds = %259
  %264 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %262, i32 0, i32 0
  store i32 1, i32* %264, align 8
  %265 = load i32, i32* %33, align 4
  %266 = load i32, i32* %33, align 4
  %267 = zext i32 %266 to i64
  %268 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %267)
          to label %269 unwind label %385

; <label>:269:                                    ; preds = %263
  %270 = load i32, i32* @x.1
  %271 = load i32, i32* @y.2
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %269, %originalBB34alteredBB
  %278 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %268, i32 0, i32 1
  store i32 %265, i32* %278, align 4
  %279 = load i32, i32* %23, align 4
  %280 = load i32, i32* %33, align 4
  %281 = zext i32 %280 to i64
  %282 = load i32, i32* @x.1
  %283 = load i32, i32* @y.2
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  %290 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %281)
          to label %291 unwind label %385

; <label>:291:                                    ; preds = %originalBBpart236
  %292 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %290, i32 0, i32 2
  store i32 %279, i32* %292, align 8
  %293 = load i32, i32* %24, align 4
  %294 = load i32, i32* %33, align 4
  %295 = zext i32 %294 to i64
  %296 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %295)
          to label %297 unwind label %385

; <label>:297:                                    ; preds = %291
  %298 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %296, i32 0, i32 3
  store i32 %293, i32* %298, align 4
  %299 = load i32, i32* %14, align 4
  %300 = load i32, i32* %33, align 4
  %301 = zext i32 %300 to i64
  %302 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %301)
          to label %303 unwind label %385

; <label>:303:                                    ; preds = %297
  %304 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %302, i32 0, i32 4
  store i32 %299, i32* %304, align 8
  %305 = load i32, i32* %15, align 4
  %306 = load i32, i32* %33, align 4
  %307 = zext i32 %306 to i64
  %308 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %307)
          to label %309 unwind label %385

; <label>:309:                                    ; preds = %303
  %310 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %308, i32 0, i32 5
  store i32 %305, i32* %310, align 4
  %311 = load i32, i32* %33, align 4
  %312 = zext i32 %311 to i64
  %313 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %312)
          to label %314 unwind label %385

; <label>:314:                                    ; preds = %309
  %315 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %313, i32 0, i32 6
  %316 = load i32, i32* %22, align 4
  %317 = zext i32 %316 to i64
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.73"* %315, i64 %317, double 0.000000e+00)
          to label %318 unwind label %385

; <label>:318:                                    ; preds = %314
  %319 = load i32, i32* @x.1
  %320 = load i32, i32* @y.2
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %318, %originalBB38alteredBB
  %327 = load i32, i32* %33, align 4
  %328 = zext i32 %327 to i64
  %329 = load i32, i32* @x.1
  %330 = load i32, i32* @y.2
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  %337 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %328)
          to label %338 unwind label %385

; <label>:338:                                    ; preds = %originalBBpart240
  %339 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %337, i32 0, i32 7
  %340 = load i32, i32* %22, align 4
  %341 = zext i32 %340 to i64
  invoke void @_ZN6VectorIdEC2Ev(%class.Vector* %34)
          to label %342 unwind label %385

; <label>:342:                                    ; preds = %338
  invoke void @_ZNSt6vectorI6VectorIdESaIS1_EE6resizeEmS1_(%"class.std::vector.78"* %339, i64 %341, %class.Vector* %34)
          to label %343 unwind label %405

; <label>:343:                                    ; preds = %342
  %344 = load i32, i32* @x.1
  %345 = load i32, i32* @y.2
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %343, %originalBB42alteredBB
  %352 = load i32, i32* @x.1
  %353 = load i32, i32* @y.2
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  invoke void @_ZN6VectorIdED2Ev(%class.Vector* %34)
          to label %360 unwind label %385

; <label>:360:                                    ; preds = %originalBBpart244
  store i32 0, i32* %35, align 4
  br label %361

; <label>:361:                                    ; preds = %377, %360
  %362 = load i32, i32* %35, align 4
  %363 = load i32, i32* %22, align 4
  %364 = icmp ult i32 %362, %363
  br i1 %364, label %365, label %410

; <label>:365:                                    ; preds = %361
  %366 = load i32, i32* %33, align 4
  %367 = zext i32 %366 to i64
  %368 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 %367)
          to label %369 unwind label %385

; <label>:369:                                    ; preds = %365
  %370 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %368, i32 0, i32 7
  %371 = load i32, i32* %35, align 4
  %372 = zext i32 %371 to i64
  %373 = invoke dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.78"* %370, i64 %372)
          to label %374 unwind label %385

; <label>:374:                                    ; preds = %369
  %375 = load i32, i32* %23, align 4
  invoke void @_ZN6VectorIdE6reinitEjb(%class.Vector* %373, i32 %375, i1 zeroext false)
          to label %376 unwind label %385

; <label>:376:                                    ; preds = %374
  br label %377

; <label>:377:                                    ; preds = %376
  %378 = load i32, i32* %35, align 4
  %379 = add i32 %378, 1
  store i32 %379, i32* %35, align 4
  br label %361

; <label>:380:                                    ; preds = %253
  %381 = landingpad { i8*, i32 }
          cleanup
  %382 = extractvalue { i8*, i32 } %381, 0
  store i8* %382, i8** %20, align 8
  %383 = extractvalue { i8*, i32 } %381, 1
  store i32 %383, i32* %21, align 4
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"* %32) #11
  invoke void @_ZN15DataOutRotationILi3EE4DataD2Ev(%"struct.DataOutRotation<3>::Data"* %31)
          to label %384 unwind label %547

; <label>:384:                                    ; preds = %380
  br label %506

; <label>:385:                                    ; preds = %457, %414, %374, %369, %365, %originalBBpart244, %338, %originalBBpart240, %314, %309, %303, %297, %291, %originalBBpart236, %263, %259
  %386 = load i32, i32* @x.1
  %387 = load i32, i32* @y.2
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %385, %originalBB46alteredBB
  %394 = landingpad { i8*, i32 }
          cleanup
  %395 = extractvalue { i8*, i32 } %394, 0
  store i8* %395, i8** %20, align 8
  %396 = extractvalue { i8*, i32 } %394, 1
  store i32 %396, i32* %21, align 4
  %397 = load i32, i32* @x.1
  %398 = load i32, i32* @y.2
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %504

; <label>:405:                                    ; preds = %342
  %406 = landingpad { i8*, i32 }
          cleanup
  %407 = extractvalue { i8*, i32 } %406, 0
  store i8* %407, i8** %20, align 8
  %408 = extractvalue { i8*, i32 } %406, 1
  store i32 %408, i32* %21, align 4
  invoke void @_ZN6VectorIdED2Ev(%class.Vector* %34)
          to label %409 unwind label %547

; <label>:409:                                    ; preds = %405
  br label %504

; <label>:410:                                    ; preds = %361
  br label %411

; <label>:411:                                    ; preds = %410
  %412 = load i32, i32* %33, align 4
  %413 = add i32 %412, 1
  store i32 %413, i32* %33, align 4
  br label %256

; <label>:414:                                    ; preds = %256
  invoke void @_ZN11DataOutBase5PatchILi4ELi4EEC1Ev(%"struct.DataOutBase::Patch"* %36)
          to label %415 unwind label %385

; <label>:415:                                    ; preds = %414
  %416 = load i32, i32* %15, align 4
  %417 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %36, i32 0, i32 3
  store i32 %416, i32* %417, align 4
  %418 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %36, i32 0, i32 4
  %419 = load i32, i32* %24, align 4
  %420 = load i32, i32* %22, align 4
  %421 = load i32, i32* %15, align 4
  %422 = add i32 %421, 1
  %423 = mul i32 %420, %422
  invoke void @_ZN5TableILi2EfE6reinitEjj(%class.Table.110* %418, i32 %419, i32 %423)
          to label %424 unwind label %477

; <label>:424:                                    ; preds = %415
  %425 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %426 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %425, i32 0, i32 4
  %427 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %428 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %427, i32 0, i32 4
  %429 = invoke %"struct.DataOutBase::Patch"* @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE3endEv(%"class.std::vector.68"* %428)
          to label %430 unwind label %477

; <label>:430:                                    ; preds = %424
  %431 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %429, %"struct.DataOutBase::Patch"** %431, align 8
  %432 = load i32, i32* %26, align 4
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  %435 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %434, align 8
  invoke void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.68"* %426, %"struct.DataOutBase::Patch"* %435, i64 %433, %"struct.DataOutBase::Patch"* dereferenceable(600) %36)
          to label %436 unwind label %477

; <label>:436:                                    ; preds = %430
  %437 = invoke dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"* %30, i64 0)
          to label %438 unwind label %477

; <label>:438:                                    ; preds = %436
  %439 = load i32, i32* @x.1
  %440 = load i32, i32* @y.2
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %438, %originalBB50alteredBB
  %447 = load i32, i32* @x.1
  %448 = load i32, i32* @y.2
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  invoke void @_ZN15DataOutRotationILi3EE4DataC2ERKS1_(%"struct.DataOutRotation<3>::Data"* %38, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %437)
          to label %455 unwind label %477

; <label>:455:                                    ; preds = %originalBBpart252
  invoke void @_ZN15DataOutRotationILi3EE18build_some_patchesENS0_4DataE(%class.DataOutRotation* %39, %"struct.DataOutRotation<3>::Data"* %38)
          to label %456 unwind label %481

; <label>:456:                                    ; preds = %455
  invoke void @_ZN15DataOutRotationILi3EE4DataD2Ev(%"struct.DataOutRotation<3>::Data"* %38)
          to label %457 unwind label %477

; <label>:457:                                    ; preds = %456
  invoke void @_ZN11DataOutBase5PatchILi4ELi4EED2Ev(%"struct.DataOutBase::Patch"* %36)
          to label %458 unwind label %385

; <label>:458:                                    ; preds = %457
  %459 = load i32, i32* @x.1
  %460 = load i32, i32* @y.2
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %458, %originalBB54alteredBB
  %467 = load i32, i32* @x.1
  %468 = load i32, i32* @y.2
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  invoke void @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"class.std::vector.123"* %30)
          to label %475 unwind label %208

; <label>:475:                                    ; preds = %originalBBpart256
  invoke void @_ZN9QIteratedILi3EED2Ev(%class.QIterated* %19)
          to label %476 unwind label %188

; <label>:476:                                    ; preds = %475
  call void @_ZN7QTrapezILi1EED2Ev(%class.QTrapez* %18)
  ret void

; <label>:477:                                    ; preds = %456, %originalBBpart252, %436, %430, %424, %415
  %478 = landingpad { i8*, i32 }
          cleanup
  %479 = extractvalue { i8*, i32 } %478, 0
  store i8* %479, i8** %20, align 8
  %480 = extractvalue { i8*, i32 } %478, 1
  store i32 %480, i32* %21, align 4
  br label %486

; <label>:481:                                    ; preds = %455
  %482 = landingpad { i8*, i32 }
          cleanup
  %483 = extractvalue { i8*, i32 } %482, 0
  store i8* %483, i8** %20, align 8
  %484 = extractvalue { i8*, i32 } %482, 1
  store i32 %484, i32* %21, align 4
  invoke void @_ZN15DataOutRotationILi3EE4DataD2Ev(%"struct.DataOutRotation<3>::Data"* %38)
          to label %485 unwind label %547

; <label>:485:                                    ; preds = %481
  br label %486

; <label>:486:                                    ; preds = %485, %477
  %487 = load i32, i32* @x.1
  %488 = load i32, i32* @y.2
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %486, %originalBB58alteredBB
  %495 = load i32, i32* @x.1
  %496 = load i32, i32* @y.2
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  invoke void @_ZN11DataOutBase5PatchILi4ELi4EED2Ev(%"struct.DataOutBase::Patch"* %36)
          to label %503 unwind label %547

; <label>:503:                                    ; preds = %originalBBpart260
  br label %504

; <label>:504:                                    ; preds = %503, %409, %originalBBpart248
  invoke void @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"class.std::vector.123"* %30)
          to label %505 unwind label %547

; <label>:505:                                    ; preds = %504
  br label %506

; <label>:506:                                    ; preds = %505, %384, %originalBBpart232, %208
  invoke void @_ZN9QIteratedILi3EED2Ev(%class.QIterated* %19)
          to label %507 unwind label %547

; <label>:507:                                    ; preds = %506
  br label %508

; <label>:508:                                    ; preds = %507, %originalBBpart224
  %509 = load i32, i32* @x.1
  %510 = load i32, i32* @y.2
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %508, %originalBB62alteredBB
  %517 = load i32, i32* @x.1
  %518 = load i32, i32* @y.2
  %519 = sub i32 %517, 1
  %520 = mul i32 %517, %519
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %522, %523
  br i1 %524, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  invoke void @_ZN7QTrapezILi1EED2Ev(%class.QTrapez* %18)
          to label %525 unwind label %547

; <label>:525:                                    ; preds = %originalBBpart264
  %526 = load i32, i32* @x.1
  %527 = load i32, i32* @y.2
  %528 = sub i32 %526, 1
  %529 = mul i32 %526, %528
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %531, %532
  br i1 %533, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %525, %originalBB66alteredBB
  %534 = load i32, i32* @x.1
  %535 = load i32, i32* @y.2
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %542

; <label>:542:                                    ; preds = %originalBBpart268
  %543 = load i8*, i8** %20, align 8
  %544 = load i32, i32* %21, align 4
  %545 = insertvalue { i8*, i32 } undef, i8* %543, 0
  %546 = insertvalue { i8*, i32 } %545, i32 %544, 1
  resume { i8*, i32 } %546

; <label>:547:                                    ; preds = %originalBBpart264, %506, %504, %originalBBpart260, %481, %405, %380, %originalBBpart228
  %548 = landingpad { i8*, i32 }
          catch i8* null
  %549 = extractvalue { i8*, i32 } %548, 0
  call void @__clang_call_terminate(i8* %549) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %550 = alloca %class.DataOutRotation*, align 8
  %551 = alloca i32, align 4
  %552 = alloca i32, align 4
  %553 = alloca i32, align 4
  %554 = alloca i32, align 4
  %555 = alloca %class.QTrapez, align 8
  %556 = alloca %class.QIterated, align 8
  %557 = alloca i8*
  %558 = alloca i32
  %559 = alloca i32, align 4
  %560 = alloca i32, align 4
  %561 = alloca i32, align 4
  %562 = alloca %"class.std::vector.68", align 8
  %563 = alloca i32, align 4
  %564 = alloca %class.TriaIterator, align 8
  %565 = alloca %class.TriaRawIterator, align 8
  %566 = alloca %class.TriaIterator, align 8
  %567 = alloca %"class.std::vector.123", align 8
  %568 = alloca %"struct.DataOutRotation<3>::Data", align 8
  %569 = alloca %"class.std::allocator.125", align 1
  %570 = alloca i32, align 4
  %571 = alloca %class.Vector, align 8
  %572 = alloca i32, align 4
  %573 = alloca %"struct.DataOutBase::Patch", align 8
  %574 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %575 = alloca %"struct.DataOutRotation<3>::Data", align 8
  store %class.DataOutRotation* %0, %class.DataOutRotation** %550, align 8
  store i32 %1, i32* %551, align 4
  store i32 %2, i32* %552, align 4
  store i32 %3, i32* %553, align 4
  %576 = load %class.DataOutRotation*, %class.DataOutRotation** %550, align 8
  store i32 1, i32* %554, align 4
  call void @_ZN7QTrapezILi1EEC1Ev(%class.QTrapez* %555)
  %577 = bitcast %class.QTrapez* %555 to %class.Quadrature*
  %578 = load i32, i32* %552, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  store i32 %63, i32* %23, align 4
  %579 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %580 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %579, i32 0, i32 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %91
  %_ = sub i64 0, %87
  %gen = add i64 %_, %90
  %581 = add i64 %87, %90
  %582 = trunc i64 %581 to i32
  store i32 %582, i32* %24, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %110
  %583 = bitcast %class.DataOutRotation* %39 to %class.DataOut_DoFData*
  %584 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %583, i32 0, i32 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %144
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %169
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %188
  %585 = landingpad { i8*, i32 }
          cleanup
  %586 = extractvalue { i8*, i32 } %585, 0
  store i8* %586, i8** %20, align 8
  %587 = extractvalue { i8*, i32 } %585, 1
  store i32 %587, i32* %21, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %212
  %588 = landingpad { i8*, i32 }
          cleanup
  %589 = extractvalue { i8*, i32 } %588, 0
  store i8* %589, i8** %20, align 8
  %590 = extractvalue { i8*, i32 } %588, 1
  store i32 %590, i32* %21, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %232
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %269
  %591 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %268, i32 0, i32 1
  store i32 %265, i32* %591, align 4
  %592 = load i32, i32* %23, align 4
  %593 = load i32, i32* %33, align 4
  %594 = zext i32 %593 to i64
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %318
  %595 = load i32, i32* %33, align 4
  %596 = zext i32 %595 to i64
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %343
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %385
  %597 = landingpad { i8*, i32 }
          cleanup
  %598 = extractvalue { i8*, i32 } %597, 0
  store i8* %598, i8** %20, align 8
  %599 = extractvalue { i8*, i32 } %597, 1
  store i32 %599, i32* %21, align 4
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %438
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %458
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %486
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %508
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %525
  br label %originalBB66
}

declare void @_ZN7QTrapezILi1EEC1Ev(%class.QTrapez*) unnamed_addr #2

declare void @_ZN9QIteratedILi3EEC1ERK10QuadratureILi1EEj(%class.QIterated*, %class.Quadrature* dereferenceable(80), i32) unnamed_addr #2

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.DoFHandler* @_ZNK12SmartPointerIK10DoFHandlerILi3EEEptEv(%class.SmartPointer*) #0 comdat align 2 {
  %2 = alloca %class.SmartPointer*, align 8
  store %class.SmartPointer* %0, %class.SmartPointer** %2, align 8
  %3 = load %class.SmartPointer*, %class.SmartPointer** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer, %class.SmartPointer* %3, i32 0, i32 0
  %5 = load %class.DoFHandler*, %class.DoFHandler** %4, align 8
  ret %class.DoFHandler* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler*) #1 comdat align 2 {
  %2 = alloca %class.DoFHandler*, align 8
  store %class.DoFHandler* %0, %class.DoFHandler** %2, align 8
  %3 = load %class.DoFHandler*, %class.DoFHandler** %2, align 8
  %4 = getelementptr inbounds %class.DoFHandler, %class.DoFHandler* %3, i32 0, i32 2
  %5 = call dereferenceable(1160) %class.FiniteElement* @_ZNK12SmartPointerIK13FiniteElementILi3EEEdeEv(%class.SmartPointer.55* %4)
  ret %class.FiniteElement* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData*) #0 comdat align 2 {
  %2 = alloca %class.FiniteElementData*, align 8
  store %class.FiniteElementData* %0, %class.FiniteElementData** %2, align 8
  %3 = load %class.FiniteElementData*, %class.FiniteElementData** %2, align 8
  %4 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %3, i32 0, i32 11
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5boost10shared_ptrIN15DataOut_DoFDataILi3ELi4ELi4EE13DataEntryBaseEEESaIS5_EE4sizeEv(%"class.std::vector.63"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.63"*, align 8
  store %"class.std::vector.63"* %0, %"class.std::vector.63"** %2, align 8
  %3 = load %"class.std::vector.63"*, %"class.std::vector.63"** %2, align 8
  %4 = bitcast %"class.std::vector.63"* %3 to %"struct.std::_Vector_base.64"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.64", %"struct.std::_Vector_base.64"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"** %7, align 8
  %9 = bitcast %"class.std::vector.63"* %3 to %"struct.std::_Vector_base.64"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.64", %"struct.std::_Vector_base.64"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase>, std::allocator<boost::shared_ptr<DataOut_DoFData<3, 4, 4>::DataEntryBase> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"** %12, align 8
  %14 = ptrtoint %"class.boost::shared_ptr"* %8 to i64
  %15 = ptrtoint %"class.boost::shared_ptr"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 16
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EEC2Ev(%"class.std::vector.68"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.11
  %3 = load i32, i32* @y.12
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.68"*, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %10, align 8
  %11 = load %"class.std::vector.68"*, %"class.std::vector.68"** %10, align 8
  %12 = bitcast %"class.std::vector.68"* %11 to %"struct.std::_Vector_base.69"*
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EEC2Ev(%"struct.std::_Vector_base.69"* %12)
  %13 = load i32, i32* @x.11
  %14 = load i32, i32* @y.12
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::vector.68"*, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %21, align 8
  %22 = load %"class.std::vector.68"*, %"class.std::vector.68"** %21, align 8
  %23 = bitcast %"class.std::vector.68"* %22 to %"struct.std::_Vector_base.69"*
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EEC2Ev(%"struct.std::_Vector_base.69"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4swapERS4_(%"class.std::vector.68"*, %"class.std::vector.68"* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.68"*, align 8
  %4 = alloca %"class.std::vector.68"*, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %3, align 8
  store %"class.std::vector.68"* %1, %"class.std::vector.68"** %4, align 8
  %5 = load %"class.std::vector.68"*, %"class.std::vector.68"** %3, align 8
  %6 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %9 = load %"class.std::vector.68"*, %"class.std::vector.68"** %4, align 8
  %10 = bitcast %"class.std::vector.68"* %9 to %"struct.std::_Vector_base.69"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %11 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_swap_dataERS5_(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %8, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* dereferenceable(24) %12)
  %13 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  %14 = call dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %13)
  %15 = load %"class.std::vector.68"*, %"class.std::vector.68"** %4, align 8
  %16 = bitcast %"class.std::vector.68"* %15 to %"struct.std::_Vector_base.69"*
  %17 = call dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %16)
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E10_S_on_swapERS4_S6_(%"class.std::allocator.70"* dereferenceable(1) %14, %"class.std::allocator.70"* dereferenceable(1) %17)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev(%"class.std::vector.68"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.68"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %2, align 8
  %5 = load %"class.std::vector.68"*, %"class.std::vector.68"** %2, align 8
  %6 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %9, align 8
  %11 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %14, align 8
  %16 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.15
  %20 = load i32, i32* @y.16
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.15
  %28 = load i32, i32* @y.16
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RSaIT0_E(%"struct.DataOutBase::Patch"* %10, %"struct.DataOutBase::Patch"* %15, %"class.std::allocator.70"* dereferenceable(1) %17)
          to label %35 unwind label %37

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev(%"struct.std::_Vector_base.69"* %36)
  ret void

; <label>:37:                                     ; preds = %originalBBpart2, %1
  %38 = load i32, i32* @x.15
  %39 = load i32, i32* @y.16
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  %50 = load i32, i32* @x.15
  %51 = load i32, i32* @y.16
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev(%"struct.std::_Vector_base.69"* %49)
          to label %58 unwind label %80

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* @x.15
  %60 = load i32, i32* @y.16
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.15
  %68 = load i32, i32* @y.16
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

; <label>:75:                                     ; preds = %originalBBpart28
  %76 = load i8*, i8** %3, align 8
  %77 = load i32, i32* %4, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  resume { i8*, i32 } %79

; <label>:80:                                     ; preds = %originalBBpart24
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %3, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %4, align 4
  %86 = bitcast %"class.std::vector.68"* %5 to %"struct.std::_Vector_base.69"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #3 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #11
  call void @_ZSt9terminatev() #9
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator*, %class.TriaRawIterator* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %class.TriaRawIterator*, align 8
  %4 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %3, align 8
  store %class.TriaRawIterator* %1, %class.TriaRawIterator** %4, align 8
  %5 = load %class.TriaRawIterator*, %class.TriaRawIterator** %3, align 8
  %6 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %5, i32 0, i32 0
  %7 = bitcast %class.DoFCellAccessor* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to %class.TriaAccessor*
  %10 = load %class.TriaRawIterator*, %class.TriaRawIterator** %4, align 8
  %11 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %10, i32 0, i32 0
  %12 = bitcast %class.DoFCellAccessor* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to %class.TriaAccessor*
  %15 = call zeroext i1 @_ZNK12TriaAccessorILi3EEneERKS0_(%class.TriaAccessor* %9, %class.TriaAccessor* dereferenceable(16) %14)
  ret i1 %15
}

declare void @_ZNK10DoFHandlerILi3EE3endEv(%class.TriaRawIterator* sret, %class.DoFHandler*) #2

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.TriaIterator* @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEaSERKS2_(%class.TriaIterator*, %class.TriaIterator* dereferenceable(24)) #1 comdat align 2 {
  %3 = load i32, i32* @x.21
  %4 = load i32, i32* @y.22
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TriaIterator*, align 8
  %12 = alloca %class.TriaIterator*, align 8
  store %class.TriaIterator* %0, %class.TriaIterator** %11, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %12, align 8
  %13 = load %class.TriaIterator*, %class.TriaIterator** %11, align 8
  %14 = bitcast %class.TriaIterator* %13 to %class.TriaRawIterator*
  %15 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %14, i32 0, i32 0
  %16 = bitcast %class.DoFCellAccessor* %15 to %class.DoFObjectAccessor*
  %17 = load %class.TriaIterator*, %class.TriaIterator** %12, align 8
  %18 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %19 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %18, i32 0, i32 0
  %20 = bitcast %class.DoFCellAccessor* %19 to %class.DoFObjectAccessor*
  call void @_ZN17DoFObjectAccessorILi3ELi3EE9copy_fromERKS0_(%class.DoFObjectAccessor* %16, %class.DoFObjectAccessor* dereferenceable(24) %20)
  %21 = load i32, i32* @x.21
  %22 = load i32, i32* @y.22
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TriaIterator* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %class.TriaIterator*, align 8
  %30 = alloca %class.TriaIterator*, align 8
  store %class.TriaIterator* %0, %class.TriaIterator** %29, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %30, align 8
  %31 = load %class.TriaIterator*, %class.TriaIterator** %29, align 8
  %32 = bitcast %class.TriaIterator* %31 to %class.TriaRawIterator*
  %33 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %32, i32 0, i32 0
  %34 = bitcast %class.DoFCellAccessor* %33 to %class.DoFObjectAccessor*
  %35 = load %class.TriaIterator*, %class.TriaIterator** %30, align 8
  %36 = bitcast %class.TriaIterator* %35 to %class.TriaRawIterator*
  %37 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %36, i32 0, i32 0
  %38 = bitcast %class.DoFCellAccessor* %37 to %class.DoFObjectAccessor*
  call void @_ZN17DoFObjectAccessorILi3ELi3EE9copy_fromERKS0_(%class.DoFObjectAccessor* %34, %class.DoFObjectAccessor* dereferenceable(24) %38)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN15DataOutRotationILi3EE4DataEEC2Ev(%"class.std::allocator.125"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.125"*, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %2, align 8
  %3 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %2, align 8
  %4 = bitcast %"class.std::allocator.125"* %3 to %"class.__gnu_cxx::new_allocator.126"*
  call void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEEC2Ev(%"class.__gnu_cxx::new_allocator.126"* %4) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEC2EmRKS2_RKS3_(%"class.std::vector.123"*, i64, %"struct.DataOutRotation<3>::Data"* dereferenceable(72), %"class.std::allocator.125"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.25
  %6 = load i32, i32* @y.26
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.std::vector.123"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %16 = alloca %"class.std::allocator.125"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.123"* %0, %"class.std::vector.123"** %13, align 8
  store i64 %1, i64* %14, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %15, align 8
  store %"class.std::allocator.125"* %3, %"class.std::allocator.125"** %16, align 8
  %19 = load %"class.std::vector.123"*, %"class.std::vector.123"** %13, align 8
  %20 = bitcast %"class.std::vector.123"* %19 to %"struct.std::_Vector_base.124"*
  %21 = load i64, i64* %14, align 8
  %22 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %16, align 8
  %23 = call i64 @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %21, %"class.std::allocator.125"* dereferenceable(1) %22)
  %24 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %16, align 8
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.124"* %20, i64 %23, %"class.std::allocator.125"* dereferenceable(1) %24)
  %25 = load i64, i64* %14, align 8
  %26 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %27 = load i32, i32* @x.25
  %28 = load i32, i32* @y.26
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE18_M_fill_initializeEmRKS2_(%"class.std::vector.123"* %19, i64 %25, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %26)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* @x.25
  %38 = load i32, i32* @y.26
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %17, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %18, align 4
  %48 = bitcast %"class.std::vector.123"* %19 to %"struct.std::_Vector_base.124"*
  %49 = load i32, i32* @x.25
  %50 = load i32, i32* @y.26
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"struct.std::_Vector_base.124"* %48)
          to label %57 unwind label %79

; <label>:57:                                     ; preds = %originalBBpart24
  %58 = load i32, i32* @x.25
  %59 = load i32, i32* @y.26
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  %66 = load i32, i32* @x.25
  %67 = load i32, i32* @y.26
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

; <label>:74:                                     ; preds = %originalBBpart28
  %75 = load i8*, i8** %17, align 8
  %76 = load i32, i32* %18, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  resume { i8*, i32 } %78

; <label>:79:                                     ; preds = %originalBBpart24
  %80 = load i32, i32* @x.25
  %81 = load i32, i32* @y.26
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  call void @__clang_call_terminate(i8* %89) #9
  %90 = load i32, i32* @x.25
  %91 = load i32, i32* @y.26
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %98 = alloca %"class.std::vector.123"*, align 8
  %99 = alloca i64, align 8
  %100 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %101 = alloca %"class.std::allocator.125"*, align 8
  %102 = alloca i8*
  %103 = alloca i32
  store %"class.std::vector.123"* %0, %"class.std::vector.123"** %98, align 8
  store i64 %1, i64* %99, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %100, align 8
  store %"class.std::allocator.125"* %3, %"class.std::allocator.125"** %101, align 8
  %104 = load %"class.std::vector.123"*, %"class.std::vector.123"** %98, align 8
  %105 = bitcast %"class.std::vector.123"* %104 to %"struct.std::_Vector_base.124"*
  %106 = load i64, i64* %99, align 8
  %107 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %101, align 8
  %108 = call i64 @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %106, %"class.std::allocator.125"* dereferenceable(1) %107)
  %109 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %101, align 8
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.124"* %105, i64 %108, %"class.std::allocator.125"* dereferenceable(1) %109)
  %110 = load i64, i64* %99, align 8
  %111 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %100, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %17, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %18, align 4
  %115 = bitcast %"class.std::vector.123"* %19 to %"struct.std::_Vector_base.124"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  %116 = landingpad { i8*, i32 }
          catch i8* null
  %117 = extractvalue { i8*, i32 } %116, 0
  call void @__clang_call_terminate(i8* %117) #9
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.125"*, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %10, align 8
  %11 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %10, align 8
  %12 = bitcast %"class.std::allocator.125"* %11 to %"class.__gnu_cxx::new_allocator.126"*
  call void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEED2Ev(%"class.__gnu_cxx::new_allocator.126"* %12) #11
  %13 = load i32, i32* @x.27
  %14 = load i32, i32* @y.28
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.125"*, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %21, align 8
  %22 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %21, align 8
  %23 = bitcast %"class.std::allocator.125"* %22 to %"class.__gnu_cxx::new_allocator.126"*
  call void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEED2Ev(%"class.__gnu_cxx::new_allocator.126"* %23) #11
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15DataOutRotationILi3EE4DataD2Ev(%"struct.DataOutRotation<3>::Data"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %10, align 8
  %13 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %10, align 8
  %14 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %13, i32 0, i32 7
  %15 = load i32, i32* @x.29
  %16 = load i32, i32* @y.30
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorI6VectorIdESaIS1_EED2Ev(%"class.std::vector.78"* %14)
          to label %23 unwind label %25

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %13, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.73"* %24)
  ret void

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.29
  %27 = load i32, i32* @y.30
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %11, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %12, align 4
  %37 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %13, i32 0, i32 6
  %38 = load i32, i32* @x.29
  %39 = load i32, i32* @y.30
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.73"* %37)
          to label %46 unwind label %68

; <label>:46:                                     ; preds = %originalBBpart24
  br label %47

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* @x.29
  %49 = load i32, i32* @y.30
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i8*, i8** %11, align 8
  %57 = load i32, i32* %12, align 4
  %58 = insertvalue { i8*, i32 } undef, i8* %56, 0
  %59 = insertvalue { i8*, i32 } %58, i32 %57, 1
  %60 = load i32, i32* @x.29
  %61 = load i32, i32* @y.30
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %59

; <label>:68:                                     ; preds = %originalBBpart24
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  call void @__clang_call_terminate(i8* %70) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %71 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %72 = alloca i8*
  %73 = alloca i32
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %71, align 8
  %74 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %71, align 8
  %75 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %74, i32 0, i32 7
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %11, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %12, align 4
  %79 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %13, i32 0, i32 6
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %80 = load i8*, i8** %11, align 8
  %81 = load i32, i32* %12, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %"struct.DataOutRotation<3>::Data"* @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EEixEm(%"class.std::vector.123"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.123"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.123"* %0, %"class.std::vector.123"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.123"*, %"class.std::vector.123"** %3, align 8
  %6 = bitcast %"class.std::vector.123"* %5 to %"struct.std::_Vector_base.124"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %10, i64 %11
  ret %"struct.DataOutRotation<3>::Data"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.73"*, i64, double) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.73"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %4, align 8
  store i64 %1, i64* %5, align 8
  store double %2, double* %6, align 8
  %8 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %8)
  %11 = icmp ugt i64 %9, %10
  br i1 %11, label %12, label %20

; <label>:12:                                     ; preds = %3
  %13 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.73"* %8)
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %7, i32 0, i32 0
  store double* %13, double** %14, align 8
  %15 = load i64, i64* %5, align 8
  %16 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %8)
  %17 = sub i64 %15, %16
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %7, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  call void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(%"class.std::vector.73"* %8, double* %19, i64 %17, double* dereferenceable(8) %6)
  br label %49

; <label>:20:                                     ; preds = %3
  %21 = load i64, i64* %5, align 8
  %22 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %8)
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %24, label %32

; <label>:24:                                     ; preds = %20
  %25 = bitcast %"class.std::vector.73"* %8 to %"struct.std::_Vector_base.74"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = load i64, i64* %5, align 8
  %31 = getelementptr inbounds double, double* %29, i64 %30
  call void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.73"* %8, double* %31)
  br label %32

; <label>:32:                                     ; preds = %24, %20
  %33 = load i32, i32* @x.33
  %34 = load i32, i32* @y.34
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load i32, i32* @x.33
  %42 = load i32, i32* @y.34
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart2, %12
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %32
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6VectorIdESaIS1_EE6resizeEmS1_(%"class.std::vector.78"*, i64, %class.Vector*) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.78"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.139", align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.78"*, %"class.std::vector.78"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %7)
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %35

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.35
  %13 = load i32, i32* @y.36
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = call %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EE3endEv(%"class.std::vector.78"* %7)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %6, i32 0, i32 0
  store %class.Vector* %20, %class.Vector** %21, align 8
  %22 = load i64, i64* %5, align 8
  %23 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %7)
  %24 = sub i64 %22, %23
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %6, i32 0, i32 0
  %26 = load %class.Vector*, %class.Vector** %25, align 8
  call void @_ZNSt6vectorI6VectorIdESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.78"* %7, %class.Vector* %26, i64 %24, %class.Vector* dereferenceable(24) %2)
  %27 = load i32, i32* @x.35
  %28 = load i32, i32* @y.36
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:35:                                     ; preds = %3
  %36 = load i64, i64* %5, align 8
  %37 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %7)
  %38 = icmp ult i64 %36, %37
  br i1 %38, label %39, label %47

; <label>:39:                                     ; preds = %35
  %40 = bitcast %"class.std::vector.78"* %7 to %"struct.std::_Vector_base.79"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %41 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %42, i32 0, i32 0
  %44 = load %class.Vector*, %class.Vector** %43, align 8
  %45 = load i64, i64* %5, align 8
  %46 = getelementptr inbounds %class.Vector, %class.Vector* %44, i64 %45
  call void @_ZNSt6vectorI6VectorIdESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.78"* %7, %class.Vector* %46)
  br label %47

; <label>:47:                                     ; preds = %39, %35
  br label %48

; <label>:48:                                     ; preds = %47, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %49 = call %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EE3endEv(%"class.std::vector.78"* %7)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %6, i32 0, i32 0
  store %class.Vector* %49, %class.Vector** %50, align 8
  %51 = load i64, i64* %5, align 8
  %52 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %7)
  %_ = sub i64 %51, %52
  %gen = mul i64 %_, %52
  %_1 = shl i64 %51, %52
  %53 = sub i64 %51, %52
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %6, i32 0, i32 0
  %55 = load %class.Vector*, %class.Vector** %54, align 8
  call void @_ZNSt6vectorI6VectorIdESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.78"* %7, %class.Vector* %55, i64 %53, %class.Vector* dereferenceable(24) %2)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6VectorIdEC2Ev(%class.Vector*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  %4 = bitcast %class.Vector* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6VectorIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 3
  store double* null, double** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6VectorIdED2Ev(%class.Vector*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.39
  %3 = load i32, i32* @y.40
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = bitcast %class.Vector* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6VectorIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  %14 = load double*, double** %13, align 8
  %15 = icmp ne double* %14, null
  %16 = load i32, i32* @x.39
  %17 = load i32, i32* @y.40
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %32

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  %26 = load double*, double** %25, align 8
  %27 = icmp eq double* %26, null
  br i1 %27, label %30, label %28

; <label>:28:                                     ; preds = %24
  %29 = bitcast double* %26 to i8*
  call void @_ZdaPv(i8* %29) #12
  br label %30

; <label>:30:                                     ; preds = %28, %24
  %31 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  store double* null, double** %31, align 8
  br label %32

; <label>:32:                                     ; preds = %30, %originalBBpart2
  %33 = load i32, i32* @x.39
  %34 = load i32, i32* @y.40
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* @x.39
  %42 = load i32, i32* @y.40
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %49 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %49, align 8
  %50 = load %class.Vector*, %class.Vector** %49, align 8
  %51 = bitcast %class.Vector* %50 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6VectorIdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %class.Vector, %class.Vector* %50, i32 0, i32 3
  %53 = load double*, double** %52, align 8
  %54 = icmp ne double* %53, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.78"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.78"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.78"*, %"class.std::vector.78"** %3, align 8
  %6 = bitcast %"class.std::vector.78"* %5 to %"struct.std::_Vector_base.79"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Vector*, %class.Vector** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %10, i64 %11
  ret %class.Vector* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6VectorIdE6reinitEjb(%class.Vector*, i32, i1 zeroext) #1 comdat align 2 {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %class.Vector* %0, %class.Vector** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  %8 = load %class.Vector*, %class.Vector** %4, align 8
  %9 = load i32, i32* %5, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %26

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %13 = load double*, double** %12, align 8
  %14 = icmp ne double* %13, null
  br i1 %14, label %15, label %22

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %17 = load double*, double** %16, align 8
  %18 = icmp eq double* %17, null
  br i1 %18, label %21, label %19

; <label>:19:                                     ; preds = %15
  %20 = bitcast double* %17 to i8*
  call void @_ZdaPv(i8* %20) #12
  br label %21

; <label>:21:                                     ; preds = %19, %15
  br label %22

; <label>:22:                                     ; preds = %21, %11
  %23 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* null, double** %23, align 8
  %24 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 0, i32* %25, align 4
  br label %111

; <label>:26:                                     ; preds = %3
  %27 = load i32, i32* @x.43
  %28 = load i32, i32* @y.44
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32, i32* %5, align 4
  %36 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %35, %37
  %39 = load i32, i32* @x.43
  %40 = load i32, i32* @y.44
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %47, label %86

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %49 = load double*, double** %48, align 8
  %50 = icmp ne double* %49, null
  br i1 %50, label %51, label %74

; <label>:51:                                     ; preds = %47
  %52 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %53 = load double*, double** %52, align 8
  %54 = icmp eq double* %53, null
  br i1 %54, label %73, label %55

; <label>:55:                                     ; preds = %51
  %56 = load i32, i32* @x.43
  %57 = load i32, i32* @y.44
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %55, %originalBB1alteredBB
  %64 = bitcast double* %53 to i8*
  call void @_ZdaPv(i8* %64) #12
  %65 = load i32, i32* @x.43
  %66 = load i32, i32* @y.44
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %73

; <label>:73:                                     ; preds = %originalBBpart24, %51
  br label %74

; <label>:74:                                     ; preds = %73, %47
  %75 = load i32, i32* %5, align 4
  %76 = zext i32 %75 to i64
  %77 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %76, i64 8)
  %78 = extractvalue { i64, i1 } %77, 1
  %79 = extractvalue { i64, i1 } %77, 0
  %80 = select i1 %78, i64 -1, i64 %79
  %81 = call i8* @_Znam(i64 %80) #13
  %82 = bitcast i8* %81 to double*
  %83 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* %82, double** %83, align 8
  %84 = load i32, i32* %5, align 4
  %85 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 %84, i32* %85, align 4
  br label %86

; <label>:86:                                     ; preds = %74, %originalBBpart2
  %87 = load i32, i32* %5, align 4
  %88 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 1
  store i32 %87, i32* %88, align 8
  %89 = load i8, i8* %6, align 1
  %90 = trunc i8 %89 to i1
  %91 = zext i1 %90 to i32
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %111

; <label>:93:                                     ; preds = %86
  %94 = load i32, i32* @x.43
  %95 = load i32, i32* @y.44
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %93, %originalBB6alteredBB
  %102 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector* %8, double 0.000000e+00)
  %103 = load i32, i32* @x.43
  %104 = load i32, i32* @y.44
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %111

; <label>:111:                                    ; preds = %originalBBpart28, %86, %22
  %112 = load i32, i32* @x.43
  %113 = load i32, i32* @y.44
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %111, %originalBB10alteredBB
  %120 = load i32, i32* @x.43
  %121 = load i32, i32* @y.44
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %26
  %128 = load i32, i32* %5, align 4
  %129 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp ugt i32 %128, %130
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %132 = bitcast double* %53 to i8*
  call void @_ZdaPv(i8* %132) #12
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %93
  %133 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector* %8, double 0.000000e+00)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %111
  br label %originalBB10
}

declare void @_ZN11DataOutBase5PatchILi4ELi4EEC1Ev(%"struct.DataOutBase::Patch"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EfE6reinitEjj(%class.Table.110*, i32, i32) #1 comdat align 2 {
  %4 = load i32, i32* @x.45
  %5 = load i32, i32* @y.46
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Table.110*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.TableIndices, align 4
  store %class.Table.110* %0, %class.Table.110** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %16 = load %class.Table.110*, %class.Table.110** %12, align 8
  %17 = bitcast %class.Table.110* %16 to %class.TableBase.111*
  %18 = load i32, i32* %13, align 4
  %19 = load i32, i32* %14, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %15, i32 %18, i32 %19)
  call void @_ZN9TableBaseILi2EfE6reinitERK12TableIndicesILi2EE(%class.TableBase.111* %17, %class.TableIndices* dereferenceable(8) %15)
  %20 = load i32, i32* @x.45
  %21 = load i32, i32* @y.46
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Table.110*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %class.TableIndices, align 4
  store %class.Table.110* %0, %class.Table.110** %28, align 8
  store i32 %1, i32* %29, align 4
  store i32 %2, i32* %30, align 4
  %32 = load %class.Table.110*, %class.Table.110** %28, align 8
  %33 = bitcast %class.Table.110* %32 to %class.TableBase.111*
  %34 = load i32, i32* %29, align 4
  %35 = load i32, i32* %30, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %31, i32 %34, i32 %35)
  call void @_ZN9TableBaseILi2EfE6reinitERK12TableIndicesILi2EE(%class.TableBase.111* %33, %class.TableIndices* dereferenceable(8) %31)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.68"*, %"struct.DataOutBase::Patch"*, i64, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::vector.68"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.DataOutBase::Patch"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %10, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"struct.DataOutBase::Patch"* %3, %"struct.DataOutBase::Patch"** %8, align 8
  %11 = load %"class.std::vector.68"*, %"class.std::vector.68"** %6, align 8
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = load i64, i64* %7, align 8
  %15 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %8, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %17 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %16, align 8
  call void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.68"* %11, %"struct.DataOutBase::Patch"* %17, i64 %14, %"struct.DataOutBase::Patch"* dereferenceable(600) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE3endEv(%"class.std::vector.68"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.68"*, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %3, align 8
  %4 = load %"class.std::vector.68"*, %"class.std::vector.68"** %3, align 8
  %5 = bitcast %"class.std::vector.68"* %4 to %"struct.std::_Vector_base.69"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.DataOutBase::Patch"** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %9, align 8
  ret %"struct.DataOutBase::Patch"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15DataOutRotationILi3EE4DataC2ERKS1_(%"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"* dereferenceable(72)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.51
  %4 = load i32, i32* @y.52
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %12 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %11, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %12, align 8
  %15 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %11, align 8
  %16 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %15, i32 0, i32 0
  %17 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %12, align 8
  %18 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %17, i32 0, i32 0
  %19 = bitcast i32* %16 to i8*
  %20 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 24, i32 8, i1 false)
  %21 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %15, i32 0, i32 6
  %22 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %12, align 8
  %23 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %22, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEEC2ERKS1_(%"class.std::vector.73"* %21, %"class.std::vector.73"* dereferenceable(24) %23)
  %24 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %15, i32 0, i32 7
  %25 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %12, align 8
  %26 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %25, i32 0, i32 7
  %27 = load i32, i32* @x.51
  %28 = load i32, i32* @y.52
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorI6VectorIdESaIS1_EEC2ERKS3_(%"class.std::vector.78"* %24, %"class.std::vector.78"* dereferenceable(24) %26)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %13, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %14, align 4
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.73"* %21)
          to label %40 unwind label %46

; <label>:40:                                     ; preds = %36
  br label %41

; <label>:41:                                     ; preds = %40
  %42 = load i8*, i8** %13, align 8
  %43 = load i32, i32* %14, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

; <label>:46:                                     ; preds = %36
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %49 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %50 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %49, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %50, align 8
  %53 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %49, align 8
  %54 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %53, i32 0, i32 0
  %55 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %50, align 8
  %56 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %55, i32 0, i32 0
  %57 = bitcast i32* %54 to i8*
  %58 = bitcast i32* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 24, i32 8, i1 false)
  %59 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %53, i32 0, i32 6
  %60 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %50, align 8
  %61 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %60, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEEC2ERKS1_(%"class.std::vector.73"* %59, %"class.std::vector.73"* dereferenceable(24) %61)
  %62 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %53, i32 0, i32 7
  %63 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %50, align 8
  %64 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %63, i32 0, i32 7
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11DataOutBase5PatchILi4ELi4EED2Ev(%"struct.DataOutBase::Patch"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.53
  %3 = load i32, i32* @y.54
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %10, align 8
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %10, align 8
  %12 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %11, i32 0, i32 4
  call void @_ZN5TableILi2EfED2Ev(%class.Table.110* %12)
  %13 = load i32, i32* @x.53
  %14 = load i32, i32* @y.54
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %21, align 8
  %22 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %21, align 8
  %23 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %22, i32 0, i32 4
  call void @_ZN5TableILi2EfED2Ev(%class.Table.110* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"class.std::vector.123"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.123"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.123"* %0, %"class.std::vector.123"** %2, align 8
  %5 = load %"class.std::vector.123"*, %"class.std::vector.123"** %2, align 8
  %6 = bitcast %"class.std::vector.123"* %5 to %"struct.std::_Vector_base.124"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %9, align 8
  %11 = bitcast %"class.std::vector.123"* %5 to %"struct.std::_Vector_base.124"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %14, align 8
  %16 = bitcast %"class.std::vector.123"* %5 to %"struct.std::_Vector_base.124"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.125"* @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.124"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataES2_EvT_S4_RSaIT0_E(%"struct.DataOutRotation<3>::Data"* %10, %"struct.DataOutRotation<3>::Data"* %15, %"class.std::allocator.125"* dereferenceable(1) %17)
          to label %19 unwind label %37

; <label>:19:                                     ; preds = %18
  %20 = load i32, i32* @x.55
  %21 = load i32, i32* @y.56
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = bitcast %"class.std::vector.123"* %5 to %"struct.std::_Vector_base.124"*
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"struct.std::_Vector_base.124"* %28)
  %29 = load i32, i32* @x.55
  %30 = load i32, i32* @y.56
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:37:                                     ; preds = %18, %1
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %3, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %4, align 4
  %41 = bitcast %"class.std::vector.123"* %5 to %"struct.std::_Vector_base.124"*
  invoke void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"struct.std::_Vector_base.124"* %41)
          to label %42 unwind label %80

; <label>:42:                                     ; preds = %37
  %43 = load i32, i32* @x.55
  %44 = load i32, i32* @y.56
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* @x.55
  %52 = load i32, i32* @y.56
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %59

; <label>:59:                                     ; preds = %originalBBpart24
  %60 = load i32, i32* @x.55
  %61 = load i32, i32* @y.56
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = load i8*, i8** %3, align 8
  %69 = load i32, i32* %4, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  %72 = load i32, i32* @x.55
  %73 = load i32, i32* @y.56
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %71

; <label>:80:                                     ; preds = %37
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %83 = bitcast %"class.std::vector.123"* %5 to %"struct.std::_Vector_base.124"*
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"struct.std::_Vector_base.124"* %83)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %84 = load i8*, i8** %3, align 8
  %85 = load i32, i32* %4, align 4
  %86 = insertvalue { i8*, i32 } undef, i8* %84, 0
  %87 = insertvalue { i8*, i32 } %86, i32 %85, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9QIteratedILi3EED2Ev(%class.QIterated*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.57
  %3 = load i32, i32* @y.58
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.QIterated*, align 8
  store %class.QIterated* %0, %class.QIterated** %10, align 8
  %11 = load %class.QIterated*, %class.QIterated** %10, align 8
  %12 = bitcast %class.QIterated* %11 to %class.Quadrature.121*
  call void @_ZN10QuadratureILi3EED2Ev(%class.Quadrature.121* %12)
  %13 = load i32, i32* @x.57
  %14 = load i32, i32* @y.58
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.QIterated*, align 8
  store %class.QIterated* %0, %class.QIterated** %21, align 8
  %22 = load %class.QIterated*, %class.QIterated** %21, align 8
  %23 = bitcast %class.QIterated* %22 to %class.Quadrature.121*
  call void @_ZN10QuadratureILi3EED2Ev(%class.Quadrature.121* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7QTrapezILi1EED2Ev(%class.QTrapez*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.QTrapez*, align 8
  store %class.QTrapez* %0, %class.QTrapez** %2, align 8
  %3 = load %class.QTrapez*, %class.QTrapez** %2, align 8
  %4 = bitcast %class.QTrapez* %3 to %class.Quadrature*
  call void @_ZN10QuadratureILi1EED2Ev(%class.Quadrature* %4)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE10first_cellEv(%class.TriaIterator* noalias sret, %class.DataOutRotation*) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.DataOutRotation*, align 8
  %12 = alloca %class.TriaActiveIterator, align 8
  store %class.DataOutRotation* %1, %class.DataOutRotation** %11, align 8
  %13 = load %class.DataOutRotation*, %class.DataOutRotation** %11, align 8
  %14 = bitcast %class.DataOutRotation* %13 to %class.DataOut_DoFData*
  %15 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %14, i32 0, i32 1
  %16 = call %class.DoFHandler* @_ZNK12SmartPointerIK10DoFHandlerILi3EEEptEv(%class.SmartPointer* %15)
  call void @_ZNK10DoFHandlerILi3EE12begin_activeEj(%class.TriaActiveIterator* sret %12, %class.DoFHandler* %16, i32 0)
  %17 = bitcast %class.TriaActiveIterator* %12 to %class.TriaIterator*
  call void @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaIterator* %0, %class.TriaIterator* dereferenceable(24) %17)
  %18 = load i32, i32* @x.61
  %19 = load i32, i32* @y.62
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %class.DataOutRotation*, align 8
  %27 = alloca %class.TriaActiveIterator, align 8
  store %class.DataOutRotation* %1, %class.DataOutRotation** %26, align 8
  %28 = load %class.DataOutRotation*, %class.DataOutRotation** %26, align 8
  %29 = bitcast %class.DataOutRotation* %28 to %class.DataOut_DoFData*
  %30 = getelementptr inbounds %class.DataOut_DoFData, %class.DataOut_DoFData* %29, i32 0, i32 1
  %31 = call %class.DoFHandler* @_ZNK12SmartPointerIK10DoFHandlerILi3EEEptEv(%class.SmartPointer* %30)
  call void @_ZNK10DoFHandlerILi3EE12begin_activeEj(%class.TriaActiveIterator* sret %27, %class.DoFHandler* %31, i32 0)
  %32 = bitcast %class.TriaActiveIterator* %27 to %class.TriaIterator*
  call void @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaIterator* %0, %class.TriaIterator* dereferenceable(24) %32)
  br label %originalBB
}

declare void @_ZNK10DoFHandlerILi3EE12begin_activeEj(%class.TriaActiveIterator* sret, %class.DoFHandler*, i32) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaIterator*, %class.TriaIterator* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.TriaIterator*, align 8
  %4 = alloca %class.TriaIterator*, align 8
  %5 = alloca %class.TriaRawIterator, align 8
  store %class.TriaIterator* %0, %class.TriaIterator** %3, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %4, align 8
  %6 = load %class.TriaIterator*, %class.TriaIterator** %3, align 8
  %7 = bitcast %class.TriaIterator* %6 to %class.TriaRawIterator*
  %8 = load %class.TriaIterator*, %class.TriaIterator** %4, align 8
  %9 = bitcast %class.TriaIterator* %8 to %class.TriaRawIterator*
  call void @_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaRawIterator* %5, %class.TriaRawIterator* dereferenceable(24) %9)
  call void @_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaRawIterator* %7, %class.TriaRawIterator* dereferenceable(24) %5)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE9next_cellERK12TriaIteratorILi3E15DoFCellAccessorILi3EEE(%class.TriaIterator* noalias sret, %class.DataOutRotation*, %class.TriaIterator* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %class.DataOutRotation*, align 8
  %5 = alloca %class.TriaIterator*, align 8
  %6 = alloca %class.TriaActiveIterator, align 8
  store %class.DataOutRotation* %1, %class.DataOutRotation** %4, align 8
  store %class.TriaIterator* %2, %class.TriaIterator** %5, align 8
  %7 = load %class.DataOutRotation*, %class.DataOutRotation** %4, align 8
  %8 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  call void @_ZN18TriaActiveIteratorILi3E15DoFCellAccessorILi3EEEC2ERK12TriaIteratorILi3ES1_E(%class.TriaActiveIterator* %6, %class.TriaIterator* dereferenceable(24) %8)
  %9 = call dereferenceable(24) %class.TriaActiveIterator* @_ZN18TriaActiveIteratorILi3E15DoFCellAccessorILi3EEEppEv(%class.TriaActiveIterator* %6)
  %10 = bitcast %class.TriaActiveIterator* %6 to %class.TriaIterator*
  call void @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaIterator* %0, %class.TriaIterator* dereferenceable(24) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18TriaActiveIteratorILi3E15DoFCellAccessorILi3EEEC2ERK12TriaIteratorILi3ES1_E(%class.TriaActiveIterator*, %class.TriaIterator* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.TriaActiveIterator*, align 8
  %4 = alloca %class.TriaIterator*, align 8
  store %class.TriaActiveIterator* %0, %class.TriaActiveIterator** %3, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %4, align 8
  %5 = load %class.TriaActiveIterator*, %class.TriaActiveIterator** %3, align 8
  %6 = bitcast %class.TriaActiveIterator* %5 to %class.TriaIterator*
  %7 = load %class.TriaIterator*, %class.TriaIterator** %4, align 8
  call void @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaIterator* %6, %class.TriaIterator* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.TriaActiveIterator* @_ZN18TriaActiveIteratorILi3E15DoFCellAccessorILi3EEEppEv(%class.TriaActiveIterator*) #1 comdat align 2 {
  %2 = alloca %class.TriaActiveIterator*, align 8
  %3 = alloca %class.TriaActiveIterator*, align 8
  store %class.TriaActiveIterator* %0, %class.TriaActiveIterator** %3, align 8
  %4 = load %class.TriaActiveIterator*, %class.TriaActiveIterator** %3, align 8
  br label %5

; <label>:5:                                      ; preds = %originalBBpart24, %1
  %6 = bitcast %class.TriaActiveIterator* %4 to %class.TriaIterator*
  %7 = call dereferenceable(24) %class.TriaIterator* @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEppEv(%class.TriaIterator* %6)
  %8 = bitcast %class.TriaActiveIterator* %4 to %class.TriaRawIterator*
  %9 = call i32 @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEE5stateEv(%class.TriaRawIterator* %8)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %54

; <label>:11:                                     ; preds = %5
  %12 = load i32, i32* @x.69
  %13 = load i32, i32* @y.70
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = bitcast %class.TriaActiveIterator* %4 to %class.TriaRawIterator*
  %21 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %20, i32 0, i32 0
  %22 = bitcast %class.DoFCellAccessor* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to %class.TriaObjectAccessor*
  %25 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE12has_childrenEv(%class.TriaObjectAccessor* %24)
  %26 = zext i1 %25 to i32
  %27 = icmp eq i32 %26, 0
  %28 = load i32, i32* @x.69
  %29 = load i32, i32* @y.70
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %37

; <label>:36:                                     ; preds = %originalBBpart2
  store %class.TriaActiveIterator* %4, %class.TriaActiveIterator** %2, align 8
  br label %71

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.69
  %39 = load i32, i32* @y.70
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i32, i32* @x.69
  %47 = load i32, i32* @y.70
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %5

; <label>:54:                                     ; preds = %5
  %55 = load i32, i32* @x.69
  %56 = load i32, i32* @y.70
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  store %class.TriaActiveIterator* %4, %class.TriaActiveIterator** %2, align 8
  %63 = load i32, i32* @x.69
  %64 = load i32, i32* @y.70
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71

; <label>:71:                                     ; preds = %originalBBpart28, %36
  %72 = load %class.TriaActiveIterator*, %class.TriaActiveIterator** %2, align 8
  ret %class.TriaActiveIterator* %72

originalBBalteredBB:                              ; preds = %originalBB, %11
  %73 = bitcast %class.TriaActiveIterator* %4 to %class.TriaRawIterator*
  %74 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %73, i32 0, i32 0
  %75 = bitcast %class.DoFCellAccessor* %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = bitcast i8* %76 to %class.TriaObjectAccessor*
  %78 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE12has_childrenEv(%class.TriaObjectAccessor* %77)
  %79 = zext i1 %78 to i32
  %80 = icmp eq i32 %79, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  store %class.TriaActiveIterator* %4, %class.TriaActiveIterator** %2, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsC2Ei(%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, i32) unnamed_addr #1 comdat($_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsC5Ei) align 2 {
  %3 = alloca %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, align 8
  %4 = alloca i32, align 4
  store %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %0, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %3, align 8
  %6 = bitcast %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %5 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %6)
  %7 = bitcast %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions", %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %5, i32 0, i32 1
  %9 = load i32, i32* %4, align 4
  store i32 %9, i32* %8, align 8
  ret void
}

declare void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD2Ev(%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*) unnamed_addr #0 comdat($_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD5Ev) align 2 {
  %2 = load i32, i32* @x.73
  %3 = load i32, i32* @y.74
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, align 8
  store %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %0, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %10, align 8
  %11 = load %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %10, align 8
  %12 = bitcast %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #11
  %13 = load i32, i32* @x.73
  %14 = load i32, i32* @y.74
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, align 8
  store %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %0, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %21, align 8
  %22 = load %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %21, align 8
  %23 = bitcast %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #11
  br label %originalBB
}

; Function Attrs: nounwind
declare void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase*) unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD0Ev(%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*) unnamed_addr #0 comdat($_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD5Ev) align 2 {
  %2 = alloca %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, align 8
  store %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %0, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %2, align 8
  %3 = load %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %2, align 8
  call void @_ZN15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisionsD1Ev(%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %3) #11
  %4 = bitcast %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #5

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15DataOutRotationILi3EE30ExcInvalidNumberOfSubdivisions9PrintInfoERSo(%"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %0, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %5 = load %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"*, %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"** %3, align 8
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i32 0, i32 0))
  %8 = getelementptr inbounds %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions", %"class.DataOutRotation<3>::ExcInvalidNumberOfSubdivisions"* %5, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %7, i32 %9)
  %11 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0))
  %12 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %11, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesC2Ed(%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, double) unnamed_addr #1 comdat($_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesC5Ed) align 2 {
  %3 = alloca %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, align 8
  %4 = alloca double, align 8
  store %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %0, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %3, align 8
  store double %1, double* %4, align 8
  %5 = load %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %3, align 8
  %6 = bitcast %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %5 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %6)
  %7 = bitcast %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues", %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %5, i32 0, i32 1
  %9 = load double, double* %4, align 8
  store double %9, double* %8, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD2Ev(%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*) unnamed_addr #0 comdat($_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD5Ev) align 2 {
  %2 = alloca %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, align 8
  store %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %0, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %2, align 8
  %3 = load %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %2, align 8
  %4 = bitcast %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD0Ev(%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*) unnamed_addr #0 comdat($_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD5Ev) align 2 {
  %2 = alloca %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, align 8
  store %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %0, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %2, align 8
  %3 = load %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %2, align 8
  call void @_ZN15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValuesD1Ev(%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %3) #11
  %4 = bitcast %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15DataOutRotationILi3EE34ExcRadialVariableHasNegativeValues9PrintInfoERSo(%"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %0, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %5 = load %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"*, %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"** %3, align 8
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %6, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0))
  %8 = getelementptr inbounds %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues", %"class.DataOutRotation<3>::ExcRadialVariableHasNegativeValues"* %5, i32 0, i32 1
  %9 = load double, double* %8, align 8
  %10 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"* %7, double %9)
  %11 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %10, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"*, double) #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15DataOutRotationILi3EE4DataC2Ev(%"struct.DataOutRotation<3>::Data"*) unnamed_addr #1 comdat($_ZN15DataOutRotationILi3EE4DataC5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %2, align 8
  %5 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %2, align 8
  %6 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %5, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.73"* %6)
  %7 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %5, i32 0, i32 7
  invoke void @_ZNSt6vectorI6VectorIdESaIS1_EEC2Ev(%"class.std::vector.78"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.73"* %6)
          to label %13 unwind label %19

; <label>:13:                                     ; preds = %9
  br label %14

; <label>:14:                                     ; preds = %13
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* %4, align 4
  %17 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

; <label>:19:                                     ; preds = %9
  %20 = landingpad { i8*, i32 }
          catch i8* null
  %21 = extractvalue { i8*, i32 } %20, 0
  call void @__clang_call_terminate(i8* %21) #9
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.73"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %2, align 8
  %3 = load %"class.std::vector.73"*, %"class.std::vector.73"** %2, align 8
  %4 = bitcast %"class.std::vector.73"* %3 to %"struct.std::_Vector_base.74"*
  call void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.74"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6VectorIdESaIS1_EEC2Ev(%"class.std::vector.78"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.91
  %3 = load i32, i32* @y.92
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %10, align 8
  %11 = load %"class.std::vector.78"*, %"class.std::vector.78"** %10, align 8
  %12 = bitcast %"class.std::vector.78"* %11 to %"struct.std::_Vector_base.79"*
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EEC2Ev(%"struct.std::_Vector_base.79"* %12)
  %13 = load i32, i32* @x.91
  %14 = load i32, i32* @y.92
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %21, align 8
  %22 = load %"class.std::vector.78"*, %"class.std::vector.78"** %21, align 8
  %23 = bitcast %"class.std::vector.78"* %22 to %"struct.std::_Vector_base.79"*
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EEC2Ev(%"struct.std::_Vector_base.79"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.73"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.73"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %10, align 8
  %13 = load %"class.std::vector.73"*, %"class.std::vector.73"** %10, align 8
  %14 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %20 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %21, i32 0, i32 1
  %23 = load double*, double** %22, align 8
  %24 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  %25 = load i32, i32* @x.93
  %26 = load i32, i32* @y.94
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %33 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %24)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %originalBBpart2
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %18, double* %23, %"class.std::allocator.75"* dereferenceable(1) %33)
          to label %35 unwind label %53

; <label>:35:                                     ; preds = %34
  %36 = load i32, i32* @x.93
  %37 = load i32, i32* @y.94
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.74"* %44)
  %45 = load i32, i32* @x.93
  %46 = load i32, i32* @y.94
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:53:                                     ; preds = %34, %originalBBpart2
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %11, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %12, align 4
  %57 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.74"* %57)
          to label %58 unwind label %64

; <label>:58:                                     ; preds = %53
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %11, align 8
  %61 = load i32, i32* %12, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %53
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %67 = alloca %"class.std::vector.73"*, align 8
  %68 = alloca i8*
  %69 = alloca i32
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %67, align 8
  %70 = load %"class.std::vector.73"*, %"class.std::vector.73"** %67, align 8
  %71 = bitcast %"class.std::vector.73"* %70 to %"struct.std::_Vector_base.74"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %72 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %73, i32 0, i32 0
  %75 = load double*, double** %74, align 8
  %76 = bitcast %"class.std::vector.73"* %70 to %"struct.std::_Vector_base.74"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %76, i32 0, i32 0
  %78 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %77 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %78, i32 0, i32 1
  %80 = load double*, double** %79, align 8
  %81 = bitcast %"class.std::vector.73"* %70 to %"struct.std::_Vector_base.74"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %82 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.74"* %82)
  br label %originalBB1
}

declare dereferenceable(24) %"class.std::vector.68"* @_ZNK15DataOut_DoFDataILi3ELi4ELi4EE11get_patchesEv(%class.DataOut_DoFData*) unnamed_addr #2

declare void @_ZNK15DataOut_DoFDataILi3ELi4ELi4EE17get_dataset_namesB5cxx11Ev(%"class.std::vector.128"* sret, %class.DataOut_DoFData*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15DataOutRotationILi3EED2Ev(%class.DataOutRotation*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.DataOutRotation*, align 8
  store %class.DataOutRotation* %0, %class.DataOutRotation** %2, align 8
  %3 = load %class.DataOutRotation*, %class.DataOutRotation** %2, align 8
  %4 = bitcast %class.DataOutRotation* %3 to %class.DataOut_DoFData*
  call void @_ZN15DataOut_DoFDataILi3ELi4ELi4EED2Ev(%class.DataOut_DoFData* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15DataOutRotationILi3EED0Ev(%class.DataOutRotation*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.DataOutRotation*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.DataOutRotation* %0, %class.DataOutRotation** %2, align 8
  %5 = load %class.DataOutRotation*, %class.DataOutRotation** %2, align 8
  invoke void @_ZN15DataOutRotationILi3EED2Ev(%class.DataOutRotation* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.DataOutRotation* %5 to i8*
  call void @_ZdlPv(i8* %7) #12
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.97
  %10 = load i32, i32* @y.98
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %class.DataOutRotation* %5 to i8*
  call void @_ZdlPv(i8* %20) #12
  %21 = load i32, i32* @x.97
  %22 = load i32, i32* @y.98
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %class.DataOutRotation* %5 to i8*
  call void @_ZdlPv(i8* %37) #12
  br label %originalBB
}

declare void @_ZN15DataOut_DoFDataILi3ELi4ELi4EE5clearEv(%class.DataOut_DoFData*) unnamed_addr #2

; Function Attrs: nounwind
declare i8* @_ZNK13ExceptionBase4whatEv(%class.ExceptionBase*) unnamed_addr #4

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6VectorIdESaIS1_EED2Ev(%"class.std::vector.78"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.78"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %2, align 8
  %5 = load %"class.std::vector.78"*, %"class.std::vector.78"** %2, align 8
  %6 = bitcast %"class.std::vector.78"* %5 to %"struct.std::_Vector_base.79"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Vector*, %class.Vector** %9, align 8
  %11 = bitcast %"class.std::vector.78"* %5 to %"struct.std::_Vector_base.79"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %class.Vector*, %class.Vector** %14, align 8
  %16 = bitcast %"class.std::vector.78"* %5 to %"struct.std::_Vector_base.79"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIP6VectorIdES1_EvT_S3_RSaIT0_E(%class.Vector* %10, %class.Vector* %15, %"class.std::allocator.80"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.78"* %5 to %"struct.std::_Vector_base.79"*
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EED2Ev(%"struct.std::_Vector_base.79"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"class.std::vector.78"* %5 to %"struct.std::_Vector_base.79"*
  invoke void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EED2Ev(%"struct.std::_Vector_base.79"* %25)
          to label %26 unwind label %64

; <label>:26:                                     ; preds = %21
  %27 = load i32, i32* @x.99
  %28 = load i32, i32* @y.100
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32, i32* @x.99
  %36 = load i32, i32* @y.100
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i32, i32* @x.99
  %45 = load i32, i32* @y.100
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = load i8*, i8** %3, align 8
  %53 = load i32, i32* %4, align 4
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  %56 = load i32, i32* @x.99
  %57 = load i32, i32* @y.100
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %55

; <label>:64:                                     ; preds = %21
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %26
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %67 = load i8*, i8** %3, align 8
  %68 = load i32, i32* %4, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6VectorIdES1_EvT_S3_RSaIT0_E(%class.Vector*, %class.Vector*, %"class.std::allocator.80"* dereferenceable(1)) #1 comdat {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %"class.std::allocator.80"*, align 8
  store %class.Vector* %0, %class.Vector** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %"class.std::allocator.80"* %2, %"class.std::allocator.80"** %6, align 8
  %7 = load %class.Vector*, %class.Vector** %4, align 8
  %8 = load %class.Vector*, %class.Vector** %5, align 8
  call void @_ZSt8_DestroyIP6VectorIdEEvT_S3_(%class.Vector* %7, %class.Vector* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.103
  %3 = load i32, i32* @y.104
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.79"*, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %10, align 8
  %11 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %12 to %"class.std::allocator.80"*
  %14 = load i32, i32* @x.103
  %15 = load i32, i32* @y.104
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.80"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.79"*, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %22, align 8
  %23 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %24 to %"class.std::allocator.80"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EED2Ev(%"struct.std::_Vector_base.79"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.79"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %10, align 8
  %13 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %class.Vector*, %class.Vector** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %19, i32 0, i32 2
  %21 = load %class.Vector*, %class.Vector** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %22 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %23, i32 0, i32 0
  %25 = load %class.Vector*, %class.Vector** %24, align 8
  %26 = ptrtoint %class.Vector* %21 to i64
  %27 = ptrtoint %class.Vector* %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 24
  %30 = load i32, i32* @x.105
  %31 = load i32, i32* @y.106
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.79"* %13, %class.Vector* %17, i64 %29)
          to label %38 unwind label %56

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* @x.105
  %40 = load i32, i32* @y.106
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %38, %originalBB11alteredBB
  %47 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %47) #11
  %48 = load i32, i32* @x.105
  %49 = load i32, i32* @y.106
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  ret void

; <label>:56:                                     ; preds = %originalBBpart2
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %11, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %12, align 4
  %60 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %60) #11
  br label %61

; <label>:61:                                     ; preds = %56
  %62 = load i8*, i8** %11, align 8
  %63 = load i32, i32* %12, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65

originalBBalteredBB:                              ; preds = %originalBB, %1
  %66 = alloca %"struct.std::_Vector_base.79"*, align 8
  %67 = alloca i8*
  %68 = alloca i32
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %66, align 8
  %69 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %66, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %70 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %71, i32 0, i32 0
  %73 = load %class.Vector*, %class.Vector** %72, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %69, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %74 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %75, i32 0, i32 2
  %77 = load %class.Vector*, %class.Vector** %76, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %69, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %78 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %79, i32 0, i32 0
  %81 = load %class.Vector*, %class.Vector** %80, align 8
  %82 = ptrtoint %class.Vector* %77 to i64
  %83 = ptrtoint %class.Vector* %81 to i64
  %_ = shl i64 %82, %83
  %_1 = sub i64 %82, %83
  %gen = mul i64 %_1, %83
  %_2 = sub i64 0, %82
  %gen3 = add i64 %_2, %83
  %_4 = shl i64 %82, %83
  %84 = sub i64 %82, %83
  %_5 = sub i64 0, %84
  %gen6 = add i64 %_5, 24
  %_7 = shl i64 %84, 24
  %_8 = shl i64 %84, 24
  %_9 = sub i64 0, %84
  %gen10 = add i64 %_9, 24
  %85 = sdiv exact i64 %84, 24
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %38
  %86 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %86) #11
  br label %originalBB11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6VectorIdEEvT_S3_(%class.Vector*, %class.Vector*) #1 comdat {
  %3 = alloca %class.Vector*, align 8
  %4 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %3, align 8
  store %class.Vector* %1, %class.Vector** %4, align 8
  %5 = load %class.Vector*, %class.Vector** %3, align 8
  %6 = load %class.Vector*, %class.Vector** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIP6VectorIdEEEvT_S5_(%class.Vector* %5, %class.Vector* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIP6VectorIdEEEvT_S5_(%class.Vector*, %class.Vector*) #1 comdat align 2 {
  %3 = alloca %class.Vector*, align 8
  %4 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %3, align 8
  store %class.Vector* %1, %class.Vector** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %12, %2
  %6 = load %class.Vector*, %class.Vector** %3, align 8
  %7 = load %class.Vector*, %class.Vector** %4, align 8
  %8 = icmp ne %class.Vector* %6, %7
  br i1 %8, label %9, label %15

; <label>:9:                                      ; preds = %5
  %10 = load %class.Vector*, %class.Vector** %3, align 8
  %11 = call %class.Vector* @_ZSt11__addressofI6VectorIdEEPT_RS2_(%class.Vector* dereferenceable(24) %10)
  call void @_ZSt8_DestroyI6VectorIdEEvPT_(%class.Vector* %11)
  br label %12

; <label>:12:                                     ; preds = %9
  %13 = load %class.Vector*, %class.Vector** %3, align 8
  %14 = getelementptr inbounds %class.Vector, %class.Vector* %13, i32 1
  store %class.Vector* %14, %class.Vector** %3, align 8
  br label %5

; <label>:15:                                     ; preds = %5
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyI6VectorIdEEvPT_(%class.Vector*) #1 comdat {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  %4 = bitcast %class.Vector* %3 to void (%class.Vector*)***
  %5 = load void (%class.Vector*)**, void (%class.Vector*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.Vector*)*, void (%class.Vector*)** %5, i64 0
  %7 = load void (%class.Vector*)*, void (%class.Vector*)** %6, align 8
  call void %7(%class.Vector* %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Vector* @_ZSt11__addressofI6VectorIdEEPT_RS2_(%class.Vector* dereferenceable(24)) #0 comdat {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  ret %class.Vector* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.79"*, %class.Vector*, i64) #1 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.79"*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %4, align 8
  %8 = load %class.Vector*, %class.Vector** %5, align 8
  %9 = icmp ne %class.Vector* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %11 to %"class.std::allocator.80"*
  %13 = load %class.Vector*, %class.Vector** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.80"* dereferenceable(1) %12, %class.Vector* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %3 to %"class.std::allocator.80"*
  call void @_ZNSaI6VectorIdEED2Ev(%"class.std::allocator.80"* %4) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.80"* dereferenceable(1), %class.Vector*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator.80"*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %4, align 8
  %8 = bitcast %"class.std::allocator.80"* %7 to %"class.__gnu_cxx::new_allocator.81"*
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.81"* %8, %class.Vector* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.81"*, %class.Vector*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.81"*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.81"* %0, %"class.__gnu_cxx::new_allocator.81"** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.81"*, %"class.__gnu_cxx::new_allocator.81"** %4, align 8
  %8 = load %class.Vector*, %class.Vector** %5, align 8
  %9 = bitcast %class.Vector* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6VectorIdEED2Ev(%"class.std::allocator.80"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.80"*, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %2, align 8
  %3 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %2, align 8
  %4 = bitcast %"class.std::allocator.80"* %3 to %"class.__gnu_cxx::new_allocator.81"*
  call void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEED2Ev(%"class.__gnu_cxx::new_allocator.81"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEED2Ev(%"class.__gnu_cxx::new_allocator.81"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.81"*, align 8
  store %"class.__gnu_cxx::new_allocator.81"* %0, %"class.__gnu_cxx::new_allocator.81"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.81"*, %"class.__gnu_cxx::new_allocator.81"** %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2ERKS1_(%"class.std::vector.73"*, %"class.std::vector.73"* dereferenceable(24)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.73"*, align 8
  %4 = alloca %"class.std::vector.73"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %3, align 8
  store %"class.std::vector.73"* %1, %"class.std::vector.73"** %4, align 8
  %9 = load %"class.std::vector.73"*, %"class.std::vector.73"** %3, align 8
  %10 = bitcast %"class.std::vector.73"* %9 to %"struct.std::_Vector_base.74"*
  %11 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %12 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %11)
  %13 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %14 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  %15 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %14)
  %16 = call dereferenceable(1) %"class.std::allocator.75"* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_(%"class.std::allocator.75"* dereferenceable(1) %15)
  call void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.74"* %10, i64 %12, %"class.std::allocator.75"* dereferenceable(1) %16)
  %17 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %18 = invoke double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.73"* %17)
          to label %19 unwind label %91

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.127
  %21 = load i32, i32* @y.128
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  store double* %18, double** %28, align 8
  %29 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %30 = load i32, i32* @x.127
  %31 = load i32, i32* @y.128
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %38 = invoke double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.73"* %29)
          to label %39 unwind label %91

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %8, i32 0, i32 0
  store double* %38, double** %40, align 8
  %41 = bitcast %"class.std::vector.73"* %9 to %"struct.std::_Vector_base.74"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load double*, double** %44, align 8
  %46 = bitcast %"class.std::vector.73"* %9 to %"struct.std::_Vector_base.74"*
  %47 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %46)
          to label %48 unwind label %91

; <label>:48:                                     ; preds = %39
  %49 = load i32, i32* @x.127
  %50 = load i32, i32* @y.128
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  %58 = load double*, double** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %8, i32 0, i32 0
  %60 = load double*, double** %59, align 8
  %61 = load i32, i32* @x.127
  %62 = load i32, i32* @y.128
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %69 = invoke double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double* %58, double* %60, double* %45, %"class.std::allocator.75"* dereferenceable(1) %47)
          to label %70 unwind label %91

; <label>:70:                                     ; preds = %originalBBpart24
  %71 = load i32, i32* @x.127
  %72 = load i32, i32* @y.128
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = bitcast %"class.std::vector.73"* %9 to %"struct.std::_Vector_base.74"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %80 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %81, i32 0, i32 1
  store double* %69, double** %82, align 8
  %83 = load i32, i32* @x.127
  %84 = load i32, i32* @y.128
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

; <label>:91:                                     ; preds = %originalBBpart24, %39, %originalBBpart2, %2
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %6, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %7, align 4
  %95 = bitcast %"class.std::vector.73"* %9 to %"struct.std::_Vector_base.74"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.74"* %95)
          to label %96 unwind label %102

; <label>:96:                                     ; preds = %91
  br label %97

; <label>:97:                                     ; preds = %96
  %98 = load i8*, i8** %6, align 8
  %99 = load i32, i32* %7, align 4
  %100 = insertvalue { i8*, i32 } undef, i8* %98, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  resume { i8*, i32 } %101

; <label>:102:                                    ; preds = %91
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  store double* %18, double** %105, align 8
  %106 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  %108 = load double*, double** %107, align 8
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %8, i32 0, i32 0
  %110 = load double*, double** %109, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  %111 = bitcast %"class.std::vector.73"* %9 to %"struct.std::_Vector_base.74"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %111, i32 0, i32 0
  %113 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %112 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %113, i32 0, i32 1
  store double* %69, double** %114, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6VectorIdESaIS1_EEC2ERKS3_(%"class.std::vector.78"*, %"class.std::vector.78"* dereferenceable(24)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.78"*, align 8
  %4 = alloca %"class.std::vector.78"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %3, align 8
  store %"class.std::vector.78"* %1, %"class.std::vector.78"** %4, align 8
  %9 = load %"class.std::vector.78"*, %"class.std::vector.78"** %3, align 8
  %10 = bitcast %"class.std::vector.78"* %9 to %"struct.std::_Vector_base.79"*
  %11 = load %"class.std::vector.78"*, %"class.std::vector.78"** %4, align 8
  %12 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %11)
  %13 = load %"class.std::vector.78"*, %"class.std::vector.78"** %4, align 8
  %14 = bitcast %"class.std::vector.78"* %13 to %"struct.std::_Vector_base.79"*
  %15 = call dereferenceable(1) %"class.std::allocator.80"* @_ZNKSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %14)
  %16 = call dereferenceable(1) %"class.std::allocator.80"* @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E17_S_select_on_copyERKS3_(%"class.std::allocator.80"* dereferenceable(1) %15)
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.79"* %10, i64 %12, %"class.std::allocator.80"* dereferenceable(1) %16)
  %17 = load %"class.std::vector.78"*, %"class.std::vector.78"** %4, align 8
  %18 = invoke %class.Vector* @_ZNKSt6vectorI6VectorIdESaIS1_EE5beginEv(%"class.std::vector.78"* %17)
          to label %19 unwind label %43

; <label>:19:                                     ; preds = %2
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %5, i32 0, i32 0
  store %class.Vector* %18, %class.Vector** %20, align 8
  %21 = load %"class.std::vector.78"*, %"class.std::vector.78"** %4, align 8
  %22 = invoke %class.Vector* @_ZNKSt6vectorI6VectorIdESaIS1_EE3endEv(%"class.std::vector.78"* %21)
          to label %23 unwind label %43

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %8, i32 0, i32 0
  store %class.Vector* %22, %class.Vector** %24, align 8
  %25 = bitcast %"class.std::vector.78"* %9 to %"struct.std::_Vector_base.79"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load %class.Vector*, %class.Vector** %28, align 8
  %30 = bitcast %"class.std::vector.78"* %9 to %"struct.std::_Vector_base.79"*
  %31 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %30)
          to label %32 unwind label %43

; <label>:32:                                     ; preds = %23
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %5, i32 0, i32 0
  %34 = load %class.Vector*, %class.Vector** %33, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %8, i32 0, i32 0
  %36 = load %class.Vector*, %class.Vector** %35, align 8
  %37 = invoke %class.Vector* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%class.Vector* %34, %class.Vector* %36, %class.Vector* %29, %"class.std::allocator.80"* dereferenceable(1) %31)
          to label %38 unwind label %43

; <label>:38:                                     ; preds = %32
  %39 = bitcast %"class.std::vector.78"* %9 to %"struct.std::_Vector_base.79"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %39, i32 0, i32 0
  %41 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %40 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %41, i32 0, i32 1
  store %class.Vector* %37, %class.Vector** %42, align 8
  ret void

; <label>:43:                                     ; preds = %32, %23, %19, %2
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %6, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %7, align 4
  %47 = bitcast %"class.std::vector.78"* %9 to %"struct.std::_Vector_base.79"*
  invoke void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EED2Ev(%"struct.std::_Vector_base.79"* %47)
          to label %48 unwind label %54

; <label>:48:                                     ; preds = %43
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i8*, i8** %6, align 8
  %51 = load i32, i32* %7, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53

; <label>:54:                                     ; preds = %43
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %2, align 8
  %3 = load %"class.std::vector.73"*, %"class.std::vector.73"** %2, align 8
  %4 = bitcast %"class.std::vector.73"* %3 to %"struct.std::_Vector_base.74"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load double*, double** %7, align 8
  %9 = bitcast %"class.std::vector.73"* %3 to %"struct.std::_Vector_base.74"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load double*, double** %12, align 8
  %14 = ptrtoint double* %8 to i64
  %15 = ptrtoint double* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.75"* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_(%"class.std::allocator.75"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.133
  %3 = load i32, i32* @y.134
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %10, align 8
  %11 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %10, align 8
  %12 = load i32, i32* @x.133
  %13 = load i32, i32* @y.134
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.75"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %20, align 8
  %21 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.75"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %2, align 8
  %3 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.75"*
  ret %"class.std::allocator.75"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.74"*, i64, %"class.std::allocator.75"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.74"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.75"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.75"* %2, %"class.std::allocator.75"** %6, align 8
  %9 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %6, align 8
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10, %"class.std::allocator.75"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.74"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.137
  %16 = load i32, i32* @y.138
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %7, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10) #11
  %26 = load i32, i32* @x.137
  %27 = load i32, i32* @y.138
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.137
  %36 = load i32, i32* @y.138
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i8*, i8** %7, align 8
  %44 = load i32, i32* %8, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  %47 = load i32, i32* @x.137
  %48 = load i32, i32* @y.138
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %46

originalBBalteredBB:                              ; preds = %originalBB, %14
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %7, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10) #11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %58 = load i8*, i8** %7, align 8
  %59 = load i32, i32* %8, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double*, double*, double*, %"class.std::allocator.75"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.75"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %6, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load double*, double** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %9, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %10, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = call double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %19, double* %21, double* %17)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.73"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.141
  %3 = load i32, i32* @y.142
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %11 = alloca %"class.std::vector.73"*, align 8
  %12 = alloca double*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %11, align 8
  %13 = load %"class.std::vector.73"*, %"class.std::vector.73"** %11, align 8
  %14 = bitcast %"class.std::vector.73"* %13 to %"struct.std::_Vector_base.74"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  store double* %18, double** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.136"* %10, double** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %10, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = load i32, i32* @x.141
  %22 = load i32, i32* @y.142
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %30 = alloca %"class.std::vector.73"*, align 8
  %31 = alloca double*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %30, align 8
  %32 = load %"class.std::vector.73"*, %"class.std::vector.73"** %30, align 8
  %33 = bitcast %"class.std::vector.73"* %32 to %"struct.std::_Vector_base.74"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %35, i32 0, i32 0
  %37 = load double*, double** %36, align 8
  store double* %37, double** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.136"* %29, double** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %29, i32 0, i32 0
  %39 = load double*, double** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.73"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %3 = alloca %"class.std::vector.73"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %3, align 8
  %5 = load %"class.std::vector.73"*, %"class.std::vector.73"** %3, align 8
  %6 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  store double* %10, double** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.136"* %2, double** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %2, i32 0, i32 0
  %12 = load double*, double** %11, align 8
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %2, align 8
  %3 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.75"*
  ret %"class.std::allocator.75"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.74"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.74"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %2, align 8
  %5 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load double*, double** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = ptrtoint double* %13 to i64
  %19 = ptrtoint double* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.74"* %5, double* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %23) #11
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %28) #11
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"class.std::allocator.75"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.75"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.75"* %1, %"class.std::allocator.75"** %4, align 8
  %7 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"class.std::allocator.75"*
  %9 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %4, align 8
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.75"* %8, %"class.std::allocator.75"* dereferenceable(1) %9) #11
  %10 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"class.std::allocator.75"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.75"* %16) #11
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* @x.149
  %19 = load i32, i32* @y.150
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i8*, i8** %5, align 8
  %27 = load i32, i32* %6, align 4
  %28 = insertvalue { i8*, i32 } undef, i8* %26, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  %30 = load i32, i32* @x.149
  %31 = load i32, i32* @y.150
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %29

originalBBalteredBB:                              ; preds = %originalBB, %17
  %38 = load i8*, i8** %5, align 8
  %39 = load i32, i32* %6, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.74"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.151
  %4 = load i32, i32* @y.152
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.74"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.74"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %17, i32 0, i32 0
  store double* %15, double** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %23 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %24, i32 0, i32 1
  store double* %22, double** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds double, double* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %32 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %33, i32 0, i32 2
  store double* %31, double** %34, align 8
  %35 = load i32, i32* @x.151
  %36 = load i32, i32* @y.152
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.74"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.74"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %49, i32 0, i32 0
  store double* %47, double** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %51 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load double*, double** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %55 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %56, i32 0, i32 1
  store double* %54, double** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load double*, double** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds double, double* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %64 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %65, i32 0, i32 2
  store double* %63, double** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %3 to %"class.std::allocator.75"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.75"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2ERKS_(%"class.std::allocator.75"*, %"class.std::allocator.75"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.75"*, align 8
  %4 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %3, align 8
  store %"class.std::allocator.75"* %1, %"class.std::allocator.75"** %4, align 8
  %5 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %3, align 8
  %6 = bitcast %"class.std::allocator.75"* %5 to %"class.__gnu_cxx::new_allocator.76"*
  %7 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %4, align 8
  %8 = bitcast %"class.std::allocator.75"* %7 to %"class.__gnu_cxx::new_allocator.76"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.76"* %6, %"class.__gnu_cxx::new_allocator.76"* dereferenceable(1) %8) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 0
  store double* null, double** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 1
  store double* null, double** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 2
  store double* null, double** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdED2Ev(%"class.std::allocator.75"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %2, align 8
  %3 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %2, align 8
  %4 = bitcast %"class.std::allocator.75"* %3 to %"class.__gnu_cxx::new_allocator.76"*
  call void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.76"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.161
  %4 = load i32, i32* @y.162
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %12 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %11, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %1, %"class.__gnu_cxx::new_allocator.76"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %11, align 8
  %14 = load i32, i32* @x.161
  %15 = load i32, i32* @y.162
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %23 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %22, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %1, %"class.__gnu_cxx::new_allocator.76"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.76"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.163
  %3 = load i32, i32* @y.164
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %12 = load i32, i32* @x.163
  %13 = load i32, i32* @y.164
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.74"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.74"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.165
  %10 = load i32, i32* @y.166
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %17 to %"class.std::allocator.75"*
  %19 = load i64, i64* %4, align 8
  %20 = call double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.75"* dereferenceable(1) %18, i64 %19)
  %21 = load i32, i32* @x.165
  %22 = load i32, i32* @y.166
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:29:                                     ; preds = %2
  %30 = load i32, i32* @x.165
  %31 = load i32, i32* @y.166
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i32, i32* @x.165
  %39 = load i32, i32* @y.166
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24, %originalBBpart2
  %47 = phi double* [ %20, %originalBBpart2 ], [ null, %originalBBpart24 ]
  %48 = load i32, i32* @x.165
  %49 = load i32, i32* @y.166
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %56 = load i32, i32* @x.165
  %57 = load i32, i32* @y.166
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret double* %47

originalBBalteredBB:                              ; preds = %originalBB, %8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %64 to %"class.std::allocator.75"*
  %66 = load i64, i64* %4, align 8
  %67 = call double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.75"* dereferenceable(1) %65, i64 %66)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.75"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.167
  %4 = load i32, i32* @y.168
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.75"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %11, align 8
  %14 = bitcast %"class.std::allocator.75"* %13 to %"class.__gnu_cxx::new_allocator.76"*
  %15 = load i64, i64* %12, align 8
  %16 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.76"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.167
  %18 = load i32, i32* @y.168
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.75"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %25, align 8
  %28 = bitcast %"class.std::allocator.75"* %27 to %"class.__gnu_cxx::new_allocator.76"*
  %29 = load i64, i64* %26, align 8
  %30 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.76"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.76"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.76"* %7) #11
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.169
  %14 = load i32, i32* @y.170
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 8
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to double*
  %25 = load i32, i32* @x.169
  %26 = load i32, i32* @y.170
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = sub i64 0, %33
  %gen = add i64 %_, 8
  %_1 = sub i64 %33, 8
  %gen2 = mul i64 %_1, 8
  %_3 = sub i64 %33, 8
  %gen4 = mul i64 %_3, 8
  %_5 = shl i64 %33, 8
  %_6 = sub i64 0, %33
  %gen7 = add i64 %_6, 8
  %_8 = sub i64 0, %33
  %gen9 = add i64 %_8, 8
  %_10 = sub i64 0, %33
  %gen11 = add i64 %_10, 8
  %34 = mul i64 %33, 8
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to double*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.76"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #7

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #8

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #1 comdat {
  %4 = load i32, i32* @x.173
  %5 = load i32, i32* @y.174
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %14 = alloca double*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %12, i32 0, i32 0
  store double* %0, double** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %13, i32 0, i32 0
  store double* %1, double** %19, align 8
  store double* %2, double** %14, align 8
  store i8 1, i8* %15, align 1
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %16 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %17 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load double*, double** %14, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %16, i32 0, i32 0
  %26 = load double*, double** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %17, i32 0, i32 0
  %28 = load double*, double** %27, align 8
  %29 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double* %26, double* %28, double* %24)
  %30 = load i32, i32* @x.173
  %31 = load i32, i32* @y.174
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %29

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %40 = alloca double*, align 8
  %41 = alloca i8, align 1
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %38, i32 0, i32 0
  store double* %0, double** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %39, i32 0, i32 0
  store double* %1, double** %45, align 8
  store double* %2, double** %40, align 8
  store i8 1, i8* %41, align 1
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %42 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %43 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = load double*, double** %40, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %42, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %43, i32 0, i32 0
  %54 = load double*, double** %53, align 8
  %55 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double* %52, double* %54, double* %50)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double*, double*, double*) #1 comdat align 2 {
  %4 = load i32, i32* @x.175
  %5 = load i32, i32* @y.176
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %14 = alloca double*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %12, i32 0, i32 0
  store double* %0, double** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %13, i32 0, i32 0
  store double* %1, double** %18, align 8
  store double* %2, double** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = load double*, double** %14, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %15, i32 0, i32 0
  %25 = load double*, double** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %16, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %25, double* %27, double* %23)
  %29 = load i32, i32* @x.175
  %30 = load i32, i32* @y.176
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %28

originalBBalteredBB:                              ; preds = %originalBB, %3
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %39 = alloca double*, align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %37, i32 0, i32 0
  store double* %0, double** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %38, i32 0, i32 0
  store double* %1, double** %43, align 8
  store double* %2, double** %39, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %40 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %41 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = load double*, double** %39, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %40, i32 0, i32 0
  %50 = load double*, double** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %41, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %50, double* %52, double* %48)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %4, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %8, i32 0, i32 0
  %16 = load double*, double** %15, align 8
  %17 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %7, i32 0, i32 0
  store double* %17, double** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %10, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %9, i32 0, i32 0
  store double* %23, double** %24, align 8
  %25 = load double*, double** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %7, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %9, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = call double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double* %27, double* %29, double* %25)
  ret double* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double*, double*, double*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %7, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %19)
  %21 = load double*, double** %6, align 8
  %22 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %21)
  %23 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %15, double* %20, double* %22)
  %24 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %23)
  ret double* %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %3, i32 0, i32 0
  store double* %0, double** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.136"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %2, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  ret double* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8), double*) #0 comdat {
  %3 = alloca double**, align 8
  %4 = alloca double*, align 8
  store double** %0, double*** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.136", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %2, i32 0, i32 0
  store double* %0, double** %3, align 8
  %4 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.136"* %2)
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdET_S1_(double*) #0 comdat {
  %2 = load i32, i32* @x.189
  %3 = load i32, i32* @y.190
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca double*, align 8
  store double* %0, double** %10, align 8
  %11 = load double*, double** %10, align 8
  %12 = load i32, i32* @x.189
  %13 = load i32, i32* @y.190
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca double*, align 8
  store double* %0, double** %20, align 8
  %21 = load double*, double** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #0 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double*, double** %4, align 8
  %10 = ptrtoint double* %8 to i64
  %11 = ptrtoint double* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load double*, double** %6, align 8
  %18 = bitcast double* %17 to i8*
  %19 = load double*, double** %4, align 8
  %20 = bitcast double* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 8, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load double*, double** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.136"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.136"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.136"* %0, %"class.__gnu_cxx::__normal_iterator.136"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.136"*, %"class.__gnu_cxx::__normal_iterator.136"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %3, i32 0, i32 0
  ret double** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.136"*, double** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.136"*, align 8
  %4 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.136"* %0, %"class.__gnu_cxx::__normal_iterator.136"** %3, align 8
  store double** %1, double*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.136"*, %"class.__gnu_cxx::__normal_iterator.136"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.136", %"class.__gnu_cxx::__normal_iterator.136"* %5, i32 0, i32 0
  %7 = load double**, double*** %4, align 8
  %8 = load double*, double** %7, align 8
  store double* %8, double** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.74"*, double*, i64) #1 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.74"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = icmp ne double* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %11 to %"class.std::allocator.75"*
  %13 = load double*, double** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.75"* dereferenceable(1) %12, double* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.75"* dereferenceable(1), double*, i64) #1 comdat align 2 {
  %4 = load i32, i32* @x.199
  %5 = load i32, i32* @y.200
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.75"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %12, align 8
  %16 = bitcast %"class.std::allocator.75"* %15 to %"class.__gnu_cxx::new_allocator.76"*
  %17 = load double*, double** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.76"* %16, double* %17, i64 %18)
  %19 = load i32, i32* @x.199
  %20 = load i32, i32* @y.200
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.75"*, align 8
  %28 = alloca double*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %27, align 8
  store double* %1, double** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %27, align 8
  %31 = bitcast %"class.std::allocator.75"* %30 to %"class.__gnu_cxx::new_allocator.76"*
  %32 = load double*, double** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.76"* %31, double* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.76"*, double*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %2, align 8
  %3 = load %"class.std::vector.78"*, %"class.std::vector.78"** %2, align 8
  %4 = bitcast %"class.std::vector.78"* %3 to %"struct.std::_Vector_base.79"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Vector*, %class.Vector** %7, align 8
  %9 = bitcast %"class.std::vector.78"* %3 to %"struct.std::_Vector_base.79"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Vector*, %class.Vector** %12, align 8
  %14 = ptrtoint %class.Vector* %8 to i64
  %15 = ptrtoint %class.Vector* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.80"* @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E17_S_select_on_copyERKS3_(%"class.std::allocator.80"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.80"*, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %2, align 8
  %3 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %2, align 8
  ret %"class.std::allocator.80"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.80"* @_ZNKSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.79"*, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %2, align 8
  %3 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %4 to %"class.std::allocator.80"*
  ret %"class.std::allocator.80"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.79"*, i64, %"class.std::allocator.80"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.209
  %5 = load i32, i32* @y.210
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.79"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::allocator.80"*, align 8
  %15 = alloca i8*
  %16 = alloca i32
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::allocator.80"* %2, %"class.std::allocator.80"** %14, align 8
  %17 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %12, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %17, i32 0, i32 0
  %19 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %14, align 8
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %18, %"class.std::allocator.80"* dereferenceable(1) %19)
  %20 = load i64, i64* %13, align 8
  %21 = load i32, i32* @x.209
  %22 = load i32, i32* @y.210
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.79"* %17, i64 %20)
          to label %29 unwind label %46

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.209
  %31 = load i32, i32* @y.210
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i32, i32* @x.209
  %39 = load i32, i32* @y.210
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:46:                                     ; preds = %originalBBpart2
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %15, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %16, align 4
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %18) #11
  br label %50

; <label>:50:                                     ; preds = %46
  %51 = load i32, i32* @x.209
  %52 = load i32, i32* @y.210
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i8*, i8** %15, align 8
  %60 = load i32, i32* %16, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  %63 = load i32, i32* @x.209
  %64 = load i32, i32* @y.210
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %62

originalBBalteredBB:                              ; preds = %originalBB, %3
  %71 = alloca %"struct.std::_Vector_base.79"*, align 8
  %72 = alloca i64, align 8
  %73 = alloca %"class.std::allocator.80"*, align 8
  %74 = alloca i8*
  %75 = alloca i32
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %71, align 8
  store i64 %1, i64* %72, align 8
  store %"class.std::allocator.80"* %2, %"class.std::allocator.80"** %73, align 8
  %76 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %71, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %76, i32 0, i32 0
  %78 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %73, align 8
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %77, %"class.std::allocator.80"* dereferenceable(1) %78)
  %79 = load i64, i64* %72, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %80 = load i8*, i8** %15, align 8
  %81 = load i32, i32* %16, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%class.Vector*, %class.Vector*, %class.Vector*, %"class.std::allocator.80"* dereferenceable(1)) #1 comdat {
  %5 = load i32, i32* @x.211
  %6 = load i32, i32* @y.212
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %15 = alloca %class.Vector*, align 8
  %16 = alloca %"class.std::allocator.80"*, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %13, i32 0, i32 0
  store %class.Vector* %0, %class.Vector** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %14, i32 0, i32 0
  store %class.Vector* %1, %class.Vector** %20, align 8
  store %class.Vector* %2, %class.Vector** %15, align 8
  store %"class.std::allocator.80"* %3, %"class.std::allocator.80"** %16, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %17 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %18 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load %class.Vector*, %class.Vector** %15, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %17, i32 0, i32 0
  %27 = load %class.Vector*, %class.Vector** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %18, i32 0, i32 0
  %29 = load %class.Vector*, %class.Vector** %28, align 8
  %30 = call %class.Vector* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%class.Vector* %27, %class.Vector* %29, %class.Vector* %25)
  %31 = load i32, i32* @x.211
  %32 = load i32, i32* @y.212
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %30

originalBBalteredBB:                              ; preds = %originalBB, %4
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %41 = alloca %class.Vector*, align 8
  %42 = alloca %"class.std::allocator.80"*, align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %39, i32 0, i32 0
  store %class.Vector* %0, %class.Vector** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %40, i32 0, i32 0
  store %class.Vector* %1, %class.Vector** %46, align 8
  store %class.Vector* %2, %class.Vector** %41, align 8
  store %"class.std::allocator.80"* %3, %"class.std::allocator.80"** %42, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %43 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %44 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load %class.Vector*, %class.Vector** %41, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %43, i32 0, i32 0
  %53 = load %class.Vector*, %class.Vector** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %44, i32 0, i32 0
  %55 = load %class.Vector*, %class.Vector** %54, align 8
  %56 = call %class.Vector* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%class.Vector* %53, %class.Vector* %55, %class.Vector* %51)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNKSt6vectorI6VectorIdESaIS1_EE5beginEv(%"class.std::vector.78"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.213
  %3 = load i32, i32* @y.214
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %11 = alloca %"class.std::vector.78"*, align 8
  %12 = alloca %class.Vector*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %11, align 8
  %13 = load %"class.std::vector.78"*, %"class.std::vector.78"** %11, align 8
  %14 = bitcast %"class.std::vector.78"* %13 to %"struct.std::_Vector_base.79"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Vector*, %class.Vector** %17, align 8
  store %class.Vector* %18, %class.Vector** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.137"* %10, %class.Vector** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %10, i32 0, i32 0
  %20 = load %class.Vector*, %class.Vector** %19, align 8
  %21 = load i32, i32* @x.213
  %22 = load i32, i32* @y.214
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %30 = alloca %"class.std::vector.78"*, align 8
  %31 = alloca %class.Vector*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %30, align 8
  %32 = load %"class.std::vector.78"*, %"class.std::vector.78"** %30, align 8
  %33 = bitcast %"class.std::vector.78"* %32 to %"struct.std::_Vector_base.79"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %34 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %35, i32 0, i32 0
  %37 = load %class.Vector*, %class.Vector** %36, align 8
  store %class.Vector* %37, %class.Vector** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.137"* %29, %class.Vector** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %29, i32 0, i32 0
  %39 = load %class.Vector*, %class.Vector** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNKSt6vectorI6VectorIdESaIS1_EE3endEv(%"class.std::vector.78"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.215
  %3 = load i32, i32* @y.216
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %11 = alloca %"class.std::vector.78"*, align 8
  %12 = alloca %class.Vector*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %11, align 8
  %13 = load %"class.std::vector.78"*, %"class.std::vector.78"** %11, align 8
  %14 = bitcast %"class.std::vector.78"* %13 to %"struct.std::_Vector_base.79"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %16, i32 0, i32 1
  %18 = load %class.Vector*, %class.Vector** %17, align 8
  store %class.Vector* %18, %class.Vector** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.137"* %10, %class.Vector** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %10, i32 0, i32 0
  %20 = load %class.Vector*, %class.Vector** %19, align 8
  %21 = load i32, i32* @x.215
  %22 = load i32, i32* @y.216
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %30 = alloca %"class.std::vector.78"*, align 8
  %31 = alloca %class.Vector*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %30, align 8
  %32 = load %"class.std::vector.78"*, %"class.std::vector.78"** %30, align 8
  %33 = bitcast %"class.std::vector.78"* %32 to %"struct.std::_Vector_base.79"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %34 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %35, i32 0, i32 1
  %37 = load %class.Vector*, %class.Vector** %36, align 8
  store %class.Vector* %37, %class.Vector** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.137"* %29, %class.Vector** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %29, i32 0, i32 0
  %39 = load %class.Vector*, %class.Vector** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*, %"class.std::allocator.80"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.80"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.80"* %1, %"class.std::allocator.80"** %4, align 8
  %7 = load %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %7 to %"class.std::allocator.80"*
  %9 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %4, align 8
  call void @_ZNSaI6VectorIdEEC2ERKS1_(%"class.std::allocator.80"* %8, %"class.std::allocator.80"* dereferenceable(1) %9) #11
  %10 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %7 to %"class.std::allocator.80"*
  call void @_ZNSaI6VectorIdEED2Ev(%"class.std::allocator.80"* %16) #11
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.79"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.219
  %4 = load i32, i32* @y.220
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.79"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call %class.Vector* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.79"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %16 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %17, i32 0, i32 0
  store %class.Vector* %15, %class.Vector** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load %class.Vector*, %class.Vector** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %23 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %class.Vector* %22, %class.Vector** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load %class.Vector*, %class.Vector** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds %class.Vector, %class.Vector* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %32 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %33, i32 0, i32 2
  store %class.Vector* %31, %class.Vector** %34, align 8
  %35 = load i32, i32* @x.219
  %36 = load i32, i32* @y.220
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.79"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call %class.Vector* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.79"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %48 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %49, i32 0, i32 0
  store %class.Vector* %47, %class.Vector** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %51 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load %class.Vector*, %class.Vector** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %55 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %56, i32 0, i32 1
  store %class.Vector* %54, %class.Vector** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %58 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load %class.Vector*, %class.Vector** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds %class.Vector, %class.Vector* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %64 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %65, i32 0, i32 2
  store %class.Vector* %63, %class.Vector** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6VectorIdEEC2ERKS1_(%"class.std::allocator.80"*, %"class.std::allocator.80"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.221
  %4 = load i32, i32* @y.222
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.80"*, align 8
  %12 = alloca %"class.std::allocator.80"*, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %11, align 8
  store %"class.std::allocator.80"* %1, %"class.std::allocator.80"** %12, align 8
  %13 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %11, align 8
  %14 = bitcast %"class.std::allocator.80"* %13 to %"class.__gnu_cxx::new_allocator.81"*
  %15 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %12, align 8
  %16 = bitcast %"class.std::allocator.80"* %15 to %"class.__gnu_cxx::new_allocator.81"*
  call void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.81"* %14, %"class.__gnu_cxx::new_allocator.81"* dereferenceable(1) %16) #11
  %17 = load i32, i32* @x.221
  %18 = load i32, i32* @y.222
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.80"*, align 8
  %26 = alloca %"class.std::allocator.80"*, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %25, align 8
  store %"class.std::allocator.80"* %1, %"class.std::allocator.80"** %26, align 8
  %27 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %25, align 8
  %28 = bitcast %"class.std::allocator.80"* %27 to %"class.__gnu_cxx::new_allocator.81"*
  %29 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %26, align 8
  %30 = bitcast %"class.std::allocator.80"* %29 to %"class.__gnu_cxx::new_allocator.81"*
  call void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.81"* %28, %"class.__gnu_cxx::new_allocator.81"* dereferenceable(1) %30) #11
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.223
  %3 = load i32, i32* @y.224
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %11, i32 0, i32 0
  store %class.Vector* null, %class.Vector** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %11, i32 0, i32 1
  store %class.Vector* null, %class.Vector** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %11, i32 0, i32 2
  store %class.Vector* null, %class.Vector** %14, align 8
  %15 = load i32, i32* @x.223
  %16 = load i32, i32* @y.224
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %24, i32 0, i32 0
  store %class.Vector* null, %class.Vector** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %class.Vector* null, %class.Vector** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %24, i32 0, i32 2
  store %class.Vector* null, %class.Vector** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.81"*, %"class.__gnu_cxx::new_allocator.81"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.81"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.81"*, align 8
  store %"class.__gnu_cxx::new_allocator.81"* %0, %"class.__gnu_cxx::new_allocator.81"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.81"* %1, %"class.__gnu_cxx::new_allocator.81"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.81"*, %"class.__gnu_cxx::new_allocator.81"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.79"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.79"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.227
  %10 = load i32, i32* @y.228
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %5, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %17 to %"class.std::allocator.80"*
  %19 = load i64, i64* %4, align 8
  %20 = call %class.Vector* @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E8allocateERS3_m(%"class.std::allocator.80"* dereferenceable(1) %18, i64 %19)
  %21 = load i32, i32* @x.227
  %22 = load i32, i32* @y.228
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:29:                                     ; preds = %2
  br label %30

; <label>:30:                                     ; preds = %29, %originalBBpart2
  %31 = phi %class.Vector* [ %20, %originalBBpart2 ], [ null, %29 ]
  ret %class.Vector* %31

originalBBalteredBB:                              ; preds = %originalBB, %8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %5, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %32 to %"class.std::allocator.80"*
  %34 = load i64, i64* %4, align 8
  %35 = call %class.Vector* @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E8allocateERS3_m(%"class.std::allocator.80"* dereferenceable(1) %33, i64 %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E8allocateERS3_m(%"class.std::allocator.80"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.80"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %3, align 8
  %6 = bitcast %"class.std::allocator.80"* %5 to %"class.__gnu_cxx::new_allocator.81"*
  %7 = load i64, i64* %4, align 8
  %8 = call %class.Vector* @_ZN9__gnu_cxx13new_allocatorI6VectorIdEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.81"* %6, i64 %7, i8* null)
  ret %class.Vector* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZN9__gnu_cxx13new_allocatorI6VectorIdEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.81"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.81"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.81"* %0, %"class.__gnu_cxx::new_allocator.81"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.81"*, %"class.__gnu_cxx::new_allocator.81"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6VectorIdEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.81"* %7) #11
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 24
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to %class.Vector*
  ret %class.Vector* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI6VectorIdEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.81"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.81"*, align 8
  store %"class.__gnu_cxx::new_allocator.81"* %0, %"class.__gnu_cxx::new_allocator.81"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.81"*, %"class.__gnu_cxx::new_allocator.81"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %4, i32 0, i32 0
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %5, i32 0, i32 0
  store %class.Vector* %1, %class.Vector** %11, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.137"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %class.Vector*, %class.Vector** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %8, i32 0, i32 0
  %18 = load %class.Vector*, %class.Vector** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %9, i32 0, i32 0
  %20 = load %class.Vector*, %class.Vector** %19, align 8
  %21 = call %class.Vector* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%class.Vector* %18, %class.Vector* %20, %class.Vector* %16)
  ret %class.Vector* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.137", align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %4, i32 0, i32 0
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %5, i32 0, i32 0
  store %class.Vector* %1, %class.Vector** %11, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %12 = load %class.Vector*, %class.Vector** %6, align 8
  store %class.Vector* %12, %class.Vector** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %89, %3
  %14 = load i32, i32* @x.237
  %15 = load i32, i32* @y.238
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.237
  %23 = load i32, i32* @y.238
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %30 = invoke zeroext i1 @_ZN9__gnu_cxxneIPK6VectorIdESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.137"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.137"* dereferenceable(8) %5)
          to label %31 unwind label %92

; <label>:31:                                     ; preds = %originalBBpart2
  br i1 %30, label %32, label %102

; <label>:32:                                     ; preds = %31
  %33 = load i32, i32* @x.237
  %34 = load i32, i32* @y.238
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %class.Vector*, %class.Vector** %7, align 8
  %42 = load i32, i32* @x.237
  %43 = load i32, i32* @y.238
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %50 = invoke %class.Vector* @_ZSt11__addressofI6VectorIdEEPT_RS2_(%class.Vector* dereferenceable(24) %41)
          to label %51 unwind label %92

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = load i32, i32* @x.237
  %53 = load i32, i32* @y.238
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* @x.237
  %61 = load i32, i32* @y.238
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %68 = invoke dereferenceable(24) %class.Vector* @_ZNK9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.137"* %4)
          to label %69 unwind label %92

; <label>:69:                                     ; preds = %originalBBpart28
  invoke void @_ZSt10_ConstructI6VectorIdES1_EvPT_RKT0_(%class.Vector* %50, %class.Vector* dereferenceable(24) %68)
          to label %70 unwind label %92

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* @x.237
  %72 = load i32, i32* @y.238
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %70, %originalBB10alteredBB
  %79 = load i32, i32* @x.237
  %80 = load i32, i32* @y.238
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %87

; <label>:87:                                     ; preds = %originalBBpart212
  %88 = invoke dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.137"* @_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.137"* %4)
          to label %89 unwind label %92

; <label>:89:                                     ; preds = %87
  %90 = load %class.Vector*, %class.Vector** %7, align 8
  %91 = getelementptr inbounds %class.Vector, %class.Vector* %90, i32 1
  store %class.Vector* %91, %class.Vector** %7, align 8
  br label %13

; <label>:92:                                     ; preds = %87, %69, %originalBBpart28, %originalBBpart24, %originalBBpart2
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %8, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %9, align 4
  br label %96

; <label>:96:                                     ; preds = %92
  %97 = load i8*, i8** %8, align 8
  %98 = call i8* @__cxa_begin_catch(i8* %97) #11
  %99 = load %class.Vector*, %class.Vector** %6, align 8
  %100 = load %class.Vector*, %class.Vector** %7, align 8
  invoke void @_ZSt8_DestroyIP6VectorIdEEvT_S3_(%class.Vector* %99, %class.Vector* %100)
          to label %101 unwind label %104

; <label>:101:                                    ; preds = %96
  invoke void @__cxa_rethrow() #14
          to label %150 unwind label %104

; <label>:102:                                    ; preds = %31
  %103 = load %class.Vector*, %class.Vector** %7, align 8
  ret %class.Vector* %103

; <label>:104:                                    ; preds = %101, %96
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %8, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %108 unwind label %131

; <label>:108:                                    ; preds = %104
  br label %126
                                                  ; No predecessors!
  %110 = load i32, i32* @x.237
  %111 = load i32, i32* @y.238
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %109, %originalBB14alteredBB
  call void @llvm.trap()
  %118 = load i32, i32* @x.237
  %119 = load i32, i32* @y.238
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

; <label>:126:                                    ; preds = %108
  %127 = load i8*, i8** %8, align 8
  %128 = load i32, i32* %9, align 4
  %129 = insertvalue { i8*, i32 } undef, i8* %127, 0
  %130 = insertvalue { i8*, i32 } %129, i32 %128, 1
  resume { i8*, i32 } %130

; <label>:131:                                    ; preds = %104
  %132 = load i32, i32* @x.237
  %133 = load i32, i32* @y.238
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %131, %originalBB18alteredBB
  %140 = landingpad { i8*, i32 }
          catch i8* null
  %141 = extractvalue { i8*, i32 } %140, 0
  call void @__clang_call_terminate(i8* %141) #9
  %142 = load i32, i32* @x.237
  %143 = load i32, i32* @y.238
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

; <label>:150:                                    ; preds = %101
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %151 = load %class.Vector*, %class.Vector** %7, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %109
  call void @llvm.trap()
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %131
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  call void @__clang_call_terminate(i8* %153) #9
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPK6VectorIdESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.137"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.137"* dereferenceable(8)) #1 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.137"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.137"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.137"* %0, %"class.__gnu_cxx::__normal_iterator.137"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.137"* %1, %"class.__gnu_cxx::__normal_iterator.137"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.137"*, %"class.__gnu_cxx::__normal_iterator.137"** %3, align 8
  %6 = call dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.137"* %5)
  %7 = load %class.Vector*, %class.Vector** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.137"*, %"class.__gnu_cxx::__normal_iterator.137"** %4, align 8
  %9 = call dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.137"* %8)
  %10 = load %class.Vector*, %class.Vector** %9, align 8
  %11 = icmp ne %class.Vector* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI6VectorIdES1_EvPT_RKT0_(%class.Vector*, %class.Vector* dereferenceable(24)) #1 comdat {
  %3 = load i32, i32* @x.241
  %4 = load i32, i32* @y.242
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Vector*, align 8
  %12 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %11, align 8
  store %class.Vector* %1, %class.Vector** %12, align 8
  %13 = load %class.Vector*, %class.Vector** %11, align 8
  %14 = bitcast %class.Vector* %13 to i8*
  %15 = bitcast i8* %14 to %class.Vector*
  %16 = load %class.Vector*, %class.Vector** %12, align 8
  call void @_ZN6VectorIdEC1ERKS0_(%class.Vector* %15, %class.Vector* dereferenceable(24) %16)
  %17 = load i32, i32* @x.241
  %18 = load i32, i32* @y.242
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %class.Vector*, align 8
  %26 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %25, align 8
  store %class.Vector* %1, %class.Vector** %26, align 8
  %27 = load %class.Vector*, %class.Vector** %25, align 8
  %28 = bitcast %class.Vector* %27 to i8*
  %29 = bitcast i8* %28 to %class.Vector*
  %30 = load %class.Vector*, %class.Vector** %26, align 8
  call void @_ZN6VectorIdEC1ERKS0_(%class.Vector* %29, %class.Vector* dereferenceable(24) %30)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZNK9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.137"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.137"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.137"* %0, %"class.__gnu_cxx::__normal_iterator.137"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.137"*, %"class.__gnu_cxx::__normal_iterator.137"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %3, i32 0, i32 0
  %5 = load %class.Vector*, %class.Vector** %4, align 8
  ret %class.Vector* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.137"* @_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.137"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.137"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.137"* %0, %"class.__gnu_cxx::__normal_iterator.137"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.137"*, %"class.__gnu_cxx::__normal_iterator.137"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %3, i32 0, i32 0
  %5 = load %class.Vector*, %class.Vector** %4, align 8
  %6 = getelementptr inbounds %class.Vector, %class.Vector* %5, i32 1
  store %class.Vector* %6, %class.Vector** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.137"* %3
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.137"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.247
  %3 = load i32, i32* @y.248
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.137"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.137"* %0, %"class.__gnu_cxx::__normal_iterator.137"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.137"*, %"class.__gnu_cxx::__normal_iterator.137"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.247
  %14 = load i32, i32* @y.248
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.137"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.137"* %0, %"class.__gnu_cxx::__normal_iterator.137"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator.137"*, %"class.__gnu_cxx::__normal_iterator.137"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %22, i32 0, i32 0
  br label %originalBB
}

declare void @_ZN6VectorIdEC1ERKS0_(%class.Vector*, %class.Vector* dereferenceable(24)) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPK6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.137"*, %class.Vector** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.137"*, align 8
  %4 = alloca %class.Vector**, align 8
  store %"class.__gnu_cxx::__normal_iterator.137"* %0, %"class.__gnu_cxx::__normal_iterator.137"** %3, align 8
  store %class.Vector** %1, %class.Vector*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.137"*, %"class.__gnu_cxx::__normal_iterator.137"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.137", %"class.__gnu_cxx::__normal_iterator.137"* %5, i32 0, i32 0
  %7 = load %class.Vector**, %class.Vector*** %4, align 8
  %8 = load %class.Vector*, %class.Vector** %7, align 8
  store %class.Vector* %8, %class.Vector** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EfED2Ev(%class.Table.110*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.Table.110*, align 8
  store %class.Table.110* %0, %class.Table.110** %2, align 8
  %3 = load %class.Table.110*, %class.Table.110** %2, align 8
  %4 = bitcast %class.Table.110* %3 to %class.TableBase.111*
  call void @_ZN9TableBaseILi2EfED2Ev(%class.TableBase.111* %4)
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #5

declare void @_ZN11SubscriptorD2Ev(%class.Subscriptor*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EfED2Ev(%class.TableBase.111*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %2, align 8
  %3 = load %class.TableBase.111*, %class.TableBase.111** %2, align 8
  %4 = bitcast %class.TableBase.111* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2EfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %3, i32 0, i32 1
  %6 = load float*, float** %5, align 8
  %7 = icmp ne float* %6, null
  br i1 %7, label %8, label %31

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %3, i32 0, i32 1
  %10 = load float*, float** %9, align 8
  %11 = icmp eq float* %10, null
  br i1 %11, label %30, label %12

; <label>:12:                                     ; preds = %8
  %13 = load i32, i32* @x.253
  %14 = load i32, i32* @y.254
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = bitcast float* %10 to i8*
  call void @_ZdaPv(i8* %21) #12
  %22 = load i32, i32* @x.253
  %23 = load i32, i32* @y.254
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %originalBBpart2, %8
  br label %31

; <label>:31:                                     ; preds = %30, %1
  %32 = bitcast %class.TableBase.111* %3 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %32)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = bitcast float* %10 to i8*
  call void @_ZdaPv(i8* %33) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EfED0Ev(%class.TableBase.111*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.255
  %3 = load i32, i32* @y.256
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.111*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TableBase.111* %0, %class.TableBase.111** %10, align 8
  %13 = load %class.TableBase.111*, %class.TableBase.111** %10, align 8
  %14 = load i32, i32* @x.255
  %15 = load i32, i32* @y.256
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9TableBaseILi2EfED2Ev(%class.TableBase.111* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.TableBase.111* %13 to i8*
  call void @_ZdlPv(i8* %23) #12
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  %28 = bitcast %class.TableBase.111* %13 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %12, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %class.TableBase.111*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %class.TableBase.111* %0, %class.TableBase.111** %34, align 8
  %37 = load %class.TableBase.111*, %class.TableBase.111** %34, align 8
  br label %originalBB
}

declare void @_ZN10QuadratureILi3EED2Ev(%class.Quadrature.121*) unnamed_addr #2

declare void @_ZN10QuadratureILi1EED2Ev(%class.Quadrature*) unnamed_addr #2

declare void @_ZN15DataOut_DoFDataILi3ELi4ELi4EED2Ev(%class.DataOut_DoFData*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1160) %class.FiniteElement* @_ZNK12SmartPointerIK13FiniteElementILi3EEEdeEv(%class.SmartPointer.55*) #0 comdat align 2 {
  %2 = alloca %class.SmartPointer.55*, align 8
  store %class.SmartPointer.55* %0, %class.SmartPointer.55** %2, align 8
  %3 = load %class.SmartPointer.55*, %class.SmartPointer.55** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer.55, %class.SmartPointer.55* %3, i32 0, i32 0
  %5 = load %class.FiniteElement*, %class.FiniteElement** %4, align 8
  ret %class.FiniteElement* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EEC2Ev(%"struct.std::_Vector_base.69"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.69"*, align 8
  store %"struct.std::_Vector_base.69"* %0, %"struct.std::_Vector_base.69"** %2, align 8
  %3 = load %"struct.std::_Vector_base.69"*, %"struct.std::_Vector_base.69"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %5 to %"class.std::allocator.70"*
  call void @_ZNSaIN11DataOutBase5PatchILi4ELi4EEEEC2Ev(%"class.std::allocator.70"* %6) #11
  %7 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.261
  %11 = load i32, i32* @y.262
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  store i8* %19, i8** %3, align 8
  %20 = extractvalue { i8*, i32 } %18, 1
  store i32 %20, i32* %4, align 4
  %21 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %5 to %"class.std::allocator.70"*
  call void @_ZNSaIN11DataOutBase5PatchILi4ELi4EEEED2Ev(%"class.std::allocator.70"* %21) #11
  %22 = load i32, i32* @x.261
  %23 = load i32, i32* @y.262
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.261
  %32 = load i32, i32* @y.262
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i8*, i8** %3, align 8
  %40 = load i32, i32* %4, align 4
  %41 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  %43 = load i32, i32* @x.261
  %44 = load i32, i32* @y.262
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %42

originalBBalteredBB:                              ; preds = %originalBB, %9
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %5 to %"class.std::allocator.70"*
  call void @_ZNSaIN11DataOutBase5PatchILi4ELi4EEEED2Ev(%"class.std::allocator.70"* %54) #11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %55 = load i8*, i8** %3, align 8
  %56 = load i32, i32* %4, align 4
  %57 = insertvalue { i8*, i32 } undef, i8* %55, 0
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11DataOutBase5PatchILi4ELi4EEEEC2Ev(%"class.std::allocator.70"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.263
  %3 = load i32, i32* @y.264
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.70"*, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %10, align 8
  %11 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %10, align 8
  %12 = bitcast %"class.std::allocator.70"* %11 to %"class.__gnu_cxx::new_allocator.71"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEEC2Ev(%"class.__gnu_cxx::new_allocator.71"* %12) #11
  %13 = load i32, i32* @x.263
  %14 = load i32, i32* @y.264
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.70"*, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %21, align 8
  %22 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %21, align 8
  %23 = bitcast %"class.std::allocator.70"* %22 to %"class.__gnu_cxx::new_allocator.71"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEEC2Ev(%"class.__gnu_cxx::new_allocator.71"* %23) #11
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11DataOutBase5PatchILi4ELi4EEEED2Ev(%"class.std::allocator.70"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.70"*, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %2, align 8
  %3 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %2, align 8
  %4 = bitcast %"class.std::allocator.70"* %3 to %"class.__gnu_cxx::new_allocator.71"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEED2Ev(%"class.__gnu_cxx::new_allocator.71"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEEC2Ev(%"class.__gnu_cxx::new_allocator.71"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.71"*, align 8
  store %"class.__gnu_cxx::new_allocator.71"* %0, %"class.__gnu_cxx::new_allocator.71"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.71"*, %"class.__gnu_cxx::new_allocator.71"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEED2Ev(%"class.__gnu_cxx::new_allocator.71"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.71"*, align 8
  store %"class.__gnu_cxx::new_allocator.71"* %0, %"class.__gnu_cxx::new_allocator.71"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.71"*, %"class.__gnu_cxx::new_allocator.71"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RSaIT0_E(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"class.std::allocator.70"* dereferenceable(1)) #1 comdat {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"class.std::allocator.70"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store %"class.std::allocator.70"* %2, %"class.std::allocator.70"** %6, align 8
  %7 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  call void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEEEvT_S4_(%"struct.DataOutBase::Patch"* %7, %"struct.DataOutBase::Patch"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.273
  %3 = load i32, i32* @y.274
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.69"*, align 8
  store %"struct.std::_Vector_base.69"* %0, %"struct.std::_Vector_base.69"** %10, align 8
  %11 = load %"struct.std::_Vector_base.69"*, %"struct.std::_Vector_base.69"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %12 to %"class.std::allocator.70"*
  %14 = load i32, i32* @x.273
  %15 = load i32, i32* @y.274
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.70"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.69"*, align 8
  store %"struct.std::_Vector_base.69"* %0, %"struct.std::_Vector_base.69"** %22, align 8
  %23 = load %"struct.std::_Vector_base.69"*, %"struct.std::_Vector_base.69"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %24 to %"class.std::allocator.70"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EED2Ev(%"struct.std::_Vector_base.69"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.69"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.69"* %0, %"struct.std::_Vector_base.69"** %2, align 8
  %5 = load %"struct.std::_Vector_base.69"*, %"struct.std::_Vector_base.69"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %16, align 8
  %18 = ptrtoint %"struct.DataOutBase::Patch"* %13 to i64
  %19 = ptrtoint %"struct.DataOutBase::Patch"* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 600
  invoke void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.69"* %5, %"struct.DataOutBase::Patch"* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %23) #11
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %28) #11
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEEEvT_S4_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat {
  %3 = alloca %"struct.DataOutBase::Patch"*, align 8
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %3, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %4, align 8
  %5 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %3, align 8
  %6 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11DataOutBase5PatchILi4ELi4EEEEEvT_S6_(%"struct.DataOutBase::Patch"* %5, %"struct.DataOutBase::Patch"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11DataOutBase5PatchILi4ELi4EEEEEvT_S6_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat align 2 {
  %3 = alloca %"struct.DataOutBase::Patch"*, align 8
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %3, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %originalBBpart2, %2
  %6 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %3, align 8
  %7 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %8 = icmp ne %"struct.DataOutBase::Patch"* %6, %7
  br i1 %8, label %9, label %31

; <label>:9:                                      ; preds = %5
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %3, align 8
  %11 = call %"struct.DataOutBase::Patch"* @_ZSt11__addressofIN11DataOutBase5PatchILi4ELi4EEEEPT_RS3_(%"struct.DataOutBase::Patch"* dereferenceable(600) %10)
  call void @_ZSt8_DestroyIN11DataOutBase5PatchILi4ELi4EEEEvPT_(%"struct.DataOutBase::Patch"* %11)
  br label %12

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.279
  %14 = load i32, i32* @y.280
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %3, align 8
  %22 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %21, i32 1
  store %"struct.DataOutBase::Patch"* %22, %"struct.DataOutBase::Patch"** %3, align 8
  %23 = load i32, i32* @x.279
  %24 = load i32, i32* @y.280
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %5

; <label>:31:                                     ; preds = %5
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %32 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %3, align 8
  %33 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %32, i32 1
  store %"struct.DataOutBase::Patch"* %33, %"struct.DataOutBase::Patch"** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN11DataOutBase5PatchILi4ELi4EEEEvPT_(%"struct.DataOutBase::Patch"*) #1 comdat {
  %2 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %2, align 8
  %3 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %2, align 8
  call void @_ZN11DataOutBase5PatchILi4ELi4EED2Ev(%"struct.DataOutBase::Patch"* %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt11__addressofIN11DataOutBase5PatchILi4ELi4EEEEPT_RS3_(%"struct.DataOutBase::Patch"* dereferenceable(600)) #0 comdat {
  %2 = load i32, i32* @x.283
  %3 = load i32, i32* @y.284
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %10, align 8
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %10, align 8
  %12 = load i32, i32* @x.283
  %13 = load i32, i32* @y.284
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.DataOutBase::Patch"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %20, align 8
  %21 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.69"*, %"struct.DataOutBase::Patch"*, i64) #1 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.69"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.69"* %0, %"struct.std::_Vector_base.69"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.69"*, %"struct.std::_Vector_base.69"** %4, align 8
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %9 = icmp ne %"struct.DataOutBase::Patch"* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.285
  %12 = load i32, i32* @y.286
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %19 to %"class.std::allocator.70"*
  %21 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.70"* dereferenceable(1) %20, %"struct.DataOutBase::Patch"* %21, i64 %22)
  %23 = load i32, i32* @x.285
  %24 = load i32, i32* @y.286
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %32 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %7, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %32 to %"class.std::allocator.70"*
  %34 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %35 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.70"* dereferenceable(1) %33, %"struct.DataOutBase::Patch"* %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.287
  %3 = load i32, i32* @y.288
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"** %10, align 8
  %11 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"** %10, align 8
  %12 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %11 to %"class.std::allocator.70"*
  call void @_ZNSaIN11DataOutBase5PatchILi4ELi4EEEED2Ev(%"class.std::allocator.70"* %12) #11
  %13 = load i32, i32* @x.287
  %14 = load i32, i32* @y.288
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"** %21, align 8
  %22 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"** %21, align 8
  %23 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %22 to %"class.std::allocator.70"*
  call void @_ZNSaIN11DataOutBase5PatchILi4ELi4EEEED2Ev(%"class.std::allocator.70"* %23) #11
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.70"* dereferenceable(1), %"struct.DataOutBase::Patch"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator.70"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %4, align 8
  %8 = bitcast %"class.std::allocator.70"* %7 to %"class.__gnu_cxx::new_allocator.71"*
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.71"* %8, %"struct.DataOutBase::Patch"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.71"*, %"struct.DataOutBase::Patch"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.71"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.71"* %0, %"class.__gnu_cxx::new_allocator.71"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.71"*, %"class.__gnu_cxx::new_allocator.71"** %4, align 8
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %9 = bitcast %"struct.DataOutBase::Patch"* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_swap_dataERS5_(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  %4 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  %5 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %3, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %1, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %4, align 8
  %6 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %3, align 8
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %5)
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_copy_dataERKS5_(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %5, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* dereferenceable(24) %6)
  %7 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %4, align 8
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_copy_dataERKS5_(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %6, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* dereferenceable(24) %7)
  %8 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %4, align 8
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_copy_dataERKS5_(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %8, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* dereferenceable(24) %5)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E10_S_on_swapERS4_S6_(%"class.std::allocator.70"* dereferenceable(1), %"class.std::allocator.70"* dereferenceable(1)) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.70"*, align 8
  %4 = alloca %"class.std::allocator.70"*, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %3, align 8
  store %"class.std::allocator.70"* %1, %"class.std::allocator.70"** %4, align 8
  %5 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %3, align 8
  %6 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %4, align 8
  call void @_ZNSt12__alloc_swapISaIN11DataOutBase5PatchILi4ELi4EEEELb1EE8_S_do_itERS3_S5_(%"class.std::allocator.70"* dereferenceable(1) %5, %"class.std::allocator.70"* dereferenceable(1) %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.297
  %3 = load i32, i32* @y.298
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %11, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* null, %"struct.DataOutBase::Patch"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %11, i32 0, i32 1
  store %"struct.DataOutBase::Patch"* null, %"struct.DataOutBase::Patch"** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %11, i32 0, i32 2
  store %"struct.DataOutBase::Patch"* null, %"struct.DataOutBase::Patch"** %14, align 8
  %15 = load i32, i32* @x.297
  %16 = load i32, i32* @y.298
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %24, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* null, %"struct.DataOutBase::Patch"** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %"struct.DataOutBase::Patch"* null, %"struct.DataOutBase::Patch"** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %24, i32 0, i32 2
  store %"struct.DataOutBase::Patch"* null, %"struct.DataOutBase::Patch"** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE17_Vector_impl_data12_M_copy_dataERKS5_(%"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.299
  %4 = load i32, i32* @y.300
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  %12 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %11, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %1, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %12, align 8
  %13 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %11, align 8
  %14 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %12, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %14, i32 0, i32 0
  %16 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %13, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %16, %"struct.DataOutBase::Patch"** %17, align 8
  %18 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %12, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %18, i32 0, i32 1
  %20 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %13, i32 0, i32 1
  store %"struct.DataOutBase::Patch"* %20, %"struct.DataOutBase::Patch"** %21, align 8
  %22 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %12, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %22, i32 0, i32 2
  %24 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %13, i32 0, i32 2
  store %"struct.DataOutBase::Patch"* %24, %"struct.DataOutBase::Patch"** %25, align 8
  %26 = load i32, i32* @x.299
  %27 = load i32, i32* @y.300
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %34 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  %35 = alloca %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %34, align 8
  store %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %1, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %35, align 8
  %36 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %34, align 8
  %37 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %35, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %37, i32 0, i32 0
  %39 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %36, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %39, %"struct.DataOutBase::Patch"** %40, align 8
  %41 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %35, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %41, i32 0, i32 1
  %43 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %36, i32 0, i32 1
  store %"struct.DataOutBase::Patch"* %43, %"struct.DataOutBase::Patch"** %44, align 8
  %45 = load %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"** %35, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %45, i32 0, i32 2
  %47 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %36, i32 0, i32 2
  store %"struct.DataOutBase::Patch"* %47, %"struct.DataOutBase::Patch"** %48, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12__alloc_swapISaIN11DataOutBase5PatchILi4ELi4EEEELb1EE8_S_do_itERS3_S5_(%"class.std::allocator.70"* dereferenceable(1), %"class.std::allocator.70"* dereferenceable(1)) #0 comdat align 2 {
  %3 = load i32, i32* @x.301
  %4 = load i32, i32* @y.302
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.70"*, align 8
  %12 = alloca %"class.std::allocator.70"*, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %11, align 8
  store %"class.std::allocator.70"* %1, %"class.std::allocator.70"** %12, align 8
  %13 = load i32, i32* @x.301
  %14 = load i32, i32* @y.302
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca %"class.std::allocator.70"*, align 8
  %22 = alloca %"class.std::allocator.70"*, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %21, align 8
  store %"class.std::allocator.70"* %1, %"class.std::allocator.70"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEC2ERKS2_(%class.TriaRawIterator*, %class.TriaRawIterator* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.TriaRawIterator*, align 8
  %4 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %3, align 8
  store %class.TriaRawIterator* %1, %class.TriaRawIterator** %4, align 8
  %5 = load %class.TriaRawIterator*, %class.TriaRawIterator** %3, align 8
  %6 = bitcast %class.TriaRawIterator* %5 to %"struct.std::iterator.122"*
  %7 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %5, i32 0, i32 0
  %8 = load %class.TriaRawIterator*, %class.TriaRawIterator** %4, align 8
  %9 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %8, i32 0, i32 0
  %10 = bitcast %class.DoFCellAccessor* %7 to i8*
  %11 = bitcast %class.DoFCellAccessor* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK12TriaAccessorILi3EEneERKS0_(%class.TriaAccessor*, %class.TriaAccessor* dereferenceable(16)) #0 comdat align 2 {
  %3 = load i32, i32* @x.305
  %4 = load i32, i32* @y.306
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TriaAccessor*, align 8
  %12 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %11, align 8
  store %class.TriaAccessor* %1, %class.TriaAccessor** %12, align 8
  %13 = load %class.TriaAccessor*, %class.TriaAccessor** %11, align 8
  %14 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load %class.TriaAccessor*, %class.TriaAccessor** %12, align 8
  %17 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %15, %18
  %20 = load i32, i32* @x.305
  %21 = load i32, i32* @y.306
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %35, label %28

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %13, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = load %class.TriaAccessor*, %class.TriaAccessor** %12, align 8
  %32 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp ne i32 %30, %33
  br label %35

; <label>:35:                                     ; preds = %28, %originalBBpart2
  %36 = phi i1 [ true, %originalBBpart2 ], [ %34, %28 ]
  ret i1 %36

originalBBalteredBB:                              ; preds = %originalBB, %2
  %37 = alloca %class.TriaAccessor*, align 8
  %38 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %37, align 8
  store %class.TriaAccessor* %1, %class.TriaAccessor** %38, align 8
  %39 = load %class.TriaAccessor*, %class.TriaAccessor** %37, align 8
  %40 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = load %class.TriaAccessor*, %class.TriaAccessor** %38, align 8
  %43 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %41, %44
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN17DoFObjectAccessorILi3ELi3EE9copy_fromERKS0_(%class.DoFObjectAccessor*, %class.DoFObjectAccessor* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %class.DoFObjectAccessor*, align 8
  %4 = alloca %class.DoFObjectAccessor*, align 8
  store %class.DoFObjectAccessor* %0, %class.DoFObjectAccessor** %3, align 8
  store %class.DoFObjectAccessor* %1, %class.DoFObjectAccessor** %4, align 8
  %5 = load %class.DoFObjectAccessor*, %class.DoFObjectAccessor** %3, align 8
  %6 = bitcast %class.DoFObjectAccessor* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to %class.CellAccessor*
  %9 = bitcast %class.CellAccessor* %8 to %class.TriaAccessor*
  %10 = load %class.DoFObjectAccessor*, %class.DoFObjectAccessor** %4, align 8
  %11 = bitcast %class.DoFObjectAccessor* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to %class.TriaAccessor*
  call void @_ZN12TriaAccessorILi3EE9copy_fromERKS0_(%class.TriaAccessor* %9, %class.TriaAccessor* dereferenceable(16) %13)
  %14 = bitcast %class.DoFObjectAccessor* %5 to %class.DoFAccessor*
  %15 = load %class.DoFObjectAccessor*, %class.DoFObjectAccessor** %4, align 8
  %16 = bitcast %class.DoFObjectAccessor* %15 to %class.DoFAccessor*
  %17 = getelementptr inbounds %class.DoFAccessor, %class.DoFAccessor* %16, i32 0, i32 0
  %18 = load %class.DoFHandler*, %class.DoFHandler** %17, align 8
  call void @_ZN11DoFAccessorILi3EE15set_dof_handlerEP10DoFHandlerILi3EE(%class.DoFAccessor* %14, %class.DoFHandler* %18)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TriaAccessorILi3EE9copy_fromERKS0_(%class.TriaAccessor*, %class.TriaAccessor* dereferenceable(16)) #0 comdat align 2 {
  %3 = load i32, i32* @x.309
  %4 = load i32, i32* @y.310
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TriaAccessor*, align 8
  %12 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %11, align 8
  store %class.TriaAccessor* %1, %class.TriaAccessor** %12, align 8
  %13 = load %class.TriaAccessor*, %class.TriaAccessor** %11, align 8
  %14 = load %class.TriaAccessor*, %class.TriaAccessor** %12, align 8
  %15 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %13, i32 0, i32 0
  store i32 %16, i32* %17, align 8
  %18 = load %class.TriaAccessor*, %class.TriaAccessor** %12, align 8
  %19 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %13, i32 0, i32 1
  store i32 %20, i32* %21, align 4
  %22 = load %class.TriaAccessor*, %class.TriaAccessor** %12, align 8
  %23 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %22, i32 0, i32 2
  %24 = load %class.Triangulation*, %class.Triangulation** %23, align 8
  %25 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %13, i32 0, i32 2
  store %class.Triangulation* %24, %class.Triangulation** %25, align 8
  %26 = load i32, i32* @x.309
  %27 = load i32, i32* @y.310
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %34 = alloca %class.TriaAccessor*, align 8
  %35 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %34, align 8
  store %class.TriaAccessor* %1, %class.TriaAccessor** %35, align 8
  %36 = load %class.TriaAccessor*, %class.TriaAccessor** %34, align 8
  %37 = load %class.TriaAccessor*, %class.TriaAccessor** %35, align 8
  %38 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %36, i32 0, i32 0
  store i32 %39, i32* %40, align 8
  %41 = load %class.TriaAccessor*, %class.TriaAccessor** %35, align 8
  %42 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %36, i32 0, i32 1
  store i32 %43, i32* %44, align 4
  %45 = load %class.TriaAccessor*, %class.TriaAccessor** %35, align 8
  %46 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %45, i32 0, i32 2
  %47 = load %class.Triangulation*, %class.Triangulation** %46, align 8
  %48 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %36, i32 0, i32 2
  store %class.Triangulation* %47, %class.Triangulation** %48, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11DoFAccessorILi3EE15set_dof_handlerEP10DoFHandlerILi3EE(%class.DoFAccessor*, %class.DoFHandler*) #0 comdat align 2 {
  %3 = alloca %class.DoFAccessor*, align 8
  %4 = alloca %class.DoFHandler*, align 8
  store %class.DoFAccessor* %0, %class.DoFAccessor** %3, align 8
  store %class.DoFHandler* %1, %class.DoFHandler** %4, align 8
  %5 = load %class.DoFAccessor*, %class.DoFAccessor** %3, align 8
  %6 = load %class.DoFHandler*, %class.DoFHandler** %4, align 8
  %7 = getelementptr inbounds %class.DoFAccessor, %class.DoFAccessor* %5, i32 0, i32 0
  store %class.DoFHandler* %6, %class.DoFHandler** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double*, double*, %"class.std::allocator.75"* dereferenceable(1)) #1 comdat {
  %4 = load i32, i32* @x.313
  %5 = load i32, i32* @y.314
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca %"class.std::allocator.75"*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store %"class.std::allocator.75"* %2, %"class.std::allocator.75"** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = load double*, double** %13, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %15, double* %16)
  %17 = load i32, i32* @x.313
  %18 = load i32, i32* @y.314
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca double*, align 8
  %26 = alloca double*, align 8
  %27 = alloca %"class.std::allocator.75"*, align 8
  store double* %0, double** %25, align 8
  store double* %1, double** %26, align 8
  store %"class.std::allocator.75"* %2, %"class.std::allocator.75"** %27, align 8
  %28 = load double*, double** %25, align 8
  %29 = load double*, double** %26, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %28, double* %29)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(double*, double*) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %3, align 8
  %6 = load double*, double** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %5, double* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double*, double*) #0 comdat align 2 {
  %3 = load i32, i32* @x.317
  %4 = load i32, i32* @y.318
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  store double* %0, double** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load i32, i32* @x.317
  %14 = load i32, i32* @y.318
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca double*, align 8
  %22 = alloca double*, align 8
  store double* %0, double** %21, align 8
  store double* %1, double** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEEC2Ev(%"class.__gnu_cxx::new_allocator.126"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEED2Ev(%"class.__gnu_cxx::new_allocator.126"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE17_S_check_init_lenEmRKS3_(i64, %"class.std::allocator.125"* dereferenceable(1)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.125"*, align 8
  %5 = alloca %"class.std::allocator.125", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.125"* %1, %"class.std::allocator.125"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %4, align 8
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEEC2ERKS2_(%"class.std::allocator.125"* %5, %"class.std::allocator.125"* dereferenceable(1) %9) #11
  %10 = invoke i64 @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.125"* dereferenceable(1) %5)
          to label %11 unwind label %30

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.323
  %13 = load i32, i32* @y.324
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = icmp ugt i64 %8, %10
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"* %5) #11
  %21 = load i32, i32* @x.323
  %22 = load i32, i32* @y.324
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %34

; <label>:29:                                     ; preds = %originalBBpart2
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0)) #14
  unreachable

; <label>:30:                                     ; preds = %2
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %6, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %7, align 4
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"* %5) #11
  br label %36

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i64, i64* %3, align 8
  ret i64 %35

; <label>:36:                                     ; preds = %30
  %37 = load i8*, i8** %6, align 8
  %38 = load i32, i32* %7, align 4
  %39 = insertvalue { i8*, i32 } undef, i8* %37, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40

originalBBalteredBB:                              ; preds = %originalBB, %11
  %41 = icmp ugt i64 %8, %10
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"* %5) #11
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.124"*, i64, %"class.std::allocator.125"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.124"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.125"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.124"* %0, %"struct.std::_Vector_base.124"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.125"* %2, %"class.std::allocator.125"** %6, align 8
  %9 = load %"struct.std::_Vector_base.124"*, %"struct.std::_Vector_base.124"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %6, align 8
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %10, %"class.std::allocator.125"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.124"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %10) #11
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE18_M_fill_initializeEmRKS2_(%"class.std::vector.123"*, i64, %"struct.DataOutRotation<3>::Data"* dereferenceable(72)) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.123"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  store %"class.std::vector.123"* %0, %"class.std::vector.123"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %6, align 8
  %7 = load %"class.std::vector.123"*, %"class.std::vector.123"** %4, align 8
  %8 = bitcast %"class.std::vector.123"* %7 to %"struct.std::_Vector_base.124"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %9 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %6, align 8
  %15 = bitcast %"class.std::vector.123"* %7 to %"struct.std::_Vector_base.124"*
  %16 = call dereferenceable(1) %"class.std::allocator.125"* @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.124"* %15)
  %17 = call %"struct.DataOutRotation<3>::Data"* @_ZSt24__uninitialized_fill_n_aIPN15DataOutRotationILi3EE4DataEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.DataOutRotation<3>::Data"* %12, i64 %13, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %14, %"class.std::allocator.125"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.123"* %7 to %"struct.std::_Vector_base.124"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %20, i32 0, i32 1
  store %"struct.DataOutRotation<3>::Data"* %17, %"struct.DataOutRotation<3>::Data"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EED2Ev(%"struct.std::_Vector_base.124"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.329
  %3 = load i32, i32* @y.330
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.124"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base.124"* %0, %"struct.std::_Vector_base.124"** %10, align 8
  %13 = load %"struct.std::_Vector_base.124"*, %"struct.std::_Vector_base.124"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %13, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %19, i32 0, i32 2
  %21 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %13, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %22 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %23, i32 0, i32 0
  %25 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %24, align 8
  %26 = ptrtoint %"struct.DataOutRotation<3>::Data"* %21 to i64
  %27 = ptrtoint %"struct.DataOutRotation<3>::Data"* %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 72
  %30 = load i32, i32* @x.329
  %31 = load i32, i32* @y.330
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.124"* %13, %"struct.DataOutRotation<3>::Data"* %17, i64 %29)
          to label %38 unwind label %40

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %39) #11
  ret void

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %11, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %12, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %44) #11
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %11, align 8
  %47 = load i32, i32* %12, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %1
  %50 = alloca %"struct.std::_Vector_base.124"*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %"struct.std::_Vector_base.124"* %0, %"struct.std::_Vector_base.124"** %50, align 8
  %53 = load %"struct.std::_Vector_base.124"*, %"struct.std::_Vector_base.124"** %50, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %53, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %54 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %55, i32 0, i32 0
  %57 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %53, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %59, i32 0, i32 2
  %61 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %53, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %62 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %63, i32 0, i32 0
  %65 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %64, align 8
  %66 = ptrtoint %"struct.DataOutRotation<3>::Data"* %61 to i64
  %67 = ptrtoint %"struct.DataOutRotation<3>::Data"* %65 to i64
  %_ = shl i64 %66, %67
  %_1 = sub i64 %66, %67
  %gen = mul i64 %_1, %67
  %_2 = shl i64 %66, %67
  %68 = sub i64 %66, %67
  %_3 = sub i64 0, %68
  %gen4 = add i64 %_3, 72
  %_5 = sub i64 %68, 72
  %gen6 = mul i64 %_5, 72
  %_7 = shl i64 %68, 72
  %_8 = sub i64 0, %68
  %gen9 = add i64 %_8, 72
  %_10 = sub i64 0, %68
  %gen11 = add i64 %_10, 72
  %_12 = sub i64 %68, 72
  %gen13 = mul i64 %_12, 72
  %_14 = sub i64 %68, 72
  %gen15 = mul i64 %_14, 72
  %_16 = sub i64 %68, 72
  %gen17 = mul i64 %_16, 72
  %69 = sdiv exact i64 %68, 72
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN15DataOutRotationILi3EE4DataESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.125"* dereferenceable(1)) #1 comdat align 2 {
  %2 = load i32, i32* @x.331
  %3 = load i32, i32* @y.332
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.125"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %10, align 8
  store i64 128102389400760775, i64* %11, align 8
  %13 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E8max_sizeERKS4_(%"class.std::allocator.125"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.331
  %18 = load i32, i32* @y.332
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.125"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %25, align 8
  store i64 128102389400760775, i64* %26, align 8
  %28 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E8max_sizeERKS4_(%"class.std::allocator.125"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN15DataOutRotationILi3EE4DataEEC2ERKS2_(%"class.std::allocator.125"*, %"class.std::allocator.125"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.333
  %4 = load i32, i32* @y.334
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.125"*, align 8
  %12 = alloca %"class.std::allocator.125"*, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %11, align 8
  store %"class.std::allocator.125"* %1, %"class.std::allocator.125"** %12, align 8
  %13 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %11, align 8
  %14 = bitcast %"class.std::allocator.125"* %13 to %"class.__gnu_cxx::new_allocator.126"*
  %15 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %12, align 8
  %16 = bitcast %"class.std::allocator.125"* %15 to %"class.__gnu_cxx::new_allocator.126"*
  call void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.126"* %14, %"class.__gnu_cxx::new_allocator.126"* dereferenceable(1) %16) #11
  %17 = load i32, i32* @x.333
  %18 = load i32, i32* @y.334
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.125"*, align 8
  %26 = alloca %"class.std::allocator.125"*, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %25, align 8
  store %"class.std::allocator.125"* %1, %"class.std::allocator.125"** %26, align 8
  %27 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %25, align 8
  %28 = bitcast %"class.std::allocator.125"* %27 to %"class.__gnu_cxx::new_allocator.126"*
  %29 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %26, align 8
  %30 = bitcast %"class.std::allocator.125"* %29 to %"class.__gnu_cxx::new_allocator.126"*
  call void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.126"* %28, %"class.__gnu_cxx::new_allocator.126"* dereferenceable(1) %30) #11
  br label %originalBB
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E8max_sizeERKS4_(%"class.std::allocator.125"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.125"*, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %2, align 8
  %3 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %2, align 8
  %4 = bitcast %"class.std::allocator.125"* %3 to %"class.__gnu_cxx::new_allocator.126"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.126"* %4) #11
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.337
  %13 = load i32, i32* @y.338
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i64*, i64** %5, align 8
  store i64* %20, i64** %3, align 8
  %21 = load i32, i32* @x.337
  %22 = load i32, i32* @y.338
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:29:                                     ; preds = %2
  %30 = load i64*, i64** %4, align 8
  store i64* %30, i64** %3, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %originalBBpart2
  %32 = load i32, i32* @x.337
  %33 = load i32, i32* @y.338
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i64*, i64** %3, align 8
  %41 = load i32, i32* @x.337
  %42 = load i32, i32* @y.338
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64* %40

originalBBalteredBB:                              ; preds = %originalBB, %11
  %49 = load i64*, i64** %5, align 8
  store i64* %49, i64** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %50 = load i64*, i64** %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.126"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.339
  %3 = load i32, i32* @y.340
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %10, align 8
  %12 = load i32, i32* @x.339
  %13 = load i32, i32* @y.340
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 128102389400760775

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.341
  %4 = load i32, i32* @y.342
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  %12 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %11, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %1, %"class.__gnu_cxx::new_allocator.126"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %11, align 8
  %14 = load i32, i32* @x.341
  %15 = load i32, i32* @y.342
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  %23 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %22, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %1, %"class.__gnu_cxx::new_allocator.126"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*, %"class.std::allocator.125"* dereferenceable(1)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.343
  %4 = load i32, i32* @y.344
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*, align 8
  %12 = alloca %"class.std::allocator.125"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %0, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"** %11, align 8
  store %"class.std::allocator.125"* %1, %"class.std::allocator.125"** %12, align 8
  %15 = load %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"** %11, align 8
  %16 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %15 to %"class.std::allocator.125"*
  %17 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %12, align 8
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEEC2ERKS2_(%"class.std::allocator.125"* %16, %"class.std::allocator.125"* dereferenceable(1) %17) #11
  %18 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %19 = load i32, i32* @x.343
  %20 = load i32, i32* @y.344
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %18)
          to label %27 unwind label %44

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.343
  %29 = load i32, i32* @y.344
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.343
  %37 = load i32, i32* @y.344
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %13, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %14, align 4
  %48 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %15 to %"class.std::allocator.125"*
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"* %48) #11
  br label %49

; <label>:49:                                     ; preds = %44
  %50 = load i32, i32* @x.343
  %51 = load i32, i32* @y.344
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %13, align 8
  %59 = load i32, i32* %14, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  %62 = load i32, i32* @x.343
  %63 = load i32, i32* @y.344
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %61

originalBBalteredBB:                              ; preds = %originalBB, %2
  %70 = alloca %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*, align 8
  %71 = alloca %"class.std::allocator.125"*, align 8
  %72 = alloca i8*
  %73 = alloca i32
  store %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %0, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"** %70, align 8
  store %"class.std::allocator.125"* %1, %"class.std::allocator.125"** %71, align 8
  %74 = load %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"** %70, align 8
  %75 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %74 to %"class.std::allocator.125"*
  %76 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %71, align 8
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEEC2ERKS2_(%"class.std::allocator.125"* %75, %"class.std::allocator.125"* dereferenceable(1) %76) #11
  %77 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %74 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %78 = load i8*, i8** %13, align 8
  %79 = load i32, i32* %14, align 4
  %80 = insertvalue { i8*, i32 } undef, i8* %78, 0
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.124"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.124"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.124"* %0, %"struct.std::_Vector_base.124"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.124"*, %"struct.std::_Vector_base.124"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.DataOutRotation<3>::Data"* @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.124"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %9, i32 0, i32 0
  store %"struct.DataOutRotation<3>::Data"* %7, %"struct.DataOutRotation<3>::Data"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %11 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %16, i32 0, i32 1
  store %"struct.DataOutRotation<3>::Data"* %14, %"struct.DataOutRotation<3>::Data"** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %24 to %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %25, i32 0, i32 2
  store %"struct.DataOutRotation<3>::Data"* %23, %"struct.DataOutRotation<3>::Data"** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %0, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"*, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %3 to %"class.std::allocator.125"*
  call void @_ZNSaIN15DataOutRotationILi3EE4DataEED2Ev(%"class.std::allocator.125"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"*, %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"struct.DataOutRotation<3>::Data"* null, %"struct.DataOutRotation<3>::Data"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"struct.DataOutRotation<3>::Data"* null, %"struct.DataOutRotation<3>::Data"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"struct.DataOutRotation<3>::Data"* null, %"struct.DataOutRotation<3>::Data"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutRotation<3>::Data"* @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.124"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.124"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.124"* %0, %"struct.std::_Vector_base.124"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.124"*, %"struct.std::_Vector_base.124"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %9 to %"class.std::allocator.125"*
  %11 = load i64, i64* %4, align 8
  %12 = call %"struct.DataOutRotation<3>::Data"* @_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E8allocateERS4_m(%"class.std::allocator.125"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi %"struct.DataOutRotation<3>::Data"* [ %12, %8 ], [ null, %13 ]
  ret %"struct.DataOutRotation<3>::Data"* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutRotation<3>::Data"* @_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E8allocateERS4_m(%"class.std::allocator.125"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.125"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %3, align 8
  %6 = bitcast %"class.std::allocator.125"* %5 to %"class.__gnu_cxx::new_allocator.126"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.DataOutRotation<3>::Data"* @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.126"* %6, i64 %7, i8* null)
  ret %"struct.DataOutRotation<3>::Data"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutRotation<3>::Data"* @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.126"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.126"* %7) #11
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.355
  %14 = load i32, i32* @y.356
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 72
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to %"struct.DataOutRotation<3>::Data"*
  %25 = load i32, i32* @x.355
  %26 = load i32, i32* @y.356
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.DataOutRotation<3>::Data"* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = shl i64 %33, 72
  %_1 = shl i64 %33, 72
  %34 = mul i64 %33, 72
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to %"struct.DataOutRotation<3>::Data"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutRotation<3>::Data"* @_ZSt24__uninitialized_fill_n_aIPN15DataOutRotationILi3EE4DataEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.DataOutRotation<3>::Data"*, i64, %"struct.DataOutRotation<3>::Data"* dereferenceable(72), %"class.std::allocator.125"* dereferenceable(1)) #1 comdat {
  %5 = load i32, i32* @x.357
  %6 = load i32, i32* @y.358
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %16 = alloca %"class.std::allocator.125"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %13, align 8
  store i64 %1, i64* %14, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %15, align 8
  store %"class.std::allocator.125"* %3, %"class.std::allocator.125"** %16, align 8
  %17 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %13, align 8
  %18 = load i64, i64* %14, align 8
  %19 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %20 = call %"struct.DataOutRotation<3>::Data"* @_ZSt20uninitialized_fill_nIPN15DataOutRotationILi3EE4DataEmS2_ET_S4_T0_RKT1_(%"struct.DataOutRotation<3>::Data"* %17, i64 %18, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %19)
  %21 = load i32, i32* @x.357
  %22 = load i32, i32* @y.358
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.DataOutRotation<3>::Data"* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %32 = alloca %"class.std::allocator.125"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %31, align 8
  store %"class.std::allocator.125"* %3, %"class.std::allocator.125"** %32, align 8
  %33 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %31, align 8
  %36 = call %"struct.DataOutRotation<3>::Data"* @_ZSt20uninitialized_fill_nIPN15DataOutRotationILi3EE4DataEmS2_ET_S4_T0_RKT1_(%"struct.DataOutRotation<3>::Data"* %33, i64 %34, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %35)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.125"* @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.124"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.124"*, align 8
  store %"struct.std::_Vector_base.124"* %0, %"struct.std::_Vector_base.124"** %2, align 8
  %3 = load %"struct.std::_Vector_base.124"*, %"struct.std::_Vector_base.124"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %4 to %"class.std::allocator.125"*
  ret %"class.std::allocator.125"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutRotation<3>::Data"* @_ZSt20uninitialized_fill_nIPN15DataOutRotationILi3EE4DataEmS2_ET_S4_T0_RKT1_(%"struct.DataOutRotation<3>::Data"*, i64, %"struct.DataOutRotation<3>::Data"* dereferenceable(72)) #1 comdat {
  %4 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %7 = alloca i8, align 1
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %6, align 8
  %11 = call %"struct.DataOutRotation<3>::Data"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN15DataOutRotationILi3EE4DataEmS4_EET_S6_T0_RKT1_(%"struct.DataOutRotation<3>::Data"* %8, i64 %9, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %10)
  ret %"struct.DataOutRotation<3>::Data"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutRotation<3>::Data"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN15DataOutRotationILi3EE4DataEmS4_EET_S6_T0_RKT1_(%"struct.DataOutRotation<3>::Data"*, i64, %"struct.DataOutRotation<3>::Data"* dereferenceable(72)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.363
  %5 = load i32, i32* @y.364
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %15 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %14, align 8
  %18 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %12, align 8
  store %"struct.DataOutRotation<3>::Data"* %18, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %19 = load i32, i32* @x.363
  %20 = load i32, i32* @y.364
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart217, %originalBBpart2
  %28 = load i64, i64* %13, align 8
  %29 = icmp ugt i64 %28, 0
  br i1 %29, label %30, label %115

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* @x.363
  %32 = load i32, i32* @y.364
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %40 = load i32, i32* @x.363
  %41 = load i32, i32* @y.364
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %48 = invoke %"struct.DataOutRotation<3>::Data"* @_ZSt11__addressofIN15DataOutRotationILi3EE4DataEEPT_RS3_(%"struct.DataOutRotation<3>::Data"* dereferenceable(72) %39)
          to label %49 unwind label %89

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load i32, i32* @x.363
  %51 = load i32, i32* @y.364
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %14, align 8
  %59 = load i32, i32* @x.363
  %60 = load i32, i32* @y.364
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt10_ConstructIN15DataOutRotationILi3EE4DataES2_EvPT_RKT0_(%"struct.DataOutRotation<3>::Data"* %48, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %58)
          to label %67 unwind label %89

; <label>:67:                                     ; preds = %originalBBpart28
  br label %68

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.363
  %70 = load i32, i32* @y.364
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i64, i64* %13, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %13, align 8
  %79 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %80 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %79, i32 1
  store %"struct.DataOutRotation<3>::Data"* %80, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %81 = load i32, i32* @x.363
  %82 = load i32, i32* @y.364
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart217, label %originalBB10alteredBB

originalBBpart217:                                ; preds = %originalBB10
  br label %27

; <label>:89:                                     ; preds = %originalBBpart28, %originalBBpart24
  %90 = load i32, i32* @x.363
  %91 = load i32, i32* @y.364
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %89, %originalBB19alteredBB
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %16, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %17, align 4
  %101 = load i32, i32* @x.363
  %102 = load i32, i32* @y.364
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %109

; <label>:109:                                    ; preds = %originalBBpart221
  %110 = load i8*, i8** %16, align 8
  %111 = call i8* @__cxa_begin_catch(i8* %110) #11
  %112 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %12, align 8
  %113 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  invoke void @_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataEEvT_S4_(%"struct.DataOutRotation<3>::Data"* %112, %"struct.DataOutRotation<3>::Data"* %113)
          to label %114 unwind label %133

; <label>:114:                                    ; preds = %109
  invoke void @__cxa_rethrow() #14
          to label %179 unwind label %133

; <label>:115:                                    ; preds = %27
  %116 = load i32, i32* @x.363
  %117 = load i32, i32* @y.364
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %115, %originalBB23alteredBB
  %124 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %125 = load i32, i32* @x.363
  %126 = load i32, i32* @y.364
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  ret %"struct.DataOutRotation<3>::Data"* %124

; <label>:133:                                    ; preds = %114, %109
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %16, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %137 unwind label %176

; <label>:137:                                    ; preds = %133
  %138 = load i32, i32* @x.363
  %139 = load i32, i32* @y.364
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %137, %originalBB27alteredBB
  %146 = load i32, i32* @x.363
  %147 = load i32, i32* @y.364
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %171
                                                  ; No predecessors!
  %155 = load i32, i32* @x.363
  %156 = load i32, i32* @y.364
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %154, %originalBB31alteredBB
  call void @llvm.trap()
  %163 = load i32, i32* @x.363
  %164 = load i32, i32* @y.364
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  unreachable

; <label>:171:                                    ; preds = %originalBBpart229
  %172 = load i8*, i8** %16, align 8
  %173 = load i32, i32* %17, align 4
  %174 = insertvalue { i8*, i32 } undef, i8* %172, 0
  %175 = insertvalue { i8*, i32 } %174, i32 %173, 1
  resume { i8*, i32 } %175

; <label>:176:                                    ; preds = %133
  %177 = landingpad { i8*, i32 }
          catch i8* null
  %178 = extractvalue { i8*, i32 } %177, 0
  call void @__clang_call_terminate(i8* %178) #9
  unreachable

; <label>:179:                                    ; preds = %114
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %180 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %181 = alloca i64, align 8
  %182 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %183 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %184 = alloca i8*
  %185 = alloca i32
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %180, align 8
  store i64 %1, i64* %181, align 8
  store %"struct.DataOutRotation<3>::Data"* %2, %"struct.DataOutRotation<3>::Data"** %182, align 8
  %186 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %180, align 8
  store %"struct.DataOutRotation<3>::Data"* %186, %"struct.DataOutRotation<3>::Data"** %183, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %187 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %188 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %14, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  %189 = load i64, i64* %13, align 8
  %_ = sub i64 %189, -1
  %gen = mul i64 %_, -1
  %_11 = sub i64 0, %189
  %gen12 = add i64 %_11, -1
  %_13 = shl i64 %189, -1
  %_14 = shl i64 %189, -1
  %_15 = shl i64 %189, -1
  %190 = add i64 %189, -1
  store i64 %190, i64* %13, align 8
  %191 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  %192 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %191, i32 1
  store %"struct.DataOutRotation<3>::Data"* %192, %"struct.DataOutRotation<3>::Data"** %15, align 8
  br label %originalBB10

originalBB19alteredBB:                            ; preds = %originalBB19, %89
  %193 = landingpad { i8*, i32 }
          catch i8* null
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %16, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %17, align 4
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %115
  %196 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %15, align 8
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %137
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %154
  call void @llvm.trap()
  br label %originalBB31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructIN15DataOutRotationILi3EE4DataES2_EvPT_RKT0_(%"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"* dereferenceable(72)) #1 comdat {
  %3 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %4 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %3, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %4, align 8
  %5 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %6 = bitcast %"struct.DataOutRotation<3>::Data"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.DataOutRotation<3>::Data"*
  %8 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %4, align 8
  call void @_ZN15DataOutRotationILi3EE4DataC2ERKS1_(%"struct.DataOutRotation<3>::Data"* %7, %"struct.DataOutRotation<3>::Data"* dereferenceable(72) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.DataOutRotation<3>::Data"* @_ZSt11__addressofIN15DataOutRotationILi3EE4DataEEPT_RS3_(%"struct.DataOutRotation<3>::Data"* dereferenceable(72)) #0 comdat {
  %2 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %2, align 8
  %3 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %2, align 8
  ret %"struct.DataOutRotation<3>::Data"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataEEvT_S4_(%"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"*) #1 comdat {
  %3 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %4 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %3, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %4, align 8
  %5 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %6 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN15DataOutRotationILi3EE4DataEEEvT_S6_(%"struct.DataOutRotation<3>::Data"* %5, %"struct.DataOutRotation<3>::Data"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN15DataOutRotationILi3EE4DataEEEvT_S6_(%"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"*) #1 comdat align 2 {
  %3 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %4 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %3, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %originalBBpart24, %2
  %6 = load i32, i32* @x.371
  %7 = load i32, i32* @y.372
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %15 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %4, align 8
  %16 = icmp ne %"struct.DataOutRotation<3>::Data"* %14, %15
  %17 = load i32, i32* @x.371
  %18 = load i32, i32* @y.372
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %47

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %27 = call %"struct.DataOutRotation<3>::Data"* @_ZSt11__addressofIN15DataOutRotationILi3EE4DataEEPT_RS3_(%"struct.DataOutRotation<3>::Data"* dereferenceable(72) %26)
  call void @_ZSt8_DestroyIN15DataOutRotationILi3EE4DataEEvPT_(%"struct.DataOutRotation<3>::Data"* %27)
  br label %28

; <label>:28:                                     ; preds = %25
  %29 = load i32, i32* @x.371
  %30 = load i32, i32* @y.372
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %38 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %37, i32 1
  store %"struct.DataOutRotation<3>::Data"* %38, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %39 = load i32, i32* @x.371
  %40 = load i32, i32* @y.372
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %5

; <label>:47:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %48 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %49 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %4, align 8
  %50 = icmp ne %"struct.DataOutRotation<3>::Data"* %48, %49
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %51 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %3, align 8
  %52 = getelementptr inbounds %"struct.DataOutRotation<3>::Data", %"struct.DataOutRotation<3>::Data"* %51, i32 1
  store %"struct.DataOutRotation<3>::Data"* %52, %"struct.DataOutRotation<3>::Data"** %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN15DataOutRotationILi3EE4DataEEvPT_(%"struct.DataOutRotation<3>::Data"*) #1 comdat {
  %2 = load i32, i32* @x.373
  %3 = load i32, i32* @y.374
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %10, align 8
  %11 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %10, align 8
  call void @_ZN15DataOutRotationILi3EE4DataD2Ev(%"struct.DataOutRotation<3>::Data"* %11)
  %12 = load i32, i32* @x.373
  %13 = load i32, i32* @y.374
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %20, align 8
  %21 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %20, align 8
  call void @_ZN15DataOutRotationILi3EE4DataD2Ev(%"struct.DataOutRotation<3>::Data"* %21)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN15DataOutRotationILi3EE4DataESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.124"*, %"struct.DataOutRotation<3>::Data"*, i64) #1 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.124"*, align 8
  %5 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.124"* %0, %"struct.std::_Vector_base.124"** %4, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.124"*, %"struct.std::_Vector_base.124"** %4, align 8
  %8 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %5, align 8
  %9 = icmp ne %"struct.DataOutRotation<3>::Data"* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.124", %"struct.std::_Vector_base.124"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<DataOutRotation<3>::Data, std::allocator<DataOutRotation<3>::Data> >::_Vector_impl"* %11 to %"class.std::allocator.125"*
  %13 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.125"* dereferenceable(1) %12, %"struct.DataOutRotation<3>::Data"* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN15DataOutRotationILi3EE4DataEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.125"* dereferenceable(1), %"struct.DataOutRotation<3>::Data"*, i64) #1 comdat align 2 {
  %4 = load i32, i32* @x.377
  %5 = load i32, i32* @y.378
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.125"*, align 8
  %13 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %12, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %12, align 8
  %16 = bitcast %"class.std::allocator.125"* %15 to %"class.__gnu_cxx::new_allocator.126"*
  %17 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.126"* %16, %"struct.DataOutRotation<3>::Data"* %17, i64 %18)
  %19 = load i32, i32* @x.377
  %20 = load i32, i32* @y.378
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.125"*, align 8
  %28 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.125"* %0, %"class.std::allocator.125"** %27, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.125"*, %"class.std::allocator.125"** %27, align 8
  %31 = bitcast %"class.std::allocator.125"* %30 to %"class.__gnu_cxx::new_allocator.126"*
  %32 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.126"* %31, %"struct.DataOutRotation<3>::Data"* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN15DataOutRotationILi3EE4DataEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.126"*, %"struct.DataOutRotation<3>::Data"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.126"*, align 8
  %5 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.126"* %0, %"class.__gnu_cxx::new_allocator.126"** %4, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.126"*, %"class.__gnu_cxx::new_allocator.126"** %4, align 8
  %8 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %5, align 8
  %9 = bitcast %"struct.DataOutRotation<3>::Data"* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataES2_EvT_S4_RSaIT0_E(%"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"*, %"class.std::allocator.125"* dereferenceable(1)) #1 comdat {
  %4 = load i32, i32* @x.381
  %5 = load i32, i32* @y.382
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %13 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %14 = alloca %"class.std::allocator.125"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %12, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %13, align 8
  store %"class.std::allocator.125"* %2, %"class.std::allocator.125"** %14, align 8
  %15 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %12, align 8
  %16 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %13, align 8
  call void @_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataEEvT_S4_(%"struct.DataOutRotation<3>::Data"* %15, %"struct.DataOutRotation<3>::Data"* %16)
  %17 = load i32, i32* @x.381
  %18 = load i32, i32* @y.382
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %26 = alloca %"struct.DataOutRotation<3>::Data"*, align 8
  %27 = alloca %"class.std::allocator.125"*, align 8
  store %"struct.DataOutRotation<3>::Data"* %0, %"struct.DataOutRotation<3>::Data"** %25, align 8
  store %"struct.DataOutRotation<3>::Data"* %1, %"struct.DataOutRotation<3>::Data"** %26, align 8
  store %"class.std::allocator.125"* %2, %"class.std::allocator.125"** %27, align 8
  %28 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %25, align 8
  %29 = load %"struct.DataOutRotation<3>::Data"*, %"struct.DataOutRotation<3>::Data"** %26, align 8
  call void @_ZSt8_DestroyIPN15DataOutRotationILi3EE4DataEEvT_S4_(%"struct.DataOutRotation<3>::Data"* %28, %"struct.DataOutRotation<3>::Data"* %29)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(%"class.std::vector.73"*, double*, i64, double* dereferenceable(8)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  %6 = alloca %"class.std::vector.73"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca double*, align 8
  %9 = alloca double, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  %12 = alloca double*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  %16 = alloca double*, align 8
  %17 = alloca double*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %5, i32 0, i32 0
  store double* %1, double** %20, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %6, align 8
  store i64 %2, i64* %7, align 8
  store double* %3, double** %8, align 8
  %21 = load %"class.std::vector.73"*, %"class.std::vector.73"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %405

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load double*, double** %28, align 8
  %30 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load double*, double** %33, align 8
  %35 = ptrtoint double* %29 to i64
  %36 = ptrtoint double* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 8
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %152

; <label>:41:                                     ; preds = %24
  %42 = load double*, double** %8, align 8
  %43 = load double, double* %42, align 8
  store double %43, double* %9, align 8
  %44 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.73"* %21)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %11, i32 0, i32 0
  store double* %44, double** %45, align 8
  %46 = call i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.138"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.138"* dereferenceable(8) %5)
  store i64 %46, i64* %10, align 8
  %47 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %49, i32 0, i32 1
  %51 = load double*, double** %50, align 8
  store double* %51, double** %12, align 8
  %52 = load i64, i64* %10, align 8
  %53 = load i64, i64* %7, align 8
  %54 = icmp ugt i64 %52, %53
  br i1 %54, label %55, label %98

; <label>:55:                                     ; preds = %41
  %56 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %56, i32 0, i32 0
  %58 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %57 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %58, i32 0, i32 1
  %60 = load double*, double** %59, align 8
  %61 = load i64, i64* %7, align 8
  %62 = sub i64 0, %61
  %63 = getelementptr inbounds double, double* %60, i64 %62
  %64 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %65 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load double*, double** %67, align 8
  %69 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %70 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %71, i32 0, i32 1
  %73 = load double*, double** %72, align 8
  %74 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %75 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %74)
  %76 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %63, double* %68, double* %73, %"class.std::allocator.75"* dereferenceable(1) %75)
  %77 = load i64, i64* %7, align 8
  %78 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %78, i32 0, i32 0
  %80 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %79 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %80, i32 0, i32 1
  %82 = load double*, double** %81, align 8
  %83 = getelementptr inbounds double, double* %82, i64 %77
  store double* %83, double** %81, align 8
  %84 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
  %85 = load double*, double** %84, align 8
  %86 = load double*, double** %12, align 8
  %87 = load i64, i64* %7, align 8
  %88 = sub i64 0, %87
  %89 = getelementptr inbounds double, double* %86, i64 %88
  %90 = load double*, double** %12, align 8
  %91 = call double* @_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_(double* %85, double* %89, double* %90)
  %92 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
  %93 = load double*, double** %92, align 8
  %94 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
  %95 = load double*, double** %94, align 8
  %96 = load i64, i64* %7, align 8
  %97 = getelementptr inbounds double, double* %95, i64 %96
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %93, double* %97, double* dereferenceable(8) %9)
  br label %151

; <label>:98:                                     ; preds = %41
  %99 = load i32, i32* @x.383
  %100 = load i32, i32* @y.384
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %98, %originalBBalteredBB
  %107 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %108 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %107, i32 0, i32 0
  %109 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %108 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %109, i32 0, i32 1
  %111 = load double*, double** %110, align 8
  %112 = load i64, i64* %7, align 8
  %113 = load i64, i64* %10, align 8
  %114 = sub i64 %112, %113
  %115 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %116 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %115)
  %117 = call double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %111, i64 %114, double* dereferenceable(8) %9, %"class.std::allocator.75"* dereferenceable(1) %116)
  %118 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %118, i32 0, i32 0
  %120 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %119 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %120, i32 0, i32 1
  store double* %117, double** %121, align 8
  %122 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
  %123 = load double*, double** %122, align 8
  %124 = load double*, double** %12, align 8
  %125 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %126 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %127, i32 0, i32 1
  %129 = load double*, double** %128, align 8
  %130 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %131 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %130)
  %132 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %123, double* %124, double* %129, %"class.std::allocator.75"* dereferenceable(1) %131)
  %133 = load i64, i64* %10, align 8
  %134 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %134, i32 0, i32 0
  %136 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %135 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %136, i32 0, i32 1
  %138 = load double*, double** %137, align 8
  %139 = getelementptr inbounds double, double* %138, i64 %133
  store double* %139, double** %137, align 8
  %140 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
  %141 = load double*, double** %140, align 8
  %142 = load double*, double** %12, align 8
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %141, double* %142, double* dereferenceable(8) %9)
  %143 = load i32, i32* @x.383
  %144 = load i32, i32* @y.384
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %151

; <label>:151:                                    ; preds = %originalBBpart2, %55
  br label %404

; <label>:152:                                    ; preds = %24
  %153 = load i64, i64* %7, align 8
  %154 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.73"* %21, i64 %153, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %154, i64* %13, align 8
  %155 = call double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.73"* %21)
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %15, i32 0, i32 0
  store double* %155, double** %156, align 8
  %157 = call i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.138"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.138"* dereferenceable(8) %15)
  store i64 %157, i64* %14, align 8
  %158 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %159 = load i64, i64* %13, align 8
  %160 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.74"* %158, i64 %159)
  store double* %160, double** %16, align 8
  %161 = load double*, double** %16, align 8
  store double* %161, double** %17, align 8
  %162 = load double*, double** %16, align 8
  %163 = load i64, i64* %14, align 8
  %164 = getelementptr inbounds double, double* %162, i64 %163
  %165 = load i64, i64* %7, align 8
  %166 = load double*, double** %8, align 8
  %167 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %168 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %167)
          to label %169 unwind label %219

; <label>:169:                                    ; preds = %152
  %170 = invoke double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %164, i64 %165, double* dereferenceable(8) %166, %"class.std::allocator.75"* dereferenceable(1) %168)
          to label %171 unwind label %219

; <label>:171:                                    ; preds = %169
  store double* null, double** %17, align 8
  %172 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %172, i32 0, i32 0
  %174 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %173 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %174, i32 0, i32 0
  %176 = load double*, double** %175, align 8
  %177 = invoke dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
          to label %178 unwind label %219

; <label>:178:                                    ; preds = %171
  %179 = load double*, double** %177, align 8
  %180 = load double*, double** %16, align 8
  %181 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %182 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %181)
          to label %183 unwind label %219

; <label>:183:                                    ; preds = %178
  %184 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %176, double* %179, double* %180, %"class.std::allocator.75"* dereferenceable(1) %182)
          to label %185 unwind label %219

; <label>:185:                                    ; preds = %183
  store double* %184, double** %17, align 8
  %186 = load i64, i64* %7, align 8
  %187 = load double*, double** %17, align 8
  %188 = getelementptr inbounds double, double* %187, i64 %186
  store double* %188, double** %17, align 8
  %189 = invoke dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
          to label %190 unwind label %219

; <label>:190:                                    ; preds = %185
  %191 = load double*, double** %189, align 8
  %192 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %192, i32 0, i32 0
  %194 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %193 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %195 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %194, i32 0, i32 1
  %196 = load double*, double** %195, align 8
  %197 = load double*, double** %17, align 8
  %198 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %199 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %198)
          to label %200 unwind label %219

; <label>:200:                                    ; preds = %190
  %201 = load i32, i32* @x.383
  %202 = load i32, i32* @y.384
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %200, %originalBB5alteredBB
  %209 = load i32, i32* @x.383
  %210 = load i32, i32* @y.384
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  %217 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %191, double* %196, double* %197, %"class.std::allocator.75"* dereferenceable(1) %199)
          to label %218 unwind label %219

; <label>:218:                                    ; preds = %originalBBpart27
  store double* %217, double** %17, align 8
  br label %354

; <label>:219:                                    ; preds = %originalBBpart27, %190, %185, %183, %178, %171, %169, %152
  %220 = load i32, i32* @x.383
  %221 = load i32, i32* @y.384
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %219, %originalBB9alteredBB
  %228 = landingpad { i8*, i32 }
          catch i8* null
  %229 = extractvalue { i8*, i32 } %228, 0
  store i8* %229, i8** %18, align 8
  %230 = extractvalue { i8*, i32 } %228, 1
  store i32 %230, i32* %19, align 4
  %231 = load i32, i32* @x.383
  %232 = load i32, i32* @y.384
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br label %239

; <label>:239:                                    ; preds = %originalBBpart211
  %240 = load i32, i32* @x.383
  %241 = load i32, i32* @y.384
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %239, %originalBB13alteredBB
  %248 = load i8*, i8** %18, align 8
  %249 = call i8* @__cxa_begin_catch(i8* %248) #11
  %250 = load double*, double** %17, align 8
  %251 = icmp ne double* %250, null
  %252 = load i32, i32* @x.383
  %253 = load i32, i32* @y.384
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br i1 %251, label %309, label %260

; <label>:260:                                    ; preds = %originalBBpart215
  %261 = load double*, double** %16, align 8
  %262 = load i64, i64* %14, align 8
  %263 = getelementptr inbounds double, double* %261, i64 %262
  %264 = load double*, double** %16, align 8
  %265 = load i64, i64* %14, align 8
  %266 = getelementptr inbounds double, double* %264, i64 %265
  %267 = load i64, i64* %7, align 8
  %268 = getelementptr inbounds double, double* %266, i64 %267
  %269 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %270 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %269)
          to label %271 unwind label %289

; <label>:271:                                    ; preds = %260
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %263, double* %268, %"class.std::allocator.75"* dereferenceable(1) %270)
          to label %272 unwind label %289

; <label>:272:                                    ; preds = %271
  %273 = load i32, i32* @x.383
  %274 = load i32, i32* @y.384
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %272, %originalBB17alteredBB
  %281 = load i32, i32* @x.383
  %282 = load i32, i32* @y.384
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %348

; <label>:289:                                    ; preds = %352, %348, %originalBBpart231, %originalBBpart227, %271, %260
  %290 = load i32, i32* @x.383
  %291 = load i32, i32* @y.384
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %289, %originalBB21alteredBB
  %298 = landingpad { i8*, i32 }
          cleanup
  %299 = extractvalue { i8*, i32 } %298, 0
  store i8* %299, i8** %18, align 8
  %300 = extractvalue { i8*, i32 } %298, 1
  store i32 %300, i32* %19, align 4
  %301 = load i32, i32* @x.383
  %302 = load i32, i32* @y.384
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  invoke void @__cxa_end_catch()
          to label %353 unwind label %411

; <label>:309:                                    ; preds = %originalBBpart215
  %310 = load i32, i32* @x.383
  %311 = load i32, i32* @y.384
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %309, %originalBB25alteredBB
  %318 = load double*, double** %16, align 8
  %319 = load double*, double** %17, align 8
  %320 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %321 = load i32, i32* @x.383
  %322 = load i32, i32* @y.384
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  %329 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %320)
          to label %330 unwind label %289

; <label>:330:                                    ; preds = %originalBBpart227
  %331 = load i32, i32* @x.383
  %332 = load i32, i32* @y.384
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %330, %originalBB29alteredBB
  %339 = load i32, i32* @x.383
  %340 = load i32, i32* @y.384
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %318, double* %319, %"class.std::allocator.75"* dereferenceable(1) %329)
          to label %347 unwind label %289

; <label>:347:                                    ; preds = %originalBBpart231
  br label %348

; <label>:348:                                    ; preds = %347, %originalBBpart219
  %349 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %350 = load double*, double** %16, align 8
  %351 = load i64, i64* %13, align 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.74"* %349, double* %350, i64 %351)
          to label %352 unwind label %289

; <label>:352:                                    ; preds = %348
  invoke void @__cxa_rethrow() #14
          to label %414 unwind label %289

; <label>:353:                                    ; preds = %originalBBpart223
  br label %406

; <label>:354:                                    ; preds = %218
  %355 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %356 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %355, i32 0, i32 0
  %357 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %356 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %358 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %357, i32 0, i32 0
  %359 = load double*, double** %358, align 8
  %360 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %361 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %360, i32 0, i32 0
  %362 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %361 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %362, i32 0, i32 1
  %364 = load double*, double** %363, align 8
  %365 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %366 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %365)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %359, double* %364, %"class.std::allocator.75"* dereferenceable(1) %366)
  %367 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %368 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %369 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %368, i32 0, i32 0
  %370 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %369 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %371 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %370, i32 0, i32 0
  %372 = load double*, double** %371, align 8
  %373 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %374 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %373, i32 0, i32 0
  %375 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %374 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %375, i32 0, i32 2
  %377 = load double*, double** %376, align 8
  %378 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %379 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %378, i32 0, i32 0
  %380 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %379 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %380, i32 0, i32 0
  %382 = load double*, double** %381, align 8
  %383 = ptrtoint double* %377 to i64
  %384 = ptrtoint double* %382 to i64
  %385 = sub i64 %383, %384
  %386 = sdiv exact i64 %385, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.74"* %367, double* %372, i64 %386)
  %387 = load double*, double** %16, align 8
  %388 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %389 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %388, i32 0, i32 0
  %390 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %389 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %391 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %390, i32 0, i32 0
  store double* %387, double** %391, align 8
  %392 = load double*, double** %17, align 8
  %393 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %393, i32 0, i32 0
  %395 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %394 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %395, i32 0, i32 1
  store double* %392, double** %396, align 8
  %397 = load double*, double** %16, align 8
  %398 = load i64, i64* %13, align 8
  %399 = getelementptr inbounds double, double* %397, i64 %398
  %400 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %401 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %400, i32 0, i32 0
  %402 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %401 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %403 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %402, i32 0, i32 2
  store double* %399, double** %403, align 8
  br label %404

; <label>:404:                                    ; preds = %354, %151
  br label %405

; <label>:405:                                    ; preds = %404, %4
  ret void

; <label>:406:                                    ; preds = %353
  %407 = load i8*, i8** %18, align 8
  %408 = load i32, i32* %19, align 4
  %409 = insertvalue { i8*, i32 } undef, i8* %407, 0
  %410 = insertvalue { i8*, i32 } %409, i32 %408, 1
  resume { i8*, i32 } %410

; <label>:411:                                    ; preds = %originalBBpart223
  %412 = landingpad { i8*, i32 }
          catch i8* null
  %413 = extractvalue { i8*, i32 } %412, 0
  call void @__clang_call_terminate(i8* %413) #9
  unreachable

; <label>:414:                                    ; preds = %352
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %98
  %415 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %415, i32 0, i32 0
  %417 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %416 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %418 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %417, i32 0, i32 1
  %419 = load double*, double** %418, align 8
  %420 = load i64, i64* %7, align 8
  %421 = load i64, i64* %10, align 8
  %_ = sub i64 %420, %421
  %gen = mul i64 %_, %421
  %_1 = sub i64 %420, %421
  %gen2 = mul i64 %_1, %421
  %_3 = sub i64 0, %420
  %gen4 = add i64 %_3, %421
  %422 = sub i64 %420, %421
  %423 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %424 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %423)
  %425 = call double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %419, i64 %422, double* dereferenceable(8) %9, %"class.std::allocator.75"* dereferenceable(1) %424)
  %426 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %427 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %426, i32 0, i32 0
  %428 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %427 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %429 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %428, i32 0, i32 1
  store double* %425, double** %429, align 8
  %430 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
  %431 = load double*, double** %430, align 8
  %432 = load double*, double** %12, align 8
  %433 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %434 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %433, i32 0, i32 0
  %435 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %434 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %436 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %435, i32 0, i32 1
  %437 = load double*, double** %436, align 8
  %438 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %439 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %438)
  %440 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %431, double* %432, double* %437, %"class.std::allocator.75"* dereferenceable(1) %439)
  %441 = load i64, i64* %10, align 8
  %442 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %442, i32 0, i32 0
  %444 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %443 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %445 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %444, i32 0, i32 1
  %446 = load double*, double** %445, align 8
  %447 = getelementptr inbounds double, double* %446, i64 %441
  store double* %447, double** %445, align 8
  %448 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %5)
  %449 = load double*, double** %448, align 8
  %450 = load double*, double** %12, align 8
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %449, double* %450, double* dereferenceable(8) %9)
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %200
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %219
  %451 = landingpad { i8*, i32 }
          catch i8* null
  %452 = extractvalue { i8*, i32 } %451, 0
  store i8* %452, i8** %18, align 8
  %453 = extractvalue { i8*, i32 } %451, 1
  store i32 %453, i32* %19, align 4
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %239
  %454 = load i8*, i8** %18, align 8
  %455 = call i8* @__cxa_begin_catch(i8* %454) #11
  %456 = load double*, double** %17, align 8
  %457 = icmp ne double* %456, null
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %272
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %289
  %458 = landingpad { i8*, i32 }
          cleanup
  %459 = extractvalue { i8*, i32 } %458, 0
  store i8* %459, i8** %18, align 8
  %460 = extractvalue { i8*, i32 } %458, 1
  store i32 %460, i32* %19, align 4
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %309
  %461 = load double*, double** %16, align 8
  %462 = load double*, double** %17, align 8
  %463 = bitcast %"class.std::vector.73"* %21 to %"struct.std::_Vector_base.74"*
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %330
  br label %originalBB29
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.73"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.385
  %3 = load i32, i32* @y.386
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  %11 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %11, align 8
  %12 = load %"class.std::vector.73"*, %"class.std::vector.73"** %11, align 8
  %13 = bitcast %"class.std::vector.73"* %12 to %"struct.std::_Vector_base.74"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.138"* %10, double** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %10, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = load i32, i32* @x.385
  %20 = load i32, i32* @y.386
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  %28 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %28, align 8
  %29 = load %"class.std::vector.73"*, %"class.std::vector.73"** %28, align 8
  %30 = bitcast %"class.std::vector.73"* %29 to %"struct.std::_Vector_base.74"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.138"* %27, double** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %27, i32 0, i32 0
  %35 = load double*, double** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.73"*, double*) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.73"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %"class.std::vector.73"*, %"class.std::vector.73"** %3, align 8
  %7 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load double*, double** %10, align 8
  %12 = load double*, double** %4, align 8
  %13 = ptrtoint double* %11 to i64
  %14 = ptrtoint double* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 8
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %49

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.387
  %21 = load i32, i32* @y.388
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load double*, double** %4, align 8
  %29 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %30 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %31, i32 0, i32 1
  %33 = load double*, double** %32, align 8
  %34 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %35 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %34)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %28, double* %33, %"class.std::allocator.75"* dereferenceable(1) %35)
  %36 = load double*, double** %4, align 8
  %37 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %38 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %39, i32 0, i32 1
  store double* %36, double** %40, align 8
  %41 = load i32, i32* @x.387
  %42 = load i32, i32* @y.388
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart2, %2
  %50 = load i32, i32* @x.387
  %51 = load i32, i32* @y.388
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* @x.387
  %59 = load i32, i32* @y.388
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %66 = load double*, double** %4, align 8
  %67 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %67, i32 0, i32 0
  %69 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %68 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %69, i32 0, i32 1
  %71 = load double*, double** %70, align 8
  %72 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %73 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %72)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %66, double* %71, %"class.std::allocator.75"* dereferenceable(1) %73)
  %74 = load double*, double** %4, align 8
  %75 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %76 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %77, i32 0, i32 1
  store double* %74, double** %78, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.138"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.138"* dereferenceable(8)) #1 comdat {
  %3 = load i32, i32* @x.389
  %4 = load i32, i32* @y.390
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.138"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.138"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.138"* %0, %"class.__gnu_cxx::__normal_iterator.138"** %11, align 8
  store %"class.__gnu_cxx::__normal_iterator.138"* %1, %"class.__gnu_cxx::__normal_iterator.138"** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.138"*, %"class.__gnu_cxx::__normal_iterator.138"** %11, align 8
  %14 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %13)
  %15 = load double*, double** %14, align 8
  %16 = load %"class.__gnu_cxx::__normal_iterator.138"*, %"class.__gnu_cxx::__normal_iterator.138"** %12, align 8
  %17 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %16)
  %18 = load double*, double** %17, align 8
  %19 = ptrtoint double* %15 to i64
  %20 = ptrtoint double* %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 8
  %23 = load i32, i32* @x.389
  %24 = load i32, i32* @y.390
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %22

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.138"*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.138"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.138"* %0, %"class.__gnu_cxx::__normal_iterator.138"** %31, align 8
  store %"class.__gnu_cxx::__normal_iterator.138"* %1, %"class.__gnu_cxx::__normal_iterator.138"** %32, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.138"*, %"class.__gnu_cxx::__normal_iterator.138"** %31, align 8
  %34 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %33)
  %35 = load double*, double** %34, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator.138"*, %"class.__gnu_cxx::__normal_iterator.138"** %32, align 8
  %37 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"* %36)
  %38 = load double*, double** %37, align 8
  %39 = ptrtoint double* %35 to i64
  %40 = ptrtoint double* %38 to i64
  %_ = shl i64 %39, %40
  %_1 = shl i64 %39, %40
  %_2 = shl i64 %39, %40
  %_3 = sub i64 %39, %40
  %gen = mul i64 %_3, %40
  %_4 = sub i64 %39, %40
  %gen5 = mul i64 %_4, %40
  %_6 = sub i64 %39, %40
  %gen7 = mul i64 %_6, %40
  %41 = sub i64 %39, %40
  %_8 = sub i64 %41, 8
  %gen9 = mul i64 %_8, 8
  %_10 = shl i64 %41, 8
  %_11 = shl i64 %41, 8
  %_12 = sub i64 0, %41
  %gen13 = add i64 %_12, 8
  %_14 = shl i64 %41, 8
  %42 = sdiv exact i64 %41, 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.75"* dereferenceable(1)) #1 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.75"*, align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %8, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = load double*, double** %7, align 8
  %12 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %8, align 8
  %13 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %9, double* %10, double* %11, %"class.std::allocator.75"* dereferenceable(1) %12)
  ret double* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.138"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.138"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.138"* %0, %"class.__gnu_cxx::__normal_iterator.138"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.138"*, %"class.__gnu_cxx::__normal_iterator.138"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %3, i32 0, i32 0
  ret double** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPddEvT_S1_RKT0_(double*, double*, double* dereferenceable(8)) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  call void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double* %8, double* %10, double* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double*, i64, double* dereferenceable(8), %"class.std::allocator.75"* dereferenceable(1)) #1 comdat {
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.75"*, align 8
  store double* %0, double** %5, align 8
  store i64 %1, i64* %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %8, align 8
  %9 = load double*, double** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load double*, double** %7, align 8
  %12 = call double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double* %9, i64 %10, double* dereferenceable(8) %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.73"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.73"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.73"* %9)
  %11 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %33

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.401
  %17 = load i32, i32* @y.402
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %24) #14
  %25 = load i32, i32* @x.401
  %26 = load i32, i32* @y.402
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:33:                                     ; preds = %3
  %34 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %9)
  %35 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %9)
  store i64 %35, i64* %8, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, %37
  store i64 %38, i64* %7, align 8
  %39 = load i64, i64* %7, align 8
  %40 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.73"* %9)
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %62, label %42

; <label>:42:                                     ; preds = %33
  %43 = load i32, i32* @x.401
  %44 = load i32, i32* @y.402
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i64, i64* %7, align 8
  %52 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.73"* %9)
  %53 = icmp ugt i64 %51, %52
  %54 = load i32, i32* @x.401
  %55 = load i32, i32* @y.402
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %53, label %62, label %80

; <label>:62:                                     ; preds = %originalBBpart24, %33
  %63 = load i32, i32* @x.401
  %64 = load i32, i32* @y.402
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.73"* %9)
  %72 = load i32, i32* @x.401
  %73 = load i32, i32* @y.402
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %98

; <label>:80:                                     ; preds = %originalBBpart24
  %81 = load i32, i32* @x.401
  %82 = load i32, i32* @y.402
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i64, i64* %7, align 8
  %90 = load i32, i32* @x.401
  %91 = load i32, i32* @y.402
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %98

; <label>:98:                                     ; preds = %originalBBpart212, %originalBBpart28
  %99 = phi i64 [ %71, %originalBBpart28 ], [ %89, %originalBBpart212 ]
  %100 = load i32, i32* @x.401
  %101 = load i32, i32* @y.402
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  %108 = load i32, i32* @x.401
  %109 = load i32, i32* @y.402
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i64 %99

originalBBalteredBB:                              ; preds = %originalBB, %15
  %116 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %116) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %117 = load i64, i64* %7, align 8
  %118 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.73"* %9)
  %119 = icmp ugt i64 %117, %118
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %120 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.73"* %9)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %121 = load i64, i64* %7, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.73"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.403
  %3 = load i32, i32* @y.404
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  %11 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %11, align 8
  %12 = load %"class.std::vector.73"*, %"class.std::vector.73"** %11, align 8
  %13 = bitcast %"class.std::vector.73"* %12 to %"struct.std::_Vector_base.74"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.138"* %10, double** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %10, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = load i32, i32* @x.403
  %20 = load i32, i32* @y.404
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.138", align 8
  %28 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %28, align 8
  %29 = load %"class.std::vector.73"*, %"class.std::vector.73"** %28, align 8
  %30 = bitcast %"class.std::vector.73"* %29 to %"struct.std::_Vector_base.74"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.138"* %27, double** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %27, i32 0, i32 0
  %35 = load double*, double** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.75"* dereferenceable(1)) #1 comdat {
  %5 = load i32, i32* @x.405
  %6 = load i32, i32* @y.406
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.75"*, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %16, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %16, align 8
  %21 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %17, double* %18, double* %19, %"class.std::allocator.75"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.405
  %23 = load i32, i32* @y.406
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  %32 = alloca double*, align 8
  %33 = alloca %"class.std::allocator.75"*, align 8
  store double* %0, double** %30, align 8
  store double* %1, double** %31, align 8
  store double* %2, double** %32, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %33, align 8
  %34 = load double*, double** %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = load double*, double** %32, align 8
  %37 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %33, align 8
  %38 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %34, double* %35, double* %36, %"class.std::allocator.75"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double*, double*, double*, %"class.std::allocator.75"* dereferenceable(1)) #1 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.75"*, align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %8, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = load double*, double** %7, align 8
  %12 = call double* @_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_(double* %9, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_(double*, double*, double*) #1 comdat align 2 {
  %4 = load i32, i32* @x.411
  %5 = load i32, i32* @y.412
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = load double*, double** %13, align 8
  %17 = load double*, double** %14, align 8
  %18 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %15, double* %16, double* %17)
  %19 = load i32, i32* @x.411
  %20 = load i32, i32* @y.412
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca double*, align 8
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  store double* %0, double** %27, align 8
  store double* %1, double** %28, align 8
  store double* %2, double** %29, align 8
  %30 = load double*, double** %27, align 8
  %31 = load double*, double** %28, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %30, double* %31, double* %32)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIPdET_S1_(double*) #0 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.419
  %5 = load i32, i32* @y.420
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i8, align 1
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load double*, double** %12, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %16, double* %17, double* %18)
  %20 = load i32, i32* @x.419
  %21 = load i32, i32* @y.420
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca i8, align 1
  store double* %0, double** %28, align 8
  store double* %1, double** %29, align 8
  store double* %2, double** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load double*, double** %28, align 8
  %33 = load double*, double** %29, align 8
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %32, double* %33, double* %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = load i32, i32* @x.423
  %5 = load i32, i32* @y.424
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i8, align 1
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load double*, double** %12, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = call double* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_(double* %16, double* %17, double* %18)
  %20 = load i32, i32* @x.423
  %21 = load i32, i32* @y.424
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca i8, align 1
  store double* %0, double** %28, align 8
  store double* %1, double** %29, align 8
  store double* %2, double** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load double*, double** %28, align 8
  %33 = load double*, double** %29, align 8
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_(double* %32, double* %33, double* %34)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_(double*, double*, double*) #0 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double*, double** %4, align 8
  %10 = ptrtoint double* %8 to i64
  %11 = ptrtoint double* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %26

; <label>:16:                                     ; preds = %3
  %17 = load double*, double** %6, align 8
  %18 = load i64, i64* %7, align 8
  %19 = sub i64 0, %18
  %20 = getelementptr inbounds double, double* %17, i64 %19
  %21 = bitcast double* %20 to i8*
  %22 = load double*, double** %4, align 8
  %23 = bitcast double* %22 to i8*
  %24 = load i64, i64* %7, align 8
  %25 = mul i64 8, %24
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %21, i8* %23, i64 %25, i32 8, i1 false)
  br label %26

; <label>:26:                                     ; preds = %16, %3
  %27 = load double*, double** %6, align 8
  %28 = load i64, i64* %7, align 8
  %29 = sub i64 0, %28
  %30 = getelementptr inbounds double, double* %27, i64 %29
  ret double* %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double*, double*, double* dereferenceable(8)) #0 comdat {
  %4 = load i32, i32* @x.427
  %5 = load i32, i32* @y.428
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %16 = load double*, double** %14, align 8
  %17 = load double, double* %16, align 8
  store double %17, double* %15, align 8
  %18 = load i32, i32* @x.427
  %19 = load i32, i32* @y.428
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %33, %originalBBpart2
  %27 = load double*, double** %12, align 8
  %28 = load double*, double** %13, align 8
  %29 = icmp ne double* %27, %28
  br i1 %29, label %30, label %36

; <label>:30:                                     ; preds = %26
  %31 = load double, double* %15, align 8
  %32 = load double*, double** %12, align 8
  store double %31, double* %32, align 8
  br label %33

; <label>:33:                                     ; preds = %30
  %34 = load double*, double** %12, align 8
  %35 = getelementptr inbounds double, double* %34, i32 1
  store double* %35, double** %12, align 8
  br label %26

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.427
  %38 = load i32, i32* @y.428
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i32, i32* @x.427
  %46 = load i32, i32* @y.428
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %53 = alloca double*, align 8
  %54 = alloca double*, align 8
  %55 = alloca double*, align 8
  %56 = alloca double, align 8
  store double* %0, double** %53, align 8
  store double* %1, double** %54, align 8
  store double* %2, double** %55, align 8
  %57 = load double*, double** %55, align 8
  %58 = load double, double* %57, align 8
  store double %58, double* %56, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double*, i64, double* dereferenceable(8)) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_(double* %8, i64 %9, double* dereferenceable(8) %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_(double*, i64, double* dereferenceable(8)) #1 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load double*, double** %6, align 8
  %10 = call double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double* %7, i64 %8, double* dereferenceable(8) %9)
  ret double* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double*, i64, double* dereferenceable(8)) #1 comdat {
  %4 = load i32, i32* @x.433
  %5 = load i32, i32* @y.434
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca i64, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store i64 %1, i64* %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %15)
  %17 = load i64, i64* %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = call double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %16, i64 %17, double* dereferenceable(8) %18)
  %20 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %12, double* %19)
  %21 = load i32, i32* @x.433
  %22 = load i32, i32* @y.434
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca double*, align 8
  %30 = alloca i64, align 8
  %31 = alloca double*, align 8
  store double* %0, double** %29, align 8
  store i64 %1, i64* %30, align 8
  store double* %2, double** %31, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %32)
  %34 = load i64, i64* %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = call double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %33, i64 %34, double* dereferenceable(8) %35)
  %37 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %29, double* %36)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i64, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  %8 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %9 = load double*, double** %6, align 8
  %10 = load double, double* %9, align 8
  store double %10, double* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  br label %12

; <label>:12:                                     ; preds = %50, %3
  %13 = load i32, i32* @x.435
  %14 = load i32, i32* @y.436
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %8, align 8
  %22 = icmp ugt i64 %21, 0
  %23 = load i32, i32* @x.435
  %24 = load i32, i32* @y.436
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %55

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.435
  %33 = load i32, i32* @y.436
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load double, double* %7, align 8
  %41 = load double*, double** %4, align 8
  store double %40, double* %41, align 8
  %42 = load i32, i32* @x.435
  %43 = load i32, i32* @y.436
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i64, i64* %8, align 8
  %52 = add i64 %51, -1
  store i64 %52, i64* %8, align 8
  %53 = load double*, double** %4, align 8
  %54 = getelementptr inbounds double, double* %53, i32 1
  store double* %54, double** %4, align 8
  br label %12

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load i32, i32* @x.435
  %57 = load i32, i32* @y.436
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load double*, double** %4, align 8
  %65 = load i32, i32* @x.435
  %66 = load i32, i32* @y.436
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret double* %64

originalBBalteredBB:                              ; preds = %originalBB, %12
  %73 = load i64, i64* %8, align 8
  %74 = icmp ugt i64 %73, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %75 = load double, double* %7, align 8
  %76 = load double*, double** %4, align 8
  store double %75, double* %76, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %77 = load double*, double** %4, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.73"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %2, align 8
  %3 = load %"class.std::vector.73"*, %"class.std::vector.73"** %2, align 8
  %4 = bitcast %"class.std::vector.73"* %3 to %"struct.std::_Vector_base.74"*
  %5 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %4)
  %6 = call i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.75"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = load i32, i32* @x.439
  %4 = load i32, i32* @y.440
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  %14 = load i64*, i64** %12, align 8
  %15 = load i64, i64* %14, align 8
  %16 = load i64*, i64** %13, align 8
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  %19 = load i32, i32* @x.439
  %20 = load i32, i32* @y.440
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %45

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.439
  %29 = load i32, i32* @y.440
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i64*, i64** %13, align 8
  store i64* %36, i64** %11, align 8
  %37 = load i32, i32* @x.439
  %38 = load i32, i32* @y.440
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i64*, i64** %12, align 8
  store i64* %46, i64** %11, align 8
  br label %47

; <label>:47:                                     ; preds = %45, %originalBBpart24
  %48 = load i32, i32* @x.439
  %49 = load i32, i32* @y.440
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i64*, i64** %11, align 8
  %57 = load i32, i32* @x.439
  %58 = load i32, i32* @y.440
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i64* %56

originalBBalteredBB:                              ; preds = %originalBB, %2
  %65 = alloca i64*, align 8
  %66 = alloca i64*, align 8
  %67 = alloca i64*, align 8
  store i64* %0, i64** %66, align 8
  store i64* %1, i64** %67, align 8
  %68 = load i64*, i64** %66, align 8
  %69 = load i64, i64* %68, align 8
  %70 = load i64*, i64** %67, align 8
  %71 = load i64, i64* %70, align 8
  %72 = icmp ult i64 %69, %71
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %73 = load i64*, i64** %13, align 8
  store i64* %73, i64** %11, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %74 = load i64*, i64** %11, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.75"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.75"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %2, align 8
  store i64 1152921504606846975, i64* %3, align 8
  %5 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_(%"class.std::allocator.75"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_(%"class.std::allocator.75"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.443
  %3 = load i32, i32* @y.444
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %10, align 8
  %11 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %10, align 8
  %12 = bitcast %"class.std::allocator.75"* %11 to %"class.__gnu_cxx::new_allocator.76"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.76"* %12) #11
  %14 = load i32, i32* @x.443
  %15 = load i32, i32* @y.444
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %22, align 8
  %23 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %22, align 8
  %24 = bitcast %"class.std::allocator.75"* %23 to %"class.__gnu_cxx::new_allocator.76"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.76"* %24) #11
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.138"*, double** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.138"*, align 8
  %4 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.138"* %0, %"class.__gnu_cxx::__normal_iterator.138"** %3, align 8
  store double** %1, double*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.138"*, %"class.__gnu_cxx::__normal_iterator.138"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.138", %"class.__gnu_cxx::__normal_iterator.138"* %5, i32 0, i32 0
  %7 = load double**, double*** %4, align 8
  %8 = load double*, double** %7, align 8
  store double* %8, double** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6VectorIdESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.78"*, %class.Vector*, i64, %class.Vector* dereferenceable(24)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.139", align 8
  %6 = alloca %"class.std::vector.78"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %class.Vector*, align 8
  %9 = alloca %class.Vector, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.139", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %class.Vector*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.139", align 8
  %18 = alloca %class.Vector*, align 8
  %19 = alloca %class.Vector*, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %5, i32 0, i32 0
  store %class.Vector* %1, %class.Vector** %20, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %class.Vector* %3, %class.Vector** %8, align 8
  %21 = load %"class.std::vector.78"*, %"class.std::vector.78"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %489

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load %class.Vector*, %class.Vector** %28, align 8
  %30 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load %class.Vector*, %class.Vector** %33, align 8
  %35 = ptrtoint %class.Vector* %29 to i64
  %36 = ptrtoint %class.Vector* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 24
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %284

; <label>:41:                                     ; preds = %24
  %42 = load i32, i32* @x.447
  %43 = load i32, i32* @y.448
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %41, %originalBBalteredBB
  %50 = load %class.Vector*, %class.Vector** %8, align 8
  call void @_ZN6VectorIdEC1ERKS0_(%class.Vector* %9, %class.Vector* dereferenceable(24) %50)
  %51 = load i32, i32* @x.447
  %52 = load i32, i32* @y.448
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %59 = invoke %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EE3endEv(%"class.std::vector.78"* %21)
          to label %60 unwind label %202

; <label>:60:                                     ; preds = %originalBBpart2
  %61 = load i32, i32* @x.447
  %62 = load i32, i32* @y.448
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %11, i32 0, i32 0
  store %class.Vector* %59, %class.Vector** %69, align 8
  %70 = load i32, i32* @x.447
  %71 = load i32, i32* @y.448
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %78 = invoke i64 @_ZN9__gnu_cxxmiIP6VectorIdESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8) %5)
          to label %79 unwind label %202

; <label>:79:                                     ; preds = %originalBBpart24
  %80 = load i32, i32* @x.447
  %81 = load i32, i32* @y.448
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %79, %originalBB6alteredBB
  store i64 %78, i64* %10, align 8
  %88 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %89 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %90, i32 0, i32 1
  %92 = load %class.Vector*, %class.Vector** %91, align 8
  store %class.Vector* %92, %class.Vector** %14, align 8
  %93 = load i64, i64* %10, align 8
  %94 = load i64, i64* %7, align 8
  %95 = icmp ugt i64 %93, %94
  %96 = load i32, i32* @x.447
  %97 = load i32, i32* @y.448
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %95, label %104, label %206

; <label>:104:                                    ; preds = %originalBBpart28
  %105 = load i32, i32* @x.447
  %106 = load i32, i32* @y.448
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %104, %originalBB10alteredBB
  %113 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %113, i32 0, i32 0
  %115 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %114 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %115, i32 0, i32 1
  %117 = load %class.Vector*, %class.Vector** %116, align 8
  %118 = load i64, i64* %7, align 8
  %119 = sub i64 0, %118
  %120 = getelementptr inbounds %class.Vector, %class.Vector* %117, i64 %119
  %121 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %121, i32 0, i32 0
  %123 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %122 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %124 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %123, i32 0, i32 1
  %125 = load %class.Vector*, %class.Vector** %124, align 8
  %126 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %126, i32 0, i32 0
  %128 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %127 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %128, i32 0, i32 1
  %130 = load %class.Vector*, %class.Vector** %129, align 8
  %131 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %132 = load i32, i32* @x.447
  %133 = load i32, i32* @y.448
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %140 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %131)
          to label %141 unwind label %202

; <label>:141:                                    ; preds = %originalBBpart212
  %142 = invoke %class.Vector* @_ZSt22__uninitialized_move_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Vector* %120, %class.Vector* %125, %class.Vector* %130, %"class.std::allocator.80"* dereferenceable(1) %140)
          to label %143 unwind label %202

; <label>:143:                                    ; preds = %141
  %144 = load i32, i32* @x.447
  %145 = load i32, i32* @y.448
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %143, %originalBB14alteredBB
  %152 = load i64, i64* %7, align 8
  %153 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %154 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %153, i32 0, i32 0
  %155 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %154 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %156 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %155, i32 0, i32 1
  %157 = load %class.Vector*, %class.Vector** %156, align 8
  %158 = getelementptr inbounds %class.Vector, %class.Vector* %157, i64 %152
  store %class.Vector* %158, %class.Vector** %156, align 8
  %159 = load i32, i32* @x.447
  %160 = load i32, i32* @y.448
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %167 = invoke dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
          to label %168 unwind label %202

; <label>:168:                                    ; preds = %originalBBpart216
  %169 = load %class.Vector*, %class.Vector** %167, align 8
  %170 = load %class.Vector*, %class.Vector** %14, align 8
  %171 = load i64, i64* %7, align 8
  %172 = sub i64 0, %171
  %173 = getelementptr inbounds %class.Vector, %class.Vector* %170, i64 %172
  %174 = load %class.Vector*, %class.Vector** %14, align 8
  %175 = invoke %class.Vector* @_ZSt13copy_backwardIP6VectorIdES2_ET0_T_S4_S3_(%class.Vector* %169, %class.Vector* %173, %class.Vector* %174)
          to label %176 unwind label %202

; <label>:176:                                    ; preds = %168
  %177 = invoke dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
          to label %178 unwind label %202

; <label>:178:                                    ; preds = %176
  %179 = load i32, i32* @x.447
  %180 = load i32, i32* @y.448
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %178, %originalBB18alteredBB
  %187 = load %class.Vector*, %class.Vector** %177, align 8
  %188 = load i32, i32* @x.447
  %189 = load i32, i32* @y.448
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %196 = invoke dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
          to label %197 unwind label %202

; <label>:197:                                    ; preds = %originalBBpart220
  %198 = load %class.Vector*, %class.Vector** %196, align 8
  %199 = load i64, i64* %7, align 8
  %200 = getelementptr inbounds %class.Vector, %class.Vector* %198, i64 %199
  invoke void @_ZSt4fillIP6VectorIdES1_EvT_S3_RKT0_(%class.Vector* %187, %class.Vector* %200, %class.Vector* dereferenceable(24) %9)
          to label %201 unwind label %202

; <label>:201:                                    ; preds = %197
  br label %282

; <label>:202:                                    ; preds = %278, %269, %originalBBpart228, %241, %originalBBpart224, %217, %206, %197, %originalBBpart220, %176, %168, %originalBBpart216, %141, %originalBBpart212, %originalBBpart24, %originalBBpart2
  %203 = landingpad { i8*, i32 }
          cleanup
  %204 = extractvalue { i8*, i32 } %203, 0
  store i8* %204, i8** %12, align 8
  %205 = extractvalue { i8*, i32 } %203, 1
  store i32 %205, i32* %13, align 4
  invoke void @_ZN6VectorIdED2Ev(%class.Vector* %9)
          to label %283 unwind label %511

; <label>:206:                                    ; preds = %originalBBpart28
  %207 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %208 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %207, i32 0, i32 0
  %209 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %208 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %210 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %209, i32 0, i32 1
  %211 = load %class.Vector*, %class.Vector** %210, align 8
  %212 = load i64, i64* %7, align 8
  %213 = load i64, i64* %10, align 8
  %214 = sub i64 %212, %213
  %215 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %216 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %215)
          to label %217 unwind label %202

; <label>:217:                                    ; preds = %206
  %218 = invoke %class.Vector* @_ZSt24__uninitialized_fill_n_aIP6VectorIdEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Vector* %211, i64 %214, %class.Vector* dereferenceable(24) %9, %"class.std::allocator.80"* dereferenceable(1) %216)
          to label %219 unwind label %202

; <label>:219:                                    ; preds = %217
  %220 = load i32, i32* @x.447
  %221 = load i32, i32* @y.448
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %219, %originalBB22alteredBB
  %228 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %228, i32 0, i32 0
  %230 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %229 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %230, i32 0, i32 1
  store %class.Vector* %218, %class.Vector** %231, align 8
  %232 = load i32, i32* @x.447
  %233 = load i32, i32* @y.448
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %240 = invoke dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
          to label %241 unwind label %202

; <label>:241:                                    ; preds = %originalBBpart224
  %242 = load %class.Vector*, %class.Vector** %240, align 8
  %243 = load %class.Vector*, %class.Vector** %14, align 8
  %244 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %244, i32 0, i32 0
  %246 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %245 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %247 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %246, i32 0, i32 1
  %248 = load %class.Vector*, %class.Vector** %247, align 8
  %249 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %250 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %249)
          to label %251 unwind label %202

; <label>:251:                                    ; preds = %241
  %252 = load i32, i32* @x.447
  %253 = load i32, i32* @y.448
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %251, %originalBB26alteredBB
  %260 = load i32, i32* @x.447
  %261 = load i32, i32* @y.448
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %268 = invoke %class.Vector* @_ZSt22__uninitialized_move_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Vector* %242, %class.Vector* %243, %class.Vector* %248, %"class.std::allocator.80"* dereferenceable(1) %250)
          to label %269 unwind label %202

; <label>:269:                                    ; preds = %originalBBpart228
  %270 = load i64, i64* %10, align 8
  %271 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %272 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %271, i32 0, i32 0
  %273 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %272 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %274 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %273, i32 0, i32 1
  %275 = load %class.Vector*, %class.Vector** %274, align 8
  %276 = getelementptr inbounds %class.Vector, %class.Vector* %275, i64 %270
  store %class.Vector* %276, %class.Vector** %274, align 8
  %277 = invoke dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
          to label %278 unwind label %202

; <label>:278:                                    ; preds = %269
  %279 = load %class.Vector*, %class.Vector** %277, align 8
  %280 = load %class.Vector*, %class.Vector** %14, align 8
  invoke void @_ZSt4fillIP6VectorIdES1_EvT_S3_RKT0_(%class.Vector* %279, %class.Vector* %280, %class.Vector* dereferenceable(24) %9)
          to label %281 unwind label %202

; <label>:281:                                    ; preds = %278
  br label %282

; <label>:282:                                    ; preds = %281, %201
  call void @_ZN6VectorIdED2Ev(%class.Vector* %9)
  br label %488

; <label>:283:                                    ; preds = %202
  br label %506

; <label>:284:                                    ; preds = %24
  %285 = load i32, i32* @x.447
  %286 = load i32, i32* @y.448
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %284, %originalBB30alteredBB
  %293 = load i64, i64* %7, align 8
  %294 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.78"* %21, i64 %293, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %294, i64* %15, align 8
  %295 = call %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EE5beginEv(%"class.std::vector.78"* %21)
  %296 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %17, i32 0, i32 0
  store %class.Vector* %295, %class.Vector** %296, align 8
  %297 = call i64 @_ZN9__gnu_cxxmiIP6VectorIdESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8) %17)
  store i64 %297, i64* %16, align 8
  %298 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %299 = load i64, i64* %15, align 8
  %300 = call %class.Vector* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.79"* %298, i64 %299)
  store %class.Vector* %300, %class.Vector** %18, align 8
  %301 = load %class.Vector*, %class.Vector** %18, align 8
  store %class.Vector* %301, %class.Vector** %19, align 8
  %302 = load %class.Vector*, %class.Vector** %18, align 8
  %303 = load i64, i64* %16, align 8
  %304 = getelementptr inbounds %class.Vector, %class.Vector* %302, i64 %303
  %305 = load i64, i64* %7, align 8
  %306 = load %class.Vector*, %class.Vector** %8, align 8
  %307 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %308 = load i32, i32* @x.447
  %309 = load i32, i32* @y.448
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  %316 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %307)
          to label %317 unwind label %399

; <label>:317:                                    ; preds = %originalBBpart232
  %318 = invoke %class.Vector* @_ZSt24__uninitialized_fill_n_aIP6VectorIdEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Vector* %304, i64 %305, %class.Vector* dereferenceable(24) %306, %"class.std::allocator.80"* dereferenceable(1) %316)
          to label %319 unwind label %399

; <label>:319:                                    ; preds = %317
  %320 = load i32, i32* @x.447
  %321 = load i32, i32* @y.448
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %319, %originalBB34alteredBB
  store %class.Vector* null, %class.Vector** %19, align 8
  %328 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %329 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %328, i32 0, i32 0
  %330 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %329 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %331 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %330, i32 0, i32 0
  %332 = load %class.Vector*, %class.Vector** %331, align 8
  %333 = load i32, i32* @x.447
  %334 = load i32, i32* @y.448
  %335 = sub i32 %333, 1
  %336 = mul i32 %333, %335
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %338, %339
  br i1 %340, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  %341 = invoke dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
          to label %342 unwind label %399

; <label>:342:                                    ; preds = %originalBBpart236
  %343 = load %class.Vector*, %class.Vector** %341, align 8
  %344 = load %class.Vector*, %class.Vector** %18, align 8
  %345 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %346 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %345)
          to label %347 unwind label %399

; <label>:347:                                    ; preds = %342
  %348 = load i32, i32* @x.447
  %349 = load i32, i32* @y.448
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %347, %originalBB38alteredBB
  %356 = load i32, i32* @x.447
  %357 = load i32, i32* @y.448
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  %364 = invoke %class.Vector* @_ZSt34__uninitialized_move_if_noexcept_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Vector* %332, %class.Vector* %343, %class.Vector* %344, %"class.std::allocator.80"* dereferenceable(1) %346)
          to label %365 unwind label %399

; <label>:365:                                    ; preds = %originalBBpart240
  store %class.Vector* %364, %class.Vector** %19, align 8
  %366 = load i64, i64* %7, align 8
  %367 = load %class.Vector*, %class.Vector** %19, align 8
  %368 = getelementptr inbounds %class.Vector, %class.Vector* %367, i64 %366
  store %class.Vector* %368, %class.Vector** %19, align 8
  %369 = invoke dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
          to label %370 unwind label %399

; <label>:370:                                    ; preds = %365
  %371 = load i32, i32* @x.447
  %372 = load i32, i32* @y.448
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %370, %originalBB42alteredBB
  %379 = load %class.Vector*, %class.Vector** %369, align 8
  %380 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %380, i32 0, i32 0
  %382 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %381 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %382, i32 0, i32 1
  %384 = load %class.Vector*, %class.Vector** %383, align 8
  %385 = load %class.Vector*, %class.Vector** %19, align 8
  %386 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %387 = load i32, i32* @x.447
  %388 = load i32, i32* @y.448
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  %395 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %386)
          to label %396 unwind label %399

; <label>:396:                                    ; preds = %originalBBpart244
  %397 = invoke %class.Vector* @_ZSt34__uninitialized_move_if_noexcept_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Vector* %379, %class.Vector* %384, %class.Vector* %385, %"class.std::allocator.80"* dereferenceable(1) %395)
          to label %398 unwind label %399

; <label>:398:                                    ; preds = %396
  store %class.Vector* %397, %class.Vector** %19, align 8
  br label %438

; <label>:399:                                    ; preds = %396, %originalBBpart244, %365, %originalBBpart240, %342, %originalBBpart236, %317, %originalBBpart232
  %400 = landingpad { i8*, i32 }
          catch i8* null
  %401 = extractvalue { i8*, i32 } %400, 0
  store i8* %401, i8** %12, align 8
  %402 = extractvalue { i8*, i32 } %400, 1
  store i32 %402, i32* %13, align 4
  br label %403

; <label>:403:                                    ; preds = %399
  %404 = load i8*, i8** %12, align 8
  %405 = call i8* @__cxa_begin_catch(i8* %404) #11
  %406 = load %class.Vector*, %class.Vector** %19, align 8
  %407 = icmp ne %class.Vector* %406, null
  br i1 %407, label %425, label %408

; <label>:408:                                    ; preds = %403
  %409 = load %class.Vector*, %class.Vector** %18, align 8
  %410 = load i64, i64* %16, align 8
  %411 = getelementptr inbounds %class.Vector, %class.Vector* %409, i64 %410
  %412 = load %class.Vector*, %class.Vector** %18, align 8
  %413 = load i64, i64* %16, align 8
  %414 = getelementptr inbounds %class.Vector, %class.Vector* %412, i64 %413
  %415 = load i64, i64* %7, align 8
  %416 = getelementptr inbounds %class.Vector, %class.Vector* %414, i64 %415
  %417 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %418 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %417)
          to label %419 unwind label %421

; <label>:419:                                    ; preds = %408
  invoke void @_ZSt8_DestroyIP6VectorIdES1_EvT_S3_RSaIT0_E(%class.Vector* %411, %class.Vector* %416, %"class.std::allocator.80"* dereferenceable(1) %418)
          to label %420 unwind label %421

; <label>:420:                                    ; preds = %419
  br label %432

; <label>:421:                                    ; preds = %436, %432, %430, %425, %419, %408
  %422 = landingpad { i8*, i32 }
          cleanup
  %423 = extractvalue { i8*, i32 } %422, 0
  store i8* %423, i8** %12, align 8
  %424 = extractvalue { i8*, i32 } %422, 1
  store i32 %424, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %437 unwind label %511

; <label>:425:                                    ; preds = %403
  %426 = load %class.Vector*, %class.Vector** %18, align 8
  %427 = load %class.Vector*, %class.Vector** %19, align 8
  %428 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %429 = invoke dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %428)
          to label %430 unwind label %421

; <label>:430:                                    ; preds = %425
  invoke void @_ZSt8_DestroyIP6VectorIdES1_EvT_S3_RSaIT0_E(%class.Vector* %426, %class.Vector* %427, %"class.std::allocator.80"* dereferenceable(1) %429)
          to label %431 unwind label %421

; <label>:431:                                    ; preds = %430
  br label %432

; <label>:432:                                    ; preds = %431, %420
  %433 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %434 = load %class.Vector*, %class.Vector** %18, align 8
  %435 = load i64, i64* %15, align 8
  invoke void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.79"* %433, %class.Vector* %434, i64 %435)
          to label %436 unwind label %421

; <label>:436:                                    ; preds = %432
  invoke void @__cxa_rethrow() #14
          to label %514 unwind label %421

; <label>:437:                                    ; preds = %421
  br label %506

; <label>:438:                                    ; preds = %398
  %439 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %440 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %439, i32 0, i32 0
  %441 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %440 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %442 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %441, i32 0, i32 0
  %443 = load %class.Vector*, %class.Vector** %442, align 8
  %444 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %445 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %444, i32 0, i32 0
  %446 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %445 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %447 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %446, i32 0, i32 1
  %448 = load %class.Vector*, %class.Vector** %447, align 8
  %449 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %450 = call dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %449)
  call void @_ZSt8_DestroyIP6VectorIdES1_EvT_S3_RSaIT0_E(%class.Vector* %443, %class.Vector* %448, %"class.std::allocator.80"* dereferenceable(1) %450)
  %451 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %452 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %453 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %452, i32 0, i32 0
  %454 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %453 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %455 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %454, i32 0, i32 0
  %456 = load %class.Vector*, %class.Vector** %455, align 8
  %457 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %458 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %457, i32 0, i32 0
  %459 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %458 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %460 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %459, i32 0, i32 2
  %461 = load %class.Vector*, %class.Vector** %460, align 8
  %462 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %463 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %462, i32 0, i32 0
  %464 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %463 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %465 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %464, i32 0, i32 0
  %466 = load %class.Vector*, %class.Vector** %465, align 8
  %467 = ptrtoint %class.Vector* %461 to i64
  %468 = ptrtoint %class.Vector* %466 to i64
  %469 = sub i64 %467, %468
  %470 = sdiv exact i64 %469, 24
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.79"* %451, %class.Vector* %456, i64 %470)
  %471 = load %class.Vector*, %class.Vector** %18, align 8
  %472 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %473 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %472, i32 0, i32 0
  %474 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %473 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %475 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %474, i32 0, i32 0
  store %class.Vector* %471, %class.Vector** %475, align 8
  %476 = load %class.Vector*, %class.Vector** %19, align 8
  %477 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %478 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %477, i32 0, i32 0
  %479 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %478 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %480 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %479, i32 0, i32 1
  store %class.Vector* %476, %class.Vector** %480, align 8
  %481 = load %class.Vector*, %class.Vector** %18, align 8
  %482 = load i64, i64* %15, align 8
  %483 = getelementptr inbounds %class.Vector, %class.Vector* %481, i64 %482
  %484 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %485 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %484, i32 0, i32 0
  %486 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %485 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %487 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %486, i32 0, i32 2
  store %class.Vector* %483, %class.Vector** %487, align 8
  br label %488

; <label>:488:                                    ; preds = %438, %282
  br label %489

; <label>:489:                                    ; preds = %488, %4
  %490 = load i32, i32* @x.447
  %491 = load i32, i32* @y.448
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %489, %originalBB46alteredBB
  %498 = load i32, i32* @x.447
  %499 = load i32, i32* @y.448
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  ret void

; <label>:506:                                    ; preds = %437, %283
  %507 = load i8*, i8** %12, align 8
  %508 = load i32, i32* %13, align 4
  %509 = insertvalue { i8*, i32 } undef, i8* %507, 0
  %510 = insertvalue { i8*, i32 } %509, i32 %508, 1
  resume { i8*, i32 } %510

; <label>:511:                                    ; preds = %421, %202
  %512 = landingpad { i8*, i32 }
          catch i8* null
  %513 = extractvalue { i8*, i32 } %512, 0
  call void @__clang_call_terminate(i8* %513) #9
  unreachable

; <label>:514:                                    ; preds = %436
  %515 = load i32, i32* @x.447
  %516 = load i32, i32* @y.448
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %514, %originalBB50alteredBB
  %523 = load i32, i32* @x.447
  %524 = load i32, i32* @y.448
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %41
  %531 = load %class.Vector*, %class.Vector** %8, align 8
  call void @_ZN6VectorIdEC1ERKS0_(%class.Vector* %9, %class.Vector* dereferenceable(24) %531)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  %532 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %11, i32 0, i32 0
  store %class.Vector* %59, %class.Vector** %532, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %79
  store i64 %78, i64* %10, align 8
  %533 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %534 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %533, i32 0, i32 0
  %535 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %534 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %536 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %535, i32 0, i32 1
  %537 = load %class.Vector*, %class.Vector** %536, align 8
  store %class.Vector* %537, %class.Vector** %14, align 8
  %538 = load i64, i64* %10, align 8
  %539 = load i64, i64* %7, align 8
  %540 = icmp ugt i64 %538, %539
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %104
  %541 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %542 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %541, i32 0, i32 0
  %543 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %542 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %544 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %543, i32 0, i32 1
  %545 = load %class.Vector*, %class.Vector** %544, align 8
  %546 = load i64, i64* %7, align 8
  %547 = sub i64 0, %546
  %548 = getelementptr inbounds %class.Vector, %class.Vector* %545, i64 %547
  %549 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %550 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %549, i32 0, i32 0
  %551 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %550 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %552 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %551, i32 0, i32 1
  %553 = load %class.Vector*, %class.Vector** %552, align 8
  %554 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %555 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %554, i32 0, i32 0
  %556 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %555 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %557 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %556, i32 0, i32 1
  %558 = load %class.Vector*, %class.Vector** %557, align 8
  %559 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %143
  %560 = load i64, i64* %7, align 8
  %561 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %562 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %561, i32 0, i32 0
  %563 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %562 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %564 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %563, i32 0, i32 1
  %565 = load %class.Vector*, %class.Vector** %564, align 8
  %566 = getelementptr inbounds %class.Vector, %class.Vector* %565, i64 %560
  store %class.Vector* %566, %class.Vector** %564, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %178
  %567 = load %class.Vector*, %class.Vector** %177, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %219
  %568 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %569 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %568, i32 0, i32 0
  %570 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %569 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %571 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %570, i32 0, i32 1
  store %class.Vector* %218, %class.Vector** %571, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %251
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %284
  %572 = load i64, i64* %7, align 8
  %573 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.78"* %21, i64 %572, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %573, i64* %15, align 8
  %574 = call %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EE5beginEv(%"class.std::vector.78"* %21)
  %575 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %17, i32 0, i32 0
  store %class.Vector* %574, %class.Vector** %575, align 8
  %576 = call i64 @_ZN9__gnu_cxxmiIP6VectorIdESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8) %17)
  store i64 %576, i64* %16, align 8
  %577 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %578 = load i64, i64* %15, align 8
  %579 = call %class.Vector* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.79"* %577, i64 %578)
  store %class.Vector* %579, %class.Vector** %18, align 8
  %580 = load %class.Vector*, %class.Vector** %18, align 8
  store %class.Vector* %580, %class.Vector** %19, align 8
  %581 = load %class.Vector*, %class.Vector** %18, align 8
  %582 = load i64, i64* %16, align 8
  %583 = getelementptr inbounds %class.Vector, %class.Vector* %581, i64 %582
  %584 = load i64, i64* %7, align 8
  %585 = load %class.Vector*, %class.Vector** %8, align 8
  %586 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %319
  store %class.Vector* null, %class.Vector** %19, align 8
  %587 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %588 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %587, i32 0, i32 0
  %589 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %588 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %590 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %589, i32 0, i32 0
  %591 = load %class.Vector*, %class.Vector** %590, align 8
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %347
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %370
  %592 = load %class.Vector*, %class.Vector** %369, align 8
  %593 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  %594 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %593, i32 0, i32 0
  %595 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %594 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %596 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %595, i32 0, i32 1
  %597 = load %class.Vector*, %class.Vector** %596, align 8
  %598 = load %class.Vector*, %class.Vector** %19, align 8
  %599 = bitcast %"class.std::vector.78"* %21 to %"struct.std::_Vector_base.79"*
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %489
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %514
  br label %originalBB50
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EE3endEv(%"class.std::vector.78"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.139", align 8
  %3 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %3, align 8
  %4 = load %"class.std::vector.78"*, %"class.std::vector.78"** %3, align 8
  %5 = bitcast %"class.std::vector.78"* %4 to %"struct.std::_Vector_base.79"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.139"* %2, %class.Vector** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %2, i32 0, i32 0
  %10 = load %class.Vector*, %class.Vector** %9, align 8
  ret %class.Vector* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6VectorIdESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.78"*, %class.Vector*) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.78"*, align 8
  %4 = alloca %class.Vector*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %3, align 8
  store %class.Vector* %1, %class.Vector** %4, align 8
  %6 = load %"class.std::vector.78"*, %"class.std::vector.78"** %3, align 8
  %7 = bitcast %"class.std::vector.78"* %6 to %"struct.std::_Vector_base.79"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = load %class.Vector*, %class.Vector** %4, align 8
  %13 = ptrtoint %class.Vector* %11 to i64
  %14 = ptrtoint %class.Vector* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 24
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %33

; <label>:19:                                     ; preds = %2
  %20 = load %class.Vector*, %class.Vector** %4, align 8
  %21 = bitcast %"class.std::vector.78"* %6 to %"struct.std::_Vector_base.79"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %21, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %22 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %23, i32 0, i32 1
  %25 = load %class.Vector*, %class.Vector** %24, align 8
  %26 = bitcast %"class.std::vector.78"* %6 to %"struct.std::_Vector_base.79"*
  %27 = call dereferenceable(1) %"class.std::allocator.80"* @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %26)
  call void @_ZSt8_DestroyIP6VectorIdES1_EvT_S3_RSaIT0_E(%class.Vector* %20, %class.Vector* %25, %"class.std::allocator.80"* dereferenceable(1) %27)
  %28 = load %class.Vector*, %class.Vector** %4, align 8
  %29 = bitcast %"class.std::vector.78"* %6 to %"struct.std::_Vector_base.79"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %30 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %31, i32 0, i32 1
  store %class.Vector* %28, %class.Vector** %32, align 8
  br label %33

; <label>:33:                                     ; preds = %19, %2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP6VectorIdESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.139"* dereferenceable(8)) #1 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.139"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.139"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.139"* %0, %"class.__gnu_cxx::__normal_iterator.139"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.139"* %1, %"class.__gnu_cxx::__normal_iterator.139"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.139"*, %"class.__gnu_cxx::__normal_iterator.139"** %3, align 8
  %6 = call dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %5)
  %7 = load %class.Vector*, %class.Vector** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.139"*, %"class.__gnu_cxx::__normal_iterator.139"** %4, align 8
  %9 = call dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"* %8)
  %10 = load %class.Vector*, %class.Vector** %9, align 8
  %11 = ptrtoint %class.Vector* %7 to i64
  %12 = ptrtoint %class.Vector* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 24
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt22__uninitialized_move_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Vector*, %class.Vector*, %class.Vector*, %"class.std::allocator.80"* dereferenceable(1)) #1 comdat {
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca %"class.std::allocator.80"*, align 8
  store %class.Vector* %0, %class.Vector** %5, align 8
  store %class.Vector* %1, %class.Vector** %6, align 8
  store %class.Vector* %2, %class.Vector** %7, align 8
  store %"class.std::allocator.80"* %3, %"class.std::allocator.80"** %8, align 8
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = load %class.Vector*, %class.Vector** %6, align 8
  %11 = load %class.Vector*, %class.Vector** %7, align 8
  %12 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %8, align 8
  %13 = call %class.Vector* @_ZSt22__uninitialized_copy_aIP6VectorIdES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Vector* %9, %class.Vector* %10, %class.Vector* %11, %"class.std::allocator.80"* dereferenceable(1) %12)
  ret %class.Vector* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt13copy_backwardIP6VectorIdES2_ET0_T_S4_S3_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %7 = load %class.Vector*, %class.Vector** %4, align 8
  %8 = call %class.Vector* @_ZSt12__miter_baseIP6VectorIdEET_S3_(%class.Vector* %7)
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = call %class.Vector* @_ZSt12__miter_baseIP6VectorIdEET_S3_(%class.Vector* %9)
  %11 = load %class.Vector*, %class.Vector** %6, align 8
  %12 = call %class.Vector* @_ZSt23__copy_move_backward_a2ILb0EP6VectorIdES2_ET1_T0_S4_S3_(%class.Vector* %8, %class.Vector* %10, %class.Vector* %11)
  ret %class.Vector* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Vector** @_ZNK9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.139"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.139"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.139"* %0, %"class.__gnu_cxx::__normal_iterator.139"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.139"*, %"class.__gnu_cxx::__normal_iterator.139"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %3, i32 0, i32 0
  ret %class.Vector** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIP6VectorIdES1_EvT_S3_RKT0_(%class.Vector*, %class.Vector*, %class.Vector* dereferenceable(24)) #1 comdat {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %7 = load %class.Vector*, %class.Vector** %4, align 8
  %8 = call %class.Vector* @_ZSt12__niter_baseIP6VectorIdEET_S3_(%class.Vector* %7)
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = call %class.Vector* @_ZSt12__niter_baseIP6VectorIdEET_S3_(%class.Vector* %9)
  %11 = load %class.Vector*, %class.Vector** %6, align 8
  call void @_ZSt8__fill_aIP6VectorIdES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Vector* %8, %class.Vector* %10, %class.Vector* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt24__uninitialized_fill_n_aIP6VectorIdEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Vector*, i64, %class.Vector* dereferenceable(24), %"class.std::allocator.80"* dereferenceable(1)) #1 comdat {
  %5 = alloca %class.Vector*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca %"class.std::allocator.80"*, align 8
  store %class.Vector* %0, %class.Vector** %5, align 8
  store i64 %1, i64* %6, align 8
  store %class.Vector* %2, %class.Vector** %7, align 8
  store %"class.std::allocator.80"* %3, %"class.std::allocator.80"** %8, align 8
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %class.Vector*, %class.Vector** %7, align 8
  %12 = call %class.Vector* @_ZSt20uninitialized_fill_nIP6VectorIdEmS1_ET_S3_T0_RKT1_(%class.Vector* %9, i64 %10, %class.Vector* dereferenceable(24) %11)
  ret %class.Vector* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.78"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.78"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.78"*, %"class.std::vector.78"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE8max_sizeEv(%"class.std::vector.78"* %9)
  %11 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #14
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %9)
  %19 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %9)
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE4sizeEv(%"class.std::vector.78"* %9)
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE8max_sizeEv(%"class.std::vector.78"* %9)
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

; <label>:30:                                     ; preds = %26, %17
  %31 = call i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE8max_sizeEv(%"class.std::vector.78"* %9)
  br label %34

; <label>:32:                                     ; preds = %26
  %33 = load i64, i64* %7, align 8
  br label %34

; <label>:34:                                     ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %33, %32 ]
  ret i64 %35
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EE5beginEv(%"class.std::vector.78"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.467
  %3 = load i32, i32* @y.468
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.139", align 8
  %11 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %11, align 8
  %12 = load %"class.std::vector.78"*, %"class.std::vector.78"** %11, align 8
  %13 = bitcast %"class.std::vector.78"* %12 to %"struct.std::_Vector_base.79"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.139"* %10, %class.Vector** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %10, i32 0, i32 0
  %18 = load %class.Vector*, %class.Vector** %17, align 8
  %19 = load i32, i32* @x.467
  %20 = load i32, i32* @y.468
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.139", align 8
  %28 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %28, align 8
  %29 = load %"class.std::vector.78"*, %"class.std::vector.78"** %28, align 8
  %30 = bitcast %"class.std::vector.78"* %29 to %"struct.std::_Vector_base.79"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.139"* %27, %class.Vector** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %27, i32 0, i32 0
  %35 = load %class.Vector*, %class.Vector** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt34__uninitialized_move_if_noexcept_aIP6VectorIdES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Vector*, %class.Vector*, %class.Vector*, %"class.std::allocator.80"* dereferenceable(1)) #1 comdat {
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca %"class.std::allocator.80"*, align 8
  store %class.Vector* %0, %class.Vector** %5, align 8
  store %class.Vector* %1, %class.Vector** %6, align 8
  store %class.Vector* %2, %class.Vector** %7, align 8
  store %"class.std::allocator.80"* %3, %"class.std::allocator.80"** %8, align 8
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = load %class.Vector*, %class.Vector** %6, align 8
  %11 = load %class.Vector*, %class.Vector** %7, align 8
  %12 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %8, align 8
  %13 = call %class.Vector* @_ZSt22__uninitialized_copy_aIP6VectorIdES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Vector* %9, %class.Vector* %10, %class.Vector* %11, %"class.std::allocator.80"* dereferenceable(1) %12)
  ret %class.Vector* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt22__uninitialized_copy_aIP6VectorIdES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Vector*, %class.Vector*, %class.Vector*, %"class.std::allocator.80"* dereferenceable(1)) #1 comdat {
  %5 = load i32, i32* @x.471
  %6 = load i32, i32* @y.472
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Vector*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca %class.Vector*, align 8
  %16 = alloca %"class.std::allocator.80"*, align 8
  store %class.Vector* %0, %class.Vector** %13, align 8
  store %class.Vector* %1, %class.Vector** %14, align 8
  store %class.Vector* %2, %class.Vector** %15, align 8
  store %"class.std::allocator.80"* %3, %"class.std::allocator.80"** %16, align 8
  %17 = load %class.Vector*, %class.Vector** %13, align 8
  %18 = load %class.Vector*, %class.Vector** %14, align 8
  %19 = load %class.Vector*, %class.Vector** %15, align 8
  %20 = call %class.Vector* @_ZSt18uninitialized_copyIP6VectorIdES2_ET0_T_S4_S3_(%class.Vector* %17, %class.Vector* %18, %class.Vector* %19)
  %21 = load i32, i32* @x.471
  %22 = load i32, i32* @y.472
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca %class.Vector*, align 8
  %30 = alloca %class.Vector*, align 8
  %31 = alloca %class.Vector*, align 8
  %32 = alloca %"class.std::allocator.80"*, align 8
  store %class.Vector* %0, %class.Vector** %29, align 8
  store %class.Vector* %1, %class.Vector** %30, align 8
  store %class.Vector* %2, %class.Vector** %31, align 8
  store %"class.std::allocator.80"* %3, %"class.std::allocator.80"** %32, align 8
  %33 = load %class.Vector*, %class.Vector** %29, align 8
  %34 = load %class.Vector*, %class.Vector** %30, align 8
  %35 = load %class.Vector*, %class.Vector** %31, align 8
  %36 = call %class.Vector* @_ZSt18uninitialized_copyIP6VectorIdES2_ET0_T_S4_S3_(%class.Vector* %33, %class.Vector* %34, %class.Vector* %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt18uninitialized_copyIP6VectorIdES2_ET0_T_S4_S3_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat {
  %4 = load i32, i32* @x.473
  %5 = load i32, i32* @y.474
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Vector*, align 8
  %13 = alloca %class.Vector*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca i8, align 1
  store %class.Vector* %0, %class.Vector** %12, align 8
  store %class.Vector* %1, %class.Vector** %13, align 8
  store %class.Vector* %2, %class.Vector** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load %class.Vector*, %class.Vector** %12, align 8
  %17 = load %class.Vector*, %class.Vector** %13, align 8
  %18 = load %class.Vector*, %class.Vector** %14, align 8
  %19 = call %class.Vector* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6VectorIdES4_EET0_T_S6_S5_(%class.Vector* %16, %class.Vector* %17, %class.Vector* %18)
  %20 = load i32, i32* @x.473
  %21 = load i32, i32* @y.474
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Vector*, align 8
  %29 = alloca %class.Vector*, align 8
  %30 = alloca %class.Vector*, align 8
  %31 = alloca i8, align 1
  store %class.Vector* %0, %class.Vector** %28, align 8
  store %class.Vector* %1, %class.Vector** %29, align 8
  store %class.Vector* %2, %class.Vector** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load %class.Vector*, %class.Vector** %28, align 8
  %33 = load %class.Vector*, %class.Vector** %29, align 8
  %34 = load %class.Vector*, %class.Vector** %30, align 8
  %35 = call %class.Vector* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6VectorIdES4_EET0_T_S6_S5_(%class.Vector* %32, %class.Vector* %33, %class.Vector* %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6VectorIdES4_EET0_T_S6_S5_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Vector* %0, %class.Vector** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %10 = load %class.Vector*, %class.Vector** %6, align 8
  store %class.Vector* %10, %class.Vector** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %69, %3
  %12 = load i32, i32* @x.475
  %13 = load i32, i32* @y.476
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load %class.Vector*, %class.Vector** %4, align 8
  %21 = load %class.Vector*, %class.Vector** %5, align 8
  %22 = icmp ne %class.Vector* %20, %21
  %23 = load i32, i32* @x.475
  %24 = load i32, i32* @y.476
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %100

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.475
  %33 = load i32, i32* @y.476
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %class.Vector*, %class.Vector** %7, align 8
  %41 = load i32, i32* @x.475
  %42 = load i32, i32* @y.476
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %49 = invoke %class.Vector* @_ZSt11__addressofI6VectorIdEEPT_RS2_(%class.Vector* dereferenceable(24) %40)
          to label %50 unwind label %74

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i32, i32* @x.475
  %52 = load i32, i32* @y.476
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load %class.Vector*, %class.Vector** %4, align 8
  %60 = load i32, i32* @x.475
  %61 = load i32, i32* @y.476
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt10_ConstructI6VectorIdES1_EvPT_RKT0_(%class.Vector* %49, %class.Vector* dereferenceable(24) %59)
          to label %68 unwind label %74

; <label>:68:                                     ; preds = %originalBBpart28
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load %class.Vector*, %class.Vector** %4, align 8
  %71 = getelementptr inbounds %class.Vector, %class.Vector* %70, i32 1
  store %class.Vector* %71, %class.Vector** %4, align 8
  %72 = load %class.Vector*, %class.Vector** %7, align 8
  %73 = getelementptr inbounds %class.Vector, %class.Vector* %72, i32 1
  store %class.Vector* %73, %class.Vector** %7, align 8
  br label %11

; <label>:74:                                     ; preds = %originalBBpart28, %originalBBpart24
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %8, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %9, align 4
  br label %78

; <label>:78:                                     ; preds = %74
  %79 = load i32, i32* @x.475
  %80 = load i32, i32* @y.476
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %78, %originalBB10alteredBB
  %87 = load i8*, i8** %8, align 8
  %88 = call i8* @__cxa_begin_catch(i8* %87) #11
  %89 = load %class.Vector*, %class.Vector** %6, align 8
  %90 = load %class.Vector*, %class.Vector** %7, align 8
  %91 = load i32, i32* @x.475
  %92 = load i32, i32* @y.476
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZSt8_DestroyIP6VectorIdEEvT_S3_(%class.Vector* %89, %class.Vector* %90)
          to label %99 unwind label %102

; <label>:99:                                     ; preds = %originalBBpart212
  invoke void @__cxa_rethrow() #14
          to label %164 unwind label %102

; <label>:100:                                    ; preds = %originalBBpart2
  %101 = load %class.Vector*, %class.Vector** %7, align 8
  ret %class.Vector* %101

; <label>:102:                                    ; preds = %99, %originalBBpart212
  %103 = load i32, i32* @x.475
  %104 = load i32, i32* @y.476
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %8, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %9, align 4
  %114 = load i32, i32* @x.475
  %115 = load i32, i32* @y.476
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @__cxa_end_catch()
          to label %122 unwind label %145

; <label>:122:                                    ; preds = %originalBBpart216
  br label %124
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:124:                                    ; preds = %122
  %125 = load i32, i32* @x.475
  %126 = load i32, i32* @y.476
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %124, %originalBB18alteredBB
  %133 = load i8*, i8** %8, align 8
  %134 = load i32, i32* %9, align 4
  %135 = insertvalue { i8*, i32 } undef, i8* %133, 0
  %136 = insertvalue { i8*, i32 } %135, i32 %134, 1
  %137 = load i32, i32* @x.475
  %138 = load i32, i32* @y.476
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  resume { i8*, i32 } %136

; <label>:145:                                    ; preds = %originalBBpart216
  %146 = load i32, i32* @x.475
  %147 = load i32, i32* @y.476
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %145, %originalBB22alteredBB
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  call void @__clang_call_terminate(i8* %155) #9
  %156 = load i32, i32* @x.475
  %157 = load i32, i32* @y.476
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable

; <label>:164:                                    ; preds = %99
  %165 = load i32, i32* @x.475
  %166 = load i32, i32* @y.476
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %164, %originalBB26alteredBB
  %173 = load i32, i32* @x.475
  %174 = load i32, i32* @y.476
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %11
  %181 = load %class.Vector*, %class.Vector** %4, align 8
  %182 = load %class.Vector*, %class.Vector** %5, align 8
  %183 = icmp ne %class.Vector* %181, %182
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %184 = load %class.Vector*, %class.Vector** %7, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %185 = load %class.Vector*, %class.Vector** %4, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %78
  %186 = load i8*, i8** %8, align 8
  %187 = call i8* @__cxa_begin_catch(i8* %186) #11
  %188 = load %class.Vector*, %class.Vector** %6, align 8
  %189 = load %class.Vector*, %class.Vector** %7, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %190 = landingpad { i8*, i32 }
          cleanup
  %191 = extractvalue { i8*, i32 } %190, 0
  store i8* %191, i8** %8, align 8
  %192 = extractvalue { i8*, i32 } %190, 1
  store i32 %192, i32* %9, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %124
  %193 = load i8*, i8** %8, align 8
  %194 = load i32, i32* %9, align 4
  %195 = insertvalue { i8*, i32 } undef, i8* %193, 0
  %196 = insertvalue { i8*, i32 } %195, i32 %194, 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %145
  %197 = landingpad { i8*, i32 }
          catch i8* null
  %198 = extractvalue { i8*, i32 } %197, 0
  call void @__clang_call_terminate(i8* %198) #9
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %164
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt23__copy_move_backward_a2ILb0EP6VectorIdES2_ET1_T0_S4_S3_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %7 = load %class.Vector*, %class.Vector** %4, align 8
  %8 = call %class.Vector* @_ZSt12__niter_baseIP6VectorIdEET_S3_(%class.Vector* %7)
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = call %class.Vector* @_ZSt12__niter_baseIP6VectorIdEET_S3_(%class.Vector* %9)
  %11 = load %class.Vector*, %class.Vector** %6, align 8
  %12 = call %class.Vector* @_ZSt12__niter_baseIP6VectorIdEET_S3_(%class.Vector* %11)
  %13 = call %class.Vector* @_ZSt22__copy_move_backward_aILb0EP6VectorIdES2_ET1_T0_S4_S3_(%class.Vector* %8, %class.Vector* %10, %class.Vector* %12)
  %14 = call %class.Vector* @_ZSt12__niter_wrapIP6VectorIdEET_RKS3_S3_(%class.Vector** dereferenceable(8) %6, %class.Vector* %13)
  ret %class.Vector* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Vector* @_ZSt12__miter_baseIP6VectorIdEET_S3_(%class.Vector*) #0 comdat {
  %2 = load i32, i32* @x.479
  %3 = load i32, i32* @y.480
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = load i32, i32* @x.479
  %13 = load i32, i32* @y.480
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %20, align 8
  %21 = load %class.Vector*, %class.Vector** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Vector* @_ZSt12__niter_wrapIP6VectorIdEET_RKS3_S3_(%class.Vector** dereferenceable(8), %class.Vector*) #0 comdat {
  %3 = alloca %class.Vector**, align 8
  %4 = alloca %class.Vector*, align 8
  store %class.Vector** %0, %class.Vector*** %3, align 8
  store %class.Vector* %1, %class.Vector** %4, align 8
  %5 = load %class.Vector*, %class.Vector** %4, align 8
  ret %class.Vector* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt22__copy_move_backward_aILb0EP6VectorIdES2_ET1_T0_S4_S3_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca i8, align 1
  store %class.Vector* %0, %class.Vector** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.Vector*, %class.Vector** %4, align 8
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = load %class.Vector*, %class.Vector** %6, align 8
  %11 = call %class.Vector* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6VectorIdES5_EET0_T_S7_S6_(%class.Vector* %8, %class.Vector* %9, %class.Vector* %10)
  ret %class.Vector* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Vector* @_ZSt12__niter_baseIP6VectorIdEET_S3_(%class.Vector*) #0 comdat {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  ret %class.Vector* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6VectorIdES5_EET0_T_S7_S6_(%class.Vector*, %class.Vector*, %class.Vector*) #1 comdat align 2 {
  %4 = load i32, i32* @x.487
  %5 = load i32, i32* @y.488
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Vector*, align 8
  %13 = alloca %class.Vector*, align 8
  %14 = alloca %class.Vector*, align 8
  %15 = alloca i64, align 8
  store %class.Vector* %0, %class.Vector** %12, align 8
  store %class.Vector* %1, %class.Vector** %13, align 8
  store %class.Vector* %2, %class.Vector** %14, align 8
  %16 = load %class.Vector*, %class.Vector** %13, align 8
  %17 = load %class.Vector*, %class.Vector** %12, align 8
  %18 = ptrtoint %class.Vector* %16 to i64
  %19 = ptrtoint %class.Vector* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  store i64 %21, i64* %15, align 8
  %22 = load i32, i32* @x.487
  %23 = load i32, i32* @y.488
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %originalBBpart245, %originalBBpart2
  %31 = load i32, i32* @x.487
  %32 = load i32, i32* @y.488
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %30, %originalBB23alteredBB
  %39 = load i64, i64* %15, align 8
  %40 = icmp sgt i64 %39, 0
  %41 = load i32, i32* @x.487
  %42 = load i32, i32* @y.488
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %40, label %49, label %90

; <label>:49:                                     ; preds = %originalBBpart225
  %50 = load i32, i32* @x.487
  %51 = load i32, i32* @y.488
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %49, %originalBB27alteredBB
  %58 = load %class.Vector*, %class.Vector** %13, align 8
  %59 = getelementptr inbounds %class.Vector, %class.Vector* %58, i32 -1
  store %class.Vector* %59, %class.Vector** %13, align 8
  %60 = load %class.Vector*, %class.Vector** %14, align 8
  %61 = getelementptr inbounds %class.Vector, %class.Vector* %60, i32 -1
  store %class.Vector* %61, %class.Vector** %14, align 8
  %62 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector* %61, %class.Vector* dereferenceable(24) %59)
  %63 = load i32, i32* @x.487
  %64 = load i32, i32* @y.488
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %71

; <label>:71:                                     ; preds = %originalBBpart229
  %72 = load i32, i32* @x.487
  %73 = load i32, i32* @y.488
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %71, %originalBB31alteredBB
  %80 = load i64, i64* %15, align 8
  %81 = add nsw i64 %80, -1
  store i64 %81, i64* %15, align 8
  %82 = load i32, i32* @x.487
  %83 = load i32, i32* @y.488
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart245, label %originalBB31alteredBB

originalBBpart245:                                ; preds = %originalBB31
  br label %30

; <label>:90:                                     ; preds = %originalBBpart225
  %91 = load %class.Vector*, %class.Vector** %14, align 8
  ret %class.Vector* %91

originalBBalteredBB:                              ; preds = %originalBB, %3
  %92 = alloca %class.Vector*, align 8
  %93 = alloca %class.Vector*, align 8
  %94 = alloca %class.Vector*, align 8
  %95 = alloca i64, align 8
  store %class.Vector* %0, %class.Vector** %92, align 8
  store %class.Vector* %1, %class.Vector** %93, align 8
  store %class.Vector* %2, %class.Vector** %94, align 8
  %96 = load %class.Vector*, %class.Vector** %93, align 8
  %97 = load %class.Vector*, %class.Vector** %92, align 8
  %98 = ptrtoint %class.Vector* %96 to i64
  %99 = ptrtoint %class.Vector* %97 to i64
  %_ = sub i64 %98, %99
  %gen = mul i64 %_, %99
  %_1 = sub i64 0, %98
  %gen2 = add i64 %_1, %99
  %_3 = shl i64 %98, %99
  %_4 = sub i64 0, %98
  %gen5 = add i64 %_4, %99
  %_6 = sub i64 %98, %99
  %gen7 = mul i64 %_6, %99
  %_8 = sub i64 0, %98
  %gen9 = add i64 %_8, %99
  %100 = sub i64 %98, %99
  %_10 = sub i64 0, %100
  %gen11 = add i64 %_10, 24
  %_12 = sub i64 0, %100
  %gen13 = add i64 %_12, 24
  %_14 = shl i64 %100, 24
  %_15 = sub i64 0, %100
  %gen16 = add i64 %_15, 24
  %_17 = sub i64 0, %100
  %gen18 = add i64 %_17, 24
  %_19 = sub i64 0, %100
  %gen20 = add i64 %_19, 24
  %_21 = sub i64 0, %100
  %gen22 = add i64 %_21, 24
  %101 = sdiv exact i64 %100, 24
  store i64 %101, i64* %95, align 8
  br label %originalBB

originalBB23alteredBB:                            ; preds = %originalBB23, %30
  %102 = load i64, i64* %15, align 8
  %103 = icmp sgt i64 %102, 0
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %49
  %104 = load %class.Vector*, %class.Vector** %13, align 8
  %105 = getelementptr inbounds %class.Vector, %class.Vector* %104, i32 -1
  store %class.Vector* %105, %class.Vector** %13, align 8
  %106 = load %class.Vector*, %class.Vector** %14, align 8
  %107 = getelementptr inbounds %class.Vector, %class.Vector* %106, i32 -1
  store %class.Vector* %107, %class.Vector** %14, align 8
  %108 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector* %107, %class.Vector* dereferenceable(24) %105)
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %71
  %109 = load i64, i64* %15, align 8
  %_32 = shl i64 %109, -1
  %_33 = shl i64 %109, -1
  %_34 = shl i64 %109, -1
  %_35 = shl i64 %109, -1
  %_36 = sub i64 %109, -1
  %gen37 = mul i64 %_36, -1
  %_38 = sub i64 0, %109
  %gen39 = add i64 %_38, -1
  %_40 = sub i64 0, %109
  %gen41 = add i64 %_40, -1
  %_42 = sub i64 %109, -1
  %gen43 = mul i64 %_42, -1
  %110 = add nsw i64 %109, -1
  store i64 %110, i64* %15, align 8
  br label %originalBB31
}

declare dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector*, %class.Vector* dereferenceable(24)) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIP6VectorIdES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Vector*, %class.Vector*, %class.Vector* dereferenceable(24)) #1 comdat {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca %class.Vector*, align 8
  %6 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %4, align 8
  store %class.Vector* %1, %class.Vector** %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %31, %3
  %8 = load %class.Vector*, %class.Vector** %4, align 8
  %9 = load %class.Vector*, %class.Vector** %5, align 8
  %10 = icmp ne %class.Vector* %8, %9
  br i1 %10, label %11, label %34

; <label>:11:                                     ; preds = %7
  %12 = load i32, i32* @x.489
  %13 = load i32, i32* @y.490
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load %class.Vector*, %class.Vector** %6, align 8
  %21 = load %class.Vector*, %class.Vector** %4, align 8
  %22 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector* %21, %class.Vector* dereferenceable(24) %20)
  %23 = load i32, i32* @x.489
  %24 = load i32, i32* @y.490
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load %class.Vector*, %class.Vector** %4, align 8
  %33 = getelementptr inbounds %class.Vector, %class.Vector* %32, i32 1
  store %class.Vector* %33, %class.Vector** %4, align 8
  br label %7

; <label>:34:                                     ; preds = %7
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %35 = load %class.Vector*, %class.Vector** %6, align 8
  %36 = load %class.Vector*, %class.Vector** %4, align 8
  %37 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSERKS0_(%class.Vector* %36, %class.Vector* dereferenceable(24) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZSt20uninitialized_fill_nIP6VectorIdEmS1_ET_S3_T0_RKT1_(%class.Vector*, i64, %class.Vector* dereferenceable(24)) #1 comdat {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca i8, align 1
  store %class.Vector* %0, %class.Vector** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Vector*, %class.Vector** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %class.Vector*, %class.Vector** %6, align 8
  %11 = call %class.Vector* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6VectorIdEmS3_EET_S5_T0_RKT1_(%class.Vector* %8, i64 %9, %class.Vector* dereferenceable(24) %10)
  ret %class.Vector* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Vector* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6VectorIdEmS3_EET_S5_T0_RKT1_(%class.Vector*, i64, %class.Vector* dereferenceable(24)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Vector*, align 8
  %7 = alloca %class.Vector*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Vector* %0, %class.Vector** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Vector* %2, %class.Vector** %6, align 8
  %10 = load %class.Vector*, %class.Vector** %4, align 8
  store %class.Vector* %10, %class.Vector** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %20, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %35

; <label>:14:                                     ; preds = %11
  %15 = load %class.Vector*, %class.Vector** %7, align 8
  %16 = invoke %class.Vector* @_ZSt11__addressofI6VectorIdEEPT_RS2_(%class.Vector* dereferenceable(24) %15)
          to label %17 unwind label %25

; <label>:17:                                     ; preds = %14
  %18 = load %class.Vector*, %class.Vector** %6, align 8
  invoke void @_ZSt10_ConstructI6VectorIdES1_EvPT_RKT0_(%class.Vector* %16, %class.Vector* dereferenceable(24) %18)
          to label %19 unwind label %25

; <label>:19:                                     ; preds = %17
  br label %20

; <label>:20:                                     ; preds = %19
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, -1
  store i64 %22, i64* %5, align 8
  %23 = load %class.Vector*, %class.Vector** %7, align 8
  %24 = getelementptr inbounds %class.Vector, %class.Vector* %23, i32 1
  store %class.Vector* %24, %class.Vector** %7, align 8
  br label %11

; <label>:25:                                     ; preds = %17, %14
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %8, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %9, align 4
  br label %29

; <label>:29:                                     ; preds = %25
  %30 = load i8*, i8** %8, align 8
  %31 = call i8* @__cxa_begin_catch(i8* %30) #11
  %32 = load %class.Vector*, %class.Vector** %4, align 8
  %33 = load %class.Vector*, %class.Vector** %7, align 8
  invoke void @_ZSt8_DestroyIP6VectorIdEEvT_S3_(%class.Vector* %32, %class.Vector* %33)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %29
  invoke void @__cxa_rethrow() #14
          to label %67 unwind label %53

; <label>:35:                                     ; preds = %11
  %36 = load i32, i32* @x.493
  %37 = load i32, i32* @y.494
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %35, %originalBBalteredBB
  %44 = load %class.Vector*, %class.Vector** %7, align 8
  %45 = load i32, i32* @x.493
  %46 = load i32, i32* @y.494
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %44

; <label>:53:                                     ; preds = %34, %29
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %8, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %57 unwind label %64

; <label>:57:                                     ; preds = %53
  br label %59
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:59:                                     ; preds = %57
  %60 = load i8*, i8** %8, align 8
  %61 = load i32, i32* %9, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %53
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #9
  unreachable

; <label>:67:                                     ; preds = %34
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %35
  %68 = load %class.Vector*, %class.Vector** %7, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6VectorIdESaIS1_EE8max_sizeEv(%"class.std::vector.78"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.495
  %3 = load i32, i32* @y.496
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %10, align 8
  %11 = load %"class.std::vector.78"*, %"class.std::vector.78"** %10, align 8
  %12 = bitcast %"class.std::vector.78"* %11 to %"struct.std::_Vector_base.79"*
  %13 = call dereferenceable(1) %"class.std::allocator.80"* @_ZNKSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %12)
  %14 = call i64 @_ZNSt6vectorI6VectorIdESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.80"* dereferenceable(1) %13)
  %15 = load i32, i32* @x.495
  %16 = load i32, i32* @y.496
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.std::vector.78"*, align 8
  store %"class.std::vector.78"* %0, %"class.std::vector.78"** %23, align 8
  %24 = load %"class.std::vector.78"*, %"class.std::vector.78"** %23, align 8
  %25 = bitcast %"class.std::vector.78"* %24 to %"struct.std::_Vector_base.79"*
  %26 = call dereferenceable(1) %"class.std::allocator.80"* @_ZNKSt12_Vector_baseI6VectorIdESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.79"* %25)
  %27 = call i64 @_ZNSt6vectorI6VectorIdESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.80"* dereferenceable(1) %26)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI6VectorIdESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.80"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.80"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %2, align 8
  store i64 384307168202282325, i64* %3, align 8
  %5 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E8max_sizeERKS3_(%"class.std::allocator.80"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6VectorIdEES2_E8max_sizeERKS3_(%"class.std::allocator.80"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.80"*, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %2, align 8
  %3 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %2, align 8
  %4 = bitcast %"class.std::allocator.80"* %3 to %"class.__gnu_cxx::new_allocator.81"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6VectorIdEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.81"* %4) #11
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP6VectorIdESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.139"*, %class.Vector** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.501
  %4 = load i32, i32* @y.502
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.139"*, align 8
  %12 = alloca %class.Vector**, align 8
  store %"class.__gnu_cxx::__normal_iterator.139"* %0, %"class.__gnu_cxx::__normal_iterator.139"** %11, align 8
  store %class.Vector** %1, %class.Vector*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.139"*, %"class.__gnu_cxx::__normal_iterator.139"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %13, i32 0, i32 0
  %15 = load %class.Vector**, %class.Vector*** %12, align 8
  %16 = load %class.Vector*, %class.Vector** %15, align 8
  store %class.Vector* %16, %class.Vector** %14, align 8
  %17 = load i32, i32* @x.501
  %18 = load i32, i32* @y.502
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.139"*, align 8
  %26 = alloca %class.Vector**, align 8
  store %"class.__gnu_cxx::__normal_iterator.139"* %0, %"class.__gnu_cxx::__normal_iterator.139"** %25, align 8
  store %class.Vector** %1, %class.Vector*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.139"*, %"class.__gnu_cxx::__normal_iterator.139"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.139", %"class.__gnu_cxx::__normal_iterator.139"* %27, i32 0, i32 0
  %29 = load %class.Vector**, %class.Vector*** %26, align 8
  %30 = load %class.Vector*, %class.Vector** %29, align 8
  store %class.Vector* %30, %class.Vector** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6VectorIdED0Ev(%class.Vector*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Vector*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.Vector* %0, %class.Vector** %2, align 8
  %5 = load %class.Vector*, %class.Vector** %2, align 8
  invoke void @_ZN6VectorIdED2Ev(%class.Vector* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.Vector* %5 to i8*
  call void @_ZdlPv(i8* %7) #12
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %class.Vector* %5 to i8*
  call void @_ZdlPv(i8* %12) #12
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.503
  %15 = load i32, i32* @y.504
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i8*, i8** %3, align 8
  %23 = load i32, i32* %4, align 4
  %24 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  %26 = load i32, i32* @x.503
  %27 = load i32, i32* @y.504
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %25

originalBBalteredBB:                              ; preds = %originalBB, %13
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #8

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector*, double) #1 comdat align 2 {
  %3 = load i32, i32* @x.505
  %4 = load i32, i32* @y.506
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Vector*, align 8
  %12 = alloca double, align 8
  store %class.Vector* %0, %class.Vector** %11, align 8
  store double %1, double* %12, align 8
  %13 = load %class.Vector*, %class.Vector** %11, align 8
  %14 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %13)
  %15 = call double* @_ZN6VectorIdE3endEv(%class.Vector* %13)
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %14, double* %15, double* dereferenceable(8) %12)
  %16 = load i32, i32* @x.505
  %17 = load i32, i32* @y.506
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %class.Vector*, align 8
  %25 = alloca double, align 8
  store %class.Vector* %0, %class.Vector** %24, align 8
  store double %1, double* %25, align 8
  %26 = load %class.Vector*, %class.Vector** %24, align 8
  %27 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %26)
  %28 = call double* @_ZN6VectorIdE3endEv(%class.Vector* %26)
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %27, double* %28, double* dereferenceable(8) %25)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZN6VectorIdE5beginEv(%class.Vector*) #0 comdat align 2 {
  %2 = load i32, i32* @x.507
  %3 = load i32, i32* @y.508
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds double, double* %13, i64 0
  %15 = load i32, i32* @x.507
  %16 = load i32, i32* @y.508
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %23, align 8
  %24 = load %class.Vector*, %class.Vector** %23, align 8
  %25 = getelementptr inbounds %class.Vector, %class.Vector* %24, i32 0, i32 3
  %26 = load double*, double** %25, align 8
  %27 = getelementptr inbounds double, double* %26, i64 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZN6VectorIdE3endEv(%class.Vector*) #0 comdat align 2 {
  %2 = load i32, i32* @x.509
  %3 = load i32, i32* @y.510
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %10, align 8
  %11 = load %class.Vector*, %class.Vector** %10, align 8
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 3
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds %class.Vector, %class.Vector* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds double, double* %13, i64 %16
  %18 = load i32, i32* @x.509
  %19 = load i32, i32* @y.510
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %17

originalBBalteredBB:                              ; preds = %originalBB, %1
  %26 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %26, align 8
  %27 = load %class.Vector*, %class.Vector** %26, align 8
  %28 = getelementptr inbounds %class.Vector, %class.Vector* %27, i32 0, i32 3
  %29 = load double*, double** %28, align 8
  %30 = getelementptr inbounds %class.Vector, %class.Vector* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds double, double* %29, i64 %32
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EfE6reinitERK12TableIndicesILi2EE(%class.TableBase.111*, %class.TableIndices* dereferenceable(8)) #1 comdat align 2 {
  %3 = alloca %class.TableBase.111*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TableIndices, align 4
  store %class.TableBase.111* %0, %class.TableBase.111** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %7 = load %class.TableBase.111*, %class.TableBase.111** %3, align 8
  %8 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %9 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 3
  %10 = bitcast %class.TableIndices* %9 to i8*
  %11 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  %12 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %7)
  store i32 %12, i32* %5, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %48

; <label>:15:                                     ; preds = %2
  %16 = load i32, i32* @x.511
  %17 = load i32, i32* @y.512
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  %25 = load float*, float** %24, align 8
  %26 = icmp ne float* %25, null
  %27 = load i32, i32* @x.511
  %28 = load i32, i32* @y.512
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %42

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  %37 = load float*, float** %36, align 8
  %38 = icmp eq float* %37, null
  br i1 %38, label %41, label %39

; <label>:39:                                     ; preds = %35
  %40 = bitcast float* %37 to i8*
  call void @_ZdaPv(i8* %40) #12
  br label %41

; <label>:41:                                     ; preds = %39, %35
  br label %42

; <label>:42:                                     ; preds = %41, %originalBBpart2
  %43 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  store float* null, float** %43, align 8
  %44 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 2
  store i32 0, i32* %44, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %45 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 3
  %46 = bitcast %class.TableIndices* %45 to i8*
  %47 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 4, i1 false)
  br label %110

; <label>:48:                                     ; preds = %2
  %49 = load i32, i32* @x.511
  %50 = load i32, i32* @y.512
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = load i32, i32* %5, align 4
  %60 = icmp ult i32 %58, %59
  %61 = load i32, i32* @x.511
  %62 = load i32, i32* @y.512
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %69, label %109

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = load i32, i32* @x.511
  %71 = load i32, i32* @y.512
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  %79 = load float*, float** %78, align 8
  %80 = icmp ne float* %79, null
  %81 = load i32, i32* @x.511
  %82 = load i32, i32* @y.512
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %80, label %89, label %96

; <label>:89:                                     ; preds = %originalBBpart28
  %90 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  %91 = load float*, float** %90, align 8
  %92 = icmp eq float* %91, null
  br i1 %92, label %95, label %93

; <label>:93:                                     ; preds = %89
  %94 = bitcast float* %91 to i8*
  call void @_ZdaPv(i8* %94) #12
  br label %95

; <label>:95:                                     ; preds = %93, %89
  br label %96

; <label>:96:                                     ; preds = %95, %originalBBpart28
  %97 = load i32, i32* %5, align 4
  %98 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  %102 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %101, i64 4)
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = extractvalue { i64, i1 } %102, 0
  %105 = select i1 %103, i64 -1, i64 %104
  %106 = call i8* @_Znam(i64 %105) #13
  %107 = bitcast i8* %106 to float*
  %108 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  store float* %107, float** %108, align 8
  br label %109

; <label>:109:                                    ; preds = %96, %originalBBpart24
  call void @_ZN9TableBaseILi2EfE12reset_valuesEv(%class.TableBase.111* %7)
  br label %110

; <label>:110:                                    ; preds = %109, %42
  %111 = load i32, i32* @x.511
  %112 = load i32, i32* @y.512
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %110, %originalBB10alteredBB
  %119 = load i32, i32* @x.511
  %120 = load i32, i32* @y.512
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %15
  %127 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  %128 = load float*, float** %127, align 8
  %129 = icmp ne float* %128, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %130 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 2
  %131 = load i32, i32* %130, align 8
  %132 = load i32, i32* %5, align 4
  %133 = icmp ult i32 %131, %132
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  %134 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  %135 = load float*, float** %134, align 8
  %136 = icmp ne float* %135, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %110
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.TableIndices* %0, %class.TableIndices** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %8 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %9 = load i32, i32* %5, align 4
  %10 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %11 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %10, i32 0, i32 0
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %11, i64 0, i64 0
  store i32 %9, i32* %12, align 4
  %13 = load i32, i32* %6, align 4
  %14 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %15 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %14, i32 0, i32 0
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  store i32 %13, i32* %16, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111*) #1 comdat align 2 {
  %2 = alloca %class.TableBase.111*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase.111* %0, %class.TableBase.111** %2, align 8
  %5 = load %class.TableBase.111*, %class.TableBase.111** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %originalBBpart2, %1
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %35

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %5, i32 0, i32 3
  %11 = bitcast %class.TableIndices* %10 to %class.TableIndicesBase*
  %12 = load i32, i32* %4, align 4
  %13 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %11, i32 %12)
  %14 = load i32, i32* %3, align 4
  %15 = mul i32 %14, %13
  store i32 %15, i32* %3, align 4
  br label %16

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.515
  %18 = load i32, i32* @y.516
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32, i32* %4, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %4, align 4
  %27 = load i32, i32* @x.515
  %28 = load i32, i32* @y.516
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %6

; <label>:35:                                     ; preds = %6
  %36 = load i32, i32* @x.515
  %37 = load i32, i32* @y.516
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %35, %originalBB9alteredBB
  %44 = load i32, i32* %3, align 4
  %45 = load i32, i32* @x.515
  %46 = load i32, i32* @y.516
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  ret i32 %44

originalBBalteredBB:                              ; preds = %originalBB, %16
  %53 = load i32, i32* %4, align 4
  %_ = sub i32 0, %53
  %gen = add i32 %_, 1
  %_1 = sub i32 %53, 1
  %gen2 = mul i32 %_1, 1
  %_3 = shl i32 %53, 1
  %_4 = shl i32 %53, 1
  %_5 = sub i32 %53, 1
  %gen6 = mul i32 %_5, 1
  %_7 = sub i32 %53, 1
  %gen8 = mul i32 %_7, 1
  %54 = add i32 %53, 1
  store i32 %54, i32* %4, align 4
  br label %originalBB

originalBB9alteredBB:                             ; preds = %originalBB9, %35
  %55 = load i32, i32* %3, align 4
  br label %originalBB9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %2, align 8
  %3 = load %class.TableIndices*, %class.TableIndices** %2, align 8
  %4 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %5 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %6 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %5, i32 0, i32 0
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 0, i32* %7, align 4
  %8 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %9 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %8, i32 0, i32 0
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  store i32 0, i32* %10, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EfE12reset_valuesEv(%class.TableBase.111*) #1 comdat align 2 {
  %2 = load i32, i32* @x.519
  %3 = load i32, i32* @y.520
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.111*, align 8
  %11 = alloca float, align 4
  store %class.TableBase.111* %0, %class.TableBase.111** %10, align 8
  %12 = load %class.TableBase.111*, %class.TableBase.111** %10, align 8
  %13 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %12)
  %14 = icmp ne i32 %13, 0
  %15 = load i32, i32* @x.519
  %16 = load i32, i32* @y.520
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %28

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %12, i32 0, i32 1
  %25 = load float*, float** %24, align 8
  %26 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %12)
  store float 0.000000e+00, float* %11, align 4
  %27 = call float* @_ZSt6fill_nIPfjfET_S1_T0_RKT1_(float* %25, i32 %26, float* dereferenceable(4) %11)
  br label %28

; <label>:28:                                     ; preds = %23, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %class.TableBase.111*, align 8
  %30 = alloca float, align 4
  store %class.TableBase.111* %0, %class.TableBase.111** %29, align 8
  %31 = load %class.TableBase.111*, %class.TableBase.111** %29, align 8
  %32 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %31)
  %33 = icmp ne i32 %32, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.521
  %4 = load i32, i32* @y.522
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TableIndicesBase*, align 8
  %12 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.TableIndicesBase*, %class.TableIndicesBase** %11, align 8
  %14 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @x.521
  %20 = load i32, i32* @y.522
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.TableIndicesBase*, align 8
  %28 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.TableIndicesBase*, %class.TableIndicesBase** %27, align 8
  %30 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %29, i32 0, i32 0
  %31 = load i32, i32* %28, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %30, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr float* @_ZSt6fill_nIPfjfET_S1_T0_RKT1_(float*, i32, float* dereferenceable(4)) #1 comdat {
  %4 = alloca float*, align 8
  %5 = alloca i32, align 4
  %6 = alloca float*, align 8
  store float* %0, float** %4, align 8
  store i32 %1, i32* %5, align 4
  store float* %2, float** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load float*, float** %6, align 8
  %11 = call float* @_ZSt10__fill_n_aIPfjfEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(float* %8, i32 %9, float* dereferenceable(4) %10)
  %12 = call float* @_ZSt12__niter_wrapIPfET_RKS1_S1_(float** dereferenceable(8) %4, float* %11)
  ret float* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__niter_wrapIPfET_RKS1_S1_(float** dereferenceable(8), float*) #0 comdat {
  %3 = alloca float**, align 8
  %4 = alloca float*, align 8
  store float** %0, float*** %3, align 8
  store float* %1, float** %4, align 8
  %5 = load float*, float** %4, align 8
  ret float* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt10__fill_n_aIPfjfEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(float*, i32, float* dereferenceable(4)) #0 comdat {
  %4 = load i32, i32* @x.527
  %5 = load i32, i32* @y.528
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca float*, align 8
  %13 = alloca i32, align 4
  %14 = alloca float*, align 8
  %15 = alloca float, align 4
  %16 = alloca i32, align 4
  store float* %0, float** %12, align 8
  store i32 %1, i32* %13, align 4
  store float* %2, float** %14, align 8
  %17 = load float*, float** %14, align 8
  %18 = load float, float* %17, align 4
  store float %18, float* %15, align 4
  %19 = load i32, i32* %13, align 4
  store i32 %19, i32* %16, align 4
  %20 = load i32, i32* @x.527
  %21 = load i32, i32* @y.528
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %66, %originalBBpart2
  %29 = load i32, i32* @x.527
  %30 = load i32, i32* @y.528
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i32, i32* %16, align 4
  %38 = icmp ugt i32 %37, 0
  %39 = load i32, i32* @x.527
  %40 = load i32, i32* @y.528
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %71

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = load i32, i32* @x.527
  %49 = load i32, i32* @y.528
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load float, float* %15, align 4
  %57 = load float*, float** %12, align 8
  store float %56, float* %57, align 4
  %58 = load i32, i32* @x.527
  %59 = load i32, i32* @y.528
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %66

; <label>:66:                                     ; preds = %originalBBpart28
  %67 = load i32, i32* %16, align 4
  %68 = add i32 %67, -1
  store i32 %68, i32* %16, align 4
  %69 = load float*, float** %12, align 8
  %70 = getelementptr inbounds float, float* %69, i32 1
  store float* %70, float** %12, align 8
  br label %28

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load float*, float** %12, align 8
  ret float* %72

originalBBalteredBB:                              ; preds = %originalBB, %3
  %73 = alloca float*, align 8
  %74 = alloca i32, align 4
  %75 = alloca float*, align 8
  %76 = alloca float, align 4
  %77 = alloca i32, align 4
  store float* %0, float** %73, align 8
  store i32 %1, i32* %74, align 4
  store float* %2, float** %75, align 8
  %78 = load float*, float** %75, align 8
  %79 = load float, float* %78, align 4
  store float %79, float* %76, align 4
  %80 = load i32, i32* %74, align 4
  store i32 %80, i32* %77, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %81 = load i32, i32* %16, align 4
  %82 = icmp ugt i32 %81, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %83 = load float, float* %15, align 4
  %84 = load float*, float** %12, align 8
  store float %83, float* %84, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__niter_baseIPfET_S1_(float*) #0 comdat {
  %2 = alloca float*, align 8
  store float* %0, float** %2, align 8
  %3 = load float*, float** %2, align 8
  ret float* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.DataOutBase::Patch"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.DataOutBase::Patch"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.DataOutBase::Patch"** %1, %"struct.DataOutBase::Patch"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.DataOutBase::Patch"**, %"struct.DataOutBase::Patch"*** %4, align 8
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %7, align 8
  store %"struct.DataOutBase::Patch"* %8, %"struct.DataOutBase::Patch"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(%"class.std::vector.68"*, %"struct.DataOutBase::Patch"*, i64, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.533
  %6 = load i32, i32* @y.534
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.std::vector.68"*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"struct.DataOutBase::Patch"*, align 8
  %17 = alloca %"struct.DataOutBase::Patch", align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca %"struct.DataOutBase::Patch"*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %26 = alloca %"struct.DataOutBase::Patch"*, align 8
  %27 = alloca %"struct.DataOutBase::Patch"*, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %28, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %14, align 8
  store i64 %2, i64* %15, align 8
  store %"struct.DataOutBase::Patch"* %3, %"struct.DataOutBase::Patch"** %16, align 8
  %29 = load %"class.std::vector.68"*, %"class.std::vector.68"** %14, align 8
  %30 = load i64, i64* %15, align 8
  %31 = icmp ne i64 %30, 0
  %32 = load i32, i32* @x.533
  %33 = load i32, i32* @y.534
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %457

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %43, i32 0, i32 2
  %45 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %44, align 8
  %46 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %47 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %48, i32 0, i32 1
  %50 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %49, align 8
  %51 = ptrtoint %"struct.DataOutBase::Patch"* %45 to i64
  %52 = ptrtoint %"struct.DataOutBase::Patch"* %50 to i64
  %53 = sub i64 %51, %52
  %54 = sdiv exact i64 %53, 600
  %55 = load i64, i64* %15, align 8
  %56 = icmp uge i64 %54, %55
  br i1 %56, label %57, label %236

; <label>:57:                                     ; preds = %40
  %58 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %16, align 8
  call void @_ZN11DataOutBase5PatchILi4ELi4EEC2ERKS1_(%"struct.DataOutBase::Patch"* %17, %"struct.DataOutBase::Patch"* dereferenceable(600) %58)
  %59 = invoke %"struct.DataOutBase::Patch"* @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE3endEv(%"class.std::vector.68"* %29)
          to label %60 unwind label %154

; <label>:60:                                     ; preds = %57
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %59, %"struct.DataOutBase::Patch"** %61, align 8
  %62 = invoke i64 @_ZN9__gnu_cxxmiIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13)
          to label %63 unwind label %154

; <label>:63:                                     ; preds = %60
  store i64 %62, i64* %18, align 8
  %64 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %65 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %67, align 8
  store %"struct.DataOutBase::Patch"* %68, %"struct.DataOutBase::Patch"** %22, align 8
  %69 = load i64, i64* %18, align 8
  %70 = load i64, i64* %15, align 8
  %71 = icmp ugt i64 %69, %70
  br i1 %71, label %72, label %158

; <label>:72:                                     ; preds = %63
  %73 = load i32, i32* @x.533
  %74 = load i32, i32* @y.534
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %72, %originalBB1alteredBB
  %81 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %82 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %83, i32 0, i32 1
  %85 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %84, align 8
  %86 = load i64, i64* %15, align 8
  %87 = sub i64 0, %86
  %88 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %85, i64 %87
  %89 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %89, i32 0, i32 0
  %91 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %90 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %91, i32 0, i32 1
  %93 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %92, align 8
  %94 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %94, i32 0, i32 0
  %96 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %95 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %96, i32 0, i32 1
  %98 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %97, align 8
  %99 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %100 = load i32, i32* @x.533
  %101 = load i32, i32* @y.534
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  %108 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %99)
          to label %109 unwind label %154

; <label>:109:                                    ; preds = %originalBBpart28
  %110 = invoke %"struct.DataOutBase::Patch"* @_ZSt22__uninitialized_move_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.DataOutBase::Patch"* %88, %"struct.DataOutBase::Patch"* %93, %"struct.DataOutBase::Patch"* %98, %"class.std::allocator.70"* dereferenceable(1) %108)
          to label %111 unwind label %154

; <label>:111:                                    ; preds = %109
  %112 = load i64, i64* %15, align 8
  %113 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %113, i32 0, i32 0
  %115 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %114 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %115, i32 0, i32 1
  %117 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %116, align 8
  %118 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %117, i64 %112
  store %"struct.DataOutBase::Patch"* %118, %"struct.DataOutBase::Patch"** %116, align 8
  %119 = invoke dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %120 unwind label %154

; <label>:120:                                    ; preds = %111
  %121 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %119, align 8
  %122 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %22, align 8
  %123 = load i64, i64* %15, align 8
  %124 = sub i64 0, %123
  %125 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %122, i64 %124
  %126 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %22, align 8
  %127 = invoke %"struct.DataOutBase::Patch"* @_ZSt13copy_backwardIPN11DataOutBase5PatchILi4ELi4EEES3_ET0_T_S5_S4_(%"struct.DataOutBase::Patch"* %121, %"struct.DataOutBase::Patch"* %125, %"struct.DataOutBase::Patch"* %126)
          to label %128 unwind label %154

; <label>:128:                                    ; preds = %120
  %129 = load i32, i32* @x.533
  %130 = load i32, i32* @y.534
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %128, %originalBB10alteredBB
  %137 = load i32, i32* @x.533
  %138 = load i32, i32* @y.534
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %145 = invoke dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %146 unwind label %154

; <label>:146:                                    ; preds = %originalBBpart212
  %147 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %145, align 8
  %148 = invoke dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %149 unwind label %154

; <label>:149:                                    ; preds = %146
  %150 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %148, align 8
  %151 = load i64, i64* %15, align 8
  %152 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %150, i64 %151
  invoke void @_ZSt4fillIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RKT0_(%"struct.DataOutBase::Patch"* %147, %"struct.DataOutBase::Patch"* %152, %"struct.DataOutBase::Patch"* dereferenceable(600) %17)
          to label %153 unwind label %154

; <label>:153:                                    ; preds = %149
  br label %234

; <label>:154:                                    ; preds = %230, %originalBBpart232, %203, %193, %187, %185, %originalBBpart228, %149, %146, %originalBBpart212, %120, %111, %109, %originalBBpart28, %60, %57
  %155 = landingpad { i8*, i32 }
          cleanup
  %156 = extractvalue { i8*, i32 } %155, 0
  store i8* %156, i8** %20, align 8
  %157 = extractvalue { i8*, i32 } %155, 1
  store i32 %157, i32* %21, align 4
  invoke void @_ZN11DataOutBase5PatchILi4ELi4EED2Ev(%"struct.DataOutBase::Patch"* %17)
          to label %235 unwind label %479

; <label>:158:                                    ; preds = %63
  %159 = load i32, i32* @x.533
  %160 = load i32, i32* @y.534
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %158, %originalBB14alteredBB
  %167 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %168 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %167, i32 0, i32 0
  %169 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %168 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %170 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %169, i32 0, i32 1
  %171 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %170, align 8
  %172 = load i64, i64* %15, align 8
  %173 = load i64, i64* %18, align 8
  %174 = sub i64 %172, %173
  %175 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %176 = load i32, i32* @x.533
  %177 = load i32, i32* @y.534
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart228, label %originalBB14alteredBB

originalBBpart228:                                ; preds = %originalBB14
  %184 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %175)
          to label %185 unwind label %154

; <label>:185:                                    ; preds = %originalBBpart228
  %186 = invoke %"struct.DataOutBase::Patch"* @_ZSt24__uninitialized_fill_n_aIPN11DataOutBase5PatchILi4ELi4EEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.DataOutBase::Patch"* %171, i64 %174, %"struct.DataOutBase::Patch"* dereferenceable(600) %17, %"class.std::allocator.70"* dereferenceable(1) %184)
          to label %187 unwind label %154

; <label>:187:                                    ; preds = %185
  %188 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %188, i32 0, i32 0
  %190 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %189 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %191 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %190, i32 0, i32 1
  store %"struct.DataOutBase::Patch"* %186, %"struct.DataOutBase::Patch"** %191, align 8
  %192 = invoke dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %193 unwind label %154

; <label>:193:                                    ; preds = %187
  %194 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %192, align 8
  %195 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %22, align 8
  %196 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %196, i32 0, i32 0
  %198 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %197 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %198, i32 0, i32 1
  %200 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %199, align 8
  %201 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %202 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %201)
          to label %203 unwind label %154

; <label>:203:                                    ; preds = %193
  %204 = invoke %"struct.DataOutBase::Patch"* @_ZSt22__uninitialized_move_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.DataOutBase::Patch"* %194, %"struct.DataOutBase::Patch"* %195, %"struct.DataOutBase::Patch"* %200, %"class.std::allocator.70"* dereferenceable(1) %202)
          to label %205 unwind label %154

; <label>:205:                                    ; preds = %203
  %206 = load i32, i32* @x.533
  %207 = load i32, i32* @y.534
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %205, %originalBB30alteredBB
  %214 = load i64, i64* %18, align 8
  %215 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %216 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %215, i32 0, i32 0
  %217 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %216 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %217, i32 0, i32 1
  %219 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %218, align 8
  %220 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %219, i64 %214
  store %"struct.DataOutBase::Patch"* %220, %"struct.DataOutBase::Patch"** %218, align 8
  %221 = load i32, i32* @x.533
  %222 = load i32, i32* @y.534
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  %229 = invoke dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %230 unwind label %154

; <label>:230:                                    ; preds = %originalBBpart232
  %231 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %229, align 8
  %232 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %22, align 8
  invoke void @_ZSt4fillIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RKT0_(%"struct.DataOutBase::Patch"* %231, %"struct.DataOutBase::Patch"* %232, %"struct.DataOutBase::Patch"* dereferenceable(600) %17)
          to label %233 unwind label %154

; <label>:233:                                    ; preds = %230
  br label %234

; <label>:234:                                    ; preds = %233, %153
  call void @_ZN11DataOutBase5PatchILi4ELi4EED2Ev(%"struct.DataOutBase::Patch"* %17)
  br label %456

; <label>:235:                                    ; preds = %154
  br label %474

; <label>:236:                                    ; preds = %40
  %237 = load i64, i64* %15, align 8
  %238 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.68"* %29, i64 %237, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %238, i64* %23, align 8
  %239 = call %"struct.DataOutBase::Patch"* @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE5beginEv(%"class.std::vector.68"* %29)
  %240 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %239, %"struct.DataOutBase::Patch"** %240, align 8
  %241 = call i64 @_ZN9__gnu_cxxmiIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %25)
  store i64 %241, i64* %24, align 8
  %242 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %243 = load i64, i64* %23, align 8
  %244 = call %"struct.DataOutBase::Patch"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.69"* %242, i64 %243)
  store %"struct.DataOutBase::Patch"* %244, %"struct.DataOutBase::Patch"** %26, align 8
  %245 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  store %"struct.DataOutBase::Patch"* %245, %"struct.DataOutBase::Patch"** %27, align 8
  %246 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %247 = load i64, i64* %24, align 8
  %248 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %246, i64 %247
  %249 = load i64, i64* %15, align 8
  %250 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %16, align 8
  %251 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %252 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %251)
          to label %253 unwind label %335

; <label>:253:                                    ; preds = %236
  %254 = invoke %"struct.DataOutBase::Patch"* @_ZSt24__uninitialized_fill_n_aIPN11DataOutBase5PatchILi4ELi4EEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.DataOutBase::Patch"* %248, i64 %249, %"struct.DataOutBase::Patch"* dereferenceable(600) %250, %"class.std::allocator.70"* dereferenceable(1) %252)
          to label %255 unwind label %335

; <label>:255:                                    ; preds = %253
  store %"struct.DataOutBase::Patch"* null, %"struct.DataOutBase::Patch"** %27, align 8
  %256 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %257 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %256, i32 0, i32 0
  %258 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %257 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %258, i32 0, i32 0
  %260 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %259, align 8
  %261 = invoke dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %262 unwind label %335

; <label>:262:                                    ; preds = %255
  %263 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %261, align 8
  %264 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %265 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %266 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %265)
          to label %267 unwind label %335

; <label>:267:                                    ; preds = %262
  %268 = load i32, i32* @x.533
  %269 = load i32, i32* @y.534
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %267, %originalBB34alteredBB
  %276 = load i32, i32* @x.533
  %277 = load i32, i32* @y.534
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  %284 = invoke %"struct.DataOutBase::Patch"* @_ZSt34__uninitialized_move_if_noexcept_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.DataOutBase::Patch"* %260, %"struct.DataOutBase::Patch"* %263, %"struct.DataOutBase::Patch"* %264, %"class.std::allocator.70"* dereferenceable(1) %266)
          to label %285 unwind label %335

; <label>:285:                                    ; preds = %originalBBpart236
  %286 = load i32, i32* @x.533
  %287 = load i32, i32* @y.534
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %285, %originalBB38alteredBB
  store %"struct.DataOutBase::Patch"* %284, %"struct.DataOutBase::Patch"** %27, align 8
  %294 = load i64, i64* %15, align 8
  %295 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %27, align 8
  %296 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %295, i64 %294
  store %"struct.DataOutBase::Patch"* %296, %"struct.DataOutBase::Patch"** %27, align 8
  %297 = load i32, i32* @x.533
  %298 = load i32, i32* @y.534
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  %305 = invoke dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %306 unwind label %335

; <label>:306:                                    ; preds = %originalBBpart240
  %307 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %305, align 8
  %308 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %308, i32 0, i32 0
  %310 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %309 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %311 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %310, i32 0, i32 1
  %312 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %311, align 8
  %313 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %27, align 8
  %314 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %315 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %314)
          to label %316 unwind label %335

; <label>:316:                                    ; preds = %306
  %317 = invoke %"struct.DataOutBase::Patch"* @_ZSt34__uninitialized_move_if_noexcept_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.DataOutBase::Patch"* %307, %"struct.DataOutBase::Patch"* %312, %"struct.DataOutBase::Patch"* %313, %"class.std::allocator.70"* dereferenceable(1) %315)
          to label %318 unwind label %335

; <label>:318:                                    ; preds = %316
  %319 = load i32, i32* @x.533
  %320 = load i32, i32* @y.534
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %318, %originalBB42alteredBB
  store %"struct.DataOutBase::Patch"* %317, %"struct.DataOutBase::Patch"** %27, align 8
  %327 = load i32, i32* @x.533
  %328 = load i32, i32* @y.534
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %406

; <label>:335:                                    ; preds = %316, %306, %originalBBpart240, %originalBBpart236, %262, %255, %253, %236
  %336 = landingpad { i8*, i32 }
          catch i8* null
  %337 = extractvalue { i8*, i32 } %336, 0
  store i8* %337, i8** %20, align 8
  %338 = extractvalue { i8*, i32 } %336, 1
  store i32 %338, i32* %21, align 4
  br label %339

; <label>:339:                                    ; preds = %335
  %340 = load i8*, i8** %20, align 8
  %341 = call i8* @__cxa_begin_catch(i8* %340) #11
  %342 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %27, align 8
  %343 = icmp ne %"struct.DataOutBase::Patch"* %342, null
  br i1 %343, label %377, label %344

; <label>:344:                                    ; preds = %339
  %345 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %346 = load i64, i64* %24, align 8
  %347 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %345, i64 %346
  %348 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %349 = load i64, i64* %24, align 8
  %350 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %348, i64 %349
  %351 = load i64, i64* %15, align 8
  %352 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %350, i64 %351
  %353 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %354 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %353)
          to label %355 unwind label %373

; <label>:355:                                    ; preds = %344
  %356 = load i32, i32* @x.533
  %357 = load i32, i32* @y.534
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %355, %originalBB46alteredBB
  %364 = load i32, i32* @x.533
  %365 = load i32, i32* @y.534
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  invoke void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RSaIT0_E(%"struct.DataOutBase::Patch"* %347, %"struct.DataOutBase::Patch"* %352, %"class.std::allocator.70"* dereferenceable(1) %354)
          to label %372 unwind label %373

; <label>:372:                                    ; preds = %originalBBpart248
  br label %400

; <label>:373:                                    ; preds = %404, %400, %398, %originalBBpart252, %originalBBpart248, %344
  %374 = landingpad { i8*, i32 }
          cleanup
  %375 = extractvalue { i8*, i32 } %374, 0
  store i8* %375, i8** %20, align 8
  %376 = extractvalue { i8*, i32 } %374, 1
  store i32 %376, i32* %21, align 4
  invoke void @__cxa_end_catch()
          to label %405 unwind label %479

; <label>:377:                                    ; preds = %339
  %378 = load i32, i32* @x.533
  %379 = load i32, i32* @y.534
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %377, %originalBB50alteredBB
  %386 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %387 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %27, align 8
  %388 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %389 = load i32, i32* @x.533
  %390 = load i32, i32* @y.534
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  %397 = invoke dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %388)
          to label %398 unwind label %373

; <label>:398:                                    ; preds = %originalBBpart252
  invoke void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RSaIT0_E(%"struct.DataOutBase::Patch"* %386, %"struct.DataOutBase::Patch"* %387, %"class.std::allocator.70"* dereferenceable(1) %397)
          to label %399 unwind label %373

; <label>:399:                                    ; preds = %398
  br label %400

; <label>:400:                                    ; preds = %399, %372
  %401 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %402 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %403 = load i64, i64* %23, align 8
  invoke void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.69"* %401, %"struct.DataOutBase::Patch"* %402, i64 %403)
          to label %404 unwind label %373

; <label>:404:                                    ; preds = %400
  invoke void @__cxa_rethrow() #14
          to label %482 unwind label %373

; <label>:405:                                    ; preds = %373
  br label %474

; <label>:406:                                    ; preds = %originalBBpart244
  %407 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %408 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %407, i32 0, i32 0
  %409 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %408 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %410 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %409, i32 0, i32 0
  %411 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %410, align 8
  %412 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %413 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %412, i32 0, i32 0
  %414 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %413 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %415 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %414, i32 0, i32 1
  %416 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %415, align 8
  %417 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %418 = call dereferenceable(1) %"class.std::allocator.70"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %417)
  call void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RSaIT0_E(%"struct.DataOutBase::Patch"* %411, %"struct.DataOutBase::Patch"* %416, %"class.std::allocator.70"* dereferenceable(1) %418)
  %419 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %420 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %421 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %420, i32 0, i32 0
  %422 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %421 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %423 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %422, i32 0, i32 0
  %424 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %423, align 8
  %425 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %426 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %425, i32 0, i32 0
  %427 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %426 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %428 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %427, i32 0, i32 2
  %429 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %428, align 8
  %430 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %431 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %430, i32 0, i32 0
  %432 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %431 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %433 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %432, i32 0, i32 0
  %434 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %433, align 8
  %435 = ptrtoint %"struct.DataOutBase::Patch"* %429 to i64
  %436 = ptrtoint %"struct.DataOutBase::Patch"* %434 to i64
  %437 = sub i64 %435, %436
  %438 = sdiv exact i64 %437, 600
  call void @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.69"* %419, %"struct.DataOutBase::Patch"* %424, i64 %438)
  %439 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %440 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %441 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %440, i32 0, i32 0
  %442 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %441 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %442, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %439, %"struct.DataOutBase::Patch"** %443, align 8
  %444 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %27, align 8
  %445 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %446 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %445, i32 0, i32 0
  %447 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %446 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %448 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %447, i32 0, i32 1
  store %"struct.DataOutBase::Patch"* %444, %"struct.DataOutBase::Patch"** %448, align 8
  %449 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %450 = load i64, i64* %23, align 8
  %451 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %449, i64 %450
  %452 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %453 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %452, i32 0, i32 0
  %454 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %453 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %455 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %454, i32 0, i32 2
  store %"struct.DataOutBase::Patch"* %451, %"struct.DataOutBase::Patch"** %455, align 8
  br label %456

; <label>:456:                                    ; preds = %406, %234
  br label %457

; <label>:457:                                    ; preds = %456, %originalBBpart2
  %458 = load i32, i32* @x.533
  %459 = load i32, i32* @y.534
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %457, %originalBB54alteredBB
  %466 = load i32, i32* @x.533
  %467 = load i32, i32* @y.534
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  ret void

; <label>:474:                                    ; preds = %405, %235
  %475 = load i8*, i8** %20, align 8
  %476 = load i32, i32* %21, align 4
  %477 = insertvalue { i8*, i32 } undef, i8* %475, 0
  %478 = insertvalue { i8*, i32 } %477, i32 %476, 1
  resume { i8*, i32 } %478

; <label>:479:                                    ; preds = %373, %154
  %480 = landingpad { i8*, i32 }
          catch i8* null
  %481 = extractvalue { i8*, i32 } %480, 0
  call void @__clang_call_terminate(i8* %481) #9
  unreachable

; <label>:482:                                    ; preds = %404
  %483 = load i32, i32* @x.533
  %484 = load i32, i32* @y.534
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %482, %originalBB58alteredBB
  %491 = load i32, i32* @x.533
  %492 = load i32, i32* @y.534
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %499 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %500 = alloca %"class.std::vector.68"*, align 8
  %501 = alloca i64, align 8
  %502 = alloca %"struct.DataOutBase::Patch"*, align 8
  %503 = alloca %"struct.DataOutBase::Patch", align 8
  %504 = alloca i64, align 8
  %505 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %506 = alloca i8*
  %507 = alloca i32
  %508 = alloca %"struct.DataOutBase::Patch"*, align 8
  %509 = alloca i64, align 8
  %510 = alloca i64, align 8
  %511 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %512 = alloca %"struct.DataOutBase::Patch"*, align 8
  %513 = alloca %"struct.DataOutBase::Patch"*, align 8
  %514 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %499, i32 0, i32 0
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %514, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %500, align 8
  store i64 %2, i64* %501, align 8
  store %"struct.DataOutBase::Patch"* %3, %"struct.DataOutBase::Patch"** %502, align 8
  %515 = load %"class.std::vector.68"*, %"class.std::vector.68"** %500, align 8
  %516 = load i64, i64* %501, align 8
  %517 = icmp ne i64 %516, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %72
  %518 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %519 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %518, i32 0, i32 0
  %520 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %519 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %521 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %520, i32 0, i32 1
  %522 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %521, align 8
  %523 = load i64, i64* %15, align 8
  %_ = shl i64 0, %523
  %_2 = sub i64 0, %523
  %gen = mul i64 %_2, %523
  %_3 = sub i64 0, %523
  %gen4 = mul i64 %_3, %523
  %_5 = sub i64 0, 0
  %gen6 = add i64 %_5, %523
  %524 = sub i64 0, %523
  %525 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %522, i64 %524
  %526 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %527 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %526, i32 0, i32 0
  %528 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %527 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %529 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %528, i32 0, i32 1
  %530 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %529, align 8
  %531 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %532 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %531, i32 0, i32 0
  %533 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %532 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %534 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %533, i32 0, i32 1
  %535 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %534, align 8
  %536 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %128
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %158
  %537 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %538 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %537, i32 0, i32 0
  %539 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %538 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %540 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %539, i32 0, i32 1
  %541 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %540, align 8
  %542 = load i64, i64* %15, align 8
  %543 = load i64, i64* %18, align 8
  %_15 = sub i64 0, %542
  %gen16 = add i64 %_15, %543
  %_17 = sub i64 %542, %543
  %gen18 = mul i64 %_17, %543
  %_19 = sub i64 0, %542
  %gen20 = add i64 %_19, %543
  %_21 = sub i64 %542, %543
  %gen22 = mul i64 %_21, %543
  %_23 = sub i64 0, %542
  %gen24 = add i64 %_23, %543
  %_25 = sub i64 0, %542
  %gen26 = add i64 %_25, %543
  %544 = sub i64 %542, %543
  %545 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  br label %originalBB14

originalBB30alteredBB:                            ; preds = %originalBB30, %205
  %546 = load i64, i64* %18, align 8
  %547 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  %548 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %547, i32 0, i32 0
  %549 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %548 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %550 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %549, i32 0, i32 1
  %551 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %550, align 8
  %552 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %551, i64 %546
  store %"struct.DataOutBase::Patch"* %552, %"struct.DataOutBase::Patch"** %550, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %267
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %285
  store %"struct.DataOutBase::Patch"* %284, %"struct.DataOutBase::Patch"** %27, align 8
  %553 = load i64, i64* %15, align 8
  %554 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %27, align 8
  %555 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %554, i64 %553
  store %"struct.DataOutBase::Patch"* %555, %"struct.DataOutBase::Patch"** %27, align 8
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %318
  store %"struct.DataOutBase::Patch"* %317, %"struct.DataOutBase::Patch"** %27, align 8
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %355
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %377
  %556 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %26, align 8
  %557 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %27, align 8
  %558 = bitcast %"class.std::vector.68"* %29 to %"struct.std::_Vector_base.69"*
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %457
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %482
  br label %originalBB58
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11DataOutBase5PatchILi4ELi4EEC2ERKS1_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"* dereferenceable(600)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.535
  %4 = load i32, i32* @y.536
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.DataOutBase::Patch"*, align 8
  %12 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %11, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %12, align 8
  %13 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %11, align 8
  %14 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %13, i32 0, i32 0
  %15 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %16 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %15, i32 0, i32 0
  %17 = getelementptr inbounds [16 x %class.Point.108], [16 x %class.Point.108]* %14, i64 0, i64 0
  %18 = load i32, i32* @x.535
  %19 = load i32, i32* @y.536
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %26, %originalBBpart2
  %27 = phi i64 [ 0, %originalBBpart2 ], [ %30, %26 ]
  %28 = getelementptr inbounds %class.Point.108, %class.Point.108* %17, i64 %27
  %29 = getelementptr inbounds [16 x %class.Point.108], [16 x %class.Point.108]* %16, i64 0, i64 %27
  call void @_ZN5PointILi4EEC2ERKS0_(%class.Point.108* %28, %class.Point.108* dereferenceable(32) %29)
  %30 = add nuw i64 %27, 1
  %31 = icmp eq i64 %30, 16
  br i1 %31, label %32, label %26

; <label>:32:                                     ; preds = %26
  %33 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %13, i32 0, i32 1
  %34 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %35 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %34, i32 0, i32 1
  %36 = bitcast [8 x i32]* %33 to i8*
  %37 = bitcast [8 x i32]* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 40, i32 8, i1 false)
  %38 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %13, i32 0, i32 4
  %39 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %40 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %39, i32 0, i32 4
  call void @_ZN5TableILi2EfEC2ERKS0_(%class.Table.110* %38, %class.Table.110* dereferenceable(48) %40)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %41 = alloca %"struct.DataOutBase::Patch"*, align 8
  %42 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %41, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %42, align 8
  %43 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %41, align 8
  %44 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %43, i32 0, i32 0
  %45 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %42, align 8
  %46 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %45, i32 0, i32 0
  %47 = getelementptr inbounds [16 x %class.Point.108], [16 x %class.Point.108]* %44, i64 0, i64 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #1 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %7 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8)
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %9, align 8
  %11 = ptrtoint %"struct.DataOutBase::Patch"* %7 to i64
  %12 = ptrtoint %"struct.DataOutBase::Patch"* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 600
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt22__uninitialized_move_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"class.std::allocator.70"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  %7 = alloca %"struct.DataOutBase::Patch"*, align 8
  %8 = alloca %"class.std::allocator.70"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %6, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %7, align 8
  store %"class.std::allocator.70"* %3, %"class.std::allocator.70"** %8, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %7, align 8
  %12 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %8, align 8
  %13 = call %"struct.DataOutBase::Patch"* @_ZSt22__uninitialized_copy_aIPN11DataOutBase5PatchILi4ELi4EEES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.DataOutBase::Patch"* %9, %"struct.DataOutBase::Patch"* %10, %"struct.DataOutBase::Patch"* %11, %"class.std::allocator.70"* dereferenceable(1) %12)
  ret %"struct.DataOutBase::Patch"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt13copy_backwardIPN11DataOutBase5PatchILi4ELi4EEES3_ET0_T_S5_S4_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat {
  %4 = load i32, i32* @x.541
  %5 = load i32, i32* @y.542
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.DataOutBase::Patch"*, align 8
  %13 = alloca %"struct.DataOutBase::Patch"*, align 8
  %14 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %12, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %13, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %14, align 8
  %15 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %16 = call %"struct.DataOutBase::Patch"* @_ZSt12__miter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %15)
  %17 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %13, align 8
  %18 = call %"struct.DataOutBase::Patch"* @_ZSt12__miter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %17)
  %19 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %14, align 8
  %20 = call %"struct.DataOutBase::Patch"* @_ZSt23__copy_move_backward_a2ILb0EPN11DataOutBase5PatchILi4ELi4EEES3_ET1_T0_S5_S4_(%"struct.DataOutBase::Patch"* %16, %"struct.DataOutBase::Patch"* %18, %"struct.DataOutBase::Patch"* %19)
  %21 = load i32, i32* @x.541
  %22 = load i32, i32* @y.542
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.DataOutBase::Patch"* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca %"struct.DataOutBase::Patch"*, align 8
  %30 = alloca %"struct.DataOutBase::Patch"*, align 8
  %31 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %29, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %30, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %31, align 8
  %32 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %29, align 8
  %33 = call %"struct.DataOutBase::Patch"* @_ZSt12__miter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %32)
  %34 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %30, align 8
  %35 = call %"struct.DataOutBase::Patch"* @_ZSt12__miter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %34)
  %36 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %31, align 8
  %37 = call %"struct.DataOutBase::Patch"* @_ZSt23__copy_move_backward_a2ILb0EPN11DataOutBase5PatchILi4ELi4EEES3_ET1_T0_S5_S4_(%"struct.DataOutBase::Patch"* %33, %"struct.DataOutBase::Patch"* %35, %"struct.DataOutBase::Patch"* %36)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.DataOutBase::Patch"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.543
  %3 = load i32, i32* @y.544
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.543
  %14 = load i32, i32* @y.544
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.DataOutBase::Patch"** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPN11DataOutBase5PatchILi4ELi4EEES2_EvT_S4_RKT0_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %6, align 8
  %7 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %8 = call %"struct.DataOutBase::Patch"* @_ZSt12__niter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %7)
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = call %"struct.DataOutBase::Patch"* @_ZSt12__niter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %9)
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  call void @_ZSt8__fill_aIPN11DataOutBase5PatchILi4ELi4EEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"struct.DataOutBase::Patch"* %8, %"struct.DataOutBase::Patch"* %10, %"struct.DataOutBase::Patch"* dereferenceable(600) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt24__uninitialized_fill_n_aIPN11DataOutBase5PatchILi4ELi4EEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"struct.DataOutBase::Patch"*, i64, %"struct.DataOutBase::Patch"* dereferenceable(600), %"class.std::allocator.70"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.DataOutBase::Patch"*, align 8
  %8 = alloca %"class.std::allocator.70"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %7, align 8
  store %"class.std::allocator.70"* %3, %"class.std::allocator.70"** %8, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %7, align 8
  %12 = call %"struct.DataOutBase::Patch"* @_ZSt20uninitialized_fill_nIPN11DataOutBase5PatchILi4ELi4EEEmS2_ET_S4_T0_RKT1_(%"struct.DataOutBase::Patch"* %9, i64 %10, %"struct.DataOutBase::Patch"* dereferenceable(600) %11)
  ret %"struct.DataOutBase::Patch"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.68"*, i64, i8*) #1 comdat align 2 {
  %4 = alloca %"class.std::vector.68"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.68"*, %"class.std::vector.68"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE8max_sizeEv(%"class.std::vector.68"* %9)
  %11 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4sizeEv(%"class.std::vector.68"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %33

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.549
  %17 = load i32, i32* @y.550
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %24) #14
  %25 = load i32, i32* @x.549
  %26 = load i32, i32* @y.550
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:33:                                     ; preds = %3
  %34 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4sizeEv(%"class.std::vector.68"* %9)
  %35 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4sizeEv(%"class.std::vector.68"* %9)
  store i64 %35, i64* %8, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, %37
  store i64 %38, i64* %7, align 8
  %39 = load i64, i64* %7, align 8
  %40 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4sizeEv(%"class.std::vector.68"* %9)
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %33
  %43 = load i64, i64* %7, align 8
  %44 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE8max_sizeEv(%"class.std::vector.68"* %9)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %42, %33
  %47 = call i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE8max_sizeEv(%"class.std::vector.68"* %9)
  br label %50

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %7, align 8
  br label %50

; <label>:50:                                     ; preds = %48, %46
  %51 = phi i64 [ %47, %46 ], [ %49, %48 ]
  ret i64 %51

originalBBalteredBB:                              ; preds = %originalBB, %15
  %52 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %52) #14
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE5beginEv(%"class.std::vector.68"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.68"*, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %3, align 8
  %4 = load %"class.std::vector.68"*, %"class.std::vector.68"** %3, align 8
  %5 = bitcast %"class.std::vector.68"* %4 to %"struct.std::_Vector_base.69"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN11DataOutBase5PatchILi4ELi4EEESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.DataOutBase::Patch"** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %9, align 8
  ret %"struct.DataOutBase::Patch"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZNSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.69"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.69"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.69"* %0, %"struct.std::_Vector_base.69"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.69"*, %"struct.std::_Vector_base.69"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.553
  %10 = load i32, i32* @y.554
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %17 to %"class.std::allocator.70"*
  %19 = load i64, i64* %4, align 8
  %20 = call %"struct.DataOutBase::Patch"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8allocateERS4_m(%"class.std::allocator.70"* dereferenceable(1) %18, i64 %19)
  %21 = load i32, i32* @x.553
  %22 = load i32, i32* @y.554
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:29:                                     ; preds = %2
  br label %30

; <label>:30:                                     ; preds = %29, %originalBBpart2
  %31 = phi %"struct.DataOutBase::Patch"* [ %20, %originalBBpart2 ], [ null, %29 ]
  ret %"struct.DataOutBase::Patch"* %31

originalBBalteredBB:                              ; preds = %originalBB, %8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %5, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %32 to %"class.std::allocator.70"*
  %34 = load i64, i64* %4, align 8
  %35 = call %"struct.DataOutBase::Patch"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8allocateERS4_m(%"class.std::allocator.70"* dereferenceable(1) %33, i64 %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt34__uninitialized_move_if_noexcept_aIPN11DataOutBase5PatchILi4ELi4EEES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"class.std::allocator.70"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  %7 = alloca %"struct.DataOutBase::Patch"*, align 8
  %8 = alloca %"class.std::allocator.70"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %6, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %7, align 8
  store %"class.std::allocator.70"* %3, %"class.std::allocator.70"** %8, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %7, align 8
  %12 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %8, align 8
  %13 = call %"struct.DataOutBase::Patch"* @_ZSt22__uninitialized_copy_aIPN11DataOutBase5PatchILi4ELi4EEES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.DataOutBase::Patch"* %9, %"struct.DataOutBase::Patch"* %10, %"struct.DataOutBase::Patch"* %11, %"class.std::allocator.70"* dereferenceable(1) %12)
  ret %"struct.DataOutBase::Patch"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi4EEC2ERKS0_(%class.Point.108*, %class.Point.108* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Point.108*, align 8
  %4 = alloca %class.Point.108*, align 8
  store %class.Point.108* %0, %class.Point.108** %3, align 8
  store %class.Point.108* %1, %class.Point.108** %4, align 8
  %5 = load %class.Point.108*, %class.Point.108** %3, align 8
  %6 = bitcast %class.Point.108* %5 to %class.Tensor.109*
  %7 = load %class.Point.108*, %class.Point.108** %4, align 8
  %8 = bitcast %class.Point.108* %7 to %class.Tensor.109*
  call void @_ZN6TensorILi1ELi4EEC2ERKS0_(%class.Tensor.109* %6, %class.Tensor.109* dereferenceable(32) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EfEC2ERKS0_(%class.Table.110*, %class.Table.110* dereferenceable(48)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Table.110*, align 8
  %4 = alloca %class.Table.110*, align 8
  store %class.Table.110* %0, %class.Table.110** %3, align 8
  store %class.Table.110* %1, %class.Table.110** %4, align 8
  %5 = load %class.Table.110*, %class.Table.110** %3, align 8
  %6 = bitcast %class.Table.110* %5 to %class.TableBase.111*
  %7 = load %class.Table.110*, %class.Table.110** %4, align 8
  %8 = bitcast %class.Table.110* %7 to %class.TableBase.111*
  call void @_ZN9TableBaseILi2EfEC2ERKS0_(%class.TableBase.111* %6, %class.TableBase.111* dereferenceable(48) %8)
  %9 = bitcast %class.Table.110* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2EfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi4EEC2ERKS0_(%class.Tensor.109*, %class.Tensor.109* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Tensor.109*, align 8
  %4 = alloca %class.Tensor.109*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor.109* %0, %class.Tensor.109** %3, align 8
  store %class.Tensor.109* %1, %class.Tensor.109** %4, align 8
  %6 = load %class.Tensor.109*, %class.Tensor.109** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart2, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 4
  br i1 %9, label %10, label %40

; <label>:10:                                     ; preds = %7
  %11 = load %class.Tensor.109*, %class.Tensor.109** %4, align 8
  %12 = getelementptr inbounds %class.Tensor.109, %class.Tensor.109* %11, i32 0, i32 0
  %13 = load i32, i32* %5, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [4 x double], [4 x double]* %12, i64 0, i64 %14
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %class.Tensor.109, %class.Tensor.109* %6, i32 0, i32 0
  %18 = load i32, i32* %5, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [4 x double], [4 x double]* %17, i64 0, i64 %19
  store double %16, double* %20, align 8
  br label %21

; <label>:21:                                     ; preds = %10
  %22 = load i32, i32* @x.561
  %23 = load i32, i32* @y.562
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* %5, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %5, align 4
  %32 = load i32, i32* @x.561
  %33 = load i32, i32* @y.562
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %7

; <label>:40:                                     ; preds = %7
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %21
  %41 = load i32, i32* %5, align 4
  %_ = sub i32 0, %41
  %gen = add i32 %_, 1
  %_1 = shl i32 %41, 1
  %_2 = sub i32 0, %41
  %gen3 = add i32 %_2, 1
  %42 = add i32 %41, 1
  store i32 %42, i32* %5, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EfEC2ERKS0_(%class.TableBase.111*, %class.TableBase.111* dereferenceable(48)) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase.111*, align 8
  %4 = alloca %class.TableBase.111*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.TableBase.111* %0, %class.TableBase.111** %3, align 8
  store %class.TableBase.111* %1, %class.TableBase.111** %4, align 8
  %7 = load %class.TableBase.111*, %class.TableBase.111** %3, align 8
  %8 = bitcast %class.TableBase.111* %7 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %8)
  %9 = bitcast %class.TableBase.111* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2EfE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 1
  store float* null, float** %10, align 8
  %11 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %7, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %12)
          to label %13 unwind label %58

; <label>:13:                                     ; preds = %2
  %14 = load %class.TableBase.111*, %class.TableBase.111** %4, align 8
  %15 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %14, i32 0, i32 3
  invoke void @_ZN9TableBaseILi2EfE6reinitERK12TableIndicesILi2EE(%class.TableBase.111* %7, %class.TableIndices* dereferenceable(8) %15)
          to label %16 unwind label %58

; <label>:16:                                     ; preds = %13
  %17 = load %class.TableBase.111*, %class.TableBase.111** %4, align 8
  %18 = invoke i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %17)
          to label %19 unwind label %58

; <label>:19:                                     ; preds = %16
  %20 = icmp ne i32 %18, 0
  br i1 %20, label %21, label %63

; <label>:21:                                     ; preds = %19
  %22 = load i32, i32* @x.563
  %23 = load i32, i32* @y.564
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load %class.TableBase.111*, %class.TableBase.111** %4, align 8
  %31 = load i32, i32* @x.563
  %32 = load i32, i32* @y.564
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %39 = invoke float* @_ZNK9TableBaseILi2EfE4dataEv(%class.TableBase.111* %30)
          to label %40 unwind label %58

; <label>:40:                                     ; preds = %originalBBpart2
  invoke void @_ZN9TableBaseILi2EfE4fillIfEEvPKT_(%class.TableBase.111* %7, float* %39)
          to label %41 unwind label %58

; <label>:41:                                     ; preds = %40
  %42 = load i32, i32* @x.563
  %43 = load i32, i32* @y.564
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* @x.563
  %51 = load i32, i32* @y.564
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63

; <label>:58:                                     ; preds = %40, %originalBBpart2, %16, %13, %2
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %5, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %6, align 4
  %62 = bitcast %class.TableBase.111* %7 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %62)
          to label %64 unwind label %86

; <label>:63:                                     ; preds = %originalBBpart24, %19
  ret void

; <label>:64:                                     ; preds = %58
  br label %65

; <label>:65:                                     ; preds = %64
  %66 = load i32, i32* @x.563
  %67 = load i32, i32* @y.564
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load i8*, i8** %5, align 8
  %75 = load i32, i32* %6, align 4
  %76 = insertvalue { i8*, i32 } undef, i8* %74, 0
  %77 = insertvalue { i8*, i32 } %76, i32 %75, 1
  %78 = load i32, i32* @x.563
  %79 = load i32, i32* @y.564
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %77

; <label>:86:                                     ; preds = %58
  %87 = load i32, i32* @x.563
  %88 = load i32, i32* @y.564
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #9
  %97 = load i32, i32* @x.563
  %98 = load i32, i32* @y.564
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %105 = load %class.TableBase.111*, %class.TableBase.111** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %106 = load i8*, i8** %5, align 8
  %107 = load i32, i32* %6, align 4
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  call void @__clang_call_terminate(i8* %111) #9
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EfED0Ev(%class.Table.110*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.565
  %3 = load i32, i32* @y.566
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table.110*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.Table.110* %0, %class.Table.110** %10, align 8
  %13 = load %class.Table.110*, %class.Table.110** %10, align 8
  %14 = load i32, i32* @x.565
  %15 = load i32, i32* @y.566
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN5TableILi2EfED2Ev(%class.Table.110* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.Table.110* %13 to i8*
  call void @_ZdlPv(i8* %23) #12
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  %28 = bitcast %class.Table.110* %13 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.565
  %31 = load i32, i32* @y.566
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %11, align 8
  %39 = load i32, i32* %12, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.565
  %43 = load i32, i32* @y.566
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %1
  %50 = alloca %class.Table.110*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %class.Table.110* %0, %class.Table.110** %50, align 8
  %53 = load %class.Table.110*, %class.Table.110** %50, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %54 = load i8*, i8** %11, align 8
  %55 = load i32, i32* %12, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  br label %originalBB1
}

declare void @_ZN11SubscriptorC2Ev(%class.Subscriptor*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EfE4fillIfEEvPKT_(%class.TableBase.111*, float*) #1 comdat align 2 {
  %3 = load i32, i32* @x.567
  %4 = load i32, i32* @y.568
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TableBase.111*, align 8
  %12 = alloca float*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %11, align 8
  store float* %1, float** %12, align 8
  %13 = load %class.TableBase.111*, %class.TableBase.111** %11, align 8
  %14 = load float*, float** %12, align 8
  %15 = load float*, float** %12, align 8
  %16 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %13)
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds float, float* %15, i64 %17
  %19 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %13, i32 0, i32 1
  %20 = load float*, float** %19, align 8
  %21 = call float* @_ZSt4copyIPKfPfET0_T_S4_S3_(float* %14, float* %18, float* %20)
  %22 = load i32, i32* @x.567
  %23 = load i32, i32* @y.568
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %30 = alloca %class.TableBase.111*, align 8
  %31 = alloca float*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %30, align 8
  store float* %1, float** %31, align 8
  %32 = load %class.TableBase.111*, %class.TableBase.111** %30, align 8
  %33 = load float*, float** %31, align 8
  %34 = load float*, float** %31, align 8
  %35 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %32)
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds float, float* %34, i64 %36
  %38 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %32, i32 0, i32 1
  %39 = load float*, float** %38, align 8
  %40 = call float* @_ZSt4copyIPKfPfET0_T_S4_S3_(float* %33, float* %37, float* %39)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZNK9TableBaseILi2EfE4dataEv(%class.TableBase.111*) #0 comdat align 2 {
  %2 = load i32, i32* @x.569
  %3 = load i32, i32* @y.570
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %10, align 8
  %11 = load %class.TableBase.111*, %class.TableBase.111** %10, align 8
  %12 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %11, i32 0, i32 1
  %13 = load float*, float** %12, align 8
  %14 = load i32, i32* @x.569
  %15 = load i32, i32* @y.570
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %22, align 8
  %23 = load %class.TableBase.111*, %class.TableBase.111** %22, align 8
  %24 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %23, i32 0, i32 1
  %25 = load float*, float** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr float* @_ZSt4copyIPKfPfET0_T_S4_S3_(float*, float*, float*) #1 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__miter_baseIPKfET_S2_(float* %7)
  %9 = load float*, float** %5, align 8
  %10 = call float* @_ZSt12__miter_baseIPKfET_S2_(float* %9)
  %11 = load float*, float** %6, align 8
  %12 = call float* @_ZSt14__copy_move_a2ILb0EPKfPfET1_T0_S4_S3_(float* %8, float* %10, float* %11)
  ret float* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr float* @_ZSt14__copy_move_a2ILb0EPKfPfET1_T0_S4_S3_(float*, float*, float*) #1 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__niter_baseIPKfET_S2_(float* %7)
  %9 = load float*, float** %5, align 8
  %10 = call float* @_ZSt12__niter_baseIPKfET_S2_(float* %9)
  %11 = load float*, float** %6, align 8
  %12 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %11)
  %13 = call float* @_ZSt13__copy_move_aILb0EPKfPfET1_T0_S4_S3_(float* %8, float* %10, float* %12)
  %14 = call float* @_ZSt12__niter_wrapIPfET_RKS1_S1_(float** dereferenceable(8) %6, float* %13)
  ret float* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__miter_baseIPKfET_S2_(float*) #0 comdat {
  %2 = alloca float*, align 8
  store float* %0, float** %2, align 8
  %3 = load float*, float** %2, align 8
  ret float* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr float* @_ZSt13__copy_move_aILb0EPKfPfET1_T0_S4_S3_(float*, float*, float*) #1 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i8, align 1
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load float*, float** %4, align 8
  %9 = load float*, float** %5, align 8
  %10 = load float*, float** %6, align 8
  %11 = call float* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_(float* %8, float* %9, float* %10)
  ret float* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__niter_baseIPKfET_S2_(float*) #0 comdat {
  %2 = load i32, i32* @x.579
  %3 = load i32, i32* @y.580
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca float*, align 8
  store float* %0, float** %10, align 8
  %11 = load float*, float** %10, align 8
  %12 = load i32, i32* @x.579
  %13 = load i32, i32* @y.580
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca float*, align 8
  store float* %0, float** %20, align 8
  %21 = load float*, float** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_(float*, float*, float*) #0 comdat align 2 {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i64, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %8 = load float*, float** %5, align 8
  %9 = load float*, float** %4, align 8
  %10 = ptrtoint float* %8 to i64
  %11 = ptrtoint float* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %39

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.581
  %18 = load i32, i32* @y.582
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load float*, float** %6, align 8
  %26 = bitcast float* %25 to i8*
  %27 = load float*, float** %4, align 8
  %28 = bitcast float* %27 to i8*
  %29 = load i64, i64* %7, align 8
  %30 = mul i64 4, %29
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %26, i8* %28, i64 %30, i32 4, i1 false)
  %31 = load i32, i32* @x.581
  %32 = load i32, i32* @y.582
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %3
  %40 = load float*, float** %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = getelementptr inbounds float, float* %40, i64 %41
  ret float* %42

originalBBalteredBB:                              ; preds = %originalBB, %16
  %43 = load float*, float** %6, align 8
  %44 = bitcast float* %43 to i8*
  %45 = load float*, float** %4, align 8
  %46 = bitcast float* %45 to i8*
  %47 = load i64, i64* %7, align 8
  %_ = sub i64 0, 4
  %gen = add i64 %_, %47
  %_1 = sub i64 0, 4
  %gen2 = add i64 %_1, %47
  %_3 = sub i64 0, 4
  %gen4 = add i64 %_3, %47
  %_5 = shl i64 4, %47
  %_6 = shl i64 4, %47
  %_7 = shl i64 4, %47
  %_8 = sub i64 0, 4
  %gen9 = add i64 %_8, %47
  %_10 = shl i64 4, %47
  %48 = mul i64 4, %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %48, i32 4, i1 false)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt22__uninitialized_copy_aIPN11DataOutBase5PatchILi4ELi4EEES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"class.std::allocator.70"* dereferenceable(1)) #1 comdat {
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  %7 = alloca %"struct.DataOutBase::Patch"*, align 8
  %8 = alloca %"class.std::allocator.70"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %6, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %7, align 8
  store %"class.std::allocator.70"* %3, %"class.std::allocator.70"** %8, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %7, align 8
  %12 = call %"struct.DataOutBase::Patch"* @_ZSt18uninitialized_copyIPN11DataOutBase5PatchILi4ELi4EEES3_ET0_T_S5_S4_(%"struct.DataOutBase::Patch"* %9, %"struct.DataOutBase::Patch"* %10, %"struct.DataOutBase::Patch"* %11)
  ret %"struct.DataOutBase::Patch"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt18uninitialized_copyIPN11DataOutBase5PatchILi4ELi4EEES3_ET0_T_S5_S4_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  %7 = alloca i8, align 1
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %11 = call %"struct.DataOutBase::Patch"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11DataOutBase5PatchILi4ELi4EEES5_EET0_T_S7_S6_(%"struct.DataOutBase::Patch"* %8, %"struct.DataOutBase::Patch"* %9, %"struct.DataOutBase::Patch"* %10)
  ret %"struct.DataOutBase::Patch"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11DataOutBase5PatchILi4ELi4EEES5_EET0_T_S7_S6_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.587
  %5 = load i32, i32* @y.588
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.DataOutBase::Patch"*, align 8
  %13 = alloca %"struct.DataOutBase::Patch"*, align 8
  %14 = alloca %"struct.DataOutBase::Patch"*, align 8
  %15 = alloca %"struct.DataOutBase::Patch"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %12, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %13, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %14, align 8
  %18 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %14, align 8
  store %"struct.DataOutBase::Patch"* %18, %"struct.DataOutBase::Patch"** %15, align 8
  %19 = load i32, i32* @x.587
  %20 = load i32, i32* @y.588
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %37, %originalBBpart2
  %28 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %29 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %13, align 8
  %30 = icmp ne %"struct.DataOutBase::Patch"* %28, %29
  br i1 %30, label %31, label %84

; <label>:31:                                     ; preds = %27
  %32 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  %33 = invoke %"struct.DataOutBase::Patch"* @_ZSt11__addressofIN11DataOutBase5PatchILi4ELi4EEEEPT_RS3_(%"struct.DataOutBase::Patch"* dereferenceable(600) %32)
          to label %34 unwind label %42

; <label>:34:                                     ; preds = %31
  %35 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  invoke void @_ZSt10_ConstructIN11DataOutBase5PatchILi4ELi4EEES2_EvPT_RKT0_(%"struct.DataOutBase::Patch"* %33, %"struct.DataOutBase::Patch"* dereferenceable(600) %35)
          to label %36 unwind label %42

; <label>:36:                                     ; preds = %34
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %39 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %38, i32 1
  store %"struct.DataOutBase::Patch"* %39, %"struct.DataOutBase::Patch"** %12, align 8
  %40 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  %41 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %40, i32 1
  store %"struct.DataOutBase::Patch"* %41, %"struct.DataOutBase::Patch"** %15, align 8
  br label %27

; <label>:42:                                     ; preds = %34, %31
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %16, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %17, align 4
  br label %46

; <label>:46:                                     ; preds = %42
  %47 = load i32, i32* @x.587
  %48 = load i32, i32* @y.588
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i8*, i8** %16, align 8
  %56 = call i8* @__cxa_begin_catch(i8* %55) #11
  %57 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %14, align 8
  %58 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  %59 = load i32, i32* @x.587
  %60 = load i32, i32* @y.588
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEEEvT_S4_(%"struct.DataOutBase::Patch"* %57, %"struct.DataOutBase::Patch"* %58)
          to label %67 unwind label %86

; <label>:67:                                     ; preds = %originalBBpart24
  %68 = load i32, i32* @x.587
  %69 = load i32, i32* @y.588
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %67, %originalBB6alteredBB
  %76 = load i32, i32* @x.587
  %77 = load i32, i32* @y.588
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @__cxa_rethrow() #14
          to label %116 unwind label %86

; <label>:84:                                     ; preds = %27
  %85 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  ret %"struct.DataOutBase::Patch"* %85

; <label>:86:                                     ; preds = %originalBBpart28, %originalBBpart24
  %87 = load i32, i32* @x.587
  %88 = load i32, i32* @y.588
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %16, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %17, align 4
  %98 = load i32, i32* @x.587
  %99 = load i32, i32* @y.588
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @__cxa_end_catch()
          to label %106 unwind label %113

; <label>:106:                                    ; preds = %originalBBpart212
  br label %108
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:108:                                    ; preds = %106
  %109 = load i8*, i8** %16, align 8
  %110 = load i32, i32* %17, align 4
  %111 = insertvalue { i8*, i32 } undef, i8* %109, 0
  %112 = insertvalue { i8*, i32 } %111, i32 %110, 1
  resume { i8*, i32 } %112

; <label>:113:                                    ; preds = %originalBBpart212
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #9
  unreachable

; <label>:116:                                    ; preds = %originalBBpart28
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %117 = alloca %"struct.DataOutBase::Patch"*, align 8
  %118 = alloca %"struct.DataOutBase::Patch"*, align 8
  %119 = alloca %"struct.DataOutBase::Patch"*, align 8
  %120 = alloca %"struct.DataOutBase::Patch"*, align 8
  %121 = alloca i8*
  %122 = alloca i32
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %117, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %118, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %119, align 8
  %123 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %119, align 8
  store %"struct.DataOutBase::Patch"* %123, %"struct.DataOutBase::Patch"** %120, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %124 = load i8*, i8** %16, align 8
  %125 = call i8* @__cxa_begin_catch(i8* %124) #11
  %126 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %14, align 8
  %127 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %67
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %16, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %17, align 4
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructIN11DataOutBase5PatchILi4ELi4EEES2_EvPT_RKT0_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat {
  %3 = alloca %"struct.DataOutBase::Patch"*, align 8
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %3, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %4, align 8
  %5 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %3, align 8
  %6 = bitcast %"struct.DataOutBase::Patch"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.DataOutBase::Patch"*
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  call void @_ZN11DataOutBase5PatchILi4ELi4EEC2ERKS1_(%"struct.DataOutBase::Patch"* %7, %"struct.DataOutBase::Patch"* dereferenceable(600) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt23__copy_move_backward_a2ILb0EPN11DataOutBase5PatchILi4ELi4EEES3_ET1_T0_S5_S4_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %6, align 8
  %7 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %8 = call %"struct.DataOutBase::Patch"* @_ZSt12__niter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %7)
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = call %"struct.DataOutBase::Patch"* @_ZSt12__niter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %9)
  %11 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %12 = call %"struct.DataOutBase::Patch"* @_ZSt12__niter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"* %11)
  %13 = call %"struct.DataOutBase::Patch"* @_ZSt22__copy_move_backward_aILb0EPN11DataOutBase5PatchILi4ELi4EEES3_ET1_T0_S5_S4_(%"struct.DataOutBase::Patch"* %8, %"struct.DataOutBase::Patch"* %10, %"struct.DataOutBase::Patch"* %12)
  %14 = call %"struct.DataOutBase::Patch"* @_ZSt12__niter_wrapIPN11DataOutBase5PatchILi4ELi4EEEET_RKS4_S4_(%"struct.DataOutBase::Patch"** dereferenceable(8) %6, %"struct.DataOutBase::Patch"* %13)
  ret %"struct.DataOutBase::Patch"* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt12__miter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"*) #0 comdat {
  %2 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %2, align 8
  %3 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %2, align 8
  ret %"struct.DataOutBase::Patch"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt12__niter_wrapIPN11DataOutBase5PatchILi4ELi4EEEET_RKS4_S4_(%"struct.DataOutBase::Patch"** dereferenceable(8), %"struct.DataOutBase::Patch"*) #0 comdat {
  %3 = load i32, i32* @x.595
  %4 = load i32, i32* @y.596
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.DataOutBase::Patch"**, align 8
  %12 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"** %0, %"struct.DataOutBase::Patch"*** %11, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %12, align 8
  %13 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %14 = load i32, i32* @x.595
  %15 = load i32, i32* @y.596
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.DataOutBase::Patch"* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"struct.DataOutBase::Patch"**, align 8
  %23 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"** %0, %"struct.DataOutBase::Patch"*** %22, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %23, align 8
  %24 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt22__copy_move_backward_aILb0EPN11DataOutBase5PatchILi4ELi4EEES3_ET1_T0_S5_S4_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  %7 = alloca i8, align 1
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %11 = call %"struct.DataOutBase::Patch"* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN11DataOutBase5PatchILi4ELi4EEES6_EET0_T_S8_S7_(%"struct.DataOutBase::Patch"* %8, %"struct.DataOutBase::Patch"* %9, %"struct.DataOutBase::Patch"* %10)
  ret %"struct.DataOutBase::Patch"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt12__niter_baseIPN11DataOutBase5PatchILi4ELi4EEEET_S4_(%"struct.DataOutBase::Patch"*) #0 comdat {
  %2 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %2, align 8
  %3 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %2, align 8
  ret %"struct.DataOutBase::Patch"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN11DataOutBase5PatchILi4ELi4EEES6_EET0_T_S8_S7_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*) #1 comdat align 2 {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  %7 = alloca i64, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %6, align 8
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %10 = ptrtoint %"struct.DataOutBase::Patch"* %8 to i64
  %11 = ptrtoint %"struct.DataOutBase::Patch"* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 600
  store i64 %13, i64* %7, align 8
  br label %14

; <label>:14:                                     ; preds = %originalBBpart28, %3
  %15 = load i32, i32* @x.601
  %16 = load i32, i32* @y.602
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i64, i64* %7, align 8
  %24 = icmp sgt i64 %23, 0
  %25 = load i32, i32* @x.601
  %26 = load i32, i32* @y.602
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %74

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @x.601
  %35 = load i32, i32* @y.602
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %43 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %42, i32 -1
  store %"struct.DataOutBase::Patch"* %43, %"struct.DataOutBase::Patch"** %5, align 8
  %44 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %45 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %44, i32 -1
  store %"struct.DataOutBase::Patch"* %45, %"struct.DataOutBase::Patch"** %6, align 8
  %46 = call dereferenceable(600) %"struct.DataOutBase::Patch"* @_ZN11DataOutBase5PatchILi4ELi4EEaSERKS1_(%"struct.DataOutBase::Patch"* %45, %"struct.DataOutBase::Patch"* dereferenceable(600) %43)
  %47 = load i32, i32* @x.601
  %48 = load i32, i32* @y.602
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %55

; <label>:55:                                     ; preds = %originalBBpart24
  %56 = load i32, i32* @x.601
  %57 = load i32, i32* @y.602
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i64, i64* %7, align 8
  %65 = add nsw i64 %64, -1
  store i64 %65, i64* %7, align 8
  %66 = load i32, i32* @x.601
  %67 = load i32, i32* @y.602
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %14

; <label>:74:                                     ; preds = %originalBBpart2
  %75 = load i32, i32* @x.601
  %76 = load i32, i32* @y.602
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %84 = load i32, i32* @x.601
  %85 = load i32, i32* @y.602
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret %"struct.DataOutBase::Patch"* %83

originalBBalteredBB:                              ; preds = %originalBB, %14
  %92 = load i64, i64* %7, align 8
  %93 = icmp sgt i64 %92, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %94 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %95 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %94, i32 -1
  store %"struct.DataOutBase::Patch"* %95, %"struct.DataOutBase::Patch"** %5, align 8
  %96 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %97 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %96, i32 -1
  store %"struct.DataOutBase::Patch"* %97, %"struct.DataOutBase::Patch"** %6, align 8
  %98 = call dereferenceable(600) %"struct.DataOutBase::Patch"* @_ZN11DataOutBase5PatchILi4ELi4EEaSERKS1_(%"struct.DataOutBase::Patch"* %97, %"struct.DataOutBase::Patch"* dereferenceable(600) %95)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %99 = load i64, i64* %7, align 8
  %_ = sub i64 %99, -1
  %gen = mul i64 %_, -1
  %100 = add nsw i64 %99, -1
  store i64 %100, i64* %7, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %101 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(600) %"struct.DataOutBase::Patch"* @_ZN11DataOutBase5PatchILi4ELi4EEaSERKS1_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat align 2 {
  %3 = alloca %"struct.DataOutBase::Patch"*, align 8
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca i64, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %3, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %4, align 8
  %6 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %3, align 8
  store i64 0, i64* %5, align 8
  br label %7

; <label>:7:                                      ; preds = %19, %2
  %8 = load i64, i64* %5, align 8
  %9 = icmp ne i64 %8, 16
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %6, i32 0, i32 0
  %12 = load i64, i64* %5, align 8
  %13 = getelementptr inbounds [16 x %class.Point.108], [16 x %class.Point.108]* %11, i64 0, i64 %12
  %14 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %15 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %14, i32 0, i32 0
  %16 = load i64, i64* %5, align 8
  %17 = getelementptr inbounds [16 x %class.Point.108], [16 x %class.Point.108]* %15, i64 0, i64 %16
  %18 = call dereferenceable(32) %class.Point.108* @_ZN5PointILi4EEaSERKS0_(%class.Point.108* %13, %class.Point.108* dereferenceable(32) %17)
  br label %19

; <label>:19:                                     ; preds = %10
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %5, align 8
  br label %7

; <label>:22:                                     ; preds = %7
  %23 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %6, i32 0, i32 1
  %24 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %25 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %24, i32 0, i32 1
  %26 = bitcast [8 x i32]* %23 to i8*
  %27 = bitcast [8 x i32]* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 40, i32 8, i1 false)
  %28 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %6, i32 0, i32 4
  %29 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %30 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %29, i32 0, i32 4
  %31 = call dereferenceable(48) %class.Table.110* @_ZN5TableILi2EfEaSERKS0_(%class.Table.110* %28, %class.Table.110* dereferenceable(48) %30)
  ret %"struct.DataOutBase::Patch"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %class.Point.108* @_ZN5PointILi4EEaSERKS0_(%class.Point.108*, %class.Point.108* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %class.Point.108*, align 8
  %4 = alloca %class.Point.108*, align 8
  store %class.Point.108* %0, %class.Point.108** %3, align 8
  store %class.Point.108* %1, %class.Point.108** %4, align 8
  %5 = load %class.Point.108*, %class.Point.108** %3, align 8
  %6 = bitcast %class.Point.108* %5 to %class.Tensor.109*
  %7 = load %class.Point.108*, %class.Point.108** %4, align 8
  %8 = bitcast %class.Point.108* %7 to %class.Tensor.109*
  %9 = call dereferenceable(32) %class.Tensor.109* @_ZN6TensorILi1ELi4EEaSERKS0_(%class.Tensor.109* %6, %class.Tensor.109* dereferenceable(32) %8)
  ret %class.Point.108* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %class.Table.110* @_ZN5TableILi2EfEaSERKS0_(%class.Table.110*, %class.Table.110* dereferenceable(48)) #1 comdat align 2 {
  %3 = alloca %class.Table.110*, align 8
  %4 = alloca %class.Table.110*, align 8
  store %class.Table.110* %0, %class.Table.110** %3, align 8
  store %class.Table.110* %1, %class.Table.110** %4, align 8
  %5 = load %class.Table.110*, %class.Table.110** %3, align 8
  %6 = bitcast %class.Table.110* %5 to %class.TableBase.111*
  %7 = load %class.Table.110*, %class.Table.110** %4, align 8
  %8 = bitcast %class.Table.110* %7 to %class.TableBase.111*
  %9 = call dereferenceable(48) %class.TableBase.111* @_ZN9TableBaseILi2EfEaSERKS0_(%class.TableBase.111* %6, %class.TableBase.111* dereferenceable(48) %8)
  ret %class.Table.110* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %class.Tensor.109* @_ZN6TensorILi1ELi4EEaSERKS0_(%class.Tensor.109*, %class.Tensor.109* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %class.Tensor.109*, align 8
  %4 = alloca %class.Tensor.109*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor.109* %0, %class.Tensor.109** %3, align 8
  store %class.Tensor.109* %1, %class.Tensor.109** %4, align 8
  %6 = load %class.Tensor.109*, %class.Tensor.109** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %37, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 4
  br i1 %9, label %10, label %40

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.609
  %12 = load i32, i32* @y.610
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %class.Tensor.109*, %class.Tensor.109** %4, align 8
  %20 = getelementptr inbounds %class.Tensor.109, %class.Tensor.109* %19, i32 0, i32 0
  %21 = load i32, i32* %5, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [4 x double], [4 x double]* %20, i64 0, i64 %22
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %class.Tensor.109, %class.Tensor.109* %6, i32 0, i32 0
  %26 = load i32, i32* %5, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [4 x double], [4 x double]* %25, i64 0, i64 %27
  store double %24, double* %28, align 8
  %29 = load i32, i32* @x.609
  %30 = load i32, i32* @y.610
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* %5, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %7

; <label>:40:                                     ; preds = %7
  %41 = load i32, i32* @x.609
  %42 = load i32, i32* @y.610
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i32, i32* @x.609
  %50 = load i32, i32* @y.610
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %class.Tensor.109* %6

originalBBalteredBB:                              ; preds = %originalBB, %10
  %57 = load %class.Tensor.109*, %class.Tensor.109** %4, align 8
  %58 = getelementptr inbounds %class.Tensor.109, %class.Tensor.109* %57, i32 0, i32 0
  %59 = load i32, i32* %5, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [4 x double], [4 x double]* %58, i64 0, i64 %60
  %62 = load double, double* %61, align 8
  %63 = getelementptr inbounds %class.Tensor.109, %class.Tensor.109* %6, i32 0, i32 0
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [4 x double], [4 x double]* %63, i64 0, i64 %65
  store double %62, double* %66, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %class.TableBase.111* @_ZN9TableBaseILi2EfEaSERKS0_(%class.TableBase.111*, %class.TableBase.111* dereferenceable(48)) #1 comdat align 2 {
  %3 = alloca %class.TableBase.111*, align 8
  %4 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %3, align 8
  store %class.TableBase.111* %1, %class.TableBase.111** %4, align 8
  %5 = load %class.TableBase.111*, %class.TableBase.111** %3, align 8
  %6 = load %class.TableBase.111*, %class.TableBase.111** %4, align 8
  %7 = call dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2EfE4sizeEv(%class.TableBase.111* %6)
  call void @_ZN9TableBaseILi2EfE6reinitERK12TableIndicesILi2EE(%class.TableBase.111* %5, %class.TableIndices* dereferenceable(8) %7)
  %8 = call zeroext i1 @_ZNK9TableBaseILi2EfE5emptyEv(%class.TableBase.111* %5)
  br i1 %8, label %24, label %9

; <label>:9:                                      ; preds = %2
  %10 = load %class.TableBase.111*, %class.TableBase.111** %4, align 8
  %11 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %10, i32 0, i32 1
  %12 = load float*, float** %11, align 8
  %13 = getelementptr inbounds float, float* %12, i64 0
  %14 = load %class.TableBase.111*, %class.TableBase.111** %4, align 8
  %15 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %14, i32 0, i32 1
  %16 = load float*, float** %15, align 8
  %17 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %5)
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds float, float* %16, i64 %18
  %20 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %5, i32 0, i32 1
  %21 = load float*, float** %20, align 8
  %22 = getelementptr inbounds float, float* %21, i64 0
  %23 = call float* @_ZSt4copyIPfS0_ET0_T_S2_S1_(float* %13, float* %19, float* %22)
  br label %24

; <label>:24:                                     ; preds = %9, %2
  %25 = load i32, i32* @x.611
  %26 = load i32, i32* @y.612
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = load i32, i32* @x.611
  %34 = load i32, i32* @y.612
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TableBase.111* %5

originalBBalteredBB:                              ; preds = %originalBB, %24
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2EfE4sizeEv(%class.TableBase.111*) #0 comdat align 2 {
  %2 = load i32, i32* @x.613
  %3 = load i32, i32* @y.614
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %10, align 8
  %11 = load %class.TableBase.111*, %class.TableBase.111** %10, align 8
  %12 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %11, i32 0, i32 3
  %13 = load i32, i32* @x.613
  %14 = load i32, i32* @y.614
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TableIndices* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %21, align 8
  %22 = load %class.TableBase.111*, %class.TableBase.111** %21, align 8
  %23 = getelementptr inbounds %class.TableBase.111, %class.TableBase.111* %22, i32 0, i32 3
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK9TableBaseILi2EfE5emptyEv(%class.TableBase.111*) #1 comdat align 2 {
  %2 = load i32, i32* @x.615
  %3 = load i32, i32* @y.616
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %10, align 8
  %11 = load %class.TableBase.111*, %class.TableBase.111** %10, align 8
  %12 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %11)
  %13 = icmp eq i32 %12, 0
  %14 = load i32, i32* @x.615
  %15 = load i32, i32* @y.616
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.TableBase.111*, align 8
  store %class.TableBase.111* %0, %class.TableBase.111** %22, align 8
  %23 = load %class.TableBase.111*, %class.TableBase.111** %22, align 8
  %24 = call i32 @_ZNK9TableBaseILi2EfE10n_elementsEv(%class.TableBase.111* %23)
  %25 = icmp eq i32 %24, 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr float* @_ZSt4copyIPfS0_ET0_T_S2_S1_(float*, float*, float*) #1 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__miter_baseIPfET_S1_(float* %7)
  %9 = load float*, float** %5, align 8
  %10 = call float* @_ZSt12__miter_baseIPfET_S1_(float* %9)
  %11 = load float*, float** %6, align 8
  %12 = call float* @_ZSt14__copy_move_a2ILb0EPfS0_ET1_T0_S2_S1_(float* %8, float* %10, float* %11)
  ret float* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr float* @_ZSt14__copy_move_a2ILb0EPfS0_ET1_T0_S2_S1_(float*, float*, float*) #1 comdat {
  %4 = load i32, i32* @x.619
  %5 = load i32, i32* @y.620
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca float*, align 8
  store float* %0, float** %12, align 8
  store float* %1, float** %13, align 8
  store float* %2, float** %14, align 8
  %15 = load float*, float** %12, align 8
  %16 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %15)
  %17 = load float*, float** %13, align 8
  %18 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %17)
  %19 = load float*, float** %14, align 8
  %20 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %19)
  %21 = call float* @_ZSt13__copy_move_aILb0EPfS0_ET1_T0_S2_S1_(float* %16, float* %18, float* %20)
  %22 = call float* @_ZSt12__niter_wrapIPfET_RKS1_S1_(float** dereferenceable(8) %14, float* %21)
  %23 = load i32, i32* @x.619
  %24 = load i32, i32* @y.620
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float* %22

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca float*, align 8
  %32 = alloca float*, align 8
  %33 = alloca float*, align 8
  store float* %0, float** %31, align 8
  store float* %1, float** %32, align 8
  store float* %2, float** %33, align 8
  %34 = load float*, float** %31, align 8
  %35 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %34)
  %36 = load float*, float** %32, align 8
  %37 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %36)
  %38 = load float*, float** %33, align 8
  %39 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %38)
  %40 = call float* @_ZSt13__copy_move_aILb0EPfS0_ET1_T0_S2_S1_(float* %35, float* %37, float* %39)
  %41 = call float* @_ZSt12__niter_wrapIPfET_RKS1_S1_(float** dereferenceable(8) %33, float* %40)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__miter_baseIPfET_S1_(float*) #0 comdat {
  %2 = alloca float*, align 8
  store float* %0, float** %2, align 8
  %3 = load float*, float** %2, align 8
  ret float* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt13__copy_move_aILb0EPfS0_ET1_T0_S2_S1_(float*, float*, float*) #0 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i8, align 1
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load float*, float** %4, align 8
  %9 = load float*, float** %5, align 8
  %10 = load float*, float** %6, align 8
  %11 = call float* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_(float* %8, float* %9, float* %10)
  ret float* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPN11DataOutBase5PatchILi4ELi4EEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca %"struct.DataOutBase::Patch"*, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store %"struct.DataOutBase::Patch"* %1, %"struct.DataOutBase::Patch"** %5, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %15, %3
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %9 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %5, align 8
  %10 = icmp ne %"struct.DataOutBase::Patch"* %8, %9
  br i1 %10, label %11, label %18

; <label>:11:                                     ; preds = %7
  %12 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %13 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %14 = call dereferenceable(600) %"struct.DataOutBase::Patch"* @_ZN11DataOutBase5PatchILi4ELi4EEaSERKS1_(%"struct.DataOutBase::Patch"* %13, %"struct.DataOutBase::Patch"* dereferenceable(600) %12)
  br label %15

; <label>:15:                                     ; preds = %11
  %16 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %17 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %16, i32 1
  store %"struct.DataOutBase::Patch"* %17, %"struct.DataOutBase::Patch"** %4, align 8
  br label %7

; <label>:18:                                     ; preds = %7
  %19 = load i32, i32* @x.625
  %20 = load i32, i32* @y.626
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.625
  %28 = load i32, i32* @y.626
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZSt20uninitialized_fill_nIPN11DataOutBase5PatchILi4ELi4EEEmS2_ET_S4_T0_RKT1_(%"struct.DataOutBase::Patch"*, i64, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat {
  %4 = alloca %"struct.DataOutBase::Patch"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.DataOutBase::Patch"*, align 8
  %7 = alloca i8, align 1
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %6, align 8
  %11 = call %"struct.DataOutBase::Patch"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN11DataOutBase5PatchILi4ELi4EEEmS4_EET_S6_T0_RKT1_(%"struct.DataOutBase::Patch"* %8, i64 %9, %"struct.DataOutBase::Patch"* dereferenceable(600) %10)
  ret %"struct.DataOutBase::Patch"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPN11DataOutBase5PatchILi4ELi4EEEmS4_EET_S6_T0_RKT1_(%"struct.DataOutBase::Patch"*, i64, %"struct.DataOutBase::Patch"* dereferenceable(600)) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.629
  %5 = load i32, i32* @y.630
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.DataOutBase::Patch"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.DataOutBase::Patch"*, align 8
  %15 = alloca %"struct.DataOutBase::Patch"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %14, align 8
  %18 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  store %"struct.DataOutBase::Patch"* %18, %"struct.DataOutBase::Patch"** %15, align 8
  %19 = load i32, i32* @x.629
  %20 = load i32, i32* @y.630
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %36, %originalBBpart2
  %28 = load i64, i64* %13, align 8
  %29 = icmp ugt i64 %28, 0
  br i1 %29, label %30, label %67

; <label>:30:                                     ; preds = %27
  %31 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  %32 = invoke %"struct.DataOutBase::Patch"* @_ZSt11__addressofIN11DataOutBase5PatchILi4ELi4EEEEPT_RS3_(%"struct.DataOutBase::Patch"* dereferenceable(600) %31)
          to label %33 unwind label %41

; <label>:33:                                     ; preds = %30
  %34 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %14, align 8
  invoke void @_ZSt10_ConstructIN11DataOutBase5PatchILi4ELi4EEES2_EvPT_RKT0_(%"struct.DataOutBase::Patch"* %32, %"struct.DataOutBase::Patch"* dereferenceable(600) %34)
          to label %35 unwind label %41

; <label>:35:                                     ; preds = %33
  br label %36

; <label>:36:                                     ; preds = %35
  %37 = load i64, i64* %13, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %13, align 8
  %39 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  %40 = getelementptr inbounds %"struct.DataOutBase::Patch", %"struct.DataOutBase::Patch"* %39, i32 1
  store %"struct.DataOutBase::Patch"* %40, %"struct.DataOutBase::Patch"** %15, align 8
  br label %27

; <label>:41:                                     ; preds = %33, %30
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %16, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %17, align 4
  br label %45

; <label>:45:                                     ; preds = %41
  %46 = load i32, i32* @x.629
  %47 = load i32, i32* @y.630
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i8*, i8** %16, align 8
  %55 = call i8* @__cxa_begin_catch(i8* %54) #11
  %56 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %57 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  %58 = load i32, i32* @x.629
  %59 = load i32, i32* @y.630
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt8_DestroyIPN11DataOutBase5PatchILi4ELi4EEEEvT_S4_(%"struct.DataOutBase::Patch"* %56, %"struct.DataOutBase::Patch"* %57)
          to label %66 unwind label %69

; <label>:66:                                     ; preds = %originalBBpart24
  invoke void @__cxa_rethrow() #14
          to label %115 unwind label %69

; <label>:67:                                     ; preds = %27
  %68 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  ret %"struct.DataOutBase::Patch"* %68

; <label>:69:                                     ; preds = %66, %originalBBpart24
  %70 = load i32, i32* @x.629
  %71 = load i32, i32* @y.630
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %16, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %17, align 4
  %81 = load i32, i32* @x.629
  %82 = load i32, i32* @y.630
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @__cxa_end_catch()
          to label %89 unwind label %112

; <label>:89:                                     ; preds = %originalBBpart28
  br label %91
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:91:                                     ; preds = %89
  %92 = load i32, i32* @x.629
  %93 = load i32, i32* @y.630
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i8*, i8** %16, align 8
  %101 = load i32, i32* %17, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  %104 = load i32, i32* @x.629
  %105 = load i32, i32* @y.630
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %103

; <label>:112:                                    ; preds = %originalBBpart28
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  call void @__clang_call_terminate(i8* %114) #9
  unreachable

; <label>:115:                                    ; preds = %66
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %116 = alloca %"struct.DataOutBase::Patch"*, align 8
  %117 = alloca i64, align 8
  %118 = alloca %"struct.DataOutBase::Patch"*, align 8
  %119 = alloca %"struct.DataOutBase::Patch"*, align 8
  %120 = alloca i8*
  %121 = alloca i32
  store %"struct.DataOutBase::Patch"* %0, %"struct.DataOutBase::Patch"** %116, align 8
  store i64 %1, i64* %117, align 8
  store %"struct.DataOutBase::Patch"* %2, %"struct.DataOutBase::Patch"** %118, align 8
  %122 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %116, align 8
  store %"struct.DataOutBase::Patch"* %122, %"struct.DataOutBase::Patch"** %119, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %123 = load i8*, i8** %16, align 8
  %124 = call i8* @__cxa_begin_catch(i8* %123) #11
  %125 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %126 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %16, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %17, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %130 = load i8*, i8** %16, align 8
  %131 = load i32, i32* %17, align 4
  %132 = insertvalue { i8*, i32 } undef, i8* %130, 0
  %133 = insertvalue { i8*, i32 } %132, i32 %131, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE8max_sizeEv(%"class.std::vector.68"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.68"*, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %2, align 8
  %3 = load %"class.std::vector.68"*, %"class.std::vector.68"** %2, align 8
  %4 = bitcast %"class.std::vector.68"* %3 to %"struct.std::_Vector_base.69"*
  %5 = call dereferenceable(1) %"class.std::allocator.70"* @_ZNKSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"* %4)
  %6 = call i64 @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.70"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE4sizeEv(%"class.std::vector.68"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.68"*, align 8
  store %"class.std::vector.68"* %0, %"class.std::vector.68"** %2, align 8
  %3 = load %"class.std::vector.68"*, %"class.std::vector.68"** %2, align 8
  %4 = bitcast %"class.std::vector.68"* %3 to %"struct.std::_Vector_base.69"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %7, align 8
  %9 = bitcast %"class.std::vector.68"* %3 to %"struct.std::_Vector_base.69"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data", %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"struct.DataOutBase::Patch"*, %"struct.DataOutBase::Patch"** %12, align 8
  %14 = ptrtoint %"struct.DataOutBase::Patch"* %8 to i64
  %15 = ptrtoint %"struct.DataOutBase::Patch"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 600
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.70"* dereferenceable(1)) #1 comdat align 2 {
  %2 = load i32, i32* @x.635
  %3 = load i32, i32* @y.636
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.70"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %10, align 8
  store i64 15372286728091293, i64* %11, align 8
  %13 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8max_sizeERKS4_(%"class.std::allocator.70"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.635
  %18 = load i32, i32* @y.636
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.70"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %25, align 8
  store i64 15372286728091293, i64* %26, align 8
  %28 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8max_sizeERKS4_(%"class.std::allocator.70"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.70"* @_ZNKSt12_Vector_baseIN11DataOutBase5PatchILi4ELi4EEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.69"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.69"*, align 8
  store %"struct.std::_Vector_base.69"* %0, %"struct.std::_Vector_base.69"** %2, align 8
  %3 = load %"struct.std::_Vector_base.69"*, %"struct.std::_Vector_base.69"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.69", %"struct.std::_Vector_base.69"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<DataOutBase::Patch<4, 4>, std::allocator<DataOutBase::Patch<4, 4> > >::_Vector_impl"* %4 to %"class.std::allocator.70"*
  ret %"class.std::allocator.70"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8max_sizeERKS4_(%"class.std::allocator.70"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.70"*, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %2, align 8
  %3 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %2, align 8
  %4 = bitcast %"class.std::allocator.70"* %3 to %"class.__gnu_cxx::new_allocator.71"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.71"* %4) #11
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.71"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.71"*, align 8
  store %"class.__gnu_cxx::new_allocator.71"* %0, %"class.__gnu_cxx::new_allocator.71"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.71"*, %"class.__gnu_cxx::new_allocator.71"** %2, align 8
  ret i64 15372286728091293
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11DataOutBase5PatchILi4ELi4EEEES3_E8allocateERS4_m(%"class.std::allocator.70"* dereferenceable(1), i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.643
  %4 = load i32, i32* @y.644
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.70"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %11, align 8
  %14 = bitcast %"class.std::allocator.70"* %13 to %"class.__gnu_cxx::new_allocator.71"*
  %15 = load i64, i64* %12, align 8
  %16 = call %"struct.DataOutBase::Patch"* @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.71"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.643
  %18 = load i32, i32* @y.644
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.DataOutBase::Patch"* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.70"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.70"* %0, %"class.std::allocator.70"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.70"*, %"class.std::allocator.70"** %25, align 8
  %28 = bitcast %"class.std::allocator.70"* %27 to %"class.__gnu_cxx::new_allocator.71"*
  %29 = load i64, i64* %26, align 8
  %30 = call %"struct.DataOutBase::Patch"* @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.71"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.DataOutBase::Patch"* @_ZN9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.71"*, i64, i8*) #1 comdat align 2 {
  %4 = load i32, i32* @x.645
  %5 = load i32, i32* @y.646
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.71"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.71"* %0, %"class.__gnu_cxx::new_allocator.71"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.71"*, %"class.__gnu_cxx::new_allocator.71"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.71"* %15) #11
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.645
  %20 = load i32, i32* @y.646
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %44

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.645
  %29 = load i32, i32* @y.646
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  call void @_ZSt17__throw_bad_allocv() #14
  %36 = load i32, i32* @x.645
  %37 = load i32, i32* @y.646
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i64, i64* %13, align 8
  %46 = mul i64 %45, 600
  %47 = call i8* @_Znwm(i64 %46)
  %48 = bitcast i8* %47 to %"struct.DataOutBase::Patch"*
  ret %"struct.DataOutBase::Patch"* %48

originalBBalteredBB:                              ; preds = %originalBB, %3
  %49 = alloca %"class.__gnu_cxx::new_allocator.71"*, align 8
  %50 = alloca i64, align 8
  %51 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.71"* %0, %"class.__gnu_cxx::new_allocator.71"** %49, align 8
  store i64 %1, i64* %50, align 8
  store i8* %2, i8** %51, align 8
  %52 = load %"class.__gnu_cxx::new_allocator.71"*, %"class.__gnu_cxx::new_allocator.71"** %49, align 8
  %53 = load i64, i64* %50, align 8
  %54 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11DataOutBase5PatchILi4ELi4EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.71"* %52) #11
  %55 = icmp ugt i64 %53, %54
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  call void @_ZSt17__throw_bad_allocv() #14
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.TriaIterator* @_ZN12TriaIteratorILi3E15DoFCellAccessorILi3EEEppEv(%class.TriaIterator*) #1 comdat align 2 {
  %2 = alloca %class.TriaIterator*, align 8
  %3 = alloca %class.TriaIterator*, align 8
  store %class.TriaIterator* %0, %class.TriaIterator** %3, align 8
  %4 = load %class.TriaIterator*, %class.TriaIterator** %3, align 8
  br label %5

; <label>:5:                                      ; preds = %53, %1
  %6 = load i32, i32* @x.647
  %7 = load i32, i32* @y.648
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = bitcast %class.TriaIterator* %4 to %class.TriaRawIterator*
  %15 = call dereferenceable(24) %class.TriaRawIterator* @_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEppEv(%class.TriaRawIterator* %14)
  %16 = bitcast %class.TriaIterator* %4 to %class.TriaRawIterator*
  %17 = call i32 @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEE5stateEv(%class.TriaRawIterator* %16)
  %18 = icmp eq i32 %17, 0
  %19 = load i32, i32* @x.647
  %20 = load i32, i32* @y.648
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %54

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.647
  %29 = load i32, i32* @y.648
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = bitcast %class.TriaIterator* %4 to %class.TriaRawIterator*
  %37 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %36, i32 0, i32 0
  %38 = bitcast %class.DoFCellAccessor* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to %class.TriaObjectAccessor*
  %41 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE4usedEv(%class.TriaObjectAccessor* %40)
  %42 = zext i1 %41 to i32
  %43 = icmp eq i32 %42, 1
  %44 = load i32, i32* @x.647
  %45 = load i32, i32* @y.648
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %43, label %52, label %53

; <label>:52:                                     ; preds = %originalBBpart24
  store %class.TriaIterator* %4, %class.TriaIterator** %2, align 8
  br label %55

; <label>:53:                                     ; preds = %originalBBpart24
  br label %5

; <label>:54:                                     ; preds = %originalBBpart2
  store %class.TriaIterator* %4, %class.TriaIterator** %2, align 8
  br label %55

; <label>:55:                                     ; preds = %54, %52
  %56 = load %class.TriaIterator*, %class.TriaIterator** %2, align 8
  ret %class.TriaIterator* %56

originalBBalteredBB:                              ; preds = %originalBB, %5
  %57 = bitcast %class.TriaIterator* %4 to %class.TriaRawIterator*
  %58 = call dereferenceable(24) %class.TriaRawIterator* @_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEppEv(%class.TriaRawIterator* %57)
  %59 = bitcast %class.TriaIterator* %4 to %class.TriaRawIterator*
  %60 = call i32 @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEE5stateEv(%class.TriaRawIterator* %59)
  %61 = icmp eq i32 %60, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %62 = bitcast %class.TriaIterator* %4 to %class.TriaRawIterator*
  %63 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %62, i32 0, i32 0
  %64 = bitcast %class.DoFCellAccessor* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 8
  %66 = bitcast i8* %65 to %class.TriaObjectAccessor*
  %67 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE4usedEv(%class.TriaObjectAccessor* %66)
  %68 = zext i1 %67 to i32
  %69 = icmp eq i32 %68, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEE5stateEv(%class.TriaRawIterator*) #1 comdat align 2 {
  %2 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %2, align 8
  %3 = load %class.TriaRawIterator*, %class.TriaRawIterator** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %3, i32 0, i32 0
  %5 = bitcast %class.DoFCellAccessor* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to %class.TriaAccessor*
  %8 = call i32 @_ZNK12TriaAccessorILi3EE5stateEv(%class.TriaAccessor* %7)
  ret i32 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE12has_childrenEv(%class.TriaObjectAccessor*) #1 comdat align 2 {
  %2 = alloca %class.TriaObjectAccessor*, align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %2, align 8
  %3 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %2, align 8
  %4 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %5 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %4, i32 0, i32 2
  %6 = load %class.Triangulation*, %class.Triangulation** %5, align 8
  %7 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %6, i32 0, i32 1
  %8 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %9 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %7, i64 %11)
  %13 = load %class.TriangulationLevel*, %class.TriangulationLevel** %12, align 8
  %14 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %13, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %14, i32 0, i32 1
  %16 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %17 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %15, i64 %19)
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, -1
  ret i1 %22
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.TriaRawIterator* @_ZN15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEppEv(%class.TriaRawIterator*) #1 comdat align 2 {
  %2 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %2, align 8
  %3 = load %class.TriaRawIterator*, %class.TriaRawIterator** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %3, i32 0, i32 0
  %5 = bitcast %class.DoFCellAccessor* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to %class.TriaObjectAccessor*
  call void @_ZN18TriaObjectAccessorILi3ELi3EEppEv(%class.TriaObjectAccessor* %7)
  ret %class.TriaRawIterator* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE4usedEv(%class.TriaObjectAccessor*) #1 comdat align 2 {
  %2 = alloca %class.TriaObjectAccessor*, align 8
  %3 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %2, align 8
  %4 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %2, align 8
  %5 = bitcast %class.TriaObjectAccessor* %4 to %class.TriaAccessor*
  %6 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %5, i32 0, i32 2
  %7 = load %class.Triangulation*, %class.Triangulation** %6, align 8
  %8 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %7, i32 0, i32 1
  %9 = bitcast %class.TriaObjectAccessor* %4 to %class.TriaAccessor*
  %10 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %8, i64 %12)
  %14 = load %class.TriangulationLevel*, %class.TriangulationLevel** %13, align 8
  %15 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %14, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %15, i32 0, i32 2
  %17 = bitcast %class.TriaObjectAccessor* %4 to %class.TriaAccessor*
  %18 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.4"* %16, i64 %20)
  %22 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %22, i32 0, i32 0
  %24 = extractvalue { i64*, i64 } %21, 0
  store i64* %24, i64** %23, align 8
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %22, i32 0, i32 1
  %26 = extractvalue { i64*, i64 } %21, 1
  store i64 %26, i64* %25, align 8
  %27 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %3)
  ret i1 %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18TriaObjectAccessorILi3ELi3EEppEv(%class.TriaObjectAccessor*) #1 comdat align 2 {
  %2 = alloca %class.TriaObjectAccessor*, align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %2, align 8
  %3 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %2, align 8
  %4 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %5 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  br label %8

; <label>:8:                                      ; preds = %originalBBpart213, %1
  %9 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %10 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %13 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %12, i32 0, i32 2
  %14 = load %class.Triangulation*, %class.Triangulation** %13, align 8
  %15 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %14, i32 0, i32 1
  %16 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %17 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %15, i64 %19)
  %21 = load %class.TriangulationLevel*, %class.TriangulationLevel** %20, align 8
  %22 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %21, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %22, i32 0, i32 0
  %24 = call i64 @_ZNKSt6vectorI10HexahedronSaIS0_EE4sizeEv(%"class.std::vector.43"* %23)
  %25 = trunc i64 %24 to i32
  %26 = icmp sge i32 %11, %25
  br i1 %26, label %27, label %82

; <label>:27:                                     ; preds = %8
  %28 = load i32, i32* @x.657
  %29 = load i32, i32* @y.658
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %27, %originalBBalteredBB
  %36 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %37 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 8
  %40 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %41 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %40, i32 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %43 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %46 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %45, i32 0, i32 2
  %47 = load %class.Triangulation*, %class.Triangulation** %46, align 8
  %48 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %47, i32 0, i32 1
  %49 = call i64 @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector"* %48)
  %50 = trunc i64 %49 to i32
  %51 = icmp sge i32 %44, %50
  %52 = load i32, i32* @x.657
  %53 = load i32, i32* @y.658
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %51, label %60, label %65

; <label>:60:                                     ; preds = %originalBBpart2
  %61 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %62 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %61, i32 0, i32 1
  store i32 -1, i32* %62, align 4
  %63 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %64 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %63, i32 0, i32 0
  store i32 -1, i32* %64, align 8
  br label %82

; <label>:65:                                     ; preds = %originalBBpart2
  %66 = load i32, i32* @x.657
  %67 = load i32, i32* @y.658
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %65, %originalBB11alteredBB
  %74 = load i32, i32* @x.657
  %75 = load i32, i32* @y.658
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %8

; <label>:82:                                     ; preds = %60, %8
  %83 = load i32, i32* @x.657
  %84 = load i32, i32* @y.658
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %82, %originalBB15alteredBB
  %91 = load i32, i32* @x.657
  %92 = load i32, i32* @y.658
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %27
  %99 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %100 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %99, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %_ = sub i32 0, %101
  %gen = add i32 %_, 1
  %_1 = sub i32 %101, 1
  %gen2 = mul i32 %_1, 1
  %_3 = sub i32 %101, 1
  %gen4 = mul i32 %_3, 1
  %_5 = shl i32 %101, 1
  %_6 = sub i32 0, %101
  %gen7 = add i32 %_6, 1
  %_8 = sub i32 %101, 1
  %gen9 = mul i32 %_8, 1
  %_10 = shl i32 %101, 1
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %100, align 8
  %103 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %104 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %103, i32 0, i32 1
  store i32 0, i32* %104, align 4
  %105 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %106 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = bitcast %class.TriaObjectAccessor* %3 to %class.TriaAccessor*
  %109 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %108, i32 0, i32 2
  %110 = load %class.Triangulation*, %class.Triangulation** %109, align 8
  %111 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %110, i32 0, i32 1
  %112 = call i64 @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector"* %111)
  %113 = trunc i64 %112 to i32
  %114 = icmp sge i32 %107, %113
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %65
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %82
  br label %originalBB15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.TriangulationLevel*, %class.TriangulationLevel** %10, i64 %11
  ret %class.TriangulationLevel** %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI10HexahedronSaIS0_EE4sizeEv(%"class.std::vector.43"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.43"*, align 8
  store %"class.std::vector.43"* %0, %"class.std::vector.43"** %2, align 8
  %3 = load %"class.std::vector.43"*, %"class.std::vector.43"** %2, align 8
  %4 = bitcast %"class.std::vector.43"* %3 to %"struct.std::_Vector_base.44"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data", %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Hexahedron*, %class.Hexahedron** %7, align 8
  %9 = bitcast %"class.std::vector.43"* %3 to %"struct.std::_Vector_base.44"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data", %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Hexahedron*, %class.Hexahedron** %12, align 8
  %14 = ptrtoint %class.Hexahedron* %8 to i64
  %15 = ptrtoint %class.Hexahedron* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %7, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %12, align 8
  %14 = ptrtoint %class.TriangulationLevel** %8 to i64
  %15 = ptrtoint %class.TriangulationLevel** %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.4"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference", align 8
  %4 = alloca %"class.std::vector.4"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.4"* %0, %"class.std::vector.4"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.4"*, %"class.std::vector.4"** %4, align 8
  %8 = bitcast %"class.std::vector.4"* %7 to %"struct.std::_Bvector_base"*
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %5, align 8
  %16 = udiv i64 %15, 64
  %17 = getelementptr inbounds i64, i64* %14, i64 %16
  %18 = load i64, i64* %5, align 8
  %19 = urem i64 %18, 64
  %20 = trunc i64 %19 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %6, i64* %17, i32 %20)
  %21 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %22 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %22, i32 0, i32 0
  %24 = extractvalue { i64*, i64 } %21, 0
  store i64* %24, i64** %23, align 8
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %22, i32 0, i32 1
  %26 = extractvalue { i64*, i64 } %21, 1
  store i64 %26, i64* %25, align 8
  %27 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %28 = load { i64*, i64 }, { i64*, i64 }* %27, align 8
  ret { i64*, i64 } %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %2, align 8
  %3 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %6, %8
  %10 = icmp ne i64 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  ret i1 %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.671
  %3 = load i32, i32* @y.672
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_reference", align 8
  %11 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %11, align 8
  %12 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11, align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to %"struct.std::_Bit_iterator_base"*
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %13, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %12 to %"struct.std::_Bit_iterator_base"*
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = shl i64 1, %19
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %10, i64* %15, i64 %20)
  %21 = bitcast %"struct.std::_Bit_reference"* %10 to { i64*, i64 }*
  %22 = load { i64*, i64 }, { i64*, i64 }* %21, align 8
  %23 = load i32, i32* @x.671
  %24 = load i32, i32* @y.672
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i64 } %22

originalBBalteredBB:                              ; preds = %originalBB, %1
  %31 = alloca %"struct.std::_Bit_reference", align 8
  %32 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %32, align 8
  %33 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %32, align 8
  %34 = bitcast %"struct.std::_Bit_iterator"* %33 to %"struct.std::_Bit_iterator_base"*
  %35 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %34, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = bitcast %"struct.std::_Bit_iterator"* %33 to %"struct.std::_Bit_iterator_base"*
  %38 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %_ = shl i64 1, %40
  %41 = shl i64 1, %40
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %31, i64* %36, i64 %41)
  %42 = bitcast %"struct.std::_Bit_reference"* %31 to { i64*, i64 }*
  %43 = load { i64*, i64 }, { i64*, i64 }* %42, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator_base"* %7 to %"struct.std::iterator"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 0
  %10 = load i64*, i64** %5, align 8
  store i64* %10, i64** %9, align 8
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 1
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK12TriaAccessorILi3EE5stateEv(%class.TriaAccessor*) #0 comdat align 2 {
  %2 = load i32, i32* @x.677
  %3 = load i32, i32* @y.678
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %11, align 8
  %12 = load %class.TriaAccessor*, %class.TriaAccessor** %11, align 8
  %13 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp sge i32 %14, 0
  %16 = load i32, i32* @x.677
  %17 = load i32, i32* @y.678
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %29

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %12, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp sge i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %24
  store i32 0, i32* %10, align 4
  br label %55

; <label>:29:                                     ; preds = %24, %originalBBpart2
  %30 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %12, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %38

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %12, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %33
  store i32 1, i32* %10, align 4
  br label %55

; <label>:38:                                     ; preds = %33, %29
  %39 = load i32, i32* @x.677
  %40 = load i32, i32* @y.678
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  store i32 2, i32* %10, align 4
  %47 = load i32, i32* @x.677
  %48 = load i32, i32* @y.678
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %55

; <label>:55:                                     ; preds = %originalBBpart24, %37, %28
  %56 = load i32, i32* @x.677
  %57 = load i32, i32* @y.678
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* %10, align 4
  %65 = load i32, i32* @x.677
  %66 = load i32, i32* @y.678
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %64

originalBBalteredBB:                              ; preds = %originalBB, %1
  %73 = alloca i32, align 4
  %74 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %74, align 8
  %75 = load %class.TriaAccessor*, %class.TriaAccessor** %74, align 8
  %76 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp sge i32 %77, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  store i32 2, i32* %10, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %79 = load i32, i32* %10, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.679
  %4 = load i32, i32* @y.680
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.23"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.23"*, %"class.std::vector.23"** %11, align 8
  %14 = bitcast %"class.std::vector.23"* %13 to %"struct.std::_Vector_base.24"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = load i32, i32* @x.679
  %22 = load i32, i32* @y.680
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.23"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.23"*, %"class.std::vector.23"** %29, align 8
  %32 = bitcast %"class.std::vector.23"* %31 to %"struct.std::_Vector_base.24"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.74"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.681
  %3 = load i32, i32* @y.682
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %10, align 8
  %11 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %12)
  %13 = load i32, i32* @x.681
  %14 = load i32, i32* @y.682
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %21, align 8
  %22 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %22, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.683
  %3 = load i32, i32* @y.684
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %10, align 8
  %13 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %10, align 8
  %14 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"class.std::allocator.75"*
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.75"* %14) #11
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = load i32, i32* @x.683
  %17 = load i32, i32* @y.684
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15)
          to label %24 unwind label %41

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.683
  %26 = load i32, i32* @y.684
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i32, i32* @x.683
  %34 = load i32, i32* @y.684
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* @x.683
  %43 = load i32, i32* @y.684
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %41, %originalBB6alteredBB
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %11, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %12, align 4
  %53 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"class.std::allocator.75"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.75"* %53) #11
  %54 = load i32, i32* @x.683
  %55 = load i32, i32* @y.684
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %62

; <label>:62:                                     ; preds = %originalBBpart28
  %63 = load i32, i32* @x.683
  %64 = load i32, i32* @y.684
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %62, %originalBB10alteredBB
  %71 = load i8*, i8** %11, align 8
  %72 = load i32, i32* %12, align 4
  %73 = insertvalue { i8*, i32 } undef, i8* %71, 0
  %74 = insertvalue { i8*, i32 } %73, i32 %72, 1
  %75 = load i32, i32* @x.683
  %76 = load i32, i32* @y.684
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %74

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %84 = alloca i8*
  %85 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %83, align 8
  %86 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %83, align 8
  %87 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %86 to %"class.std::allocator.75"*
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.75"* %87) #11
  %88 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %86 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %41
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %11, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %12, align 4
  %92 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"class.std::allocator.75"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.75"* %92) #11
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %93 = load i8*, i8** %11, align 8
  %94 = load i32, i32* %12, align 4
  %95 = insertvalue { i8*, i32 } undef, i8* %93, 0
  %96 = insertvalue { i8*, i32 } %95, i32 %94, 1
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2Ev(%"class.std::allocator.75"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %2, align 8
  %3 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %2, align 8
  %4 = bitcast %"class.std::allocator.75"* %3 to %"class.__gnu_cxx::new_allocator.76"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.76"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.76"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.687
  %3 = load i32, i32* @y.688
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %12 = load i32, i32* @x.687
  %13 = load i32, i32* @y.688
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EEC2Ev(%"struct.std::_Vector_base.79"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.689
  %3 = load i32, i32* @y.690
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.79"*, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %10, align 8
  %11 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %12)
  %13 = load i32, i32* @x.689
  %14 = load i32, i32* @y.690
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base.79"*, align 8
  store %"struct.std::_Vector_base.79"* %0, %"struct.std::_Vector_base.79"** %21, align 8
  %22 = load %"struct.std::_Vector_base.79"*, %"struct.std::_Vector_base.79"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.79", %"struct.std::_Vector_base.79"* %22, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %5 to %"class.std::allocator.80"*
  call void @_ZNSaI6VectorIdEEC2Ev(%"class.std::allocator.80"* %6) #11
  %7 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseI6VectorIdESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %5 to %"class.std::allocator.80"*
  call void @_ZNSaI6VectorIdEED2Ev(%"class.std::allocator.80"* %13) #11
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* %4, align 4
  %17 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6VectorIdEEC2Ev(%"class.std::allocator.80"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.80"*, align 8
  store %"class.std::allocator.80"* %0, %"class.std::allocator.80"** %2, align 8
  %3 = load %"class.std::allocator.80"*, %"class.std::allocator.80"** %2, align 8
  %4 = bitcast %"class.std::allocator.80"* %3 to %"class.__gnu_cxx::new_allocator.81"*
  call void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEEC2Ev(%"class.__gnu_cxx::new_allocator.81"* %4) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6VectorIdEEC2Ev(%"class.__gnu_cxx::new_allocator.81"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.81"*, align 8
  store %"class.__gnu_cxx::new_allocator.81"* %0, %"class.__gnu_cxx::new_allocator.81"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.81"*, %"class.__gnu_cxx::new_allocator.81"** %2, align 8
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { builtin }
attributes #14 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
