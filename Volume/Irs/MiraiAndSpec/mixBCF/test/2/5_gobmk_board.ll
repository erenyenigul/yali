; ModuleID = 'host/ir_bcf/gobmk_board.ll'
source_filename = "board.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Hash_data = type { [1 x i64] }
%struct.SGFTree_t = type { %struct.SGFNode_t*, %struct.SGFNode_t* }
%struct.SGFNode_t = type { %struct.SGFProperty_t*, %struct.SGFNode_t*, %struct.SGFNode_t*, %struct.SGFNode_t* }
%struct.SGFProperty_t = type { %struct.SGFProperty_t*, i16, i8* }
%struct.stats_data = type { i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.string_data = type { i32, i32, i32, i32, [20 x i32], i32, [160 x i32], i32 }
%struct.change_stack_entry = type { i32*, i32 }
%struct.vertex_stack_entry = type { i8*, i32 }
%struct.board_state = type { i32, [421 x i8], i32, i32, i32, [421 x i8], i32, i32, i32, [500 x i32], [500 x i32], i32, float, i32 }

@deltai = global [8 x i32] [i32 1, i32 0, i32 -1, i32 0, i32 1, i32 -1, i32 -1, i32 1], align 16
@deltaj = global [8 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 -1, i32 -1, i32 1, i32 1], align 16
@delta = global [8 x i32] [i32 20, i32 -1, i32 -20, i32 1, i32 19, i32 -21, i32 -19, i32 21], align 16
@stackp = external global i32, align 4
@.str = private unnamed_addr constant [8 x i8] c"board.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"stackp == 0\00", align 1
@board_size = external global i32, align 4
@board = external global [421 x i8], align 16
@initial_board = external global [421 x i8], align 16
@board_ko_pos = external global i32, align 4
@white_captured = external global i32, align 4
@black_captured = external global i32, align 4
@initial_board_ko_pos = external global i32, align 4
@initial_white_captured = external global i32, align 4
@initial_black_captured = external global i32, align 4
@move_history_pointer = external global i32, align 4
@move_history_color = external global [500 x i32], align 16
@move_history_pos = external global [500 x i32], align 16
@komi = external global float, align 4
@movenum = external global i32, align 4
@hashdata = external global %struct.Hash_data, align 8
@.str.2 = private unnamed_addr constant [35 x i8] c"board_size > 0 && board_size <= 19\00", align 1
@sgf_dumptree = external global %struct.SGFTree_t*, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"%s (variation %d, hash %lx, komaster %s:%s)\00", align 1
@count_variations = external global i32, align 4
@.str.5 = private unnamed_addr constant [28 x i8] c"%s (variation %d, hash %lx)\00", align 1
@.str.6 = private unnamed_addr constant [50 x i8] c"%s at %s (variation %d, hash %lx, komaster %s:%s)\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"%s at %s (variation %d, hash %lx)\00", align 1
@stats = external global %struct.stats_data, align 4
@.str.8 = private unnamed_addr constant [55 x i8] c"%s in semeai %s-%s (variation %d, value %d, owl_phase)\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"tryko: %s (variation %d, %lx, komaster %s:%s)\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"tryko: %s (variation %d, %lx)\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"tenuki (ko threat)\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"tenuki (answers ko threat)\00", align 1
@hashdata_stack = internal global [361 x %struct.Hash_data] zeroinitializer, align 16
@.str.13 = private unnamed_addr constant [21 x i8] c"(next variation: %d)\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"%o%s:%1m \00", align 1
@move_color = internal global [361 x i32] zeroinitializer, align 16
@.str.15 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@stack = internal global [361 x i32] zeroinitializer, align 16
@.str.17 = private unnamed_addr constant [18 x i8] c"%o (variation %d)\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"%o\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str.19 = private unnamed_addr constant [15 x i8] c"ON_BOARD1(pos)\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"board[pos] == EMPTY\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"IS_STONE(board[pos])\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"color == WHITE || color == BLACK\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"pos == PASS_MOVE || ON_BOARD1(pos)\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"pos == PASS_MOVE || board[pos] == EMPTY\00", align 1
@.str.25 = private unnamed_addr constant [62 x i8] c"gnugo: Truncating search. This is beyond my reading ability!\0A\00", align 1
@allow_suicide = external global i32, align 4
@string = internal global [240 x %struct.string_data] zeroinitializer, align 16
@string_number = internal global [400 x i32] zeroinitializer, align 16
@.str.26 = private unnamed_addr constant [21 x i8] c"IS_STONE(board[str])\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"libs != NULL\00", align 1
@liberty_mark = internal global i32 0, align 4
@ml = internal global [400 x i32] zeroinitializer, align 16
@next_stone = internal global [400 x i32] zeroinitializer, align 16
@.str.28 = private unnamed_addr constant [16 x i8] c"IS_STONE(color)\00", align 1
@string_mark = internal global i32 0, align 4
@.str.29 = private unnamed_addr constant [16 x i8] c"ON_BOARD1(str1)\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"ON_BOARD1(str2)\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"IS_STONE(board[str1])\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"IS_STONE(board[str2])\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"ON_BOARD1(str)\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"k < stackp\00", align 1
@stones_on_board.stone_count_for_position = internal global i32 -1, align 4
@stones_on_board.white_stones = internal global i32 0, align 4
@stones_on_board.black_stones = internal global i32 0, align 4
@position_number = external global i32, align 4
@trymove_counter = internal global i32 0, align 4
@.str.35 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"gray\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"gray_white\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"gray_black\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"weak_ko\00", align 1
@komaster_to_string.b = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0)], align 16
@.str.42 = private unnamed_addr constant [31 x i8] c"komaster >= 0 && komaster <= 6\00", align 1
@.str.43 = private unnamed_addr constant [25 x i8] c"color == 2 || color == 1\00", align 1
@shadow = external global [400 x i8], align 16
@verbose = external global i32, align 4
@change_stack_pointer = internal global %struct.change_stack_entry* null, align 8
@vertex_stack_pointer = internal global %struct.vertex_stack_entry* null, align 8
@.str.44 = private unnamed_addr constant [7 x i8] c"s >= 0\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"done\00", align 1
@next_string = internal global i32 0, align 4
@.str.46 = private unnamed_addr constant [22 x i8] c"s < (2 * 19 * 19 / 3)\00", align 1
@change_stack = internal global [28880 x %struct.change_stack_entry] zeroinitializer, align 16
@.str.47 = private unnamed_addr constant [52 x i8] c"change_stack_pointer - change_stack <= 80 * 19 * 19\00", align 1
@vertex_stack = internal global [28880 x %struct.vertex_stack_entry] zeroinitializer, align 16
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define void @store_board(%struct.board_state*) #0 {
  %2 = alloca %struct.board_state*, align 8
  %3 = alloca i32, align 4
  store %struct.board_state* %0, %struct.board_state** %2, align 8
  %4 = load i32, i32* @stackp, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  br label %8

; <label>:7:                                      ; preds = %1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 327, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 -1, i32 -1)
  br label %8

; <label>:8:                                      ; preds = %7, %6
  %9 = load i32, i32* @board_size, align 4
  %10 = load %struct.board_state*, %struct.board_state** %2, align 8
  %11 = getelementptr inbounds %struct.board_state, %struct.board_state* %10, i32 0, i32 0
  store i32 %9, i32* %11, align 4
  %12 = load %struct.board_state*, %struct.board_state** %2, align 8
  %13 = getelementptr inbounds %struct.board_state, %struct.board_state* %12, i32 0, i32 1
  %14 = getelementptr inbounds [421 x i8], [421 x i8]* %13, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i64 421, i32 4, i1 false)
  %15 = load %struct.board_state*, %struct.board_state** %2, align 8
  %16 = getelementptr inbounds %struct.board_state, %struct.board_state* %15, i32 0, i32 5
  %17 = getelementptr inbounds [421 x i8], [421 x i8]* %16, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i64 421, i32 4, i1 false)
  %18 = load i32, i32* @board_ko_pos, align 4
  %19 = load %struct.board_state*, %struct.board_state** %2, align 8
  %20 = getelementptr inbounds %struct.board_state, %struct.board_state* %19, i32 0, i32 2
  store i32 %18, i32* %20, align 4
  %21 = load i32, i32* @white_captured, align 4
  %22 = load %struct.board_state*, %struct.board_state** %2, align 8
  %23 = getelementptr inbounds %struct.board_state, %struct.board_state* %22, i32 0, i32 4
  store i32 %21, i32* %23, align 4
  %24 = load i32, i32* @black_captured, align 4
  %25 = load %struct.board_state*, %struct.board_state** %2, align 8
  %26 = getelementptr inbounds %struct.board_state, %struct.board_state* %25, i32 0, i32 3
  store i32 %24, i32* %26, align 4
  %27 = load i32, i32* @initial_board_ko_pos, align 4
  %28 = load %struct.board_state*, %struct.board_state** %2, align 8
  %29 = getelementptr inbounds %struct.board_state, %struct.board_state* %28, i32 0, i32 6
  store i32 %27, i32* %29, align 4
  %30 = load i32, i32* @initial_white_captured, align 4
  %31 = load %struct.board_state*, %struct.board_state** %2, align 8
  %32 = getelementptr inbounds %struct.board_state, %struct.board_state* %31, i32 0, i32 7
  store i32 %30, i32* %32, align 4
  %33 = load i32, i32* @initial_black_captured, align 4
  %34 = load %struct.board_state*, %struct.board_state** %2, align 8
  %35 = getelementptr inbounds %struct.board_state, %struct.board_state* %34, i32 0, i32 8
  store i32 %33, i32* %35, align 4
  %36 = load i32, i32* @move_history_pointer, align 4
  %37 = load %struct.board_state*, %struct.board_state** %2, align 8
  %38 = getelementptr inbounds %struct.board_state, %struct.board_state* %37, i32 0, i32 11
  store i32 %36, i32* %38, align 4
  store i32 0, i32* %3, align 4
  br label %39

; <label>:39:                                     ; preds = %78, %8
  %40 = load i32, i32* @x
  %41 = load i32, i32* @y
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = load i32, i32* %3, align 4
  %49 = load i32, i32* @move_history_pointer, align 4
  %50 = icmp slt i32 %48, %49
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %50, label %59, label %81

; <label>:59:                                     ; preds = %originalBBpart2
  %60 = load i32, i32* %3, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = load %struct.board_state*, %struct.board_state** %2, align 8
  %65 = getelementptr inbounds %struct.board_state, %struct.board_state* %64, i32 0, i32 9
  %66 = load i32, i32* %3, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [500 x i32], [500 x i32]* %65, i64 0, i64 %67
  store i32 %63, i32* %68, align 4
  %69 = load i32, i32* %3, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = load %struct.board_state*, %struct.board_state** %2, align 8
  %74 = getelementptr inbounds %struct.board_state, %struct.board_state* %73, i32 0, i32 10
  %75 = load i32, i32* %3, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [500 x i32], [500 x i32]* %74, i64 0, i64 %76
  store i32 %72, i32* %77, align 4
  br label %78

; <label>:78:                                     ; preds = %59
  %79 = load i32, i32* %3, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %3, align 4
  br label %39

; <label>:81:                                     ; preds = %originalBBpart2
  %82 = load i32, i32* @x
  %83 = load i32, i32* @y
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %81
  %90 = load float, float* @komi, align 4
  %91 = load %struct.board_state*, %struct.board_state** %2, align 8
  %92 = getelementptr inbounds %struct.board_state, %struct.board_state* %91, i32 0, i32 12
  store float %90, float* %92, align 4
  %93 = load i32, i32* @movenum, align 4
  %94 = load %struct.board_state*, %struct.board_state** %2, align 8
  %95 = getelementptr inbounds %struct.board_state, %struct.board_state* %94, i32 0, i32 13
  store i32 %93, i32* %95, align 4
  %96 = load i32, i32* @x
  %97 = load i32, i32* @y
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %39
  %104 = load i32, i32* %3, align 4
  %105 = load i32, i32* @move_history_pointer, align 4
  %106 = icmp slt i32 %104, %105
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %81
  %107 = load float, float* @komi, align 4
  %108 = load %struct.board_state*, %struct.board_state** %2, align 8
  %109 = getelementptr inbounds %struct.board_state, %struct.board_state* %108, i32 0, i32 12
  store float %107, float* %109, align 4
  %110 = load i32, i32* @movenum, align 4
  %111 = load %struct.board_state*, %struct.board_state** %2, align 8
  %112 = getelementptr inbounds %struct.board_state, %struct.board_state* %111, i32 0, i32 13
  store i32 %110, i32* %112, align 4
  br label %originalBB1
}

declare void @abortgo(i8*, i32, i8*, i32, i32) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: noinline nounwind uwtable
define void @restore_board(%struct.board_state*) #0 {
  %2 = alloca %struct.board_state*, align 8
  %3 = alloca i32, align 4
  store %struct.board_state* %0, %struct.board_state** %2, align 8
  %4 = load i32, i32* @stackp, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  br label %8

; <label>:7:                                      ; preds = %1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 362, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 -1, i32 -1)
  br label %8

; <label>:8:                                      ; preds = %7, %6
  %9 = load i32, i32* @x.1
  %10 = load i32, i32* @y.2
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  %17 = load %struct.board_state*, %struct.board_state** %2, align 8
  %18 = getelementptr inbounds %struct.board_state, %struct.board_state* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* @board_size, align 4
  %20 = load %struct.board_state*, %struct.board_state** %2, align 8
  %21 = getelementptr inbounds %struct.board_state, %struct.board_state* %20, i32 0, i32 1
  %22 = getelementptr inbounds [421 x i8], [421 x i8]* %21, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i8* %22, i64 421, i32 4, i1 false)
  %23 = load %struct.board_state*, %struct.board_state** %2, align 8
  %24 = getelementptr inbounds %struct.board_state, %struct.board_state* %23, i32 0, i32 5
  %25 = getelementptr inbounds [421 x i8], [421 x i8]* %24, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i8* %25, i64 421, i32 4, i1 false)
  %26 = load %struct.board_state*, %struct.board_state** %2, align 8
  %27 = getelementptr inbounds %struct.board_state, %struct.board_state* %26, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* @board_ko_pos, align 4
  %29 = load %struct.board_state*, %struct.board_state** %2, align 8
  %30 = getelementptr inbounds %struct.board_state, %struct.board_state* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* @white_captured, align 4
  %32 = load %struct.board_state*, %struct.board_state** %2, align 8
  %33 = getelementptr inbounds %struct.board_state, %struct.board_state* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* @black_captured, align 4
  %35 = load %struct.board_state*, %struct.board_state** %2, align 8
  %36 = getelementptr inbounds %struct.board_state, %struct.board_state* %35, i32 0, i32 6
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* @initial_board_ko_pos, align 4
  %38 = load %struct.board_state*, %struct.board_state** %2, align 8
  %39 = getelementptr inbounds %struct.board_state, %struct.board_state* %38, i32 0, i32 7
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* @initial_white_captured, align 4
  %41 = load %struct.board_state*, %struct.board_state** %2, align 8
  %42 = getelementptr inbounds %struct.board_state, %struct.board_state* %41, i32 0, i32 8
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* @initial_black_captured, align 4
  %44 = load %struct.board_state*, %struct.board_state** %2, align 8
  %45 = getelementptr inbounds %struct.board_state, %struct.board_state* %44, i32 0, i32 11
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* @move_history_pointer, align 4
  store i32 0, i32* %3, align 4
  %47 = load i32, i32* @x.1
  %48 = load i32, i32* @y.2
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %55

; <label>:55:                                     ; preds = %110, %originalBBpart2
  %56 = load i32, i32* @x.1
  %57 = load i32, i32* @y.2
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %55
  %64 = load i32, i32* %3, align 4
  %65 = load i32, i32* @move_history_pointer, align 4
  %66 = icmp slt i32 %64, %65
  %67 = load i32, i32* @x.1
  %68 = load i32, i32* @y.2
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %66, label %75, label %113

; <label>:75:                                     ; preds = %originalBBpart24
  %76 = load i32, i32* @x.1
  %77 = load i32, i32* @y.2
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %75
  %84 = load %struct.board_state*, %struct.board_state** %2, align 8
  %85 = getelementptr inbounds %struct.board_state, %struct.board_state* %84, i32 0, i32 9
  %86 = load i32, i32* %3, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [500 x i32], [500 x i32]* %85, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = load i32, i32* %3, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %91
  store i32 %89, i32* %92, align 4
  %93 = load %struct.board_state*, %struct.board_state** %2, align 8
  %94 = getelementptr inbounds %struct.board_state, %struct.board_state* %93, i32 0, i32 10
  %95 = load i32, i32* %3, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [500 x i32], [500 x i32]* %94, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %3, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %100
  store i32 %98, i32* %101, align 4
  %102 = load i32, i32* @x.1
  %103 = load i32, i32* @y.2
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %110

; <label>:110:                                    ; preds = %originalBBpart28
  %111 = load i32, i32* %3, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %3, align 4
  br label %55

; <label>:113:                                    ; preds = %originalBBpart24
  %114 = load %struct.board_state*, %struct.board_state** %2, align 8
  %115 = getelementptr inbounds %struct.board_state, %struct.board_state* %114, i32 0, i32 12
  %116 = load float, float* %115, align 4
  store float %116, float* @komi, align 4
  %117 = load %struct.board_state*, %struct.board_state** %2, align 8
  %118 = getelementptr inbounds %struct.board_state, %struct.board_state* %117, i32 0, i32 13
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* @movenum, align 4
  %120 = load i32, i32* @board_ko_pos, align 4
  call void @hashdata_recalc(%struct.Hash_data* @hashdata, i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i32 %120)
  call void @new_position()
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %121 = load %struct.board_state*, %struct.board_state** %2, align 8
  %122 = getelementptr inbounds %struct.board_state, %struct.board_state* %121, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  store i32 %123, i32* @board_size, align 4
  %124 = load %struct.board_state*, %struct.board_state** %2, align 8
  %125 = getelementptr inbounds %struct.board_state, %struct.board_state* %124, i32 0, i32 1
  %126 = getelementptr inbounds [421 x i8], [421 x i8]* %125, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i8* %126, i64 421, i32 4, i1 false)
  %127 = load %struct.board_state*, %struct.board_state** %2, align 8
  %128 = getelementptr inbounds %struct.board_state, %struct.board_state* %127, i32 0, i32 5
  %129 = getelementptr inbounds [421 x i8], [421 x i8]* %128, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i8* %129, i64 421, i32 4, i1 false)
  %130 = load %struct.board_state*, %struct.board_state** %2, align 8
  %131 = getelementptr inbounds %struct.board_state, %struct.board_state* %130, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* @board_ko_pos, align 4
  %133 = load %struct.board_state*, %struct.board_state** %2, align 8
  %134 = getelementptr inbounds %struct.board_state, %struct.board_state* %133, i32 0, i32 4
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* @white_captured, align 4
  %136 = load %struct.board_state*, %struct.board_state** %2, align 8
  %137 = getelementptr inbounds %struct.board_state, %struct.board_state* %136, i32 0, i32 3
  %138 = load i32, i32* %137, align 4
  store i32 %138, i32* @black_captured, align 4
  %139 = load %struct.board_state*, %struct.board_state** %2, align 8
  %140 = getelementptr inbounds %struct.board_state, %struct.board_state* %139, i32 0, i32 6
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* @initial_board_ko_pos, align 4
  %142 = load %struct.board_state*, %struct.board_state** %2, align 8
  %143 = getelementptr inbounds %struct.board_state, %struct.board_state* %142, i32 0, i32 7
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* @initial_white_captured, align 4
  %145 = load %struct.board_state*, %struct.board_state** %2, align 8
  %146 = getelementptr inbounds %struct.board_state, %struct.board_state* %145, i32 0, i32 8
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* @initial_black_captured, align 4
  %148 = load %struct.board_state*, %struct.board_state** %2, align 8
  %149 = getelementptr inbounds %struct.board_state, %struct.board_state* %148, i32 0, i32 11
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* @move_history_pointer, align 4
  store i32 0, i32* %3, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %151 = load i32, i32* %3, align 4
  %152 = load i32, i32* @move_history_pointer, align 4
  %153 = icmp slt i32 %151, %152
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  %154 = load %struct.board_state*, %struct.board_state** %2, align 8
  %155 = getelementptr inbounds %struct.board_state, %struct.board_state* %154, i32 0, i32 9
  %156 = load i32, i32* %3, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [500 x i32], [500 x i32]* %155, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = load i32, i32* %3, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %161
  store i32 %159, i32* %162, align 4
  %163 = load %struct.board_state*, %struct.board_state** %2, align 8
  %164 = getelementptr inbounds %struct.board_state, %struct.board_state* %163, i32 0, i32 10
  %165 = load i32, i32* %3, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [500 x i32], [500 x i32]* %164, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = load i32, i32* %3, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %170
  store i32 %168, i32* %171, align 4
  br label %originalBB6
}

declare void @hashdata_recalc(%struct.Hash_data*, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @new_position() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @position_number, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @position_number, align 4
  store i32 0, i32* @next_string, align 4
  store i32 0, i32* @liberty_mark, align 4
  store i32 0, i32* @string_mark, align 4
  store %struct.change_stack_entry* getelementptr inbounds ([28880 x %struct.change_stack_entry], [28880 x %struct.change_stack_entry]* @change_stack, i32 0, i32 0), %struct.change_stack_entry** @change_stack_pointer, align 8
  store %struct.vertex_stack_entry* getelementptr inbounds ([28880 x %struct.vertex_stack_entry], [28880 x %struct.vertex_stack_entry]* @vertex_stack, i32 0, i32 0), %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  call void @llvm.memset.p0i8.i64(i8* bitcast ([240 x %struct.string_data]* @string to i8*), i8 0, i64 178560, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([400 x i32]* @ml to i8*), i8 0, i64 1600, i32 16, i1 false)
  store i32 21, i32* %1, align 4
  br label %5

; <label>:5:                                      ; preds = %originalBBpart216, %0
  %6 = load i32, i32* @x.3
  %7 = load i32, i32* @y.4
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = load i32, i32* %1, align 4
  %15 = icmp slt i32 %14, 400
  %16 = load i32, i32* @x.3
  %17 = load i32, i32* @y.4
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %87

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.3
  %26 = load i32, i32* @y.4
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %24
  %33 = load i32, i32* %1, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp ne i32 %37, 3
  %39 = load i32, i32* @x.3
  %40 = load i32, i32* @y.4
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %51

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = load i32, i32* %1, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %49
  store i32 -1, i32* %50, align 4
  br label %51

; <label>:51:                                     ; preds = %47, %originalBBpart24
  %52 = load i32, i32* @x.3
  %53 = load i32, i32* @y.4
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %51
  %60 = load i32, i32* @x.3
  %61 = load i32, i32* @y.4
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68

; <label>:68:                                     ; preds = %originalBBpart28
  %69 = load i32, i32* @x.3
  %70 = load i32, i32* @y.4
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %68
  %77 = load i32, i32* %1, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %1, align 4
  %79 = load i32, i32* @x.3
  %80 = load i32, i32* @y.4
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart216, label %originalBB10alteredBB

originalBBpart216:                                ; preds = %originalBB10
  br label %5

; <label>:87:                                     ; preds = %originalBBpart2
  %88 = load i32, i32* @x.3
  %89 = load i32, i32* @y.4
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %87
  store i32 21, i32* %1, align 4
  %96 = load i32, i32* @x.3
  %97 = load i32, i32* @y.4
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %104

; <label>:104:                                    ; preds = %232, %originalBBpart220
  %105 = load i32, i32* @x.3
  %106 = load i32, i32* @y.4
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %104
  %113 = load i32, i32* %1, align 4
  %114 = icmp slt i32 %113, 400
  %115 = load i32, i32* @x.3
  %116 = load i32, i32* @y.4
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %114, label %123, label %235

; <label>:123:                                    ; preds = %originalBBpart224
  %124 = load i32, i32* @x.3
  %125 = load i32, i32* @y.4
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %123
  %132 = load i32, i32* %1, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = icmp ne i32 %136, 3
  %138 = load i32, i32* @x.3
  %139 = load i32, i32* @y.4
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %137, label %147, label %146

; <label>:146:                                    ; preds = %originalBBpart228
  br label %232

; <label>:147:                                    ; preds = %originalBBpart228
  %148 = load i32, i32* %1, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %177, label %154

; <label>:154:                                    ; preds = %147
  %155 = load i32, i32* @x.3
  %156 = load i32, i32* @y.4
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %154
  %163 = load i32, i32* %1, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 2
  %169 = load i32, i32* @x.3
  %170 = load i32, i32* @y.4
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %168, label %177, label %215

; <label>:177:                                    ; preds = %originalBBpart232, %147
  %178 = load i32, i32* %1, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, -1
  br i1 %182, label %183, label %215

; <label>:183:                                    ; preds = %177
  %184 = load i32, i32* @next_string, align 4
  %185 = load i32, i32* %1, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %186
  store i32 %184, i32* %187, align 4
  %188 = load i32, i32* %1, align 4
  %189 = load i32, i32* %1, align 4
  %190 = call i32 @propagate_string(i32 %188, i32 %189)
  %191 = load i32, i32* @next_string, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %192
  %194 = getelementptr inbounds %struct.string_data, %struct.string_data* %193, i32 0, i32 1
  store i32 %190, i32* %194, align 4
  %195 = load i32, i32* %1, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = load i32, i32* @next_string, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %201
  %203 = getelementptr inbounds %struct.string_data, %struct.string_data* %202, i32 0, i32 0
  store i32 %199, i32* %203, align 8
  %204 = load i32, i32* %1, align 4
  %205 = load i32, i32* @next_string, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %206
  %208 = getelementptr inbounds %struct.string_data, %struct.string_data* %207, i32 0, i32 2
  store i32 %204, i32* %208, align 8
  %209 = load i32, i32* @next_string, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %210
  %212 = getelementptr inbounds %struct.string_data, %struct.string_data* %211, i32 0, i32 7
  store i32 0, i32* %212, align 4
  %213 = load i32, i32* @next_string, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* @next_string, align 4
  br label %215

; <label>:215:                                    ; preds = %183, %177, %originalBBpart232
  %216 = load i32, i32* @x.3
  %217 = load i32, i32* @y.4
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %215
  %224 = load i32, i32* @x.3
  %225 = load i32, i32* @y.4
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %232

; <label>:232:                                    ; preds = %originalBBpart236, %146
  %233 = load i32, i32* %1, align 4
  %234 = add nsw i32 %233, 1
  store i32 %234, i32* %1, align 4
  br label %104

; <label>:235:                                    ; preds = %originalBBpart224
  %236 = load i32, i32* @x.3
  %237 = load i32, i32* @y.4
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %235
  store i32 0, i32* %2, align 4
  %244 = load i32, i32* @x.3
  %245 = load i32, i32* @y.4
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %252

; <label>:252:                                    ; preds = %258, %originalBBpart240
  %253 = load i32, i32* %2, align 4
  %254 = load i32, i32* @next_string, align 4
  %255 = icmp slt i32 %253, %254
  br i1 %255, label %256, label %261

; <label>:256:                                    ; preds = %252
  %257 = load i32, i32* %2, align 4
  call void @find_liberties_and_neighbors(i32 %257)
  br label %258

; <label>:258:                                    ; preds = %256
  %259 = load i32, i32* %2, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %2, align 4
  br label %252

; <label>:261:                                    ; preds = %252
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %262 = load i32, i32* %1, align 4
  %263 = icmp slt i32 %262, 400
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %264 = load i32, i32* %1, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %265
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i32
  %269 = icmp ne i32 %268, 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  %270 = load i32, i32* %1, align 4
  %_ = sub i32 %270, 1
  %gen = mul i32 %_, 1
  %_11 = sub i32 0, %270
  %gen12 = add i32 %_11, 1
  %_13 = sub i32 0, %270
  %gen14 = add i32 %_13, 1
  %271 = add nsw i32 %270, 1
  store i32 %271, i32* %1, align 4
  br label %originalBB10

originalBB18alteredBB:                            ; preds = %originalBB18, %87
  store i32 21, i32* %1, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %104
  %272 = load i32, i32* %1, align 4
  %273 = icmp slt i32 %272, 400
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %123
  %274 = load i32, i32* %1, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = icmp ne i32 %278, 3
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %154
  %280 = load i32, i32* %1, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %281
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = icmp eq i32 %284, 2
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %215
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %235
  store i32 0, i32* %2, align 4
  br label %originalBB38
}

; Function Attrs: noinline nounwind uwtable
define void @clear_board() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @board_size, align 4
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %8

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @board_size, align 4
  %6 = icmp sle i32 %5, 19
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %4
  br label %25

; <label>:8:                                      ; preds = %4, %0
  %9 = load i32, i32* @x.5
  %10 = load i32, i32* @y.6
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 400, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i32 0, i32 0), i32 -1, i32 -1)
  %17 = load i32, i32* @x.5
  %18 = load i32, i32* @y.6
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %originalBBpart2, %7
  %26 = load i32, i32* @x.5
  %27 = load i32, i32* @y.6
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i8 0, i64 421, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i8 0, i64 421, i32 16, i1 false)
  store i32 0, i32* %1, align 4
  %34 = load i32, i32* @x.5
  %35 = load i32, i32* @y.6
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %42

; <label>:42:                                     ; preds = %97, %originalBBpart24
  %43 = load i32, i32* %1, align 4
  %44 = icmp slt i32 %43, 421
  br i1 %44, label %45, label %100

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %1, align 4
  %47 = sdiv i32 %46, 20
  %48 = sub nsw i32 %47, 1
  %49 = load i32, i32* @board_size, align 4
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %73

; <label>:51:                                     ; preds = %45
  %52 = load i32, i32* @x.5
  %53 = load i32, i32* @y.6
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %51
  %60 = load i32, i32* %1, align 4
  %61 = srem i32 %60, 20
  %62 = sub nsw i32 %61, 1
  %63 = load i32, i32* @board_size, align 4
  %64 = icmp ult i32 %62, %63
  %65 = load i32, i32* @x.5
  %66 = load i32, i32* @y.6
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart222, label %originalBB6alteredBB

originalBBpart222:                                ; preds = %originalBB6
  br i1 %64, label %96, label %73

; <label>:73:                                     ; preds = %originalBBpart222, %45
  %74 = load i32, i32* @x.5
  %75 = load i32, i32* @y.6
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %73
  %82 = load i32, i32* %1, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %83
  store i8 3, i8* %84, align 1
  %85 = load i32, i32* %1, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [421 x i8], [421 x i8]* @initial_board, i64 0, i64 %86
  store i8 3, i8* %87, align 1
  %88 = load i32, i32* @x.5
  %89 = load i32, i32* @y.6
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br label %96

; <label>:96:                                     ; preds = %originalBBpart227, %originalBBpart222
  br label %97

; <label>:97:                                     ; preds = %96
  %98 = load i32, i32* %1, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %1, align 4
  br label %42

; <label>:100:                                    ; preds = %42
  store i32 0, i32* @board_ko_pos, align 4
  store i32 0, i32* @white_captured, align 4
  store i32 0, i32* @black_captured, align 4
  store i32 0, i32* @initial_board_ko_pos, align 4
  store i32 0, i32* @initial_white_captured, align 4
  store i32 0, i32* @initial_black_captured, align 4
  store i32 0, i32* @move_history_pointer, align 4
  store i32 0, i32* @movenum, align 4
  %101 = load i32, i32* @board_ko_pos, align 4
  call void @hashdata_recalc(%struct.Hash_data* @hashdata, i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i32 %101)
  call void @new_position()
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 400, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i32 0, i32 0), i32 -1, i32 -1)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i8 0, i64 421, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i8 0, i64 421, i32 16, i1 false)
  store i32 0, i32* %1, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %102 = load i32, i32* %1, align 4
  %_ = sub i32 %102, 20
  %gen = mul i32 %_, 20
  %_7 = sub i32 0, %102
  %gen8 = add i32 %_7, 20
  %_9 = sub i32 0, %102
  %gen10 = add i32 %_9, 20
  %_11 = sub i32 %102, 20
  %gen12 = mul i32 %_11, 20
  %_13 = sub i32 %102, 20
  %gen14 = mul i32 %_13, 20
  %_15 = sub i32 %102, 20
  %gen16 = mul i32 %_15, 20
  %103 = srem i32 %102, 20
  %_17 = sub i32 0, %103
  %gen18 = add i32 %_17, 1
  %_19 = sub i32 0, %103
  %gen20 = add i32 %_19, 1
  %104 = sub nsw i32 %103, 1
  %105 = load i32, i32* @board_size, align 4
  %106 = icmp ult i32 %104, %105
  br label %originalBB6

originalBB24alteredBB:                            ; preds = %originalBB24, %73
  %107 = load i32, i32* %1, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %108
  store i8 3, i8* %109, align 1
  %110 = load i32, i32* %1, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [421 x i8], [421 x i8]* @initial_board, i64 0, i64 %111
  store i8 3, i8* %112, align 1
  br label %originalBB24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: noinline nounwind uwtable
define i32 @test_gray_border() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @board_size, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %41

; <label>:5:                                      ; preds = %0
  %6 = load i32, i32* @x.7
  %7 = load i32, i32* @y.8
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = load i32, i32* @board_size, align 4
  %15 = icmp sle i32 %14, 19
  %16 = load i32, i32* @x.7
  %17 = load i32, i32* @y.8
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %41

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.7
  %26 = load i32, i32* @y.8
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %24
  %33 = load i32, i32* @x.7
  %34 = load i32, i32* @y.8
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %42

; <label>:41:                                     ; preds = %originalBBpart2, %0
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 432, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i32 0, i32 0), i32 -1, i32 -1)
  br label %42

; <label>:42:                                     ; preds = %41, %originalBBpart24
  %43 = load i32, i32* @x.7
  %44 = load i32, i32* @y.8
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %42
  store i32 0, i32* %2, align 4
  %51 = load i32, i32* @x.7
  %52 = load i32, i32* @y.8
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %59

; <label>:59:                                     ; preds = %117, %originalBBpart28
  %60 = load i32, i32* %2, align 4
  %61 = icmp slt i32 %60, 421
  br i1 %61, label %62, label %120

; <label>:62:                                     ; preds = %59
  %63 = load i32, i32* @x.7
  %64 = load i32, i32* @y.8
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %62
  %71 = load i32, i32* %2, align 4
  %72 = sdiv i32 %71, 20
  %73 = sub nsw i32 %72, 1
  %74 = load i32, i32* @board_size, align 4
  %75 = icmp ult i32 %73, %74
  %76 = load i32, i32* @x.7
  %77 = load i32, i32* @y.8
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart221, label %originalBB10alteredBB

originalBBpart221:                                ; preds = %originalBB10
  br i1 %75, label %84, label %90

; <label>:84:                                     ; preds = %originalBBpart221
  %85 = load i32, i32* %2, align 4
  %86 = srem i32 %85, 20
  %87 = sub nsw i32 %86, 1
  %88 = load i32, i32* @board_size, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %116, label %90

; <label>:90:                                     ; preds = %84, %originalBBpart221
  %91 = load i32, i32* %2, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp ne i32 %95, 3
  br i1 %96, label %97, label %99

; <label>:97:                                     ; preds = %90
  %98 = load i32, i32* %2, align 4
  store i32 %98, i32* %1, align 4
  br label %121

; <label>:99:                                     ; preds = %90
  %100 = load i32, i32* @x.7
  %101 = load i32, i32* @y.8
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %99
  %108 = load i32, i32* @x.7
  %109 = load i32, i32* @y.8
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %116

; <label>:116:                                    ; preds = %originalBBpart225, %84
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = load i32, i32* %2, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %2, align 4
  br label %59

; <label>:120:                                    ; preds = %59
  store i32 -1, i32* %1, align 4
  br label %121

; <label>:121:                                    ; preds = %120, %97
  %122 = load i32, i32* %1, align 4
  ret i32 %122

originalBBalteredBB:                              ; preds = %originalBB, %5
  %123 = load i32, i32* @board_size, align 4
  %124 = icmp sle i32 %123, 19
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  store i32 0, i32* %2, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %125 = load i32, i32* %2, align 4
  %_ = sub i32 0, %125
  %gen = add i32 %_, 20
  %_11 = shl i32 %125, 20
  %_12 = shl i32 %125, 20
  %_13 = sub i32 0, %125
  %gen14 = add i32 %_13, 20
  %_15 = sub i32 %125, 20
  %gen16 = mul i32 %_15, 20
  %_17 = sub i32 %125, 20
  %gen18 = mul i32 %_17, 20
  %126 = sdiv i32 %125, 20
  %_19 = shl i32 %126, 1
  %127 = sub nsw i32 %126, 1
  %128 = load i32, i32* @board_size, align 4
  %129 = icmp ult i32 %127, %128
  br label %originalBB10

originalBB23alteredBB:                            ; preds = %originalBB23, %99
  br label %originalBB23
}

; Function Attrs: noinline nounwind uwtable
define i32 @trymove(i32, i32, i8*, i32, i32, i32) #0 {
  %7 = load i32, i32* @x.9
  %8 = load i32, i32* @y.10
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca [100 x i8], align 16
  store i32 %0, i32* %16, align 4
  store i32 %1, i32* %17, align 4
  store i8* %2, i8** %18, align 8
  store i32 %3, i32* %19, align 4
  store i32 %4, i32* %20, align 4
  store i32 %5, i32* %21, align 4
  %23 = load i32, i32* %16, align 4
  %24 = load i32, i32* %17, align 4
  %25 = call i32 @do_trymove(i32 %23, i32 %24, i32 0)
  %26 = icmp ne i32 %25, 0
  %27 = load i32, i32* @x.9
  %28 = load i32, i32* @y.10
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %36, label %35

; <label>:35:                                     ; preds = %originalBBpart2
  store i32 0, i32* %15, align 4
  br label %218

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %38 = icmp ne %struct.SGFTree_t* %37, null
  br i1 %38, label %39, label %193

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* @x.9
  %41 = load i32, i32* @y.10
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %39
  %48 = load i8*, i8** %18, align 8
  %49 = icmp eq i8* %48, null
  %50 = load i32, i32* @x.9
  %51 = load i32, i32* @y.10
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* @x.9
  %60 = load i32, i32* @y.10
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %58
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8** %18, align 8
  %67 = load i32, i32* @x.9
  %68 = load i32, i32* @y.10
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

; <label>:75:                                     ; preds = %originalBBpart28, %originalBBpart24
  %76 = load i32, i32* %19, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %112

; <label>:78:                                     ; preds = %75
  %79 = load i32, i32* %20, align 4
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %90

; <label>:81:                                     ; preds = %78
  %82 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %83 = load i8*, i8** %18, align 8
  %84 = load i32, i32* @count_variations, align 4
  %85 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  %86 = load i32, i32* %20, align 4
  %87 = call i8* @komaster_to_string(i32 %86)
  %88 = load i32, i32* %21, align 4
  %89 = call i8* @location_to_string(i32 %88)
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %82, i64 100, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i8* %83, i32 %84, i64 %85, i8* %87, i8* %89)
  br label %111

; <label>:90:                                     ; preds = %78
  %91 = load i32, i32* @x.9
  %92 = load i32, i32* @y.10
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %90
  %99 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %100 = load i8*, i8** %18, align 8
  %101 = load i32, i32* @count_variations, align 4
  %102 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %99, i64 100, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0), i8* %100, i32 %101, i64 %102)
  %103 = load i32, i32* @x.9
  %104 = load i32, i32* @y.10
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %111

; <label>:111:                                    ; preds = %originalBBpart212, %81
  br label %166

; <label>:112:                                    ; preds = %75
  %113 = load i32, i32* @x.9
  %114 = load i32, i32* @y.10
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %112
  %121 = load i32, i32* %20, align 4
  %122 = icmp ne i32 %121, 0
  %123 = load i32, i32* @x.9
  %124 = load i32, i32* @y.10
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %122, label %131, label %158

; <label>:131:                                    ; preds = %originalBBpart216
  %132 = load i32, i32* @x.9
  %133 = load i32, i32* @y.10
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %131
  %140 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %141 = load i8*, i8** %18, align 8
  %142 = load i32, i32* %19, align 4
  %143 = call i8* @location_to_string(i32 %142)
  %144 = load i32, i32* @count_variations, align 4
  %145 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  %146 = load i32, i32* %20, align 4
  %147 = call i8* @komaster_to_string(i32 %146)
  %148 = load i32, i32* %21, align 4
  %149 = call i8* @location_to_string(i32 %148)
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %140, i64 100, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i32 0, i32 0), i8* %141, i8* %143, i32 %144, i64 %145, i8* %147, i8* %149)
  %150 = load i32, i32* @x.9
  %151 = load i32, i32* @y.10
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %165

; <label>:158:                                    ; preds = %originalBBpart216
  %159 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %160 = load i8*, i8** %18, align 8
  %161 = load i32, i32* %19, align 4
  %162 = call i8* @location_to_string(i32 %161)
  %163 = load i32, i32* @count_variations, align 4
  %164 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %159, i64 100, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0), i8* %160, i8* %162, i32 %163, i64 %164)
  br label %165

; <label>:165:                                    ; preds = %158, %originalBBpart220
  br label %166

; <label>:166:                                    ; preds = %165, %111
  %167 = load i32, i32* @x.9
  %168 = load i32, i32* @y.10
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %166
  %175 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %176 = load i32, i32* %17, align 4
  %177 = load i32, i32* %16, align 4
  %178 = sdiv i32 %177, 20
  %179 = sub nsw i32 %178, 1
  %180 = load i32, i32* %16, align 4
  %181 = srem i32 %180, 20
  %182 = sub nsw i32 %181, 1
  call void @sgftreeAddPlayLast(%struct.SGFTree_t* %175, i32 %176, i32 %179, i32 %182)
  %183 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %184 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  call void @sgftreeAddComment(%struct.SGFTree_t* %183, i8* %184)
  %185 = load i32, i32* @x.9
  %186 = load i32, i32* @y.10
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart239, label %originalBB22alteredBB

originalBBpart239:                                ; preds = %originalBB22
  br label %193

; <label>:193:                                    ; preds = %originalBBpart239, %36
  %194 = load i32, i32* @count_variations, align 4
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %196, label %215

; <label>:196:                                    ; preds = %193
  %197 = load i32, i32* @x.9
  %198 = load i32, i32* @y.10
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %196
  %205 = load i32, i32* @count_variations, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* @count_variations, align 4
  %207 = load i32, i32* @x.9
  %208 = load i32, i32* @y.10
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart248, label %originalBB41alteredBB

originalBBpart248:                                ; preds = %originalBB41
  br label %215

; <label>:215:                                    ; preds = %originalBBpart248, %193
  %216 = load i32, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  store i32 1, i32* %15, align 4
  br label %218

; <label>:218:                                    ; preds = %215, %35
  %219 = load i32, i32* %15, align 4
  ret i32 %219

originalBBalteredBB:                              ; preds = %originalBB, %6
  %220 = alloca i32, align 4
  %221 = alloca i32, align 4
  %222 = alloca i32, align 4
  %223 = alloca i8*, align 8
  %224 = alloca i32, align 4
  %225 = alloca i32, align 4
  %226 = alloca i32, align 4
  %227 = alloca [100 x i8], align 16
  store i32 %0, i32* %221, align 4
  store i32 %1, i32* %222, align 4
  store i8* %2, i8** %223, align 8
  store i32 %3, i32* %224, align 4
  store i32 %4, i32* %225, align 4
  store i32 %5, i32* %226, align 4
  %228 = load i32, i32* %221, align 4
  %229 = load i32, i32* %222, align 4
  %230 = call i32 @do_trymove(i32 %228, i32 %229, i32 0)
  %231 = icmp ne i32 %230, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %232 = load i8*, i8** %18, align 8
  %233 = icmp eq i8* %232, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8** %18, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %234 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %235 = load i8*, i8** %18, align 8
  %236 = load i32, i32* @count_variations, align 4
  %237 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %234, i64 100, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0), i8* %235, i32 %236, i64 %237)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %112
  %238 = load i32, i32* %20, align 4
  %239 = icmp ne i32 %238, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %131
  %240 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %241 = load i8*, i8** %18, align 8
  %242 = load i32, i32* %19, align 4
  %243 = call i8* @location_to_string(i32 %242)
  %244 = load i32, i32* @count_variations, align 4
  %245 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  %246 = load i32, i32* %20, align 4
  %247 = call i8* @komaster_to_string(i32 %246)
  %248 = load i32, i32* %21, align 4
  %249 = call i8* @location_to_string(i32 %248)
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %240, i64 100, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i32 0, i32 0), i8* %241, i8* %243, i32 %244, i64 %245, i8* %247, i8* %249)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %166
  %250 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %251 = load i32, i32* %17, align 4
  %252 = load i32, i32* %16, align 4
  %_ = sub i32 %252, 20
  %gen = mul i32 %_, 20
  %_23 = sub i32 0, %252
  %gen24 = add i32 %_23, 20
  %_25 = sub i32 %252, 20
  %gen26 = mul i32 %_25, 20
  %_27 = sub i32 %252, 20
  %gen28 = mul i32 %_27, 20
  %_29 = sub i32 %252, 20
  %gen30 = mul i32 %_29, 20
  %253 = sdiv i32 %252, 20
  %_31 = shl i32 %253, 1
  %254 = sub nsw i32 %253, 1
  %255 = load i32, i32* %16, align 4
  %_32 = sub i32 0, %255
  %gen33 = add i32 %_32, 20
  %256 = srem i32 %255, 20
  %_34 = shl i32 %256, 1
  %_35 = sub i32 %256, 1
  %gen36 = mul i32 %_35, 1
  %_37 = shl i32 %256, 1
  %257 = sub nsw i32 %256, 1
  call void @sgftreeAddPlayLast(%struct.SGFTree_t* %250, i32 %251, i32 %254, i32 %257)
  %258 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %259 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  call void @sgftreeAddComment(%struct.SGFTree_t* %258, i8* %259)
  br label %originalBB22

originalBB41alteredBB:                            ; preds = %originalBB41, %196
  %260 = load i32, i32* @count_variations, align 4
  %_42 = sub i32 0, %260
  %gen43 = add i32 %_42, 1
  %_44 = shl i32 %260, 1
  %_45 = sub i32 0, %260
  %gen46 = add i32 %_45, 1
  %261 = add nsw i32 %260, 1
  store i32 %261, i32* @count_variations, align 4
  br label %originalBB41
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @do_trymove(i32, i32, i32) #0 {
  %4 = load i32, i32* @x.11
  %5 = load i32, i32* @y.12
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %13, align 4
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp ult i32 %16, 421
  %18 = load i32, i32* @x.11
  %19 = load i32, i32* @y.12
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %50

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.11
  %28 = load i32, i32* @y.12
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %26
  %35 = load i32, i32* %13, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 3
  %41 = load i32, i32* @x.11
  %42 = load i32, i32* @y.12
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %50

; <label>:49:                                     ; preds = %originalBBpart24
  br label %73

; <label>:50:                                     ; preds = %originalBBpart24, %originalBBpart2
  %51 = load i32, i32* @x.11
  %52 = load i32, i32* @y.12
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %50
  %59 = load i32, i32* %13, align 4
  %60 = sdiv i32 %59, 20
  %61 = sub nsw i32 %60, 1
  %62 = load i32, i32* %13, align 4
  %63 = srem i32 %62, 20
  %64 = sub nsw i32 %63, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 646, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %61, i32 %64)
  %65 = load i32, i32* @x.11
  %66 = load i32, i32* @y.12
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart225, label %originalBB6alteredBB

originalBBpart225:                                ; preds = %originalBB6
  br label %73

; <label>:73:                                     ; preds = %originalBBpart225, %49
  %74 = load i32, i32* @x.11
  %75 = load i32, i32* @y.12
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %73
  %82 = load i32, i32* %14, align 4
  %83 = icmp eq i32 %82, 2
  %84 = load i32, i32* @x.11
  %85 = load i32, i32* @y.12
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %83, label %111, label %92

; <label>:92:                                     ; preds = %originalBBpart229
  %93 = load i32, i32* @x.11
  %94 = load i32, i32* @y.12
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %92
  %101 = load i32, i32* %14, align 4
  %102 = icmp eq i32 %101, 1
  %103 = load i32, i32* @x.11
  %104 = load i32, i32* @y.12
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %102, label %111, label %112

; <label>:111:                                    ; preds = %originalBBpart233, %originalBBpart229
  br label %113

; <label>:112:                                    ; preds = %originalBBpart233
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 647, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i32 0, i32 0), i32 -1, i32 -1)
  br label %113

; <label>:113:                                    ; preds = %112, %111
  %114 = load i32, i32* %13, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [400 x i8], [400 x i8]* @shadow, i64 0, i64 %115
  store i8 1, i8* %116, align 1
  %117 = load i32, i32* %13, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %113
  store i32 0, i32* %12, align 4
  br label %257

; <label>:124:                                    ; preds = %113
  %125 = load i32, i32* @x.11
  %126 = load i32, i32* @y.12
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %124
  %133 = load i32, i32* %15, align 4
  %134 = icmp ne i32 %133, 0
  %135 = load i32, i32* @x.11
  %136 = load i32, i32* @y.12
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %134, label %169, label %143

; <label>:143:                                    ; preds = %originalBBpart237
  %144 = load i32, i32* %13, align 4
  %145 = load i32, i32* @board_ko_pos, align 4
  %146 = icmp eq i32 %144, %145
  br i1 %146, label %147, label %169

; <label>:147:                                    ; preds = %143
  %148 = load i32, i32* %13, align 4
  %149 = sub nsw i32 %148, 1
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = load i32, i32* %14, align 4
  %155 = sub nsw i32 3, %154
  %156 = icmp eq i32 %153, %155
  br i1 %156, label %167, label %157

; <label>:157:                                    ; preds = %147
  %158 = load i32, i32* %13, align 4
  %159 = add nsw i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = load i32, i32* %14, align 4
  %165 = sub nsw i32 3, %164
  %166 = icmp eq i32 %163, %165
  br i1 %166, label %167, label %168

; <label>:167:                                    ; preds = %157, %147
  store i32 0, i32* %12, align 4
  br label %257

; <label>:168:                                    ; preds = %157
  br label %169

; <label>:169:                                    ; preds = %168, %143, %originalBBpart237
  %170 = load i32, i32* %13, align 4
  %171 = load i32, i32* %14, align 4
  %172 = call i32 @is_suicide(i32 %170, i32 %171)
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %175

; <label>:174:                                    ; preds = %169
  store i32 0, i32* %12, align 4
  br label %257

; <label>:175:                                    ; preds = %169
  %176 = load i32, i32* @stackp, align 4
  %177 = icmp sge i32 %176, 359
  br i1 %177, label %178, label %189

; <label>:178:                                    ; preds = %175
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %180 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.25, i32 0, i32 0))
  %181 = load i32, i32* @verbose, align 4
  %182 = icmp sgt i32 %181, 0
  br i1 %182, label %183, label %184

; <label>:183:                                    ; preds = %178
  call void @showboard(i32 0)
  call void @dump_stack()
  br label %184

; <label>:184:                                    ; preds = %183, %178
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %186 = call i32 @fflush(%struct._IO_FILE* %185)
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %188 = call i32 @fflush(%struct._IO_FILE* %187)
  store i32 0, i32* %12, align 4
  br label %257

; <label>:189:                                    ; preds = %175
  %190 = load i32, i32* @trymove_counter, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* @trymove_counter, align 4
  %192 = load i32, i32* %13, align 4
  %193 = load i32, i32* @stackp, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [361 x i32], [361 x i32]* @stack, i64 0, i64 %194
  store i32 %192, i32* %195, align 4
  %196 = load i32, i32* %14, align 4
  %197 = load i32, i32* @stackp, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [361 x i32], [361 x i32]* @move_color, i64 0, i64 %198
  store i32 %196, i32* %199, align 4
  %200 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %201 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %200, i32 1
  store %struct.change_stack_entry* %201, %struct.change_stack_entry** @change_stack_pointer, align 8
  %202 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %200, i32 0, i32 0
  store i32* null, i32** %202, align 8
  %203 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %204 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %203, i32 1
  store %struct.vertex_stack_entry* %204, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %205 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %203, i32 0, i32 0
  store i8* null, i8** %205, align 8
  %206 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %207 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %206, i32 0, i32 0
  store i32* @board_ko_pos, i32** %207, align 8
  %208 = load i32, i32* @board_ko_pos, align 4
  %209 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %210 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %209, i32 1
  store %struct.change_stack_entry* %210, %struct.change_stack_entry** @change_stack_pointer, align 8
  %211 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %209, i32 0, i32 1
  store i32 %208, i32* %211, align 8
  %212 = load i32, i32* @stackp, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [361 x %struct.Hash_data], [361 x %struct.Hash_data]* @hashdata_stack, i64 0, i64 %213
  %215 = bitcast %struct.Hash_data* %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %215, i8* bitcast (%struct.Hash_data* @hashdata to i8*), i64 8, i32 8, i1 false)
  %216 = load i32, i32* @board_ko_pos, align 4
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %218, label %220

; <label>:218:                                    ; preds = %189
  %219 = load i32, i32* @board_ko_pos, align 4
  call void @hashdata_invert_ko(%struct.Hash_data* @hashdata, i32 %219)
  br label %220

; <label>:220:                                    ; preds = %218, %189
  %221 = load i32, i32* @x.11
  %222 = load i32, i32* @y.12
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %220
  store i32 0, i32* @board_ko_pos, align 4
  %229 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %230 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %229, i32 0, i32 0
  store i32* @black_captured, i32** %230, align 8
  %231 = load i32, i32* @black_captured, align 4
  %232 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %233 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %232, i32 1
  store %struct.change_stack_entry* %233, %struct.change_stack_entry** @change_stack_pointer, align 8
  %234 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %232, i32 0, i32 1
  store i32 %231, i32* %234, align 8
  %235 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %236 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %235, i32 0, i32 0
  store i32* @white_captured, i32** %236, align 8
  %237 = load i32, i32* @white_captured, align 4
  %238 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %239 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %238, i32 1
  store %struct.change_stack_entry* %239, %struct.change_stack_entry** @change_stack_pointer, align 8
  %240 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %238, i32 0, i32 1
  store i32 %237, i32* %240, align 8
  %241 = load i32, i32* @stackp, align 4
  %242 = add nsw i32 %241, 1
  store i32 %242, i32* @stackp, align 4
  %243 = load i32, i32* @verbose, align 4
  %244 = icmp eq i32 %243, 4
  %245 = load i32, i32* @x.11
  %246 = load i32, i32* @y.12
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart250, label %originalBB39alteredBB

originalBBpart250:                                ; preds = %originalBB39
  br i1 %244, label %253, label %254

; <label>:253:                                    ; preds = %originalBBpart250
  call void @dump_stack()
  br label %254

; <label>:254:                                    ; preds = %253, %originalBBpart250
  %255 = load i32, i32* %13, align 4
  %256 = load i32, i32* %14, align 4
  call void @do_play_move(i32 %255, i32 %256)
  store i32 1, i32* %12, align 4
  br label %257

; <label>:257:                                    ; preds = %254, %184, %174, %167, %123
  %258 = load i32, i32* %12, align 4
  ret i32 %258

originalBBalteredBB:                              ; preds = %originalBB, %3
  %259 = alloca i32, align 4
  %260 = alloca i32, align 4
  %261 = alloca i32, align 4
  %262 = alloca i32, align 4
  store i32 %0, i32* %260, align 4
  store i32 %1, i32* %261, align 4
  store i32 %2, i32* %262, align 4
  %263 = load i32, i32* %260, align 4
  %264 = icmp ult i32 %263, 421
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %265 = load i32, i32* %13, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = icmp ne i32 %269, 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %271 = load i32, i32* %13, align 4
  %_ = shl i32 %271, 20
  %_7 = sub i32 %271, 20
  %gen = mul i32 %_7, 20
  %_8 = sub i32 0, %271
  %gen9 = add i32 %_8, 20
  %_10 = shl i32 %271, 20
  %272 = sdiv i32 %271, 20
  %_11 = shl i32 %272, 1
  %_12 = sub i32 %272, 1
  %gen13 = mul i32 %_12, 1
  %_14 = shl i32 %272, 1
  %273 = sub nsw i32 %272, 1
  %274 = load i32, i32* %13, align 4
  %_15 = sub i32 0, %274
  %gen16 = add i32 %_15, 20
  %_17 = sub i32 %274, 20
  %gen18 = mul i32 %_17, 20
  %275 = srem i32 %274, 20
  %_19 = shl i32 %275, 1
  %_20 = sub i32 %275, 1
  %gen21 = mul i32 %_20, 1
  %_22 = sub i32 0, %275
  %gen23 = add i32 %_22, 1
  %276 = sub nsw i32 %275, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 646, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %273, i32 %276)
  br label %originalBB6

originalBB27alteredBB:                            ; preds = %originalBB27, %73
  %277 = load i32, i32* %14, align 4
  %278 = icmp eq i32 %277, 2
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %92
  %279 = load i32, i32* %14, align 4
  %280 = icmp eq i32 %279, 1
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %124
  %281 = load i32, i32* %15, align 4
  %282 = icmp ne i32 %281, 0
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %220
  store i32 0, i32* @board_ko_pos, align 4
  %283 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %284 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %283, i32 0, i32 0
  store i32* @black_captured, i32** %284, align 8
  %285 = load i32, i32* @black_captured, align 4
  %286 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %287 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %286, i32 1
  store %struct.change_stack_entry* %287, %struct.change_stack_entry** @change_stack_pointer, align 8
  %288 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %286, i32 0, i32 1
  store i32 %285, i32* %288, align 8
  %289 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %290 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %289, i32 0, i32 0
  store i32* @white_captured, i32** %290, align 8
  %291 = load i32, i32* @white_captured, align 4
  %292 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %293 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %292, i32 1
  store %struct.change_stack_entry* %293, %struct.change_stack_entry** @change_stack_pointer, align 8
  %294 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %292, i32 0, i32 1
  store i32 %291, i32* %294, align 8
  %295 = load i32, i32* @stackp, align 4
  %_40 = sub i32 %295, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 0, %295
  %gen43 = add i32 %_42, 1
  %_44 = sub i32 0, %295
  %gen45 = add i32 %_44, 1
  %_46 = shl i32 %295, 1
  %_47 = shl i32 %295, 1
  %_48 = shl i32 %295, 1
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* @stackp, align 4
  %297 = load i32, i32* @verbose, align 4
  %298 = icmp eq i32 %297, 4
  br label %originalBB39
}

declare void @gg_snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @komaster_to_string(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [7 x i8*], align 16
  store i32 %0, i32* %2, align 4
  %4 = bitcast [7 x i8*]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast ([7 x i8*]* @komaster_to_string.b to i8*), i64 56, i32 16, i1 false)
  %5 = load i32, i32* %2, align 4
  %6 = icmp sge i32 %5, 0
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* %2, align 4
  %9 = icmp sle i32 %8, 6
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %7
  br label %12

; <label>:11:                                     ; preds = %7, %1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 462, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.42, i32 0, i32 0), i32 -1, i32 -1)
  br label %12

; <label>:12:                                     ; preds = %11, %10
  %13 = load i32, i32* @x.13
  %14 = load i32, i32* @y.14
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %12
  %21 = load i32, i32* %2, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [7 x i8*], [7 x i8*]* %3, i64 0, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = load i32, i32* @x.13
  %26 = load i32, i32* @y.14
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i32, i32* %2, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [7 x i8*], [7 x i8*]* %3, i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  br label %originalBB
}

declare i8* @location_to_string(i32) #1

declare void @sgftreeAddPlayLast(%struct.SGFTree_t*, i32, i32, i32) #1

declare void @sgftreeAddComment(%struct.SGFTree_t*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define i32 @semeai_trymove(i32, i32, i8*, i32, i32, i32, i32) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca [100 x i8], align 16
  %17 = alloca [5 x i8], align 1
  %18 = alloca [5 x i8], align 1
  store i32 %0, i32* %9, align 4
  store i32 %1, i32* %10, align 4
  store i8* %2, i8** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  %19 = load i32, i32* %9, align 4
  %20 = load i32, i32* %10, align 4
  %21 = call i32 @do_trymove(i32 %19, i32 %20, i32 0)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %40, label %23

; <label>:23:                                     ; preds = %7
  %24 = load i32, i32* @x.15
  %25 = load i32, i32* @y.16
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %23
  store i32 0, i32* %8, align 4
  %32 = load i32, i32* @x.15
  %33 = load i32, i32* @y.16
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %120

; <label>:40:                                     ; preds = %7
  %41 = load i8*, i8** %11, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %44

; <label>:43:                                     ; preds = %40
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8** %11, align 8
  br label %44

; <label>:44:                                     ; preds = %43, %40
  %45 = load i32, i32* @x.15
  %46 = load i32, i32* @y.16
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %44
  %53 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %54 = icmp ne %struct.SGFTree_t* %53, null
  %55 = load i32, i32* @x.15
  %56 = load i32, i32* @y.16
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %95

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = load i32, i32* %12, align 4
  %65 = getelementptr inbounds [5 x i8], [5 x i8]* %17, i32 0, i32 0
  call void @location_to_buffer(i32 %64, i8* %65)
  %66 = load i32, i32* %13, align 4
  %67 = getelementptr inbounds [5 x i8], [5 x i8]* %18, i32 0, i32 0
  call void @location_to_buffer(i32 %66, i8* %67)
  %68 = load i32, i32* %14, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %77

; <label>:70:                                     ; preds = %63
  %71 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i32 0, i32 0
  %72 = load i8*, i8** %11, align 8
  %73 = getelementptr inbounds [5 x i8], [5 x i8]* %17, i32 0, i32 0
  %74 = getelementptr inbounds [5 x i8], [5 x i8]* %18, i32 0, i32 0
  %75 = load i32, i32* @count_variations, align 4
  %76 = load i32, i32* %15, align 4
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %71, i64 100, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i32 0, i32 0), i8* %72, i8* %73, i8* %74, i32 %75, i32 %76)
  br label %84

; <label>:77:                                     ; preds = %63
  %78 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i32 0, i32 0
  %79 = load i8*, i8** %11, align 8
  %80 = getelementptr inbounds [5 x i8], [5 x i8]* %17, i32 0, i32 0
  %81 = getelementptr inbounds [5 x i8], [5 x i8]* %18, i32 0, i32 0
  %82 = load i32, i32* @count_variations, align 4
  %83 = load i32, i32* %15, align 4
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %78, i64 100, i8* %79, i8* %80, i8* %81, i32 %82, i32 %83)
  br label %84

; <label>:84:                                     ; preds = %77, %70
  %85 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %86 = load i32, i32* %10, align 4
  %87 = load i32, i32* %9, align 4
  %88 = sdiv i32 %87, 20
  %89 = sub nsw i32 %88, 1
  %90 = load i32, i32* %9, align 4
  %91 = srem i32 %90, 20
  %92 = sub nsw i32 %91, 1
  call void @sgftreeAddPlayLast(%struct.SGFTree_t* %85, i32 %86, i32 %89, i32 %92)
  %93 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %94 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i32 0, i32 0
  call void @sgftreeAddComment(%struct.SGFTree_t* %93, i8* %94)
  br label %95

; <label>:95:                                     ; preds = %84, %originalBBpart24
  %96 = load i32, i32* @count_variations, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %117

; <label>:98:                                     ; preds = %95
  %99 = load i32, i32* @x.15
  %100 = load i32, i32* @y.16
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %98
  %107 = load i32, i32* @count_variations, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* @count_variations, align 4
  %109 = load i32, i32* @x.15
  %110 = load i32, i32* @y.16
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br label %117

; <label>:117:                                    ; preds = %originalBBpart212, %95
  %118 = load i32, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  store i32 1, i32* %8, align 4
  br label %120

; <label>:120:                                    ; preds = %117, %originalBBpart2
  %121 = load i32, i32* %8, align 4
  ret i32 %121

originalBBalteredBB:                              ; preds = %originalBB, %23
  store i32 0, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %122 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %123 = icmp ne %struct.SGFTree_t* %122, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %98
  %124 = load i32, i32* @count_variations, align 4
  %_ = shl i32 %124, 1
  %_7 = sub i32 %124, 1
  %gen = mul i32 %_7, 1
  %_8 = sub i32 0, %124
  %gen9 = add i32 %_8, 1
  %_10 = shl i32 %124, 1
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* @count_variations, align 4
  br label %originalBB6
}

declare void @location_to_buffer(i32, i8*) #1

; Function Attrs: noinline nounwind uwtable
define i32 @tryko(i32, i32, i8*, i32, i32) #0 {
  %6 = load i32, i32* @x.17
  %7 = load i32, i32* @y.18
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca [100 x i8], align 16
  store i32 %0, i32* %15, align 4
  store i32 %1, i32* %16, align 4
  store i8* %2, i8** %17, align 8
  store i32 %3, i32* %18, align 4
  store i32 %4, i32* %19, align 4
  %21 = load i32, i32* %15, align 4
  %22 = load i32, i32* %16, align 4
  %23 = call i32 @do_trymove(i32 %21, i32 %22, i32 1)
  %24 = icmp ne i32 %23, 0
  %25 = load i32, i32* @x.17
  %26 = load i32, i32* @y.18
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %34, label %33

; <label>:33:                                     ; preds = %originalBBpart2
  store i32 0, i32* %14, align 4
  br label %149

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %36 = icmp ne %struct.SGFTree_t* %35, null
  br i1 %36, label %37, label %108

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* @x.17
  %39 = load i32, i32* @y.18
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %37
  %46 = load i8*, i8** %17, align 8
  %47 = icmp eq i8* %46, null
  %48 = load i32, i32* @x.17
  %49 = load i32, i32* @y.18
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %57

; <label>:56:                                     ; preds = %originalBBpart24
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8** %17, align 8
  br label %57

; <label>:57:                                     ; preds = %56, %originalBBpart24
  %58 = load i32, i32* %18, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %69

; <label>:60:                                     ; preds = %57
  %61 = getelementptr inbounds [100 x i8], [100 x i8]* %20, i32 0, i32 0
  %62 = load i8*, i8** %17, align 8
  %63 = load i32, i32* @count_variations, align 4
  %64 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  %65 = load i32, i32* %18, align 4
  %66 = call i8* @komaster_to_string(i32 %65)
  %67 = load i32, i32* %19, align 4
  %68 = call i8* @location_to_string(i32 %67)
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %61, i64 100, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i32 0, i32 0), i8* %62, i32 %63, i64 %64, i8* %66, i8* %68)
  br label %90

; <label>:69:                                     ; preds = %57
  %70 = load i32, i32* @x.17
  %71 = load i32, i32* @y.18
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %69
  %78 = getelementptr inbounds [100 x i8], [100 x i8]* %20, i32 0, i32 0
  %79 = load i8*, i8** %17, align 8
  %80 = load i32, i32* @count_variations, align 4
  %81 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %78, i64 100, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0), i8* %79, i32 %80, i64 %81)
  %82 = load i32, i32* @x.17
  %83 = load i32, i32* @y.18
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %90

; <label>:90:                                     ; preds = %originalBBpart28, %60
  %91 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %92 = load i32, i32* %16, align 4
  call void @sgftreeAddPlayLast(%struct.SGFTree_t* %91, i32 %92, i32 -1, i32 -1)
  %93 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  call void @sgftreeAddComment(%struct.SGFTree_t* %93, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0))
  %94 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %95 = load i32, i32* %16, align 4
  %96 = sub nsw i32 3, %95
  call void @sgftreeAddPlayLast(%struct.SGFTree_t* %94, i32 %96, i32 -1, i32 -1)
  %97 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  call void @sgftreeAddComment(%struct.SGFTree_t* %97, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0))
  %98 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %99 = load i32, i32* %16, align 4
  %100 = load i32, i32* %15, align 4
  %101 = sdiv i32 %100, 20
  %102 = sub nsw i32 %101, 1
  %103 = load i32, i32* %15, align 4
  %104 = srem i32 %103, 20
  %105 = sub nsw i32 %104, 1
  call void @sgftreeAddPlayLast(%struct.SGFTree_t* %98, i32 %99, i32 %102, i32 %105)
  %106 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %107 = getelementptr inbounds [100 x i8], [100 x i8]* %20, i32 0, i32 0
  call void @sgftreeAddComment(%struct.SGFTree_t* %106, i8* %107)
  br label %108

; <label>:108:                                    ; preds = %90, %34
  %109 = load i32, i32* @count_variations, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %130

; <label>:111:                                    ; preds = %108
  %112 = load i32, i32* @x.17
  %113 = load i32, i32* @y.18
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %111
  %120 = load i32, i32* @count_variations, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* @count_variations, align 4
  %122 = load i32, i32* @x.17
  %123 = load i32, i32* @y.18
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart228, label %originalBB10alteredBB

originalBBpart228:                                ; preds = %originalBB10
  br label %130

; <label>:130:                                    ; preds = %originalBBpart228, %108
  %131 = load i32, i32* @x.17
  %132 = load i32, i32* @y.18
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %130
  %139 = load i32, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  store i32 1, i32* %14, align 4
  %141 = load i32, i32* @x.17
  %142 = load i32, i32* @y.18
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart238, label %originalBB30alteredBB

originalBBpart238:                                ; preds = %originalBB30
  br label %149

; <label>:149:                                    ; preds = %originalBBpart238, %33
  %150 = load i32, i32* @x.17
  %151 = load i32, i32* @y.18
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %149
  %158 = load i32, i32* %14, align 4
  %159 = load i32, i32* @x.17
  %160 = load i32, i32* @y.18
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  ret i32 %158

originalBBalteredBB:                              ; preds = %originalBB, %5
  %167 = alloca i32, align 4
  %168 = alloca i32, align 4
  %169 = alloca i32, align 4
  %170 = alloca i8*, align 8
  %171 = alloca i32, align 4
  %172 = alloca i32, align 4
  %173 = alloca [100 x i8], align 16
  store i32 %0, i32* %168, align 4
  store i32 %1, i32* %169, align 4
  store i8* %2, i8** %170, align 8
  store i32 %3, i32* %171, align 4
  store i32 %4, i32* %172, align 4
  %174 = load i32, i32* %168, align 4
  %175 = load i32, i32* %169, align 4
  %176 = call i32 @do_trymove(i32 %174, i32 %175, i32 1)
  %177 = icmp ne i32 %176, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %178 = load i8*, i8** %17, align 8
  %179 = icmp eq i8* %178, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  %180 = getelementptr inbounds [100 x i8], [100 x i8]* %20, i32 0, i32 0
  %181 = load i8*, i8** %17, align 8
  %182 = load i32, i32* @count_variations, align 4
  %183 = load i64, i64* getelementptr inbounds (%struct.Hash_data, %struct.Hash_data* @hashdata, i32 0, i32 0, i64 0), align 8
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %180, i64 100, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0), i8* %181, i32 %182, i64 %183)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %111
  %184 = load i32, i32* @count_variations, align 4
  %_ = sub i32 0, %184
  %gen = add i32 %_, 1
  %_11 = sub i32 0, %184
  %gen12 = add i32 %_11, 1
  %_13 = sub i32 %184, 1
  %gen14 = mul i32 %_13, 1
  %_15 = sub i32 %184, 1
  %gen16 = mul i32 %_15, 1
  %_17 = sub i32 %184, 1
  %gen18 = mul i32 %_17, 1
  %_19 = sub i32 0, %184
  %gen20 = add i32 %_19, 1
  %_21 = sub i32 %184, 1
  %gen22 = mul i32 %_21, 1
  %_23 = sub i32 0, %184
  %gen24 = add i32 %_23, 1
  %_25 = sub i32 0, %184
  %gen26 = add i32 %_25, 1
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* @count_variations, align 4
  br label %originalBB10

originalBB30alteredBB:                            ; preds = %originalBB30, %130
  %186 = load i32, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  %_31 = sub i32 %186, 1
  %gen32 = mul i32 %_31, 1
  %_33 = shl i32 %186, 1
  %_34 = shl i32 %186, 1
  %_35 = shl i32 %186, 1
  %_36 = shl i32 %186, 1
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* getelementptr inbounds (%struct.stats_data, %struct.stats_data* @stats, i32 0, i32 0), align 4
  store i32 1, i32* %14, align 4
  br label %originalBB30

originalBB40alteredBB:                            ; preds = %originalBB40, %149
  %188 = load i32, i32* %14, align 4
  br label %originalBB40
}

; Function Attrs: noinline nounwind uwtable
define void @popgo() #0 {
  %1 = alloca [100 x i8], align 16
  %2 = load i32, i32* @stackp, align 4
  %3 = add nsw i32 %2, -1
  store i32 %3, i32* @stackp, align 4
  call void @undo_trymove()
  %4 = load i32, i32* @stackp, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [361 x %struct.Hash_data], [361 x %struct.Hash_data]* @hashdata_stack, i64 0, i64 %5
  %7 = bitcast %struct.Hash_data* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.Hash_data* @hashdata to i8*), i8* %7, i64 8, i32 8, i1 false)
  %8 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %9 = icmp ne %struct.SGFTree_t* %8, null
  br i1 %9, label %10, label %70

; <label>:10:                                     ; preds = %0
  %11 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i32 0, i32 0
  %12 = load i32, i32* @count_variations, align 4
  call void (i8*, i64, i8*, ...) @gg_snprintf(i8* %11, i64 100, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i32 0, i32 0), i32 %12)
  %13 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %14 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i32 0, i32 0
  call void @sgftreeAddComment(%struct.SGFTree_t* %13, i8* %14)
  %15 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %16 = getelementptr inbounds %struct.SGFTree_t, %struct.SGFTree_t* %15, i32 0, i32 1
  %17 = load %struct.SGFNode_t*, %struct.SGFNode_t** %16, align 8
  %18 = getelementptr inbounds %struct.SGFNode_t, %struct.SGFNode_t* %17, i32 0, i32 1
  %19 = load %struct.SGFNode_t*, %struct.SGFNode_t** %18, align 8
  %20 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %21 = getelementptr inbounds %struct.SGFTree_t, %struct.SGFTree_t* %20, i32 0, i32 1
  store %struct.SGFNode_t* %19, %struct.SGFNode_t** %21, align 8
  br label %22

; <label>:22:                                     ; preds = %originalBBpart2, %10
  %23 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %24 = getelementptr inbounds %struct.SGFTree_t, %struct.SGFTree_t* %23, i32 0, i32 1
  %25 = load %struct.SGFNode_t*, %struct.SGFNode_t** %24, align 8
  %26 = load i32, i32* @board_size, align 4
  %27 = call i32 @is_pass_node(%struct.SGFNode_t* %25, i32 %26)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %53

; <label>:29:                                     ; preds = %22
  %30 = load i32, i32* @x.19
  %31 = load i32, i32* @y.20
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %29
  %38 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %39 = getelementptr inbounds %struct.SGFTree_t, %struct.SGFTree_t* %38, i32 0, i32 1
  %40 = load %struct.SGFNode_t*, %struct.SGFNode_t** %39, align 8
  %41 = getelementptr inbounds %struct.SGFNode_t, %struct.SGFNode_t* %40, i32 0, i32 1
  %42 = load %struct.SGFNode_t*, %struct.SGFNode_t** %41, align 8
  %43 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %44 = getelementptr inbounds %struct.SGFTree_t, %struct.SGFTree_t* %43, i32 0, i32 1
  store %struct.SGFNode_t* %42, %struct.SGFNode_t** %44, align 8
  %45 = load i32, i32* @x.19
  %46 = load i32, i32* @y.20
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %22

; <label>:53:                                     ; preds = %22
  %54 = load i32, i32* @x.19
  %55 = load i32, i32* @y.20
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %53
  %62 = load i32, i32* @x.19
  %63 = load i32, i32* @y.20
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %70

; <label>:70:                                     ; preds = %originalBBpart24, %0
  %71 = load i32, i32* @x.19
  %72 = load i32, i32* @y.20
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %70
  %79 = load i32, i32* @x.19
  %80 = load i32, i32* @y.20
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %29
  %87 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %88 = getelementptr inbounds %struct.SGFTree_t, %struct.SGFTree_t* %87, i32 0, i32 1
  %89 = load %struct.SGFNode_t*, %struct.SGFNode_t** %88, align 8
  %90 = getelementptr inbounds %struct.SGFNode_t, %struct.SGFNode_t* %89, i32 0, i32 1
  %91 = load %struct.SGFNode_t*, %struct.SGFNode_t** %90, align 8
  %92 = load %struct.SGFTree_t*, %struct.SGFTree_t** @sgf_dumptree, align 8
  %93 = getelementptr inbounds %struct.SGFTree_t, %struct.SGFTree_t* %92, i32 0, i32 1
  store %struct.SGFNode_t* %91, %struct.SGFNode_t** %93, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define internal void @undo_trymove() #0 {
  %1 = load i32, i32* @x.21
  %2 = load i32, i32* @y.22
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %10 = ptrtoint %struct.change_stack_entry* %9 to i64
  %11 = sub i64 %10, ptrtoint ([28880 x %struct.change_stack_entry]* @change_stack to i64)
  %12 = sdiv exact i64 %11, 16
  %13 = icmp sle i64 %12, 28880
  %14 = load i32, i32* @x.21
  %15 = load i32, i32* @y.22
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %22, label %39

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = load i32, i32* @x.21
  %24 = load i32, i32* @y.22
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %originalBB5alteredBB, %22
  %31 = load i32, i32* @x.21
  %32 = load i32, i32* @y.22
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  br label %40

; <label>:39:                                     ; preds = %originalBBpart2
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 766, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.47, i32 0, i32 0), i32 -1, i32 -1)
  br label %40

; <label>:40:                                     ; preds = %39, %originalBBpart27
  br label %41

; <label>:41:                                     ; preds = %63, %40
  %42 = load i32, i32* @x.21
  %43 = load i32, i32* @y.22
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %originalBB9alteredBB, %41
  %50 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %51 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %50, i32 -1
  store %struct.change_stack_entry* %51, %struct.change_stack_entry** @change_stack_pointer, align 8
  %52 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %51, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp ne i32* %53, null
  %55 = load i32, i32* @x.21
  %56 = load i32, i32* @y.22
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br i1 %54, label %63, label %70

; <label>:63:                                     ; preds = %originalBBpart211
  %64 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %65 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %68 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %67, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  store i32 %66, i32* %69, align 4
  br label %41

; <label>:70:                                     ; preds = %originalBBpart211
  br label %71

; <label>:71:                                     ; preds = %77, %70
  %72 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %73 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %72, i32 -1
  store %struct.vertex_stack_entry* %73, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %74 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %77, label %85

; <label>:77:                                     ; preds = %71
  %78 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %79 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = trunc i32 %80 to i8
  %82 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %83 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %82, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  store i8 %81, i8* %84, align 1
  br label %71

; <label>:85:                                     ; preds = %71
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %86 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %87 = ptrtoint %struct.change_stack_entry* %86 to i64
  %_ = sub i64 %87, ptrtoint ([28880 x %struct.change_stack_entry]* @change_stack to i64)
  %gen = mul i64 %_, ptrtoint ([28880 x %struct.change_stack_entry]* @change_stack to i64)
  %_1 = sub i64 0, %87
  %gen2 = add i64 %_1, ptrtoint ([28880 x %struct.change_stack_entry]* @change_stack to i64)
  %88 = sub i64 %87, ptrtoint ([28880 x %struct.change_stack_entry]* @change_stack to i64)
  %_3 = sub i64 0, %88
  %gen4 = add i64 %_3, 16
  %89 = sdiv exact i64 %88, 16
  %90 = icmp sle i64 %89, 28880
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %22
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %41
  %91 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %92 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %91, i32 -1
  store %struct.change_stack_entry* %92, %struct.change_stack_entry** @change_stack_pointer, align 8
  %93 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %92, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = icmp ne i32* %94, null
  br label %originalBB9
}

declare i32 @is_pass_node(%struct.SGFNode_t*, i32) #1

; Function Attrs: noinline nounwind uwtable
define void @dump_stack() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %2

; <label>:2:                                      ; preds = %34, %0
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* @stackp, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %37

; <label>:6:                                      ; preds = %2
  %7 = load i32, i32* @x.23
  %8 = load i32, i32* @y.24
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [361 x i32], [361 x i32]* @move_color, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 2
  %20 = select i1 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0)
  %21 = load i32, i32* %1, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [361 x i32], [361 x i32]* @stack, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = call i32 (i8*, ...) @gprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* %20, i32 %24)
  %26 = load i32, i32* @x.23
  %27 = load i32, i32* @y.24
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* %1, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %1, align 4
  br label %2

; <label>:37:                                     ; preds = %2
  %38 = load i32, i32* @count_variations, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %44

; <label>:40:                                     ; preds = %37
  %41 = load i32, i32* @count_variations, align 4
  %42 = sub nsw i32 %41, 1
  %43 = call i32 (i8*, ...) @gprintf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i32 0, i32 0), i32 %42)
  br label %44

; <label>:44:                                     ; preds = %40, %37
  %45 = call i32 (i8*, ...) @gprintf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0))
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %47 = call i32 @fflush(%struct._IO_FILE* %46)
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %49 = call i32 @fflush(%struct._IO_FILE* %48)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %6
  %50 = load i32, i32* %1, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [361 x i32], [361 x i32]* @move_color, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 2
  %55 = select i1 %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0)
  %56 = load i32, i32* %1, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [361 x i32], [361 x i32]* @stack, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = call i32 (i8*, ...) @gprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* %55, i32 %59)
  br label %originalBB
}

declare i32 @gprintf(i8*, ...) #1

declare i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define void @add_stone(i32, i32) #0 {
  %3 = load i32, i32* @x.25
  %4 = load i32, i32* @y.26
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %13 = load i32, i32* @stackp, align 4
  %14 = icmp eq i32 %13, 0
  %15 = load i32, i32* @x.25
  %16 = load i32, i32* @y.26
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %24

; <label>:23:                                     ; preds = %originalBBpart2
  br label %47

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.25
  %26 = load i32, i32* @y.26
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %24
  %33 = load i32, i32* %11, align 4
  %34 = sdiv i32 %33, 20
  %35 = sub nsw i32 %34, 1
  %36 = load i32, i32* %11, align 4
  %37 = srem i32 %36, 20
  %38 = sub nsw i32 %37, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 823, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 %35, i32 %38)
  %39 = load i32, i32* @x.25
  %40 = load i32, i32* @y.26
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart221, label %originalBB1alteredBB

originalBBpart221:                                ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart221, %23
  %48 = load i32, i32* %11, align 4
  %49 = icmp ult i32 %48, 421
  br i1 %49, label %50, label %74

; <label>:50:                                     ; preds = %47
  %51 = load i32, i32* %11, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = icmp ne i32 %55, 3
  br i1 %56, label %57, label %74

; <label>:57:                                     ; preds = %50
  %58 = load i32, i32* @x.25
  %59 = load i32, i32* @y.26
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %57
  %66 = load i32, i32* @x.25
  %67 = load i32, i32* @y.26
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %81

; <label>:74:                                     ; preds = %50, %47
  %75 = load i32, i32* %11, align 4
  %76 = sdiv i32 %75, 20
  %77 = sub nsw i32 %76, 1
  %78 = load i32, i32* %11, align 4
  %79 = srem i32 %78, 20
  %80 = sub nsw i32 %79, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 824, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %77, i32 %80)
  br label %81

; <label>:81:                                     ; preds = %74, %originalBBpart225
  %82 = load i32, i32* %11, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %81
  br label %112

; <label>:89:                                     ; preds = %81
  %90 = load i32, i32* @x.25
  %91 = load i32, i32* @y.26
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %89
  %98 = load i32, i32* %11, align 4
  %99 = sdiv i32 %98, 20
  %100 = sub nsw i32 %99, 1
  %101 = load i32, i32* %11, align 4
  %102 = srem i32 %101, 20
  %103 = sub nsw i32 %102, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 825, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %100, i32 %103)
  %104 = load i32, i32* @x.25
  %105 = load i32, i32* @y.26
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart254, label %originalBB27alteredBB

originalBBpart254:                                ; preds = %originalBB27
  br label %112

; <label>:112:                                    ; preds = %originalBBpart254, %88
  %113 = load i32, i32* @x.25
  %114 = load i32, i32* @y.26
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %112
  %121 = load i32, i32* %12, align 4
  %122 = trunc i32 %121 to i8
  %123 = load i32, i32* %11, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %124
  store i8 %122, i8* %125, align 1
  %126 = load i32, i32* %11, align 4
  %127 = load i32, i32* %12, align 4
  call void @hashdata_invert_stone(%struct.Hash_data* @hashdata, i32 %126, i32 %127)
  call void @reset_move_history()
  call void @new_position()
  %128 = load i32, i32* @x.25
  %129 = load i32, i32* @y.26
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %136 = alloca i32, align 4
  %137 = alloca i32, align 4
  store i32 %0, i32* %136, align 4
  store i32 %1, i32* %137, align 4
  %138 = load i32, i32* @stackp, align 4
  %139 = icmp eq i32 %138, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %140 = load i32, i32* %11, align 4
  %_ = sub i32 0, %140
  %gen = add i32 %_, 20
  %_2 = sub i32 0, %140
  %gen3 = add i32 %_2, 20
  %_4 = sub i32 0, %140
  %gen5 = add i32 %_4, 20
  %_6 = sub i32 %140, 20
  %gen7 = mul i32 %_6, 20
  %141 = sdiv i32 %140, 20
  %_8 = sub i32 0, %141
  %gen9 = add i32 %_8, 1
  %_10 = sub i32 %141, 1
  %gen11 = mul i32 %_10, 1
  %_12 = sub i32 0, %141
  %gen13 = add i32 %_12, 1
  %142 = sub nsw i32 %141, 1
  %143 = load i32, i32* %11, align 4
  %_14 = sub i32 0, %143
  %gen15 = add i32 %_14, 20
  %_16 = sub i32 %143, 20
  %gen17 = mul i32 %_16, 20
  %144 = srem i32 %143, 20
  %_18 = shl i32 %144, 1
  %_19 = shl i32 %144, 1
  %145 = sub nsw i32 %144, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 823, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 %142, i32 %145)
  br label %originalBB1

originalBB23alteredBB:                            ; preds = %originalBB23, %57
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %89
  %146 = load i32, i32* %11, align 4
  %_28 = sub i32 0, %146
  %gen29 = add i32 %_28, 20
  %_30 = sub i32 0, %146
  %gen31 = add i32 %_30, 20
  %147 = sdiv i32 %146, 20
  %_32 = sub i32 %147, 1
  %gen33 = mul i32 %_32, 1
  %_34 = sub i32 0, %147
  %gen35 = add i32 %_34, 1
  %_36 = sub i32 %147, 1
  %gen37 = mul i32 %_36, 1
  %_38 = sub i32 %147, 1
  %gen39 = mul i32 %_38, 1
  %148 = sub nsw i32 %147, 1
  %149 = load i32, i32* %11, align 4
  %_40 = sub i32 %149, 20
  %gen41 = mul i32 %_40, 20
  %_42 = sub i32 %149, 20
  %gen43 = mul i32 %_42, 20
  %_44 = sub i32 %149, 20
  %gen45 = mul i32 %_44, 20
  %_46 = sub i32 %149, 20
  %gen47 = mul i32 %_46, 20
  %150 = srem i32 %149, 20
  %_48 = sub i32 %150, 1
  %gen49 = mul i32 %_48, 1
  %_50 = shl i32 %150, 1
  %_51 = sub i32 %150, 1
  %gen52 = mul i32 %_51, 1
  %151 = sub nsw i32 %150, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 825, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %148, i32 %151)
  br label %originalBB27

originalBB56alteredBB:                            ; preds = %originalBB56, %112
  %152 = load i32, i32* %12, align 4
  %153 = trunc i32 %152 to i8
  %154 = load i32, i32* %11, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %155
  store i8 %153, i8* %156, align 1
  %157 = load i32, i32* %11, align 4
  %158 = load i32, i32* %12, align 4
  call void @hashdata_invert_stone(%struct.Hash_data* @hashdata, i32 %157, i32 %158)
  call void @reset_move_history()
  call void @new_position()
  br label %originalBB56
}

declare void @hashdata_invert_stone(%struct.Hash_data*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @reset_move_history() #0 {
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i64 421, i32 16, i1 false)
  %1 = load i32, i32* @board_ko_pos, align 4
  store i32 %1, i32* @initial_board_ko_pos, align 4
  %2 = load i32, i32* @white_captured, align 4
  store i32 %2, i32* @initial_white_captured, align 4
  %3 = load i32, i32* @black_captured, align 4
  store i32 %3, i32* @initial_black_captured, align 4
  store i32 0, i32* @move_history_pointer, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @remove_stone(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* @stackp, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  br label %13

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* %2, align 4
  %8 = sdiv i32 %7, 20
  %9 = sub nsw i32 %8, 1
  %10 = load i32, i32* %2, align 4
  %11 = srem i32 %10, 20
  %12 = sub nsw i32 %11, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 841, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 %9, i32 %12)
  br label %13

; <label>:13:                                     ; preds = %6, %5
  %14 = load i32, i32* %2, align 4
  %15 = icmp ult i32 %14, 421
  br i1 %15, label %16, label %24

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %2, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp ne i32 %21, 3
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %16
  br label %31

; <label>:24:                                     ; preds = %16, %13
  %25 = load i32, i32* %2, align 4
  %26 = sdiv i32 %25, 20
  %27 = sub nsw i32 %26, 1
  %28 = load i32, i32* %2, align 4
  %29 = srem i32 %28, 20
  %30 = sub nsw i32 %29, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 842, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %27, i32 %30)
  br label %31

; <label>:31:                                     ; preds = %24, %23
  %32 = load i32, i32* %2, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %61, label %38

; <label>:38:                                     ; preds = %31
  %39 = load i32, i32* @x.29
  %40 = load i32, i32* @y.30
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %38
  %47 = load i32, i32* %2, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp eq i32 %51, 2
  %53 = load i32, i32* @x.29
  %54 = load i32, i32* @y.30
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %52, label %61, label %78

; <label>:61:                                     ; preds = %originalBBpart2, %31
  %62 = load i32, i32* @x.29
  %63 = load i32, i32* @y.30
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %61
  %70 = load i32, i32* @x.29
  %71 = load i32, i32* @y.30
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %101

; <label>:78:                                     ; preds = %originalBBpart2
  %79 = load i32, i32* @x.29
  %80 = load i32, i32* @y.30
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %78
  %87 = load i32, i32* %2, align 4
  %88 = sdiv i32 %87, 20
  %89 = sub nsw i32 %88, 1
  %90 = load i32, i32* %2, align 4
  %91 = srem i32 %90, 20
  %92 = sub nsw i32 %91, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 843, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), i32 %89, i32 %92)
  %93 = load i32, i32* @x.29
  %94 = load i32, i32* @y.30
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart229, label %originalBB6alteredBB

originalBBpart229:                                ; preds = %originalBB6
  br label %101

; <label>:101:                                    ; preds = %originalBBpart229, %originalBBpart24
  %102 = load i32, i32* %2, align 4
  %103 = load i32, i32* %2, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  call void @hashdata_invert_stone(%struct.Hash_data* @hashdata, i32 %102, i32 %107)
  %108 = load i32, i32* %2, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %109
  store i8 0, i8* %110, align 1
  call void @reset_move_history()
  call void @new_position()
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %38
  %111 = load i32, i32* %2, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %117 = load i32, i32* %2, align 4
  %_ = sub i32 0, %117
  %gen = add i32 %_, 20
  %_7 = shl i32 %117, 20
  %118 = sdiv i32 %117, 20
  %119 = sub nsw i32 %118, 1
  %120 = load i32, i32* %2, align 4
  %_8 = sub i32 0, %120
  %gen9 = add i32 %_8, 20
  %_10 = shl i32 %120, 20
  %_11 = sub i32 %120, 20
  %gen12 = mul i32 %_11, 20
  %_13 = sub i32 0, %120
  %gen14 = add i32 %_13, 20
  %_15 = shl i32 %120, 20
  %_16 = shl i32 %120, 20
  %_17 = sub i32 %120, 20
  %gen18 = mul i32 %_17, 20
  %121 = srem i32 %120, 20
  %_19 = sub i32 0, %121
  %gen20 = add i32 %_19, 1
  %_21 = sub i32 0, %121
  %gen22 = add i32 %_21, 1
  %_23 = sub i32 %121, 1
  %gen24 = mul i32 %_23, 1
  %_25 = sub i32 0, %121
  %gen26 = add i32 %_25, 1
  %_27 = shl i32 %121, 1
  %122 = sub nsw i32 %121, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 843, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), i32 %119, i32 %122)
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define void @play_move(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [421 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %11 = load i32, i32* @stackp, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %30

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.31
  %15 = load i32, i32* @y.32
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load i32, i32* @x.31
  %23 = load i32, i32* @y.32
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %53

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.31
  %32 = load i32, i32* @y.32
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %30
  %39 = load i32, i32* %3, align 4
  %40 = sdiv i32 %39, 20
  %41 = sub nsw i32 %40, 1
  %42 = load i32, i32* %3, align 4
  %43 = srem i32 %42, 20
  %44 = sub nsw i32 %43, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 924, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 %41, i32 %44)
  %45 = load i32, i32* @x.31
  %46 = load i32, i32* @y.32
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart237, label %originalBB1alteredBB

originalBBpart237:                                ; preds = %originalBB1
  br label %53

; <label>:53:                                     ; preds = %originalBBpart237, %originalBBpart2
  %54 = load i32, i32* @x.31
  %55 = load i32, i32* @y.32
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %53
  %62 = load i32, i32* %4, align 4
  %63 = icmp eq i32 %62, 1
  %64 = load i32, i32* @x.31
  %65 = load i32, i32* @y.32
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %63, label %91, label %72

; <label>:72:                                     ; preds = %originalBBpart241
  %73 = load i32, i32* @x.31
  %74 = load i32, i32* @y.32
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %72
  %81 = load i32, i32* %4, align 4
  %82 = icmp eq i32 %81, 2
  %83 = load i32, i32* @x.31
  %84 = load i32, i32* @y.32
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br i1 %82, label %91, label %92

; <label>:91:                                     ; preds = %originalBBpart245, %originalBBpart241
  br label %115

; <label>:92:                                     ; preds = %originalBBpart245
  %93 = load i32, i32* @x.31
  %94 = load i32, i32* @y.32
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %92
  %101 = load i32, i32* %3, align 4
  %102 = sdiv i32 %101, 20
  %103 = sub nsw i32 %102, 1
  %104 = load i32, i32* %3, align 4
  %105 = srem i32 %104, 20
  %106 = sub nsw i32 %105, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 925, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i32 0, i32 0), i32 %103, i32 %106)
  %107 = load i32, i32* @x.31
  %108 = load i32, i32* @y.32
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart291, label %originalBB47alteredBB

originalBBpart291:                                ; preds = %originalBB47
  br label %115

; <label>:115:                                    ; preds = %originalBBpart291, %91
  %116 = load i32, i32* @x.31
  %117 = load i32, i32* @y.32
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %115
  %124 = load i32, i32* %3, align 4
  %125 = icmp eq i32 %124, 0
  %126 = load i32, i32* @x.31
  %127 = load i32, i32* @y.32
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %125, label %160, label %134

; <label>:134:                                    ; preds = %originalBBpart295
  %135 = load i32, i32* @x.31
  %136 = load i32, i32* @y.32
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %originalBB97alteredBB, %134
  %143 = load i32, i32* %3, align 4
  %144 = icmp ult i32 %143, 421
  %145 = load i32, i32* @x.31
  %146 = load i32, i32* @y.32
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %144, label %153, label %177

; <label>:153:                                    ; preds = %originalBBpart299
  %154 = load i32, i32* %3, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = icmp ne i32 %158, 3
  br i1 %159, label %160, label %177

; <label>:160:                                    ; preds = %153, %originalBBpart295
  %161 = load i32, i32* @x.31
  %162 = load i32, i32* @y.32
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %originalBB101alteredBB, %160
  %169 = load i32, i32* @x.31
  %170 = load i32, i32* @y.32
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %200

; <label>:177:                                    ; preds = %153, %originalBBpart299
  %178 = load i32, i32* @x.31
  %179 = load i32, i32* @y.32
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %177
  %186 = load i32, i32* %3, align 4
  %187 = sdiv i32 %186, 20
  %188 = sub nsw i32 %187, 1
  %189 = load i32, i32* %3, align 4
  %190 = srem i32 %189, 20
  %191 = sub nsw i32 %190, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 926, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i32 0, i32 0), i32 %188, i32 %191)
  %192 = load i32, i32* @x.31
  %193 = load i32, i32* @y.32
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart2137, label %originalBB105alteredBB

originalBBpart2137:                               ; preds = %originalBB105
  br label %200

; <label>:200:                                    ; preds = %originalBBpart2137, %originalBBpart2103
  %201 = load i32, i32* @x.31
  %202 = load i32, i32* @y.32
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %originalBB139alteredBB, %200
  %209 = load i32, i32* %3, align 4
  %210 = icmp eq i32 %209, 0
  %211 = load i32, i32* @x.31
  %212 = load i32, i32* @y.32
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br i1 %210, label %242, label %219

; <label>:219:                                    ; preds = %originalBBpart2141
  %220 = load i32, i32* @x.31
  %221 = load i32, i32* @y.32
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %originalBB143alteredBB, %219
  %228 = load i32, i32* %3, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = icmp eq i32 %232, 0
  %234 = load i32, i32* @x.31
  %235 = load i32, i32* @y.32
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br i1 %233, label %242, label %259

; <label>:242:                                    ; preds = %originalBBpart2145, %originalBBpart2141
  %243 = load i32, i32* @x.31
  %244 = load i32, i32* @y.32
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %originalBB147alteredBB, %242
  %251 = load i32, i32* @x.31
  %252 = load i32, i32* @y.32
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br label %282

; <label>:259:                                    ; preds = %originalBBpart2145
  %260 = load i32, i32* @x.31
  %261 = load i32, i32* @y.32
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %259
  %268 = load i32, i32* %3, align 4
  %269 = sdiv i32 %268, 20
  %270 = sub nsw i32 %269, 1
  %271 = load i32, i32* %3, align 4
  %272 = srem i32 %271, 20
  %273 = sub nsw i32 %272, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 927, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i32 0, i32 0), i32 %270, i32 %273)
  %274 = load i32, i32* @x.31
  %275 = load i32, i32* @y.32
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart2182, label %originalBB151alteredBB

originalBBpart2182:                               ; preds = %originalBB151
  br label %282

; <label>:282:                                    ; preds = %originalBBpart2182, %originalBBpart2149
  %283 = load i32, i32* @move_history_pointer, align 4
  %284 = icmp sge i32 %283, 500
  br i1 %284, label %285, label %345

; <label>:285:                                    ; preds = %282
  store i32 51, i32* %5, align 4
  %286 = load i32, i32* @board_ko_pos, align 4
  store i32 %286, i32* %8, align 4
  %287 = load i32, i32* @white_captured, align 4
  store i32 %287, i32* %9, align 4
  %288 = load i32, i32* @black_captured, align 4
  store i32 %288, i32* %10, align 4
  %289 = getelementptr inbounds [421 x i8], [421 x i8]* %7, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %289, i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i64 421, i32 16, i1 false)
  %290 = load i32, i32* %5, align 4
  call void @replay_move_history(i32 %290)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i64 421, i32 16, i1 false)
  %291 = load i32, i32* @board_ko_pos, align 4
  store i32 %291, i32* @initial_board_ko_pos, align 4
  %292 = load i32, i32* @white_captured, align 4
  store i32 %292, i32* @initial_white_captured, align 4
  %293 = load i32, i32* @black_captured, align 4
  store i32 %293, i32* @initial_black_captured, align 4
  %294 = load i32, i32* %5, align 4
  store i32 %294, i32* %6, align 4
  br label %295

; <label>:295:                                    ; preds = %318, %285
  %296 = load i32, i32* %6, align 4
  %297 = load i32, i32* @move_history_pointer, align 4
  %298 = icmp slt i32 %296, %297
  br i1 %298, label %299, label %321

; <label>:299:                                    ; preds = %295
  %300 = load i32, i32* %6, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = load i32, i32* %6, align 4
  %305 = load i32, i32* %5, align 4
  %306 = sub nsw i32 %304, %305
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %307
  store i32 %303, i32* %308, align 4
  %309 = load i32, i32* %6, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = load i32, i32* %6, align 4
  %314 = load i32, i32* %5, align 4
  %315 = sub nsw i32 %313, %314
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %316
  store i32 %312, i32* %317, align 4
  br label %318

; <label>:318:                                    ; preds = %299
  %319 = load i32, i32* %6, align 4
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %6, align 4
  br label %295

; <label>:321:                                    ; preds = %295
  %322 = load i32, i32* @x.31
  %323 = load i32, i32* @y.32
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %originalBB184alteredBB, %321
  %330 = load i32, i32* %5, align 4
  %331 = load i32, i32* @move_history_pointer, align 4
  %332 = sub nsw i32 %331, %330
  store i32 %332, i32* @move_history_pointer, align 4
  %333 = getelementptr inbounds [421 x i8], [421 x i8]* %7, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i8* %333, i64 421, i32 16, i1 false)
  %334 = load i32, i32* %8, align 4
  store i32 %334, i32* @board_ko_pos, align 4
  %335 = load i32, i32* %9, align 4
  store i32 %335, i32* @white_captured, align 4
  %336 = load i32, i32* %10, align 4
  store i32 %336, i32* @black_captured, align 4
  %337 = load i32, i32* @x.31
  %338 = load i32, i32* @y.32
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart2196, label %originalBB184alteredBB

originalBBpart2196:                               ; preds = %originalBB184
  br label %345

; <label>:345:                                    ; preds = %originalBBpart2196, %282
  %346 = load i32, i32* @x.31
  %347 = load i32, i32* @y.32
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB198, label %originalBB198alteredBB

originalBB198:                                    ; preds = %originalBB198alteredBB, %345
  %354 = load i32, i32* %4, align 4
  %355 = load i32, i32* @move_history_pointer, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %356
  store i32 %354, i32* %357, align 4
  %358 = load i32, i32* %3, align 4
  %359 = load i32, i32* @move_history_pointer, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %360
  store i32 %358, i32* %361, align 4
  %362 = load i32, i32* @move_history_pointer, align 4
  %363 = add nsw i32 %362, 1
  store i32 %363, i32* @move_history_pointer, align 4
  %364 = load i32, i32* %3, align 4
  %365 = load i32, i32* %4, align 4
  call void @play_move_no_history(i32 %364, i32 %365)
  %366 = load i32, i32* @movenum, align 4
  %367 = add nsw i32 %366, 1
  store i32 %367, i32* @movenum, align 4
  %368 = load i32, i32* @x.31
  %369 = load i32, i32* @y.32
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart2211, label %originalBB198alteredBB

originalBBpart2211:                               ; preds = %originalBB198
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %376 = load i32, i32* %3, align 4
  %_ = sub i32 %376, 20
  %gen = mul i32 %_, 20
  %_2 = sub i32 0, %376
  %gen3 = add i32 %_2, 20
  %_4 = sub i32 0, %376
  %gen5 = add i32 %_4, 20
  %_6 = sub i32 0, %376
  %gen7 = add i32 %_6, 20
  %_8 = sub i32 0, %376
  %gen9 = add i32 %_8, 20
  %_10 = shl i32 %376, 20
  %_11 = sub i32 %376, 20
  %gen12 = mul i32 %_11, 20
  %377 = sdiv i32 %376, 20
  %_13 = sub i32 0, %377
  %gen14 = add i32 %_13, 1
  %_15 = sub i32 0, %377
  %gen16 = add i32 %_15, 1
  %_17 = shl i32 %377, 1
  %_18 = sub i32 %377, 1
  %gen19 = mul i32 %_18, 1
  %378 = sub nsw i32 %377, 1
  %379 = load i32, i32* %3, align 4
  %_20 = sub i32 %379, 20
  %gen21 = mul i32 %_20, 20
  %_22 = sub i32 0, %379
  %gen23 = add i32 %_22, 20
  %_24 = sub i32 0, %379
  %gen25 = add i32 %_24, 20
  %_26 = sub i32 0, %379
  %gen27 = add i32 %_26, 20
  %_28 = sub i32 %379, 20
  %gen29 = mul i32 %_28, 20
  %_30 = shl i32 %379, 20
  %380 = srem i32 %379, 20
  %_31 = sub i32 %380, 1
  %gen32 = mul i32 %_31, 1
  %_33 = sub i32 0, %380
  %gen34 = add i32 %_33, 1
  %_35 = shl i32 %380, 1
  %381 = sub nsw i32 %380, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 924, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 %378, i32 %381)
  br label %originalBB1

originalBB39alteredBB:                            ; preds = %originalBB39, %53
  %382 = load i32, i32* %4, align 4
  %383 = icmp eq i32 %382, 1
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %72
  %384 = load i32, i32* %4, align 4
  %385 = icmp eq i32 %384, 2
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %92
  %386 = load i32, i32* %3, align 4
  %_48 = sub i32 %386, 20
  %gen49 = mul i32 %_48, 20
  %_50 = sub i32 %386, 20
  %gen51 = mul i32 %_50, 20
  %_52 = sub i32 0, %386
  %gen53 = add i32 %_52, 20
  %_54 = sub i32 %386, 20
  %gen55 = mul i32 %_54, 20
  %_56 = sub i32 0, %386
  %gen57 = add i32 %_56, 20
  %_58 = sub i32 0, %386
  %gen59 = add i32 %_58, 20
  %387 = sdiv i32 %386, 20
  %_60 = sub i32 %387, 1
  %gen61 = mul i32 %_60, 1
  %_62 = sub i32 %387, 1
  %gen63 = mul i32 %_62, 1
  %_64 = sub i32 %387, 1
  %gen65 = mul i32 %_64, 1
  %_66 = shl i32 %387, 1
  %_67 = shl i32 %387, 1
  %_68 = sub i32 %387, 1
  %gen69 = mul i32 %_68, 1
  %388 = sub nsw i32 %387, 1
  %389 = load i32, i32* %3, align 4
  %_70 = shl i32 %389, 20
  %_71 = shl i32 %389, 20
  %_72 = sub i32 %389, 20
  %gen73 = mul i32 %_72, 20
  %_74 = sub i32 %389, 20
  %gen75 = mul i32 %_74, 20
  %_76 = sub i32 0, %389
  %gen77 = add i32 %_76, 20
  %_78 = shl i32 %389, 20
  %_79 = shl i32 %389, 20
  %390 = srem i32 %389, 20
  %_80 = sub i32 %390, 1
  %gen81 = mul i32 %_80, 1
  %_82 = sub i32 0, %390
  %gen83 = add i32 %_82, 1
  %_84 = shl i32 %390, 1
  %_85 = sub i32 %390, 1
  %gen86 = mul i32 %_85, 1
  %_87 = sub i32 0, %390
  %gen88 = add i32 %_87, 1
  %_89 = shl i32 %390, 1
  %391 = sub nsw i32 %390, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 925, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i32 0, i32 0), i32 %388, i32 %391)
  br label %originalBB47

originalBB93alteredBB:                            ; preds = %originalBB93, %115
  %392 = load i32, i32* %3, align 4
  %393 = icmp eq i32 %392, 0
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %134
  %394 = load i32, i32* %3, align 4
  %395 = icmp ult i32 %394, 421
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %160
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %177
  %396 = load i32, i32* %3, align 4
  %_106 = sub i32 %396, 20
  %gen107 = mul i32 %_106, 20
  %_108 = sub i32 0, %396
  %gen109 = add i32 %_108, 20
  %_110 = sub i32 %396, 20
  %gen111 = mul i32 %_110, 20
  %397 = sdiv i32 %396, 20
  %_112 = sub i32 0, %397
  %gen113 = add i32 %_112, 1
  %_114 = sub i32 0, %397
  %gen115 = add i32 %_114, 1
  %_116 = sub i32 0, %397
  %gen117 = add i32 %_116, 1
  %398 = sub nsw i32 %397, 1
  %399 = load i32, i32* %3, align 4
  %_118 = shl i32 %399, 20
  %_119 = sub i32 0, %399
  %gen120 = add i32 %_119, 20
  %_121 = shl i32 %399, 20
  %_122 = sub i32 %399, 20
  %gen123 = mul i32 %_122, 20
  %_124 = shl i32 %399, 20
  %400 = srem i32 %399, 20
  %_125 = sub i32 0, %400
  %gen126 = add i32 %_125, 1
  %_127 = sub i32 0, %400
  %gen128 = add i32 %_127, 1
  %_129 = sub i32 0, %400
  %gen130 = add i32 %_129, 1
  %_131 = sub i32 0, %400
  %gen132 = add i32 %_131, 1
  %_133 = sub i32 %400, 1
  %gen134 = mul i32 %_133, 1
  %_135 = shl i32 %400, 1
  %401 = sub nsw i32 %400, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 926, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i32 0, i32 0), i32 %398, i32 %401)
  br label %originalBB105

originalBB139alteredBB:                           ; preds = %originalBB139, %200
  %402 = load i32, i32* %3, align 4
  %403 = icmp eq i32 %402, 0
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %219
  %404 = load i32, i32* %3, align 4
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %405
  %407 = load i8, i8* %406, align 1
  %408 = zext i8 %407 to i32
  %409 = icmp eq i32 %408, 0
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %242
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %259
  %410 = load i32, i32* %3, align 4
  %_152 = sub i32 %410, 20
  %gen153 = mul i32 %_152, 20
  %_154 = sub i32 %410, 20
  %gen155 = mul i32 %_154, 20
  %_156 = shl i32 %410, 20
  %_157 = sub i32 0, %410
  %gen158 = add i32 %_157, 20
  %411 = sdiv i32 %410, 20
  %_159 = shl i32 %411, 1
  %_160 = shl i32 %411, 1
  %_161 = sub i32 0, %411
  %gen162 = add i32 %_161, 1
  %_163 = sub i32 %411, 1
  %gen164 = mul i32 %_163, 1
  %412 = sub nsw i32 %411, 1
  %413 = load i32, i32* %3, align 4
  %_165 = sub i32 0, %413
  %gen166 = add i32 %_165, 20
  %_167 = sub i32 %413, 20
  %gen168 = mul i32 %_167, 20
  %_169 = sub i32 0, %413
  %gen170 = add i32 %_169, 20
  %_171 = sub i32 %413, 20
  %gen172 = mul i32 %_171, 20
  %_173 = sub i32 %413, 20
  %gen174 = mul i32 %_173, 20
  %_175 = shl i32 %413, 20
  %_176 = shl i32 %413, 20
  %414 = srem i32 %413, 20
  %_177 = sub i32 %414, 1
  %gen178 = mul i32 %_177, 1
  %_179 = sub i32 %414, 1
  %gen180 = mul i32 %_179, 1
  %415 = sub nsw i32 %414, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 927, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i32 0, i32 0), i32 %412, i32 %415)
  br label %originalBB151

originalBB184alteredBB:                           ; preds = %originalBB184, %321
  %416 = load i32, i32* %5, align 4
  %417 = load i32, i32* @move_history_pointer, align 4
  %_185 = shl i32 %417, %416
  %_186 = sub i32 %417, %416
  %gen187 = mul i32 %_186, %416
  %_188 = sub i32 0, %417
  %gen189 = add i32 %_188, %416
  %_190 = sub i32 0, %417
  %gen191 = add i32 %_190, %416
  %_192 = sub i32 %417, %416
  %gen193 = mul i32 %_192, %416
  %_194 = shl i32 %417, %416
  %418 = sub nsw i32 %417, %416
  store i32 %418, i32* @move_history_pointer, align 4
  %419 = getelementptr inbounds [421 x i8], [421 x i8]* %7, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i8* %419, i64 421, i32 16, i1 false)
  %420 = load i32, i32* %8, align 4
  store i32 %420, i32* @board_ko_pos, align 4
  %421 = load i32, i32* %9, align 4
  store i32 %421, i32* @white_captured, align 4
  %422 = load i32, i32* %10, align 4
  store i32 %422, i32* @black_captured, align 4
  br label %originalBB184

originalBB198alteredBB:                           ; preds = %originalBB198, %345
  %423 = load i32, i32* %4, align 4
  %424 = load i32, i32* @move_history_pointer, align 4
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %425
  store i32 %423, i32* %426, align 4
  %427 = load i32, i32* %3, align 4
  %428 = load i32, i32* @move_history_pointer, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %429
  store i32 %427, i32* %430, align 4
  %431 = load i32, i32* @move_history_pointer, align 4
  %_199 = shl i32 %431, 1
  %_200 = shl i32 %431, 1
  %432 = add nsw i32 %431, 1
  store i32 %432, i32* @move_history_pointer, align 4
  %433 = load i32, i32* %3, align 4
  %434 = load i32, i32* %4, align 4
  call void @play_move_no_history(i32 %433, i32 %434)
  %435 = load i32, i32* @movenum, align 4
  %_201 = sub i32 0, %435
  %gen202 = add i32 %_201, 1
  %_203 = shl i32 %435, 1
  %_204 = shl i32 %435, 1
  %_205 = sub i32 0, %435
  %gen206 = add i32 %_205, 1
  %_207 = sub i32 0, %435
  %gen208 = add i32 %_207, 1
  %_209 = shl i32 %435, 1
  %436 = add nsw i32 %435, 1
  store i32 %436, i32* @movenum, align 4
  br label %originalBB198
}

; Function Attrs: noinline nounwind uwtable
define internal void @replay_move_history(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([421 x i8], [421 x i8]* @board, i32 0, i32 0), i8* getelementptr inbounds ([421 x i8], [421 x i8]* @initial_board, i32 0, i32 0), i64 421, i32 16, i1 false)
  %4 = load i32, i32* @initial_board_ko_pos, align 4
  store i32 %4, i32* @board_ko_pos, align 4
  %5 = load i32, i32* @initial_white_captured, align 4
  store i32 %5, i32* @white_captured, align 4
  %6 = load i32, i32* @initial_black_captured, align 4
  store i32 %6, i32* @black_captured, align 4
  call void @new_position()
  store i32 0, i32* %3, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart218, %1
  %8 = load i32, i32* @x.33
  %9 = load i32, i32* @y.34
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = load i32, i32* %3, align 4
  %17 = load i32, i32* %2, align 4
  %18 = icmp slt i32 %16, %17
  %19 = load i32, i32* @x.33
  %20 = load i32, i32* @y.34
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %71

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.33
  %29 = load i32, i32* @y.34
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %27
  %36 = load i32, i32* %3, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %3, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  call void @play_move_no_history(i32 %39, i32 %43)
  %44 = load i32, i32* @x.33
  %45 = load i32, i32* @y.34
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52

; <label>:52:                                     ; preds = %originalBBpart24
  %53 = load i32, i32* @x.33
  %54 = load i32, i32* @y.34
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %52
  %61 = load i32, i32* %3, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %3, align 4
  %63 = load i32, i32* @x.33
  %64 = load i32, i32* @y.34
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart218, label %originalBB6alteredBB

originalBBpart218:                                ; preds = %originalBB6
  br label %7

; <label>:71:                                     ; preds = %originalBBpart2
  %72 = load i32, i32* @x.33
  %73 = load i32, i32* @y.34
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %71
  %80 = load i32, i32* @x.33
  %81 = load i32, i32* @y.34
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %88 = load i32, i32* %3, align 4
  %89 = load i32, i32* %2, align 4
  %90 = icmp slt i32 %88, %89
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %91 = load i32, i32* %3, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = load i32, i32* %3, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  call void @play_move_no_history(i32 %94, i32 %98)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %99 = load i32, i32* %3, align 4
  %_ = sub i32 %99, 1
  %gen = mul i32 %_, 1
  %_7 = shl i32 %99, 1
  %_8 = sub i32 0, %99
  %gen9 = add i32 %_8, 1
  %_10 = shl i32 %99, 1
  %_11 = sub i32 %99, 1
  %gen12 = mul i32 %_11, 1
  %_13 = sub i32 0, %99
  %gen14 = add i32 %_13, 1
  %_15 = sub i32 %99, 1
  %gen16 = mul i32 %_15, 1
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %3, align 4
  br label %originalBB6

originalBB20alteredBB:                            ; preds = %originalBB20, %71
  br label %originalBB20
}

; Function Attrs: noinline nounwind uwtable
define internal void @play_move_no_history(i32, i32) #0 {
  %3 = load i32, i32* @x.35
  %4 = load i32, i32* @y.36
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %13 = load i32, i32* @board_ko_pos, align 4
  %14 = icmp ne i32 %13, 0
  %15 = load i32, i32* @x.35
  %16 = load i32, i32* @y.36
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %25

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = load i32, i32* @board_ko_pos, align 4
  call void @hashdata_invert_ko(%struct.Hash_data* @hashdata, i32 %24)
  br label %25

; <label>:25:                                     ; preds = %23, %originalBBpart2
  %26 = load i32, i32* @x.35
  %27 = load i32, i32* @y.36
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  store i32 0, i32* @board_ko_pos, align 4
  %34 = load i32, i32* %11, align 4
  %35 = icmp ne i32 %34, 0
  %36 = load i32, i32* @x.35
  %37 = load i32, i32* @y.36
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %128

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = load i32, i32* @x.35
  %46 = load i32, i32* @y.36
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %44
  %53 = load i32, i32* %11, align 4
  %54 = icmp ult i32 %53, 421
  %55 = load i32, i32* @x.35
  %56 = load i32, i32* @y.36
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %54, label %63, label %71

; <label>:63:                                     ; preds = %originalBBpart28
  %64 = load i32, i32* %11, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp ne i32 %68, 3
  br i1 %69, label %70, label %71

; <label>:70:                                     ; preds = %63
  br label %94

; <label>:71:                                     ; preds = %63, %originalBBpart28
  %72 = load i32, i32* @x.35
  %73 = load i32, i32* @y.36
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %71
  %80 = load i32, i32* %11, align 4
  %81 = sdiv i32 %80, 20
  %82 = sub nsw i32 %81, 1
  %83 = load i32, i32* %11, align 4
  %84 = srem i32 %83, 20
  %85 = sub nsw i32 %84, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 872, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %82, i32 %85)
  %86 = load i32, i32* @x.35
  %87 = load i32, i32* @y.36
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart232, label %originalBB10alteredBB

originalBBpart232:                                ; preds = %originalBB10
  br label %94

; <label>:94:                                     ; preds = %originalBBpart232, %70
  %95 = load i32, i32* @x.35
  %96 = load i32, i32* @y.36
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %94
  %103 = load i32, i32* %11, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = icmp eq i32 %107, 0
  %109 = load i32, i32* @x.35
  %110 = load i32, i32* @y.36
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %108, label %117, label %118

; <label>:117:                                    ; preds = %originalBBpart236
  br label %125

; <label>:118:                                    ; preds = %originalBBpart236
  %119 = load i32, i32* %11, align 4
  %120 = sdiv i32 %119, 20
  %121 = sub nsw i32 %120, 1
  %122 = load i32, i32* %11, align 4
  %123 = srem i32 %122, 20
  %124 = sub nsw i32 %123, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 873, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %121, i32 %124)
  br label %125

; <label>:125:                                    ; preds = %118, %117
  %126 = load i32, i32* %11, align 4
  %127 = load i32, i32* %12, align 4
  call void @do_play_move(i32 %126, i32 %127)
  br label %128

; <label>:128:                                    ; preds = %125, %originalBBpart24
  call void @new_position()
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %129 = alloca i32, align 4
  %130 = alloca i32, align 4
  store i32 %0, i32* %129, align 4
  store i32 %1, i32* %130, align 4
  %131 = load i32, i32* @board_ko_pos, align 4
  %132 = icmp ne i32 %131, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  store i32 0, i32* @board_ko_pos, align 4
  %133 = load i32, i32* %11, align 4
  %134 = icmp ne i32 %133, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %135 = load i32, i32* %11, align 4
  %136 = icmp ult i32 %135, 421
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %137 = load i32, i32* %11, align 4
  %_ = sub i32 %137, 20
  %gen = mul i32 %_, 20
  %_11 = shl i32 %137, 20
  %_12 = shl i32 %137, 20
  %_13 = shl i32 %137, 20
  %_14 = shl i32 %137, 20
  %_15 = sub i32 0, %137
  %gen16 = add i32 %_15, 20
  %138 = sdiv i32 %137, 20
  %_17 = sub i32 0, %138
  %gen18 = add i32 %_17, 1
  %_19 = sub i32 0, %138
  %gen20 = add i32 %_19, 1
  %_21 = sub i32 0, %138
  %gen22 = add i32 %_21, 1
  %139 = sub nsw i32 %138, 1
  %140 = load i32, i32* %11, align 4
  %_23 = sub i32 0, %140
  %gen24 = add i32 %_23, 20
  %141 = srem i32 %140, 20
  %_25 = sub i32 0, %141
  %gen26 = add i32 %_25, 1
  %_27 = sub i32 0, %141
  %gen28 = add i32 %_27, 1
  %_29 = sub i32 %141, 1
  %gen30 = mul i32 %_29, 1
  %142 = sub nsw i32 %141, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 872, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %139, i32 %142)
  br label %originalBB10

originalBB34alteredBB:                            ; preds = %originalBB34, %94
  %143 = load i32, i32* %11, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp eq i32 %147, 0
  br label %originalBB34
}

; Function Attrs: noinline nounwind uwtable
define i32 @undo_move(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* @stackp, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  br label %8

; <label>:7:                                      ; preds = %1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 976, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 -1, i32 -1)
  br label %8

; <label>:8:                                      ; preds = %7, %6
  %9 = load i32, i32* @move_history_pointer, align 4
  %10 = load i32, i32* %3, align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %8
  store i32 0, i32* %2, align 4
  br label %39

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.37
  %15 = load i32, i32* @y.38
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load i32, i32* @move_history_pointer, align 4
  %23 = load i32, i32* %3, align 4
  %24 = sub nsw i32 %22, %23
  call void @replay_move_history(i32 %24)
  %25 = load i32, i32* %3, align 4
  %26 = load i32, i32* @move_history_pointer, align 4
  %27 = sub nsw i32 %26, %25
  store i32 %27, i32* @move_history_pointer, align 4
  %28 = load i32, i32* %3, align 4
  %29 = load i32, i32* @movenum, align 4
  %30 = sub nsw i32 %29, %28
  store i32 %30, i32* @movenum, align 4
  store i32 1, i32* %2, align 4
  %31 = load i32, i32* @x.37
  %32 = load i32, i32* @y.38
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %12
  %40 = load i32, i32* %2, align 4
  ret i32 %40

originalBBalteredBB:                              ; preds = %originalBB, %13
  %41 = load i32, i32* @move_history_pointer, align 4
  %42 = load i32, i32* %3, align 4
  %_ = sub i32 %41, %42
  %gen = mul i32 %_, %42
  %_1 = shl i32 %41, %42
  %_2 = sub i32 0, %41
  %gen3 = add i32 %_2, %42
  %_4 = sub i32 0, %41
  %gen5 = add i32 %_4, %42
  %_6 = sub i32 0, %41
  %gen7 = add i32 %_6, %42
  %_8 = sub i32 0, %41
  %gen9 = add i32 %_8, %42
  %43 = sub nsw i32 %41, %42
  call void @replay_move_history(i32 %43)
  %44 = load i32, i32* %3, align 4
  %45 = load i32, i32* @move_history_pointer, align 4
  %_10 = sub i32 %45, %44
  %gen11 = mul i32 %_10, %44
  %_12 = sub i32 %45, %44
  %gen13 = mul i32 %_12, %44
  %_14 = sub i32 %45, %44
  %gen15 = mul i32 %_14, %44
  %46 = sub nsw i32 %45, %44
  store i32 %46, i32* @move_history_pointer, align 4
  %47 = load i32, i32* %3, align 4
  %48 = load i32, i32* @movenum, align 4
  %_16 = sub i32 0, %48
  %gen17 = add i32 %_16, %47
  %_18 = shl i32 %48, %47
  %_19 = sub i32 %48, %47
  %gen20 = mul i32 %_19, %47
  %_21 = shl i32 %48, %47
  %49 = sub nsw i32 %48, %47
  store i32 %49, i32* @movenum, align 4
  store i32 1, i32* %2, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @get_last_opponent_move(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* @move_history_pointer, align 4
  %6 = sub nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  br label %7

; <label>:7:                                      ; preds = %24, %1
  %8 = load i32, i32* %4, align 4
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %10, label %27

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %3, align 4
  %16 = sub nsw i32 3, %15
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %23

; <label>:18:                                     ; preds = %10
  %19 = load i32, i32* %4, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %2, align 4
  br label %28

; <label>:23:                                     ; preds = %10
  br label %24

; <label>:24:                                     ; preds = %23
  %25 = load i32, i32* %4, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %4, align 4
  br label %7

; <label>:27:                                     ; preds = %7
  store i32 0, i32* %2, align 4
  br label %28

; <label>:28:                                     ; preds = %27, %18
  %29 = load i32, i32* %2, align 4
  ret i32 %29
}

; Function Attrs: noinline nounwind uwtable
define i32 @get_last_move() #0 {
  %1 = load i32, i32* @x.41
  %2 = load i32, i32* @y.42
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = load i32, i32* @move_history_pointer, align 4
  %11 = icmp eq i32 %10, 0
  %12 = load i32, i32* @x.41
  %13 = load i32, i32* @y.42
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %11, label %20, label %21

; <label>:20:                                     ; preds = %originalBBpart2
  store i32 0, i32* %9, align 4
  br label %27

; <label>:21:                                     ; preds = %originalBBpart2
  %22 = load i32, i32* @move_history_pointer, align 4
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_pos, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %9, align 4
  br label %27

; <label>:27:                                     ; preds = %21, %20
  %28 = load i32, i32* %9, align 4
  ret i32 %28

originalBBalteredBB:                              ; preds = %originalBB, %0
  %29 = alloca i32, align 4
  %30 = load i32, i32* @move_history_pointer, align 4
  %31 = icmp eq i32 %30, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @get_last_player() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @move_history_pointer, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %11

; <label>:5:                                      ; preds = %0
  %6 = load i32, i32* @move_history_pointer, align 4
  %7 = sub nsw i32 %6, 1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [500 x i32], [500 x i32]* @move_history_color, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %1, align 4
  br label %11

; <label>:11:                                     ; preds = %5, %4
  %12 = load i32, i32* @x.43
  %13 = load i32, i32* @y.44
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = load i32, i32* %1, align 4
  %21 = load i32, i32* @x.43
  %22 = load i32, i32* @y.44
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %20

originalBBalteredBB:                              ; preds = %originalBB, %11
  %29 = load i32, i32* %1, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @is_pass(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define i32 @is_legal(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %2
  store i32 1, i32* %3, align 4
  br label %125

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = icmp ult i32 %10, 421
  br i1 %11, label %12, label %20

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* %4, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = icmp ne i32 %17, 3
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %12
  br label %27

; <label>:20:                                     ; preds = %12, %9
  %21 = load i32, i32* %4, align 4
  %22 = sdiv i32 %21, 20
  %23 = sub nsw i32 %22, 1
  %24 = load i32, i32* %4, align 4
  %25 = srem i32 %24, 20
  %26 = sub nsw i32 %25, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1059, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %23, i32 %26)
  br label %27

; <label>:27:                                     ; preds = %20, %19
  %28 = load i32, i32* %4, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %35

; <label>:34:                                     ; preds = %27
  store i32 0, i32* %3, align 4
  br label %125

; <label>:35:                                     ; preds = %27
  %36 = load i32, i32* %4, align 4
  %37 = load i32, i32* @board_ko_pos, align 4
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %39, label %77

; <label>:39:                                     ; preds = %35
  %40 = load i32, i32* @x.47
  %41 = load i32, i32* @y.48
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = load i32, i32* %4, align 4
  %49 = sub nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = load i32, i32* %5, align 4
  %55 = sub nsw i32 3, %54
  %56 = icmp eq i32 %53, %55
  %57 = load i32, i32* @x.47
  %58 = load i32, i32* @y.48
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %56, label %75, label %65

; <label>:65:                                     ; preds = %originalBBpart2
  %66 = load i32, i32* %4, align 4
  %67 = add nsw i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = load i32, i32* %5, align 4
  %73 = sub nsw i32 3, %72
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %76

; <label>:75:                                     ; preds = %65, %originalBBpart2
  store i32 0, i32* %3, align 4
  br label %125

; <label>:76:                                     ; preds = %65
  br label %77

; <label>:77:                                     ; preds = %76, %35
  %78 = load i32, i32* @x.47
  %79 = load i32, i32* @y.48
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %77
  %86 = load i32, i32* @stackp, align 4
  %87 = icmp sge i32 %86, 359
  %88 = load i32, i32* @x.47
  %89 = load i32, i32* @y.48
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %87, label %96, label %99

; <label>:96:                                     ; preds = %originalBBpart222
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.25, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  br label %125

; <label>:99:                                     ; preds = %originalBBpart222
  %100 = load i32, i32* @allow_suicide, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %124, label %102

; <label>:102:                                    ; preds = %99
  %103 = load i32, i32* %4, align 4
  %104 = load i32, i32* %5, align 4
  %105 = call i32 @is_suicide(i32 %103, i32 %104)
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %124

; <label>:107:                                    ; preds = %102
  %108 = load i32, i32* @x.47
  %109 = load i32, i32* @y.48
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %107
  store i32 0, i32* %3, align 4
  %116 = load i32, i32* @x.47
  %117 = load i32, i32* @y.48
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br label %125

; <label>:124:                                    ; preds = %102, %99
  store i32 1, i32* %3, align 4
  br label %125

; <label>:125:                                    ; preds = %124, %originalBBpart226, %96, %75, %34, %8
  %126 = load i32, i32* %3, align 4
  ret i32 %126

originalBBalteredBB:                              ; preds = %originalBB, %39
  %127 = load i32, i32* %4, align 4
  %_ = sub i32 0, %127
  %gen = add i32 %_, 1
  %_1 = sub i32 0, %127
  %gen2 = add i32 %_1, 1
  %_3 = sub i32 0, %127
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 0, %127
  %gen6 = add i32 %_5, 1
  %_7 = sub i32 %127, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 %127, 1
  %gen10 = mul i32 %_9, 1
  %_11 = shl i32 %127, 1
  %_12 = sub i32 %127, 1
  %gen13 = mul i32 %_12, 1
  %128 = sub nsw i32 %127, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = load i32, i32* %5, align 4
  %_14 = sub i32 3, %133
  %gen15 = mul i32 %_14, %133
  %_16 = shl i32 3, %133
  %_17 = shl i32 3, %133
  %_18 = sub i32 0, 3
  %gen19 = add i32 %_18, %133
  %134 = sub nsw i32 3, %133
  %135 = icmp eq i32 %132, %134
  br label %originalBB

originalBB20alteredBB:                            ; preds = %originalBB20, %77
  %136 = load i32, i32* @stackp, align 4
  %137 = icmp sge i32 %136, 359
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %107
  store i32 0, i32* %3, align 4
  br label %originalBB24
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define i32 @is_suicide(i32, i32) #0 {
  %3 = load i32, i32* @x.49
  %4 = load i32, i32* @y.50
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %12, align 4
  store i32 %1, i32* %13, align 4
  %14 = load i32, i32* %12, align 4
  %15 = icmp ult i32 %14, 421
  %16 = load i32, i32* @x.49
  %17 = load i32, i32* @y.50
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %32

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* %12, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp ne i32 %29, 3
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %24
  br label %55

; <label>:32:                                     ; preds = %24, %originalBBpart2
  %33 = load i32, i32* @x.49
  %34 = load i32, i32* @y.50
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  %41 = load i32, i32* %12, align 4
  %42 = sdiv i32 %41, 20
  %43 = sub nsw i32 %42, 1
  %44 = load i32, i32* %12, align 4
  %45 = srem i32 %44, 20
  %46 = sub nsw i32 %45, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1104, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %43, i32 %46)
  %47 = load i32, i32* @x.49
  %48 = load i32, i32* @y.50
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart245, label %originalBB1alteredBB

originalBBpart245:                                ; preds = %originalBB1
  br label %55

; <label>:55:                                     ; preds = %originalBBpart245, %31
  %56 = load i32, i32* %12, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

; <label>:62:                                     ; preds = %55
  br label %70

; <label>:63:                                     ; preds = %55
  %64 = load i32, i32* %12, align 4
  %65 = sdiv i32 %64, 20
  %66 = sub nsw i32 %65, 1
  %67 = load i32, i32* %12, align 4
  %68 = srem i32 %67, 20
  %69 = sub nsw i32 %68, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1105, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %66, i32 %69)
  br label %70

; <label>:70:                                     ; preds = %63, %62
  %71 = load i32, i32* %12, align 4
  %72 = add nsw i32 %71, 20
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %109, label %78

; <label>:78:                                     ; preds = %70
  %79 = load i32, i32* %12, align 4
  %80 = add nsw i32 %79, 20
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = icmp ne i32 %84, 3
  br i1 %85, label %86, label %126

; <label>:86:                                     ; preds = %78
  %87 = load i32, i32* %12, align 4
  %88 = add nsw i32 %87, 20
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = load i32, i32* %13, align 4
  %94 = icmp eq i32 %92, %93
  %95 = zext i1 %94 to i32
  %96 = load i32, i32* %12, align 4
  %97 = add nsw i32 %96, 20
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %101
  %103 = getelementptr inbounds %struct.string_data, %struct.string_data* %102, i32 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 1
  %106 = zext i1 %105 to i32
  %107 = xor i32 %95, %106
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %126

; <label>:109:                                    ; preds = %86, %70
  %110 = load i32, i32* @x.49
  %111 = load i32, i32* @y.50
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %109
  store i32 0, i32* %11, align 4
  %118 = load i32, i32* @x.49
  %119 = load i32, i32* @y.50
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %311

; <label>:126:                                    ; preds = %86, %78
  %127 = load i32, i32* %12, align 4
  %128 = sub nsw i32 %127, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %181, label %134

; <label>:134:                                    ; preds = %126
  %135 = load i32, i32* %12, align 4
  %136 = sub nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = icmp ne i32 %140, 3
  br i1 %141, label %142, label %182

; <label>:142:                                    ; preds = %134
  %143 = load i32, i32* @x.49
  %144 = load i32, i32* @y.50
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %142
  %151 = load i32, i32* %12, align 4
  %152 = sub nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = load i32, i32* %13, align 4
  %158 = icmp eq i32 %156, %157
  %159 = zext i1 %158 to i32
  %160 = load i32, i32* %12, align 4
  %161 = sub nsw i32 %160, 1
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %165
  %167 = getelementptr inbounds %struct.string_data, %struct.string_data* %166, i32 0, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  %170 = zext i1 %169 to i32
  %171 = xor i32 %159, %170
  %172 = icmp ne i32 %171, 0
  %173 = load i32, i32* @x.49
  %174 = load i32, i32* @y.50
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart276, label %originalBB51alteredBB

originalBBpart276:                                ; preds = %originalBB51
  br i1 %172, label %181, label %182

; <label>:181:                                    ; preds = %originalBBpart276, %126
  store i32 0, i32* %11, align 4
  br label %311

; <label>:182:                                    ; preds = %originalBBpart276, %134
  %183 = load i32, i32* %12, align 4
  %184 = sub nsw i32 %183, 20
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %221, label %190

; <label>:190:                                    ; preds = %182
  %191 = load i32, i32* %12, align 4
  %192 = sub nsw i32 %191, 20
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = icmp ne i32 %196, 3
  br i1 %197, label %198, label %222

; <label>:198:                                    ; preds = %190
  %199 = load i32, i32* %12, align 4
  %200 = sub nsw i32 %199, 20
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = load i32, i32* %13, align 4
  %206 = icmp eq i32 %204, %205
  %207 = zext i1 %206 to i32
  %208 = load i32, i32* %12, align 4
  %209 = sub nsw i32 %208, 20
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %213
  %215 = getelementptr inbounds %struct.string_data, %struct.string_data* %214, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, 1
  %218 = zext i1 %217 to i32
  %219 = xor i32 %207, %218
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %221, label %222

; <label>:221:                                    ; preds = %198, %182
  store i32 0, i32* %11, align 4
  br label %311

; <label>:222:                                    ; preds = %198, %190
  %223 = load i32, i32* %12, align 4
  %224 = add nsw i32 %223, 1
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %277, label %230

; <label>:230:                                    ; preds = %222
  %231 = load i32, i32* @x.49
  %232 = load i32, i32* @y.50
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %230
  %239 = load i32, i32* %12, align 4
  %240 = add nsw i32 %239, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = icmp ne i32 %244, 3
  %246 = load i32, i32* @x.49
  %247 = load i32, i32* @y.50
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart292, label %originalBB78alteredBB

originalBBpart292:                                ; preds = %originalBB78
  br i1 %245, label %254, label %294

; <label>:254:                                    ; preds = %originalBBpart292
  %255 = load i32, i32* %12, align 4
  %256 = add nsw i32 %255, 1
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %257
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i32
  %261 = load i32, i32* %13, align 4
  %262 = icmp eq i32 %260, %261
  %263 = zext i1 %262 to i32
  %264 = load i32, i32* %12, align 4
  %265 = add nsw i32 %264, 1
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %266
  %268 = load i32, i32* %267, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %269
  %271 = getelementptr inbounds %struct.string_data, %struct.string_data* %270, i32 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 1
  %274 = zext i1 %273 to i32
  %275 = xor i32 %263, %274
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %277, label %294

; <label>:277:                                    ; preds = %254, %222
  %278 = load i32, i32* @x.49
  %279 = load i32, i32* @y.50
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %277
  store i32 0, i32* %11, align 4
  %286 = load i32, i32* @x.49
  %287 = load i32, i32* @y.50
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %311

; <label>:294:                                    ; preds = %254, %originalBBpart292
  %295 = load i32, i32* @x.49
  %296 = load i32, i32* @y.50
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %294
  store i32 1, i32* %11, align 4
  %303 = load i32, i32* @x.49
  %304 = load i32, i32* @y.50
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %311

; <label>:311:                                    ; preds = %originalBBpart2100, %originalBBpart296, %221, %181, %originalBBpart249
  %312 = load i32, i32* %11, align 4
  ret i32 %312

originalBBalteredBB:                              ; preds = %originalBB, %2
  %313 = alloca i32, align 4
  %314 = alloca i32, align 4
  %315 = alloca i32, align 4
  store i32 %0, i32* %314, align 4
  store i32 %1, i32* %315, align 4
  %316 = load i32, i32* %314, align 4
  %317 = icmp ult i32 %316, 421
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %318 = load i32, i32* %12, align 4
  %_ = shl i32 %318, 20
  %_2 = sub i32 0, %318
  %gen = add i32 %_2, 20
  %_3 = shl i32 %318, 20
  %_4 = sub i32 0, %318
  %gen5 = add i32 %_4, 20
  %319 = sdiv i32 %318, 20
  %_6 = sub i32 0, %319
  %gen7 = add i32 %_6, 1
  %_8 = shl i32 %319, 1
  %_9 = sub i32 0, %319
  %gen10 = add i32 %_9, 1
  %_11 = sub i32 0, %319
  %gen12 = add i32 %_11, 1
  %_13 = shl i32 %319, 1
  %_14 = sub i32 %319, 1
  %gen15 = mul i32 %_14, 1
  %_16 = shl i32 %319, 1
  %320 = sub nsw i32 %319, 1
  %321 = load i32, i32* %12, align 4
  %_17 = sub i32 %321, 20
  %gen18 = mul i32 %_17, 20
  %_19 = sub i32 0, %321
  %gen20 = add i32 %_19, 20
  %_21 = sub i32 0, %321
  %gen22 = add i32 %_21, 20
  %_23 = sub i32 0, %321
  %gen24 = add i32 %_23, 20
  %_25 = sub i32 0, %321
  %gen26 = add i32 %_25, 20
  %_27 = sub i32 %321, 20
  %gen28 = mul i32 %_27, 20
  %322 = srem i32 %321, 20
  %_29 = sub i32 0, %322
  %gen30 = add i32 %_29, 1
  %_31 = shl i32 %322, 1
  %_32 = shl i32 %322, 1
  %_33 = sub i32 0, %322
  %gen34 = add i32 %_33, 1
  %_35 = shl i32 %322, 1
  %_36 = sub i32 0, %322
  %gen37 = add i32 %_36, 1
  %_38 = shl i32 %322, 1
  %_39 = sub i32 %322, 1
  %gen40 = mul i32 %_39, 1
  %_41 = shl i32 %322, 1
  %_42 = sub i32 %322, 1
  %gen43 = mul i32 %_42, 1
  %323 = sub nsw i32 %322, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1104, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %320, i32 %323)
  br label %originalBB1

originalBB47alteredBB:                            ; preds = %originalBB47, %109
  store i32 0, i32* %11, align 4
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %142
  %324 = load i32, i32* %12, align 4
  %_52 = sub i32 %324, 1
  %gen53 = mul i32 %_52, 1
  %_54 = shl i32 %324, 1
  %_55 = sub i32 0, %324
  %gen56 = add i32 %_55, 1
  %325 = sub nsw i32 %324, 1
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %326
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i32
  %330 = load i32, i32* %13, align 4
  %331 = icmp eq i32 %329, %330
  %332 = zext i1 %331 to i32
  %333 = load i32, i32* %12, align 4
  %_57 = sub i32 %333, 1
  %gen58 = mul i32 %_57, 1
  %_59 = sub i32 %333, 1
  %gen60 = mul i32 %_59, 1
  %_61 = shl i32 %333, 1
  %_62 = sub i32 0, %333
  %gen63 = add i32 %_62, 1
  %_64 = shl i32 %333, 1
  %_65 = shl i32 %333, 1
  %_66 = sub i32 %333, 1
  %gen67 = mul i32 %_66, 1
  %_68 = shl i32 %333, 1
  %334 = sub nsw i32 %333, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %335
  %337 = load i32, i32* %336, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %338
  %340 = getelementptr inbounds %struct.string_data, %struct.string_data* %339, i32 0, i32 3
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 1
  %343 = zext i1 %342 to i32
  %_69 = sub i32 0, %332
  %gen70 = add i32 %_69, %343
  %_71 = sub i32 %332, %343
  %gen72 = mul i32 %_71, %343
  %_73 = shl i32 %332, %343
  %_74 = shl i32 %332, %343
  %344 = xor i32 %332, %343
  %345 = icmp ne i32 %344, 0
  br label %originalBB51

originalBB78alteredBB:                            ; preds = %originalBB78, %230
  %346 = load i32, i32* %12, align 4
  %_79 = sub i32 0, %346
  %gen80 = add i32 %_79, 1
  %_81 = sub i32 0, %346
  %gen82 = add i32 %_81, 1
  %_83 = shl i32 %346, 1
  %_84 = sub i32 %346, 1
  %gen85 = mul i32 %_84, 1
  %_86 = sub i32 %346, 1
  %gen87 = mul i32 %_86, 1
  %_88 = sub i32 0, %346
  %gen89 = add i32 %_88, 1
  %_90 = shl i32 %346, 1
  %347 = add nsw i32 %346, 1
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %348
  %350 = load i8, i8* %349, align 1
  %351 = zext i8 %350 to i32
  %352 = icmp ne i32 %351, 3
  br label %originalBB78

originalBB94alteredBB:                            ; preds = %originalBB94, %277
  store i32 0, i32* %11, align 4
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %294
  store i32 1, i32* %11, align 4
  br label %originalBB98
}

; Function Attrs: noinline nounwind uwtable
define i32 @is_illegal_ko_capture(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp ult i32 %5, 421
  br i1 %6, label %7, label %15

; <label>:7:                                      ; preds = %2
  %8 = load i32, i32* %3, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 3
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %7
  br label %38

; <label>:15:                                     ; preds = %7, %2
  %16 = load i32, i32* @x.51
  %17 = load i32, i32* @y.52
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  %24 = load i32, i32* %3, align 4
  %25 = sdiv i32 %24, 20
  %26 = sub nsw i32 %25, 1
  %27 = load i32, i32* %3, align 4
  %28 = srem i32 %27, 20
  %29 = sub nsw i32 %28, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1139, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %26, i32 %29)
  %30 = load i32, i32* @x.51
  %31 = load i32, i32* @y.52
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

; <label>:38:                                     ; preds = %originalBBpart2, %14
  %39 = load i32, i32* %3, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %38
  br label %53

; <label>:46:                                     ; preds = %38
  %47 = load i32, i32* %3, align 4
  %48 = sdiv i32 %47, 20
  %49 = sub nsw i32 %48, 1
  %50 = load i32, i32* %3, align 4
  %51 = srem i32 %50, 20
  %52 = sub nsw i32 %51, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1140, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %49, i32 %52)
  br label %53

; <label>:53:                                     ; preds = %46, %45
  %54 = load i32, i32* %3, align 4
  %55 = load i32, i32* @board_ko_pos, align 4
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %57, label %95

; <label>:57:                                     ; preds = %53
  %58 = load i32, i32* %3, align 4
  %59 = sub nsw i32 %58, 1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = load i32, i32* %4, align 4
  %65 = sub nsw i32 3, %64
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %77, label %67

; <label>:67:                                     ; preds = %57
  %68 = load i32, i32* %3, align 4
  %69 = add nsw i32 %68, 1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = load i32, i32* %4, align 4
  %75 = sub nsw i32 3, %74
  %76 = icmp eq i32 %73, %75
  br label %77

; <label>:77:                                     ; preds = %67, %57
  %78 = phi i1 [ true, %57 ], [ %76, %67 ]
  %79 = load i32, i32* @x.51
  %80 = load i32, i32* @y.52
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %77
  %87 = load i32, i32* @x.51
  %88 = load i32, i32* @y.52
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %95

; <label>:95:                                     ; preds = %originalBBpart221, %53
  %96 = phi i1 [ false, %53 ], [ %78, %originalBBpart221 ]
  %97 = zext i1 %96 to i32
  ret i32 %97

originalBBalteredBB:                              ; preds = %originalBB, %15
  %98 = load i32, i32* %3, align 4
  %_ = sub i32 0, %98
  %gen = add i32 %_, 20
  %_1 = sub i32 %98, 20
  %gen2 = mul i32 %_1, 20
  %99 = sdiv i32 %98, 20
  %_3 = sub i32 0, %99
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 0, %99
  %gen6 = add i32 %_5, 1
  %_7 = shl i32 %99, 1
  %_8 = sub i32 %99, 1
  %gen9 = mul i32 %_8, 1
  %_10 = shl i32 %99, 1
  %_11 = shl i32 %99, 1
  %_12 = sub i32 %99, 1
  %gen13 = mul i32 %_12, 1
  %100 = sub nsw i32 %99, 1
  %101 = load i32, i32* %3, align 4
  %_14 = sub i32 0, %101
  %gen15 = add i32 %_14, 20
  %_16 = sub i32 %101, 20
  %gen17 = mul i32 %_16, 20
  %_18 = shl i32 %101, 20
  %102 = srem i32 %101, 20
  %103 = sub nsw i32 %102, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1139, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %100, i32 %103)
  br label %originalBB

originalBB19alteredBB:                            ; preds = %originalBB19, %77
  br label %originalBB19
}

; Function Attrs: noinline nounwind uwtable
define i32 @komaster_trymove(i32, i32, i8*, i32, i32, i32, i32*, i32*, i32*, i32) #0 {
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i32 %0, i32* %12, align 4
  store i32 %1, i32* %13, align 4
  store i8* %2, i8** %14, align 8
  store i32 %3, i32* %15, align 4
  store i32 %4, i32* %16, align 4
  store i32 %5, i32* %17, align 4
  store i32* %6, i32** %18, align 8
  store i32* %7, i32** %19, align 8
  store i32* %8, i32** %20, align 8
  store i32 %9, i32* %21, align 4
  %26 = load i32, i32* %13, align 4
  %27 = sub nsw i32 3, %26
  store i32 %27, i32* %22, align 4
  %28 = load i32, i32* @board_ko_pos, align 4
  store i32 %28, i32* %25, align 4
  %29 = load i32, i32* %16, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %34, label %31

; <label>:31:                                     ; preds = %10
  %32 = load i32, i32* %16, align 4
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %34, label %72

; <label>:34:                                     ; preds = %31, %10
  %35 = load i32, i32* %17, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %100, label %41

; <label>:41:                                     ; preds = %34
  %42 = load i32, i32* %17, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %100, label %48

; <label>:48:                                     ; preds = %41
  %49 = load i32, i32* @x.53
  %50 = load i32, i32* @y.54
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %48
  %57 = load i32, i32* %17, align 4
  %58 = call i32 @is_ko(i32 %57, i32 2, i32* null)
  %59 = icmp ne i32 %58, 0
  %60 = load i32, i32* @x.53
  %61 = load i32, i32* @y.54
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %59, label %72, label %68

; <label>:68:                                     ; preds = %originalBBpart2
  %69 = load i32, i32* %17, align 4
  %70 = call i32 @is_suicide(i32 %69, i32 2)
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %100, label %72

; <label>:72:                                     ; preds = %68, %originalBBpart2, %31
  %73 = load i32, i32* %16, align 4
  %74 = icmp eq i32 %73, 2
  br i1 %74, label %78, label %75

; <label>:75:                                     ; preds = %72
  %76 = load i32, i32* %16, align 4
  %77 = icmp eq i32 %76, 5
  br i1 %77, label %78, label %101

; <label>:78:                                     ; preds = %75, %72
  %79 = load i32, i32* %17, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %100, label %85

; <label>:85:                                     ; preds = %78
  %86 = load i32, i32* %17, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 2
  br i1 %91, label %100, label %92

; <label>:92:                                     ; preds = %85
  %93 = load i32, i32* %17, align 4
  %94 = call i32 @is_ko(i32 %93, i32 1, i32* null)
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %101, label %96

; <label>:96:                                     ; preds = %92
  %97 = load i32, i32* %17, align 4
  %98 = call i32 @is_suicide(i32 %97, i32 1)
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %101

; <label>:100:                                    ; preds = %96, %85, %78, %68, %41, %34
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  br label %101

; <label>:101:                                    ; preds = %100, %96, %92, %75
  %102 = load i32, i32* %16, align 4
  %103 = load i32*, i32** %18, align 8
  store i32 %102, i32* %103, align 4
  %104 = load i32, i32* %17, align 4
  %105 = load i32*, i32** %19, align 8
  store i32 %104, i32* %105, align 4
  %106 = load i32*, i32** %20, align 8
  store i32 0, i32* %106, align 4
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %13, align 4
  %109 = call i32 @is_ko(i32 %107, i32 %108, i32* %24)
  store i32 %109, i32* %23, align 4
  %110 = load i32, i32* %23, align 4
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %135, label %112

; <label>:112:                                    ; preds = %101
  %113 = load i32, i32* @x.53
  %114 = load i32, i32* @y.54
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %112
  %121 = load i32, i32* %16, align 4
  %122 = icmp eq i32 %121, 6
  %123 = load i32, i32* @x.53
  %124 = load i32, i32* @y.54
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %122, label %131, label %134

; <label>:131:                                    ; preds = %originalBBpart24
  %132 = load i32*, i32** %18, align 8
  store i32 0, i32* %132, align 4
  %133 = load i32*, i32** %19, align 8
  store i32 0, i32* %133, align 4
  br label %134

; <label>:134:                                    ; preds = %131, %originalBBpart24
  br label %342

; <label>:135:                                    ; preds = %101
  %136 = load i32, i32* @x.53
  %137 = load i32, i32* @y.54
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %135
  %144 = load i32, i32* %16, align 4
  %145 = load i32, i32* %22, align 4
  %146 = icmp eq i32 %144, %145
  %147 = load i32, i32* @x.53
  %148 = load i32, i32* @y.54
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %146, label %155, label %160

; <label>:155:                                    ; preds = %originalBBpart28
  %156 = load i32, i32* %12, align 4
  %157 = load i32, i32* %17, align 4
  %158 = icmp eq i32 %156, %157
  br i1 %158, label %159, label %160

; <label>:159:                                    ; preds = %155
  store i32 0, i32* %11, align 4
  br label %474

; <label>:160:                                    ; preds = %155, %originalBBpart28
  %161 = load i32, i32* @x.53
  %162 = load i32, i32* @y.54
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %160
  %169 = load i32, i32* %16, align 4
  %170 = icmp eq i32 %169, 4
  %171 = load i32, i32* @x.53
  %172 = load i32, i32* @y.54
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %170, label %182, label %179

; <label>:179:                                    ; preds = %originalBBpart212
  %180 = load i32, i32* %16, align 4
  %181 = icmp eq i32 %180, 5
  br i1 %181, label %182, label %199

; <label>:182:                                    ; preds = %179, %originalBBpart212
  %183 = load i32, i32* @x.53
  %184 = load i32, i32* @y.54
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %182
  store i32 0, i32* %11, align 4
  %191 = load i32, i32* @x.53
  %192 = load i32, i32* @y.54
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %474

; <label>:199:                                    ; preds = %179
  %200 = load i32, i32* %16, align 4
  %201 = load i32, i32* %13, align 4
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %203, label %260

; <label>:203:                                    ; preds = %199
  %204 = load i32, i32* @x.53
  %205 = load i32, i32* @y.54
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %203
  %212 = load i32, i32* %24, align 4
  %213 = load i32, i32* %17, align 4
  %214 = add nsw i32 %213, 20
  %215 = sub nsw i32 %214, 1
  %216 = icmp eq i32 %212, %215
  %217 = load i32, i32* @x.53
  %218 = load i32, i32* @y.54
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBBpart231, label %originalBB18alteredBB

originalBBpart231:                                ; preds = %originalBB18
  br i1 %216, label %260, label %225

; <label>:225:                                    ; preds = %originalBBpart231
  %226 = load i32, i32* %24, align 4
  %227 = load i32, i32* %17, align 4
  %228 = sub nsw i32 %227, 20
  %229 = sub nsw i32 %228, 1
  %230 = icmp eq i32 %226, %229
  br i1 %230, label %260, label %231

; <label>:231:                                    ; preds = %225
  %232 = load i32, i32* %24, align 4
  %233 = load i32, i32* %17, align 4
  %234 = sub nsw i32 %233, 20
  %235 = add nsw i32 %234, 1
  %236 = icmp eq i32 %232, %235
  br i1 %236, label %260, label %237

; <label>:237:                                    ; preds = %231
  %238 = load i32, i32* %24, align 4
  %239 = load i32, i32* %17, align 4
  %240 = add nsw i32 %239, 20
  %241 = add nsw i32 %240, 1
  %242 = icmp eq i32 %238, %241
  br i1 %242, label %260, label %243

; <label>:243:                                    ; preds = %237
  %244 = load i32, i32* @x.53
  %245 = load i32, i32* @y.54
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %243
  store i32 0, i32* %11, align 4
  %252 = load i32, i32* @x.53
  %253 = load i32, i32* @y.54
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %474

; <label>:260:                                    ; preds = %237, %231, %225, %originalBBpart231, %199
  %261 = load i32, i32* @x.53
  %262 = load i32, i32* @y.54
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %260
  %269 = load i32, i32* %16, align 4
  %270 = icmp eq i32 %269, 6
  %271 = load i32, i32* @x.53
  %272 = load i32, i32* @y.54
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %270, label %279, label %341

; <label>:279:                                    ; preds = %originalBBpart239
  %280 = load i32, i32* %12, align 4
  %281 = load i32, i32* @board_ko_pos, align 4
  %282 = icmp ne i32 %280, %281
  br i1 %282, label %283, label %340

; <label>:283:                                    ; preds = %279
  %284 = load i32, i32* %24, align 4
  %285 = load i32, i32* %17, align 4
  %286 = add nsw i32 %285, 20
  %287 = sub nsw i32 %286, 1
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %340, label %289

; <label>:289:                                    ; preds = %283
  %290 = load i32, i32* @x.53
  %291 = load i32, i32* @y.54
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %289
  %298 = load i32, i32* %24, align 4
  %299 = load i32, i32* %17, align 4
  %300 = sub nsw i32 %299, 20
  %301 = sub nsw i32 %300, 1
  %302 = icmp eq i32 %298, %301
  %303 = load i32, i32* @x.53
  %304 = load i32, i32* @y.54
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart255, label %originalBB41alteredBB

originalBBpart255:                                ; preds = %originalBB41
  br i1 %302, label %340, label %311

; <label>:311:                                    ; preds = %originalBBpart255
  %312 = load i32, i32* @x.53
  %313 = load i32, i32* @y.54
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %311
  %320 = load i32, i32* %24, align 4
  %321 = load i32, i32* %17, align 4
  %322 = sub nsw i32 %321, 20
  %323 = add nsw i32 %322, 1
  %324 = icmp eq i32 %320, %323
  %325 = load i32, i32* @x.53
  %326 = load i32, i32* @y.54
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart279, label %originalBB57alteredBB

originalBBpart279:                                ; preds = %originalBB57
  br i1 %324, label %340, label %333

; <label>:333:                                    ; preds = %originalBBpart279
  %334 = load i32, i32* %24, align 4
  %335 = load i32, i32* %17, align 4
  %336 = add nsw i32 %335, 20
  %337 = add nsw i32 %336, 1
  %338 = icmp eq i32 %334, %337
  br i1 %338, label %340, label %339

; <label>:339:                                    ; preds = %333
  store i32 0, i32* %11, align 4
  br label %474

; <label>:340:                                    ; preds = %333, %originalBBpart279, %originalBBpart255, %283, %279
  br label %341

; <label>:341:                                    ; preds = %340, %originalBBpart239
  br label %342

; <label>:342:                                    ; preds = %341, %134
  %343 = load i32, i32* @x.53
  %344 = load i32, i32* @y.54
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %originalBB81alteredBB, %342
  %351 = load i32, i32* %12, align 4
  %352 = load i32, i32* %13, align 4
  %353 = load i8*, i8** %14, align 8
  %354 = load i32, i32* %15, align 4
  %355 = load i32, i32* %16, align 4
  %356 = load i32, i32* %17, align 4
  %357 = call i32 @trymove(i32 %351, i32 %352, i8* %353, i32 %354, i32 %355, i32 %356)
  %358 = icmp ne i32 %357, 0
  %359 = load i32, i32* @x.53
  %360 = load i32, i32* @y.54
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br i1 %358, label %409, label %367

; <label>:367:                                    ; preds = %originalBBpart283
  %368 = load i32, i32* %21, align 4
  %369 = icmp ne i32 %368, 0
  br i1 %369, label %371, label %370

; <label>:370:                                    ; preds = %367
  store i32 0, i32* %11, align 4
  br label %474

; <label>:371:                                    ; preds = %367
  %372 = load i32, i32* %12, align 4
  %373 = load i32, i32* %13, align 4
  %374 = load i8*, i8** %14, align 8
  %375 = load i32, i32* %16, align 4
  %376 = load i32, i32* %17, align 4
  %377 = call i32 @tryko(i32 %372, i32 %373, i8* %374, i32 %375, i32 %376)
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %380, label %379

; <label>:379:                                    ; preds = %371
  store i32 0, i32* %11, align 4
  br label %474

; <label>:380:                                    ; preds = %371
  %381 = load i32*, i32** %20, align 8
  store i32 1, i32* %381, align 4
  %382 = load i32, i32* %16, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %403, label %384

; <label>:384:                                    ; preds = %380
  %385 = load i32, i32* @x.53
  %386 = load i32, i32* @y.54
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %384
  %393 = load i32, i32* %16, align 4
  %394 = icmp eq i32 %393, 6
  %395 = load i32, i32* @x.53
  %396 = load i32, i32* @y.54
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %394, label %403, label %408

; <label>:403:                                    ; preds = %originalBBpart287, %380
  %404 = load i32, i32* %13, align 4
  %405 = load i32*, i32** %18, align 8
  store i32 %404, i32* %405, align 4
  %406 = load i32, i32* %24, align 4
  %407 = load i32*, i32** %19, align 8
  store i32 %406, i32* %407, align 4
  store i32 1, i32* %11, align 4
  br label %474

; <label>:408:                                    ; preds = %originalBBpart287
  br label %409

; <label>:409:                                    ; preds = %408, %originalBBpart283
  %410 = load i32, i32* %23, align 4
  %411 = icmp ne i32 %410, 0
  br i1 %411, label %413, label %412

; <label>:412:                                    ; preds = %409
  store i32 1, i32* %11, align 4
  br label %474

; <label>:413:                                    ; preds = %409
  %414 = load i32, i32* @x.53
  %415 = load i32, i32* @y.54
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %413
  %422 = load i32, i32* %16, align 4
  %423 = load i32, i32* %22, align 4
  %424 = icmp eq i32 %422, %423
  %425 = load i32, i32* @x.53
  %426 = load i32, i32* @y.54
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %424, label %433, label %441

; <label>:433:                                    ; preds = %originalBBpart291
  %434 = load i32, i32* %13, align 4
  %435 = icmp eq i32 %434, 1
  br i1 %435, label %436, label %438

; <label>:436:                                    ; preds = %433
  %437 = load i32*, i32** %18, align 8
  store i32 5, i32* %437, align 4
  br label %440

; <label>:438:                                    ; preds = %433
  %439 = load i32*, i32** %18, align 8
  store i32 4, i32* %439, align 4
  br label %440

; <label>:440:                                    ; preds = %438, %436
  br label %473

; <label>:441:                                    ; preds = %originalBBpart291
  %442 = load i32, i32* %16, align 4
  %443 = load i32, i32* %13, align 4
  %444 = icmp eq i32 %442, %443
  br i1 %444, label %445, label %448

; <label>:445:                                    ; preds = %441
  %446 = load i32, i32* %24, align 4
  %447 = load i32*, i32** %19, align 8
  store i32 %446, i32* %447, align 4
  br label %456

; <label>:448:                                    ; preds = %441
  %449 = load i32, i32* %25, align 4
  %450 = icmp ne i32 %449, 0
  br i1 %450, label %451, label %455

; <label>:451:                                    ; preds = %448
  %452 = load i32*, i32** %18, align 8
  store i32 6, i32* %452, align 4
  %453 = load i32, i32* %25, align 4
  %454 = load i32*, i32** %19, align 8
  store i32 %453, i32* %454, align 4
  br label %455

; <label>:455:                                    ; preds = %451, %448
  br label %456

; <label>:456:                                    ; preds = %455, %445
  %457 = load i32, i32* @x.53
  %458 = load i32, i32* @y.54
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %456
  %465 = load i32, i32* @x.53
  %466 = load i32, i32* @y.54
  %467 = sub i32 %465, 1
  %468 = mul i32 %465, %467
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %470, %471
  br i1 %472, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %473

; <label>:473:                                    ; preds = %originalBBpart295, %440
  store i32 1, i32* %11, align 4
  br label %474

; <label>:474:                                    ; preds = %473, %412, %403, %379, %370, %339, %originalBBpart235, %originalBBpart216, %159
  %475 = load i32, i32* @x.53
  %476 = load i32, i32* @y.54
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %originalBB97alteredBB, %474
  %483 = load i32, i32* %11, align 4
  %484 = load i32, i32* @x.53
  %485 = load i32, i32* @y.54
  %486 = sub i32 %484, 1
  %487 = mul i32 %484, %486
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %485, 10
  %491 = or i1 %489, %490
  br i1 %491, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  ret i32 %483

originalBBalteredBB:                              ; preds = %originalBB, %48
  %492 = load i32, i32* %17, align 4
  %493 = call i32 @is_ko(i32 %492, i32 2, i32* null)
  %494 = icmp ne i32 %493, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %112
  %495 = load i32, i32* %16, align 4
  %496 = icmp eq i32 %495, 6
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %135
  %497 = load i32, i32* %16, align 4
  %498 = load i32, i32* %22, align 4
  %499 = icmp eq i32 %497, %498
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %160
  %500 = load i32, i32* %16, align 4
  %501 = icmp eq i32 %500, 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %182
  store i32 0, i32* %11, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %203
  %502 = load i32, i32* %24, align 4
  %503 = load i32, i32* %17, align 4
  %_ = shl i32 %503, 20
  %_19 = shl i32 %503, 20
  %_20 = sub i32 0, %503
  %gen = add i32 %_20, 20
  %_21 = sub i32 %503, 20
  %gen22 = mul i32 %_21, 20
  %_23 = sub i32 0, %503
  %gen24 = add i32 %_23, 20
  %_25 = sub i32 %503, 20
  %gen26 = mul i32 %_25, 20
  %_27 = shl i32 %503, 20
  %504 = add nsw i32 %503, 20
  %_28 = sub i32 %504, 1
  %gen29 = mul i32 %_28, 1
  %505 = sub nsw i32 %504, 1
  %506 = icmp eq i32 %502, %505
  br label %originalBB18

originalBB33alteredBB:                            ; preds = %originalBB33, %243
  store i32 0, i32* %11, align 4
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %260
  %507 = load i32, i32* %16, align 4
  %508 = icmp eq i32 %507, 6
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %289
  %509 = load i32, i32* %24, align 4
  %510 = load i32, i32* %17, align 4
  %_42 = shl i32 %510, 20
  %_43 = shl i32 %510, 20
  %_44 = shl i32 %510, 20
  %_45 = shl i32 %510, 20
  %_46 = sub i32 0, %510
  %gen47 = add i32 %_46, 20
  %_48 = shl i32 %510, 20
  %511 = sub nsw i32 %510, 20
  %_49 = sub i32 %511, 1
  %gen50 = mul i32 %_49, 1
  %_51 = shl i32 %511, 1
  %_52 = shl i32 %511, 1
  %_53 = shl i32 %511, 1
  %512 = sub nsw i32 %511, 1
  %513 = icmp eq i32 %509, %512
  br label %originalBB41

originalBB57alteredBB:                            ; preds = %originalBB57, %311
  %514 = load i32, i32* %24, align 4
  %515 = load i32, i32* %17, align 4
  %_58 = shl i32 %515, 20
  %_59 = sub i32 0, %515
  %gen60 = add i32 %_59, 20
  %_61 = sub i32 0, %515
  %gen62 = add i32 %_61, 20
  %_63 = sub i32 %515, 20
  %gen64 = mul i32 %_63, 20
  %_65 = sub i32 0, %515
  %gen66 = add i32 %_65, 20
  %_67 = sub i32 %515, 20
  %gen68 = mul i32 %_67, 20
  %_69 = sub i32 %515, 20
  %gen70 = mul i32 %_69, 20
  %516 = sub nsw i32 %515, 20
  %_71 = shl i32 %516, 1
  %_72 = sub i32 0, %516
  %gen73 = add i32 %_72, 1
  %_74 = sub i32 %516, 1
  %gen75 = mul i32 %_74, 1
  %_76 = sub i32 0, %516
  %gen77 = add i32 %_76, 1
  %517 = add nsw i32 %516, 1
  %518 = icmp eq i32 %514, %517
  br label %originalBB57

originalBB81alteredBB:                            ; preds = %originalBB81, %342
  %519 = load i32, i32* %12, align 4
  %520 = load i32, i32* %13, align 4
  %521 = load i8*, i8** %14, align 8
  %522 = load i32, i32* %15, align 4
  %523 = load i32, i32* %16, align 4
  %524 = load i32, i32* %17, align 4
  %525 = call i32 @trymove(i32 %519, i32 %520, i8* %521, i32 %522, i32 %523, i32 %524)
  %526 = icmp ne i32 %525, 0
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %384
  %527 = load i32, i32* %16, align 4
  %528 = icmp eq i32 %527, 6
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %413
  %529 = load i32, i32* %16, align 4
  %530 = load i32, i32* %22, align 4
  %531 = icmp eq i32 %529, %530
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %456
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %474
  %532 = load i32, i32* %11, align 4
  br label %originalBB97
}

; Function Attrs: noinline nounwind uwtable
define i32 @is_ko(i32, i32, i32*) #0 {
  %4 = load i32, i32* @x.55
  %5 = load i32, i32* @y.56
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 %0, i32* %13, align 4
  store i32 %1, i32* %14, align 4
  store i32* %2, i32** %15, align 8
  %19 = load i32, i32* %14, align 4
  %20 = sub nsw i32 3, %19
  store i32 %20, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  %21 = load i32, i32* %13, align 4
  %22 = icmp ult i32 %21, 421
  %23 = load i32, i32* @x.55
  %24 = load i32, i32* @y.56
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %39

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* %13, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp ne i32 %36, 3
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %31
  br label %46

; <label>:39:                                     ; preds = %31, %originalBBpart2
  %40 = load i32, i32* %13, align 4
  %41 = sdiv i32 %40, 20
  %42 = sub nsw i32 %41, 1
  %43 = load i32, i32* %13, align 4
  %44 = srem i32 %43, 20
  %45 = sub nsw i32 %44, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2501, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %42, i32 %45)
  br label %46

; <label>:46:                                     ; preds = %39, %38
  %47 = load i32, i32* %14, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %52, label %49

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* %14, align 4
  %51 = icmp eq i32 %50, 2
  br i1 %51, label %52, label %53

; <label>:52:                                     ; preds = %49, %46
  br label %76

; <label>:53:                                     ; preds = %49
  %54 = load i32, i32* @x.55
  %55 = load i32, i32* @y.56
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %originalBB9alteredBB, %53
  %62 = load i32, i32* %13, align 4
  %63 = sdiv i32 %62, 20
  %64 = sub nsw i32 %63, 1
  %65 = load i32, i32* %13, align 4
  %66 = srem i32 %65, 20
  %67 = sub nsw i32 %66, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2502, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i32 0, i32 0), i32 %64, i32 %67)
  %68 = load i32, i32* @x.55
  %69 = load i32, i32* @y.56
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart240, label %originalBB9alteredBB

originalBBpart240:                                ; preds = %originalBB9
  br label %76

; <label>:76:                                     ; preds = %originalBBpart240, %52
  %77 = load i32, i32* %13, align 4
  %78 = add nsw i32 %77, 20
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = icmp ne i32 %82, 3
  br i1 %83, label %84, label %141

; <label>:84:                                     ; preds = %76
  %85 = load i32, i32* %13, align 4
  %86 = add nsw i32 %85, 20
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = load i32, i32* %16, align 4
  %92 = icmp ne i32 %90, %91
  br i1 %92, label %93, label %94

; <label>:93:                                     ; preds = %84
  store i32 0, i32* %12, align 4
  br label %571

; <label>:94:                                     ; preds = %84
  %95 = load i32, i32* %13, align 4
  %96 = add nsw i32 %95, 20
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %100
  %102 = getelementptr inbounds %struct.string_data, %struct.string_data* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %123

; <label>:105:                                    ; preds = %94
  %106 = load i32, i32* %13, align 4
  %107 = add nsw i32 %106, 20
  store i32 %107, i32* %18, align 4
  %108 = load i32, i32* %13, align 4
  %109 = add nsw i32 %108, 20
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %113
  %115 = getelementptr inbounds %struct.string_data, %struct.string_data* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %17, align 4
  %118 = add nsw i32 %117, %116
  store i32 %118, i32* %17, align 4
  %119 = load i32, i32* %17, align 4
  %120 = icmp sgt i32 %119, 1
  br i1 %120, label %121, label %122

; <label>:121:                                    ; preds = %105
  store i32 0, i32* %12, align 4
  br label %571

; <label>:122:                                    ; preds = %105
  br label %123

; <label>:123:                                    ; preds = %122, %94
  br label %124

; <label>:124:                                    ; preds = %123
  %125 = load i32, i32* @x.55
  %126 = load i32, i32* @y.56
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %124
  %133 = load i32, i32* @x.55
  %134 = load i32, i32* @y.56
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %141

; <label>:141:                                    ; preds = %originalBBpart244, %76
  %142 = load i32, i32* %13, align 4
  %143 = sub nsw i32 %142, 1
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp ne i32 %147, 3
  br i1 %148, label %149, label %286

; <label>:149:                                    ; preds = %141
  %150 = load i32, i32* %13, align 4
  %151 = sub nsw i32 %150, 1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = load i32, i32* %16, align 4
  %157 = icmp ne i32 %155, %156
  br i1 %157, label %158, label %175

; <label>:158:                                    ; preds = %149
  %159 = load i32, i32* @x.55
  %160 = load i32, i32* @y.56
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %158
  store i32 0, i32* %12, align 4
  %167 = load i32, i32* @x.55
  %168 = load i32, i32* @y.56
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %571

; <label>:175:                                    ; preds = %149
  %176 = load i32, i32* @x.55
  %177 = load i32, i32* @y.56
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %175
  %184 = load i32, i32* %13, align 4
  %185 = sub nsw i32 %184, 1
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %189
  %191 = getelementptr inbounds %struct.string_data, %struct.string_data* %190, i32 0, i32 3
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 1
  %194 = load i32, i32* @x.55
  %195 = load i32, i32* @y.56
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart263, label %originalBB50alteredBB

originalBBpart263:                                ; preds = %originalBB50
  br i1 %193, label %202, label %252

; <label>:202:                                    ; preds = %originalBBpart263
  %203 = load i32, i32* @x.55
  %204 = load i32, i32* @y.56
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %202
  %211 = load i32, i32* %13, align 4
  %212 = sub nsw i32 %211, 1
  store i32 %212, i32* %18, align 4
  %213 = load i32, i32* %13, align 4
  %214 = sub nsw i32 %213, 1
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %218
  %220 = getelementptr inbounds %struct.string_data, %struct.string_data* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = load i32, i32* %17, align 4
  %223 = add nsw i32 %222, %221
  store i32 %223, i32* %17, align 4
  %224 = load i32, i32* %17, align 4
  %225 = icmp sgt i32 %224, 1
  %226 = load i32, i32* @x.55
  %227 = load i32, i32* @y.56
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart290, label %originalBB65alteredBB

originalBBpart290:                                ; preds = %originalBB65
  br i1 %225, label %234, label %235

; <label>:234:                                    ; preds = %originalBBpart290
  store i32 0, i32* %12, align 4
  br label %571

; <label>:235:                                    ; preds = %originalBBpart290
  %236 = load i32, i32* @x.55
  %237 = load i32, i32* @y.56
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %235
  %244 = load i32, i32* @x.55
  %245 = load i32, i32* @y.56
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %252

; <label>:252:                                    ; preds = %originalBBpart294, %originalBBpart263
  %253 = load i32, i32* @x.55
  %254 = load i32, i32* @y.56
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %originalBB96alteredBB, %252
  %261 = load i32, i32* @x.55
  %262 = load i32, i32* @y.56
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br label %269

; <label>:269:                                    ; preds = %originalBBpart298
  %270 = load i32, i32* @x.55
  %271 = load i32, i32* @y.56
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %originalBB100alteredBB, %269
  %278 = load i32, i32* @x.55
  %279 = load i32, i32* @y.56
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br label %286

; <label>:286:                                    ; preds = %originalBBpart2102, %141
  %287 = load i32, i32* %13, align 4
  %288 = sub nsw i32 %287, 20
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i32
  %293 = icmp ne i32 %292, 3
  br i1 %293, label %294, label %431

; <label>:294:                                    ; preds = %286
  %295 = load i32, i32* @x.55
  %296 = load i32, i32* @y.56
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %originalBB104alteredBB, %294
  %303 = load i32, i32* %13, align 4
  %304 = sub nsw i32 %303, 20
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %305
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = load i32, i32* %16, align 4
  %310 = icmp ne i32 %308, %309
  %311 = load i32, i32* @x.55
  %312 = load i32, i32* @y.56
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart2118, label %originalBB104alteredBB

originalBBpart2118:                               ; preds = %originalBB104
  br i1 %310, label %319, label %320

; <label>:319:                                    ; preds = %originalBBpart2118
  store i32 0, i32* %12, align 4
  br label %571

; <label>:320:                                    ; preds = %originalBBpart2118
  %321 = load i32, i32* @x.55
  %322 = load i32, i32* @y.56
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %originalBB120alteredBB, %320
  %329 = load i32, i32* %13, align 4
  %330 = sub nsw i32 %329, 20
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %334
  %336 = getelementptr inbounds %struct.string_data, %struct.string_data* %335, i32 0, i32 3
  %337 = load i32, i32* %336, align 4
  %338 = icmp eq i32 %337, 1
  %339 = load i32, i32* @x.55
  %340 = load i32, i32* @y.56
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart2130, label %originalBB120alteredBB

originalBBpart2130:                               ; preds = %originalBB120
  br i1 %338, label %347, label %397

; <label>:347:                                    ; preds = %originalBBpart2130
  %348 = load i32, i32* %13, align 4
  %349 = sub nsw i32 %348, 20
  store i32 %349, i32* %18, align 4
  %350 = load i32, i32* %13, align 4
  %351 = sub nsw i32 %350, 20
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %355
  %357 = getelementptr inbounds %struct.string_data, %struct.string_data* %356, i32 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = load i32, i32* %17, align 4
  %360 = add nsw i32 %359, %358
  store i32 %360, i32* %17, align 4
  %361 = load i32, i32* %17, align 4
  %362 = icmp sgt i32 %361, 1
  br i1 %362, label %363, label %380

; <label>:363:                                    ; preds = %347
  %364 = load i32, i32* @x.55
  %365 = load i32, i32* @y.56
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %originalBB132alteredBB, %363
  store i32 0, i32* %12, align 4
  %372 = load i32, i32* @x.55
  %373 = load i32, i32* @y.56
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br label %571

; <label>:380:                                    ; preds = %347
  %381 = load i32, i32* @x.55
  %382 = load i32, i32* @y.56
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %originalBB136alteredBB, %380
  %389 = load i32, i32* @x.55
  %390 = load i32, i32* @y.56
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br label %397

; <label>:397:                                    ; preds = %originalBBpart2138, %originalBBpart2130
  %398 = load i32, i32* @x.55
  %399 = load i32, i32* @y.56
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %397
  %406 = load i32, i32* @x.55
  %407 = load i32, i32* @y.56
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br label %414

; <label>:414:                                    ; preds = %originalBBpart2142
  %415 = load i32, i32* @x.55
  %416 = load i32, i32* @y.56
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %originalBB144alteredBB, %414
  %423 = load i32, i32* @x.55
  %424 = load i32, i32* @y.56
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  br label %431

; <label>:431:                                    ; preds = %originalBBpart2146, %286
  %432 = load i32, i32* %13, align 4
  %433 = add nsw i32 %432, 1
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %434
  %436 = load i8, i8* %435, align 1
  %437 = zext i8 %436 to i32
  %438 = icmp ne i32 %437, 3
  br i1 %438, label %439, label %544

; <label>:439:                                    ; preds = %431
  %440 = load i32, i32* %13, align 4
  %441 = add nsw i32 %440, 1
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %442
  %444 = load i8, i8* %443, align 1
  %445 = zext i8 %444 to i32
  %446 = load i32, i32* %16, align 4
  %447 = icmp ne i32 %445, %446
  br i1 %447, label %448, label %465

; <label>:448:                                    ; preds = %439
  %449 = load i32, i32* @x.55
  %450 = load i32, i32* @y.56
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %originalBB148alteredBB, %448
  store i32 0, i32* %12, align 4
  %457 = load i32, i32* @x.55
  %458 = load i32, i32* @y.56
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBBpart2150, label %originalBB148alteredBB

originalBBpart2150:                               ; preds = %originalBB148
  br label %571

; <label>:465:                                    ; preds = %439
  %466 = load i32, i32* %13, align 4
  %467 = add nsw i32 %466, 1
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %468
  %470 = load i32, i32* %469, align 4
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %471
  %473 = getelementptr inbounds %struct.string_data, %struct.string_data* %472, i32 0, i32 3
  %474 = load i32, i32* %473, align 4
  %475 = icmp eq i32 %474, 1
  br i1 %475, label %476, label %510

; <label>:476:                                    ; preds = %465
  %477 = load i32, i32* %13, align 4
  %478 = add nsw i32 %477, 1
  store i32 %478, i32* %18, align 4
  %479 = load i32, i32* %13, align 4
  %480 = add nsw i32 %479, 1
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %481
  %483 = load i32, i32* %482, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %484
  %486 = getelementptr inbounds %struct.string_data, %struct.string_data* %485, i32 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = load i32, i32* %17, align 4
  %489 = add nsw i32 %488, %487
  store i32 %489, i32* %17, align 4
  %490 = load i32, i32* %17, align 4
  %491 = icmp sgt i32 %490, 1
  br i1 %491, label %492, label %493

; <label>:492:                                    ; preds = %476
  store i32 0, i32* %12, align 4
  br label %571

; <label>:493:                                    ; preds = %476
  %494 = load i32, i32* @x.55
  %495 = load i32, i32* @y.56
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBB152, label %originalBB152alteredBB

originalBB152:                                    ; preds = %originalBB152alteredBB, %493
  %502 = load i32, i32* @x.55
  %503 = load i32, i32* @y.56
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBBpart2154, label %originalBB152alteredBB

originalBBpart2154:                               ; preds = %originalBB152
  br label %510

; <label>:510:                                    ; preds = %originalBBpart2154, %465
  %511 = load i32, i32* @x.55
  %512 = load i32, i32* @y.56
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %originalBB156alteredBB, %510
  %519 = load i32, i32* @x.55
  %520 = load i32, i32* @y.56
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBBpart2158, label %originalBB156alteredBB

originalBBpart2158:                               ; preds = %originalBB156
  br label %527

; <label>:527:                                    ; preds = %originalBBpart2158
  %528 = load i32, i32* @x.55
  %529 = load i32, i32* @y.56
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBB160, label %originalBB160alteredBB

originalBB160:                                    ; preds = %originalBB160alteredBB, %527
  %536 = load i32, i32* @x.55
  %537 = load i32, i32* @y.56
  %538 = sub i32 %536, 1
  %539 = mul i32 %536, %538
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %541, %542
  br i1 %543, label %originalBBpart2162, label %originalBB160alteredBB

originalBBpart2162:                               ; preds = %originalBB160
  br label %544

; <label>:544:                                    ; preds = %originalBBpart2162, %431
  %545 = load i32, i32* %17, align 4
  %546 = icmp eq i32 %545, 1
  br i1 %546, label %547, label %570

; <label>:547:                                    ; preds = %544
  %548 = load i32*, i32** %15, align 8
  %549 = icmp ne i32* %548, null
  br i1 %549, label %550, label %553

; <label>:550:                                    ; preds = %547
  %551 = load i32, i32* %18, align 4
  %552 = load i32*, i32** %15, align 8
  store i32 %551, i32* %552, align 4
  br label %553

; <label>:553:                                    ; preds = %550, %547
  %554 = load i32, i32* @x.55
  %555 = load i32, i32* @y.56
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %originalBB164alteredBB, %553
  store i32 1, i32* %12, align 4
  %562 = load i32, i32* @x.55
  %563 = load i32, i32* @y.56
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2166, label %originalBB164alteredBB

originalBBpart2166:                               ; preds = %originalBB164
  br label %571

; <label>:570:                                    ; preds = %544
  store i32 0, i32* %12, align 4
  br label %571

; <label>:571:                                    ; preds = %570, %originalBBpart2166, %492, %originalBBpart2150, %originalBBpart2134, %319, %234, %originalBBpart248, %121, %93
  %572 = load i32, i32* %12, align 4
  ret i32 %572

originalBBalteredBB:                              ; preds = %originalBB, %3
  %573 = alloca i32, align 4
  %574 = alloca i32, align 4
  %575 = alloca i32, align 4
  %576 = alloca i32*, align 8
  %577 = alloca i32, align 4
  %578 = alloca i32, align 4
  %579 = alloca i32, align 4
  store i32 %0, i32* %574, align 4
  store i32 %1, i32* %575, align 4
  store i32* %2, i32** %576, align 8
  %580 = load i32, i32* %575, align 4
  %_ = sub i32 3, %580
  %gen = mul i32 %_, %580
  %_1 = shl i32 3, %580
  %_2 = sub i32 3, %580
  %gen3 = mul i32 %_2, %580
  %_4 = sub i32 0, 3
  %gen5 = add i32 %_4, %580
  %_6 = shl i32 3, %580
  %_7 = sub i32 3, %580
  %gen8 = mul i32 %_7, %580
  %581 = sub nsw i32 3, %580
  store i32 %581, i32* %577, align 4
  store i32 0, i32* %578, align 4
  store i32 0, i32* %579, align 4
  %582 = load i32, i32* %574, align 4
  %583 = icmp ult i32 %582, 421
  br label %originalBB

originalBB9alteredBB:                             ; preds = %originalBB9, %53
  %584 = load i32, i32* %13, align 4
  %_10 = shl i32 %584, 20
  %_11 = sub i32 %584, 20
  %gen12 = mul i32 %_11, 20
  %_13 = shl i32 %584, 20
  %_14 = shl i32 %584, 20
  %_15 = sub i32 %584, 20
  %gen16 = mul i32 %_15, 20
  %_17 = shl i32 %584, 20
  %_18 = sub i32 0, %584
  %gen19 = add i32 %_18, 20
  %585 = sdiv i32 %584, 20
  %_20 = shl i32 %585, 1
  %_21 = sub i32 %585, 1
  %gen22 = mul i32 %_21, 1
  %_23 = sub i32 0, %585
  %gen24 = add i32 %_23, 1
  %586 = sub nsw i32 %585, 1
  %587 = load i32, i32* %13, align 4
  %_25 = sub i32 0, %587
  %gen26 = add i32 %_25, 20
  %_27 = sub i32 0, %587
  %gen28 = add i32 %_27, 20
  %_29 = shl i32 %587, 20
  %_30 = sub i32 0, %587
  %gen31 = add i32 %_30, 20
  %_32 = shl i32 %587, 20
  %_33 = sub i32 0, %587
  %gen34 = add i32 %_33, 20
  %_35 = sub i32 0, %587
  %gen36 = add i32 %_35, 20
  %588 = srem i32 %587, 20
  %_37 = sub i32 0, %588
  %gen38 = add i32 %_37, 1
  %589 = sub nsw i32 %588, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2502, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i32 0, i32 0), i32 %586, i32 %589)
  br label %originalBB9

originalBB42alteredBB:                            ; preds = %originalBB42, %124
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %158
  store i32 0, i32* %12, align 4
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %175
  %590 = load i32, i32* %13, align 4
  %_51 = sub i32 0, %590
  %gen52 = add i32 %_51, 1
  %_53 = sub i32 0, %590
  %gen54 = add i32 %_53, 1
  %_55 = sub i32 0, %590
  %gen56 = add i32 %_55, 1
  %_57 = sub i32 %590, 1
  %gen58 = mul i32 %_57, 1
  %_59 = shl i32 %590, 1
  %_60 = sub i32 %590, 1
  %gen61 = mul i32 %_60, 1
  %591 = sub nsw i32 %590, 1
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %592
  %594 = load i32, i32* %593, align 4
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %595
  %597 = getelementptr inbounds %struct.string_data, %struct.string_data* %596, i32 0, i32 3
  %598 = load i32, i32* %597, align 4
  %599 = icmp eq i32 %598, 1
  br label %originalBB50

originalBB65alteredBB:                            ; preds = %originalBB65, %202
  %600 = load i32, i32* %13, align 4
  %_66 = sub i32 0, %600
  %gen67 = add i32 %_66, 1
  %_68 = sub i32 0, %600
  %gen69 = add i32 %_68, 1
  %_70 = sub i32 0, %600
  %gen71 = add i32 %_70, 1
  %_72 = sub i32 %600, 1
  %gen73 = mul i32 %_72, 1
  %_74 = sub i32 0, %600
  %gen75 = add i32 %_74, 1
  %601 = sub nsw i32 %600, 1
  store i32 %601, i32* %18, align 4
  %602 = load i32, i32* %13, align 4
  %_76 = sub i32 %602, 1
  %gen77 = mul i32 %_76, 1
  %_78 = sub i32 %602, 1
  %gen79 = mul i32 %_78, 1
  %_80 = sub i32 0, %602
  %gen81 = add i32 %_80, 1
  %_82 = shl i32 %602, 1
  %_83 = shl i32 %602, 1
  %603 = sub nsw i32 %602, 1
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %604
  %606 = load i32, i32* %605, align 4
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %607
  %609 = getelementptr inbounds %struct.string_data, %struct.string_data* %608, i32 0, i32 1
  %610 = load i32, i32* %609, align 4
  %611 = load i32, i32* %17, align 4
  %_84 = shl i32 %611, %610
  %_85 = sub i32 %611, %610
  %gen86 = mul i32 %_85, %610
  %_87 = sub i32 %611, %610
  %gen88 = mul i32 %_87, %610
  %612 = add nsw i32 %611, %610
  store i32 %612, i32* %17, align 4
  %613 = load i32, i32* %17, align 4
  %614 = icmp sgt i32 %613, 1
  br label %originalBB65

originalBB92alteredBB:                            ; preds = %originalBB92, %235
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %252
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %269
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %294
  %615 = load i32, i32* %13, align 4
  %_105 = sub i32 %615, 20
  %gen106 = mul i32 %_105, 20
  %_107 = sub i32 %615, 20
  %gen108 = mul i32 %_107, 20
  %_109 = sub i32 0, %615
  %gen110 = add i32 %_109, 20
  %_111 = shl i32 %615, 20
  %_112 = sub i32 0, %615
  %gen113 = add i32 %_112, 20
  %_114 = shl i32 %615, 20
  %_115 = sub i32 %615, 20
  %gen116 = mul i32 %_115, 20
  %616 = sub nsw i32 %615, 20
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %617
  %619 = load i8, i8* %618, align 1
  %620 = zext i8 %619 to i32
  %621 = load i32, i32* %16, align 4
  %622 = icmp ne i32 %620, %621
  br label %originalBB104

originalBB120alteredBB:                           ; preds = %originalBB120, %320
  %623 = load i32, i32* %13, align 4
  %_121 = sub i32 %623, 20
  %gen122 = mul i32 %_121, 20
  %_123 = shl i32 %623, 20
  %_124 = sub i32 %623, 20
  %gen125 = mul i32 %_124, 20
  %_126 = sub i32 %623, 20
  %gen127 = mul i32 %_126, 20
  %_128 = shl i32 %623, 20
  %624 = sub nsw i32 %623, 20
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %625
  %627 = load i32, i32* %626, align 4
  %628 = sext i32 %627 to i64
  %629 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %628
  %630 = getelementptr inbounds %struct.string_data, %struct.string_data* %629, i32 0, i32 3
  %631 = load i32, i32* %630, align 4
  %632 = icmp eq i32 %631, 1
  br label %originalBB120

originalBB132alteredBB:                           ; preds = %originalBB132, %363
  store i32 0, i32* %12, align 4
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %380
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %397
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %414
  br label %originalBB144

originalBB148alteredBB:                           ; preds = %originalBB148, %448
  store i32 0, i32* %12, align 4
  br label %originalBB148

originalBB152alteredBB:                           ; preds = %originalBB152, %493
  br label %originalBB152

originalBB156alteredBB:                           ; preds = %originalBB156, %510
  br label %originalBB156

originalBB160alteredBB:                           ; preds = %originalBB160, %527
  br label %originalBB160

originalBB164alteredBB:                           ; preds = %originalBB164, %553
  store i32 1, i32* %12, align 4
  br label %originalBB164
}

; Function Attrs: noinline nounwind uwtable
define i32 @is_edge_vertex(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 421
  br i1 %5, label %6, label %46

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.57
  %8 = load i32, i32* @y.58
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = icmp ne i32 %19, 3
  %21 = load i32, i32* @x.57
  %22 = load i32, i32* @y.58
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %46

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.57
  %31 = load i32, i32* @y.58
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %29
  %38 = load i32, i32* @x.57
  %39 = load i32, i32* @y.58
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %53

; <label>:46:                                     ; preds = %originalBBpart2, %1
  %47 = load i32, i32* %3, align 4
  %48 = sdiv i32 %47, 20
  %49 = sub nsw i32 %48, 1
  %50 = load i32, i32* %3, align 4
  %51 = srem i32 %50, 20
  %52 = sub nsw i32 %51, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1309, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %49, i32 %52)
  br label %53

; <label>:53:                                     ; preds = %46, %originalBBpart24
  %54 = load i32, i32* @x.57
  %55 = load i32, i32* @y.58
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %53
  %62 = load i32, i32* %3, align 4
  %63 = add nsw i32 %62, 20
  %64 = sub nsw i32 %63, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp ne i32 %68, 3
  %70 = load i32, i32* @x.57
  %71 = load i32, i32* @y.58
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br i1 %69, label %78, label %103

; <label>:78:                                     ; preds = %originalBBpart216
  %79 = load i32, i32* @x.57
  %80 = load i32, i32* @y.58
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %78
  %87 = load i32, i32* %3, align 4
  %88 = sub nsw i32 %87, 20
  %89 = add nsw i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp ne i32 %93, 3
  %95 = load i32, i32* @x.57
  %96 = load i32, i32* @y.58
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart230, label %originalBB18alteredBB

originalBBpart230:                                ; preds = %originalBB18
  br i1 %94, label %120, label %103

; <label>:103:                                    ; preds = %originalBBpart230, %originalBBpart216
  %104 = load i32, i32* @x.57
  %105 = load i32, i32* @y.58
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %103
  store i32 1, i32* %2, align 4
  %112 = load i32, i32* @x.57
  %113 = load i32, i32* @y.58
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  br label %137

; <label>:120:                                    ; preds = %originalBBpart230
  %121 = load i32, i32* @x.57
  %122 = load i32, i32* @y.58
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %120
  store i32 0, i32* %2, align 4
  %129 = load i32, i32* @x.57
  %130 = load i32, i32* @y.58
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %137

; <label>:137:                                    ; preds = %originalBBpart238, %originalBBpart234
  %138 = load i32, i32* %2, align 4
  ret i32 %138

originalBBalteredBB:                              ; preds = %originalBB, %6
  %139 = load i32, i32* %3, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp ne i32 %143, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %145 = load i32, i32* %3, align 4
  %_ = shl i32 %145, 20
  %_7 = sub i32 %145, 20
  %gen = mul i32 %_7, 20
  %_8 = shl i32 %145, 20
  %146 = add nsw i32 %145, 20
  %_9 = shl i32 %146, 1
  %_10 = sub i32 0, %146
  %gen11 = add i32 %_10, 1
  %_12 = shl i32 %146, 1
  %_13 = shl i32 %146, 1
  %_14 = shl i32 %146, 1
  %147 = sub nsw i32 %146, 1
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = icmp ne i32 %151, 3
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %78
  %153 = load i32, i32* %3, align 4
  %_19 = sub i32 %153, 20
  %gen20 = mul i32 %_19, 20
  %_21 = sub i32 0, %153
  %gen22 = add i32 %_21, 20
  %_23 = shl i32 %153, 20
  %154 = sub nsw i32 %153, 20
  %_24 = sub i32 %154, 1
  %gen25 = mul i32 %_24, 1
  %_26 = sub i32 %154, 1
  %gen27 = mul i32 %_26, 1
  %_28 = shl i32 %154, 1
  %155 = add nsw i32 %154, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = icmp ne i32 %159, 3
  br label %originalBB18

originalBB32alteredBB:                            ; preds = %originalBB32, %103
  store i32 1, i32* %2, align 4
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %120
  store i32 0, i32* %2, align 4
  br label %originalBB36
}

; Function Attrs: noinline nounwind uwtable
define i32 @countlib(i32) #0 {
  %2 = load i32, i32* @x.59
  %3 = load i32, i32* @y.60
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 1
  %17 = load i32, i32* @x.59
  %18 = load i32, i32* @y.60
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %32, label %25

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* %10, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %25, %originalBBpart2
  br label %56

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.59
  %35 = load i32, i32* @y.60
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %33
  %42 = load i32, i32* %10, align 4
  %43 = sdiv i32 %42, 20
  %44 = sub nsw i32 %43, 1
  %45 = load i32, i32* %10, align 4
  %46 = srem i32 %45, 20
  %47 = sub nsw i32 %46, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1325, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %44, i32 %47)
  %48 = load i32, i32* @x.59
  %49 = load i32, i32* @y.60
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart230, label %originalBB1alteredBB

originalBBpart230:                                ; preds = %originalBB1
  br label %56

; <label>:56:                                     ; preds = %originalBBpart230, %32
  %57 = load i32, i32* %10, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %61
  %63 = getelementptr inbounds %struct.string_data, %struct.string_data* %62, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  ret i32 %64

originalBBalteredBB:                              ; preds = %originalBB, %1
  %65 = alloca i32, align 4
  store i32 %0, i32* %65, align 4
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = icmp eq i32 %70, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %72 = load i32, i32* %10, align 4
  %_ = sub i32 %72, 20
  %gen = mul i32 %_, 20
  %_2 = sub i32 0, %72
  %gen3 = add i32 %_2, 20
  %_4 = sub i32 0, %72
  %gen5 = add i32 %_4, 20
  %_6 = sub i32 %72, 20
  %gen7 = mul i32 %_6, 20
  %_8 = shl i32 %72, 20
  %_9 = shl i32 %72, 20
  %_10 = sub i32 %72, 20
  %gen11 = mul i32 %_10, 20
  %73 = sdiv i32 %72, 20
  %_12 = shl i32 %73, 1
  %_13 = sub i32 0, %73
  %gen14 = add i32 %_13, 1
  %_15 = sub i32 %73, 1
  %gen16 = mul i32 %_15, 1
  %_17 = shl i32 %73, 1
  %_18 = shl i32 %73, 1
  %_19 = shl i32 %73, 1
  %74 = sub nsw i32 %73, 1
  %75 = load i32, i32* %10, align 4
  %76 = srem i32 %75, 20
  %_20 = sub i32 %76, 1
  %gen21 = mul i32 %_20, 1
  %_22 = sub i32 0, %76
  %gen23 = add i32 %_22, 1
  %_24 = sub i32 0, %76
  %gen25 = add i32 %_24, 1
  %_26 = shl i32 %76, 1
  %_27 = sub i32 0, %76
  %gen28 = add i32 %_27, 1
  %77 = sub nsw i32 %76, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1325, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %74, i32 %77)
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define i32 @findlib(i32, i32, i32*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32* %2, i32** %6, align 8
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %24, label %17

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %17, %3
  br label %32

; <label>:25:                                     ; preds = %17
  %26 = load i32, i32* %4, align 4
  %27 = sdiv i32 %26, 20
  %28 = sub nsw i32 %27, 1
  %29 = load i32, i32* %4, align 4
  %30 = srem i32 %29, 20
  %31 = sub nsw i32 %30, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1348, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %28, i32 %31)
  br label %32

; <label>:32:                                     ; preds = %25, %24
  %33 = load i32*, i32** %6, align 8
  %34 = icmp ne i32* %33, null
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %32
  br label %43

; <label>:36:                                     ; preds = %32
  %37 = load i32, i32* %4, align 4
  %38 = sdiv i32 %37, 20
  %39 = sub nsw i32 %38, 1
  %40 = load i32, i32* %4, align 4
  %41 = srem i32 %40, 20
  %42 = sub nsw i32 %41, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1349, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i32 0, i32 0), i32 %39, i32 %42)
  br label %43

; <label>:43:                                     ; preds = %36, %35
  %44 = load i32, i32* %4, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %9, align 4
  %48 = load i32, i32* %9, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %49
  %51 = getelementptr inbounds %struct.string_data, %struct.string_data* %50, i32 0, i32 3
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %8, align 4
  %53 = load i32, i32* %8, align 4
  %54 = icmp sle i32 %53, 20
  br i1 %54, label %58, label %55

; <label>:55:                                     ; preds = %43
  %56 = load i32, i32* %5, align 4
  %57 = icmp sle i32 %56, 20
  br i1 %57, label %58, label %134

; <label>:58:                                     ; preds = %55, %43
  %59 = load i32, i32* @x.61
  %60 = load i32, i32* @y.62
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %58
  store i32 0, i32* %7, align 4
  %67 = load i32, i32* @x.61
  %68 = load i32, i32* @y.62
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %75

; <label>:75:                                     ; preds = %114, %originalBBpart2
  %76 = load i32, i32* %7, align 4
  %77 = load i32, i32* %5, align 4
  %78 = icmp slt i32 %76, %77
  br i1 %78, label %79, label %99

; <label>:79:                                     ; preds = %75
  %80 = load i32, i32* @x.61
  %81 = load i32, i32* @y.62
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %79
  %88 = load i32, i32* %7, align 4
  %89 = load i32, i32* %8, align 4
  %90 = icmp slt i32 %88, %89
  %91 = load i32, i32* @x.61
  %92 = load i32, i32* @y.62
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %99

; <label>:99:                                     ; preds = %originalBBpart24, %75
  %100 = phi i1 [ false, %75 ], [ %90, %originalBBpart24 ]
  br i1 %100, label %101, label %117

; <label>:101:                                    ; preds = %99
  %102 = load i32, i32* %9, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %103
  %105 = getelementptr inbounds %struct.string_data, %struct.string_data* %104, i32 0, i32 4
  %106 = load i32, i32* %7, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20 x i32], [20 x i32]* %105, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = load i32*, i32** %6, align 8
  %111 = load i32, i32* %7, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %110, i64 %112
  store i32 %109, i32* %113, align 4
  br label %114

; <label>:114:                                    ; preds = %101
  %115 = load i32, i32* %7, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %7, align 4
  br label %75

; <label>:117:                                    ; preds = %99
  %118 = load i32, i32* @x.61
  %119 = load i32, i32* @y.62
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %117
  %126 = load i32, i32* @x.61
  %127 = load i32, i32* @y.62
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %375

; <label>:134:                                    ; preds = %55
  %135 = load i32, i32* @liberty_mark, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* @liberty_mark, align 4
  store i32 0, i32* %7, align 4
  %137 = load i32, i32* %9, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %138
  %140 = getelementptr inbounds %struct.string_data, %struct.string_data* %139, i32 0, i32 2
  %141 = load i32, i32* %140, align 8
  store i32 %141, i32* %10, align 4
  br label %142

; <label>:142:                                    ; preds = %369, %134
  %143 = load i32, i32* %7, align 4
  %144 = load i32, i32* %5, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %146, label %150

; <label>:146:                                    ; preds = %142
  %147 = load i32, i32* %7, align 4
  %148 = load i32, i32* %8, align 4
  %149 = icmp slt i32 %147, %148
  br label %150

; <label>:150:                                    ; preds = %146, %142
  %151 = phi i1 [ false, %142 ], [ %149, %146 ]
  br i1 %151, label %152, label %374

; <label>:152:                                    ; preds = %150
  %153 = load i32, i32* %10, align 4
  %154 = add nsw i32 %153, 20
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %186

; <label>:160:                                    ; preds = %152
  %161 = load i32, i32* %10, align 4
  %162 = add nsw i32 %161, 20
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = load i32, i32* @liberty_mark, align 4
  %167 = icmp ne i32 %165, %166
  br i1 %167, label %168, label %186

; <label>:168:                                    ; preds = %160
  %169 = load i32, i32* %10, align 4
  %170 = add nsw i32 %169, 20
  %171 = load i32*, i32** %6, align 8
  %172 = load i32, i32* %7, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %7, align 4
  %174 = sext i32 %172 to i64
  %175 = getelementptr inbounds i32, i32* %171, i64 %174
  store i32 %170, i32* %175, align 4
  %176 = load i32, i32* @liberty_mark, align 4
  %177 = load i32, i32* %10, align 4
  %178 = add nsw i32 %177, 20
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %179
  store i32 %176, i32* %180, align 4
  %181 = load i32, i32* %7, align 4
  %182 = load i32, i32* %5, align 4
  %183 = icmp sge i32 %181, %182
  br i1 %183, label %184, label %185

; <label>:184:                                    ; preds = %168
  br label %374

; <label>:185:                                    ; preds = %168
  br label %186

; <label>:186:                                    ; preds = %185, %160, %152
  %187 = load i32, i32* %10, align 4
  %188 = sub nsw i32 %187, 1
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %220

; <label>:194:                                    ; preds = %186
  %195 = load i32, i32* %10, align 4
  %196 = sub nsw i32 %195, 1
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = load i32, i32* @liberty_mark, align 4
  %201 = icmp ne i32 %199, %200
  br i1 %201, label %202, label %220

; <label>:202:                                    ; preds = %194
  %203 = load i32, i32* %10, align 4
  %204 = sub nsw i32 %203, 1
  %205 = load i32*, i32** %6, align 8
  %206 = load i32, i32* %7, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %7, align 4
  %208 = sext i32 %206 to i64
  %209 = getelementptr inbounds i32, i32* %205, i64 %208
  store i32 %204, i32* %209, align 4
  %210 = load i32, i32* @liberty_mark, align 4
  %211 = load i32, i32* %10, align 4
  %212 = sub nsw i32 %211, 1
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %213
  store i32 %210, i32* %214, align 4
  %215 = load i32, i32* %7, align 4
  %216 = load i32, i32* %5, align 4
  %217 = icmp sge i32 %215, %216
  br i1 %217, label %218, label %219

; <label>:218:                                    ; preds = %202
  br label %374

; <label>:219:                                    ; preds = %202
  br label %220

; <label>:220:                                    ; preds = %219, %194, %186
  %221 = load i32, i32* %10, align 4
  %222 = sub nsw i32 %221, 20
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %286

; <label>:228:                                    ; preds = %220
  %229 = load i32, i32* %10, align 4
  %230 = sub nsw i32 %229, 20
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = load i32, i32* @liberty_mark, align 4
  %235 = icmp ne i32 %233, %234
  br i1 %235, label %236, label %286

; <label>:236:                                    ; preds = %228
  %237 = load i32, i32* @x.61
  %238 = load i32, i32* @y.62
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %236
  %245 = load i32, i32* %10, align 4
  %246 = sub nsw i32 %245, 20
  %247 = load i32*, i32** %6, align 8
  %248 = load i32, i32* %7, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %7, align 4
  %250 = sext i32 %248 to i64
  %251 = getelementptr inbounds i32, i32* %247, i64 %250
  store i32 %246, i32* %251, align 4
  %252 = load i32, i32* @liberty_mark, align 4
  %253 = load i32, i32* %10, align 4
  %254 = sub nsw i32 %253, 20
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %255
  store i32 %252, i32* %256, align 4
  %257 = load i32, i32* %7, align 4
  %258 = load i32, i32* %5, align 4
  %259 = icmp sge i32 %257, %258
  %260 = load i32, i32* @x.61
  %261 = load i32, i32* @y.62
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart231, label %originalBB10alteredBB

originalBBpart231:                                ; preds = %originalBB10
  br i1 %259, label %268, label %285

; <label>:268:                                    ; preds = %originalBBpart231
  %269 = load i32, i32* @x.61
  %270 = load i32, i32* @y.62
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %268
  %277 = load i32, i32* @x.61
  %278 = load i32, i32* @y.62
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %374

; <label>:285:                                    ; preds = %originalBBpart231
  br label %286

; <label>:286:                                    ; preds = %285, %228, %220
  %287 = load i32, i32* @x.61
  %288 = load i32, i32* @y.62
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %286
  %295 = load i32, i32* %10, align 4
  %296 = add nsw i32 %295, 1
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i32
  %301 = icmp eq i32 %300, 0
  %302 = load i32, i32* @x.61
  %303 = load i32, i32* @y.62
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBBpart242, label %originalBB37alteredBB

originalBBpart242:                                ; preds = %originalBB37
  br i1 %301, label %310, label %368

; <label>:310:                                    ; preds = %originalBBpart242
  %311 = load i32, i32* @x.61
  %312 = load i32, i32* @y.62
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %310
  %319 = load i32, i32* %10, align 4
  %320 = add nsw i32 %319, 1
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %321
  %323 = load i32, i32* %322, align 4
  %324 = load i32, i32* @liberty_mark, align 4
  %325 = icmp ne i32 %323, %324
  %326 = load i32, i32* @x.61
  %327 = load i32, i32* @y.62
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBBpart250, label %originalBB44alteredBB

originalBBpart250:                                ; preds = %originalBB44
  br i1 %325, label %334, label %368

; <label>:334:                                    ; preds = %originalBBpart250
  %335 = load i32, i32* %10, align 4
  %336 = add nsw i32 %335, 1
  %337 = load i32*, i32** %6, align 8
  %338 = load i32, i32* %7, align 4
  %339 = add nsw i32 %338, 1
  store i32 %339, i32* %7, align 4
  %340 = sext i32 %338 to i64
  %341 = getelementptr inbounds i32, i32* %337, i64 %340
  store i32 %336, i32* %341, align 4
  %342 = load i32, i32* @liberty_mark, align 4
  %343 = load i32, i32* %10, align 4
  %344 = add nsw i32 %343, 1
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %345
  store i32 %342, i32* %346, align 4
  %347 = load i32, i32* %7, align 4
  %348 = load i32, i32* %5, align 4
  %349 = icmp sge i32 %347, %348
  br i1 %349, label %350, label %367

; <label>:350:                                    ; preds = %334
  %351 = load i32, i32* @x.61
  %352 = load i32, i32* @y.62
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %350
  %359 = load i32, i32* @x.61
  %360 = load i32, i32* @y.62
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %374

; <label>:367:                                    ; preds = %334
  br label %368

; <label>:368:                                    ; preds = %367, %originalBBpart250, %originalBBpart242
  br label %369

; <label>:369:                                    ; preds = %368
  %370 = load i32, i32* %10, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  store i32 %373, i32* %10, align 4
  br label %142

; <label>:374:                                    ; preds = %originalBBpart254, %originalBBpart235, %218, %184, %150
  br label %375

; <label>:375:                                    ; preds = %374, %originalBBpart28
  %376 = load i32, i32* @x.61
  %377 = load i32, i32* @y.62
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %375
  %384 = load i32, i32* %8, align 4
  %385 = load i32, i32* @x.61
  %386 = load i32, i32* @y.62
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  ret i32 %384

originalBBalteredBB:                              ; preds = %originalBB, %58
  store i32 0, i32* %7, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  %393 = load i32, i32* %7, align 4
  %394 = load i32, i32* %8, align 4
  %395 = icmp slt i32 %393, %394
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %117
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %236
  %396 = load i32, i32* %10, align 4
  %_ = sub i32 0, %396
  %gen = add i32 %_, 20
  %_11 = sub i32 %396, 20
  %gen12 = mul i32 %_11, 20
  %397 = sub nsw i32 %396, 20
  %398 = load i32*, i32** %6, align 8
  %399 = load i32, i32* %7, align 4
  %_13 = sub i32 %399, 1
  %gen14 = mul i32 %_13, 1
  %_15 = shl i32 %399, 1
  %_16 = sub i32 %399, 1
  %gen17 = mul i32 %_16, 1
  %400 = add nsw i32 %399, 1
  store i32 %400, i32* %7, align 4
  %401 = sext i32 %399 to i64
  %402 = getelementptr inbounds i32, i32* %398, i64 %401
  store i32 %397, i32* %402, align 4
  %403 = load i32, i32* @liberty_mark, align 4
  %404 = load i32, i32* %10, align 4
  %_18 = sub i32 %404, 20
  %gen19 = mul i32 %_18, 20
  %_20 = shl i32 %404, 20
  %_21 = sub i32 %404, 20
  %gen22 = mul i32 %_21, 20
  %_23 = sub i32 %404, 20
  %gen24 = mul i32 %_23, 20
  %_25 = sub i32 0, %404
  %gen26 = add i32 %_25, 20
  %_27 = sub i32 0, %404
  %gen28 = add i32 %_27, 20
  %405 = sub nsw i32 %404, 20
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %406
  store i32 %403, i32* %407, align 4
  %408 = load i32, i32* %7, align 4
  %409 = load i32, i32* %5, align 4
  %410 = icmp sge i32 %408, %409
  br label %originalBB10

originalBB33alteredBB:                            ; preds = %originalBB33, %268
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %286
  %411 = load i32, i32* %10, align 4
  %_38 = sub i32 0, %411
  %gen39 = add i32 %_38, 1
  %_40 = shl i32 %411, 1
  %412 = add nsw i32 %411, 1
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %413
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  %417 = icmp eq i32 %416, 0
  br label %originalBB37

originalBB44alteredBB:                            ; preds = %originalBB44, %310
  %418 = load i32, i32* %10, align 4
  %_45 = sub i32 %418, 1
  %gen46 = mul i32 %_45, 1
  %_47 = sub i32 %418, 1
  %gen48 = mul i32 %_47, 1
  %419 = add nsw i32 %418, 1
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = load i32, i32* @liberty_mark, align 4
  %424 = icmp ne i32 %422, %423
  br label %originalBB44

originalBB52alteredBB:                            ; preds = %originalBB52, %350
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %375
  %425 = load i32, i32* %8, align 4
  br label %originalBB56
}

; Function Attrs: noinline nounwind uwtable
define i32 @fastlib(i32, i32, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %14 = load i32, i32* %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %3
  br label %28

; <label>:21:                                     ; preds = %3
  %22 = load i32, i32* %5, align 4
  %23 = sdiv i32 %22, 20
  %24 = sub nsw i32 %23, 1
  %25 = load i32, i32* %5, align 4
  %26 = srem i32 %25, 20
  %27 = sub nsw i32 %26, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1435, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %24, i32 %27)
  br label %28

; <label>:28:                                     ; preds = %21, %20
  %29 = load i32, i32* %6, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %34, label %31

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* %6, align 4
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %34, label %35

; <label>:34:                                     ; preds = %31, %28
  br label %42

; <label>:35:                                     ; preds = %31
  %36 = load i32, i32* %5, align 4
  %37 = sdiv i32 %36, 20
  %38 = sub nsw i32 %37, 1
  %39 = load i32, i32* %5, align 4
  %40 = srem i32 %39, 20
  %41 = sub nsw i32 %40, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1436, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 %38, i32 %41)
  br label %42

; <label>:42:                                     ; preds = %35, %34
  %43 = load i32, i32* %5, align 4
  %44 = add nsw i32 %43, 20
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = load i32, i32* %6, align 4
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %51, label %231

; <label>:51:                                     ; preds = %42
  %52 = load i32, i32* %5, align 4
  %53 = add nsw i32 %52, 20
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %8, align 4
  %57 = load i32, i32* %5, align 4
  %58 = sub nsw i32 %57, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = load i32, i32* %6, align 4
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %121

; <label>:65:                                     ; preds = %51
  %66 = load i32, i32* %5, align 4
  %67 = sub nsw i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = load i32, i32* %8, align 4
  %72 = icmp ne i32 %70, %71
  br i1 %72, label %73, label %121

; <label>:73:                                     ; preds = %65
  %74 = load i32, i32* %5, align 4
  %75 = sub nsw i32 %74, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %76
  %78 = load i32, i32* %77, align 4
  store i32 %78, i32* %9, align 4
  %79 = load i32, i32* %5, align 4
  %80 = sub nsw i32 %79, 20
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = load i32, i32* %6, align 4
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %87, label %120

; <label>:87:                                     ; preds = %73
  %88 = load i32, i32* @x.63
  %89 = load i32, i32* @y.64
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %87
  %96 = load i32, i32* %5, align 4
  %97 = sub nsw i32 %96, 20
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = load i32, i32* %8, align 4
  %102 = icmp ne i32 %100, %101
  %103 = load i32, i32* @x.63
  %104 = load i32, i32* @y.64
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %102, label %111, label %120

; <label>:111:                                    ; preds = %originalBBpart2
  %112 = load i32, i32* %5, align 4
  %113 = sub nsw i32 %112, 20
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %9, align 4
  %118 = icmp ne i32 %116, %117
  br i1 %118, label %119, label %120

; <label>:119:                                    ; preds = %111
  store i32 -1, i32* %4, align 4
  br label %2221

; <label>:120:                                    ; preds = %111, %originalBBpart2, %73
  br label %161

; <label>:121:                                    ; preds = %65, %51
  %122 = load i32, i32* %5, align 4
  %123 = sub nsw i32 %122, 20
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = load i32, i32* %6, align 4
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %130, label %160

; <label>:130:                                    ; preds = %121
  %131 = load i32, i32* @x.63
  %132 = load i32, i32* @y.64
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %130
  %139 = load i32, i32* %5, align 4
  %140 = sub nsw i32 %139, 20
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %8, align 4
  %145 = icmp ne i32 %143, %144
  %146 = load i32, i32* @x.63
  %147 = load i32, i32* @y.64
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart224, label %originalBB10alteredBB

originalBBpart224:                                ; preds = %originalBB10
  br i1 %145, label %154, label %160

; <label>:154:                                    ; preds = %originalBBpart224
  %155 = load i32, i32* %5, align 4
  %156 = sub nsw i32 %155, 20
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %9, align 4
  br label %160

; <label>:160:                                    ; preds = %154, %originalBBpart224, %121
  br label %161

; <label>:161:                                    ; preds = %160, %120
  %162 = load i32, i32* %5, align 4
  %163 = add nsw i32 %162, 1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = load i32, i32* %6, align 4
  %169 = icmp eq i32 %167, %168
  br i1 %169, label %170, label %230

; <label>:170:                                    ; preds = %161
  %171 = load i32, i32* %5, align 4
  %172 = add nsw i32 %171, 1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* %8, align 4
  %177 = icmp ne i32 %175, %176
  br i1 %177, label %178, label %230

; <label>:178:                                    ; preds = %170
  %179 = load i32, i32* @x.63
  %180 = load i32, i32* @y.64
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %178
  %187 = load i32, i32* %9, align 4
  %188 = icmp slt i32 %187, 0
  %189 = load i32, i32* @x.63
  %190 = load i32, i32* @y.64
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %188, label %197, label %203

; <label>:197:                                    ; preds = %originalBBpart228
  %198 = load i32, i32* %5, align 4
  %199 = add nsw i32 %198, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %200
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %9, align 4
  br label %229

; <label>:203:                                    ; preds = %originalBBpart228
  %204 = load i32, i32* @x.63
  %205 = load i32, i32* @y.64
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %203
  %212 = load i32, i32* %5, align 4
  %213 = add nsw i32 %212, 1
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = load i32, i32* %9, align 4
  %218 = icmp ne i32 %216, %217
  %219 = load i32, i32* @x.63
  %220 = load i32, i32* @y.64
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart239, label %originalBB30alteredBB

originalBBpart239:                                ; preds = %originalBB30
  br i1 %218, label %227, label %228

; <label>:227:                                    ; preds = %originalBBpart239
  store i32 -1, i32* %4, align 4
  br label %2221

; <label>:228:                                    ; preds = %originalBBpart239
  br label %229

; <label>:229:                                    ; preds = %228, %197
  br label %230

; <label>:230:                                    ; preds = %229, %170, %161
  br label %487

; <label>:231:                                    ; preds = %42
  %232 = load i32, i32* @x.63
  %233 = load i32, i32* @y.64
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %231
  %240 = load i32, i32* %5, align 4
  %241 = sub nsw i32 %240, 1
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = load i32, i32* %6, align 4
  %247 = icmp eq i32 %245, %246
  %248 = load i32, i32* @x.63
  %249 = load i32, i32* @y.64
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart251, label %originalBB41alteredBB

originalBBpart251:                                ; preds = %originalBB41
  br i1 %247, label %256, label %367

; <label>:256:                                    ; preds = %originalBBpart251
  %257 = load i32, i32* %5, align 4
  %258 = sub nsw i32 %257, 1
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %259
  %261 = load i32, i32* %260, align 4
  store i32 %261, i32* %8, align 4
  %262 = load i32, i32* %5, align 4
  %263 = sub nsw i32 %262, 20
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = load i32, i32* %6, align 4
  %269 = icmp eq i32 %267, %268
  br i1 %269, label %270, label %310

; <label>:270:                                    ; preds = %256
  %271 = load i32, i32* %5, align 4
  %272 = sub nsw i32 %271, 20
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = load i32, i32* %8, align 4
  %277 = icmp ne i32 %275, %276
  br i1 %277, label %278, label %310

; <label>:278:                                    ; preds = %270
  %279 = load i32, i32* %5, align 4
  %280 = sub nsw i32 %279, 20
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  store i32 %283, i32* %9, align 4
  %284 = load i32, i32* %5, align 4
  %285 = add nsw i32 %284, 1
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = load i32, i32* %6, align 4
  %291 = icmp eq i32 %289, %290
  br i1 %291, label %292, label %309

; <label>:292:                                    ; preds = %278
  %293 = load i32, i32* %5, align 4
  %294 = add nsw i32 %293, 1
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = load i32, i32* %8, align 4
  %299 = icmp ne i32 %297, %298
  br i1 %299, label %300, label %309

; <label>:300:                                    ; preds = %292
  %301 = load i32, i32* %5, align 4
  %302 = add nsw i32 %301, 1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = load i32, i32* %9, align 4
  %307 = icmp ne i32 %305, %306
  br i1 %307, label %308, label %309

; <label>:308:                                    ; preds = %300
  store i32 -1, i32* %4, align 4
  br label %2221

; <label>:309:                                    ; preds = %300, %292, %278
  br label %366

; <label>:310:                                    ; preds = %270, %256
  %311 = load i32, i32* %5, align 4
  %312 = add nsw i32 %311, 1
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %313
  %315 = load i8, i8* %314, align 1
  %316 = zext i8 %315 to i32
  %317 = load i32, i32* %6, align 4
  %318 = icmp eq i32 %316, %317
  br i1 %318, label %319, label %349

; <label>:319:                                    ; preds = %310
  %320 = load i32, i32* %5, align 4
  %321 = add nsw i32 %320, 1
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = load i32, i32* %8, align 4
  %326 = icmp ne i32 %324, %325
  br i1 %326, label %327, label %349

; <label>:327:                                    ; preds = %319
  %328 = load i32, i32* @x.63
  %329 = load i32, i32* @y.64
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %327
  %336 = load i32, i32* %5, align 4
  %337 = add nsw i32 %336, 1
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %338
  %340 = load i32, i32* %339, align 4
  store i32 %340, i32* %9, align 4
  %341 = load i32, i32* @x.63
  %342 = load i32, i32* @y.64
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart265, label %originalBB53alteredBB

originalBBpart265:                                ; preds = %originalBB53
  br label %349

; <label>:349:                                    ; preds = %originalBBpart265, %319, %310
  %350 = load i32, i32* @x.63
  %351 = load i32, i32* @y.64
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %349
  %358 = load i32, i32* @x.63
  %359 = load i32, i32* @y.64
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %366

; <label>:366:                                    ; preds = %originalBBpart269, %309
  br label %486

; <label>:367:                                    ; preds = %originalBBpart251
  %368 = load i32, i32* %5, align 4
  %369 = sub nsw i32 %368, 20
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %370
  %372 = load i8, i8* %371, align 1
  %373 = zext i8 %372 to i32
  %374 = load i32, i32* %6, align 4
  %375 = icmp eq i32 %373, %374
  br i1 %375, label %376, label %437

; <label>:376:                                    ; preds = %367
  %377 = load i32, i32* @x.63
  %378 = load i32, i32* @y.64
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %376
  %385 = load i32, i32* %5, align 4
  %386 = sub nsw i32 %385, 20
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  store i32 %389, i32* %8, align 4
  %390 = load i32, i32* %5, align 4
  %391 = add nsw i32 %390, 1
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %392
  %394 = load i8, i8* %393, align 1
  %395 = zext i8 %394 to i32
  %396 = load i32, i32* %6, align 4
  %397 = icmp eq i32 %395, %396
  %398 = load i32, i32* @x.63
  %399 = load i32, i32* @y.64
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBBpart278, label %originalBB71alteredBB

originalBBpart278:                                ; preds = %originalBB71
  br i1 %397, label %406, label %436

; <label>:406:                                    ; preds = %originalBBpart278
  %407 = load i32, i32* @x.63
  %408 = load i32, i32* @y.64
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %406
  %415 = load i32, i32* %5, align 4
  %416 = add nsw i32 %415, 1
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = load i32, i32* %8, align 4
  %421 = icmp ne i32 %419, %420
  %422 = load i32, i32* @x.63
  %423 = load i32, i32* @y.64
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart289, label %originalBB80alteredBB

originalBBpart289:                                ; preds = %originalBB80
  br i1 %421, label %430, label %436

; <label>:430:                                    ; preds = %originalBBpart289
  %431 = load i32, i32* %5, align 4
  %432 = add nsw i32 %431, 1
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %433
  %435 = load i32, i32* %434, align 4
  store i32 %435, i32* %9, align 4
  br label %436

; <label>:436:                                    ; preds = %430, %originalBBpart289, %originalBBpart278
  br label %469

; <label>:437:                                    ; preds = %367
  %438 = load i32, i32* @x.63
  %439 = load i32, i32* @y.64
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %437
  %446 = load i32, i32* %5, align 4
  %447 = add nsw i32 %446, 1
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %448
  %450 = load i8, i8* %449, align 1
  %451 = zext i8 %450 to i32
  %452 = load i32, i32* %6, align 4
  %453 = icmp eq i32 %451, %452
  %454 = load i32, i32* @x.63
  %455 = load i32, i32* @y.64
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBBpart2103, label %originalBB91alteredBB

originalBBpart2103:                               ; preds = %originalBB91
  br i1 %453, label %462, label %468

; <label>:462:                                    ; preds = %originalBBpart2103
  %463 = load i32, i32* %5, align 4
  %464 = add nsw i32 %463, 1
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %465
  %467 = load i32, i32* %466, align 4
  store i32 %467, i32* %8, align 4
  br label %468

; <label>:468:                                    ; preds = %462, %originalBBpart2103
  br label %469

; <label>:469:                                    ; preds = %468, %436
  %470 = load i32, i32* @x.63
  %471 = load i32, i32* @y.64
  %472 = sub i32 %470, 1
  %473 = mul i32 %470, %472
  %474 = urem i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %475, %476
  br i1 %477, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %469
  %478 = load i32, i32* @x.63
  %479 = load i32, i32* @y.64
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %486

; <label>:486:                                    ; preds = %originalBBpart2107, %366
  br label %487

; <label>:487:                                    ; preds = %486, %230
  %488 = load i32, i32* %7, align 4
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %490, label %1783

; <label>:490:                                    ; preds = %487
  %491 = load i32, i32* %8, align 4
  %492 = icmp slt i32 %491, 0
  br i1 %492, label %493, label %570

; <label>:493:                                    ; preds = %490
  %494 = load i32, i32* %5, align 4
  %495 = add nsw i32 %494, 20
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %496
  %498 = load i8, i8* %497, align 1
  %499 = zext i8 %498 to i32
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %504

; <label>:501:                                    ; preds = %493
  %502 = load i32, i32* %10, align 4
  %503 = add nsw i32 %502, 1
  store i32 %503, i32* %10, align 4
  br label %504

; <label>:504:                                    ; preds = %501, %493
  %505 = load i32, i32* %5, align 4
  %506 = sub nsw i32 %505, 1
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %507
  %509 = load i8, i8* %508, align 1
  %510 = zext i8 %509 to i32
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %515

; <label>:512:                                    ; preds = %504
  %513 = load i32, i32* %10, align 4
  %514 = add nsw i32 %513, 1
  store i32 %514, i32* %10, align 4
  br label %515

; <label>:515:                                    ; preds = %512, %504
  %516 = load i32, i32* %5, align 4
  %517 = sub nsw i32 %516, 20
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %518
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %542

; <label>:523:                                    ; preds = %515
  %524 = load i32, i32* @x.63
  %525 = load i32, i32* @y.64
  %526 = sub i32 %524, 1
  %527 = mul i32 %524, %526
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %529, %530
  br i1 %531, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %523
  %532 = load i32, i32* %10, align 4
  %533 = add nsw i32 %532, 1
  store i32 %533, i32* %10, align 4
  %534 = load i32, i32* @x.63
  %535 = load i32, i32* @y.64
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBBpart2117, label %originalBB109alteredBB

originalBBpart2117:                               ; preds = %originalBB109
  br label %542

; <label>:542:                                    ; preds = %originalBBpart2117, %515
  %543 = load i32, i32* %5, align 4
  %544 = add nsw i32 %543, 1
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %545
  %547 = load i8, i8* %546, align 1
  %548 = zext i8 %547 to i32
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %569

; <label>:550:                                    ; preds = %542
  %551 = load i32, i32* @x.63
  %552 = load i32, i32* @y.64
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %550
  %559 = load i32, i32* %10, align 4
  %560 = add nsw i32 %559, 1
  store i32 %560, i32* %10, align 4
  %561 = load i32, i32* @x.63
  %562 = load i32, i32* @y.64
  %563 = sub i32 %561, 1
  %564 = mul i32 %561, %563
  %565 = urem i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %562, 10
  %568 = or i1 %566, %567
  br i1 %568, label %originalBBpart2125, label %originalBB119alteredBB

originalBBpart2125:                               ; preds = %originalBB119
  br label %569

; <label>:569:                                    ; preds = %originalBBpart2125, %542
  br label %1782

; <label>:570:                                    ; preds = %490
  %571 = load i32, i32* %9, align 4
  %572 = icmp slt i32 %571, 0
  br i1 %572, label %573, label %998

; <label>:573:                                    ; preds = %570
  %574 = load i32, i32* @x.63
  %575 = load i32, i32* @y.64
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %originalBB127alteredBB, %573
  %582 = load i32, i32* %5, align 4
  %583 = add nsw i32 %582, 20
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %584
  %586 = load i8, i8* %585, align 1
  %587 = zext i8 %586 to i32
  %588 = icmp eq i32 %587, 0
  %589 = load i32, i32* @x.63
  %590 = load i32, i32* @y.64
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBBpart2132, label %originalBB127alteredBB

originalBBpart2132:                               ; preds = %originalBB127
  br i1 %588, label %597, label %673

; <label>:597:                                    ; preds = %originalBBpart2132
  %598 = load i32, i32* %5, align 4
  %599 = add nsw i32 %598, 20
  %600 = add nsw i32 %599, 20
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %601
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i32
  %605 = load i32, i32* %6, align 4
  %606 = icmp eq i32 %604, %605
  br i1 %606, label %607, label %616

; <label>:607:                                    ; preds = %597
  %608 = load i32, i32* %5, align 4
  %609 = add nsw i32 %608, 20
  %610 = add nsw i32 %609, 20
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %611
  %613 = load i32, i32* %612, align 4
  %614 = load i32, i32* %8, align 4
  %615 = icmp eq i32 %613, %614
  br i1 %615, label %673, label %616

; <label>:616:                                    ; preds = %607, %597
  %617 = load i32, i32* %5, align 4
  %618 = add nsw i32 %617, 20
  %619 = sub nsw i32 %618, 1
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %620
  %622 = load i8, i8* %621, align 1
  %623 = zext i8 %622 to i32
  %624 = load i32, i32* %6, align 4
  %625 = icmp eq i32 %623, %624
  br i1 %625, label %626, label %635

; <label>:626:                                    ; preds = %616
  %627 = load i32, i32* %5, align 4
  %628 = add nsw i32 %627, 20
  %629 = sub nsw i32 %628, 1
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %630
  %632 = load i32, i32* %631, align 4
  %633 = load i32, i32* %8, align 4
  %634 = icmp eq i32 %632, %633
  br i1 %634, label %673, label %635

; <label>:635:                                    ; preds = %626, %616
  %636 = load i32, i32* %5, align 4
  %637 = add nsw i32 %636, 20
  %638 = add nsw i32 %637, 1
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %639
  %641 = load i8, i8* %640, align 1
  %642 = zext i8 %641 to i32
  %643 = load i32, i32* %6, align 4
  %644 = icmp eq i32 %642, %643
  br i1 %644, label %645, label %670

; <label>:645:                                    ; preds = %635
  %646 = load i32, i32* @x.63
  %647 = load i32, i32* @y.64
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %645
  %654 = load i32, i32* %5, align 4
  %655 = add nsw i32 %654, 20
  %656 = add nsw i32 %655, 1
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %657
  %659 = load i32, i32* %658, align 4
  %660 = load i32, i32* %8, align 4
  %661 = icmp eq i32 %659, %660
  %662 = load i32, i32* @x.63
  %663 = load i32, i32* @y.64
  %664 = sub i32 %662, 1
  %665 = mul i32 %662, %664
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %663, 10
  %669 = or i1 %667, %668
  br i1 %669, label %originalBBpart2142, label %originalBB134alteredBB

originalBBpart2142:                               ; preds = %originalBB134
  br i1 %661, label %673, label %670

; <label>:670:                                    ; preds = %originalBBpart2142, %635
  %671 = load i32, i32* %10, align 4
  %672 = add nsw i32 %671, 1
  store i32 %672, i32* %10, align 4
  br label %673

; <label>:673:                                    ; preds = %670, %originalBBpart2142, %626, %607, %originalBBpart2132
  %674 = load i32, i32* @x.63
  %675 = load i32, i32* @y.64
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %originalBB144alteredBB, %673
  %682 = load i32, i32* %5, align 4
  %683 = sub nsw i32 %682, 1
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %684
  %686 = load i8, i8* %685, align 1
  %687 = zext i8 %686 to i32
  %688 = icmp eq i32 %687, 0
  %689 = load i32, i32* @x.63
  %690 = load i32, i32* @y.64
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBBpart2155, label %originalBB144alteredBB

originalBBpart2155:                               ; preds = %originalBB144
  br i1 %688, label %697, label %805

; <label>:697:                                    ; preds = %originalBBpart2155
  %698 = load i32, i32* @x.63
  %699 = load i32, i32* @y.64
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %originalBB157alteredBB, %697
  %706 = load i32, i32* %5, align 4
  %707 = sub nsw i32 %706, 1
  %708 = sub nsw i32 %707, 1
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %709
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = load i32, i32* %6, align 4
  %714 = icmp eq i32 %712, %713
  %715 = load i32, i32* @x.63
  %716 = load i32, i32* @y.64
  %717 = sub i32 %715, 1
  %718 = mul i32 %715, %717
  %719 = urem i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = icmp slt i32 %716, 10
  %722 = or i1 %720, %721
  br i1 %722, label %originalBBpart2185, label %originalBB157alteredBB

originalBBpart2185:                               ; preds = %originalBB157
  br i1 %714, label %723, label %732

; <label>:723:                                    ; preds = %originalBBpart2185
  %724 = load i32, i32* %5, align 4
  %725 = sub nsw i32 %724, 1
  %726 = sub nsw i32 %725, 1
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %727
  %729 = load i32, i32* %728, align 4
  %730 = load i32, i32* %8, align 4
  %731 = icmp eq i32 %729, %730
  br i1 %731, label %805, label %732

; <label>:732:                                    ; preds = %723, %originalBBpart2185
  %733 = load i32, i32* @x.63
  %734 = load i32, i32* @y.64
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %originalBB187alteredBB, %732
  %741 = load i32, i32* %5, align 4
  %742 = sub nsw i32 %741, 1
  %743 = sub nsw i32 %742, 20
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %744
  %746 = load i8, i8* %745, align 1
  %747 = zext i8 %746 to i32
  %748 = load i32, i32* %6, align 4
  %749 = icmp eq i32 %747, %748
  %750 = load i32, i32* @x.63
  %751 = load i32, i32* @y.64
  %752 = sub i32 %750, 1
  %753 = mul i32 %750, %752
  %754 = urem i32 %753, 2
  %755 = icmp eq i32 %754, 0
  %756 = icmp slt i32 %751, 10
  %757 = or i1 %755, %756
  br i1 %757, label %originalBBpart2194, label %originalBB187alteredBB

originalBBpart2194:                               ; preds = %originalBB187
  br i1 %749, label %758, label %767

; <label>:758:                                    ; preds = %originalBBpart2194
  %759 = load i32, i32* %5, align 4
  %760 = sub nsw i32 %759, 1
  %761 = sub nsw i32 %760, 20
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %762
  %764 = load i32, i32* %763, align 4
  %765 = load i32, i32* %8, align 4
  %766 = icmp eq i32 %764, %765
  br i1 %766, label %805, label %767

; <label>:767:                                    ; preds = %758, %originalBBpart2194
  %768 = load i32, i32* %5, align 4
  %769 = sub nsw i32 %768, 1
  %770 = add nsw i32 %769, 20
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %771
  %773 = load i8, i8* %772, align 1
  %774 = zext i8 %773 to i32
  %775 = load i32, i32* %6, align 4
  %776 = icmp eq i32 %774, %775
  br i1 %776, label %777, label %786

; <label>:777:                                    ; preds = %767
  %778 = load i32, i32* %5, align 4
  %779 = sub nsw i32 %778, 1
  %780 = add nsw i32 %779, 20
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %781
  %783 = load i32, i32* %782, align 4
  %784 = load i32, i32* %8, align 4
  %785 = icmp eq i32 %783, %784
  br i1 %785, label %805, label %786

; <label>:786:                                    ; preds = %777, %767
  %787 = load i32, i32* @x.63
  %788 = load i32, i32* @y.64
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %originalBB196alteredBB, %786
  %795 = load i32, i32* %10, align 4
  %796 = add nsw i32 %795, 1
  store i32 %796, i32* %10, align 4
  %797 = load i32, i32* @x.63
  %798 = load i32, i32* @y.64
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBBpart2212, label %originalBB196alteredBB

originalBBpart2212:                               ; preds = %originalBB196
  br label %805

; <label>:805:                                    ; preds = %originalBBpart2212, %777, %758, %723, %originalBBpart2155
  %806 = load i32, i32* @x.63
  %807 = load i32, i32* @y.64
  %808 = sub i32 %806, 1
  %809 = mul i32 %806, %808
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %807, 10
  %813 = or i1 %811, %812
  br i1 %813, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %805
  %814 = load i32, i32* %5, align 4
  %815 = sub nsw i32 %814, 20
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %816
  %818 = load i8, i8* %817, align 1
  %819 = zext i8 %818 to i32
  %820 = icmp eq i32 %819, 0
  %821 = load i32, i32* @x.63
  %822 = load i32, i32* @y.64
  %823 = sub i32 %821, 1
  %824 = mul i32 %821, %823
  %825 = urem i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = icmp slt i32 %822, 10
  %828 = or i1 %826, %827
  br i1 %828, label %originalBBpart2222, label %originalBB214alteredBB

originalBBpart2222:                               ; preds = %originalBB214
  br i1 %820, label %829, label %905

; <label>:829:                                    ; preds = %originalBBpart2222
  %830 = load i32, i32* %5, align 4
  %831 = sub nsw i32 %830, 20
  %832 = sub nsw i32 %831, 20
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %833
  %835 = load i8, i8* %834, align 1
  %836 = zext i8 %835 to i32
  %837 = load i32, i32* %6, align 4
  %838 = icmp eq i32 %836, %837
  br i1 %838, label %839, label %848

; <label>:839:                                    ; preds = %829
  %840 = load i32, i32* %5, align 4
  %841 = sub nsw i32 %840, 20
  %842 = sub nsw i32 %841, 20
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %843
  %845 = load i32, i32* %844, align 4
  %846 = load i32, i32* %8, align 4
  %847 = icmp eq i32 %845, %846
  br i1 %847, label %905, label %848

; <label>:848:                                    ; preds = %839, %829
  %849 = load i32, i32* @x.63
  %850 = load i32, i32* @y.64
  %851 = sub i32 %849, 1
  %852 = mul i32 %849, %851
  %853 = urem i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = icmp slt i32 %850, 10
  %856 = or i1 %854, %855
  br i1 %856, label %originalBB224, label %originalBB224alteredBB

originalBB224:                                    ; preds = %originalBB224alteredBB, %848
  %857 = load i32, i32* %5, align 4
  %858 = sub nsw i32 %857, 20
  %859 = add nsw i32 %858, 1
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %860
  %862 = load i8, i8* %861, align 1
  %863 = zext i8 %862 to i32
  %864 = load i32, i32* %6, align 4
  %865 = icmp eq i32 %863, %864
  %866 = load i32, i32* @x.63
  %867 = load i32, i32* @y.64
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBBpart2233, label %originalBB224alteredBB

originalBBpart2233:                               ; preds = %originalBB224
  br i1 %865, label %874, label %883

; <label>:874:                                    ; preds = %originalBBpart2233
  %875 = load i32, i32* %5, align 4
  %876 = sub nsw i32 %875, 20
  %877 = add nsw i32 %876, 1
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %878
  %880 = load i32, i32* %879, align 4
  %881 = load i32, i32* %8, align 4
  %882 = icmp eq i32 %880, %881
  br i1 %882, label %905, label %883

; <label>:883:                                    ; preds = %874, %originalBBpart2233
  %884 = load i32, i32* %5, align 4
  %885 = sub nsw i32 %884, 20
  %886 = sub nsw i32 %885, 1
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %887
  %889 = load i8, i8* %888, align 1
  %890 = zext i8 %889 to i32
  %891 = load i32, i32* %6, align 4
  %892 = icmp eq i32 %890, %891
  br i1 %892, label %893, label %902

; <label>:893:                                    ; preds = %883
  %894 = load i32, i32* %5, align 4
  %895 = sub nsw i32 %894, 20
  %896 = sub nsw i32 %895, 1
  %897 = sext i32 %896 to i64
  %898 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %897
  %899 = load i32, i32* %898, align 4
  %900 = load i32, i32* %8, align 4
  %901 = icmp eq i32 %899, %900
  br i1 %901, label %905, label %902

; <label>:902:                                    ; preds = %893, %883
  %903 = load i32, i32* %10, align 4
  %904 = add nsw i32 %903, 1
  store i32 %904, i32* %10, align 4
  br label %905

; <label>:905:                                    ; preds = %902, %893, %874, %839, %originalBBpart2222
  %906 = load i32, i32* @x.63
  %907 = load i32, i32* @y.64
  %908 = sub i32 %906, 1
  %909 = mul i32 %906, %908
  %910 = urem i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = icmp slt i32 %907, 10
  %913 = or i1 %911, %912
  br i1 %913, label %originalBB235, label %originalBB235alteredBB

originalBB235:                                    ; preds = %originalBB235alteredBB, %905
  %914 = load i32, i32* %5, align 4
  %915 = add nsw i32 %914, 1
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %916
  %918 = load i8, i8* %917, align 1
  %919 = zext i8 %918 to i32
  %920 = icmp eq i32 %919, 0
  %921 = load i32, i32* @x.63
  %922 = load i32, i32* @y.64
  %923 = sub i32 %921, 1
  %924 = mul i32 %921, %923
  %925 = urem i32 %924, 2
  %926 = icmp eq i32 %925, 0
  %927 = icmp slt i32 %922, 10
  %928 = or i1 %926, %927
  br i1 %928, label %originalBBpart2240, label %originalBB235alteredBB

originalBBpart2240:                               ; preds = %originalBB235
  br i1 %920, label %929, label %989

; <label>:929:                                    ; preds = %originalBBpart2240
  %930 = load i32, i32* %5, align 4
  %931 = add nsw i32 %930, 1
  %932 = add nsw i32 %931, 1
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %933
  %935 = load i8, i8* %934, align 1
  %936 = zext i8 %935 to i32
  %937 = load i32, i32* %6, align 4
  %938 = icmp eq i32 %936, %937
  br i1 %938, label %939, label %948

; <label>:939:                                    ; preds = %929
  %940 = load i32, i32* %5, align 4
  %941 = add nsw i32 %940, 1
  %942 = add nsw i32 %941, 1
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %943
  %945 = load i32, i32* %944, align 4
  %946 = load i32, i32* %8, align 4
  %947 = icmp eq i32 %945, %946
  br i1 %947, label %989, label %948

; <label>:948:                                    ; preds = %939, %929
  %949 = load i32, i32* %5, align 4
  %950 = add nsw i32 %949, 1
  %951 = add nsw i32 %950, 20
  %952 = sext i32 %951 to i64
  %953 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %952
  %954 = load i8, i8* %953, align 1
  %955 = zext i8 %954 to i32
  %956 = load i32, i32* %6, align 4
  %957 = icmp eq i32 %955, %956
  br i1 %957, label %958, label %967

; <label>:958:                                    ; preds = %948
  %959 = load i32, i32* %5, align 4
  %960 = add nsw i32 %959, 1
  %961 = add nsw i32 %960, 20
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %962
  %964 = load i32, i32* %963, align 4
  %965 = load i32, i32* %8, align 4
  %966 = icmp eq i32 %964, %965
  br i1 %966, label %989, label %967

; <label>:967:                                    ; preds = %958, %948
  %968 = load i32, i32* %5, align 4
  %969 = add nsw i32 %968, 1
  %970 = sub nsw i32 %969, 20
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %971
  %973 = load i8, i8* %972, align 1
  %974 = zext i8 %973 to i32
  %975 = load i32, i32* %6, align 4
  %976 = icmp eq i32 %974, %975
  br i1 %976, label %977, label %986

; <label>:977:                                    ; preds = %967
  %978 = load i32, i32* %5, align 4
  %979 = add nsw i32 %978, 1
  %980 = sub nsw i32 %979, 20
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %981
  %983 = load i32, i32* %982, align 4
  %984 = load i32, i32* %8, align 4
  %985 = icmp eq i32 %983, %984
  br i1 %985, label %989, label %986

; <label>:986:                                    ; preds = %977, %967
  %987 = load i32, i32* %10, align 4
  %988 = add nsw i32 %987, 1
  store i32 %988, i32* %10, align 4
  br label %989

; <label>:989:                                    ; preds = %986, %977, %958, %939, %originalBBpart2240
  %990 = load i32, i32* %8, align 4
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %991
  %993 = getelementptr inbounds %struct.string_data, %struct.string_data* %992, i32 0, i32 3
  %994 = load i32, i32* %993, align 4
  %995 = sub nsw i32 %994, 1
  %996 = load i32, i32* %10, align 4
  %997 = add nsw i32 %996, %995
  store i32 %997, i32* %10, align 4
  br label %1781

; <label>:998:                                    ; preds = %570
  %999 = load i32, i32* %5, align 4
  %1000 = add nsw i32 %999, 20
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1001
  %1003 = load i8, i8* %1002, align 1
  %1004 = zext i8 %1003 to i32
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1006, label %1203

; <label>:1006:                                   ; preds = %998
  %1007 = load i32, i32* @x.63
  %1008 = load i32, i32* @y.64
  %1009 = sub i32 %1007, 1
  %1010 = mul i32 %1007, %1009
  %1011 = urem i32 %1010, 2
  %1012 = icmp eq i32 %1011, 0
  %1013 = icmp slt i32 %1008, 10
  %1014 = or i1 %1012, %1013
  br i1 %1014, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %originalBB242alteredBB, %1006
  %1015 = load i32, i32* %5, align 4
  %1016 = add nsw i32 %1015, 20
  %1017 = add nsw i32 %1016, 20
  %1018 = sext i32 %1017 to i64
  %1019 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1018
  %1020 = load i8, i8* %1019, align 1
  %1021 = zext i8 %1020 to i32
  %1022 = load i32, i32* %6, align 4
  %1023 = icmp eq i32 %1021, %1022
  %1024 = load i32, i32* @x.63
  %1025 = load i32, i32* @y.64
  %1026 = sub i32 %1024, 1
  %1027 = mul i32 %1024, %1026
  %1028 = urem i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = icmp slt i32 %1025, 10
  %1031 = or i1 %1029, %1030
  br i1 %1031, label %originalBBpart2264, label %originalBB242alteredBB

originalBBpart2264:                               ; preds = %originalBB242
  br i1 %1023, label %1032, label %1041

; <label>:1032:                                   ; preds = %originalBBpart2264
  %1033 = load i32, i32* %5, align 4
  %1034 = add nsw i32 %1033, 20
  %1035 = add nsw i32 %1034, 20
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1036
  %1038 = load i32, i32* %1037, align 4
  %1039 = load i32, i32* %8, align 4
  %1040 = icmp eq i32 %1038, %1039
  br i1 %1040, label %1203, label %1041

; <label>:1041:                                   ; preds = %1032, %originalBBpart2264
  %1042 = load i32, i32* %5, align 4
  %1043 = add nsw i32 %1042, 20
  %1044 = sub nsw i32 %1043, 1
  %1045 = sext i32 %1044 to i64
  %1046 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1045
  %1047 = load i8, i8* %1046, align 1
  %1048 = zext i8 %1047 to i32
  %1049 = load i32, i32* %6, align 4
  %1050 = icmp eq i32 %1048, %1049
  br i1 %1050, label %1051, label %1060

; <label>:1051:                                   ; preds = %1041
  %1052 = load i32, i32* %5, align 4
  %1053 = add nsw i32 %1052, 20
  %1054 = sub nsw i32 %1053, 1
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1055
  %1057 = load i32, i32* %1056, align 4
  %1058 = load i32, i32* %8, align 4
  %1059 = icmp eq i32 %1057, %1058
  br i1 %1059, label %1203, label %1060

; <label>:1060:                                   ; preds = %1051, %1041
  %1061 = load i32, i32* @x.63
  %1062 = load i32, i32* @y.64
  %1063 = sub i32 %1061, 1
  %1064 = mul i32 %1061, %1063
  %1065 = urem i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = icmp slt i32 %1062, 10
  %1068 = or i1 %1066, %1067
  br i1 %1068, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %1060
  %1069 = load i32, i32* %5, align 4
  %1070 = add nsw i32 %1069, 20
  %1071 = add nsw i32 %1070, 1
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1072
  %1074 = load i8, i8* %1073, align 1
  %1075 = zext i8 %1074 to i32
  %1076 = load i32, i32* %6, align 4
  %1077 = icmp eq i32 %1075, %1076
  %1078 = load i32, i32* @x.63
  %1079 = load i32, i32* @y.64
  %1080 = sub i32 %1078, 1
  %1081 = mul i32 %1078, %1080
  %1082 = urem i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = icmp slt i32 %1079, 10
  %1085 = or i1 %1083, %1084
  br i1 %1085, label %originalBBpart2276, label %originalBB266alteredBB

originalBBpart2276:                               ; preds = %originalBB266
  br i1 %1077, label %1086, label %1095

; <label>:1086:                                   ; preds = %originalBBpart2276
  %1087 = load i32, i32* %5, align 4
  %1088 = add nsw i32 %1087, 20
  %1089 = add nsw i32 %1088, 1
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1090
  %1092 = load i32, i32* %1091, align 4
  %1093 = load i32, i32* %8, align 4
  %1094 = icmp eq i32 %1092, %1093
  br i1 %1094, label %1203, label %1095

; <label>:1095:                                   ; preds = %1086, %originalBBpart2276
  %1096 = load i32, i32* %5, align 4
  %1097 = add nsw i32 %1096, 20
  %1098 = add nsw i32 %1097, 20
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1099
  %1101 = load i8, i8* %1100, align 1
  %1102 = zext i8 %1101 to i32
  %1103 = load i32, i32* %6, align 4
  %1104 = icmp eq i32 %1102, %1103
  br i1 %1104, label %1105, label %1114

; <label>:1105:                                   ; preds = %1095
  %1106 = load i32, i32* %5, align 4
  %1107 = add nsw i32 %1106, 20
  %1108 = add nsw i32 %1107, 20
  %1109 = sext i32 %1108 to i64
  %1110 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1109
  %1111 = load i32, i32* %1110, align 4
  %1112 = load i32, i32* %9, align 4
  %1113 = icmp eq i32 %1111, %1112
  br i1 %1113, label %1203, label %1114

; <label>:1114:                                   ; preds = %1105, %1095
  %1115 = load i32, i32* %5, align 4
  %1116 = add nsw i32 %1115, 20
  %1117 = sub nsw i32 %1116, 1
  %1118 = sext i32 %1117 to i64
  %1119 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1118
  %1120 = load i8, i8* %1119, align 1
  %1121 = zext i8 %1120 to i32
  %1122 = load i32, i32* %6, align 4
  %1123 = icmp eq i32 %1121, %1122
  br i1 %1123, label %1124, label %1149

; <label>:1124:                                   ; preds = %1114
  %1125 = load i32, i32* @x.63
  %1126 = load i32, i32* @y.64
  %1127 = sub i32 %1125, 1
  %1128 = mul i32 %1125, %1127
  %1129 = urem i32 %1128, 2
  %1130 = icmp eq i32 %1129, 0
  %1131 = icmp slt i32 %1126, 10
  %1132 = or i1 %1130, %1131
  br i1 %1132, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %originalBB278alteredBB, %1124
  %1133 = load i32, i32* %5, align 4
  %1134 = add nsw i32 %1133, 20
  %1135 = sub nsw i32 %1134, 1
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1136
  %1138 = load i32, i32* %1137, align 4
  %1139 = load i32, i32* %9, align 4
  %1140 = icmp eq i32 %1138, %1139
  %1141 = load i32, i32* @x.63
  %1142 = load i32, i32* @y.64
  %1143 = sub i32 %1141, 1
  %1144 = mul i32 %1141, %1143
  %1145 = urem i32 %1144, 2
  %1146 = icmp eq i32 %1145, 0
  %1147 = icmp slt i32 %1142, 10
  %1148 = or i1 %1146, %1147
  br i1 %1148, label %originalBBpart2306, label %originalBB278alteredBB

originalBBpart2306:                               ; preds = %originalBB278
  br i1 %1140, label %1203, label %1149

; <label>:1149:                                   ; preds = %originalBBpart2306, %1114
  %1150 = load i32, i32* @x.63
  %1151 = load i32, i32* @y.64
  %1152 = sub i32 %1150, 1
  %1153 = mul i32 %1150, %1152
  %1154 = urem i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  %1156 = icmp slt i32 %1151, 10
  %1157 = or i1 %1155, %1156
  br i1 %1157, label %originalBB308, label %originalBB308alteredBB

originalBB308:                                    ; preds = %originalBB308alteredBB, %1149
  %1158 = load i32, i32* %5, align 4
  %1159 = add nsw i32 %1158, 20
  %1160 = add nsw i32 %1159, 1
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1161
  %1163 = load i8, i8* %1162, align 1
  %1164 = zext i8 %1163 to i32
  %1165 = load i32, i32* %6, align 4
  %1166 = icmp eq i32 %1164, %1165
  %1167 = load i32, i32* @x.63
  %1168 = load i32, i32* @y.64
  %1169 = sub i32 %1167, 1
  %1170 = mul i32 %1167, %1169
  %1171 = urem i32 %1170, 2
  %1172 = icmp eq i32 %1171, 0
  %1173 = icmp slt i32 %1168, 10
  %1174 = or i1 %1172, %1173
  br i1 %1174, label %originalBBpart2331, label %originalBB308alteredBB

originalBBpart2331:                               ; preds = %originalBB308
  br i1 %1166, label %1175, label %1200

; <label>:1175:                                   ; preds = %originalBBpart2331
  %1176 = load i32, i32* @x.63
  %1177 = load i32, i32* @y.64
  %1178 = sub i32 %1176, 1
  %1179 = mul i32 %1176, %1178
  %1180 = urem i32 %1179, 2
  %1181 = icmp eq i32 %1180, 0
  %1182 = icmp slt i32 %1177, 10
  %1183 = or i1 %1181, %1182
  br i1 %1183, label %originalBB333, label %originalBB333alteredBB

originalBB333:                                    ; preds = %originalBB333alteredBB, %1175
  %1184 = load i32, i32* %5, align 4
  %1185 = add nsw i32 %1184, 20
  %1186 = add nsw i32 %1185, 1
  %1187 = sext i32 %1186 to i64
  %1188 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1187
  %1189 = load i32, i32* %1188, align 4
  %1190 = load i32, i32* %9, align 4
  %1191 = icmp eq i32 %1189, %1190
  %1192 = load i32, i32* @x.63
  %1193 = load i32, i32* @y.64
  %1194 = sub i32 %1192, 1
  %1195 = mul i32 %1192, %1194
  %1196 = urem i32 %1195, 2
  %1197 = icmp eq i32 %1196, 0
  %1198 = icmp slt i32 %1193, 10
  %1199 = or i1 %1197, %1198
  br i1 %1199, label %originalBBpart2359, label %originalBB333alteredBB

originalBBpart2359:                               ; preds = %originalBB333
  br i1 %1191, label %1203, label %1200

; <label>:1200:                                   ; preds = %originalBBpart2359, %originalBBpart2331
  %1201 = load i32, i32* %10, align 4
  %1202 = add nsw i32 %1201, 1
  store i32 %1202, i32* %10, align 4
  br label %1203

; <label>:1203:                                   ; preds = %1200, %originalBBpart2359, %originalBBpart2306, %1105, %1086, %1051, %1032, %998
  %1204 = load i32, i32* %5, align 4
  %1205 = sub nsw i32 %1204, 1
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1206
  %1208 = load i8, i8* %1207, align 1
  %1209 = zext i8 %1208 to i32
  %1210 = icmp eq i32 %1209, 0
  br i1 %1210, label %1211, label %1344

; <label>:1211:                                   ; preds = %1203
  %1212 = load i32, i32* %5, align 4
  %1213 = sub nsw i32 %1212, 1
  %1214 = sub nsw i32 %1213, 1
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1215
  %1217 = load i8, i8* %1216, align 1
  %1218 = zext i8 %1217 to i32
  %1219 = load i32, i32* %6, align 4
  %1220 = icmp eq i32 %1218, %1219
  br i1 %1220, label %1221, label %1230

; <label>:1221:                                   ; preds = %1211
  %1222 = load i32, i32* %5, align 4
  %1223 = sub nsw i32 %1222, 1
  %1224 = sub nsw i32 %1223, 1
  %1225 = sext i32 %1224 to i64
  %1226 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1225
  %1227 = load i32, i32* %1226, align 4
  %1228 = load i32, i32* %8, align 4
  %1229 = icmp eq i32 %1227, %1228
  br i1 %1229, label %1344, label %1230

; <label>:1230:                                   ; preds = %1221, %1211
  %1231 = load i32, i32* %5, align 4
  %1232 = sub nsw i32 %1231, 1
  %1233 = sub nsw i32 %1232, 20
  %1234 = sext i32 %1233 to i64
  %1235 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1234
  %1236 = load i8, i8* %1235, align 1
  %1237 = zext i8 %1236 to i32
  %1238 = load i32, i32* %6, align 4
  %1239 = icmp eq i32 %1237, %1238
  br i1 %1239, label %1240, label %1249

; <label>:1240:                                   ; preds = %1230
  %1241 = load i32, i32* %5, align 4
  %1242 = sub nsw i32 %1241, 1
  %1243 = sub nsw i32 %1242, 20
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1244
  %1246 = load i32, i32* %1245, align 4
  %1247 = load i32, i32* %8, align 4
  %1248 = icmp eq i32 %1246, %1247
  br i1 %1248, label %1344, label %1249

; <label>:1249:                                   ; preds = %1240, %1230
  %1250 = load i32, i32* %5, align 4
  %1251 = sub nsw i32 %1250, 1
  %1252 = add nsw i32 %1251, 20
  %1253 = sext i32 %1252 to i64
  %1254 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1253
  %1255 = load i8, i8* %1254, align 1
  %1256 = zext i8 %1255 to i32
  %1257 = load i32, i32* %6, align 4
  %1258 = icmp eq i32 %1256, %1257
  br i1 %1258, label %1259, label %1268

; <label>:1259:                                   ; preds = %1249
  %1260 = load i32, i32* %5, align 4
  %1261 = sub nsw i32 %1260, 1
  %1262 = add nsw i32 %1261, 20
  %1263 = sext i32 %1262 to i64
  %1264 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1263
  %1265 = load i32, i32* %1264, align 4
  %1266 = load i32, i32* %8, align 4
  %1267 = icmp eq i32 %1265, %1266
  br i1 %1267, label %1344, label %1268

; <label>:1268:                                   ; preds = %1259, %1249
  %1269 = load i32, i32* %5, align 4
  %1270 = sub nsw i32 %1269, 1
  %1271 = sub nsw i32 %1270, 1
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1272
  %1274 = load i8, i8* %1273, align 1
  %1275 = zext i8 %1274 to i32
  %1276 = load i32, i32* %6, align 4
  %1277 = icmp eq i32 %1275, %1276
  br i1 %1277, label %1278, label %1287

; <label>:1278:                                   ; preds = %1268
  %1279 = load i32, i32* %5, align 4
  %1280 = sub nsw i32 %1279, 1
  %1281 = sub nsw i32 %1280, 1
  %1282 = sext i32 %1281 to i64
  %1283 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1282
  %1284 = load i32, i32* %1283, align 4
  %1285 = load i32, i32* %9, align 4
  %1286 = icmp eq i32 %1284, %1285
  br i1 %1286, label %1344, label %1287

; <label>:1287:                                   ; preds = %1278, %1268
  %1288 = load i32, i32* @x.63
  %1289 = load i32, i32* @y.64
  %1290 = sub i32 %1288, 1
  %1291 = mul i32 %1288, %1290
  %1292 = urem i32 %1291, 2
  %1293 = icmp eq i32 %1292, 0
  %1294 = icmp slt i32 %1289, 10
  %1295 = or i1 %1293, %1294
  br i1 %1295, label %originalBB361, label %originalBB361alteredBB

originalBB361:                                    ; preds = %originalBB361alteredBB, %1287
  %1296 = load i32, i32* %5, align 4
  %1297 = sub nsw i32 %1296, 1
  %1298 = sub nsw i32 %1297, 20
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1299
  %1301 = load i8, i8* %1300, align 1
  %1302 = zext i8 %1301 to i32
  %1303 = load i32, i32* %6, align 4
  %1304 = icmp eq i32 %1302, %1303
  %1305 = load i32, i32* @x.63
  %1306 = load i32, i32* @y.64
  %1307 = sub i32 %1305, 1
  %1308 = mul i32 %1305, %1307
  %1309 = urem i32 %1308, 2
  %1310 = icmp eq i32 %1309, 0
  %1311 = icmp slt i32 %1306, 10
  %1312 = or i1 %1310, %1311
  br i1 %1312, label %originalBBpart2367, label %originalBB361alteredBB

originalBBpart2367:                               ; preds = %originalBB361
  br i1 %1304, label %1313, label %1322

; <label>:1313:                                   ; preds = %originalBBpart2367
  %1314 = load i32, i32* %5, align 4
  %1315 = sub nsw i32 %1314, 1
  %1316 = sub nsw i32 %1315, 20
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1317
  %1319 = load i32, i32* %1318, align 4
  %1320 = load i32, i32* %9, align 4
  %1321 = icmp eq i32 %1319, %1320
  br i1 %1321, label %1344, label %1322

; <label>:1322:                                   ; preds = %1313, %originalBBpart2367
  %1323 = load i32, i32* %5, align 4
  %1324 = sub nsw i32 %1323, 1
  %1325 = add nsw i32 %1324, 20
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1326
  %1328 = load i8, i8* %1327, align 1
  %1329 = zext i8 %1328 to i32
  %1330 = load i32, i32* %6, align 4
  %1331 = icmp eq i32 %1329, %1330
  br i1 %1331, label %1332, label %1341

; <label>:1332:                                   ; preds = %1322
  %1333 = load i32, i32* %5, align 4
  %1334 = sub nsw i32 %1333, 1
  %1335 = add nsw i32 %1334, 20
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1336
  %1338 = load i32, i32* %1337, align 4
  %1339 = load i32, i32* %9, align 4
  %1340 = icmp eq i32 %1338, %1339
  br i1 %1340, label %1344, label %1341

; <label>:1341:                                   ; preds = %1332, %1322
  %1342 = load i32, i32* %10, align 4
  %1343 = add nsw i32 %1342, 1
  store i32 %1343, i32* %10, align 4
  br label %1344

; <label>:1344:                                   ; preds = %1341, %1332, %1313, %1278, %1259, %1240, %1221, %1203
  %1345 = load i32, i32* @x.63
  %1346 = load i32, i32* @y.64
  %1347 = sub i32 %1345, 1
  %1348 = mul i32 %1345, %1347
  %1349 = urem i32 %1348, 2
  %1350 = icmp eq i32 %1349, 0
  %1351 = icmp slt i32 %1346, 10
  %1352 = or i1 %1350, %1351
  br i1 %1352, label %originalBB369, label %originalBB369alteredBB

originalBB369:                                    ; preds = %originalBB369alteredBB, %1344
  %1353 = load i32, i32* %5, align 4
  %1354 = sub nsw i32 %1353, 20
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1355
  %1357 = load i8, i8* %1356, align 1
  %1358 = zext i8 %1357 to i32
  %1359 = icmp eq i32 %1358, 0
  %1360 = load i32, i32* @x.63
  %1361 = load i32, i32* @y.64
  %1362 = sub i32 %1360, 1
  %1363 = mul i32 %1360, %1362
  %1364 = urem i32 %1363, 2
  %1365 = icmp eq i32 %1364, 0
  %1366 = icmp slt i32 %1361, 10
  %1367 = or i1 %1365, %1366
  br i1 %1367, label %originalBBpart2378, label %originalBB369alteredBB

originalBBpart2378:                               ; preds = %originalBB369
  br i1 %1359, label %1368, label %1565

; <label>:1368:                                   ; preds = %originalBBpart2378
  %1369 = load i32, i32* @x.63
  %1370 = load i32, i32* @y.64
  %1371 = sub i32 %1369, 1
  %1372 = mul i32 %1369, %1371
  %1373 = urem i32 %1372, 2
  %1374 = icmp eq i32 %1373, 0
  %1375 = icmp slt i32 %1370, 10
  %1376 = or i1 %1374, %1375
  br i1 %1376, label %originalBB380, label %originalBB380alteredBB

originalBB380:                                    ; preds = %originalBB380alteredBB, %1368
  %1377 = load i32, i32* %5, align 4
  %1378 = sub nsw i32 %1377, 20
  %1379 = sub nsw i32 %1378, 20
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1380
  %1382 = load i8, i8* %1381, align 1
  %1383 = zext i8 %1382 to i32
  %1384 = load i32, i32* %6, align 4
  %1385 = icmp eq i32 %1383, %1384
  %1386 = load i32, i32* @x.63
  %1387 = load i32, i32* @y.64
  %1388 = sub i32 %1386, 1
  %1389 = mul i32 %1386, %1388
  %1390 = urem i32 %1389, 2
  %1391 = icmp eq i32 %1390, 0
  %1392 = icmp slt i32 %1387, 10
  %1393 = or i1 %1391, %1392
  br i1 %1393, label %originalBBpart2403, label %originalBB380alteredBB

originalBBpart2403:                               ; preds = %originalBB380
  br i1 %1385, label %1394, label %1403

; <label>:1394:                                   ; preds = %originalBBpart2403
  %1395 = load i32, i32* %5, align 4
  %1396 = sub nsw i32 %1395, 20
  %1397 = sub nsw i32 %1396, 20
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1398
  %1400 = load i32, i32* %1399, align 4
  %1401 = load i32, i32* %8, align 4
  %1402 = icmp eq i32 %1400, %1401
  br i1 %1402, label %1565, label %1403

; <label>:1403:                                   ; preds = %1394, %originalBBpart2403
  %1404 = load i32, i32* %5, align 4
  %1405 = sub nsw i32 %1404, 20
  %1406 = add nsw i32 %1405, 1
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1407
  %1409 = load i8, i8* %1408, align 1
  %1410 = zext i8 %1409 to i32
  %1411 = load i32, i32* %6, align 4
  %1412 = icmp eq i32 %1410, %1411
  br i1 %1412, label %1413, label %1422

; <label>:1413:                                   ; preds = %1403
  %1414 = load i32, i32* %5, align 4
  %1415 = sub nsw i32 %1414, 20
  %1416 = add nsw i32 %1415, 1
  %1417 = sext i32 %1416 to i64
  %1418 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1417
  %1419 = load i32, i32* %1418, align 4
  %1420 = load i32, i32* %8, align 4
  %1421 = icmp eq i32 %1419, %1420
  br i1 %1421, label %1565, label %1422

; <label>:1422:                                   ; preds = %1413, %1403
  %1423 = load i32, i32* %5, align 4
  %1424 = sub nsw i32 %1423, 20
  %1425 = sub nsw i32 %1424, 1
  %1426 = sext i32 %1425 to i64
  %1427 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1426
  %1428 = load i8, i8* %1427, align 1
  %1429 = zext i8 %1428 to i32
  %1430 = load i32, i32* %6, align 4
  %1431 = icmp eq i32 %1429, %1430
  br i1 %1431, label %1432, label %1457

; <label>:1432:                                   ; preds = %1422
  %1433 = load i32, i32* @x.63
  %1434 = load i32, i32* @y.64
  %1435 = sub i32 %1433, 1
  %1436 = mul i32 %1433, %1435
  %1437 = urem i32 %1436, 2
  %1438 = icmp eq i32 %1437, 0
  %1439 = icmp slt i32 %1434, 10
  %1440 = or i1 %1438, %1439
  br i1 %1440, label %originalBB405, label %originalBB405alteredBB

originalBB405:                                    ; preds = %originalBB405alteredBB, %1432
  %1441 = load i32, i32* %5, align 4
  %1442 = sub nsw i32 %1441, 20
  %1443 = sub nsw i32 %1442, 1
  %1444 = sext i32 %1443 to i64
  %1445 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1444
  %1446 = load i32, i32* %1445, align 4
  %1447 = load i32, i32* %8, align 4
  %1448 = icmp eq i32 %1446, %1447
  %1449 = load i32, i32* @x.63
  %1450 = load i32, i32* @y.64
  %1451 = sub i32 %1449, 1
  %1452 = mul i32 %1449, %1451
  %1453 = urem i32 %1452, 2
  %1454 = icmp eq i32 %1453, 0
  %1455 = icmp slt i32 %1450, 10
  %1456 = or i1 %1454, %1455
  br i1 %1456, label %originalBBpart2427, label %originalBB405alteredBB

originalBBpart2427:                               ; preds = %originalBB405
  br i1 %1448, label %1565, label %1457

; <label>:1457:                                   ; preds = %originalBBpart2427, %1422
  %1458 = load i32, i32* @x.63
  %1459 = load i32, i32* @y.64
  %1460 = sub i32 %1458, 1
  %1461 = mul i32 %1458, %1460
  %1462 = urem i32 %1461, 2
  %1463 = icmp eq i32 %1462, 0
  %1464 = icmp slt i32 %1459, 10
  %1465 = or i1 %1463, %1464
  br i1 %1465, label %originalBB429, label %originalBB429alteredBB

originalBB429:                                    ; preds = %originalBB429alteredBB, %1457
  %1466 = load i32, i32* %5, align 4
  %1467 = sub nsw i32 %1466, 20
  %1468 = sub nsw i32 %1467, 20
  %1469 = sext i32 %1468 to i64
  %1470 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1469
  %1471 = load i8, i8* %1470, align 1
  %1472 = zext i8 %1471 to i32
  %1473 = load i32, i32* %6, align 4
  %1474 = icmp eq i32 %1472, %1473
  %1475 = load i32, i32* @x.63
  %1476 = load i32, i32* @y.64
  %1477 = sub i32 %1475, 1
  %1478 = mul i32 %1475, %1477
  %1479 = urem i32 %1478, 2
  %1480 = icmp eq i32 %1479, 0
  %1481 = icmp slt i32 %1476, 10
  %1482 = or i1 %1480, %1481
  br i1 %1482, label %originalBBpart2436, label %originalBB429alteredBB

originalBBpart2436:                               ; preds = %originalBB429
  br i1 %1474, label %1483, label %1492

; <label>:1483:                                   ; preds = %originalBBpart2436
  %1484 = load i32, i32* %5, align 4
  %1485 = sub nsw i32 %1484, 20
  %1486 = sub nsw i32 %1485, 20
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1487
  %1489 = load i32, i32* %1488, align 4
  %1490 = load i32, i32* %9, align 4
  %1491 = icmp eq i32 %1489, %1490
  br i1 %1491, label %1565, label %1492

; <label>:1492:                                   ; preds = %1483, %originalBBpart2436
  %1493 = load i32, i32* %5, align 4
  %1494 = sub nsw i32 %1493, 20
  %1495 = add nsw i32 %1494, 1
  %1496 = sext i32 %1495 to i64
  %1497 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1496
  %1498 = load i8, i8* %1497, align 1
  %1499 = zext i8 %1498 to i32
  %1500 = load i32, i32* %6, align 4
  %1501 = icmp eq i32 %1499, %1500
  br i1 %1501, label %1502, label %1527

; <label>:1502:                                   ; preds = %1492
  %1503 = load i32, i32* @x.63
  %1504 = load i32, i32* @y.64
  %1505 = sub i32 %1503, 1
  %1506 = mul i32 %1503, %1505
  %1507 = urem i32 %1506, 2
  %1508 = icmp eq i32 %1507, 0
  %1509 = icmp slt i32 %1504, 10
  %1510 = or i1 %1508, %1509
  br i1 %1510, label %originalBB438, label %originalBB438alteredBB

originalBB438:                                    ; preds = %originalBB438alteredBB, %1502
  %1511 = load i32, i32* %5, align 4
  %1512 = sub nsw i32 %1511, 20
  %1513 = add nsw i32 %1512, 1
  %1514 = sext i32 %1513 to i64
  %1515 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1514
  %1516 = load i32, i32* %1515, align 4
  %1517 = load i32, i32* %9, align 4
  %1518 = icmp eq i32 %1516, %1517
  %1519 = load i32, i32* @x.63
  %1520 = load i32, i32* @y.64
  %1521 = sub i32 %1519, 1
  %1522 = mul i32 %1519, %1521
  %1523 = urem i32 %1522, 2
  %1524 = icmp eq i32 %1523, 0
  %1525 = icmp slt i32 %1520, 10
  %1526 = or i1 %1524, %1525
  br i1 %1526, label %originalBBpart2454, label %originalBB438alteredBB

originalBBpart2454:                               ; preds = %originalBB438
  br i1 %1518, label %1565, label %1527

; <label>:1527:                                   ; preds = %originalBBpart2454, %1492
  %1528 = load i32, i32* %5, align 4
  %1529 = sub nsw i32 %1528, 20
  %1530 = sub nsw i32 %1529, 1
  %1531 = sext i32 %1530 to i64
  %1532 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1531
  %1533 = load i8, i8* %1532, align 1
  %1534 = zext i8 %1533 to i32
  %1535 = load i32, i32* %6, align 4
  %1536 = icmp eq i32 %1534, %1535
  br i1 %1536, label %1537, label %1546

; <label>:1537:                                   ; preds = %1527
  %1538 = load i32, i32* %5, align 4
  %1539 = sub nsw i32 %1538, 20
  %1540 = sub nsw i32 %1539, 1
  %1541 = sext i32 %1540 to i64
  %1542 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1541
  %1543 = load i32, i32* %1542, align 4
  %1544 = load i32, i32* %9, align 4
  %1545 = icmp eq i32 %1543, %1544
  br i1 %1545, label %1565, label %1546

; <label>:1546:                                   ; preds = %1537, %1527
  %1547 = load i32, i32* @x.63
  %1548 = load i32, i32* @y.64
  %1549 = sub i32 %1547, 1
  %1550 = mul i32 %1547, %1549
  %1551 = urem i32 %1550, 2
  %1552 = icmp eq i32 %1551, 0
  %1553 = icmp slt i32 %1548, 10
  %1554 = or i1 %1552, %1553
  br i1 %1554, label %originalBB456, label %originalBB456alteredBB

originalBB456:                                    ; preds = %originalBB456alteredBB, %1546
  %1555 = load i32, i32* %10, align 4
  %1556 = add nsw i32 %1555, 1
  store i32 %1556, i32* %10, align 4
  %1557 = load i32, i32* @x.63
  %1558 = load i32, i32* @y.64
  %1559 = sub i32 %1557, 1
  %1560 = mul i32 %1557, %1559
  %1561 = urem i32 %1560, 2
  %1562 = icmp eq i32 %1561, 0
  %1563 = icmp slt i32 %1558, 10
  %1564 = or i1 %1562, %1563
  br i1 %1564, label %originalBBpart2464, label %originalBB456alteredBB

originalBBpart2464:                               ; preds = %originalBB456
  br label %1565

; <label>:1565:                                   ; preds = %originalBBpart2464, %1537, %originalBBpart2454, %1483, %originalBBpart2427, %1413, %1394, %originalBBpart2378
  %1566 = load i32, i32* %5, align 4
  %1567 = add nsw i32 %1566, 1
  %1568 = sext i32 %1567 to i64
  %1569 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1568
  %1570 = load i8, i8* %1569, align 1
  %1571 = zext i8 %1570 to i32
  %1572 = icmp eq i32 %1571, 0
  br i1 %1572, label %1573, label %1738

; <label>:1573:                                   ; preds = %1565
  %1574 = load i32, i32* @x.63
  %1575 = load i32, i32* @y.64
  %1576 = sub i32 %1574, 1
  %1577 = mul i32 %1574, %1576
  %1578 = urem i32 %1577, 2
  %1579 = icmp eq i32 %1578, 0
  %1580 = icmp slt i32 %1575, 10
  %1581 = or i1 %1579, %1580
  br i1 %1581, label %originalBB466, label %originalBB466alteredBB

originalBB466:                                    ; preds = %originalBB466alteredBB, %1573
  %1582 = load i32, i32* %5, align 4
  %1583 = add nsw i32 %1582, 1
  %1584 = add nsw i32 %1583, 1
  %1585 = sext i32 %1584 to i64
  %1586 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1585
  %1587 = load i8, i8* %1586, align 1
  %1588 = zext i8 %1587 to i32
  %1589 = load i32, i32* %6, align 4
  %1590 = icmp eq i32 %1588, %1589
  %1591 = load i32, i32* @x.63
  %1592 = load i32, i32* @y.64
  %1593 = sub i32 %1591, 1
  %1594 = mul i32 %1591, %1593
  %1595 = urem i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp slt i32 %1592, 10
  %1598 = or i1 %1596, %1597
  br i1 %1598, label %originalBBpart2479, label %originalBB466alteredBB

originalBBpart2479:                               ; preds = %originalBB466
  br i1 %1590, label %1599, label %1608

; <label>:1599:                                   ; preds = %originalBBpart2479
  %1600 = load i32, i32* %5, align 4
  %1601 = add nsw i32 %1600, 1
  %1602 = add nsw i32 %1601, 1
  %1603 = sext i32 %1602 to i64
  %1604 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1603
  %1605 = load i32, i32* %1604, align 4
  %1606 = load i32, i32* %8, align 4
  %1607 = icmp eq i32 %1605, %1606
  br i1 %1607, label %1738, label %1608

; <label>:1608:                                   ; preds = %1599, %originalBBpart2479
  %1609 = load i32, i32* %5, align 4
  %1610 = add nsw i32 %1609, 1
  %1611 = add nsw i32 %1610, 20
  %1612 = sext i32 %1611 to i64
  %1613 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1612
  %1614 = load i8, i8* %1613, align 1
  %1615 = zext i8 %1614 to i32
  %1616 = load i32, i32* %6, align 4
  %1617 = icmp eq i32 %1615, %1616
  br i1 %1617, label %1618, label %1627

; <label>:1618:                                   ; preds = %1608
  %1619 = load i32, i32* %5, align 4
  %1620 = add nsw i32 %1619, 1
  %1621 = add nsw i32 %1620, 20
  %1622 = sext i32 %1621 to i64
  %1623 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1622
  %1624 = load i32, i32* %1623, align 4
  %1625 = load i32, i32* %8, align 4
  %1626 = icmp eq i32 %1624, %1625
  br i1 %1626, label %1738, label %1627

; <label>:1627:                                   ; preds = %1618, %1608
  %1628 = load i32, i32* @x.63
  %1629 = load i32, i32* @y.64
  %1630 = sub i32 %1628, 1
  %1631 = mul i32 %1628, %1630
  %1632 = urem i32 %1631, 2
  %1633 = icmp eq i32 %1632, 0
  %1634 = icmp slt i32 %1629, 10
  %1635 = or i1 %1633, %1634
  br i1 %1635, label %originalBB481, label %originalBB481alteredBB

originalBB481:                                    ; preds = %originalBB481alteredBB, %1627
  %1636 = load i32, i32* %5, align 4
  %1637 = add nsw i32 %1636, 1
  %1638 = sub nsw i32 %1637, 20
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1639
  %1641 = load i8, i8* %1640, align 1
  %1642 = zext i8 %1641 to i32
  %1643 = load i32, i32* %6, align 4
  %1644 = icmp eq i32 %1642, %1643
  %1645 = load i32, i32* @x.63
  %1646 = load i32, i32* @y.64
  %1647 = sub i32 %1645, 1
  %1648 = mul i32 %1645, %1647
  %1649 = urem i32 %1648, 2
  %1650 = icmp eq i32 %1649, 0
  %1651 = icmp slt i32 %1646, 10
  %1652 = or i1 %1650, %1651
  br i1 %1652, label %originalBBpart2485, label %originalBB481alteredBB

originalBBpart2485:                               ; preds = %originalBB481
  br i1 %1644, label %1653, label %1662

; <label>:1653:                                   ; preds = %originalBBpart2485
  %1654 = load i32, i32* %5, align 4
  %1655 = add nsw i32 %1654, 1
  %1656 = sub nsw i32 %1655, 20
  %1657 = sext i32 %1656 to i64
  %1658 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1657
  %1659 = load i32, i32* %1658, align 4
  %1660 = load i32, i32* %8, align 4
  %1661 = icmp eq i32 %1659, %1660
  br i1 %1661, label %1738, label %1662

; <label>:1662:                                   ; preds = %1653, %originalBBpart2485
  %1663 = load i32, i32* %5, align 4
  %1664 = add nsw i32 %1663, 1
  %1665 = add nsw i32 %1664, 1
  %1666 = sext i32 %1665 to i64
  %1667 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1666
  %1668 = load i8, i8* %1667, align 1
  %1669 = zext i8 %1668 to i32
  %1670 = load i32, i32* %6, align 4
  %1671 = icmp eq i32 %1669, %1670
  br i1 %1671, label %1672, label %1681

; <label>:1672:                                   ; preds = %1662
  %1673 = load i32, i32* %5, align 4
  %1674 = add nsw i32 %1673, 1
  %1675 = add nsw i32 %1674, 1
  %1676 = sext i32 %1675 to i64
  %1677 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1676
  %1678 = load i32, i32* %1677, align 4
  %1679 = load i32, i32* %9, align 4
  %1680 = icmp eq i32 %1678, %1679
  br i1 %1680, label %1738, label %1681

; <label>:1681:                                   ; preds = %1672, %1662
  %1682 = load i32, i32* %5, align 4
  %1683 = add nsw i32 %1682, 1
  %1684 = add nsw i32 %1683, 20
  %1685 = sext i32 %1684 to i64
  %1686 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1685
  %1687 = load i8, i8* %1686, align 1
  %1688 = zext i8 %1687 to i32
  %1689 = load i32, i32* %6, align 4
  %1690 = icmp eq i32 %1688, %1689
  br i1 %1690, label %1691, label %1700

; <label>:1691:                                   ; preds = %1681
  %1692 = load i32, i32* %5, align 4
  %1693 = add nsw i32 %1692, 1
  %1694 = add nsw i32 %1693, 20
  %1695 = sext i32 %1694 to i64
  %1696 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1695
  %1697 = load i32, i32* %1696, align 4
  %1698 = load i32, i32* %9, align 4
  %1699 = icmp eq i32 %1697, %1698
  br i1 %1699, label %1738, label %1700

; <label>:1700:                                   ; preds = %1691, %1681
  %1701 = load i32, i32* %5, align 4
  %1702 = add nsw i32 %1701, 1
  %1703 = sub nsw i32 %1702, 20
  %1704 = sext i32 %1703 to i64
  %1705 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1704
  %1706 = load i8, i8* %1705, align 1
  %1707 = zext i8 %1706 to i32
  %1708 = load i32, i32* %6, align 4
  %1709 = icmp eq i32 %1707, %1708
  br i1 %1709, label %1710, label %1719

; <label>:1710:                                   ; preds = %1700
  %1711 = load i32, i32* %5, align 4
  %1712 = add nsw i32 %1711, 1
  %1713 = sub nsw i32 %1712, 20
  %1714 = sext i32 %1713 to i64
  %1715 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1714
  %1716 = load i32, i32* %1715, align 4
  %1717 = load i32, i32* %9, align 4
  %1718 = icmp eq i32 %1716, %1717
  br i1 %1718, label %1738, label %1719

; <label>:1719:                                   ; preds = %1710, %1700
  %1720 = load i32, i32* @x.63
  %1721 = load i32, i32* @y.64
  %1722 = sub i32 %1720, 1
  %1723 = mul i32 %1720, %1722
  %1724 = urem i32 %1723, 2
  %1725 = icmp eq i32 %1724, 0
  %1726 = icmp slt i32 %1721, 10
  %1727 = or i1 %1725, %1726
  br i1 %1727, label %originalBB487, label %originalBB487alteredBB

originalBB487:                                    ; preds = %originalBB487alteredBB, %1719
  %1728 = load i32, i32* %10, align 4
  %1729 = add nsw i32 %1728, 1
  store i32 %1729, i32* %10, align 4
  %1730 = load i32, i32* @x.63
  %1731 = load i32, i32* @y.64
  %1732 = sub i32 %1730, 1
  %1733 = mul i32 %1730, %1732
  %1734 = urem i32 %1733, 2
  %1735 = icmp eq i32 %1734, 0
  %1736 = icmp slt i32 %1731, 10
  %1737 = or i1 %1735, %1736
  br i1 %1737, label %originalBBpart2492, label %originalBB487alteredBB

originalBBpart2492:                               ; preds = %originalBB487
  br label %1738

; <label>:1738:                                   ; preds = %originalBBpart2492, %1710, %1691, %1672, %1653, %1618, %1599, %1565
  %1739 = load i32, i32* @x.63
  %1740 = load i32, i32* @y.64
  %1741 = sub i32 %1739, 1
  %1742 = mul i32 %1739, %1741
  %1743 = urem i32 %1742, 2
  %1744 = icmp eq i32 %1743, 0
  %1745 = icmp slt i32 %1740, 10
  %1746 = or i1 %1744, %1745
  br i1 %1746, label %originalBB494, label %originalBB494alteredBB

originalBB494:                                    ; preds = %originalBB494alteredBB, %1738
  %1747 = load i32, i32* %8, align 4
  %1748 = sext i32 %1747 to i64
  %1749 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1748
  %1750 = getelementptr inbounds %struct.string_data, %struct.string_data* %1749, i32 0, i32 3
  %1751 = load i32, i32* %1750, align 4
  %1752 = load i32, i32* %9, align 4
  %1753 = sext i32 %1752 to i64
  %1754 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1753
  %1755 = getelementptr inbounds %struct.string_data, %struct.string_data* %1754, i32 0, i32 3
  %1756 = load i32, i32* %1755, align 4
  %1757 = add nsw i32 %1751, %1756
  %1758 = load i32, i32* %8, align 4
  %1759 = sext i32 %1758 to i64
  %1760 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1759
  %1761 = getelementptr inbounds %struct.string_data, %struct.string_data* %1760, i32 0, i32 2
  %1762 = load i32, i32* %1761, align 8
  %1763 = load i32, i32* %9, align 4
  %1764 = sext i32 %1763 to i64
  %1765 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1764
  %1766 = getelementptr inbounds %struct.string_data, %struct.string_data* %1765, i32 0, i32 2
  %1767 = load i32, i32* %1766, align 8
  %1768 = call i32 @count_common_libs(i32 %1762, i32 %1767)
  %1769 = sub nsw i32 %1757, %1768
  %1770 = sub nsw i32 %1769, 1
  %1771 = load i32, i32* %10, align 4
  %1772 = add nsw i32 %1771, %1770
  store i32 %1772, i32* %10, align 4
  %1773 = load i32, i32* @x.63
  %1774 = load i32, i32* @y.64
  %1775 = sub i32 %1773, 1
  %1776 = mul i32 %1773, %1775
  %1777 = urem i32 %1776, 2
  %1778 = icmp eq i32 %1777, 0
  %1779 = icmp slt i32 %1774, 10
  %1780 = or i1 %1778, %1779
  br i1 %1780, label %originalBBpart2524, label %originalBB494alteredBB

originalBBpart2524:                               ; preds = %originalBB494
  br label %1781

; <label>:1781:                                   ; preds = %originalBBpart2524, %989
  br label %1782

; <label>:1782:                                   ; preds = %1781, %569
  br label %2219

; <label>:1783:                                   ; preds = %487
  store i32 0, i32* %11, align 4
  br label %1784

; <label>:1784:                                   ; preds = %2180, %1783
  %1785 = load i32, i32* %11, align 4
  %1786 = icmp slt i32 %1785, 4
  br i1 %1786, label %1787, label %2183

; <label>:1787:                                   ; preds = %1784
  %1788 = load i32, i32* %5, align 4
  %1789 = load i32, i32* %11, align 4
  %1790 = sext i32 %1789 to i64
  %1791 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %1790
  %1792 = load i32, i32* %1791, align 4
  %1793 = add nsw i32 %1788, %1792
  store i32 %1793, i32* %12, align 4
  %1794 = load i32, i32* %12, align 4
  %1795 = sext i32 %1794 to i64
  %1796 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1795
  %1797 = load i8, i8* %1796, align 1
  %1798 = zext i8 %1797 to i32
  %1799 = icmp eq i32 %1798, 0
  br i1 %1799, label %1800, label %2089

; <label>:1800:                                   ; preds = %1787
  %1801 = load i32, i32* @x.63
  %1802 = load i32, i32* @y.64
  %1803 = sub i32 %1801, 1
  %1804 = mul i32 %1801, %1803
  %1805 = urem i32 %1804, 2
  %1806 = icmp eq i32 %1805, 0
  %1807 = icmp slt i32 %1802, 10
  %1808 = or i1 %1806, %1807
  br i1 %1808, label %originalBB526, label %originalBB526alteredBB

originalBB526:                                    ; preds = %originalBB526alteredBB, %1800
  %1809 = load i32, i32* %8, align 4
  %1810 = icmp slt i32 %1809, 0
  %1811 = load i32, i32* @x.63
  %1812 = load i32, i32* @y.64
  %1813 = sub i32 %1811, 1
  %1814 = mul i32 %1811, %1813
  %1815 = urem i32 %1814, 2
  %1816 = icmp eq i32 %1815, 0
  %1817 = icmp slt i32 %1812, 10
  %1818 = or i1 %1816, %1817
  br i1 %1818, label %originalBBpart2528, label %originalBB526alteredBB

originalBBpart2528:                               ; preds = %originalBB526
  br i1 %1810, label %1951, label %1819

; <label>:1819:                                   ; preds = %originalBBpart2528
  %1820 = load i32, i32* @x.63
  %1821 = load i32, i32* @y.64
  %1822 = sub i32 %1820, 1
  %1823 = mul i32 %1820, %1822
  %1824 = urem i32 %1823, 2
  %1825 = icmp eq i32 %1824, 0
  %1826 = icmp slt i32 %1821, 10
  %1827 = or i1 %1825, %1826
  br i1 %1827, label %originalBB530, label %originalBB530alteredBB

originalBB530:                                    ; preds = %originalBB530alteredBB, %1819
  %1828 = load i32, i32* %12, align 4
  %1829 = add nsw i32 %1828, 20
  %1830 = sext i32 %1829 to i64
  %1831 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1830
  %1832 = load i8, i8* %1831, align 1
  %1833 = zext i8 %1832 to i32
  %1834 = load i32, i32* %6, align 4
  %1835 = icmp eq i32 %1833, %1834
  %1836 = load i32, i32* @x.63
  %1837 = load i32, i32* @y.64
  %1838 = sub i32 %1836, 1
  %1839 = mul i32 %1836, %1838
  %1840 = urem i32 %1839, 2
  %1841 = icmp eq i32 %1840, 0
  %1842 = icmp slt i32 %1837, 10
  %1843 = or i1 %1841, %1842
  br i1 %1843, label %originalBBpart2543, label %originalBB530alteredBB

originalBBpart2543:                               ; preds = %originalBB530
  br i1 %1835, label %1844, label %1852

; <label>:1844:                                   ; preds = %originalBBpart2543
  %1845 = load i32, i32* %12, align 4
  %1846 = add nsw i32 %1845, 20
  %1847 = sext i32 %1846 to i64
  %1848 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1847
  %1849 = load i32, i32* %1848, align 4
  %1850 = load i32, i32* %8, align 4
  %1851 = icmp eq i32 %1849, %1850
  br i1 %1851, label %2089, label %1852

; <label>:1852:                                   ; preds = %1844, %originalBBpart2543
  %1853 = load i32, i32* %12, align 4
  %1854 = sub nsw i32 %1853, 1
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1855
  %1857 = load i8, i8* %1856, align 1
  %1858 = zext i8 %1857 to i32
  %1859 = load i32, i32* %6, align 4
  %1860 = icmp eq i32 %1858, %1859
  br i1 %1860, label %1861, label %1869

; <label>:1861:                                   ; preds = %1852
  %1862 = load i32, i32* %12, align 4
  %1863 = sub nsw i32 %1862, 1
  %1864 = sext i32 %1863 to i64
  %1865 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1864
  %1866 = load i32, i32* %1865, align 4
  %1867 = load i32, i32* %8, align 4
  %1868 = icmp eq i32 %1866, %1867
  br i1 %1868, label %2089, label %1869

; <label>:1869:                                   ; preds = %1861, %1852
  %1870 = load i32, i32* @x.63
  %1871 = load i32, i32* @y.64
  %1872 = sub i32 %1870, 1
  %1873 = mul i32 %1870, %1872
  %1874 = urem i32 %1873, 2
  %1875 = icmp eq i32 %1874, 0
  %1876 = icmp slt i32 %1871, 10
  %1877 = or i1 %1875, %1876
  br i1 %1877, label %originalBB545, label %originalBB545alteredBB

originalBB545:                                    ; preds = %originalBB545alteredBB, %1869
  %1878 = load i32, i32* %12, align 4
  %1879 = sub nsw i32 %1878, 20
  %1880 = sext i32 %1879 to i64
  %1881 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1880
  %1882 = load i8, i8* %1881, align 1
  %1883 = zext i8 %1882 to i32
  %1884 = load i32, i32* %6, align 4
  %1885 = icmp eq i32 %1883, %1884
  %1886 = load i32, i32* @x.63
  %1887 = load i32, i32* @y.64
  %1888 = sub i32 %1886, 1
  %1889 = mul i32 %1886, %1888
  %1890 = urem i32 %1889, 2
  %1891 = icmp eq i32 %1890, 0
  %1892 = icmp slt i32 %1887, 10
  %1893 = or i1 %1891, %1892
  br i1 %1893, label %originalBBpart2552, label %originalBB545alteredBB

originalBBpart2552:                               ; preds = %originalBB545
  br i1 %1885, label %1894, label %1902

; <label>:1894:                                   ; preds = %originalBBpart2552
  %1895 = load i32, i32* %12, align 4
  %1896 = sub nsw i32 %1895, 20
  %1897 = sext i32 %1896 to i64
  %1898 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1897
  %1899 = load i32, i32* %1898, align 4
  %1900 = load i32, i32* %8, align 4
  %1901 = icmp eq i32 %1899, %1900
  br i1 %1901, label %2089, label %1902

; <label>:1902:                                   ; preds = %1894, %originalBBpart2552
  %1903 = load i32, i32* @x.63
  %1904 = load i32, i32* @y.64
  %1905 = sub i32 %1903, 1
  %1906 = mul i32 %1903, %1905
  %1907 = urem i32 %1906, 2
  %1908 = icmp eq i32 %1907, 0
  %1909 = icmp slt i32 %1904, 10
  %1910 = or i1 %1908, %1909
  br i1 %1910, label %originalBB554, label %originalBB554alteredBB

originalBB554:                                    ; preds = %originalBB554alteredBB, %1902
  %1911 = load i32, i32* %12, align 4
  %1912 = add nsw i32 %1911, 1
  %1913 = sext i32 %1912 to i64
  %1914 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1913
  %1915 = load i8, i8* %1914, align 1
  %1916 = zext i8 %1915 to i32
  %1917 = load i32, i32* %6, align 4
  %1918 = icmp eq i32 %1916, %1917
  %1919 = load i32, i32* @x.63
  %1920 = load i32, i32* @y.64
  %1921 = sub i32 %1919, 1
  %1922 = mul i32 %1919, %1921
  %1923 = urem i32 %1922, 2
  %1924 = icmp eq i32 %1923, 0
  %1925 = icmp slt i32 %1920, 10
  %1926 = or i1 %1924, %1925
  br i1 %1926, label %originalBBpart2563, label %originalBB554alteredBB

originalBBpart2563:                               ; preds = %originalBB554
  br i1 %1918, label %1927, label %1951

; <label>:1927:                                   ; preds = %originalBBpart2563
  %1928 = load i32, i32* @x.63
  %1929 = load i32, i32* @y.64
  %1930 = sub i32 %1928, 1
  %1931 = mul i32 %1928, %1930
  %1932 = urem i32 %1931, 2
  %1933 = icmp eq i32 %1932, 0
  %1934 = icmp slt i32 %1929, 10
  %1935 = or i1 %1933, %1934
  br i1 %1935, label %originalBB565, label %originalBB565alteredBB

originalBB565:                                    ; preds = %originalBB565alteredBB, %1927
  %1936 = load i32, i32* %12, align 4
  %1937 = add nsw i32 %1936, 1
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1938
  %1940 = load i32, i32* %1939, align 4
  %1941 = load i32, i32* %8, align 4
  %1942 = icmp eq i32 %1940, %1941
  %1943 = load i32, i32* @x.63
  %1944 = load i32, i32* @y.64
  %1945 = sub i32 %1943, 1
  %1946 = mul i32 %1943, %1945
  %1947 = urem i32 %1946, 2
  %1948 = icmp eq i32 %1947, 0
  %1949 = icmp slt i32 %1944, 10
  %1950 = or i1 %1948, %1949
  br i1 %1950, label %originalBBpart2568, label %originalBB565alteredBB

originalBBpart2568:                               ; preds = %originalBB565
  br i1 %1942, label %2089, label %1951

; <label>:1951:                                   ; preds = %originalBBpart2568, %originalBBpart2563, %originalBBpart2528
  %1952 = load i32, i32* %9, align 4
  %1953 = icmp slt i32 %1952, 0
  br i1 %1953, label %2070, label %1954

; <label>:1954:                                   ; preds = %1951
  %1955 = load i32, i32* %12, align 4
  %1956 = add nsw i32 %1955, 20
  %1957 = sext i32 %1956 to i64
  %1958 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1957
  %1959 = load i8, i8* %1958, align 1
  %1960 = zext i8 %1959 to i32
  %1961 = load i32, i32* %6, align 4
  %1962 = icmp eq i32 %1960, %1961
  br i1 %1962, label %1963, label %1971

; <label>:1963:                                   ; preds = %1954
  %1964 = load i32, i32* %12, align 4
  %1965 = add nsw i32 %1964, 20
  %1966 = sext i32 %1965 to i64
  %1967 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1966
  %1968 = load i32, i32* %1967, align 4
  %1969 = load i32, i32* %9, align 4
  %1970 = icmp eq i32 %1968, %1969
  br i1 %1970, label %2089, label %1971

; <label>:1971:                                   ; preds = %1963, %1954
  %1972 = load i32, i32* %12, align 4
  %1973 = sub nsw i32 %1972, 1
  %1974 = sext i32 %1973 to i64
  %1975 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1974
  %1976 = load i8, i8* %1975, align 1
  %1977 = zext i8 %1976 to i32
  %1978 = load i32, i32* %6, align 4
  %1979 = icmp eq i32 %1977, %1978
  br i1 %1979, label %1980, label %2004

; <label>:1980:                                   ; preds = %1971
  %1981 = load i32, i32* @x.63
  %1982 = load i32, i32* @y.64
  %1983 = sub i32 %1981, 1
  %1984 = mul i32 %1981, %1983
  %1985 = urem i32 %1984, 2
  %1986 = icmp eq i32 %1985, 0
  %1987 = icmp slt i32 %1982, 10
  %1988 = or i1 %1986, %1987
  br i1 %1988, label %originalBB570, label %originalBB570alteredBB

originalBB570:                                    ; preds = %originalBB570alteredBB, %1980
  %1989 = load i32, i32* %12, align 4
  %1990 = sub nsw i32 %1989, 1
  %1991 = sext i32 %1990 to i64
  %1992 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1991
  %1993 = load i32, i32* %1992, align 4
  %1994 = load i32, i32* %9, align 4
  %1995 = icmp eq i32 %1993, %1994
  %1996 = load i32, i32* @x.63
  %1997 = load i32, i32* @y.64
  %1998 = sub i32 %1996, 1
  %1999 = mul i32 %1996, %1998
  %2000 = urem i32 %1999, 2
  %2001 = icmp eq i32 %2000, 0
  %2002 = icmp slt i32 %1997, 10
  %2003 = or i1 %2001, %2002
  br i1 %2003, label %originalBBpart2576, label %originalBB570alteredBB

originalBBpart2576:                               ; preds = %originalBB570
  br i1 %1995, label %2089, label %2004

; <label>:2004:                                   ; preds = %originalBBpart2576, %1971
  %2005 = load i32, i32* @x.63
  %2006 = load i32, i32* @y.64
  %2007 = sub i32 %2005, 1
  %2008 = mul i32 %2005, %2007
  %2009 = urem i32 %2008, 2
  %2010 = icmp eq i32 %2009, 0
  %2011 = icmp slt i32 %2006, 10
  %2012 = or i1 %2010, %2011
  br i1 %2012, label %originalBB578, label %originalBB578alteredBB

originalBB578:                                    ; preds = %originalBB578alteredBB, %2004
  %2013 = load i32, i32* %12, align 4
  %2014 = sub nsw i32 %2013, 20
  %2015 = sext i32 %2014 to i64
  %2016 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2015
  %2017 = load i8, i8* %2016, align 1
  %2018 = zext i8 %2017 to i32
  %2019 = load i32, i32* %6, align 4
  %2020 = icmp eq i32 %2018, %2019
  %2021 = load i32, i32* @x.63
  %2022 = load i32, i32* @y.64
  %2023 = sub i32 %2021, 1
  %2024 = mul i32 %2021, %2023
  %2025 = urem i32 %2024, 2
  %2026 = icmp eq i32 %2025, 0
  %2027 = icmp slt i32 %2022, 10
  %2028 = or i1 %2026, %2027
  br i1 %2028, label %originalBBpart2598, label %originalBB578alteredBB

originalBBpart2598:                               ; preds = %originalBB578
  br i1 %2020, label %2029, label %2037

; <label>:2029:                                   ; preds = %originalBBpart2598
  %2030 = load i32, i32* %12, align 4
  %2031 = sub nsw i32 %2030, 20
  %2032 = sext i32 %2031 to i64
  %2033 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2032
  %2034 = load i32, i32* %2033, align 4
  %2035 = load i32, i32* %9, align 4
  %2036 = icmp eq i32 %2034, %2035
  br i1 %2036, label %2089, label %2037

; <label>:2037:                                   ; preds = %2029, %originalBBpart2598
  %2038 = load i32, i32* @x.63
  %2039 = load i32, i32* @y.64
  %2040 = sub i32 %2038, 1
  %2041 = mul i32 %2038, %2040
  %2042 = urem i32 %2041, 2
  %2043 = icmp eq i32 %2042, 0
  %2044 = icmp slt i32 %2039, 10
  %2045 = or i1 %2043, %2044
  br i1 %2045, label %originalBB600, label %originalBB600alteredBB

originalBB600:                                    ; preds = %originalBB600alteredBB, %2037
  %2046 = load i32, i32* %12, align 4
  %2047 = add nsw i32 %2046, 1
  %2048 = sext i32 %2047 to i64
  %2049 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2048
  %2050 = load i8, i8* %2049, align 1
  %2051 = zext i8 %2050 to i32
  %2052 = load i32, i32* %6, align 4
  %2053 = icmp eq i32 %2051, %2052
  %2054 = load i32, i32* @x.63
  %2055 = load i32, i32* @y.64
  %2056 = sub i32 %2054, 1
  %2057 = mul i32 %2054, %2056
  %2058 = urem i32 %2057, 2
  %2059 = icmp eq i32 %2058, 0
  %2060 = icmp slt i32 %2055, 10
  %2061 = or i1 %2059, %2060
  br i1 %2061, label %originalBBpart2612, label %originalBB600alteredBB

originalBBpart2612:                               ; preds = %originalBB600
  br i1 %2053, label %2062, label %2070

; <label>:2062:                                   ; preds = %originalBBpart2612
  %2063 = load i32, i32* %12, align 4
  %2064 = add nsw i32 %2063, 1
  %2065 = sext i32 %2064 to i64
  %2066 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2065
  %2067 = load i32, i32* %2066, align 4
  %2068 = load i32, i32* %9, align 4
  %2069 = icmp eq i32 %2067, %2068
  br i1 %2069, label %2089, label %2070

; <label>:2070:                                   ; preds = %2062, %originalBBpart2612, %1951
  %2071 = load i32, i32* @x.63
  %2072 = load i32, i32* @y.64
  %2073 = sub i32 %2071, 1
  %2074 = mul i32 %2071, %2073
  %2075 = urem i32 %2074, 2
  %2076 = icmp eq i32 %2075, 0
  %2077 = icmp slt i32 %2072, 10
  %2078 = or i1 %2076, %2077
  br i1 %2078, label %originalBB614, label %originalBB614alteredBB

originalBB614:                                    ; preds = %originalBB614alteredBB, %2070
  %2079 = load i32, i32* %10, align 4
  %2080 = add nsw i32 %2079, 1
  store i32 %2080, i32* %10, align 4
  %2081 = load i32, i32* @x.63
  %2082 = load i32, i32* @y.64
  %2083 = sub i32 %2081, 1
  %2084 = mul i32 %2081, %2083
  %2085 = urem i32 %2084, 2
  %2086 = icmp eq i32 %2085, 0
  %2087 = icmp slt i32 %2082, 10
  %2088 = or i1 %2086, %2087
  br i1 %2088, label %originalBBpart2628, label %originalBB614alteredBB

originalBBpart2628:                               ; preds = %originalBB614
  br label %2163

; <label>:2089:                                   ; preds = %2062, %2029, %originalBBpart2576, %1963, %originalBBpart2568, %1894, %1861, %1844, %1787
  %2090 = load i32, i32* %12, align 4
  %2091 = sext i32 %2090 to i64
  %2092 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2091
  %2093 = load i8, i8* %2092, align 1
  %2094 = zext i8 %2093 to i32
  %2095 = load i32, i32* %6, align 4
  %2096 = sub nsw i32 3, %2095
  %2097 = icmp eq i32 %2094, %2096
  br i1 %2097, label %2098, label %2162

; <label>:2098:                                   ; preds = %2089
  %2099 = load i32, i32* %12, align 4
  %2100 = sext i32 %2099 to i64
  %2101 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2100
  %2102 = load i32, i32* %2101, align 4
  %2103 = sext i32 %2102 to i64
  %2104 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2103
  %2105 = getelementptr inbounds %struct.string_data, %struct.string_data* %2104, i32 0, i32 3
  %2106 = load i32, i32* %2105, align 4
  %2107 = icmp eq i32 %2106, 1
  br i1 %2107, label %2108, label %2162

; <label>:2108:                                   ; preds = %2098
  %2109 = load i32, i32* %12, align 4
  %2110 = sext i32 %2109 to i64
  %2111 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2110
  %2112 = load i32, i32* %2111, align 4
  %2113 = sext i32 %2112 to i64
  %2114 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2113
  %2115 = getelementptr inbounds %struct.string_data, %struct.string_data* %2114, i32 0, i32 1
  %2116 = load i32, i32* %2115, align 4
  store i32 %2116, i32* %13, align 4
  %2117 = load i32, i32* %13, align 4
  %2118 = icmp eq i32 %2117, 1
  br i1 %2118, label %2141, label %2119

; <label>:2119:                                   ; preds = %2108
  %2120 = load i32, i32* @x.63
  %2121 = load i32, i32* @y.64
  %2122 = sub i32 %2120, 1
  %2123 = mul i32 %2120, %2122
  %2124 = urem i32 %2123, 2
  %2125 = icmp eq i32 %2124, 0
  %2126 = icmp slt i32 %2121, 10
  %2127 = or i1 %2125, %2126
  br i1 %2127, label %originalBB630, label %originalBB630alteredBB

originalBB630:                                    ; preds = %originalBB630alteredBB, %2119
  %2128 = load i32, i32* %13, align 4
  %2129 = icmp eq i32 %2128, 2
  %2130 = load i32, i32* @x.63
  %2131 = load i32, i32* @y.64
  %2132 = sub i32 %2130, 1
  %2133 = mul i32 %2130, %2132
  %2134 = urem i32 %2133, 2
  %2135 = icmp eq i32 %2134, 0
  %2136 = icmp slt i32 %2131, 10
  %2137 = or i1 %2135, %2136
  br i1 %2137, label %originalBBpart2632, label %originalBB630alteredBB

originalBBpart2632:                               ; preds = %originalBB630
  br i1 %2129, label %2138, label %2144

; <label>:2138:                                   ; preds = %originalBBpart2632
  %2139 = load i32, i32* %8, align 4
  %2140 = icmp slt i32 %2139, 0
  br i1 %2140, label %2141, label %2144

; <label>:2141:                                   ; preds = %2138, %2108
  %2142 = load i32, i32* %10, align 4
  %2143 = add nsw i32 %2142, 1
  store i32 %2143, i32* %10, align 4
  br label %2161

; <label>:2144:                                   ; preds = %2138, %originalBBpart2632
  %2145 = load i32, i32* @x.63
  %2146 = load i32, i32* @y.64
  %2147 = sub i32 %2145, 1
  %2148 = mul i32 %2145, %2147
  %2149 = urem i32 %2148, 2
  %2150 = icmp eq i32 %2149, 0
  %2151 = icmp slt i32 %2146, 10
  %2152 = or i1 %2150, %2151
  br i1 %2152, label %originalBB634, label %originalBB634alteredBB

originalBB634:                                    ; preds = %originalBB634alteredBB, %2144
  store i32 -1, i32* %4, align 4
  %2153 = load i32, i32* @x.63
  %2154 = load i32, i32* @y.64
  %2155 = sub i32 %2153, 1
  %2156 = mul i32 %2153, %2155
  %2157 = urem i32 %2156, 2
  %2158 = icmp eq i32 %2157, 0
  %2159 = icmp slt i32 %2154, 10
  %2160 = or i1 %2158, %2159
  br i1 %2160, label %originalBBpart2636, label %originalBB634alteredBB

originalBBpart2636:                               ; preds = %originalBB634
  br label %2221

; <label>:2161:                                   ; preds = %2141
  br label %2162

; <label>:2162:                                   ; preds = %2161, %2098, %2089
  br label %2163

; <label>:2163:                                   ; preds = %2162, %originalBBpart2628
  %2164 = load i32, i32* @x.63
  %2165 = load i32, i32* @y.64
  %2166 = sub i32 %2164, 1
  %2167 = mul i32 %2164, %2166
  %2168 = urem i32 %2167, 2
  %2169 = icmp eq i32 %2168, 0
  %2170 = icmp slt i32 %2165, 10
  %2171 = or i1 %2169, %2170
  br i1 %2171, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %originalBB638alteredBB, %2163
  %2172 = load i32, i32* @x.63
  %2173 = load i32, i32* @y.64
  %2174 = sub i32 %2172, 1
  %2175 = mul i32 %2172, %2174
  %2176 = urem i32 %2175, 2
  %2177 = icmp eq i32 %2176, 0
  %2178 = icmp slt i32 %2173, 10
  %2179 = or i1 %2177, %2178
  br i1 %2179, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br label %2180

; <label>:2180:                                   ; preds = %originalBBpart2640
  %2181 = load i32, i32* %11, align 4
  %2182 = add nsw i32 %2181, 1
  store i32 %2182, i32* %11, align 4
  br label %1784

; <label>:2183:                                   ; preds = %1784
  %2184 = load i32, i32* %8, align 4
  %2185 = icmp sge i32 %2184, 0
  br i1 %2185, label %2186, label %2218

; <label>:2186:                                   ; preds = %2183
  %2187 = load i32, i32* %8, align 4
  %2188 = sext i32 %2187 to i64
  %2189 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2188
  %2190 = getelementptr inbounds %struct.string_data, %struct.string_data* %2189, i32 0, i32 3
  %2191 = load i32, i32* %2190, align 4
  %2192 = sub nsw i32 %2191, 1
  %2193 = load i32, i32* %10, align 4
  %2194 = add nsw i32 %2193, %2192
  store i32 %2194, i32* %10, align 4
  %2195 = load i32, i32* %9, align 4
  %2196 = icmp sge i32 %2195, 0
  br i1 %2196, label %2197, label %2217

; <label>:2197:                                   ; preds = %2186
  %2198 = load i32, i32* %9, align 4
  %2199 = sext i32 %2198 to i64
  %2200 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2199
  %2201 = getelementptr inbounds %struct.string_data, %struct.string_data* %2200, i32 0, i32 3
  %2202 = load i32, i32* %2201, align 4
  %2203 = load i32, i32* %8, align 4
  %2204 = sext i32 %2203 to i64
  %2205 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2204
  %2206 = getelementptr inbounds %struct.string_data, %struct.string_data* %2205, i32 0, i32 2
  %2207 = load i32, i32* %2206, align 8
  %2208 = load i32, i32* %9, align 4
  %2209 = sext i32 %2208 to i64
  %2210 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2209
  %2211 = getelementptr inbounds %struct.string_data, %struct.string_data* %2210, i32 0, i32 2
  %2212 = load i32, i32* %2211, align 8
  %2213 = call i32 @count_common_libs(i32 %2207, i32 %2212)
  %2214 = sub nsw i32 %2202, %2213
  %2215 = load i32, i32* %10, align 4
  %2216 = add nsw i32 %2215, %2214
  store i32 %2216, i32* %10, align 4
  br label %2217

; <label>:2217:                                   ; preds = %2197, %2186
  br label %2218

; <label>:2218:                                   ; preds = %2217, %2183
  br label %2219

; <label>:2219:                                   ; preds = %2218, %1782
  %2220 = load i32, i32* %10, align 4
  store i32 %2220, i32* %4, align 4
  br label %2221

; <label>:2221:                                   ; preds = %2219, %originalBBpart2636, %308, %227, %119
  %2222 = load i32, i32* @x.63
  %2223 = load i32, i32* @y.64
  %2224 = sub i32 %2222, 1
  %2225 = mul i32 %2222, %2224
  %2226 = urem i32 %2225, 2
  %2227 = icmp eq i32 %2226, 0
  %2228 = icmp slt i32 %2223, 10
  %2229 = or i1 %2227, %2228
  br i1 %2229, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %originalBB642alteredBB, %2221
  %2230 = load i32, i32* %4, align 4
  %2231 = load i32, i32* @x.63
  %2232 = load i32, i32* @y.64
  %2233 = sub i32 %2231, 1
  %2234 = mul i32 %2231, %2233
  %2235 = urem i32 %2234, 2
  %2236 = icmp eq i32 %2235, 0
  %2237 = icmp slt i32 %2232, 10
  %2238 = or i1 %2236, %2237
  br i1 %2238, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  ret i32 %2230

originalBBalteredBB:                              ; preds = %originalBB, %87
  %2239 = load i32, i32* %5, align 4
  %_ = sub i32 0, %2239
  %gen = add i32 %_, 20
  %_1 = shl i32 %2239, 20
  %_2 = sub i32 %2239, 20
  %gen3 = mul i32 %_2, 20
  %_4 = sub i32 0, %2239
  %gen5 = add i32 %_4, 20
  %_6 = sub i32 0, %2239
  %gen7 = add i32 %_6, 20
  %_8 = shl i32 %2239, 20
  %_9 = shl i32 %2239, 20
  %2240 = sub nsw i32 %2239, 20
  %2241 = sext i32 %2240 to i64
  %2242 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2241
  %2243 = load i32, i32* %2242, align 4
  %2244 = load i32, i32* %8, align 4
  %2245 = icmp ne i32 %2243, %2244
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %130
  %2246 = load i32, i32* %5, align 4
  %_11 = sub i32 %2246, 20
  %gen12 = mul i32 %_11, 20
  %_13 = sub i32 0, %2246
  %gen14 = add i32 %_13, 20
  %_15 = sub i32 %2246, 20
  %gen16 = mul i32 %_15, 20
  %_17 = shl i32 %2246, 20
  %_18 = sub i32 %2246, 20
  %gen19 = mul i32 %_18, 20
  %_20 = shl i32 %2246, 20
  %_21 = sub i32 0, %2246
  %gen22 = add i32 %_21, 20
  %2247 = sub nsw i32 %2246, 20
  %2248 = sext i32 %2247 to i64
  %2249 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2248
  %2250 = load i32, i32* %2249, align 4
  %2251 = load i32, i32* %8, align 4
  %2252 = icmp ne i32 %2250, %2251
  br label %originalBB10

originalBB26alteredBB:                            ; preds = %originalBB26, %178
  %2253 = load i32, i32* %9, align 4
  %2254 = icmp slt i32 %2253, 0
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %203
  %2255 = load i32, i32* %5, align 4
  %_31 = sub i32 0, %2255
  %gen32 = add i32 %_31, 1
  %_33 = shl i32 %2255, 1
  %_34 = sub i32 %2255, 1
  %gen35 = mul i32 %_34, 1
  %_36 = sub i32 0, %2255
  %gen37 = add i32 %_36, 1
  %2256 = add nsw i32 %2255, 1
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2257
  %2259 = load i32, i32* %2258, align 4
  %2260 = load i32, i32* %9, align 4
  %2261 = icmp ne i32 %2259, %2260
  br label %originalBB30

originalBB41alteredBB:                            ; preds = %originalBB41, %231
  %2262 = load i32, i32* %5, align 4
  %_42 = sub i32 %2262, 1
  %gen43 = mul i32 %_42, 1
  %_44 = sub i32 %2262, 1
  %gen45 = mul i32 %_44, 1
  %_46 = sub i32 %2262, 1
  %gen47 = mul i32 %_46, 1
  %_48 = sub i32 %2262, 1
  %gen49 = mul i32 %_48, 1
  %2263 = sub nsw i32 %2262, 1
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2264
  %2266 = load i8, i8* %2265, align 1
  %2267 = zext i8 %2266 to i32
  %2268 = load i32, i32* %6, align 4
  %2269 = icmp eq i32 %2267, %2268
  br label %originalBB41

originalBB53alteredBB:                            ; preds = %originalBB53, %327
  %2270 = load i32, i32* %5, align 4
  %_54 = sub i32 %2270, 1
  %gen55 = mul i32 %_54, 1
  %_56 = shl i32 %2270, 1
  %_57 = sub i32 0, %2270
  %gen58 = add i32 %_57, 1
  %_59 = sub i32 %2270, 1
  %gen60 = mul i32 %_59, 1
  %_61 = sub i32 %2270, 1
  %gen62 = mul i32 %_61, 1
  %_63 = shl i32 %2270, 1
  %2271 = add nsw i32 %2270, 1
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2272
  %2274 = load i32, i32* %2273, align 4
  store i32 %2274, i32* %9, align 4
  br label %originalBB53

originalBB67alteredBB:                            ; preds = %originalBB67, %349
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %376
  %2275 = load i32, i32* %5, align 4
  %_72 = sub i32 0, %2275
  %gen73 = add i32 %_72, 20
  %2276 = sub nsw i32 %2275, 20
  %2277 = sext i32 %2276 to i64
  %2278 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2277
  %2279 = load i32, i32* %2278, align 4
  store i32 %2279, i32* %8, align 4
  %2280 = load i32, i32* %5, align 4
  %_74 = shl i32 %2280, 1
  %_75 = sub i32 0, %2280
  %gen76 = add i32 %_75, 1
  %2281 = add nsw i32 %2280, 1
  %2282 = sext i32 %2281 to i64
  %2283 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2282
  %2284 = load i8, i8* %2283, align 1
  %2285 = zext i8 %2284 to i32
  %2286 = load i32, i32* %6, align 4
  %2287 = icmp eq i32 %2285, %2286
  br label %originalBB71

originalBB80alteredBB:                            ; preds = %originalBB80, %406
  %2288 = load i32, i32* %5, align 4
  %_81 = shl i32 %2288, 1
  %_82 = shl i32 %2288, 1
  %_83 = shl i32 %2288, 1
  %_84 = shl i32 %2288, 1
  %_85 = sub i32 0, %2288
  %gen86 = add i32 %_85, 1
  %_87 = shl i32 %2288, 1
  %2289 = add nsw i32 %2288, 1
  %2290 = sext i32 %2289 to i64
  %2291 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2290
  %2292 = load i32, i32* %2291, align 4
  %2293 = load i32, i32* %8, align 4
  %2294 = icmp ne i32 %2292, %2293
  br label %originalBB80

originalBB91alteredBB:                            ; preds = %originalBB91, %437
  %2295 = load i32, i32* %5, align 4
  %_92 = sub i32 0, %2295
  %gen93 = add i32 %_92, 1
  %_94 = sub i32 0, %2295
  %gen95 = add i32 %_94, 1
  %_96 = shl i32 %2295, 1
  %_97 = shl i32 %2295, 1
  %_98 = shl i32 %2295, 1
  %_99 = shl i32 %2295, 1
  %_100 = shl i32 %2295, 1
  %_101 = shl i32 %2295, 1
  %2296 = add nsw i32 %2295, 1
  %2297 = sext i32 %2296 to i64
  %2298 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2297
  %2299 = load i8, i8* %2298, align 1
  %2300 = zext i8 %2299 to i32
  %2301 = load i32, i32* %6, align 4
  %2302 = icmp eq i32 %2300, %2301
  br label %originalBB91

originalBB105alteredBB:                           ; preds = %originalBB105, %469
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %523
  %2303 = load i32, i32* %10, align 4
  %_110 = shl i32 %2303, 1
  %_111 = sub i32 0, %2303
  %gen112 = add i32 %_111, 1
  %_113 = sub i32 %2303, 1
  %gen114 = mul i32 %_113, 1
  %_115 = shl i32 %2303, 1
  %2304 = add nsw i32 %2303, 1
  store i32 %2304, i32* %10, align 4
  br label %originalBB109

originalBB119alteredBB:                           ; preds = %originalBB119, %550
  %2305 = load i32, i32* %10, align 4
  %_120 = sub i32 0, %2305
  %gen121 = add i32 %_120, 1
  %_122 = sub i32 %2305, 1
  %gen123 = mul i32 %_122, 1
  %2306 = add nsw i32 %2305, 1
  store i32 %2306, i32* %10, align 4
  br label %originalBB119

originalBB127alteredBB:                           ; preds = %originalBB127, %573
  %2307 = load i32, i32* %5, align 4
  %_128 = shl i32 %2307, 20
  %_129 = sub i32 0, %2307
  %gen130 = add i32 %_129, 20
  %2308 = add nsw i32 %2307, 20
  %2309 = sext i32 %2308 to i64
  %2310 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2309
  %2311 = load i8, i8* %2310, align 1
  %2312 = zext i8 %2311 to i32
  %2313 = icmp eq i32 %2312, 0
  br label %originalBB127

originalBB134alteredBB:                           ; preds = %originalBB134, %645
  %2314 = load i32, i32* %5, align 4
  %_135 = shl i32 %2314, 20
  %2315 = add nsw i32 %2314, 20
  %_136 = sub i32 %2315, 1
  %gen137 = mul i32 %_136, 1
  %_138 = shl i32 %2315, 1
  %_139 = sub i32 %2315, 1
  %gen140 = mul i32 %_139, 1
  %2316 = add nsw i32 %2315, 1
  %2317 = sext i32 %2316 to i64
  %2318 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2317
  %2319 = load i32, i32* %2318, align 4
  %2320 = load i32, i32* %8, align 4
  %2321 = icmp eq i32 %2319, %2320
  br label %originalBB134

originalBB144alteredBB:                           ; preds = %originalBB144, %673
  %2322 = load i32, i32* %5, align 4
  %_145 = sub i32 0, %2322
  %gen146 = add i32 %_145, 1
  %_147 = sub i32 %2322, 1
  %gen148 = mul i32 %_147, 1
  %_149 = sub i32 0, %2322
  %gen150 = add i32 %_149, 1
  %_151 = sub i32 %2322, 1
  %gen152 = mul i32 %_151, 1
  %_153 = shl i32 %2322, 1
  %2323 = sub nsw i32 %2322, 1
  %2324 = sext i32 %2323 to i64
  %2325 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2324
  %2326 = load i8, i8* %2325, align 1
  %2327 = zext i8 %2326 to i32
  %2328 = icmp eq i32 %2327, 0
  br label %originalBB144

originalBB157alteredBB:                           ; preds = %originalBB157, %697
  %2329 = load i32, i32* %5, align 4
  %_158 = sub i32 %2329, 1
  %gen159 = mul i32 %_158, 1
  %_160 = shl i32 %2329, 1
  %_161 = sub i32 %2329, 1
  %gen162 = mul i32 %_161, 1
  %_163 = shl i32 %2329, 1
  %_164 = sub i32 %2329, 1
  %gen165 = mul i32 %_164, 1
  %_166 = sub i32 0, %2329
  %gen167 = add i32 %_166, 1
  %_168 = sub i32 0, %2329
  %gen169 = add i32 %_168, 1
  %_170 = sub i32 %2329, 1
  %gen171 = mul i32 %_170, 1
  %2330 = sub nsw i32 %2329, 1
  %_172 = sub i32 0, %2330
  %gen173 = add i32 %_172, 1
  %_174 = sub i32 %2330, 1
  %gen175 = mul i32 %_174, 1
  %_176 = shl i32 %2330, 1
  %_177 = sub i32 0, %2330
  %gen178 = add i32 %_177, 1
  %_179 = shl i32 %2330, 1
  %_180 = sub i32 0, %2330
  %gen181 = add i32 %_180, 1
  %_182 = shl i32 %2330, 1
  %_183 = shl i32 %2330, 1
  %2331 = sub nsw i32 %2330, 1
  %2332 = sext i32 %2331 to i64
  %2333 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2332
  %2334 = load i8, i8* %2333, align 1
  %2335 = zext i8 %2334 to i32
  %2336 = load i32, i32* %6, align 4
  %2337 = icmp eq i32 %2335, %2336
  br label %originalBB157

originalBB187alteredBB:                           ; preds = %originalBB187, %732
  %2338 = load i32, i32* %5, align 4
  %_188 = shl i32 %2338, 1
  %2339 = sub nsw i32 %2338, 1
  %_189 = shl i32 %2339, 20
  %_190 = shl i32 %2339, 20
  %_191 = sub i32 %2339, 20
  %gen192 = mul i32 %_191, 20
  %2340 = sub nsw i32 %2339, 20
  %2341 = sext i32 %2340 to i64
  %2342 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2341
  %2343 = load i8, i8* %2342, align 1
  %2344 = zext i8 %2343 to i32
  %2345 = load i32, i32* %6, align 4
  %2346 = icmp eq i32 %2344, %2345
  br label %originalBB187

originalBB196alteredBB:                           ; preds = %originalBB196, %786
  %2347 = load i32, i32* %10, align 4
  %_197 = shl i32 %2347, 1
  %_198 = sub i32 0, %2347
  %gen199 = add i32 %_198, 1
  %_200 = sub i32 0, %2347
  %gen201 = add i32 %_200, 1
  %_202 = sub i32 %2347, 1
  %gen203 = mul i32 %_202, 1
  %_204 = shl i32 %2347, 1
  %_205 = sub i32 %2347, 1
  %gen206 = mul i32 %_205, 1
  %_207 = sub i32 %2347, 1
  %gen208 = mul i32 %_207, 1
  %_209 = sub i32 0, %2347
  %gen210 = add i32 %_209, 1
  %2348 = add nsw i32 %2347, 1
  store i32 %2348, i32* %10, align 4
  br label %originalBB196

originalBB214alteredBB:                           ; preds = %originalBB214, %805
  %2349 = load i32, i32* %5, align 4
  %_215 = sub i32 0, %2349
  %gen216 = add i32 %_215, 20
  %_217 = sub i32 0, %2349
  %gen218 = add i32 %_217, 20
  %_219 = shl i32 %2349, 20
  %_220 = shl i32 %2349, 20
  %2350 = sub nsw i32 %2349, 20
  %2351 = sext i32 %2350 to i64
  %2352 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2351
  %2353 = load i8, i8* %2352, align 1
  %2354 = zext i8 %2353 to i32
  %2355 = icmp eq i32 %2354, 0
  br label %originalBB214

originalBB224alteredBB:                           ; preds = %originalBB224, %848
  %2356 = load i32, i32* %5, align 4
  %_225 = sub i32 %2356, 20
  %gen226 = mul i32 %_225, 20
  %_227 = shl i32 %2356, 20
  %_228 = sub i32 0, %2356
  %gen229 = add i32 %_228, 20
  %2357 = sub nsw i32 %2356, 20
  %_230 = sub i32 %2357, 1
  %gen231 = mul i32 %_230, 1
  %2358 = add nsw i32 %2357, 1
  %2359 = sext i32 %2358 to i64
  %2360 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2359
  %2361 = load i8, i8* %2360, align 1
  %2362 = zext i8 %2361 to i32
  %2363 = load i32, i32* %6, align 4
  %2364 = icmp eq i32 %2362, %2363
  br label %originalBB224

originalBB235alteredBB:                           ; preds = %originalBB235, %905
  %2365 = load i32, i32* %5, align 4
  %_236 = shl i32 %2365, 1
  %_237 = shl i32 %2365, 1
  %_238 = shl i32 %2365, 1
  %2366 = add nsw i32 %2365, 1
  %2367 = sext i32 %2366 to i64
  %2368 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2367
  %2369 = load i8, i8* %2368, align 1
  %2370 = zext i8 %2369 to i32
  %2371 = icmp eq i32 %2370, 0
  br label %originalBB235

originalBB242alteredBB:                           ; preds = %originalBB242, %1006
  %2372 = load i32, i32* %5, align 4
  %_243 = shl i32 %2372, 20
  %_244 = sub i32 %2372, 20
  %gen245 = mul i32 %_244, 20
  %_246 = sub i32 %2372, 20
  %gen247 = mul i32 %_246, 20
  %2373 = add nsw i32 %2372, 20
  %_248 = sub i32 0, %2373
  %gen249 = add i32 %_248, 20
  %_250 = sub i32 0, %2373
  %gen251 = add i32 %_250, 20
  %_252 = sub i32 %2373, 20
  %gen253 = mul i32 %_252, 20
  %_254 = sub i32 %2373, 20
  %gen255 = mul i32 %_254, 20
  %_256 = shl i32 %2373, 20
  %_257 = sub i32 %2373, 20
  %gen258 = mul i32 %_257, 20
  %_259 = sub i32 0, %2373
  %gen260 = add i32 %_259, 20
  %_261 = sub i32 %2373, 20
  %gen262 = mul i32 %_261, 20
  %2374 = add nsw i32 %2373, 20
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2375
  %2377 = load i8, i8* %2376, align 1
  %2378 = zext i8 %2377 to i32
  %2379 = load i32, i32* %6, align 4
  %2380 = icmp eq i32 %2378, %2379
  br label %originalBB242

originalBB266alteredBB:                           ; preds = %originalBB266, %1060
  %2381 = load i32, i32* %5, align 4
  %_267 = sub i32 %2381, 20
  %gen268 = mul i32 %_267, 20
  %_269 = sub i32 %2381, 20
  %gen270 = mul i32 %_269, 20
  %_271 = sub i32 0, %2381
  %gen272 = add i32 %_271, 20
  %_273 = shl i32 %2381, 20
  %2382 = add nsw i32 %2381, 20
  %_274 = shl i32 %2382, 1
  %2383 = add nsw i32 %2382, 1
  %2384 = sext i32 %2383 to i64
  %2385 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2384
  %2386 = load i8, i8* %2385, align 1
  %2387 = zext i8 %2386 to i32
  %2388 = load i32, i32* %6, align 4
  %2389 = icmp eq i32 %2387, %2388
  br label %originalBB266

originalBB278alteredBB:                           ; preds = %originalBB278, %1124
  %2390 = load i32, i32* %5, align 4
  %_279 = sub i32 %2390, 20
  %gen280 = mul i32 %_279, 20
  %_281 = sub i32 0, %2390
  %gen282 = add i32 %_281, 20
  %_283 = shl i32 %2390, 20
  %_284 = sub i32 0, %2390
  %gen285 = add i32 %_284, 20
  %_286 = shl i32 %2390, 20
  %_287 = sub i32 0, %2390
  %gen288 = add i32 %_287, 20
  %2391 = add nsw i32 %2390, 20
  %_289 = sub i32 0, %2391
  %gen290 = add i32 %_289, 1
  %_291 = sub i32 0, %2391
  %gen292 = add i32 %_291, 1
  %_293 = sub i32 0, %2391
  %gen294 = add i32 %_293, 1
  %_295 = sub i32 %2391, 1
  %gen296 = mul i32 %_295, 1
  %_297 = sub i32 %2391, 1
  %gen298 = mul i32 %_297, 1
  %_299 = sub i32 0, %2391
  %gen300 = add i32 %_299, 1
  %_301 = sub i32 %2391, 1
  %gen302 = mul i32 %_301, 1
  %_303 = sub i32 %2391, 1
  %gen304 = mul i32 %_303, 1
  %2392 = sub nsw i32 %2391, 1
  %2393 = sext i32 %2392 to i64
  %2394 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2393
  %2395 = load i32, i32* %2394, align 4
  %2396 = load i32, i32* %9, align 4
  %2397 = icmp eq i32 %2395, %2396
  br label %originalBB278

originalBB308alteredBB:                           ; preds = %originalBB308, %1149
  %2398 = load i32, i32* %5, align 4
  %_309 = sub i32 0, %2398
  %gen310 = add i32 %_309, 20
  %_311 = sub i32 %2398, 20
  %gen312 = mul i32 %_311, 20
  %_313 = shl i32 %2398, 20
  %_314 = sub i32 %2398, 20
  %gen315 = mul i32 %_314, 20
  %_316 = sub i32 0, %2398
  %gen317 = add i32 %_316, 20
  %_318 = sub i32 %2398, 20
  %gen319 = mul i32 %_318, 20
  %_320 = sub i32 0, %2398
  %gen321 = add i32 %_320, 20
  %_322 = sub i32 %2398, 20
  %gen323 = mul i32 %_322, 20
  %2399 = add nsw i32 %2398, 20
  %_324 = shl i32 %2399, 1
  %_325 = sub i32 %2399, 1
  %gen326 = mul i32 %_325, 1
  %_327 = shl i32 %2399, 1
  %_328 = sub i32 0, %2399
  %gen329 = add i32 %_328, 1
  %2400 = add nsw i32 %2399, 1
  %2401 = sext i32 %2400 to i64
  %2402 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2401
  %2403 = load i8, i8* %2402, align 1
  %2404 = zext i8 %2403 to i32
  %2405 = load i32, i32* %6, align 4
  %2406 = icmp eq i32 %2404, %2405
  br label %originalBB308

originalBB333alteredBB:                           ; preds = %originalBB333, %1175
  %2407 = load i32, i32* %5, align 4
  %_334 = sub i32 %2407, 20
  %gen335 = mul i32 %_334, 20
  %_336 = sub i32 0, %2407
  %gen337 = add i32 %_336, 20
  %_338 = sub i32 0, %2407
  %gen339 = add i32 %_338, 20
  %_340 = sub i32 0, %2407
  %gen341 = add i32 %_340, 20
  %_342 = sub i32 %2407, 20
  %gen343 = mul i32 %_342, 20
  %_344 = shl i32 %2407, 20
  %_345 = sub i32 0, %2407
  %gen346 = add i32 %_345, 20
  %_347 = shl i32 %2407, 20
  %_348 = shl i32 %2407, 20
  %2408 = add nsw i32 %2407, 20
  %_349 = sub i32 %2408, 1
  %gen350 = mul i32 %_349, 1
  %_351 = sub i32 %2408, 1
  %gen352 = mul i32 %_351, 1
  %_353 = shl i32 %2408, 1
  %_354 = sub i32 %2408, 1
  %gen355 = mul i32 %_354, 1
  %_356 = sub i32 0, %2408
  %gen357 = add i32 %_356, 1
  %2409 = add nsw i32 %2408, 1
  %2410 = sext i32 %2409 to i64
  %2411 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2410
  %2412 = load i32, i32* %2411, align 4
  %2413 = load i32, i32* %9, align 4
  %2414 = icmp eq i32 %2412, %2413
  br label %originalBB333

originalBB361alteredBB:                           ; preds = %originalBB361, %1287
  %2415 = load i32, i32* %5, align 4
  %_362 = sub i32 0, %2415
  %gen363 = add i32 %_362, 1
  %2416 = sub nsw i32 %2415, 1
  %_364 = sub i32 0, %2416
  %gen365 = add i32 %_364, 20
  %2417 = sub nsw i32 %2416, 20
  %2418 = sext i32 %2417 to i64
  %2419 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2418
  %2420 = load i8, i8* %2419, align 1
  %2421 = zext i8 %2420 to i32
  %2422 = load i32, i32* %6, align 4
  %2423 = icmp eq i32 %2421, %2422
  br label %originalBB361

originalBB369alteredBB:                           ; preds = %originalBB369, %1344
  %2424 = load i32, i32* %5, align 4
  %_370 = sub i32 0, %2424
  %gen371 = add i32 %_370, 20
  %_372 = shl i32 %2424, 20
  %_373 = sub i32 %2424, 20
  %gen374 = mul i32 %_373, 20
  %_375 = shl i32 %2424, 20
  %_376 = shl i32 %2424, 20
  %2425 = sub nsw i32 %2424, 20
  %2426 = sext i32 %2425 to i64
  %2427 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2426
  %2428 = load i8, i8* %2427, align 1
  %2429 = zext i8 %2428 to i32
  %2430 = icmp eq i32 %2429, 0
  br label %originalBB369

originalBB380alteredBB:                           ; preds = %originalBB380, %1368
  %2431 = load i32, i32* %5, align 4
  %_381 = shl i32 %2431, 20
  %_382 = shl i32 %2431, 20
  %_383 = sub i32 %2431, 20
  %gen384 = mul i32 %_383, 20
  %_385 = shl i32 %2431, 20
  %_386 = shl i32 %2431, 20
  %_387 = shl i32 %2431, 20
  %2432 = sub nsw i32 %2431, 20
  %_388 = sub i32 %2432, 20
  %gen389 = mul i32 %_388, 20
  %_390 = shl i32 %2432, 20
  %_391 = sub i32 0, %2432
  %gen392 = add i32 %_391, 20
  %_393 = sub i32 0, %2432
  %gen394 = add i32 %_393, 20
  %_395 = shl i32 %2432, 20
  %_396 = sub i32 0, %2432
  %gen397 = add i32 %_396, 20
  %_398 = sub i32 0, %2432
  %gen399 = add i32 %_398, 20
  %_400 = sub i32 %2432, 20
  %gen401 = mul i32 %_400, 20
  %2433 = sub nsw i32 %2432, 20
  %2434 = sext i32 %2433 to i64
  %2435 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2434
  %2436 = load i8, i8* %2435, align 1
  %2437 = zext i8 %2436 to i32
  %2438 = load i32, i32* %6, align 4
  %2439 = icmp eq i32 %2437, %2438
  br label %originalBB380

originalBB405alteredBB:                           ; preds = %originalBB405, %1432
  %2440 = load i32, i32* %5, align 4
  %_406 = sub i32 %2440, 20
  %gen407 = mul i32 %_406, 20
  %_408 = shl i32 %2440, 20
  %_409 = sub i32 0, %2440
  %gen410 = add i32 %_409, 20
  %_411 = shl i32 %2440, 20
  %_412 = sub i32 %2440, 20
  %gen413 = mul i32 %_412, 20
  %2441 = sub nsw i32 %2440, 20
  %_414 = shl i32 %2441, 1
  %_415 = sub i32 0, %2441
  %gen416 = add i32 %_415, 1
  %_417 = sub i32 %2441, 1
  %gen418 = mul i32 %_417, 1
  %_419 = sub i32 %2441, 1
  %gen420 = mul i32 %_419, 1
  %_421 = shl i32 %2441, 1
  %_422 = sub i32 %2441, 1
  %gen423 = mul i32 %_422, 1
  %_424 = sub i32 0, %2441
  %gen425 = add i32 %_424, 1
  %2442 = sub nsw i32 %2441, 1
  %2443 = sext i32 %2442 to i64
  %2444 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2443
  %2445 = load i32, i32* %2444, align 4
  %2446 = load i32, i32* %8, align 4
  %2447 = icmp eq i32 %2445, %2446
  br label %originalBB405

originalBB429alteredBB:                           ; preds = %originalBB429, %1457
  %2448 = load i32, i32* %5, align 4
  %_430 = shl i32 %2448, 20
  %2449 = sub nsw i32 %2448, 20
  %_431 = sub i32 %2449, 20
  %gen432 = mul i32 %_431, 20
  %_433 = sub i32 0, %2449
  %gen434 = add i32 %_433, 20
  %2450 = sub nsw i32 %2449, 20
  %2451 = sext i32 %2450 to i64
  %2452 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2451
  %2453 = load i8, i8* %2452, align 1
  %2454 = zext i8 %2453 to i32
  %2455 = load i32, i32* %6, align 4
  %2456 = icmp eq i32 %2454, %2455
  br label %originalBB429

originalBB438alteredBB:                           ; preds = %originalBB438, %1502
  %2457 = load i32, i32* %5, align 4
  %_439 = sub i32 0, %2457
  %gen440 = add i32 %_439, 20
  %_441 = sub i32 %2457, 20
  %gen442 = mul i32 %_441, 20
  %2458 = sub nsw i32 %2457, 20
  %_443 = shl i32 %2458, 1
  %_444 = sub i32 %2458, 1
  %gen445 = mul i32 %_444, 1
  %_446 = sub i32 0, %2458
  %gen447 = add i32 %_446, 1
  %_448 = shl i32 %2458, 1
  %_449 = sub i32 %2458, 1
  %gen450 = mul i32 %_449, 1
  %_451 = sub i32 0, %2458
  %gen452 = add i32 %_451, 1
  %2459 = add nsw i32 %2458, 1
  %2460 = sext i32 %2459 to i64
  %2461 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2460
  %2462 = load i32, i32* %2461, align 4
  %2463 = load i32, i32* %9, align 4
  %2464 = icmp eq i32 %2462, %2463
  br label %originalBB438

originalBB456alteredBB:                           ; preds = %originalBB456, %1546
  %2465 = load i32, i32* %10, align 4
  %_457 = sub i32 0, %2465
  %gen458 = add i32 %_457, 1
  %_459 = sub i32 0, %2465
  %gen460 = add i32 %_459, 1
  %_461 = sub i32 0, %2465
  %gen462 = add i32 %_461, 1
  %2466 = add nsw i32 %2465, 1
  store i32 %2466, i32* %10, align 4
  br label %originalBB456

originalBB466alteredBB:                           ; preds = %originalBB466, %1573
  %2467 = load i32, i32* %5, align 4
  %_467 = shl i32 %2467, 1
  %_468 = shl i32 %2467, 1
  %_469 = sub i32 %2467, 1
  %gen470 = mul i32 %_469, 1
  %2468 = add nsw i32 %2467, 1
  %_471 = sub i32 %2468, 1
  %gen472 = mul i32 %_471, 1
  %_473 = sub i32 %2468, 1
  %gen474 = mul i32 %_473, 1
  %_475 = shl i32 %2468, 1
  %_476 = sub i32 0, %2468
  %gen477 = add i32 %_476, 1
  %2469 = add nsw i32 %2468, 1
  %2470 = sext i32 %2469 to i64
  %2471 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2470
  %2472 = load i8, i8* %2471, align 1
  %2473 = zext i8 %2472 to i32
  %2474 = load i32, i32* %6, align 4
  %2475 = icmp eq i32 %2473, %2474
  br label %originalBB466

originalBB481alteredBB:                           ; preds = %originalBB481, %1627
  %2476 = load i32, i32* %5, align 4
  %2477 = add nsw i32 %2476, 1
  %_482 = sub i32 0, %2477
  %gen483 = add i32 %_482, 20
  %2478 = sub nsw i32 %2477, 20
  %2479 = sext i32 %2478 to i64
  %2480 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2479
  %2481 = load i8, i8* %2480, align 1
  %2482 = zext i8 %2481 to i32
  %2483 = load i32, i32* %6, align 4
  %2484 = icmp eq i32 %2482, %2483
  br label %originalBB481

originalBB487alteredBB:                           ; preds = %originalBB487, %1719
  %2485 = load i32, i32* %10, align 4
  %_488 = sub i32 %2485, 1
  %gen489 = mul i32 %_488, 1
  %_490 = shl i32 %2485, 1
  %2486 = add nsw i32 %2485, 1
  store i32 %2486, i32* %10, align 4
  br label %originalBB487

originalBB494alteredBB:                           ; preds = %originalBB494, %1738
  %2487 = load i32, i32* %8, align 4
  %2488 = sext i32 %2487 to i64
  %2489 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2488
  %2490 = getelementptr inbounds %struct.string_data, %struct.string_data* %2489, i32 0, i32 3
  %2491 = load i32, i32* %2490, align 4
  %2492 = load i32, i32* %9, align 4
  %2493 = sext i32 %2492 to i64
  %2494 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2493
  %2495 = getelementptr inbounds %struct.string_data, %struct.string_data* %2494, i32 0, i32 3
  %2496 = load i32, i32* %2495, align 4
  %_495 = sub i32 %2491, %2496
  %gen496 = mul i32 %_495, %2496
  %_497 = shl i32 %2491, %2496
  %_498 = sub i32 %2491, %2496
  %gen499 = mul i32 %_498, %2496
  %2497 = add nsw i32 %2491, %2496
  %2498 = load i32, i32* %8, align 4
  %2499 = sext i32 %2498 to i64
  %2500 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2499
  %2501 = getelementptr inbounds %struct.string_data, %struct.string_data* %2500, i32 0, i32 2
  %2502 = load i32, i32* %2501, align 8
  %2503 = load i32, i32* %9, align 4
  %2504 = sext i32 %2503 to i64
  %2505 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %2504
  %2506 = getelementptr inbounds %struct.string_data, %struct.string_data* %2505, i32 0, i32 2
  %2507 = load i32, i32* %2506, align 8
  %2508 = call i32 @count_common_libs(i32 %2502, i32 %2507)
  %_500 = sub i32 0, %2497
  %gen501 = add i32 %_500, %2508
  %_502 = sub i32 0, %2497
  %gen503 = add i32 %_502, %2508
  %_504 = shl i32 %2497, %2508
  %_505 = shl i32 %2497, %2508
  %_506 = sub i32 %2497, %2508
  %gen507 = mul i32 %_506, %2508
  %_508 = sub i32 %2497, %2508
  %gen509 = mul i32 %_508, %2508
  %_510 = sub i32 0, %2497
  %gen511 = add i32 %_510, %2508
  %_512 = sub i32 0, %2497
  %gen513 = add i32 %_512, %2508
  %2509 = sub nsw i32 %2497, %2508
  %_514 = shl i32 %2509, 1
  %_515 = shl i32 %2509, 1
  %_516 = shl i32 %2509, 1
  %_517 = sub i32 0, %2509
  %gen518 = add i32 %_517, 1
  %2510 = sub nsw i32 %2509, 1
  %2511 = load i32, i32* %10, align 4
  %_519 = sub i32 0, %2511
  %gen520 = add i32 %_519, %2510
  %_521 = shl i32 %2511, %2510
  %_522 = shl i32 %2511, %2510
  %2512 = add nsw i32 %2511, %2510
  store i32 %2512, i32* %10, align 4
  br label %originalBB494

originalBB526alteredBB:                           ; preds = %originalBB526, %1800
  %2513 = load i32, i32* %8, align 4
  %2514 = icmp slt i32 %2513, 0
  br label %originalBB526

originalBB530alteredBB:                           ; preds = %originalBB530, %1819
  %2515 = load i32, i32* %12, align 4
  %_531 = sub i32 %2515, 20
  %gen532 = mul i32 %_531, 20
  %_533 = sub i32 %2515, 20
  %gen534 = mul i32 %_533, 20
  %_535 = sub i32 %2515, 20
  %gen536 = mul i32 %_535, 20
  %_537 = sub i32 %2515, 20
  %gen538 = mul i32 %_537, 20
  %_539 = sub i32 0, %2515
  %gen540 = add i32 %_539, 20
  %_541 = shl i32 %2515, 20
  %2516 = add nsw i32 %2515, 20
  %2517 = sext i32 %2516 to i64
  %2518 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2517
  %2519 = load i8, i8* %2518, align 1
  %2520 = zext i8 %2519 to i32
  %2521 = load i32, i32* %6, align 4
  %2522 = icmp eq i32 %2520, %2521
  br label %originalBB530

originalBB545alteredBB:                           ; preds = %originalBB545, %1869
  %2523 = load i32, i32* %12, align 4
  %_546 = sub i32 0, %2523
  %gen547 = add i32 %_546, 20
  %_548 = shl i32 %2523, 20
  %_549 = sub i32 0, %2523
  %gen550 = add i32 %_549, 20
  %2524 = sub nsw i32 %2523, 20
  %2525 = sext i32 %2524 to i64
  %2526 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2525
  %2527 = load i8, i8* %2526, align 1
  %2528 = zext i8 %2527 to i32
  %2529 = load i32, i32* %6, align 4
  %2530 = icmp eq i32 %2528, %2529
  br label %originalBB545

originalBB554alteredBB:                           ; preds = %originalBB554, %1902
  %2531 = load i32, i32* %12, align 4
  %_555 = shl i32 %2531, 1
  %_556 = sub i32 0, %2531
  %gen557 = add i32 %_556, 1
  %_558 = sub i32 %2531, 1
  %gen559 = mul i32 %_558, 1
  %_560 = sub i32 0, %2531
  %gen561 = add i32 %_560, 1
  %2532 = add nsw i32 %2531, 1
  %2533 = sext i32 %2532 to i64
  %2534 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2533
  %2535 = load i8, i8* %2534, align 1
  %2536 = zext i8 %2535 to i32
  %2537 = load i32, i32* %6, align 4
  %2538 = icmp eq i32 %2536, %2537
  br label %originalBB554

originalBB565alteredBB:                           ; preds = %originalBB565, %1927
  %2539 = load i32, i32* %12, align 4
  %_566 = shl i32 %2539, 1
  %2540 = add nsw i32 %2539, 1
  %2541 = sext i32 %2540 to i64
  %2542 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2541
  %2543 = load i32, i32* %2542, align 4
  %2544 = load i32, i32* %8, align 4
  %2545 = icmp eq i32 %2543, %2544
  br label %originalBB565

originalBB570alteredBB:                           ; preds = %originalBB570, %1980
  %2546 = load i32, i32* %12, align 4
  %_571 = sub i32 0, %2546
  %gen572 = add i32 %_571, 1
  %_573 = shl i32 %2546, 1
  %_574 = shl i32 %2546, 1
  %2547 = sub nsw i32 %2546, 1
  %2548 = sext i32 %2547 to i64
  %2549 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %2548
  %2550 = load i32, i32* %2549, align 4
  %2551 = load i32, i32* %9, align 4
  %2552 = icmp eq i32 %2550, %2551
  br label %originalBB570

originalBB578alteredBB:                           ; preds = %originalBB578, %2004
  %2553 = load i32, i32* %12, align 4
  %_579 = sub i32 0, %2553
  %gen580 = add i32 %_579, 20
  %_581 = sub i32 %2553, 20
  %gen582 = mul i32 %_581, 20
  %_583 = shl i32 %2553, 20
  %_584 = sub i32 %2553, 20
  %gen585 = mul i32 %_584, 20
  %_586 = sub i32 0, %2553
  %gen587 = add i32 %_586, 20
  %_588 = sub i32 %2553, 20
  %gen589 = mul i32 %_588, 20
  %_590 = shl i32 %2553, 20
  %_591 = sub i32 %2553, 20
  %gen592 = mul i32 %_591, 20
  %_593 = sub i32 0, %2553
  %gen594 = add i32 %_593, 20
  %_595 = sub i32 %2553, 20
  %gen596 = mul i32 %_595, 20
  %2554 = sub nsw i32 %2553, 20
  %2555 = sext i32 %2554 to i64
  %2556 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2555
  %2557 = load i8, i8* %2556, align 1
  %2558 = zext i8 %2557 to i32
  %2559 = load i32, i32* %6, align 4
  %2560 = icmp eq i32 %2558, %2559
  br label %originalBB578

originalBB600alteredBB:                           ; preds = %originalBB600, %2037
  %2561 = load i32, i32* %12, align 4
  %_601 = sub i32 %2561, 1
  %gen602 = mul i32 %_601, 1
  %_603 = sub i32 %2561, 1
  %gen604 = mul i32 %_603, 1
  %_605 = shl i32 %2561, 1
  %_606 = shl i32 %2561, 1
  %_607 = sub i32 %2561, 1
  %gen608 = mul i32 %_607, 1
  %_609 = sub i32 0, %2561
  %gen610 = add i32 %_609, 1
  %2562 = add nsw i32 %2561, 1
  %2563 = sext i32 %2562 to i64
  %2564 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %2563
  %2565 = load i8, i8* %2564, align 1
  %2566 = zext i8 %2565 to i32
  %2567 = load i32, i32* %6, align 4
  %2568 = icmp eq i32 %2566, %2567
  br label %originalBB600

originalBB614alteredBB:                           ; preds = %originalBB614, %2070
  %2569 = load i32, i32* %10, align 4
  %_615 = sub i32 0, %2569
  %gen616 = add i32 %_615, 1
  %_617 = sub i32 0, %2569
  %gen618 = add i32 %_617, 1
  %_619 = sub i32 0, %2569
  %gen620 = add i32 %_619, 1
  %_621 = sub i32 0, %2569
  %gen622 = add i32 %_621, 1
  %_623 = sub i32 %2569, 1
  %gen624 = mul i32 %_623, 1
  %_625 = sub i32 %2569, 1
  %gen626 = mul i32 %_625, 1
  %2570 = add nsw i32 %2569, 1
  store i32 %2570, i32* %10, align 4
  br label %originalBB614

originalBB630alteredBB:                           ; preds = %originalBB630, %2119
  %2571 = load i32, i32* %13, align 4
  %2572 = icmp eq i32 %2571, 2
  br label %originalBB630

originalBB634alteredBB:                           ; preds = %originalBB634, %2144
  store i32 -1, i32* %4, align 4
  br label %originalBB634

originalBB638alteredBB:                           ; preds = %originalBB638, %2163
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %2221
  %2573 = load i32, i32* %4, align 4
  br label %originalBB642
}

; Function Attrs: noinline nounwind uwtable
define i32 @count_common_libs(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [241 x i32], align 16
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %10, align 4
  %14 = load i32, i32* %4, align 4
  %15 = icmp ult i32 %14, 421
  br i1 %15, label %16, label %24

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* %4, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp ne i32 %21, 3
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %16
  br label %31

; <label>:24:                                     ; preds = %16, %2
  %25 = load i32, i32* %4, align 4
  %26 = sdiv i32 %25, 20
  %27 = sub nsw i32 %26, 1
  %28 = load i32, i32* %4, align 4
  %29 = srem i32 %28, 20
  %30 = sub nsw i32 %29, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1914, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 %27, i32 %30)
  br label %31

; <label>:31:                                     ; preds = %24, %23
  %32 = load i32, i32* %5, align 4
  %33 = icmp ult i32 %32, 421
  br i1 %33, label %34, label %42

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* %5, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 3
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %34
  br label %65

; <label>:42:                                     ; preds = %34, %31
  %43 = load i32, i32* @x.65
  %44 = load i32, i32* @y.66
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %42
  %51 = load i32, i32* %5, align 4
  %52 = sdiv i32 %51, 20
  %53 = sub nsw i32 %52, 1
  %54 = load i32, i32* %5, align 4
  %55 = srem i32 %54, 20
  %56 = sub nsw i32 %55, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1915, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %53, i32 %56)
  %57 = load i32, i32* @x.65
  %58 = load i32, i32* @y.66
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %65

; <label>:65:                                     ; preds = %originalBBpart2, %41
  %66 = load i32, i32* @x.65
  %67 = load i32, i32* @y.66
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %65
  %74 = load i32, i32* %4, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp eq i32 %78, 1
  %80 = load i32, i32* @x.65
  %81 = load i32, i32* @y.66
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %79, label %111, label %88

; <label>:88:                                     ; preds = %originalBBpart216
  %89 = load i32, i32* @x.65
  %90 = load i32, i32* @y.66
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %88
  %97 = load i32, i32* %4, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 2
  %103 = load i32, i32* @x.65
  %104 = load i32, i32* @y.66
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %102, label %111, label %112

; <label>:111:                                    ; preds = %originalBBpart220, %originalBBpart216
  br label %119

; <label>:112:                                    ; preds = %originalBBpart220
  %113 = load i32, i32* %4, align 4
  %114 = sdiv i32 %113, 20
  %115 = sub nsw i32 %114, 1
  %116 = load i32, i32* %4, align 4
  %117 = srem i32 %116, 20
  %118 = sub nsw i32 %117, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1916, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 %115, i32 %118)
  br label %119

; <label>:119:                                    ; preds = %112, %111
  %120 = load i32, i32* %5, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %133, label %126

; <label>:126:                                    ; preds = %119
  %127 = load i32, i32* %5, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %133, label %134

; <label>:133:                                    ; preds = %126, %119
  br label %141

; <label>:134:                                    ; preds = %126
  %135 = load i32, i32* %5, align 4
  %136 = sdiv i32 %135, 20
  %137 = sub nsw i32 %136, 1
  %138 = load i32, i32* %5, align 4
  %139 = srem i32 %138, 20
  %140 = sub nsw i32 %139, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1917, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i32 %137, i32 %140)
  br label %141

; <label>:141:                                    ; preds = %134, %133
  %142 = load i32, i32* %4, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %12, align 4
  %146 = load i32, i32* %12, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %147
  %149 = getelementptr inbounds %struct.string_data, %struct.string_data* %148, i32 0, i32 3
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* %8, align 4
  %151 = load i32, i32* %8, align 4
  %152 = load i32, i32* %5, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %156
  %158 = getelementptr inbounds %struct.string_data, %struct.string_data* %157, i32 0, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %151, %159
  br i1 %160, label %161, label %190

; <label>:161:                                    ; preds = %141
  %162 = load i32, i32* @x.65
  %163 = load i32, i32* @y.66
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %161
  %170 = load i32, i32* %5, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %171
  %173 = load i32, i32* %172, align 4
  store i32 %173, i32* %12, align 4
  %174 = load i32, i32* %12, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %175
  %177 = getelementptr inbounds %struct.string_data, %struct.string_data* %176, i32 0, i32 3
  %178 = load i32, i32* %177, align 4
  store i32 %178, i32* %8, align 4
  %179 = load i32, i32* %4, align 4
  store i32 %179, i32* %13, align 4
  %180 = load i32, i32* %5, align 4
  store i32 %180, i32* %4, align 4
  %181 = load i32, i32* %13, align 4
  store i32 %181, i32* %5, align 4
  %182 = load i32, i32* @x.65
  %183 = load i32, i32* @y.66
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %190

; <label>:190:                                    ; preds = %originalBBpart224, %141
  %191 = load i32, i32* %8, align 4
  %192 = icmp sle i32 %191, 20
  br i1 %192, label %193, label %335

; <label>:193:                                    ; preds = %190
  %194 = load i32, i32* %12, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %195
  %197 = getelementptr inbounds %struct.string_data, %struct.string_data* %196, i32 0, i32 4
  %198 = getelementptr inbounds [20 x i32], [20 x i32]* %197, i32 0, i32 0
  store i32* %198, i32** %7, align 8
  %199 = load i32, i32* %5, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %200
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %12, align 4
  %203 = load i32, i32* %12, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %204
  %206 = getelementptr inbounds %struct.string_data, %struct.string_data* %205, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  store i32 %207, i32* %9, align 4
  %208 = load i32, i32* %9, align 4
  %209 = icmp sle i32 %208, 20
  br i1 %209, label %210, label %334

; <label>:210:                                    ; preds = %193
  %211 = load i32, i32* @liberty_mark, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* @liberty_mark, align 4
  store i32 0, i32* %11, align 4
  br label %213

; <label>:213:                                    ; preds = %242, %210
  %214 = load i32, i32* %11, align 4
  %215 = load i32, i32* %8, align 4
  %216 = icmp slt i32 %214, %215
  br i1 %216, label %217, label %245

; <label>:217:                                    ; preds = %213
  %218 = load i32, i32* @x.65
  %219 = load i32, i32* @y.66
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %217
  %226 = load i32, i32* @liberty_mark, align 4
  %227 = load i32*, i32** %7, align 8
  %228 = load i32, i32* %11, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i32, i32* %227, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %232
  store i32 %226, i32* %233, align 4
  %234 = load i32, i32* @x.65
  %235 = load i32, i32* @y.66
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %242

; <label>:242:                                    ; preds = %originalBBpart228
  %243 = load i32, i32* %11, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %11, align 4
  br label %213

; <label>:245:                                    ; preds = %213
  %246 = load i32, i32* @x.65
  %247 = load i32, i32* @y.66
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %245
  %254 = load i32, i32* %12, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %255
  %257 = getelementptr inbounds %struct.string_data, %struct.string_data* %256, i32 0, i32 4
  %258 = getelementptr inbounds [20 x i32], [20 x i32]* %257, i32 0, i32 0
  store i32* %258, i32** %7, align 8
  store i32 0, i32* %11, align 4
  %259 = load i32, i32* @x.65
  %260 = load i32, i32* @y.66
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %267

; <label>:267:                                    ; preds = %329, %originalBBpart232
  %268 = load i32, i32* %11, align 4
  %269 = load i32, i32* %9, align 4
  %270 = icmp slt i32 %268, %269
  br i1 %270, label %271, label %332

; <label>:271:                                    ; preds = %267
  %272 = load i32*, i32** %7, align 8
  %273 = load i32, i32* %11, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i32, i32* %272, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i32
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %293

; <label>:282:                                    ; preds = %271
  %283 = load i32*, i32** %7, align 8
  %284 = load i32, i32* %11, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i32, i32* %283, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = load i32, i32* @liberty_mark, align 4
  %292 = icmp ne i32 %290, %291
  br i1 %292, label %312, label %293

; <label>:293:                                    ; preds = %282, %271
  %294 = load i32, i32* @x.65
  %295 = load i32, i32* @y.66
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %293
  %302 = load i32, i32* %10, align 4
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %10, align 4
  %304 = load i32, i32* @x.65
  %305 = load i32, i32* @y.66
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart245, label %originalBB34alteredBB

originalBBpart245:                                ; preds = %originalBB34
  br label %312

; <label>:312:                                    ; preds = %originalBBpart245, %282
  %313 = load i32, i32* @x.65
  %314 = load i32, i32* @y.66
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %312
  %321 = load i32, i32* @x.65
  %322 = load i32, i32* @y.66
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %329

; <label>:329:                                    ; preds = %originalBBpart249
  %330 = load i32, i32* %11, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %11, align 4
  br label %267

; <label>:332:                                    ; preds = %267
  %333 = load i32, i32* %10, align 4
  store i32 %333, i32* %3, align 4
  br label %578

; <label>:334:                                    ; preds = %193
  br label %340

; <label>:335:                                    ; preds = %190
  %336 = load i32, i32* %4, align 4
  %337 = getelementptr inbounds [241 x i32], [241 x i32]* %6, i32 0, i32 0
  %338 = call i32 @findlib(i32 %336, i32 241, i32* %337)
  %339 = getelementptr inbounds [241 x i32], [241 x i32]* %6, i32 0, i32 0
  store i32* %339, i32** %7, align 8
  br label %340

; <label>:340:                                    ; preds = %335, %334
  store i32 0, i32* %11, align 4
  br label %341

; <label>:341:                                    ; preds = %originalBBpart2102, %340
  %342 = load i32, i32* @x.65
  %343 = load i32, i32* @y.66
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %341
  %350 = load i32, i32* %11, align 4
  %351 = load i32, i32* %8, align 4
  %352 = icmp slt i32 %350, %351
  %353 = load i32, i32* @x.65
  %354 = load i32, i32* @y.66
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br i1 %352, label %361, label %576

; <label>:361:                                    ; preds = %originalBBpart253
  %362 = load i32*, i32** %7, align 8
  %363 = load i32, i32* %11, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i32, i32* %362, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = add nsw i32 %366, 20
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %368
  %370 = load i8, i8* %369, align 1
  %371 = zext i8 %370 to i32
  %372 = load i32, i32* %5, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %373
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i32
  %377 = icmp eq i32 %371, %376
  br i1 %377, label %378, label %393

; <label>:378:                                    ; preds = %361
  %379 = load i32*, i32** %7, align 8
  %380 = load i32, i32* %11, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds i32, i32* %379, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = add nsw i32 %383, 20
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %385
  %387 = load i32, i32* %386, align 4
  %388 = load i32, i32* %5, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = icmp eq i32 %387, %391
  br i1 %392, label %537, label %393

; <label>:393:                                    ; preds = %378, %361
  %394 = load i32, i32* @x.65
  %395 = load i32, i32* @y.66
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %393
  %402 = load i32*, i32** %7, align 8
  %403 = load i32, i32* %11, align 4
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds i32, i32* %402, i64 %404
  %406 = load i32, i32* %405, align 4
  %407 = sub nsw i32 %406, 1
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %408
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i32
  %412 = load i32, i32* %5, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %413
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  %417 = icmp eq i32 %411, %416
  %418 = load i32, i32* @x.65
  %419 = load i32, i32* @y.66
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart262, label %originalBB55alteredBB

originalBBpart262:                                ; preds = %originalBB55
  br i1 %417, label %426, label %441

; <label>:426:                                    ; preds = %originalBBpart262
  %427 = load i32*, i32** %7, align 8
  %428 = load i32, i32* %11, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i32, i32* %427, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = sub nsw i32 %431, 1
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %433
  %435 = load i32, i32* %434, align 4
  %436 = load i32, i32* %5, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %437
  %439 = load i32, i32* %438, align 4
  %440 = icmp eq i32 %435, %439
  br i1 %440, label %537, label %441

; <label>:441:                                    ; preds = %426, %originalBBpart262
  %442 = load i32, i32* @x.65
  %443 = load i32, i32* @y.66
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %441
  %450 = load i32*, i32** %7, align 8
  %451 = load i32, i32* %11, align 4
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds i32, i32* %450, i64 %452
  %454 = load i32, i32* %453, align 4
  %455 = sub nsw i32 %454, 20
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %456
  %458 = load i8, i8* %457, align 1
  %459 = zext i8 %458 to i32
  %460 = load i32, i32* %5, align 4
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %461
  %463 = load i8, i8* %462, align 1
  %464 = zext i8 %463 to i32
  %465 = icmp eq i32 %459, %464
  %466 = load i32, i32* @x.65
  %467 = load i32, i32* @y.66
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart276, label %originalBB64alteredBB

originalBBpart276:                                ; preds = %originalBB64
  br i1 %465, label %474, label %489

; <label>:474:                                    ; preds = %originalBBpart276
  %475 = load i32*, i32** %7, align 8
  %476 = load i32, i32* %11, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i32, i32* %475, i64 %477
  %479 = load i32, i32* %478, align 4
  %480 = sub nsw i32 %479, 20
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %481
  %483 = load i32, i32* %482, align 4
  %484 = load i32, i32* %5, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %483, %487
  br i1 %488, label %537, label %489

; <label>:489:                                    ; preds = %474, %originalBBpart276
  %490 = load i32*, i32** %7, align 8
  %491 = load i32, i32* %11, align 4
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds i32, i32* %490, i64 %492
  %494 = load i32, i32* %493, align 4
  %495 = add nsw i32 %494, 1
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %496
  %498 = load i8, i8* %497, align 1
  %499 = zext i8 %498 to i32
  %500 = load i32, i32* %5, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %501
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i32
  %505 = icmp eq i32 %499, %504
  br i1 %505, label %506, label %540

; <label>:506:                                    ; preds = %489
  %507 = load i32, i32* @x.65
  %508 = load i32, i32* @y.66
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %506
  %515 = load i32*, i32** %7, align 8
  %516 = load i32, i32* %11, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds i32, i32* %515, i64 %517
  %519 = load i32, i32* %518, align 4
  %520 = add nsw i32 %519, 1
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %521
  %523 = load i32, i32* %522, align 4
  %524 = load i32, i32* %5, align 4
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = icmp eq i32 %523, %527
  %529 = load i32, i32* @x.65
  %530 = load i32, i32* @y.66
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart290, label %originalBB78alteredBB

originalBBpart290:                                ; preds = %originalBB78
  br i1 %528, label %537, label %540

; <label>:537:                                    ; preds = %originalBBpart290, %474, %426, %378
  %538 = load i32, i32* %10, align 4
  %539 = add nsw i32 %538, 1
  store i32 %539, i32* %10, align 4
  br label %540

; <label>:540:                                    ; preds = %537, %originalBBpart290, %489
  %541 = load i32, i32* @x.65
  %542 = load i32, i32* @y.66
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %540
  %549 = load i32, i32* @x.65
  %550 = load i32, i32* @y.66
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %557

; <label>:557:                                    ; preds = %originalBBpart294
  %558 = load i32, i32* @x.65
  %559 = load i32, i32* @y.66
  %560 = sub i32 %558, 1
  %561 = mul i32 %558, %560
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %559, 10
  %565 = or i1 %563, %564
  br i1 %565, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %originalBB96alteredBB, %557
  %566 = load i32, i32* %11, align 4
  %567 = add nsw i32 %566, 1
  store i32 %567, i32* %11, align 4
  %568 = load i32, i32* @x.65
  %569 = load i32, i32* @y.66
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBBpart2102, label %originalBB96alteredBB

originalBBpart2102:                               ; preds = %originalBB96
  br label %341

; <label>:576:                                    ; preds = %originalBBpart253
  %577 = load i32, i32* %10, align 4
  store i32 %577, i32* %3, align 4
  br label %578

; <label>:578:                                    ; preds = %576, %332
  %579 = load i32, i32* @x.65
  %580 = load i32, i32* @y.66
  %581 = sub i32 %579, 1
  %582 = mul i32 %579, %581
  %583 = urem i32 %582, 2
  %584 = icmp eq i32 %583, 0
  %585 = icmp slt i32 %580, 10
  %586 = or i1 %584, %585
  br i1 %586, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %originalBB104alteredBB, %578
  %587 = load i32, i32* %3, align 4
  %588 = load i32, i32* @x.65
  %589 = load i32, i32* @y.66
  %590 = sub i32 %588, 1
  %591 = mul i32 %588, %590
  %592 = urem i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %589, 10
  %595 = or i1 %593, %594
  br i1 %595, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  ret i32 %587

originalBBalteredBB:                              ; preds = %originalBB, %42
  %596 = load i32, i32* %5, align 4
  %_ = sub i32 0, %596
  %gen = add i32 %_, 20
  %597 = sdiv i32 %596, 20
  %_1 = sub i32 0, %597
  %gen2 = add i32 %_1, 1
  %_3 = sub i32 0, %597
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 0, %597
  %gen6 = add i32 %_5, 1
  %598 = sub nsw i32 %597, 1
  %599 = load i32, i32* %5, align 4
  %_7 = shl i32 %599, 20
  %_8 = sub i32 %599, 20
  %gen9 = mul i32 %_8, 20
  %_10 = sub i32 %599, 20
  %gen11 = mul i32 %_10, 20
  %600 = srem i32 %599, 20
  %_12 = sub i32 %600, 1
  %gen13 = mul i32 %_12, 1
  %601 = sub nsw i32 %600, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1915, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %598, i32 %601)
  br label %originalBB

originalBB14alteredBB:                            ; preds = %originalBB14, %65
  %602 = load i32, i32* %4, align 4
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %603
  %605 = load i8, i8* %604, align 1
  %606 = zext i8 %605 to i32
  %607 = icmp eq i32 %606, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %88
  %608 = load i32, i32* %4, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %609
  %611 = load i8, i8* %610, align 1
  %612 = zext i8 %611 to i32
  %613 = icmp eq i32 %612, 2
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %161
  %614 = load i32, i32* %5, align 4
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %615
  %617 = load i32, i32* %616, align 4
  store i32 %617, i32* %12, align 4
  %618 = load i32, i32* %12, align 4
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %619
  %621 = getelementptr inbounds %struct.string_data, %struct.string_data* %620, i32 0, i32 3
  %622 = load i32, i32* %621, align 4
  store i32 %622, i32* %8, align 4
  %623 = load i32, i32* %4, align 4
  store i32 %623, i32* %13, align 4
  %624 = load i32, i32* %5, align 4
  store i32 %624, i32* %4, align 4
  %625 = load i32, i32* %13, align 4
  store i32 %625, i32* %5, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %217
  %626 = load i32, i32* @liberty_mark, align 4
  %627 = load i32*, i32** %7, align 8
  %628 = load i32, i32* %11, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds i32, i32* %627, i64 %629
  %631 = load i32, i32* %630, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %632
  store i32 %626, i32* %633, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %245
  %634 = load i32, i32* %12, align 4
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %635
  %637 = getelementptr inbounds %struct.string_data, %struct.string_data* %636, i32 0, i32 4
  %638 = getelementptr inbounds [20 x i32], [20 x i32]* %637, i32 0, i32 0
  store i32* %638, i32** %7, align 8
  store i32 0, i32* %11, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %293
  %639 = load i32, i32* %10, align 4
  %_35 = shl i32 %639, 1
  %_36 = sub i32 %639, 1
  %gen37 = mul i32 %_36, 1
  %_38 = shl i32 %639, 1
  %_39 = shl i32 %639, 1
  %_40 = shl i32 %639, 1
  %_41 = sub i32 %639, 1
  %gen42 = mul i32 %_41, 1
  %_43 = shl i32 %639, 1
  %640 = add nsw i32 %639, 1
  store i32 %640, i32* %10, align 4
  br label %originalBB34

originalBB47alteredBB:                            ; preds = %originalBB47, %312
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %341
  %641 = load i32, i32* %11, align 4
  %642 = load i32, i32* %8, align 4
  %643 = icmp slt i32 %641, %642
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %393
  %644 = load i32*, i32** %7, align 8
  %645 = load i32, i32* %11, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds i32, i32* %644, i64 %646
  %648 = load i32, i32* %647, align 4
  %_56 = sub i32 %648, 1
  %gen57 = mul i32 %_56, 1
  %_58 = sub i32 %648, 1
  %gen59 = mul i32 %_58, 1
  %_60 = shl i32 %648, 1
  %649 = sub nsw i32 %648, 1
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %650
  %652 = load i8, i8* %651, align 1
  %653 = zext i8 %652 to i32
  %654 = load i32, i32* %5, align 4
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %655
  %657 = load i8, i8* %656, align 1
  %658 = zext i8 %657 to i32
  %659 = icmp eq i32 %653, %658
  br label %originalBB55

originalBB64alteredBB:                            ; preds = %originalBB64, %441
  %660 = load i32*, i32** %7, align 8
  %661 = load i32, i32* %11, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds i32, i32* %660, i64 %662
  %664 = load i32, i32* %663, align 4
  %_65 = sub i32 %664, 20
  %gen66 = mul i32 %_65, 20
  %_67 = sub i32 %664, 20
  %gen68 = mul i32 %_67, 20
  %_69 = shl i32 %664, 20
  %_70 = shl i32 %664, 20
  %_71 = sub i32 %664, 20
  %gen72 = mul i32 %_71, 20
  %_73 = sub i32 %664, 20
  %gen74 = mul i32 %_73, 20
  %665 = sub nsw i32 %664, 20
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %666
  %668 = load i8, i8* %667, align 1
  %669 = zext i8 %668 to i32
  %670 = load i32, i32* %5, align 4
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %671
  %673 = load i8, i8* %672, align 1
  %674 = zext i8 %673 to i32
  %675 = icmp eq i32 %669, %674
  br label %originalBB64

originalBB78alteredBB:                            ; preds = %originalBB78, %506
  %676 = load i32*, i32** %7, align 8
  %677 = load i32, i32* %11, align 4
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds i32, i32* %676, i64 %678
  %680 = load i32, i32* %679, align 4
  %_79 = sub i32 %680, 1
  %gen80 = mul i32 %_79, 1
  %_81 = shl i32 %680, 1
  %_82 = sub i32 %680, 1
  %gen83 = mul i32 %_82, 1
  %_84 = sub i32 %680, 1
  %gen85 = mul i32 %_84, 1
  %_86 = shl i32 %680, 1
  %_87 = sub i32 0, %680
  %gen88 = add i32 %_87, 1
  %681 = add nsw i32 %680, 1
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %682
  %684 = load i32, i32* %683, align 4
  %685 = load i32, i32* %5, align 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %686
  %688 = load i32, i32* %687, align 4
  %689 = icmp eq i32 %684, %688
  br label %originalBB78

originalBB92alteredBB:                            ; preds = %originalBB92, %540
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %557
  %690 = load i32, i32* %11, align 4
  %_97 = shl i32 %690, 1
  %_98 = shl i32 %690, 1
  %_99 = sub i32 0, %690
  %gen100 = add i32 %_99, 1
  %691 = add nsw i32 %690, 1
  store i32 %691, i32* %11, align 4
  br label %originalBB96

originalBB104alteredBB:                           ; preds = %originalBB104, %578
  %692 = load i32, i32* %3, align 4
  br label %originalBB104
}

; Function Attrs: noinline nounwind uwtable
define i32 @approxlib(i32, i32, i32, i32*) #0 {
  %5 = load i32, i32* @x.67
  %6 = load i32, i32* @y.68
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  store i32 %1, i32* %15, align 4
  store i32 %2, i32* %16, align 4
  store i32* %3, i32** %17, align 8
  store i32 0, i32* %19, align 4
  %29 = load i32, i32* %14, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %33, 0
  %35 = load i32, i32* @x.67
  %36 = load i32, i32* @y.68
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %34, label %43, label %44

; <label>:43:                                     ; preds = %originalBBpart2
  br label %51

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i32, i32* %14, align 4
  %46 = sdiv i32 %45, 20
  %47 = sub nsw i32 %46, 1
  %48 = load i32, i32* %14, align 4
  %49 = srem i32 %48, 20
  %50 = sub nsw i32 %49, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1595, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %47, i32 %50)
  br label %51

; <label>:51:                                     ; preds = %44, %43
  %52 = load i32, i32* %15, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %57, label %54

; <label>:54:                                     ; preds = %51
  %55 = load i32, i32* %15, align 4
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %57, label %58

; <label>:57:                                     ; preds = %54, %51
  br label %81

; <label>:58:                                     ; preds = %54
  %59 = load i32, i32* @x.67
  %60 = load i32, i32* @y.68
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %58
  %67 = load i32, i32* %14, align 4
  %68 = sdiv i32 %67, 20
  %69 = sub nsw i32 %68, 1
  %70 = load i32, i32* %14, align 4
  %71 = srem i32 %70, 20
  %72 = sub nsw i32 %71, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1596, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 %69, i32 %72)
  %73 = load i32, i32* @x.67
  %74 = load i32, i32* @y.68
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart234, label %originalBB1alteredBB

originalBBpart234:                                ; preds = %originalBB1
  br label %81

; <label>:81:                                     ; preds = %originalBBpart234, %57
  %82 = load i32*, i32** %17, align 8
  %83 = icmp ne i32* %82, null
  br i1 %83, label %109, label %84

; <label>:84:                                     ; preds = %81
  %85 = load i32, i32* %14, align 4
  %86 = load i32, i32* %15, align 4
  %87 = call i32 @fastlib(i32 %85, i32 %86, i32 1)
  store i32 %87, i32* %20, align 4
  %88 = load i32, i32* %20, align 4
  %89 = icmp sge i32 %88, 0
  br i1 %89, label %90, label %108

; <label>:90:                                     ; preds = %84
  %91 = load i32, i32* @x.67
  %92 = load i32, i32* @y.68
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %90
  %99 = load i32, i32* %20, align 4
  store i32 %99, i32* %13, align 4
  %100 = load i32, i32* @x.67
  %101 = load i32, i32* @y.68
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %957

; <label>:108:                                    ; preds = %84
  br label %109

; <label>:109:                                    ; preds = %108, %81
  %110 = load i32, i32* %16, align 4
  %111 = icmp sgt i32 %110, 20
  br i1 %111, label %112, label %118

; <label>:112:                                    ; preds = %109
  %113 = load i32, i32* %14, align 4
  %114 = load i32, i32* %15, align 4
  %115 = load i32, i32* %16, align 4
  %116 = load i32*, i32** %17, align 8
  %117 = call i32 @slow_approxlib(i32 %113, i32 %114, i32 %115, i32* %116)
  store i32 %117, i32* %13, align 4
  br label %957

; <label>:118:                                    ; preds = %109
  %119 = load i32, i32* @liberty_mark, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* @liberty_mark, align 4
  %121 = load i32, i32* @liberty_mark, align 4
  %122 = load i32, i32* %14, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %123
  store i32 %121, i32* %124, align 4
  %125 = load i32, i32* %14, align 4
  %126 = add nsw i32 %125, 20
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %196

; <label>:132:                                    ; preds = %118
  %133 = load i32, i32* @x.67
  %134 = load i32, i32* @y.68
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %132
  %141 = load i32, i32* %14, align 4
  %142 = add nsw i32 %141, 20
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = load i32, i32* @liberty_mark, align 4
  %147 = icmp ne i32 %145, %146
  %148 = load i32, i32* @x.67
  %149 = load i32, i32* @y.68
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart245, label %originalBB40alteredBB

originalBBpart245:                                ; preds = %originalBB40
  br i1 %147, label %156, label %196

; <label>:156:                                    ; preds = %originalBBpart245
  %157 = load i32*, i32** %17, align 8
  %158 = icmp ne i32* %157, null
  br i1 %158, label %159, label %182

; <label>:159:                                    ; preds = %156
  %160 = load i32, i32* @x.67
  %161 = load i32, i32* @y.68
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %159
  %168 = load i32, i32* %14, align 4
  %169 = add nsw i32 %168, 20
  %170 = load i32*, i32** %17, align 8
  %171 = load i32, i32* %19, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i32, i32* %170, i64 %172
  store i32 %169, i32* %173, align 4
  %174 = load i32, i32* @x.67
  %175 = load i32, i32* @y.68
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart264, label %originalBB47alteredBB

originalBBpart264:                                ; preds = %originalBB47
  br label %182

; <label>:182:                                    ; preds = %originalBBpart264, %156
  %183 = load i32, i32* %19, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %19, align 4
  %185 = load i32, i32* %19, align 4
  %186 = load i32, i32* %16, align 4
  %187 = icmp sge i32 %185, %186
  br i1 %187, label %188, label %190

; <label>:188:                                    ; preds = %182
  %189 = load i32, i32* %19, align 4
  store i32 %189, i32* %13, align 4
  br label %957

; <label>:190:                                    ; preds = %182
  %191 = load i32, i32* @liberty_mark, align 4
  %192 = load i32, i32* %14, align 4
  %193 = add nsw i32 %192, 20
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %194
  store i32 %191, i32* %195, align 4
  br label %333

; <label>:196:                                    ; preds = %originalBBpart245, %118
  %197 = load i32, i32* %14, align 4
  %198 = add nsw i32 %197, 20
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = load i32, i32* %15, align 4
  %204 = icmp eq i32 %202, %203
  br i1 %204, label %205, label %316

; <label>:205:                                    ; preds = %196
  %206 = load i32, i32* @x.67
  %207 = load i32, i32* @y.68
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %205
  %214 = load i32, i32* %14, align 4
  %215 = add nsw i32 %214, 20
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %216
  %218 = load i32, i32* %217, align 4
  store i32 %218, i32* %21, align 4
  store i32 0, i32* %18, align 4
  %219 = load i32, i32* @x.67
  %220 = load i32, i32* @y.68
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart270, label %originalBB66alteredBB

originalBBpart270:                                ; preds = %originalBB66
  br label %227

; <label>:227:                                    ; preds = %originalBBpart292, %originalBBpart270
  %228 = load i32, i32* %18, align 4
  %229 = load i32, i32* %21, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %230
  %232 = getelementptr inbounds %struct.string_data, %struct.string_data* %231, i32 0, i32 3
  %233 = load i32, i32* %232, align 4
  %234 = icmp slt i32 %228, %233
  br i1 %234, label %235, label %315

; <label>:235:                                    ; preds = %227
  %236 = load i32, i32* %21, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %237
  %239 = getelementptr inbounds %struct.string_data, %struct.string_data* %238, i32 0, i32 4
  %240 = load i32, i32* %18, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20 x i32], [20 x i32]* %239, i64 0, i64 %241
  %243 = load i32, i32* %242, align 4
  store i32 %243, i32* %22, align 4
  %244 = load i32, i32* %22, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %295

; <label>:250:                                    ; preds = %235
  %251 = load i32, i32* %22, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %252
  %254 = load i32, i32* %253, align 4
  %255 = load i32, i32* @liberty_mark, align 4
  %256 = icmp ne i32 %254, %255
  br i1 %256, label %257, label %295

; <label>:257:                                    ; preds = %250
  %258 = load i32*, i32** %17, align 8
  %259 = icmp ne i32* %258, null
  br i1 %259, label %260, label %266

; <label>:260:                                    ; preds = %257
  %261 = load i32, i32* %22, align 4
  %262 = load i32*, i32** %17, align 8
  %263 = load i32, i32* %19, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32* %262, i64 %264
  store i32 %261, i32* %265, align 4
  br label %266

; <label>:266:                                    ; preds = %260, %257
  %267 = load i32, i32* @x.67
  %268 = load i32, i32* @y.68
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %266
  %275 = load i32, i32* %19, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %19, align 4
  %277 = load i32, i32* %19, align 4
  %278 = load i32, i32* %16, align 4
  %279 = icmp sge i32 %277, %278
  %280 = load i32, i32* @x.67
  %281 = load i32, i32* @y.68
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart282, label %originalBB72alteredBB

originalBBpart282:                                ; preds = %originalBB72
  br i1 %279, label %288, label %290

; <label>:288:                                    ; preds = %originalBBpart282
  %289 = load i32, i32* %19, align 4
  store i32 %289, i32* %13, align 4
  br label %957

; <label>:290:                                    ; preds = %originalBBpart282
  %291 = load i32, i32* @liberty_mark, align 4
  %292 = load i32, i32* %22, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %293
  store i32 %291, i32* %294, align 4
  br label %295

; <label>:295:                                    ; preds = %290, %250, %235
  br label %296

; <label>:296:                                    ; preds = %295
  %297 = load i32, i32* @x.67
  %298 = load i32, i32* @y.68
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %originalBB84alteredBB, %296
  %305 = load i32, i32* %18, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %18, align 4
  %307 = load i32, i32* @x.67
  %308 = load i32, i32* @y.68
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBBpart292, label %originalBB84alteredBB

originalBBpart292:                                ; preds = %originalBB84
  br label %227

; <label>:315:                                    ; preds = %227
  br label %316

; <label>:316:                                    ; preds = %315, %196
  %317 = load i32, i32* @x.67
  %318 = load i32, i32* @y.68
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %316
  %325 = load i32, i32* @x.67
  %326 = load i32, i32* @y.68
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %333

; <label>:333:                                    ; preds = %originalBBpart296, %190
  %334 = load i32, i32* @x.67
  %335 = load i32, i32* @y.68
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %333
  %342 = load i32, i32* %14, align 4
  %343 = sub nsw i32 %342, 1
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = icmp eq i32 %347, 0
  %349 = load i32, i32* @x.67
  %350 = load i32, i32* @y.68
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart2104, label %originalBB98alteredBB

originalBBpart2104:                               ; preds = %originalBB98
  br i1 %348, label %357, label %421

; <label>:357:                                    ; preds = %originalBBpart2104
  %358 = load i32, i32* @x.67
  %359 = load i32, i32* @y.68
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %357
  %366 = load i32, i32* %14, align 4
  %367 = sub nsw i32 %366, 1
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %368
  %370 = load i32, i32* %369, align 4
  %371 = load i32, i32* @liberty_mark, align 4
  %372 = icmp ne i32 %370, %371
  %373 = load i32, i32* @x.67
  %374 = load i32, i32* @y.68
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBBpart2123, label %originalBB106alteredBB

originalBBpart2123:                               ; preds = %originalBB106
  br i1 %372, label %381, label %421

; <label>:381:                                    ; preds = %originalBBpart2123
  %382 = load i32*, i32** %17, align 8
  %383 = icmp ne i32* %382, null
  br i1 %383, label %384, label %391

; <label>:384:                                    ; preds = %381
  %385 = load i32, i32* %14, align 4
  %386 = sub nsw i32 %385, 1
  %387 = load i32*, i32** %17, align 8
  %388 = load i32, i32* %19, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds i32, i32* %387, i64 %389
  store i32 %386, i32* %390, align 4
  br label %391

; <label>:391:                                    ; preds = %384, %381
  %392 = load i32, i32* %19, align 4
  %393 = add nsw i32 %392, 1
  store i32 %393, i32* %19, align 4
  %394 = load i32, i32* %19, align 4
  %395 = load i32, i32* %16, align 4
  %396 = icmp sge i32 %394, %395
  br i1 %396, label %397, label %399

; <label>:397:                                    ; preds = %391
  %398 = load i32, i32* %19, align 4
  store i32 %398, i32* %13, align 4
  br label %957

; <label>:399:                                    ; preds = %391
  %400 = load i32, i32* @x.67
  %401 = load i32, i32* @y.68
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %originalBB125alteredBB, %399
  %408 = load i32, i32* @liberty_mark, align 4
  %409 = load i32, i32* %14, align 4
  %410 = sub nsw i32 %409, 1
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %411
  store i32 %408, i32* %412, align 4
  %413 = load i32, i32* @x.67
  %414 = load i32, i32* @y.68
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart2135, label %originalBB125alteredBB

originalBBpart2135:                               ; preds = %originalBB125
  br label %542

; <label>:421:                                    ; preds = %originalBBpart2123, %originalBBpart2104
  %422 = load i32, i32* @x.67
  %423 = load i32, i32* @y.68
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %originalBB137alteredBB, %421
  %430 = load i32, i32* %14, align 4
  %431 = sub nsw i32 %430, 1
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = load i32, i32* %15, align 4
  %437 = icmp eq i32 %435, %436
  %438 = load i32, i32* @x.67
  %439 = load i32, i32* @y.68
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart2141, label %originalBB137alteredBB

originalBBpart2141:                               ; preds = %originalBB137
  br i1 %437, label %446, label %525

; <label>:446:                                    ; preds = %originalBBpart2141
  %447 = load i32, i32* @x.67
  %448 = load i32, i32* @y.68
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %originalBB143alteredBB, %446
  %455 = load i32, i32* %14, align 4
  %456 = sub nsw i32 %455, 1
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %457
  %459 = load i32, i32* %458, align 4
  store i32 %459, i32* %23, align 4
  store i32 0, i32* %18, align 4
  %460 = load i32, i32* @x.67
  %461 = load i32, i32* @y.68
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBBpart2152, label %originalBB143alteredBB

originalBBpart2152:                               ; preds = %originalBB143
  br label %468

; <label>:468:                                    ; preds = %521, %originalBBpart2152
  %469 = load i32, i32* %18, align 4
  %470 = load i32, i32* %23, align 4
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %471
  %473 = getelementptr inbounds %struct.string_data, %struct.string_data* %472, i32 0, i32 3
  %474 = load i32, i32* %473, align 4
  %475 = icmp slt i32 %469, %474
  br i1 %475, label %476, label %524

; <label>:476:                                    ; preds = %468
  %477 = load i32, i32* %23, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %478
  %480 = getelementptr inbounds %struct.string_data, %struct.string_data* %479, i32 0, i32 4
  %481 = load i32, i32* %18, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [20 x i32], [20 x i32]* %480, i64 0, i64 %482
  %484 = load i32, i32* %483, align 4
  store i32 %484, i32* %24, align 4
  %485 = load i32, i32* %24, align 4
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %486
  %488 = load i8, i8* %487, align 1
  %489 = zext i8 %488 to i32
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %520

; <label>:491:                                    ; preds = %476
  %492 = load i32, i32* %24, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = load i32, i32* @liberty_mark, align 4
  %497 = icmp ne i32 %495, %496
  br i1 %497, label %498, label %520

; <label>:498:                                    ; preds = %491
  %499 = load i32*, i32** %17, align 8
  %500 = icmp ne i32* %499, null
  br i1 %500, label %501, label %507

; <label>:501:                                    ; preds = %498
  %502 = load i32, i32* %24, align 4
  %503 = load i32*, i32** %17, align 8
  %504 = load i32, i32* %19, align 4
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds i32, i32* %503, i64 %505
  store i32 %502, i32* %506, align 4
  br label %507

; <label>:507:                                    ; preds = %501, %498
  %508 = load i32, i32* %19, align 4
  %509 = add nsw i32 %508, 1
  store i32 %509, i32* %19, align 4
  %510 = load i32, i32* %19, align 4
  %511 = load i32, i32* %16, align 4
  %512 = icmp sge i32 %510, %511
  br i1 %512, label %513, label %515

; <label>:513:                                    ; preds = %507
  %514 = load i32, i32* %19, align 4
  store i32 %514, i32* %13, align 4
  br label %957

; <label>:515:                                    ; preds = %507
  %516 = load i32, i32* @liberty_mark, align 4
  %517 = load i32, i32* %24, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %518
  store i32 %516, i32* %519, align 4
  br label %520

; <label>:520:                                    ; preds = %515, %491, %476
  br label %521

; <label>:521:                                    ; preds = %520
  %522 = load i32, i32* %18, align 4
  %523 = add nsw i32 %522, 1
  store i32 %523, i32* %18, align 4
  br label %468

; <label>:524:                                    ; preds = %468
  br label %525

; <label>:525:                                    ; preds = %524, %originalBBpart2141
  %526 = load i32, i32* @x.67
  %527 = load i32, i32* @y.68
  %528 = sub i32 %526, 1
  %529 = mul i32 %526, %528
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %531, %532
  br i1 %533, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %525
  %534 = load i32, i32* @x.67
  %535 = load i32, i32* @y.68
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %542

; <label>:542:                                    ; preds = %originalBBpart2156, %originalBBpart2135
  %543 = load i32, i32* %14, align 4
  %544 = sub nsw i32 %543, 20
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %545
  %547 = load i8, i8* %546, align 1
  %548 = zext i8 %547 to i32
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %630

; <label>:550:                                    ; preds = %542
  %551 = load i32, i32* %14, align 4
  %552 = sub nsw i32 %551, 20
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = load i32, i32* @liberty_mark, align 4
  %557 = icmp ne i32 %555, %556
  br i1 %557, label %558, label %630

; <label>:558:                                    ; preds = %550
  %559 = load i32*, i32** %17, align 8
  %560 = icmp ne i32* %559, null
  br i1 %560, label %561, label %584

; <label>:561:                                    ; preds = %558
  %562 = load i32, i32* @x.67
  %563 = load i32, i32* @y.68
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %561
  %570 = load i32, i32* %14, align 4
  %571 = sub nsw i32 %570, 20
  %572 = load i32*, i32** %17, align 8
  %573 = load i32, i32* %19, align 4
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  store i32 %571, i32* %575, align 4
  %576 = load i32, i32* @x.67
  %577 = load i32, i32* @y.68
  %578 = sub i32 %576, 1
  %579 = mul i32 %576, %578
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %581, %582
  br i1 %583, label %originalBBpart2169, label %originalBB158alteredBB

originalBBpart2169:                               ; preds = %originalBB158
  br label %584

; <label>:584:                                    ; preds = %originalBBpart2169, %558
  %585 = load i32, i32* @x.67
  %586 = load i32, i32* @y.68
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %584
  %593 = load i32, i32* %19, align 4
  %594 = add nsw i32 %593, 1
  store i32 %594, i32* %19, align 4
  %595 = load i32, i32* %19, align 4
  %596 = load i32, i32* %16, align 4
  %597 = icmp sge i32 %595, %596
  %598 = load i32, i32* @x.67
  %599 = load i32, i32* @y.68
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBBpart2181, label %originalBB171alteredBB

originalBBpart2181:                               ; preds = %originalBB171
  br i1 %597, label %606, label %608

; <label>:606:                                    ; preds = %originalBBpart2181
  %607 = load i32, i32* %19, align 4
  store i32 %607, i32* %13, align 4
  br label %957

; <label>:608:                                    ; preds = %originalBBpart2181
  %609 = load i32, i32* @x.67
  %610 = load i32, i32* @y.68
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %originalBB183alteredBB, %608
  %617 = load i32, i32* @liberty_mark, align 4
  %618 = load i32, i32* %14, align 4
  %619 = sub nsw i32 %618, 20
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %620
  store i32 %617, i32* %621, align 4
  %622 = load i32, i32* @x.67
  %623 = load i32, i32* @y.68
  %624 = sub i32 %622, 1
  %625 = mul i32 %622, %624
  %626 = urem i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = icmp slt i32 %623, 10
  %629 = or i1 %627, %628
  br i1 %629, label %originalBBpart2191, label %originalBB183alteredBB

originalBBpart2191:                               ; preds = %originalBB183
  br label %751

; <label>:630:                                    ; preds = %550, %542
  %631 = load i32, i32* %14, align 4
  %632 = sub nsw i32 %631, 20
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %633
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i32
  %637 = load i32, i32* %15, align 4
  %638 = icmp eq i32 %636, %637
  br i1 %638, label %639, label %750

; <label>:639:                                    ; preds = %630
  %640 = load i32, i32* %14, align 4
  %641 = sub nsw i32 %640, 20
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %642
  %644 = load i32, i32* %643, align 4
  store i32 %644, i32* %25, align 4
  store i32 0, i32* %18, align 4
  br label %645

; <label>:645:                                    ; preds = %746, %639
  %646 = load i32, i32* @x.67
  %647 = load i32, i32* @y.68
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %originalBB193alteredBB, %645
  %654 = load i32, i32* %18, align 4
  %655 = load i32, i32* %25, align 4
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %656
  %658 = getelementptr inbounds %struct.string_data, %struct.string_data* %657, i32 0, i32 3
  %659 = load i32, i32* %658, align 4
  %660 = icmp slt i32 %654, %659
  %661 = load i32, i32* @x.67
  %662 = load i32, i32* @y.68
  %663 = sub i32 %661, 1
  %664 = mul i32 %661, %663
  %665 = urem i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %662, 10
  %668 = or i1 %666, %667
  br i1 %668, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br i1 %660, label %669, label %749

; <label>:669:                                    ; preds = %originalBBpart2195
  %670 = load i32, i32* %25, align 4
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %671
  %673 = getelementptr inbounds %struct.string_data, %struct.string_data* %672, i32 0, i32 4
  %674 = load i32, i32* %18, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds [20 x i32], [20 x i32]* %673, i64 0, i64 %675
  %677 = load i32, i32* %676, align 4
  store i32 %677, i32* %26, align 4
  %678 = load i32, i32* %26, align 4
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %679
  %681 = load i8, i8* %680, align 1
  %682 = zext i8 %681 to i32
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %684, label %745

; <label>:684:                                    ; preds = %669
  %685 = load i32, i32* @x.67
  %686 = load i32, i32* @y.68
  %687 = sub i32 %685, 1
  %688 = mul i32 %685, %687
  %689 = urem i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = icmp slt i32 %686, 10
  %692 = or i1 %690, %691
  br i1 %692, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %originalBB197alteredBB, %684
  %693 = load i32, i32* %26, align 4
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = load i32, i32* @liberty_mark, align 4
  %698 = icmp ne i32 %696, %697
  %699 = load i32, i32* @x.67
  %700 = load i32, i32* @y.68
  %701 = sub i32 %699, 1
  %702 = mul i32 %699, %701
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %704, %705
  br i1 %706, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br i1 %698, label %707, label %745

; <label>:707:                                    ; preds = %originalBBpart2199
  %708 = load i32*, i32** %17, align 8
  %709 = icmp ne i32* %708, null
  br i1 %709, label %710, label %732

; <label>:710:                                    ; preds = %707
  %711 = load i32, i32* @x.67
  %712 = load i32, i32* @y.68
  %713 = sub i32 %711, 1
  %714 = mul i32 %711, %713
  %715 = urem i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = icmp slt i32 %712, 10
  %718 = or i1 %716, %717
  br i1 %718, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %originalBB201alteredBB, %710
  %719 = load i32, i32* %26, align 4
  %720 = load i32*, i32** %17, align 8
  %721 = load i32, i32* %19, align 4
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds i32, i32* %720, i64 %722
  store i32 %719, i32* %723, align 4
  %724 = load i32, i32* @x.67
  %725 = load i32, i32* @y.68
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %732

; <label>:732:                                    ; preds = %originalBBpart2203, %707
  %733 = load i32, i32* %19, align 4
  %734 = add nsw i32 %733, 1
  store i32 %734, i32* %19, align 4
  %735 = load i32, i32* %19, align 4
  %736 = load i32, i32* %16, align 4
  %737 = icmp sge i32 %735, %736
  br i1 %737, label %738, label %740

; <label>:738:                                    ; preds = %732
  %739 = load i32, i32* %19, align 4
  store i32 %739, i32* %13, align 4
  br label %957

; <label>:740:                                    ; preds = %732
  %741 = load i32, i32* @liberty_mark, align 4
  %742 = load i32, i32* %26, align 4
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %743
  store i32 %741, i32* %744, align 4
  br label %745

; <label>:745:                                    ; preds = %740, %originalBBpart2199, %669
  br label %746

; <label>:746:                                    ; preds = %745
  %747 = load i32, i32* %18, align 4
  %748 = add nsw i32 %747, 1
  store i32 %748, i32* %18, align 4
  br label %645

; <label>:749:                                    ; preds = %originalBBpart2195
  br label %750

; <label>:750:                                    ; preds = %749, %630
  br label %751

; <label>:751:                                    ; preds = %750, %originalBBpart2191
  %752 = load i32, i32* @x.67
  %753 = load i32, i32* @y.68
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %originalBB205alteredBB, %751
  %760 = load i32, i32* %14, align 4
  %761 = add nsw i32 %760, 1
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %762
  %764 = load i8, i8* %763, align 1
  %765 = zext i8 %764 to i32
  %766 = icmp eq i32 %765, 0
  %767 = load i32, i32* @x.67
  %768 = load i32, i32* @y.68
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBBpart2211, label %originalBB205alteredBB

originalBBpart2211:                               ; preds = %originalBB205
  br i1 %766, label %775, label %818

; <label>:775:                                    ; preds = %originalBBpart2211
  %776 = load i32, i32* %14, align 4
  %777 = add nsw i32 %776, 1
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %778
  %780 = load i32, i32* %779, align 4
  %781 = load i32, i32* @liberty_mark, align 4
  %782 = icmp ne i32 %780, %781
  br i1 %782, label %783, label %818

; <label>:783:                                    ; preds = %775
  %784 = load i32*, i32** %17, align 8
  %785 = icmp ne i32* %784, null
  br i1 %785, label %786, label %793

; <label>:786:                                    ; preds = %783
  %787 = load i32, i32* %14, align 4
  %788 = add nsw i32 %787, 1
  %789 = load i32*, i32** %17, align 8
  %790 = load i32, i32* %19, align 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds i32, i32* %789, i64 %791
  store i32 %788, i32* %792, align 4
  br label %793

; <label>:793:                                    ; preds = %786, %783
  %794 = load i32, i32* %19, align 4
  %795 = add nsw i32 %794, 1
  store i32 %795, i32* %19, align 4
  %796 = load i32, i32* %19, align 4
  %797 = load i32, i32* %16, align 4
  %798 = icmp sge i32 %796, %797
  br i1 %798, label %799, label %801

; <label>:799:                                    ; preds = %793
  %800 = load i32, i32* %19, align 4
  store i32 %800, i32* %13, align 4
  br label %957

; <label>:801:                                    ; preds = %793
  %802 = load i32, i32* @x.67
  %803 = load i32, i32* @y.68
  %804 = sub i32 %802, 1
  %805 = mul i32 %802, %804
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %803, 10
  %809 = or i1 %807, %808
  br i1 %809, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %originalBB213alteredBB, %801
  %810 = load i32, i32* @x.67
  %811 = load i32, i32* @y.68
  %812 = sub i32 %810, 1
  %813 = mul i32 %810, %812
  %814 = urem i32 %813, 2
  %815 = icmp eq i32 %814, 0
  %816 = icmp slt i32 %811, 10
  %817 = or i1 %815, %816
  br i1 %817, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br label %939

; <label>:818:                                    ; preds = %775, %originalBBpart2211
  %819 = load i32, i32* @x.67
  %820 = load i32, i32* @y.68
  %821 = sub i32 %819, 1
  %822 = mul i32 %819, %821
  %823 = urem i32 %822, 2
  %824 = icmp eq i32 %823, 0
  %825 = icmp slt i32 %820, 10
  %826 = or i1 %824, %825
  br i1 %826, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %originalBB217alteredBB, %818
  %827 = load i32, i32* %14, align 4
  %828 = add nsw i32 %827, 1
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %829
  %831 = load i8, i8* %830, align 1
  %832 = zext i8 %831 to i32
  %833 = load i32, i32* %15, align 4
  %834 = icmp eq i32 %832, %833
  %835 = load i32, i32* @x.67
  %836 = load i32, i32* @y.68
  %837 = sub i32 %835, 1
  %838 = mul i32 %835, %837
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %836, 10
  %842 = or i1 %840, %841
  br i1 %842, label %originalBBpart2228, label %originalBB217alteredBB

originalBBpart2228:                               ; preds = %originalBB217
  br i1 %834, label %843, label %938

; <label>:843:                                    ; preds = %originalBBpart2228
  %844 = load i32, i32* %14, align 4
  %845 = add nsw i32 %844, 1
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %846
  %848 = load i32, i32* %847, align 4
  store i32 %848, i32* %27, align 4
  store i32 0, i32* %18, align 4
  br label %849

; <label>:849:                                    ; preds = %934, %843
  %850 = load i32, i32* %18, align 4
  %851 = load i32, i32* %27, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %852
  %854 = getelementptr inbounds %struct.string_data, %struct.string_data* %853, i32 0, i32 3
  %855 = load i32, i32* %854, align 4
  %856 = icmp slt i32 %850, %855
  br i1 %856, label %857, label %937

; <label>:857:                                    ; preds = %849
  %858 = load i32, i32* %27, align 4
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %859
  %861 = getelementptr inbounds %struct.string_data, %struct.string_data* %860, i32 0, i32 4
  %862 = load i32, i32* %18, align 4
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds [20 x i32], [20 x i32]* %861, i64 0, i64 %863
  %865 = load i32, i32* %864, align 4
  store i32 %865, i32* %28, align 4
  %866 = load i32, i32* %28, align 4
  %867 = sext i32 %866 to i64
  %868 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %867
  %869 = load i8, i8* %868, align 1
  %870 = zext i8 %869 to i32
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %917

; <label>:872:                                    ; preds = %857
  %873 = load i32, i32* %28, align 4
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %874
  %876 = load i32, i32* %875, align 4
  %877 = load i32, i32* @liberty_mark, align 4
  %878 = icmp ne i32 %876, %877
  br i1 %878, label %879, label %917

; <label>:879:                                    ; preds = %872
  %880 = load i32, i32* @x.67
  %881 = load i32, i32* @y.68
  %882 = sub i32 %880, 1
  %883 = mul i32 %880, %882
  %884 = urem i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = icmp slt i32 %881, 10
  %887 = or i1 %885, %886
  br i1 %887, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %originalBB230alteredBB, %879
  %888 = load i32*, i32** %17, align 8
  %889 = icmp ne i32* %888, null
  %890 = load i32, i32* @x.67
  %891 = load i32, i32* @y.68
  %892 = sub i32 %890, 1
  %893 = mul i32 %890, %892
  %894 = urem i32 %893, 2
  %895 = icmp eq i32 %894, 0
  %896 = icmp slt i32 %891, 10
  %897 = or i1 %895, %896
  br i1 %897, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br i1 %889, label %898, label %904

; <label>:898:                                    ; preds = %originalBBpart2232
  %899 = load i32, i32* %28, align 4
  %900 = load i32*, i32** %17, align 8
  %901 = load i32, i32* %19, align 4
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds i32, i32* %900, i64 %902
  store i32 %899, i32* %903, align 4
  br label %904

; <label>:904:                                    ; preds = %898, %originalBBpart2232
  %905 = load i32, i32* %19, align 4
  %906 = add nsw i32 %905, 1
  store i32 %906, i32* %19, align 4
  %907 = load i32, i32* %19, align 4
  %908 = load i32, i32* %16, align 4
  %909 = icmp sge i32 %907, %908
  br i1 %909, label %910, label %912

; <label>:910:                                    ; preds = %904
  %911 = load i32, i32* %19, align 4
  store i32 %911, i32* %13, align 4
  br label %957

; <label>:912:                                    ; preds = %904
  %913 = load i32, i32* @liberty_mark, align 4
  %914 = load i32, i32* %28, align 4
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %915
  store i32 %913, i32* %916, align 4
  br label %917

; <label>:917:                                    ; preds = %912, %872, %857
  %918 = load i32, i32* @x.67
  %919 = load i32, i32* @y.68
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %originalBB234alteredBB, %917
  %926 = load i32, i32* @x.67
  %927 = load i32, i32* @y.68
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBBpart2237, label %originalBB234alteredBB

originalBBpart2237:                               ; preds = %originalBB234
  br label %934

; <label>:934:                                    ; preds = %originalBBpart2237
  %935 = load i32, i32* %18, align 4
  %936 = add nsw i32 %935, 1
  store i32 %936, i32* %18, align 4
  br label %849

; <label>:937:                                    ; preds = %849
  br label %938

; <label>:938:                                    ; preds = %937, %originalBBpart2228
  br label %939

; <label>:939:                                    ; preds = %938, %originalBBpart2215
  %940 = load i32, i32* @x.67
  %941 = load i32, i32* @y.68
  %942 = sub i32 %940, 1
  %943 = mul i32 %940, %942
  %944 = urem i32 %943, 2
  %945 = icmp eq i32 %944, 0
  %946 = icmp slt i32 %941, 10
  %947 = or i1 %945, %946
  br i1 %947, label %originalBB239, label %originalBB239alteredBB

originalBB239:                                    ; preds = %originalBB239alteredBB, %939
  %948 = load i32, i32* %19, align 4
  store i32 %948, i32* %13, align 4
  %949 = load i32, i32* @x.67
  %950 = load i32, i32* @y.68
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBBpart2241, label %originalBB239alteredBB

originalBBpart2241:                               ; preds = %originalBB239
  br label %957

; <label>:957:                                    ; preds = %originalBBpart2241, %910, %799, %738, %606, %513, %397, %288, %188, %112, %originalBBpart238
  %958 = load i32, i32* %13, align 4
  ret i32 %958

originalBBalteredBB:                              ; preds = %originalBB, %4
  %959 = alloca i32, align 4
  %960 = alloca i32, align 4
  %961 = alloca i32, align 4
  %962 = alloca i32, align 4
  %963 = alloca i32*, align 8
  %964 = alloca i32, align 4
  %965 = alloca i32, align 4
  %966 = alloca i32, align 4
  %967 = alloca i32, align 4
  %968 = alloca i32, align 4
  %969 = alloca i32, align 4
  %970 = alloca i32, align 4
  %971 = alloca i32, align 4
  %972 = alloca i32, align 4
  %973 = alloca i32, align 4
  %974 = alloca i32, align 4
  store i32 %0, i32* %960, align 4
  store i32 %1, i32* %961, align 4
  store i32 %2, i32* %962, align 4
  store i32* %3, i32** %963, align 8
  store i32 0, i32* %965, align 4
  %975 = load i32, i32* %960, align 4
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %976
  %978 = load i8, i8* %977, align 1
  %979 = zext i8 %978 to i32
  %980 = icmp eq i32 %979, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  %981 = load i32, i32* %14, align 4
  %_ = shl i32 %981, 20
  %_2 = shl i32 %981, 20
  %_3 = shl i32 %981, 20
  %_4 = shl i32 %981, 20
  %_5 = sub i32 %981, 20
  %gen = mul i32 %_5, 20
  %_6 = shl i32 %981, 20
  %_7 = shl i32 %981, 20
  %_8 = sub i32 %981, 20
  %gen9 = mul i32 %_8, 20
  %_10 = sub i32 %981, 20
  %gen11 = mul i32 %_10, 20
  %982 = sdiv i32 %981, 20
  %_12 = sub i32 %982, 1
  %gen13 = mul i32 %_12, 1
  %_14 = sub i32 %982, 1
  %gen15 = mul i32 %_14, 1
  %_16 = shl i32 %982, 1
  %_17 = shl i32 %982, 1
  %_18 = sub i32 0, %982
  %gen19 = add i32 %_18, 1
  %983 = sub nsw i32 %982, 1
  %984 = load i32, i32* %14, align 4
  %_20 = sub i32 %984, 20
  %gen21 = mul i32 %_20, 20
  %_22 = sub i32 %984, 20
  %gen23 = mul i32 %_22, 20
  %_24 = sub i32 0, %984
  %gen25 = add i32 %_24, 20
  %_26 = sub i32 %984, 20
  %gen27 = mul i32 %_26, 20
  %_28 = shl i32 %984, 20
  %_29 = sub i32 0, %984
  %gen30 = add i32 %_29, 20
  %985 = srem i32 %984, 20
  %_31 = sub i32 %985, 1
  %gen32 = mul i32 %_31, 1
  %986 = sub nsw i32 %985, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1596, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 %983, i32 %986)
  br label %originalBB1

originalBB36alteredBB:                            ; preds = %originalBB36, %90
  %987 = load i32, i32* %20, align 4
  store i32 %987, i32* %13, align 4
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %132
  %988 = load i32, i32* %14, align 4
  %_41 = shl i32 %988, 20
  %_42 = sub i32 %988, 20
  %gen43 = mul i32 %_42, 20
  %989 = add nsw i32 %988, 20
  %990 = sext i32 %989 to i64
  %991 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %990
  %992 = load i32, i32* %991, align 4
  %993 = load i32, i32* @liberty_mark, align 4
  %994 = icmp ne i32 %992, %993
  br label %originalBB40

originalBB47alteredBB:                            ; preds = %originalBB47, %159
  %995 = load i32, i32* %14, align 4
  %_48 = shl i32 %995, 20
  %_49 = sub i32 0, %995
  %gen50 = add i32 %_49, 20
  %_51 = sub i32 0, %995
  %gen52 = add i32 %_51, 20
  %_53 = sub i32 %995, 20
  %gen54 = mul i32 %_53, 20
  %_55 = sub i32 0, %995
  %gen56 = add i32 %_55, 20
  %_57 = sub i32 %995, 20
  %gen58 = mul i32 %_57, 20
  %_59 = sub i32 %995, 20
  %gen60 = mul i32 %_59, 20
  %_61 = sub i32 0, %995
  %gen62 = add i32 %_61, 20
  %996 = add nsw i32 %995, 20
  %997 = load i32*, i32** %17, align 8
  %998 = load i32, i32* %19, align 4
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds i32, i32* %997, i64 %999
  store i32 %996, i32* %1000, align 4
  br label %originalBB47

originalBB66alteredBB:                            ; preds = %originalBB66, %205
  %1001 = load i32, i32* %14, align 4
  %_67 = shl i32 %1001, 20
  %_68 = shl i32 %1001, 20
  %1002 = add nsw i32 %1001, 20
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1003
  %1005 = load i32, i32* %1004, align 4
  store i32 %1005, i32* %21, align 4
  store i32 0, i32* %18, align 4
  br label %originalBB66

originalBB72alteredBB:                            ; preds = %originalBB72, %266
  %1006 = load i32, i32* %19, align 4
  %_73 = shl i32 %1006, 1
  %_74 = sub i32 0, %1006
  %gen75 = add i32 %_74, 1
  %_76 = shl i32 %1006, 1
  %_77 = shl i32 %1006, 1
  %_78 = sub i32 0, %1006
  %gen79 = add i32 %_78, 1
  %_80 = shl i32 %1006, 1
  %1007 = add nsw i32 %1006, 1
  store i32 %1007, i32* %19, align 4
  %1008 = load i32, i32* %19, align 4
  %1009 = load i32, i32* %16, align 4
  %1010 = icmp sge i32 %1008, %1009
  br label %originalBB72

originalBB84alteredBB:                            ; preds = %originalBB84, %296
  %1011 = load i32, i32* %18, align 4
  %_85 = sub i32 %1011, 1
  %gen86 = mul i32 %_85, 1
  %_87 = sub i32 %1011, 1
  %gen88 = mul i32 %_87, 1
  %_89 = shl i32 %1011, 1
  %_90 = shl i32 %1011, 1
  %1012 = add nsw i32 %1011, 1
  store i32 %1012, i32* %18, align 4
  br label %originalBB84

originalBB94alteredBB:                            ; preds = %originalBB94, %316
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %333
  %1013 = load i32, i32* %14, align 4
  %_99 = sub i32 0, %1013
  %gen100 = add i32 %_99, 1
  %_101 = shl i32 %1013, 1
  %_102 = shl i32 %1013, 1
  %1014 = sub nsw i32 %1013, 1
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1015
  %1017 = load i8, i8* %1016, align 1
  %1018 = zext i8 %1017 to i32
  %1019 = icmp eq i32 %1018, 0
  br label %originalBB98

originalBB106alteredBB:                           ; preds = %originalBB106, %357
  %1020 = load i32, i32* %14, align 4
  %_107 = sub i32 0, %1020
  %gen108 = add i32 %_107, 1
  %_109 = sub i32 0, %1020
  %gen110 = add i32 %_109, 1
  %_111 = shl i32 %1020, 1
  %_112 = sub i32 0, %1020
  %gen113 = add i32 %_112, 1
  %_114 = sub i32 0, %1020
  %gen115 = add i32 %_114, 1
  %_116 = sub i32 %1020, 1
  %gen117 = mul i32 %_116, 1
  %_118 = sub i32 0, %1020
  %gen119 = add i32 %_118, 1
  %_120 = sub i32 %1020, 1
  %gen121 = mul i32 %_120, 1
  %1021 = sub nsw i32 %1020, 1
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1022
  %1024 = load i32, i32* %1023, align 4
  %1025 = load i32, i32* @liberty_mark, align 4
  %1026 = icmp ne i32 %1024, %1025
  br label %originalBB106

originalBB125alteredBB:                           ; preds = %originalBB125, %399
  %1027 = load i32, i32* @liberty_mark, align 4
  %1028 = load i32, i32* %14, align 4
  %_126 = shl i32 %1028, 1
  %_127 = sub i32 %1028, 1
  %gen128 = mul i32 %_127, 1
  %_129 = shl i32 %1028, 1
  %_130 = sub i32 %1028, 1
  %gen131 = mul i32 %_130, 1
  %_132 = sub i32 0, %1028
  %gen133 = add i32 %_132, 1
  %1029 = sub nsw i32 %1028, 1
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1030
  store i32 %1027, i32* %1031, align 4
  br label %originalBB125

originalBB137alteredBB:                           ; preds = %originalBB137, %421
  %1032 = load i32, i32* %14, align 4
  %_138 = sub i32 %1032, 1
  %gen139 = mul i32 %_138, 1
  %1033 = sub nsw i32 %1032, 1
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1034
  %1036 = load i8, i8* %1035, align 1
  %1037 = zext i8 %1036 to i32
  %1038 = load i32, i32* %15, align 4
  %1039 = icmp eq i32 %1037, %1038
  br label %originalBB137

originalBB143alteredBB:                           ; preds = %originalBB143, %446
  %1040 = load i32, i32* %14, align 4
  %_144 = sub i32 0, %1040
  %gen145 = add i32 %_144, 1
  %_146 = sub i32 0, %1040
  %gen147 = add i32 %_146, 1
  %_148 = shl i32 %1040, 1
  %_149 = sub i32 0, %1040
  %gen150 = add i32 %_149, 1
  %1041 = sub nsw i32 %1040, 1
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1042
  %1044 = load i32, i32* %1043, align 4
  store i32 %1044, i32* %23, align 4
  store i32 0, i32* %18, align 4
  br label %originalBB143

originalBB154alteredBB:                           ; preds = %originalBB154, %525
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %561
  %1045 = load i32, i32* %14, align 4
  %_159 = sub i32 %1045, 20
  %gen160 = mul i32 %_159, 20
  %_161 = shl i32 %1045, 20
  %_162 = sub i32 0, %1045
  %gen163 = add i32 %_162, 20
  %_164 = shl i32 %1045, 20
  %_165 = sub i32 %1045, 20
  %gen166 = mul i32 %_165, 20
  %_167 = shl i32 %1045, 20
  %1046 = sub nsw i32 %1045, 20
  %1047 = load i32*, i32** %17, align 8
  %1048 = load i32, i32* %19, align 4
  %1049 = sext i32 %1048 to i64
  %1050 = getelementptr inbounds i32, i32* %1047, i64 %1049
  store i32 %1046, i32* %1050, align 4
  br label %originalBB158

originalBB171alteredBB:                           ; preds = %originalBB171, %584
  %1051 = load i32, i32* %19, align 4
  %_172 = sub i32 0, %1051
  %gen173 = add i32 %_172, 1
  %_174 = sub i32 %1051, 1
  %gen175 = mul i32 %_174, 1
  %_176 = shl i32 %1051, 1
  %_177 = sub i32 %1051, 1
  %gen178 = mul i32 %_177, 1
  %_179 = shl i32 %1051, 1
  %1052 = add nsw i32 %1051, 1
  store i32 %1052, i32* %19, align 4
  %1053 = load i32, i32* %19, align 4
  %1054 = load i32, i32* %16, align 4
  %1055 = icmp sge i32 %1053, %1054
  br label %originalBB171

originalBB183alteredBB:                           ; preds = %originalBB183, %608
  %1056 = load i32, i32* @liberty_mark, align 4
  %1057 = load i32, i32* %14, align 4
  %_184 = sub i32 %1057, 20
  %gen185 = mul i32 %_184, 20
  %_186 = sub i32 %1057, 20
  %gen187 = mul i32 %_186, 20
  %_188 = sub i32 %1057, 20
  %gen189 = mul i32 %_188, 20
  %1058 = sub nsw i32 %1057, 20
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1059
  store i32 %1056, i32* %1060, align 4
  br label %originalBB183

originalBB193alteredBB:                           ; preds = %originalBB193, %645
  %1061 = load i32, i32* %18, align 4
  %1062 = load i32, i32* %25, align 4
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1063
  %1065 = getelementptr inbounds %struct.string_data, %struct.string_data* %1064, i32 0, i32 3
  %1066 = load i32, i32* %1065, align 4
  %1067 = icmp slt i32 %1061, %1066
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %684
  %1068 = load i32, i32* %26, align 4
  %1069 = sext i32 %1068 to i64
  %1070 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1069
  %1071 = load i32, i32* %1070, align 4
  %1072 = load i32, i32* @liberty_mark, align 4
  %1073 = icmp ne i32 %1071, %1072
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %710
  %1074 = load i32, i32* %26, align 4
  %1075 = load i32*, i32** %17, align 8
  %1076 = load i32, i32* %19, align 4
  %1077 = sext i32 %1076 to i64
  %1078 = getelementptr inbounds i32, i32* %1075, i64 %1077
  store i32 %1074, i32* %1078, align 4
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %751
  %1079 = load i32, i32* %14, align 4
  %_206 = shl i32 %1079, 1
  %_207 = shl i32 %1079, 1
  %_208 = sub i32 0, %1079
  %gen209 = add i32 %_208, 1
  %1080 = add nsw i32 %1079, 1
  %1081 = sext i32 %1080 to i64
  %1082 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1081
  %1083 = load i8, i8* %1082, align 1
  %1084 = zext i8 %1083 to i32
  %1085 = icmp eq i32 %1084, 0
  br label %originalBB205

originalBB213alteredBB:                           ; preds = %originalBB213, %801
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %818
  %1086 = load i32, i32* %14, align 4
  %_218 = sub i32 %1086, 1
  %gen219 = mul i32 %_218, 1
  %_220 = sub i32 0, %1086
  %gen221 = add i32 %_220, 1
  %_222 = shl i32 %1086, 1
  %_223 = sub i32 %1086, 1
  %gen224 = mul i32 %_223, 1
  %_225 = sub i32 0, %1086
  %gen226 = add i32 %_225, 1
  %1087 = add nsw i32 %1086, 1
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1088
  %1090 = load i8, i8* %1089, align 1
  %1091 = zext i8 %1090 to i32
  %1092 = load i32, i32* %15, align 4
  %1093 = icmp eq i32 %1091, %1092
  br label %originalBB217

originalBB230alteredBB:                           ; preds = %originalBB230, %879
  %1094 = load i32*, i32** %17, align 8
  %1095 = icmp ne i32* %1094, null
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %917
  br label %originalBB234

originalBB239alteredBB:                           ; preds = %originalBB239, %939
  %1096 = load i32, i32* %19, align 4
  store i32 %1096, i32* %13, align 4
  br label %originalBB239
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @slow_approxlib(i32, i32, i32, i32*) #0 {
  %5 = load i32, i32* @x.69
  %6 = load i32, i32* @y.70
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  store i32 %1, i32* %15, align 4
  store i32 %2, i32* %16, align 4
  store i32* %3, i32** %17, align 8
  store i32 0, i32* %18, align 4
  %25 = load i32, i32* @liberty_mark, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* @liberty_mark, align 4
  %27 = load i32, i32* @liberty_mark, align 4
  %28 = load i32, i32* %14, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %29
  store i32 %27, i32* %30, align 4
  %31 = load i32, i32* @string_mark, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* @string_mark, align 4
  store i32 0, i32* %19, align 4
  %33 = load i32, i32* @x.69
  %34 = load i32, i32* @y.70
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41

; <label>:41:                                     ; preds = %290, %originalBBpart2
  %42 = load i32, i32* %19, align 4
  %43 = icmp slt i32 %42, 4
  br i1 %43, label %44, label %293

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* %19, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %20, align 4
  %49 = load i32, i32* %14, align 4
  %50 = load i32, i32* %20, align 4
  %51 = add nsw i32 %49, %50
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %92

; <label>:57:                                     ; preds = %44
  %58 = load i32, i32* %14, align 4
  %59 = load i32, i32* %20, align 4
  %60 = add nsw i32 %58, %59
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* @liberty_mark, align 4
  %65 = icmp ne i32 %63, %64
  br i1 %65, label %66, label %92

; <label>:66:                                     ; preds = %57
  %67 = load i32*, i32** %17, align 8
  %68 = icmp ne i32* %67, null
  br i1 %68, label %69, label %77

; <label>:69:                                     ; preds = %66
  %70 = load i32, i32* %14, align 4
  %71 = load i32, i32* %20, align 4
  %72 = add nsw i32 %70, %71
  %73 = load i32*, i32** %17, align 8
  %74 = load i32, i32* %18, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  store i32 %72, i32* %76, align 4
  br label %77

; <label>:77:                                     ; preds = %69, %66
  %78 = load i32, i32* %18, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %18, align 4
  %80 = load i32, i32* %18, align 4
  %81 = load i32, i32* %16, align 4
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %83, label %85

; <label>:83:                                     ; preds = %77
  %84 = load i32, i32* %18, align 4
  store i32 %84, i32* %13, align 4
  br label %295

; <label>:85:                                     ; preds = %77
  %86 = load i32, i32* @liberty_mark, align 4
  %87 = load i32, i32* %14, align 4
  %88 = load i32, i32* %20, align 4
  %89 = add nsw i32 %87, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %90
  store i32 %86, i32* %91, align 4
  br label %289

; <label>:92:                                     ; preds = %57, %44
  %93 = load i32, i32* %14, align 4
  %94 = load i32, i32* %20, align 4
  %95 = add nsw i32 %93, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = load i32, i32* %15, align 4
  %101 = icmp eq i32 %99, %100
  br i1 %101, label %102, label %272

; <label>:102:                                    ; preds = %92
  %103 = load i32, i32* %14, align 4
  %104 = load i32, i32* %20, align 4
  %105 = add nsw i32 %103, %104
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %109
  %111 = getelementptr inbounds %struct.string_data, %struct.string_data* %110, i32 0, i32 7
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* @string_mark, align 4
  %114 = icmp ne i32 %112, %113
  br i1 %114, label %115, label %272

; <label>:115:                                    ; preds = %102
  %116 = load i32, i32* @x.69
  %117 = load i32, i32* @y.70
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB2, label %originalBB2alteredBB

originalBB2:                                      ; preds = %originalBB2alteredBB, %115
  %124 = load i32, i32* %14, align 4
  %125 = load i32, i32* %20, align 4
  %126 = add nsw i32 %124, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %127
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %21, align 4
  %130 = load i32, i32* %21, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %131
  %133 = getelementptr inbounds %struct.string_data, %struct.string_data* %132, i32 0, i32 2
  %134 = load i32, i32* %133, align 8
  store i32 %134, i32* %22, align 4
  %135 = load i32, i32* @x.69
  %136 = load i32, i32* @y.70
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart26, label %originalBB2alteredBB

originalBBpart26:                                 ; preds = %originalBB2
  br label %143

; <label>:143:                                    ; preds = %236, %originalBBpart26
  store i32 0, i32* %23, align 4
  br label %144

; <label>:144:                                    ; preds = %originalBBpart220, %143
  %145 = load i32, i32* %23, align 4
  %146 = icmp slt i32 %145, 4
  br i1 %146, label %147, label %231

; <label>:147:                                    ; preds = %144
  %148 = load i32, i32* %23, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %24, align 4
  %152 = load i32, i32* %22, align 4
  %153 = load i32, i32* %24, align 4
  %154 = add nsw i32 %152, %153
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %211

; <label>:160:                                    ; preds = %147
  %161 = load i32, i32* %22, align 4
  %162 = load i32, i32* %24, align 4
  %163 = add nsw i32 %161, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = load i32, i32* @liberty_mark, align 4
  %168 = icmp ne i32 %166, %167
  br i1 %168, label %169, label %211

; <label>:169:                                    ; preds = %160
  %170 = load i32*, i32** %17, align 8
  %171 = icmp ne i32* %170, null
  br i1 %171, label %172, label %180

; <label>:172:                                    ; preds = %169
  %173 = load i32, i32* %22, align 4
  %174 = load i32, i32* %24, align 4
  %175 = add nsw i32 %173, %174
  %176 = load i32*, i32** %17, align 8
  %177 = load i32, i32* %18, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i32, i32* %176, i64 %178
  store i32 %175, i32* %179, align 4
  br label %180

; <label>:180:                                    ; preds = %172, %169
  %181 = load i32, i32* %18, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %18, align 4
  %183 = load i32, i32* %18, align 4
  %184 = load i32, i32* %16, align 4
  %185 = icmp eq i32 %183, %184
  br i1 %185, label %186, label %204

; <label>:186:                                    ; preds = %180
  %187 = load i32, i32* @x.69
  %188 = load i32, i32* @y.70
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %originalBB8alteredBB, %186
  %195 = load i32, i32* %18, align 4
  store i32 %195, i32* %13, align 4
  %196 = load i32, i32* @x.69
  %197 = load i32, i32* @y.70
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br label %295

; <label>:204:                                    ; preds = %180
  %205 = load i32, i32* @liberty_mark, align 4
  %206 = load i32, i32* %22, align 4
  %207 = load i32, i32* %24, align 4
  %208 = add nsw i32 %206, %207
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %209
  store i32 %205, i32* %210, align 4
  br label %211

; <label>:211:                                    ; preds = %204, %160, %147
  br label %212

; <label>:212:                                    ; preds = %211
  %213 = load i32, i32* @x.69
  %214 = load i32, i32* @y.70
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %originalBB12alteredBB, %212
  %221 = load i32, i32* %23, align 4
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %23, align 4
  %223 = load i32, i32* @x.69
  %224 = load i32, i32* @y.70
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart220, label %originalBB12alteredBB

originalBBpart220:                                ; preds = %originalBB12
  br label %144

; <label>:231:                                    ; preds = %144
  %232 = load i32, i32* %22, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  store i32 %235, i32* %22, align 4
  br label %236

; <label>:236:                                    ; preds = %231
  %237 = load i32, i32* %22, align 4
  %238 = load i32, i32* %21, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %239
  %241 = getelementptr inbounds %struct.string_data, %struct.string_data* %240, i32 0, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %237, %242
  %244 = xor i1 %243, true
  br i1 %244, label %143, label %245

; <label>:245:                                    ; preds = %236
  %246 = load i32, i32* @x.69
  %247 = load i32, i32* @y.70
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %245
  %254 = load i32, i32* @string_mark, align 4
  %255 = load i32, i32* %14, align 4
  %256 = load i32, i32* %20, align 4
  %257 = add nsw i32 %255, %256
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %258
  %260 = load i32, i32* %259, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %261
  %263 = getelementptr inbounds %struct.string_data, %struct.string_data* %262, i32 0, i32 7
  store i32 %254, i32* %263, align 4
  %264 = load i32, i32* @x.69
  %265 = load i32, i32* @y.70
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart236, label %originalBB22alteredBB

originalBBpart236:                                ; preds = %originalBB22
  br label %272

; <label>:272:                                    ; preds = %originalBBpart236, %102, %92
  %273 = load i32, i32* @x.69
  %274 = load i32, i32* @y.70
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %272
  %281 = load i32, i32* @x.69
  %282 = load i32, i32* @y.70
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %289

; <label>:289:                                    ; preds = %originalBBpart240, %85
  br label %290

; <label>:290:                                    ; preds = %289
  %291 = load i32, i32* %19, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* %19, align 4
  br label %41

; <label>:293:                                    ; preds = %41
  %294 = load i32, i32* %18, align 4
  store i32 %294, i32* %13, align 4
  br label %295

; <label>:295:                                    ; preds = %293, %originalBBpart210, %83
  %296 = load i32, i32* @x.69
  %297 = load i32, i32* @y.70
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %295
  %304 = load i32, i32* %13, align 4
  %305 = load i32, i32* @x.69
  %306 = load i32, i32* @y.70
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  ret i32 %304

originalBBalteredBB:                              ; preds = %originalBB, %4
  %313 = alloca i32, align 4
  %314 = alloca i32, align 4
  %315 = alloca i32, align 4
  %316 = alloca i32, align 4
  %317 = alloca i32*, align 8
  %318 = alloca i32, align 4
  %319 = alloca i32, align 4
  %320 = alloca i32, align 4
  %321 = alloca i32, align 4
  %322 = alloca i32, align 4
  %323 = alloca i32, align 4
  %324 = alloca i32, align 4
  store i32 %0, i32* %314, align 4
  store i32 %1, i32* %315, align 4
  store i32 %2, i32* %316, align 4
  store i32* %3, i32** %317, align 8
  store i32 0, i32* %318, align 4
  %325 = load i32, i32* @liberty_mark, align 4
  %_ = shl i32 %325, 1
  %_1 = sub i32 %325, 1
  %gen = mul i32 %_1, 1
  %326 = add nsw i32 %325, 1
  store i32 %326, i32* @liberty_mark, align 4
  %327 = load i32, i32* @liberty_mark, align 4
  %328 = load i32, i32* %314, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %329
  store i32 %327, i32* %330, align 4
  %331 = load i32, i32* @string_mark, align 4
  %332 = add nsw i32 %331, 1
  store i32 %332, i32* @string_mark, align 4
  store i32 0, i32* %319, align 4
  br label %originalBB

originalBB2alteredBB:                             ; preds = %originalBB2, %115
  %333 = load i32, i32* %14, align 4
  %334 = load i32, i32* %20, align 4
  %_3 = sub i32 0, %333
  %gen4 = add i32 %_3, %334
  %335 = add nsw i32 %333, %334
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %336
  %338 = load i32, i32* %337, align 4
  store i32 %338, i32* %21, align 4
  %339 = load i32, i32* %21, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %340
  %342 = getelementptr inbounds %struct.string_data, %struct.string_data* %341, i32 0, i32 2
  %343 = load i32, i32* %342, align 8
  store i32 %343, i32* %22, align 4
  br label %originalBB2

originalBB8alteredBB:                             ; preds = %originalBB8, %186
  %344 = load i32, i32* %18, align 4
  store i32 %344, i32* %13, align 4
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %212
  %345 = load i32, i32* %23, align 4
  %_13 = sub i32 0, %345
  %gen14 = add i32 %_13, 1
  %_15 = shl i32 %345, 1
  %_16 = shl i32 %345, 1
  %_17 = shl i32 %345, 1
  %_18 = shl i32 %345, 1
  %346 = add nsw i32 %345, 1
  store i32 %346, i32* %23, align 4
  br label %originalBB12

originalBB22alteredBB:                            ; preds = %originalBB22, %245
  %347 = load i32, i32* @string_mark, align 4
  %348 = load i32, i32* %14, align 4
  %349 = load i32, i32* %20, align 4
  %_23 = sub i32 %348, %349
  %gen24 = mul i32 %_23, %349
  %_25 = shl i32 %348, %349
  %_26 = sub i32 0, %348
  %gen27 = add i32 %_26, %349
  %_28 = shl i32 %348, %349
  %_29 = sub i32 0, %348
  %gen30 = add i32 %_29, %349
  %_31 = sub i32 %348, %349
  %gen32 = mul i32 %_31, %349
  %_33 = sub i32 0, %348
  %gen34 = add i32 %_33, %349
  %350 = add nsw i32 %348, %349
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %351
  %353 = load i32, i32* %352, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %354
  %356 = getelementptr inbounds %struct.string_data, %struct.string_data* %355, i32 0, i32 7
  store i32 %347, i32* %356, align 4
  br label %originalBB22

originalBB38alteredBB:                            ; preds = %originalBB38, %272
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %295
  %357 = load i32, i32* %13, align 4
  br label %originalBB42
}

; Function Attrs: noinline nounwind uwtable
define i32 @accuratelib(i32, i32, i32, i32*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [4 x i32], align 16
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.string_data*, align 8
  %19 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store i32 0, i32* %12, align 4
  store i32 0, i32* %15, align 4
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %43

; <label>:26:                                     ; preds = %4
  %27 = load i32, i32* @x.71
  %28 = load i32, i32* @y.72
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %26
  %35 = load i32, i32* @x.71
  %36 = load i32, i32* @y.72
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %50

; <label>:43:                                     ; preds = %4
  %44 = load i32, i32* %6, align 4
  %45 = sdiv i32 %44, 20
  %46 = sub nsw i32 %45, 1
  %47 = load i32, i32* %6, align 4
  %48 = srem i32 %47, 20
  %49 = sub nsw i32 %48, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1745, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %46, i32 %49)
  br label %50

; <label>:50:                                     ; preds = %43, %originalBBpart2
  %51 = load i32, i32* @x.71
  %52 = load i32, i32* @y.72
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %50
  %59 = load i32, i32* %7, align 4
  %60 = icmp eq i32 %59, 1
  %61 = load i32, i32* @x.71
  %62 = load i32, i32* @y.72
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %72, label %69

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = load i32, i32* %7, align 4
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %73

; <label>:72:                                     ; preds = %69, %originalBBpart24
  br label %80

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* %6, align 4
  %75 = sdiv i32 %74, 20
  %76 = sub nsw i32 %75, 1
  %77 = load i32, i32* %6, align 4
  %78 = srem i32 %77, 20
  %79 = sub nsw i32 %78, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1746, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 %76, i32 %79)
  br label %80

; <label>:80:                                     ; preds = %73, %72
  %81 = load i32, i32* @x.71
  %82 = load i32, i32* @y.72
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %80
  %89 = load i32*, i32** %9, align 8
  %90 = icmp ne i32* %89, null
  %91 = load i32, i32* @x.71
  %92 = load i32, i32* @y.72
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %90, label %124, label %99

; <label>:99:                                     ; preds = %originalBBpart28
  %100 = load i32, i32* %6, align 4
  %101 = load i32, i32* %7, align 4
  %102 = call i32 @fastlib(i32 %100, i32 %101, i32 0)
  store i32 %102, i32* %16, align 4
  %103 = load i32, i32* %16, align 4
  %104 = icmp sge i32 %103, 0
  br i1 %104, label %105, label %107

; <label>:105:                                    ; preds = %99
  %106 = load i32, i32* %16, align 4
  store i32 %106, i32* %5, align 4
  br label %1329

; <label>:107:                                    ; preds = %99
  %108 = load i32, i32* @x.71
  %109 = load i32, i32* @y.72
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %107
  %116 = load i32, i32* @x.71
  %117 = load i32, i32* @y.72
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %124

; <label>:124:                                    ; preds = %originalBBpart212, %originalBBpart28
  %125 = load i32, i32* @string_mark, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* @string_mark, align 4
  %127 = load i32, i32* @liberty_mark, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* @liberty_mark, align 4
  %129 = load i32, i32* @liberty_mark, align 4
  %130 = load i32, i32* %6, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %131
  store i32 %129, i32* %132, align 4
  store i32 0, i32* %10, align 4
  br label %133

; <label>:133:                                    ; preds = %890, %124
  %134 = load i32, i32* %10, align 4
  %135 = icmp slt i32 %134, 4
  br i1 %135, label %136, label %893

; <label>:136:                                    ; preds = %133
  %137 = load i32, i32* %6, align 4
  %138 = load i32, i32* %10, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = add nsw i32 %137, %141
  store i32 %142, i32* %17, align 4
  %143 = load i32, i32* %17, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %242

; <label>:149:                                    ; preds = %136
  %150 = load i32, i32* %17, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* @liberty_mark, align 4
  %155 = icmp ne i32 %153, %154
  br i1 %155, label %156, label %242

; <label>:156:                                    ; preds = %149
  %157 = load i32, i32* @x.71
  %158 = load i32, i32* @y.72
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %156
  %165 = load i32*, i32** %9, align 8
  %166 = icmp ne i32* %165, null
  %167 = load i32, i32* @x.71
  %168 = load i32, i32* @y.72
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %166, label %175, label %181

; <label>:175:                                    ; preds = %originalBBpart216
  %176 = load i32, i32* %17, align 4
  %177 = load i32*, i32** %9, align 8
  %178 = load i32, i32* %12, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %177, i64 %179
  store i32 %176, i32* %180, align 4
  br label %181

; <label>:181:                                    ; preds = %175, %originalBBpart216
  %182 = load i32, i32* @x.71
  %183 = load i32, i32* @y.72
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %181
  %190 = load i32, i32* %12, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %12, align 4
  %192 = load i32, i32* %12, align 4
  %193 = load i32, i32* %8, align 4
  %194 = icmp sge i32 %192, %193
  %195 = load i32, i32* @x.71
  %196 = load i32, i32* @y.72
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart225, label %originalBB18alteredBB

originalBBpart225:                                ; preds = %originalBB18
  br i1 %194, label %203, label %221

; <label>:203:                                    ; preds = %originalBBpart225
  %204 = load i32, i32* @x.71
  %205 = load i32, i32* @y.72
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %203
  %212 = load i32, i32* %12, align 4
  store i32 %212, i32* %5, align 4
  %213 = load i32, i32* @x.71
  %214 = load i32, i32* @y.72
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %1329

; <label>:221:                                    ; preds = %originalBBpart225
  %222 = load i32, i32* @x.71
  %223 = load i32, i32* @y.72
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %221
  %230 = load i32, i32* @liberty_mark, align 4
  %231 = load i32, i32* %17, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %232
  store i32 %230, i32* %233, align 4
  %234 = load i32, i32* @x.71
  %235 = load i32, i32* @y.72
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %889

; <label>:242:                                    ; preds = %149, %136
  %243 = load i32, i32* %17, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = load i32, i32* %7, align 4
  %249 = icmp eq i32 %247, %248
  br i1 %249, label %250, label %814

; <label>:250:                                    ; preds = %242
  %251 = load i32, i32* %17, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %252
  %254 = load i32, i32* %253, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %255
  %257 = getelementptr inbounds %struct.string_data, %struct.string_data* %256, i32 0, i32 7
  %258 = load i32, i32* %257, align 4
  %259 = load i32, i32* @string_mark, align 4
  %260 = icmp ne i32 %258, %259
  br i1 %260, label %261, label %814

; <label>:261:                                    ; preds = %250
  %262 = load i32, i32* %17, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %266
  store %struct.string_data* %267, %struct.string_data** %18, align 8
  %268 = load %struct.string_data*, %struct.string_data** %18, align 8
  %269 = getelementptr inbounds %struct.string_data, %struct.string_data* %268, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = icmp sle i32 %270, 20
  br i1 %271, label %275, label %272

; <label>:272:                                    ; preds = %261
  %273 = load i32, i32* %8, align 4
  %274 = icmp sle i32 %273, 19
  br i1 %274, label %275, label %377

; <label>:275:                                    ; preds = %272, %261
  store i32 0, i32* %11, align 4
  br label %276

; <label>:276:                                    ; preds = %357, %275
  %277 = load i32, i32* @x.71
  %278 = load i32, i32* @y.72
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %276
  %285 = load i32, i32* %11, align 4
  %286 = load %struct.string_data*, %struct.string_data** %18, align 8
  %287 = getelementptr inbounds %struct.string_data, %struct.string_data* %286, i32 0, i32 3
  %288 = load i32, i32* %287, align 4
  %289 = icmp slt i32 %285, %288
  %290 = load i32, i32* @x.71
  %291 = load i32, i32* @y.72
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %289, label %298, label %360

; <label>:298:                                    ; preds = %originalBBpart237
  %299 = load i32, i32* @x.71
  %300 = load i32, i32* @y.72
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %298
  %307 = load %struct.string_data*, %struct.string_data** %18, align 8
  %308 = getelementptr inbounds %struct.string_data, %struct.string_data* %307, i32 0, i32 4
  %309 = load i32, i32* %11, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [20 x i32], [20 x i32]* %308, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  store i32 %312, i32* %13, align 4
  %313 = load i32, i32* %13, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i32
  %318 = icmp eq i32 %317, 0
  %319 = load i32, i32* @x.71
  %320 = load i32, i32* @y.72
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %318, label %327, label %356

; <label>:327:                                    ; preds = %originalBBpart241
  %328 = load i32, i32* %13, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = load i32, i32* @liberty_mark, align 4
  %333 = icmp ne i32 %331, %332
  br i1 %333, label %334, label %356

; <label>:334:                                    ; preds = %327
  %335 = load i32*, i32** %9, align 8
  %336 = icmp ne i32* %335, null
  br i1 %336, label %337, label %343

; <label>:337:                                    ; preds = %334
  %338 = load i32, i32* %13, align 4
  %339 = load i32*, i32** %9, align 8
  %340 = load i32, i32* %12, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i32, i32* %339, i64 %341
  store i32 %338, i32* %342, align 4
  br label %343

; <label>:343:                                    ; preds = %337, %334
  %344 = load i32, i32* %12, align 4
  %345 = add nsw i32 %344, 1
  store i32 %345, i32* %12, align 4
  %346 = load i32, i32* %12, align 4
  %347 = load i32, i32* %8, align 4
  %348 = icmp sge i32 %346, %347
  br i1 %348, label %349, label %351

; <label>:349:                                    ; preds = %343
  %350 = load i32, i32* %12, align 4
  store i32 %350, i32* %5, align 4
  br label %1329

; <label>:351:                                    ; preds = %343
  %352 = load i32, i32* @liberty_mark, align 4
  %353 = load i32, i32* %13, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %354
  store i32 %352, i32* %355, align 4
  br label %356

; <label>:356:                                    ; preds = %351, %327, %originalBBpart241
  br label %357

; <label>:357:                                    ; preds = %356
  %358 = load i32, i32* %11, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %11, align 4
  br label %276

; <label>:360:                                    ; preds = %originalBBpart237
  %361 = load i32, i32* @x.71
  %362 = load i32, i32* @y.72
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %360
  %369 = load i32, i32* @x.71
  %370 = load i32, i32* @y.72
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %789

; <label>:377:                                    ; preds = %272
  %378 = load i32, i32* @x.71
  %379 = load i32, i32* @y.72
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %377
  %386 = load i32, i32* %17, align 4
  store i32 %386, i32* %19, align 4
  %387 = load i32, i32* @x.71
  %388 = load i32, i32* @y.72
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %395

; <label>:395:                                    ; preds = %originalBBpart2143, %originalBBpart249
  %396 = load i32, i32* %19, align 4
  %397 = add nsw i32 %396, 20
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %398
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %400 to i32
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %483

; <label>:403:                                    ; preds = %395
  %404 = load i32, i32* %19, align 4
  %405 = add nsw i32 %404, 20
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = load i32, i32* @liberty_mark, align 4
  %410 = icmp ne i32 %408, %409
  br i1 %410, label %411, label %483

; <label>:411:                                    ; preds = %403
  %412 = load i32*, i32** %9, align 8
  %413 = icmp ne i32* %412, null
  br i1 %413, label %414, label %437

; <label>:414:                                    ; preds = %411
  %415 = load i32, i32* @x.71
  %416 = load i32, i32* @y.72
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %414
  %423 = load i32, i32* %19, align 4
  %424 = add nsw i32 %423, 20
  %425 = load i32*, i32** %9, align 8
  %426 = load i32, i32* %12, align 4
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i32, i32* %425, i64 %427
  store i32 %424, i32* %428, align 4
  %429 = load i32, i32* @x.71
  %430 = load i32, i32* @y.72
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBBpart261, label %originalBB51alteredBB

originalBBpart261:                                ; preds = %originalBB51
  br label %437

; <label>:437:                                    ; preds = %originalBBpart261, %411
  %438 = load i32, i32* @x.71
  %439 = load i32, i32* @y.72
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %437
  %446 = load i32, i32* %12, align 4
  %447 = add nsw i32 %446, 1
  store i32 %447, i32* %12, align 4
  %448 = load i32, i32* %12, align 4
  %449 = load i32, i32* %8, align 4
  %450 = icmp sge i32 %448, %449
  %451 = load i32, i32* @x.71
  %452 = load i32, i32* @y.72
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart274, label %originalBB63alteredBB

originalBBpart274:                                ; preds = %originalBB63
  br i1 %450, label %459, label %477

; <label>:459:                                    ; preds = %originalBBpart274
  %460 = load i32, i32* @x.71
  %461 = load i32, i32* @y.72
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %459
  %468 = load i32, i32* %12, align 4
  store i32 %468, i32* %5, align 4
  %469 = load i32, i32* @x.71
  %470 = load i32, i32* @y.72
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %1329

; <label>:477:                                    ; preds = %originalBBpart274
  %478 = load i32, i32* @liberty_mark, align 4
  %479 = load i32, i32* %19, align 4
  %480 = add nsw i32 %479, 20
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %481
  store i32 %478, i32* %482, align 4
  br label %483

; <label>:483:                                    ; preds = %477, %403, %395
  %484 = load i32, i32* @x.71
  %485 = load i32, i32* @y.72
  %486 = sub i32 %484, 1
  %487 = mul i32 %484, %486
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %485, 10
  %491 = or i1 %489, %490
  br i1 %491, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %483
  %492 = load i32, i32* %19, align 4
  %493 = sub nsw i32 %492, 1
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %494
  %496 = load i8, i8* %495, align 1
  %497 = zext i8 %496 to i32
  %498 = icmp eq i32 %497, 0
  %499 = load i32, i32* @x.71
  %500 = load i32, i32* @y.72
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBBpart285, label %originalBB80alteredBB

originalBBpart285:                                ; preds = %originalBB80
  br i1 %498, label %507, label %571

; <label>:507:                                    ; preds = %originalBBpart285
  %508 = load i32, i32* %19, align 4
  %509 = sub nsw i32 %508, 1
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %510
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* @liberty_mark, align 4
  %514 = icmp ne i32 %512, %513
  br i1 %514, label %515, label %571

; <label>:515:                                    ; preds = %507
  %516 = load i32, i32* @x.71
  %517 = load i32, i32* @y.72
  %518 = sub i32 %516, 1
  %519 = mul i32 %516, %518
  %520 = urem i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = icmp slt i32 %517, 10
  %523 = or i1 %521, %522
  br i1 %523, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %515
  %524 = load i32*, i32** %9, align 8
  %525 = icmp ne i32* %524, null
  %526 = load i32, i32* @x.71
  %527 = load i32, i32* @y.72
  %528 = sub i32 %526, 1
  %529 = mul i32 %526, %528
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %531, %532
  br i1 %533, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br i1 %525, label %534, label %541

; <label>:534:                                    ; preds = %originalBBpart289
  %535 = load i32, i32* %19, align 4
  %536 = sub nsw i32 %535, 1
  %537 = load i32*, i32** %9, align 8
  %538 = load i32, i32* %12, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds i32, i32* %537, i64 %539
  store i32 %536, i32* %540, align 4
  br label %541

; <label>:541:                                    ; preds = %534, %originalBBpart289
  %542 = load i32, i32* %12, align 4
  %543 = add nsw i32 %542, 1
  store i32 %543, i32* %12, align 4
  %544 = load i32, i32* %12, align 4
  %545 = load i32, i32* %8, align 4
  %546 = icmp sge i32 %544, %545
  br i1 %546, label %547, label %565

; <label>:547:                                    ; preds = %541
  %548 = load i32, i32* @x.71
  %549 = load i32, i32* @y.72
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %547
  %556 = load i32, i32* %12, align 4
  store i32 %556, i32* %5, align 4
  %557 = load i32, i32* @x.71
  %558 = load i32, i32* @y.72
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %1329

; <label>:565:                                    ; preds = %541
  %566 = load i32, i32* @liberty_mark, align 4
  %567 = load i32, i32* %19, align 4
  %568 = sub nsw i32 %567, 1
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %569
  store i32 %566, i32* %570, align 4
  br label %571

; <label>:571:                                    ; preds = %565, %507, %originalBBpart285
  %572 = load i32, i32* %19, align 4
  %573 = sub nsw i32 %572, 20
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %574
  %576 = load i8, i8* %575, align 1
  %577 = zext i8 %576 to i32
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %627

; <label>:579:                                    ; preds = %571
  %580 = load i32, i32* %19, align 4
  %581 = sub nsw i32 %580, 20
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  %585 = load i32, i32* @liberty_mark, align 4
  %586 = icmp ne i32 %584, %585
  br i1 %586, label %587, label %627

; <label>:587:                                    ; preds = %579
  %588 = load i32*, i32** %9, align 8
  %589 = icmp ne i32* %588, null
  br i1 %589, label %590, label %613

; <label>:590:                                    ; preds = %587
  %591 = load i32, i32* @x.71
  %592 = load i32, i32* @y.72
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %590
  %599 = load i32, i32* %19, align 4
  %600 = sub nsw i32 %599, 20
  %601 = load i32*, i32** %9, align 8
  %602 = load i32, i32* %12, align 4
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i32, i32* %601, i64 %603
  store i32 %600, i32* %604, align 4
  %605 = load i32, i32* @x.71
  %606 = load i32, i32* @y.72
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBBpart298, label %originalBB95alteredBB

originalBBpart298:                                ; preds = %originalBB95
  br label %613

; <label>:613:                                    ; preds = %originalBBpart298, %587
  %614 = load i32, i32* %12, align 4
  %615 = add nsw i32 %614, 1
  store i32 %615, i32* %12, align 4
  %616 = load i32, i32* %12, align 4
  %617 = load i32, i32* %8, align 4
  %618 = icmp sge i32 %616, %617
  br i1 %618, label %619, label %621

; <label>:619:                                    ; preds = %613
  %620 = load i32, i32* %12, align 4
  store i32 %620, i32* %5, align 4
  br label %1329

; <label>:621:                                    ; preds = %613
  %622 = load i32, i32* @liberty_mark, align 4
  %623 = load i32, i32* %19, align 4
  %624 = sub nsw i32 %623, 20
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %625
  store i32 %622, i32* %626, align 4
  br label %627

; <label>:627:                                    ; preds = %621, %579, %571
  %628 = load i32, i32* @x.71
  %629 = load i32, i32* @y.72
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %originalBB100alteredBB, %627
  %636 = load i32, i32* %19, align 4
  %637 = add nsw i32 %636, 1
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %638
  %640 = load i8, i8* %639, align 1
  %641 = zext i8 %640 to i32
  %642 = icmp eq i32 %641, 0
  %643 = load i32, i32* @x.71
  %644 = load i32, i32* @y.72
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBBpart2113, label %originalBB100alteredBB

originalBBpart2113:                               ; preds = %originalBB100
  br i1 %642, label %651, label %747

; <label>:651:                                    ; preds = %originalBBpart2113
  %652 = load i32, i32* @x.71
  %653 = load i32, i32* @y.72
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %651
  %660 = load i32, i32* %19, align 4
  %661 = add nsw i32 %660, 1
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %662
  %664 = load i32, i32* %663, align 4
  %665 = load i32, i32* @liberty_mark, align 4
  %666 = icmp ne i32 %664, %665
  %667 = load i32, i32* @x.71
  %668 = load i32, i32* @y.72
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBBpart2123, label %originalBB115alteredBB

originalBBpart2123:                               ; preds = %originalBB115
  br i1 %666, label %675, label %747

; <label>:675:                                    ; preds = %originalBBpart2123
  %676 = load i32, i32* @x.71
  %677 = load i32, i32* @y.72
  %678 = sub i32 %676, 1
  %679 = mul i32 %676, %678
  %680 = urem i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = icmp slt i32 %677, 10
  %683 = or i1 %681, %682
  br i1 %683, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %originalBB125alteredBB, %675
  %684 = load i32*, i32** %9, align 8
  %685 = icmp ne i32* %684, null
  %686 = load i32, i32* @x.71
  %687 = load i32, i32* @y.72
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %685, label %694, label %717

; <label>:694:                                    ; preds = %originalBBpart2127
  %695 = load i32, i32* @x.71
  %696 = load i32, i32* @y.72
  %697 = sub i32 %695, 1
  %698 = mul i32 %695, %697
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %696, 10
  %702 = or i1 %700, %701
  br i1 %702, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %originalBB129alteredBB, %694
  %703 = load i32, i32* %19, align 4
  %704 = add nsw i32 %703, 1
  %705 = load i32*, i32** %9, align 8
  %706 = load i32, i32* %12, align 4
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds i32, i32* %705, i64 %707
  store i32 %704, i32* %708, align 4
  %709 = load i32, i32* @x.71
  %710 = load i32, i32* @y.72
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br label %717

; <label>:717:                                    ; preds = %originalBBpart2131, %originalBBpart2127
  %718 = load i32, i32* %12, align 4
  %719 = add nsw i32 %718, 1
  store i32 %719, i32* %12, align 4
  %720 = load i32, i32* %12, align 4
  %721 = load i32, i32* %8, align 4
  %722 = icmp sge i32 %720, %721
  br i1 %722, label %723, label %741

; <label>:723:                                    ; preds = %717
  %724 = load i32, i32* @x.71
  %725 = load i32, i32* @y.72
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %originalBB133alteredBB, %723
  %732 = load i32, i32* %12, align 4
  store i32 %732, i32* %5, align 4
  %733 = load i32, i32* @x.71
  %734 = load i32, i32* @y.72
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %1329

; <label>:741:                                    ; preds = %717
  %742 = load i32, i32* @liberty_mark, align 4
  %743 = load i32, i32* %19, align 4
  %744 = add nsw i32 %743, 1
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %745
  store i32 %742, i32* %746, align 4
  br label %747

; <label>:747:                                    ; preds = %741, %originalBBpart2123, %originalBBpart2113
  %748 = load i32, i32* @x.71
  %749 = load i32, i32* @y.72
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %originalBB137alteredBB, %747
  %756 = load i32, i32* %19, align 4
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %757
  %759 = load i32, i32* %758, align 4
  store i32 %759, i32* %19, align 4
  %760 = load i32, i32* @x.71
  %761 = load i32, i32* @y.72
  %762 = sub i32 %760, 1
  %763 = mul i32 %760, %762
  %764 = urem i32 %763, 2
  %765 = icmp eq i32 %764, 0
  %766 = icmp slt i32 %761, 10
  %767 = or i1 %765, %766
  br i1 %767, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %768

; <label>:768:                                    ; preds = %originalBBpart2139
  %769 = load i32, i32* @x.71
  %770 = load i32, i32* @y.72
  %771 = sub i32 %769, 1
  %772 = mul i32 %769, %771
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %770, 10
  %776 = or i1 %774, %775
  br i1 %776, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %768
  %777 = load i32, i32* %19, align 4
  %778 = load i32, i32* %17, align 4
  %779 = icmp ne i32 %777, %778
  %780 = load i32, i32* @x.71
  %781 = load i32, i32* @y.72
  %782 = sub i32 %780, 1
  %783 = mul i32 %780, %782
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %781, 10
  %787 = or i1 %785, %786
  br i1 %787, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %779, label %395, label %788

; <label>:788:                                    ; preds = %originalBBpart2143
  br label %789

; <label>:789:                                    ; preds = %788, %originalBBpart245
  %790 = load i32, i32* @x.71
  %791 = load i32, i32* @y.72
  %792 = sub i32 %790, 1
  %793 = mul i32 %790, %792
  %794 = urem i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = icmp slt i32 %791, 10
  %797 = or i1 %795, %796
  br i1 %797, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %originalBB145alteredBB, %789
  %798 = load i32, i32* @string_mark, align 4
  %799 = load i32, i32* %17, align 4
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %800
  %802 = load i32, i32* %801, align 4
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %803
  %805 = getelementptr inbounds %struct.string_data, %struct.string_data* %804, i32 0, i32 7
  store i32 %798, i32* %805, align 4
  %806 = load i32, i32* @x.71
  %807 = load i32, i32* @y.72
  %808 = sub i32 %806, 1
  %809 = mul i32 %806, %808
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %807, 10
  %813 = or i1 %811, %812
  br i1 %813, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %888

; <label>:814:                                    ; preds = %250, %242
  %815 = load i32, i32* @x.71
  %816 = load i32, i32* @y.72
  %817 = sub i32 %815, 1
  %818 = mul i32 %815, %817
  %819 = urem i32 %818, 2
  %820 = icmp eq i32 %819, 0
  %821 = icmp slt i32 %816, 10
  %822 = or i1 %820, %821
  br i1 %822, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %814
  %823 = load i32, i32* %17, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %824
  %826 = load i8, i8* %825, align 1
  %827 = zext i8 %826 to i32
  %828 = load i32, i32* %7, align 4
  %829 = sub nsw i32 3, %828
  %830 = icmp eq i32 %827, %829
  %831 = load i32, i32* @x.71
  %832 = load i32, i32* @y.72
  %833 = sub i32 %831, 1
  %834 = mul i32 %831, %833
  %835 = urem i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = icmp slt i32 %832, 10
  %838 = or i1 %836, %837
  br i1 %838, label %originalBBpart2152, label %originalBB149alteredBB

originalBBpart2152:                               ; preds = %originalBB149
  br i1 %830, label %839, label %871

; <label>:839:                                    ; preds = %originalBBpart2152
  %840 = load i32, i32* @x.71
  %841 = load i32, i32* @y.72
  %842 = sub i32 %840, 1
  %843 = mul i32 %840, %842
  %844 = urem i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = icmp slt i32 %841, 10
  %847 = or i1 %845, %846
  br i1 %847, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %839
  %848 = load i32, i32* %17, align 4
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %849
  %851 = load i32, i32* %850, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %852
  %854 = getelementptr inbounds %struct.string_data, %struct.string_data* %853, i32 0, i32 3
  %855 = load i32, i32* %854, align 4
  %856 = icmp eq i32 %855, 1
  %857 = load i32, i32* @x.71
  %858 = load i32, i32* @y.72
  %859 = sub i32 %857, 1
  %860 = mul i32 %857, %859
  %861 = urem i32 %860, 2
  %862 = icmp eq i32 %861, 0
  %863 = icmp slt i32 %858, 10
  %864 = or i1 %862, %863
  br i1 %864, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br i1 %856, label %865, label %871

; <label>:865:                                    ; preds = %originalBBpart2156
  %866 = load i32, i32* %17, align 4
  %867 = load i32, i32* %15, align 4
  %868 = add nsw i32 %867, 1
  store i32 %868, i32* %15, align 4
  %869 = sext i32 %867 to i64
  %870 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 %869
  store i32 %866, i32* %870, align 4
  br label %871

; <label>:871:                                    ; preds = %865, %originalBBpart2156, %originalBBpart2152
  %872 = load i32, i32* @x.71
  %873 = load i32, i32* @y.72
  %874 = sub i32 %872, 1
  %875 = mul i32 %872, %874
  %876 = urem i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = icmp slt i32 %873, 10
  %879 = or i1 %877, %878
  br i1 %879, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %871
  %880 = load i32, i32* @x.71
  %881 = load i32, i32* @y.72
  %882 = sub i32 %880, 1
  %883 = mul i32 %880, %882
  %884 = urem i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = icmp slt i32 %881, 10
  %887 = or i1 %885, %886
  br i1 %887, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %888

; <label>:888:                                    ; preds = %originalBBpart2160, %originalBBpart2147
  br label %889

; <label>:889:                                    ; preds = %888, %originalBBpart233
  br label %890

; <label>:890:                                    ; preds = %889
  %891 = load i32, i32* %10, align 4
  %892 = add nsw i32 %891, 1
  store i32 %892, i32* %10, align 4
  br label %133

; <label>:893:                                    ; preds = %133
  store i32 0, i32* %10, align 4
  br label %894

; <label>:894:                                    ; preds = %originalBBpart2232, %893
  %895 = load i32, i32* %10, align 4
  %896 = load i32, i32* %15, align 4
  %897 = icmp slt i32 %895, %896
  br i1 %897, label %898, label %1311

; <label>:898:                                    ; preds = %894
  %899 = load i32, i32* %10, align 4
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 %900
  %902 = load i32, i32* %901, align 4
  store i32 %902, i32* %13, align 4
  %903 = load i32, i32* %13, align 4
  %904 = add nsw i32 %903, 20
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %905
  %907 = load i8, i8* %906, align 1
  %908 = zext i8 %907 to i32
  %909 = load i32, i32* %7, align 4
  %910 = icmp eq i32 %908, %909
  br i1 %910, label %911, label %923

; <label>:911:                                    ; preds = %898
  %912 = load i32, i32* %13, align 4
  %913 = add nsw i32 %912, 20
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %914
  %916 = load i32, i32* %915, align 4
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %917
  %919 = getelementptr inbounds %struct.string_data, %struct.string_data* %918, i32 0, i32 7
  %920 = load i32, i32* %919, align 4
  %921 = load i32, i32* @string_mark, align 4
  %922 = icmp eq i32 %920, %921
  br i1 %922, label %1036, label %923

; <label>:923:                                    ; preds = %911, %898
  %924 = load i32, i32* %13, align 4
  %925 = sub nsw i32 %924, 1
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %926
  %928 = load i8, i8* %927, align 1
  %929 = zext i8 %928 to i32
  %930 = load i32, i32* %7, align 4
  %931 = icmp eq i32 %929, %930
  br i1 %931, label %932, label %944

; <label>:932:                                    ; preds = %923
  %933 = load i32, i32* %13, align 4
  %934 = sub nsw i32 %933, 1
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %935
  %937 = load i32, i32* %936, align 4
  %938 = sext i32 %937 to i64
  %939 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %938
  %940 = getelementptr inbounds %struct.string_data, %struct.string_data* %939, i32 0, i32 7
  %941 = load i32, i32* %940, align 4
  %942 = load i32, i32* @string_mark, align 4
  %943 = icmp eq i32 %941, %942
  br i1 %943, label %1036, label %944

; <label>:944:                                    ; preds = %932, %923
  %945 = load i32, i32* %13, align 4
  %946 = sub nsw i32 %945, 20
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %947
  %949 = load i8, i8* %948, align 1
  %950 = zext i8 %949 to i32
  %951 = load i32, i32* %7, align 4
  %952 = icmp eq i32 %950, %951
  br i1 %952, label %953, label %981

; <label>:953:                                    ; preds = %944
  %954 = load i32, i32* @x.71
  %955 = load i32, i32* @y.72
  %956 = sub i32 %954, 1
  %957 = mul i32 %954, %956
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %955, 10
  %961 = or i1 %959, %960
  br i1 %961, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %953
  %962 = load i32, i32* %13, align 4
  %963 = sub nsw i32 %962, 20
  %964 = sext i32 %963 to i64
  %965 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %964
  %966 = load i32, i32* %965, align 4
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %967
  %969 = getelementptr inbounds %struct.string_data, %struct.string_data* %968, i32 0, i32 7
  %970 = load i32, i32* %969, align 4
  %971 = load i32, i32* @string_mark, align 4
  %972 = icmp eq i32 %970, %971
  %973 = load i32, i32* @x.71
  %974 = load i32, i32* @y.72
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBBpart2170, label %originalBB162alteredBB

originalBBpart2170:                               ; preds = %originalBB162
  br i1 %972, label %1036, label %981

; <label>:981:                                    ; preds = %originalBBpart2170, %944
  %982 = load i32, i32* %13, align 4
  %983 = add nsw i32 %982, 1
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %984
  %986 = load i8, i8* %985, align 1
  %987 = zext i8 %986 to i32
  %988 = load i32, i32* %7, align 4
  %989 = icmp eq i32 %987, %988
  br i1 %989, label %990, label %1002

; <label>:990:                                    ; preds = %981
  %991 = load i32, i32* %13, align 4
  %992 = add nsw i32 %991, 1
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %993
  %995 = load i32, i32* %994, align 4
  %996 = sext i32 %995 to i64
  %997 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %996
  %998 = getelementptr inbounds %struct.string_data, %struct.string_data* %997, i32 0, i32 7
  %999 = load i32, i32* %998, align 4
  %1000 = load i32, i32* @string_mark, align 4
  %1001 = icmp eq i32 %999, %1000
  br i1 %1001, label %1036, label %1002

; <label>:1002:                                   ; preds = %990, %981
  %1003 = load i32*, i32** %9, align 8
  %1004 = icmp ne i32* %1003, null
  br i1 %1004, label %1005, label %1011

; <label>:1005:                                   ; preds = %1002
  %1006 = load i32, i32* %13, align 4
  %1007 = load i32*, i32** %9, align 8
  %1008 = load i32, i32* %12, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds i32, i32* %1007, i64 %1009
  store i32 %1006, i32* %1010, align 4
  br label %1011

; <label>:1011:                                   ; preds = %1005, %1002
  %1012 = load i32, i32* %12, align 4
  %1013 = add nsw i32 %1012, 1
  store i32 %1013, i32* %12, align 4
  %1014 = load i32, i32* %12, align 4
  %1015 = load i32, i32* %8, align 4
  %1016 = icmp sge i32 %1014, %1015
  br i1 %1016, label %1017, label %1019

; <label>:1017:                                   ; preds = %1011
  %1018 = load i32, i32* %12, align 4
  store i32 %1018, i32* %5, align 4
  br label %1329

; <label>:1019:                                   ; preds = %1011
  %1020 = load i32, i32* @x.71
  %1021 = load i32, i32* @y.72
  %1022 = sub i32 %1020, 1
  %1023 = mul i32 %1020, %1022
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1021, 10
  %1027 = or i1 %1025, %1026
  br i1 %1027, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %originalBB172alteredBB, %1019
  %1028 = load i32, i32* @x.71
  %1029 = load i32, i32* @y.72
  %1030 = sub i32 %1028, 1
  %1031 = mul i32 %1028, %1030
  %1032 = urem i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = icmp slt i32 %1029, 10
  %1035 = or i1 %1033, %1034
  br i1 %1035, label %originalBBpart2174, label %originalBB172alteredBB

originalBBpart2174:                               ; preds = %originalBB172
  br label %1036

; <label>:1036:                                   ; preds = %originalBBpart2174, %990, %originalBBpart2170, %932, %911
  store i32 0, i32* %11, align 4
  br label %1037

; <label>:1037:                                   ; preds = %1120, %1036
  %1038 = load i32, i32* @x.71
  %1039 = load i32, i32* @y.72
  %1040 = sub i32 %1038, 1
  %1041 = mul i32 %1038, %1040
  %1042 = urem i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  %1044 = icmp slt i32 %1039, 10
  %1045 = or i1 %1043, %1044
  br i1 %1045, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %originalBB176alteredBB, %1037
  %1046 = load i32, i32* %11, align 4
  %1047 = load i32, i32* %10, align 4
  %1048 = icmp slt i32 %1046, %1047
  %1049 = load i32, i32* @x.71
  %1050 = load i32, i32* @y.72
  %1051 = sub i32 %1049, 1
  %1052 = mul i32 %1049, %1051
  %1053 = urem i32 %1052, 2
  %1054 = icmp eq i32 %1053, 0
  %1055 = icmp slt i32 %1050, 10
  %1056 = or i1 %1054, %1055
  br i1 %1056, label %originalBBpart2178, label %originalBB176alteredBB

originalBBpart2178:                               ; preds = %originalBB176
  br i1 %1048, label %1057, label %1123

; <label>:1057:                                   ; preds = %originalBBpart2178
  %1058 = load i32, i32* @x.71
  %1059 = load i32, i32* @y.72
  %1060 = sub i32 %1058, 1
  %1061 = mul i32 %1058, %1060
  %1062 = urem i32 %1061, 2
  %1063 = icmp eq i32 %1062, 0
  %1064 = icmp slt i32 %1059, 10
  %1065 = or i1 %1063, %1064
  br i1 %1065, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %originalBB180alteredBB, %1057
  %1066 = load i32, i32* %11, align 4
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 %1067
  %1069 = load i32, i32* %1068, align 4
  %1070 = sext i32 %1069 to i64
  %1071 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1070
  %1072 = load i32, i32* %1071, align 4
  %1073 = load i32, i32* %13, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1074
  %1076 = load i32, i32* %1075, align 4
  %1077 = icmp eq i32 %1072, %1076
  %1078 = load i32, i32* @x.71
  %1079 = load i32, i32* @y.72
  %1080 = sub i32 %1078, 1
  %1081 = mul i32 %1078, %1080
  %1082 = urem i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = icmp slt i32 %1079, 10
  %1085 = or i1 %1083, %1084
  br i1 %1085, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br i1 %1077, label %1086, label %1103

; <label>:1086:                                   ; preds = %originalBBpart2182
  %1087 = load i32, i32* @x.71
  %1088 = load i32, i32* @y.72
  %1089 = sub i32 %1087, 1
  %1090 = mul i32 %1087, %1089
  %1091 = urem i32 %1090, 2
  %1092 = icmp eq i32 %1091, 0
  %1093 = icmp slt i32 %1088, 10
  %1094 = or i1 %1092, %1093
  br i1 %1094, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %originalBB184alteredBB, %1086
  %1095 = load i32, i32* @x.71
  %1096 = load i32, i32* @y.72
  %1097 = sub i32 %1095, 1
  %1098 = mul i32 %1095, %1097
  %1099 = urem i32 %1098, 2
  %1100 = icmp eq i32 %1099, 0
  %1101 = icmp slt i32 %1096, 10
  %1102 = or i1 %1100, %1101
  br i1 %1102, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br label %1123

; <label>:1103:                                   ; preds = %originalBBpart2182
  %1104 = load i32, i32* @x.71
  %1105 = load i32, i32* @y.72
  %1106 = sub i32 %1104, 1
  %1107 = mul i32 %1104, %1106
  %1108 = urem i32 %1107, 2
  %1109 = icmp eq i32 %1108, 0
  %1110 = icmp slt i32 %1105, 10
  %1111 = or i1 %1109, %1110
  br i1 %1111, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %originalBB188alteredBB, %1103
  %1112 = load i32, i32* @x.71
  %1113 = load i32, i32* @y.72
  %1114 = sub i32 %1112, 1
  %1115 = mul i32 %1112, %1114
  %1116 = urem i32 %1115, 2
  %1117 = icmp eq i32 %1116, 0
  %1118 = icmp slt i32 %1113, 10
  %1119 = or i1 %1117, %1118
  br i1 %1119, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br label %1120

; <label>:1120:                                   ; preds = %originalBBpart2190
  %1121 = load i32, i32* %11, align 4
  %1122 = add nsw i32 %1121, 1
  store i32 %1122, i32* %11, align 4
  br label %1037

; <label>:1123:                                   ; preds = %originalBBpart2186, %originalBBpart2178
  %1124 = load i32, i32* %11, align 4
  %1125 = load i32, i32* %10, align 4
  %1126 = icmp eq i32 %1124, %1125
  br i1 %1126, label %1127, label %1291

; <label>:1127:                                   ; preds = %1123
  br label %1128

; <label>:1128:                                   ; preds = %1283, %1127
  %1129 = load i32, i32* @x.71
  %1130 = load i32, i32* @y.72
  %1131 = sub i32 %1129, 1
  %1132 = mul i32 %1129, %1131
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1130, 10
  %1136 = or i1 %1134, %1135
  br i1 %1136, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %originalBB192alteredBB, %1128
  %1137 = load i32, i32* %13, align 4
  %1138 = add nsw i32 %1137, 20
  %1139 = sext i32 %1138 to i64
  %1140 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1139
  %1141 = load i8, i8* %1140, align 1
  %1142 = zext i8 %1141 to i32
  %1143 = load i32, i32* %7, align 4
  %1144 = icmp eq i32 %1142, %1143
  %1145 = load i32, i32* @x.71
  %1146 = load i32, i32* @y.72
  %1147 = sub i32 %1145, 1
  %1148 = mul i32 %1145, %1147
  %1149 = urem i32 %1148, 2
  %1150 = icmp eq i32 %1149, 0
  %1151 = icmp slt i32 %1146, 10
  %1152 = or i1 %1150, %1151
  br i1 %1152, label %originalBBpart2199, label %originalBB192alteredBB

originalBBpart2199:                               ; preds = %originalBB192
  br i1 %1144, label %1153, label %1181

; <label>:1153:                                   ; preds = %originalBBpart2199
  %1154 = load i32, i32* @x.71
  %1155 = load i32, i32* @y.72
  %1156 = sub i32 %1154, 1
  %1157 = mul i32 %1154, %1156
  %1158 = urem i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = icmp slt i32 %1155, 10
  %1161 = or i1 %1159, %1160
  br i1 %1161, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %originalBB201alteredBB, %1153
  %1162 = load i32, i32* %13, align 4
  %1163 = add nsw i32 %1162, 20
  %1164 = sext i32 %1163 to i64
  %1165 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1164
  %1166 = load i32, i32* %1165, align 4
  %1167 = sext i32 %1166 to i64
  %1168 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1167
  %1169 = getelementptr inbounds %struct.string_data, %struct.string_data* %1168, i32 0, i32 7
  %1170 = load i32, i32* %1169, align 4
  %1171 = load i32, i32* @string_mark, align 4
  %1172 = icmp eq i32 %1170, %1171
  %1173 = load i32, i32* @x.71
  %1174 = load i32, i32* @y.72
  %1175 = sub i32 %1173, 1
  %1176 = mul i32 %1173, %1175
  %1177 = urem i32 %1176, 2
  %1178 = icmp eq i32 %1177, 0
  %1179 = icmp slt i32 %1174, 10
  %1180 = or i1 %1178, %1179
  br i1 %1180, label %originalBBpart2208, label %originalBB201alteredBB

originalBBpart2208:                               ; preds = %originalBB201
  br i1 %1172, label %1244, label %1181

; <label>:1181:                                   ; preds = %originalBBpart2208, %originalBBpart2199
  %1182 = load i32, i32* %13, align 4
  %1183 = sub nsw i32 %1182, 1
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1184
  %1186 = load i8, i8* %1185, align 1
  %1187 = zext i8 %1186 to i32
  %1188 = load i32, i32* %7, align 4
  %1189 = icmp eq i32 %1187, %1188
  br i1 %1189, label %1190, label %1202

; <label>:1190:                                   ; preds = %1181
  %1191 = load i32, i32* %13, align 4
  %1192 = sub nsw i32 %1191, 1
  %1193 = sext i32 %1192 to i64
  %1194 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1193
  %1195 = load i32, i32* %1194, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1196
  %1198 = getelementptr inbounds %struct.string_data, %struct.string_data* %1197, i32 0, i32 7
  %1199 = load i32, i32* %1198, align 4
  %1200 = load i32, i32* @string_mark, align 4
  %1201 = icmp eq i32 %1199, %1200
  br i1 %1201, label %1244, label %1202

; <label>:1202:                                   ; preds = %1190, %1181
  %1203 = load i32, i32* %13, align 4
  %1204 = sub nsw i32 %1203, 20
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1205
  %1207 = load i8, i8* %1206, align 1
  %1208 = zext i8 %1207 to i32
  %1209 = load i32, i32* %7, align 4
  %1210 = icmp eq i32 %1208, %1209
  br i1 %1210, label %1211, label %1223

; <label>:1211:                                   ; preds = %1202
  %1212 = load i32, i32* %13, align 4
  %1213 = sub nsw i32 %1212, 20
  %1214 = sext i32 %1213 to i64
  %1215 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1214
  %1216 = load i32, i32* %1215, align 4
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1217
  %1219 = getelementptr inbounds %struct.string_data, %struct.string_data* %1218, i32 0, i32 7
  %1220 = load i32, i32* %1219, align 4
  %1221 = load i32, i32* @string_mark, align 4
  %1222 = icmp eq i32 %1220, %1221
  br i1 %1222, label %1244, label %1223

; <label>:1223:                                   ; preds = %1211, %1202
  %1224 = load i32, i32* %13, align 4
  %1225 = add nsw i32 %1224, 1
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1226
  %1228 = load i8, i8* %1227, align 1
  %1229 = zext i8 %1228 to i32
  %1230 = load i32, i32* %7, align 4
  %1231 = icmp eq i32 %1229, %1230
  br i1 %1231, label %1232, label %1278

; <label>:1232:                                   ; preds = %1223
  %1233 = load i32, i32* %13, align 4
  %1234 = add nsw i32 %1233, 1
  %1235 = sext i32 %1234 to i64
  %1236 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1235
  %1237 = load i32, i32* %1236, align 4
  %1238 = sext i32 %1237 to i64
  %1239 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1238
  %1240 = getelementptr inbounds %struct.string_data, %struct.string_data* %1239, i32 0, i32 7
  %1241 = load i32, i32* %1240, align 4
  %1242 = load i32, i32* @string_mark, align 4
  %1243 = icmp eq i32 %1241, %1242
  br i1 %1243, label %1244, label %1278

; <label>:1244:                                   ; preds = %1232, %1211, %1190, %originalBBpart2208
  %1245 = load i32*, i32** %9, align 8
  %1246 = icmp ne i32* %1245, null
  br i1 %1246, label %1247, label %1269

; <label>:1247:                                   ; preds = %1244
  %1248 = load i32, i32* @x.71
  %1249 = load i32, i32* @y.72
  %1250 = sub i32 %1248, 1
  %1251 = mul i32 %1248, %1250
  %1252 = urem i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp slt i32 %1249, 10
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1247
  %1256 = load i32, i32* %13, align 4
  %1257 = load i32*, i32** %9, align 8
  %1258 = load i32, i32* %12, align 4
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds i32, i32* %1257, i64 %1259
  store i32 %1256, i32* %1260, align 4
  %1261 = load i32, i32* @x.71
  %1262 = load i32, i32* @y.72
  %1263 = sub i32 %1261, 1
  %1264 = mul i32 %1261, %1263
  %1265 = urem i32 %1264, 2
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp slt i32 %1262, 10
  %1268 = or i1 %1266, %1267
  br i1 %1268, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  br label %1269

; <label>:1269:                                   ; preds = %originalBBpart2212, %1244
  %1270 = load i32, i32* %12, align 4
  %1271 = add nsw i32 %1270, 1
  store i32 %1271, i32* %12, align 4
  %1272 = load i32, i32* %12, align 4
  %1273 = load i32, i32* %8, align 4
  %1274 = icmp sge i32 %1272, %1273
  br i1 %1274, label %1275, label %1277

; <label>:1275:                                   ; preds = %1269
  %1276 = load i32, i32* %12, align 4
  store i32 %1276, i32* %5, align 4
  br label %1329

; <label>:1277:                                   ; preds = %1269
  br label %1278

; <label>:1278:                                   ; preds = %1277, %1232, %1223
  %1279 = load i32, i32* %13, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %1280
  %1282 = load i32, i32* %1281, align 4
  store i32 %1282, i32* %13, align 4
  br label %1283

; <label>:1283:                                   ; preds = %1278
  %1284 = load i32, i32* %13, align 4
  %1285 = load i32, i32* %10, align 4
  %1286 = sext i32 %1285 to i64
  %1287 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 %1286
  %1288 = load i32, i32* %1287, align 4
  %1289 = icmp ne i32 %1284, %1288
  br i1 %1289, label %1128, label %1290

; <label>:1290:                                   ; preds = %1283
  br label %1291

; <label>:1291:                                   ; preds = %1290, %1123
  br label %1292

; <label>:1292:                                   ; preds = %1291
  %1293 = load i32, i32* @x.71
  %1294 = load i32, i32* @y.72
  %1295 = sub i32 %1293, 1
  %1296 = mul i32 %1293, %1295
  %1297 = urem i32 %1296, 2
  %1298 = icmp eq i32 %1297, 0
  %1299 = icmp slt i32 %1294, 10
  %1300 = or i1 %1298, %1299
  br i1 %1300, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1292
  %1301 = load i32, i32* %10, align 4
  %1302 = add nsw i32 %1301, 1
  store i32 %1302, i32* %10, align 4
  %1303 = load i32, i32* @x.71
  %1304 = load i32, i32* @y.72
  %1305 = sub i32 %1303, 1
  %1306 = mul i32 %1303, %1305
  %1307 = urem i32 %1306, 2
  %1308 = icmp eq i32 %1307, 0
  %1309 = icmp slt i32 %1304, 10
  %1310 = or i1 %1308, %1309
  br i1 %1310, label %originalBBpart2232, label %originalBB214alteredBB

originalBBpart2232:                               ; preds = %originalBB214
  br label %894

; <label>:1311:                                   ; preds = %894
  %1312 = load i32, i32* @x.71
  %1313 = load i32, i32* @y.72
  %1314 = sub i32 %1312, 1
  %1315 = mul i32 %1312, %1314
  %1316 = urem i32 %1315, 2
  %1317 = icmp eq i32 %1316, 0
  %1318 = icmp slt i32 %1313, 10
  %1319 = or i1 %1317, %1318
  br i1 %1319, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %originalBB234alteredBB, %1311
  %1320 = load i32, i32* %12, align 4
  store i32 %1320, i32* %5, align 4
  %1321 = load i32, i32* @x.71
  %1322 = load i32, i32* @y.72
  %1323 = sub i32 %1321, 1
  %1324 = mul i32 %1321, %1323
  %1325 = urem i32 %1324, 2
  %1326 = icmp eq i32 %1325, 0
  %1327 = icmp slt i32 %1322, 10
  %1328 = or i1 %1326, %1327
  br i1 %1328, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br label %1329

; <label>:1329:                                   ; preds = %originalBBpart2236, %1275, %1017, %originalBBpart2135, %619, %originalBBpart293, %originalBBpart278, %349, %originalBBpart229, %105
  %1330 = load i32, i32* %5, align 4
  ret i32 %1330

originalBBalteredBB:                              ; preds = %originalBB, %26
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %1331 = load i32, i32* %7, align 4
  %1332 = icmp eq i32 %1331, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %80
  %1333 = load i32*, i32** %9, align 8
  %1334 = icmp ne i32* %1333, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %107
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %156
  %1335 = load i32*, i32** %9, align 8
  %1336 = icmp ne i32* %1335, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %181
  %1337 = load i32, i32* %12, align 4
  %_ = shl i32 %1337, 1
  %_19 = sub i32 %1337, 1
  %gen = mul i32 %_19, 1
  %_20 = sub i32 %1337, 1
  %gen21 = mul i32 %_20, 1
  %_22 = sub i32 0, %1337
  %gen23 = add i32 %_22, 1
  %1338 = add nsw i32 %1337, 1
  store i32 %1338, i32* %12, align 4
  %1339 = load i32, i32* %12, align 4
  %1340 = load i32, i32* %8, align 4
  %1341 = icmp sge i32 %1339, %1340
  br label %originalBB18

originalBB27alteredBB:                            ; preds = %originalBB27, %203
  %1342 = load i32, i32* %12, align 4
  store i32 %1342, i32* %5, align 4
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %221
  %1343 = load i32, i32* @liberty_mark, align 4
  %1344 = load i32, i32* %17, align 4
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1345
  store i32 %1343, i32* %1346, align 4
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %276
  %1347 = load i32, i32* %11, align 4
  %1348 = load %struct.string_data*, %struct.string_data** %18, align 8
  %1349 = getelementptr inbounds %struct.string_data, %struct.string_data* %1348, i32 0, i32 3
  %1350 = load i32, i32* %1349, align 4
  %1351 = icmp slt i32 %1347, %1350
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %298
  %1352 = load %struct.string_data*, %struct.string_data** %18, align 8
  %1353 = getelementptr inbounds %struct.string_data, %struct.string_data* %1352, i32 0, i32 4
  %1354 = load i32, i32* %11, align 4
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds [20 x i32], [20 x i32]* %1353, i64 0, i64 %1355
  %1357 = load i32, i32* %1356, align 4
  store i32 %1357, i32* %13, align 4
  %1358 = load i32, i32* %13, align 4
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1359
  %1361 = load i8, i8* %1360, align 1
  %1362 = zext i8 %1361 to i32
  %1363 = icmp eq i32 %1362, 0
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %360
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %377
  %1364 = load i32, i32* %17, align 4
  store i32 %1364, i32* %19, align 4
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %414
  %1365 = load i32, i32* %19, align 4
  %_52 = shl i32 %1365, 20
  %_53 = sub i32 0, %1365
  %gen54 = add i32 %_53, 20
  %_55 = sub i32 0, %1365
  %gen56 = add i32 %_55, 20
  %_57 = sub i32 %1365, 20
  %gen58 = mul i32 %_57, 20
  %_59 = shl i32 %1365, 20
  %1366 = add nsw i32 %1365, 20
  %1367 = load i32*, i32** %9, align 8
  %1368 = load i32, i32* %12, align 4
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds i32, i32* %1367, i64 %1369
  store i32 %1366, i32* %1370, align 4
  br label %originalBB51

originalBB63alteredBB:                            ; preds = %originalBB63, %437
  %1371 = load i32, i32* %12, align 4
  %_64 = shl i32 %1371, 1
  %_65 = sub i32 0, %1371
  %gen66 = add i32 %_65, 1
  %_67 = sub i32 %1371, 1
  %gen68 = mul i32 %_67, 1
  %_69 = sub i32 %1371, 1
  %gen70 = mul i32 %_69, 1
  %_71 = shl i32 %1371, 1
  %_72 = shl i32 %1371, 1
  %1372 = add nsw i32 %1371, 1
  store i32 %1372, i32* %12, align 4
  %1373 = load i32, i32* %12, align 4
  %1374 = load i32, i32* %8, align 4
  %1375 = icmp sge i32 %1373, %1374
  br label %originalBB63

originalBB76alteredBB:                            ; preds = %originalBB76, %459
  %1376 = load i32, i32* %12, align 4
  store i32 %1376, i32* %5, align 4
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %483
  %1377 = load i32, i32* %19, align 4
  %_81 = sub i32 %1377, 1
  %gen82 = mul i32 %_81, 1
  %_83 = shl i32 %1377, 1
  %1378 = sub nsw i32 %1377, 1
  %1379 = sext i32 %1378 to i64
  %1380 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1379
  %1381 = load i8, i8* %1380, align 1
  %1382 = zext i8 %1381 to i32
  %1383 = icmp eq i32 %1382, 0
  br label %originalBB80

originalBB87alteredBB:                            ; preds = %originalBB87, %515
  %1384 = load i32*, i32** %9, align 8
  %1385 = icmp ne i32* %1384, null
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %547
  %1386 = load i32, i32* %12, align 4
  store i32 %1386, i32* %5, align 4
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %590
  %1387 = load i32, i32* %19, align 4
  %_96 = shl i32 %1387, 20
  %1388 = sub nsw i32 %1387, 20
  %1389 = load i32*, i32** %9, align 8
  %1390 = load i32, i32* %12, align 4
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds i32, i32* %1389, i64 %1391
  store i32 %1388, i32* %1392, align 4
  br label %originalBB95

originalBB100alteredBB:                           ; preds = %originalBB100, %627
  %1393 = load i32, i32* %19, align 4
  %_101 = shl i32 %1393, 1
  %_102 = shl i32 %1393, 1
  %_103 = shl i32 %1393, 1
  %_104 = sub i32 %1393, 1
  %gen105 = mul i32 %_104, 1
  %_106 = sub i32 0, %1393
  %gen107 = add i32 %_106, 1
  %_108 = sub i32 %1393, 1
  %gen109 = mul i32 %_108, 1
  %_110 = sub i32 %1393, 1
  %gen111 = mul i32 %_110, 1
  %1394 = add nsw i32 %1393, 1
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1395
  %1397 = load i8, i8* %1396, align 1
  %1398 = zext i8 %1397 to i32
  %1399 = icmp eq i32 %1398, 0
  br label %originalBB100

originalBB115alteredBB:                           ; preds = %originalBB115, %651
  %1400 = load i32, i32* %19, align 4
  %_116 = sub i32 %1400, 1
  %gen117 = mul i32 %_116, 1
  %_118 = sub i32 %1400, 1
  %gen119 = mul i32 %_118, 1
  %_120 = sub i32 %1400, 1
  %gen121 = mul i32 %_120, 1
  %1401 = add nsw i32 %1400, 1
  %1402 = sext i32 %1401 to i64
  %1403 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1402
  %1404 = load i32, i32* %1403, align 4
  %1405 = load i32, i32* @liberty_mark, align 4
  %1406 = icmp ne i32 %1404, %1405
  br label %originalBB115

originalBB125alteredBB:                           ; preds = %originalBB125, %675
  %1407 = load i32*, i32** %9, align 8
  %1408 = icmp ne i32* %1407, null
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %694
  %1409 = load i32, i32* %19, align 4
  %1410 = add nsw i32 %1409, 1
  %1411 = load i32*, i32** %9, align 8
  %1412 = load i32, i32* %12, align 4
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds i32, i32* %1411, i64 %1413
  store i32 %1410, i32* %1414, align 4
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %723
  %1415 = load i32, i32* %12, align 4
  store i32 %1415, i32* %5, align 4
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %747
  %1416 = load i32, i32* %19, align 4
  %1417 = sext i32 %1416 to i64
  %1418 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %1417
  %1419 = load i32, i32* %1418, align 4
  store i32 %1419, i32* %19, align 4
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %768
  %1420 = load i32, i32* %19, align 4
  %1421 = load i32, i32* %17, align 4
  %1422 = icmp ne i32 %1420, %1421
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %789
  %1423 = load i32, i32* @string_mark, align 4
  %1424 = load i32, i32* %17, align 4
  %1425 = sext i32 %1424 to i64
  %1426 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1425
  %1427 = load i32, i32* %1426, align 4
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1428
  %1430 = getelementptr inbounds %struct.string_data, %struct.string_data* %1429, i32 0, i32 7
  store i32 %1423, i32* %1430, align 4
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %814
  %1431 = load i32, i32* %17, align 4
  %1432 = sext i32 %1431 to i64
  %1433 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1432
  %1434 = load i8, i8* %1433, align 1
  %1435 = zext i8 %1434 to i32
  %1436 = load i32, i32* %7, align 4
  %_150 = shl i32 3, %1436
  %1437 = sub nsw i32 3, %1436
  %1438 = icmp eq i32 %1435, %1437
  br label %originalBB149

originalBB154alteredBB:                           ; preds = %originalBB154, %839
  %1439 = load i32, i32* %17, align 4
  %1440 = sext i32 %1439 to i64
  %1441 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1440
  %1442 = load i32, i32* %1441, align 4
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1443
  %1445 = getelementptr inbounds %struct.string_data, %struct.string_data* %1444, i32 0, i32 3
  %1446 = load i32, i32* %1445, align 4
  %1447 = icmp eq i32 %1446, 1
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %871
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %953
  %1448 = load i32, i32* %13, align 4
  %_163 = sub i32 0, %1448
  %gen164 = add i32 %_163, 20
  %_165 = sub i32 %1448, 20
  %gen166 = mul i32 %_165, 20
  %_167 = sub i32 %1448, 20
  %gen168 = mul i32 %_167, 20
  %1449 = sub nsw i32 %1448, 20
  %1450 = sext i32 %1449 to i64
  %1451 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1450
  %1452 = load i32, i32* %1451, align 4
  %1453 = sext i32 %1452 to i64
  %1454 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1453
  %1455 = getelementptr inbounds %struct.string_data, %struct.string_data* %1454, i32 0, i32 7
  %1456 = load i32, i32* %1455, align 4
  %1457 = load i32, i32* @string_mark, align 4
  %1458 = icmp eq i32 %1456, %1457
  br label %originalBB162

originalBB172alteredBB:                           ; preds = %originalBB172, %1019
  br label %originalBB172

originalBB176alteredBB:                           ; preds = %originalBB176, %1037
  %1459 = load i32, i32* %11, align 4
  %1460 = load i32, i32* %10, align 4
  %1461 = icmp slt i32 %1459, %1460
  br label %originalBB176

originalBB180alteredBB:                           ; preds = %originalBB180, %1057
  %1462 = load i32, i32* %11, align 4
  %1463 = sext i32 %1462 to i64
  %1464 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 %1463
  %1465 = load i32, i32* %1464, align 4
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1466
  %1468 = load i32, i32* %1467, align 4
  %1469 = load i32, i32* %13, align 4
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1470
  %1472 = load i32, i32* %1471, align 4
  %1473 = icmp eq i32 %1468, %1472
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %1086
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %1103
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %1128
  %1474 = load i32, i32* %13, align 4
  %_193 = shl i32 %1474, 20
  %_194 = sub i32 0, %1474
  %gen195 = add i32 %_194, 20
  %_196 = sub i32 0, %1474
  %gen197 = add i32 %_196, 20
  %1475 = add nsw i32 %1474, 20
  %1476 = sext i32 %1475 to i64
  %1477 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1476
  %1478 = load i8, i8* %1477, align 1
  %1479 = zext i8 %1478 to i32
  %1480 = load i32, i32* %7, align 4
  %1481 = icmp eq i32 %1479, %1480
  br label %originalBB192

originalBB201alteredBB:                           ; preds = %originalBB201, %1153
  %1482 = load i32, i32* %13, align 4
  %_202 = sub i32 %1482, 20
  %gen203 = mul i32 %_202, 20
  %_204 = sub i32 0, %1482
  %gen205 = add i32 %_204, 20
  %_206 = shl i32 %1482, 20
  %1483 = add nsw i32 %1482, 20
  %1484 = sext i32 %1483 to i64
  %1485 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1484
  %1486 = load i32, i32* %1485, align 4
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1487
  %1489 = getelementptr inbounds %struct.string_data, %struct.string_data* %1488, i32 0, i32 7
  %1490 = load i32, i32* %1489, align 4
  %1491 = load i32, i32* @string_mark, align 4
  %1492 = icmp eq i32 %1490, %1491
  br label %originalBB201

originalBB210alteredBB:                           ; preds = %originalBB210, %1247
  %1493 = load i32, i32* %13, align 4
  %1494 = load i32*, i32** %9, align 8
  %1495 = load i32, i32* %12, align 4
  %1496 = sext i32 %1495 to i64
  %1497 = getelementptr inbounds i32, i32* %1494, i64 %1496
  store i32 %1493, i32* %1497, align 4
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %1292
  %1498 = load i32, i32* %10, align 4
  %_215 = sub i32 %1498, 1
  %gen216 = mul i32 %_215, 1
  %_217 = sub i32 0, %1498
  %gen218 = add i32 %_217, 1
  %_219 = sub i32 %1498, 1
  %gen220 = mul i32 %_219, 1
  %_221 = sub i32 0, %1498
  %gen222 = add i32 %_221, 1
  %_223 = shl i32 %1498, 1
  %_224 = sub i32 0, %1498
  %gen225 = add i32 %_224, 1
  %_226 = sub i32 0, %1498
  %gen227 = add i32 %_226, 1
  %_228 = sub i32 0, %1498
  %gen229 = add i32 %_228, 1
  %1499 = add nsw i32 %1498, 1
  store i32 %1499, i32* %10, align 4
  br label %originalBB214

originalBB234alteredBB:                           ; preds = %originalBB234, %1311
  %1500 = load i32, i32* %12, align 4
  store i32 %1500, i32* %5, align 4
  br label %originalBB234
}

; Function Attrs: noinline nounwind uwtable
define i32 @find_common_libs(i32, i32, i32, i32*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca [241 x i32], align 16
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store i32 0, i32* %14, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp ult i32 %18, 421
  br i1 %19, label %20, label %44

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = icmp ne i32 %25, 3
  br i1 %26, label %27, label %44

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.73
  %29 = load i32, i32* @y.74
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %27
  %36 = load i32, i32* @x.73
  %37 = load i32, i32* @y.74
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %51

; <label>:44:                                     ; preds = %20, %4
  %45 = load i32, i32* %6, align 4
  %46 = sdiv i32 %45, 20
  %47 = sub nsw i32 %46, 1
  %48 = load i32, i32* %6, align 4
  %49 = srem i32 %48, 20
  %50 = sub nsw i32 %49, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1981, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 %47, i32 %50)
  br label %51

; <label>:51:                                     ; preds = %44, %originalBBpart2
  %52 = load i32, i32* %7, align 4
  %53 = icmp ult i32 %52, 421
  br i1 %53, label %54, label %78

; <label>:54:                                     ; preds = %51
  %55 = load i32, i32* %7, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp ne i32 %59, 3
  br i1 %60, label %61, label %78

; <label>:61:                                     ; preds = %54
  %62 = load i32, i32* @x.73
  %63 = load i32, i32* @y.74
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %61
  %70 = load i32, i32* @x.73
  %71 = load i32, i32* @y.74
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %101

; <label>:78:                                     ; preds = %54, %51
  %79 = load i32, i32* @x.73
  %80 = load i32, i32* @y.74
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %78
  %87 = load i32, i32* %7, align 4
  %88 = sdiv i32 %87, 20
  %89 = sub nsw i32 %88, 1
  %90 = load i32, i32* %7, align 4
  %91 = srem i32 %90, 20
  %92 = sub nsw i32 %91, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1982, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %89, i32 %92)
  %93 = load i32, i32* @x.73
  %94 = load i32, i32* @y.74
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart218, label %originalBB6alteredBB

originalBBpart218:                                ; preds = %originalBB6
  br label %101

; <label>:101:                                    ; preds = %originalBBpart218, %originalBBpart24
  %102 = load i32, i32* @x.73
  %103 = load i32, i32* @y.74
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %101
  %110 = load i32, i32* %6, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 1
  %116 = load i32, i32* @x.73
  %117 = load i32, i32* @y.74
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %115, label %131, label %124

; <label>:124:                                    ; preds = %originalBBpart222
  %125 = load i32, i32* %6, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 2
  br i1 %130, label %131, label %148

; <label>:131:                                    ; preds = %124, %originalBBpart222
  %132 = load i32, i32* @x.73
  %133 = load i32, i32* @y.74
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %131
  %140 = load i32, i32* @x.73
  %141 = load i32, i32* @y.74
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br label %155

; <label>:148:                                    ; preds = %124
  %149 = load i32, i32* %6, align 4
  %150 = sdiv i32 %149, 20
  %151 = sub nsw i32 %150, 1
  %152 = load i32, i32* %6, align 4
  %153 = srem i32 %152, 20
  %154 = sub nsw i32 %153, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1983, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 %151, i32 %154)
  br label %155

; <label>:155:                                    ; preds = %148, %originalBBpart227
  %156 = load i32, i32* @x.73
  %157 = load i32, i32* @y.74
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %155
  %164 = load i32, i32* %7, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 1
  %170 = load i32, i32* @x.73
  %171 = load i32, i32* @y.74
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %169, label %185, label %178

; <label>:178:                                    ; preds = %originalBBpart231
  %179 = load i32, i32* %7, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 2
  br i1 %184, label %185, label %186

; <label>:185:                                    ; preds = %178, %originalBBpart231
  br label %193

; <label>:186:                                    ; preds = %178
  %187 = load i32, i32* %7, align 4
  %188 = sdiv i32 %187, 20
  %189 = sub nsw i32 %188, 1
  %190 = load i32, i32* %7, align 4
  %191 = srem i32 %190, 20
  %192 = sub nsw i32 %191, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1984, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i32 %189, i32 %192)
  br label %193

; <label>:193:                                    ; preds = %186, %185
  %194 = load i32*, i32** %9, align 8
  %195 = icmp ne i32* %194, null
  br i1 %195, label %196, label %197

; <label>:196:                                    ; preds = %193
  br label %204

; <label>:197:                                    ; preds = %193
  %198 = load i32, i32* %6, align 4
  %199 = sdiv i32 %198, 20
  %200 = sub nsw i32 %199, 1
  %201 = load i32, i32* %6, align 4
  %202 = srem i32 %201, 20
  %203 = sub nsw i32 %202, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1985, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i32 0, i32 0), i32 %200, i32 %203)
  br label %204

; <label>:204:                                    ; preds = %197, %196
  %205 = load i32, i32* @x.73
  %206 = load i32, i32* @y.74
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %204
  %213 = load i32, i32* %6, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %214
  %216 = load i32, i32* %215, align 4
  store i32 %216, i32* %16, align 4
  %217 = load i32, i32* %16, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %218
  %220 = getelementptr inbounds %struct.string_data, %struct.string_data* %219, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %12, align 4
  %222 = load i32, i32* %12, align 4
  %223 = load i32, i32* %7, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %227
  %229 = getelementptr inbounds %struct.string_data, %struct.string_data* %228, i32 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = icmp sgt i32 %222, %230
  %232 = load i32, i32* @x.73
  %233 = load i32, i32* @y.74
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %231, label %240, label %253

; <label>:240:                                    ; preds = %originalBBpart235
  %241 = load i32, i32* %7, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %16, align 4
  %245 = load i32, i32* %16, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %246
  %248 = getelementptr inbounds %struct.string_data, %struct.string_data* %247, i32 0, i32 3
  %249 = load i32, i32* %248, align 4
  store i32 %249, i32* %12, align 4
  %250 = load i32, i32* %6, align 4
  store i32 %250, i32* %17, align 4
  %251 = load i32, i32* %7, align 4
  store i32 %251, i32* %6, align 4
  %252 = load i32, i32* %17, align 4
  store i32 %252, i32* %7, align 4
  br label %253

; <label>:253:                                    ; preds = %240, %originalBBpart235
  %254 = load i32, i32* %12, align 4
  %255 = icmp sle i32 %254, 20
  br i1 %255, label %256, label %380

; <label>:256:                                    ; preds = %253
  %257 = load i32, i32* %16, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %258
  %260 = getelementptr inbounds %struct.string_data, %struct.string_data* %259, i32 0, i32 4
  %261 = getelementptr inbounds [20 x i32], [20 x i32]* %260, i32 0, i32 0
  store i32* %261, i32** %11, align 8
  %262 = load i32, i32* %7, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %263
  %265 = load i32, i32* %264, align 4
  store i32 %265, i32* %16, align 4
  %266 = load i32, i32* %16, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %267
  %269 = getelementptr inbounds %struct.string_data, %struct.string_data* %268, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  store i32 %270, i32* %13, align 4
  %271 = load i32, i32* %13, align 4
  %272 = icmp sle i32 %271, 20
  br i1 %272, label %273, label %379

; <label>:273:                                    ; preds = %256
  %274 = load i32, i32* @liberty_mark, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* @liberty_mark, align 4
  store i32 0, i32* %15, align 4
  br label %276

; <label>:276:                                    ; preds = %289, %273
  %277 = load i32, i32* %15, align 4
  %278 = load i32, i32* %12, align 4
  %279 = icmp slt i32 %277, %278
  br i1 %279, label %280, label %292

; <label>:280:                                    ; preds = %276
  %281 = load i32, i32* @liberty_mark, align 4
  %282 = load i32*, i32** %11, align 8
  %283 = load i32, i32* %15, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i32, i32* %282, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %287
  store i32 %281, i32* %288, align 4
  br label %289

; <label>:289:                                    ; preds = %280
  %290 = load i32, i32* %15, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %15, align 4
  br label %276

; <label>:292:                                    ; preds = %276
  %293 = load i32, i32* %16, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %294
  %296 = getelementptr inbounds %struct.string_data, %struct.string_data* %295, i32 0, i32 4
  %297 = getelementptr inbounds [20 x i32], [20 x i32]* %296, i32 0, i32 0
  store i32* %297, i32** %11, align 8
  store i32 0, i32* %15, align 4
  br label %298

; <label>:298:                                    ; preds = %358, %292
  %299 = load i32, i32* %15, align 4
  %300 = load i32, i32* %13, align 4
  %301 = icmp slt i32 %299, %300
  br i1 %301, label %302, label %361

; <label>:302:                                    ; preds = %298
  %303 = load i32*, i32** %11, align 8
  %304 = load i32, i32* %15, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i32, i32* %303, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %308
  %310 = load i8, i8* %309, align 1
  %311 = zext i8 %310 to i32
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %324

; <label>:313:                                    ; preds = %302
  %314 = load i32*, i32** %11, align 8
  %315 = load i32, i32* %15, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds i32, i32* %314, i64 %316
  %318 = load i32, i32* %317, align 4
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %319
  %321 = load i32, i32* %320, align 4
  %322 = load i32, i32* @liberty_mark, align 4
  %323 = icmp ne i32 %321, %322
  br i1 %323, label %357, label %324

; <label>:324:                                    ; preds = %313, %302
  %325 = load i32, i32* %14, align 4
  %326 = load i32, i32* %8, align 4
  %327 = icmp slt i32 %325, %326
  br i1 %327, label %328, label %354

; <label>:328:                                    ; preds = %324
  %329 = load i32, i32* @x.73
  %330 = load i32, i32* @y.74
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %328
  %337 = load i32*, i32** %11, align 8
  %338 = load i32, i32* %15, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i32, i32* %337, i64 %339
  %341 = load i32, i32* %340, align 4
  %342 = load i32*, i32** %9, align 8
  %343 = load i32, i32* %14, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds i32, i32* %342, i64 %344
  store i32 %341, i32* %345, align 4
  %346 = load i32, i32* @x.73
  %347 = load i32, i32* @y.74
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %354

; <label>:354:                                    ; preds = %originalBBpart239, %324
  %355 = load i32, i32* %14, align 4
  %356 = add nsw i32 %355, 1
  store i32 %356, i32* %14, align 4
  br label %357

; <label>:357:                                    ; preds = %354, %313
  br label %358

; <label>:358:                                    ; preds = %357
  %359 = load i32, i32* %15, align 4
  %360 = add nsw i32 %359, 1
  store i32 %360, i32* %15, align 4
  br label %298

; <label>:361:                                    ; preds = %298
  %362 = load i32, i32* @x.73
  %363 = load i32, i32* @y.74
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %361
  %370 = load i32, i32* %14, align 4
  store i32 %370, i32* %5, align 4
  %371 = load i32, i32* @x.73
  %372 = load i32, i32* @y.74
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %653

; <label>:379:                                    ; preds = %256
  br label %401

; <label>:380:                                    ; preds = %253
  %381 = load i32, i32* @x.73
  %382 = load i32, i32* @y.74
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %380
  %389 = load i32, i32* %6, align 4
  %390 = getelementptr inbounds [241 x i32], [241 x i32]* %10, i32 0, i32 0
  %391 = call i32 @findlib(i32 %389, i32 241, i32* %390)
  %392 = getelementptr inbounds [241 x i32], [241 x i32]* %10, i32 0, i32 0
  store i32* %392, i32** %11, align 8
  %393 = load i32, i32* @x.73
  %394 = load i32, i32* @y.74
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %401

; <label>:401:                                    ; preds = %originalBBpart247, %379
  store i32 0, i32* %15, align 4
  br label %402

; <label>:402:                                    ; preds = %originalBBpart298, %401
  %403 = load i32, i32* %15, align 4
  %404 = load i32, i32* %12, align 4
  %405 = icmp slt i32 %403, %404
  br i1 %405, label %406, label %651

; <label>:406:                                    ; preds = %402
  %407 = load i32, i32* @x.73
  %408 = load i32, i32* @y.74
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %406
  %415 = load i32*, i32** %11, align 8
  %416 = load i32, i32* %15, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds i32, i32* %415, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = add nsw i32 %419, 20
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %421
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i32
  %425 = load i32, i32* %7, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %426
  %428 = load i8, i8* %427, align 1
  %429 = zext i8 %428 to i32
  %430 = icmp eq i32 %424, %429
  %431 = load i32, i32* @x.73
  %432 = load i32, i32* @y.74
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBBpart259, label %originalBB49alteredBB

originalBBpart259:                                ; preds = %originalBB49
  br i1 %430, label %439, label %454

; <label>:439:                                    ; preds = %originalBBpart259
  %440 = load i32*, i32** %11, align 8
  %441 = load i32, i32* %15, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds i32, i32* %440, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = add nsw i32 %444, 20
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = load i32, i32* %7, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %450
  %452 = load i32, i32* %451, align 4
  %453 = icmp eq i32 %448, %452
  br i1 %453, label %582, label %454

; <label>:454:                                    ; preds = %439, %originalBBpart259
  %455 = load i32*, i32** %11, align 8
  %456 = load i32, i32* %15, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds i32, i32* %455, i64 %457
  %459 = load i32, i32* %458, align 4
  %460 = sub nsw i32 %459, 1
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %461
  %463 = load i8, i8* %462, align 1
  %464 = zext i8 %463 to i32
  %465 = load i32, i32* %7, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %466
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i32
  %470 = icmp eq i32 %464, %469
  br i1 %470, label %471, label %502

; <label>:471:                                    ; preds = %454
  %472 = load i32, i32* @x.73
  %473 = load i32, i32* @y.74
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %471
  %480 = load i32*, i32** %11, align 8
  %481 = load i32, i32* %15, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i32, i32* %480, i64 %482
  %484 = load i32, i32* %483, align 4
  %485 = sub nsw i32 %484, 1
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = load i32, i32* %7, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = icmp eq i32 %488, %492
  %494 = load i32, i32* @x.73
  %495 = load i32, i32* @y.74
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart269, label %originalBB61alteredBB

originalBBpart269:                                ; preds = %originalBB61
  br i1 %493, label %582, label %502

; <label>:502:                                    ; preds = %originalBBpart269, %454
  %503 = load i32*, i32** %11, align 8
  %504 = load i32, i32* %15, align 4
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds i32, i32* %503, i64 %505
  %507 = load i32, i32* %506, align 4
  %508 = sub nsw i32 %507, 20
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %509
  %511 = load i8, i8* %510, align 1
  %512 = zext i8 %511 to i32
  %513 = load i32, i32* %7, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %514
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i32
  %518 = icmp eq i32 %512, %517
  br i1 %518, label %519, label %550

; <label>:519:                                    ; preds = %502
  %520 = load i32, i32* @x.73
  %521 = load i32, i32* @y.74
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %519
  %528 = load i32*, i32** %11, align 8
  %529 = load i32, i32* %15, align 4
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds i32, i32* %528, i64 %530
  %532 = load i32, i32* %531, align 4
  %533 = sub nsw i32 %532, 20
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = load i32, i32* %7, align 4
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = icmp eq i32 %536, %540
  %542 = load i32, i32* @x.73
  %543 = load i32, i32* @y.74
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart277, label %originalBB71alteredBB

originalBBpart277:                                ; preds = %originalBB71
  br i1 %541, label %582, label %550

; <label>:550:                                    ; preds = %originalBBpart277, %502
  %551 = load i32*, i32** %11, align 8
  %552 = load i32, i32* %15, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds i32, i32* %551, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = add nsw i32 %555, 1
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %557
  %559 = load i8, i8* %558, align 1
  %560 = zext i8 %559 to i32
  %561 = load i32, i32* %7, align 4
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %562
  %564 = load i8, i8* %563, align 1
  %565 = zext i8 %564 to i32
  %566 = icmp eq i32 %560, %565
  br i1 %566, label %567, label %615

; <label>:567:                                    ; preds = %550
  %568 = load i32*, i32** %11, align 8
  %569 = load i32, i32* %15, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds i32, i32* %568, i64 %570
  %572 = load i32, i32* %571, align 4
  %573 = add nsw i32 %572, 1
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = load i32, i32* %7, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %578
  %580 = load i32, i32* %579, align 4
  %581 = icmp eq i32 %576, %580
  br i1 %581, label %582, label %615

; <label>:582:                                    ; preds = %567, %originalBBpart277, %originalBBpart269, %439
  %583 = load i32, i32* @x.73
  %584 = load i32, i32* @y.74
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %582
  %591 = load i32, i32* %14, align 4
  %592 = load i32, i32* %8, align 4
  %593 = icmp slt i32 %591, %592
  %594 = load i32, i32* @x.73
  %595 = load i32, i32* @y.74
  %596 = sub i32 %594, 1
  %597 = mul i32 %594, %596
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %595, 10
  %601 = or i1 %599, %600
  br i1 %601, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br i1 %593, label %602, label %612

; <label>:602:                                    ; preds = %originalBBpart281
  %603 = load i32*, i32** %11, align 8
  %604 = load i32, i32* %15, align 4
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds i32, i32* %603, i64 %605
  %607 = load i32, i32* %606, align 4
  %608 = load i32*, i32** %9, align 8
  %609 = load i32, i32* %14, align 4
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds i32, i32* %608, i64 %610
  store i32 %607, i32* %611, align 4
  br label %612

; <label>:612:                                    ; preds = %602, %originalBBpart281
  %613 = load i32, i32* %14, align 4
  %614 = add nsw i32 %613, 1
  store i32 %614, i32* %14, align 4
  br label %615

; <label>:615:                                    ; preds = %612, %567, %550
  %616 = load i32, i32* @x.73
  %617 = load i32, i32* @y.74
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %615
  %624 = load i32, i32* @x.73
  %625 = load i32, i32* @y.74
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %632

; <label>:632:                                    ; preds = %originalBBpart285
  %633 = load i32, i32* @x.73
  %634 = load i32, i32* @y.74
  %635 = sub i32 %633, 1
  %636 = mul i32 %633, %635
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %634, 10
  %640 = or i1 %638, %639
  br i1 %640, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %632
  %641 = load i32, i32* %15, align 4
  %642 = add nsw i32 %641, 1
  store i32 %642, i32* %15, align 4
  %643 = load i32, i32* @x.73
  %644 = load i32, i32* @y.74
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBBpart298, label %originalBB87alteredBB

originalBBpart298:                                ; preds = %originalBB87
  br label %402

; <label>:651:                                    ; preds = %402
  %652 = load i32, i32* %14, align 4
  store i32 %652, i32* %5, align 4
  br label %653

; <label>:653:                                    ; preds = %651, %originalBBpart243
  %654 = load i32, i32* %5, align 4
  ret i32 %654

originalBBalteredBB:                              ; preds = %originalBB, %27
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %655 = load i32, i32* %7, align 4
  %_ = sub i32 %655, 20
  %gen = mul i32 %_, 20
  %_7 = sub i32 0, %655
  %gen8 = add i32 %_7, 20
  %_9 = sub i32 %655, 20
  %gen10 = mul i32 %_9, 20
  %656 = sdiv i32 %655, 20
  %657 = sub nsw i32 %656, 1
  %658 = load i32, i32* %7, align 4
  %_11 = shl i32 %658, 20
  %_12 = sub i32 0, %658
  %gen13 = add i32 %_12, 20
  %_14 = shl i32 %658, 20
  %659 = srem i32 %658, 20
  %_15 = sub i32 %659, 1
  %gen16 = mul i32 %_15, 1
  %660 = sub nsw i32 %659, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1982, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %657, i32 %660)
  br label %originalBB6

originalBB20alteredBB:                            ; preds = %originalBB20, %101
  %661 = load i32, i32* %6, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %662
  %664 = load i8, i8* %663, align 1
  %665 = zext i8 %664 to i32
  %666 = icmp eq i32 %665, 1
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %131
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %155
  %667 = load i32, i32* %7, align 4
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %668
  %670 = load i8, i8* %669, align 1
  %671 = zext i8 %670 to i32
  %672 = icmp eq i32 %671, 1
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %204
  %673 = load i32, i32* %6, align 4
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %674
  %676 = load i32, i32* %675, align 4
  store i32 %676, i32* %16, align 4
  %677 = load i32, i32* %16, align 4
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %678
  %680 = getelementptr inbounds %struct.string_data, %struct.string_data* %679, i32 0, i32 3
  %681 = load i32, i32* %680, align 4
  store i32 %681, i32* %12, align 4
  %682 = load i32, i32* %12, align 4
  %683 = load i32, i32* %7, align 4
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %684
  %686 = load i32, i32* %685, align 4
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %687
  %689 = getelementptr inbounds %struct.string_data, %struct.string_data* %688, i32 0, i32 3
  %690 = load i32, i32* %689, align 4
  %691 = icmp sgt i32 %682, %690
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %328
  %692 = load i32*, i32** %11, align 8
  %693 = load i32, i32* %15, align 4
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds i32, i32* %692, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = load i32*, i32** %9, align 8
  %698 = load i32, i32* %14, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds i32, i32* %697, i64 %699
  store i32 %696, i32* %700, align 4
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %361
  %701 = load i32, i32* %14, align 4
  store i32 %701, i32* %5, align 4
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %380
  %702 = load i32, i32* %6, align 4
  %703 = getelementptr inbounds [241 x i32], [241 x i32]* %10, i32 0, i32 0
  %704 = call i32 @findlib(i32 %702, i32 241, i32* %703)
  %705 = getelementptr inbounds [241 x i32], [241 x i32]* %10, i32 0, i32 0
  store i32* %705, i32** %11, align 8
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %406
  %706 = load i32*, i32** %11, align 8
  %707 = load i32, i32* %15, align 4
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds i32, i32* %706, i64 %708
  %710 = load i32, i32* %709, align 4
  %_50 = shl i32 %710, 20
  %_51 = sub i32 %710, 20
  %gen52 = mul i32 %_51, 20
  %_53 = shl i32 %710, 20
  %_54 = shl i32 %710, 20
  %_55 = shl i32 %710, 20
  %_56 = shl i32 %710, 20
  %_57 = shl i32 %710, 20
  %711 = add nsw i32 %710, 20
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %712
  %714 = load i8, i8* %713, align 1
  %715 = zext i8 %714 to i32
  %716 = load i32, i32* %7, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %717
  %719 = load i8, i8* %718, align 1
  %720 = zext i8 %719 to i32
  %721 = icmp eq i32 %715, %720
  br label %originalBB49

originalBB61alteredBB:                            ; preds = %originalBB61, %471
  %722 = load i32*, i32** %11, align 8
  %723 = load i32, i32* %15, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds i32, i32* %722, i64 %724
  %726 = load i32, i32* %725, align 4
  %_62 = sub i32 0, %726
  %gen63 = add i32 %_62, 1
  %_64 = sub i32 %726, 1
  %gen65 = mul i32 %_64, 1
  %_66 = sub i32 0, %726
  %gen67 = add i32 %_66, 1
  %727 = sub nsw i32 %726, 1
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %728
  %730 = load i32, i32* %729, align 4
  %731 = load i32, i32* %7, align 4
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %732
  %734 = load i32, i32* %733, align 4
  %735 = icmp eq i32 %730, %734
  br label %originalBB61

originalBB71alteredBB:                            ; preds = %originalBB71, %519
  %736 = load i32*, i32** %11, align 8
  %737 = load i32, i32* %15, align 4
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i32, i32* %736, i64 %738
  %740 = load i32, i32* %739, align 4
  %_72 = sub i32 0, %740
  %gen73 = add i32 %_72, 20
  %_74 = sub i32 0, %740
  %gen75 = add i32 %_74, 20
  %741 = sub nsw i32 %740, 20
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %742
  %744 = load i32, i32* %743, align 4
  %745 = load i32, i32* %7, align 4
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %746
  %748 = load i32, i32* %747, align 4
  %749 = icmp eq i32 %744, %748
  br label %originalBB71

originalBB79alteredBB:                            ; preds = %originalBB79, %582
  %750 = load i32, i32* %14, align 4
  %751 = load i32, i32* %8, align 4
  %752 = icmp slt i32 %750, %751
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %615
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %632
  %753 = load i32, i32* %15, align 4
  %_88 = sub i32 %753, 1
  %gen89 = mul i32 %_88, 1
  %_90 = sub i32 0, %753
  %gen91 = add i32 %_90, 1
  %_92 = sub i32 0, %753
  %gen93 = add i32 %_92, 1
  %_94 = shl i32 %753, 1
  %_95 = sub i32 %753, 1
  %gen96 = mul i32 %_95, 1
  %754 = add nsw i32 %753, 1
  store i32 %754, i32* %15, align 4
  br label %originalBB87
}

; Function Attrs: noinline nounwind uwtable
define i32 @have_common_lib(i32, i32, i32*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca [241 x i32], align 16
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  %14 = load i32, i32* %5, align 4
  %15 = icmp ult i32 %14, 421
  br i1 %15, label %16, label %40

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.75
  %18 = load i32, i32* @y.76
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp ne i32 %29, 3
  %31 = load i32, i32* @x.75
  %32 = load i32, i32* @y.76
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %40

; <label>:39:                                     ; preds = %originalBBpart2
  br label %63

; <label>:40:                                     ; preds = %originalBBpart2, %3
  %41 = load i32, i32* @x.75
  %42 = load i32, i32* @y.76
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %40
  %49 = load i32, i32* %5, align 4
  %50 = sdiv i32 %49, 20
  %51 = sub nsw i32 %50, 1
  %52 = load i32, i32* %5, align 4
  %53 = srem i32 %52, 20
  %54 = sub nsw i32 %53, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2049, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 %51, i32 %54)
  %55 = load i32, i32* @x.75
  %56 = load i32, i32* @y.76
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart217, label %originalBB1alteredBB

originalBBpart217:                                ; preds = %originalBB1
  br label %63

; <label>:63:                                     ; preds = %originalBBpart217, %39
  %64 = load i32, i32* %6, align 4
  %65 = icmp ult i32 %64, 421
  br i1 %65, label %66, label %90

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* @x.75
  %68 = load i32, i32* @y.76
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %66
  %75 = load i32, i32* %6, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = icmp ne i32 %79, 3
  %81 = load i32, i32* @x.75
  %82 = load i32, i32* @y.76
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br i1 %80, label %89, label %90

; <label>:89:                                     ; preds = %originalBBpart221
  br label %97

; <label>:90:                                     ; preds = %originalBBpart221, %63
  %91 = load i32, i32* %6, align 4
  %92 = sdiv i32 %91, 20
  %93 = sub nsw i32 %92, 1
  %94 = load i32, i32* %6, align 4
  %95 = srem i32 %94, 20
  %96 = sub nsw i32 %95, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2050, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %93, i32 %96)
  br label %97

; <label>:97:                                     ; preds = %90, %89
  %98 = load i32, i32* %5, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %127, label %104

; <label>:104:                                    ; preds = %97
  %105 = load i32, i32* @x.75
  %106 = load i32, i32* @y.76
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %104
  %113 = load i32, i32* %5, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = icmp eq i32 %117, 2
  %119 = load i32, i32* @x.75
  %120 = load i32, i32* @y.76
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %118, label %127, label %128

; <label>:127:                                    ; preds = %originalBBpart225, %97
  br label %135

; <label>:128:                                    ; preds = %originalBBpart225
  %129 = load i32, i32* %5, align 4
  %130 = sdiv i32 %129, 20
  %131 = sub nsw i32 %130, 1
  %132 = load i32, i32* %5, align 4
  %133 = srem i32 %132, 20
  %134 = sub nsw i32 %133, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2051, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 %131, i32 %134)
  br label %135

; <label>:135:                                    ; preds = %128, %127
  %136 = load i32, i32* %6, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %165, label %142

; <label>:142:                                    ; preds = %135
  %143 = load i32, i32* @x.75
  %144 = load i32, i32* @y.76
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %142
  %151 = load i32, i32* %6, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp eq i32 %155, 2
  %157 = load i32, i32* @x.75
  %158 = load i32, i32* @y.76
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %156, label %165, label %166

; <label>:165:                                    ; preds = %originalBBpart229, %135
  br label %173

; <label>:166:                                    ; preds = %originalBBpart229
  %167 = load i32, i32* %6, align 4
  %168 = sdiv i32 %167, 20
  %169 = sub nsw i32 %168, 1
  %170 = load i32, i32* %6, align 4
  %171 = srem i32 %170, 20
  %172 = sub nsw i32 %171, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2052, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i32 %169, i32 %172)
  br label %173

; <label>:173:                                    ; preds = %166, %165
  %174 = load i32, i32* @x.75
  %175 = load i32, i32* @y.76
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %173
  %182 = load i32, i32* %5, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  store i32 %185, i32* %12, align 4
  %186 = load i32, i32* %12, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %187
  %189 = getelementptr inbounds %struct.string_data, %struct.string_data* %188, i32 0, i32 3
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %10, align 4
  %191 = load i32, i32* %10, align 4
  %192 = load i32, i32* %6, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %196
  %198 = getelementptr inbounds %struct.string_data, %struct.string_data* %197, i32 0, i32 3
  %199 = load i32, i32* %198, align 4
  %200 = icmp sgt i32 %191, %199
  %201 = load i32, i32* @x.75
  %202 = load i32, i32* @y.76
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %200, label %209, label %238

; <label>:209:                                    ; preds = %originalBBpart233
  %210 = load i32, i32* @x.75
  %211 = load i32, i32* @y.76
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %209
  %218 = load i32, i32* %6, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %12, align 4
  %222 = load i32, i32* %12, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %223
  %225 = getelementptr inbounds %struct.string_data, %struct.string_data* %224, i32 0, i32 3
  %226 = load i32, i32* %225, align 4
  store i32 %226, i32* %10, align 4
  %227 = load i32, i32* %5, align 4
  store i32 %227, i32* %13, align 4
  %228 = load i32, i32* %6, align 4
  store i32 %228, i32* %5, align 4
  %229 = load i32, i32* %13, align 4
  store i32 %229, i32* %6, align 4
  %230 = load i32, i32* @x.75
  %231 = load i32, i32* @y.76
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %238

; <label>:238:                                    ; preds = %originalBBpart237, %originalBBpart233
  %239 = load i32, i32* %10, align 4
  %240 = icmp sle i32 %239, 20
  br i1 %240, label %241, label %247

; <label>:241:                                    ; preds = %238
  %242 = load i32, i32* %12, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %243
  %245 = getelementptr inbounds %struct.string_data, %struct.string_data* %244, i32 0, i32 4
  %246 = getelementptr inbounds [20 x i32], [20 x i32]* %245, i32 0, i32 0
  store i32* %246, i32** %9, align 8
  br label %252

; <label>:247:                                    ; preds = %238
  %248 = load i32, i32* %5, align 4
  %249 = getelementptr inbounds [241 x i32], [241 x i32]* %8, i32 0, i32 0
  %250 = call i32 @findlib(i32 %248, i32 241, i32* %249)
  %251 = getelementptr inbounds [241 x i32], [241 x i32]* %8, i32 0, i32 0
  store i32* %251, i32** %9, align 8
  br label %252

; <label>:252:                                    ; preds = %247, %241
  %253 = load i32, i32* @x.75
  %254 = load i32, i32* @y.76
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %252
  store i32 0, i32* %11, align 4
  %261 = load i32, i32* @x.75
  %262 = load i32, i32* @y.76
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %269

; <label>:269:                                    ; preds = %originalBBpart284, %originalBBpart241
  %270 = load i32, i32* %11, align 4
  %271 = load i32, i32* %10, align 4
  %272 = icmp slt i32 %270, %271
  br i1 %272, label %273, label %496

; <label>:273:                                    ; preds = %269
  %274 = load i32*, i32** %9, align 8
  %275 = load i32, i32* %11, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds i32, i32* %274, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = add nsw i32 %278, 20
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %280
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = load i32, i32* %6, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %285
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i32
  %289 = icmp eq i32 %283, %288
  br i1 %289, label %290, label %305

; <label>:290:                                    ; preds = %273
  %291 = load i32*, i32** %9, align 8
  %292 = load i32, i32* %11, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i32, i32* %291, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = add nsw i32 %295, 20
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = load i32, i32* %6, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = icmp eq i32 %299, %303
  br i1 %304, label %449, label %305

; <label>:305:                                    ; preds = %290, %273
  %306 = load i32*, i32** %9, align 8
  %307 = load i32, i32* %11, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds i32, i32* %306, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = sub nsw i32 %310, 1
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = load i32, i32* %6, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = icmp eq i32 %315, %320
  br i1 %321, label %322, label %337

; <label>:322:                                    ; preds = %305
  %323 = load i32*, i32** %9, align 8
  %324 = load i32, i32* %11, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, i32* %323, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = sub nsw i32 %327, 1
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = load i32, i32* %6, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = icmp eq i32 %331, %335
  br i1 %336, label %449, label %337

; <label>:337:                                    ; preds = %322, %305
  %338 = load i32, i32* @x.75
  %339 = load i32, i32* @y.76
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %337
  %346 = load i32*, i32** %9, align 8
  %347 = load i32, i32* %11, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i32, i32* %346, i64 %348
  %350 = load i32, i32* %349, align 4
  %351 = sub nsw i32 %350, 20
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = load i32, i32* %6, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %357
  %359 = load i8, i8* %358, align 1
  %360 = zext i8 %359 to i32
  %361 = icmp eq i32 %355, %360
  %362 = load i32, i32* @x.75
  %363 = load i32, i32* @y.76
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart247, label %originalBB43alteredBB

originalBBpart247:                                ; preds = %originalBB43
  br i1 %361, label %370, label %401

; <label>:370:                                    ; preds = %originalBBpart247
  %371 = load i32, i32* @x.75
  %372 = load i32, i32* @y.76
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %370
  %379 = load i32*, i32** %9, align 8
  %380 = load i32, i32* %11, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds i32, i32* %379, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = sub nsw i32 %383, 20
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %385
  %387 = load i32, i32* %386, align 4
  %388 = load i32, i32* %6, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = icmp eq i32 %387, %391
  %393 = load i32, i32* @x.75
  %394 = load i32, i32* @y.76
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %392, label %449, label %401

; <label>:401:                                    ; preds = %originalBBpart251, %originalBBpart247
  %402 = load i32, i32* @x.75
  %403 = load i32, i32* @y.76
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %401
  %410 = load i32*, i32** %9, align 8
  %411 = load i32, i32* %11, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds i32, i32* %410, i64 %412
  %414 = load i32, i32* %413, align 4
  %415 = add nsw i32 %414, 1
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %416
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = load i32, i32* %6, align 4
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %421
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i32
  %425 = icmp eq i32 %419, %424
  %426 = load i32, i32* @x.75
  %427 = load i32, i32* @y.76
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart262, label %originalBB53alteredBB

originalBBpart262:                                ; preds = %originalBB53
  br i1 %425, label %434, label %460

; <label>:434:                                    ; preds = %originalBBpart262
  %435 = load i32*, i32** %9, align 8
  %436 = load i32, i32* %11, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i32, i32* %435, i64 %437
  %439 = load i32, i32* %438, align 4
  %440 = add nsw i32 %439, 1
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %441
  %443 = load i32, i32* %442, align 4
  %444 = load i32, i32* %6, align 4
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %445
  %447 = load i32, i32* %446, align 4
  %448 = icmp eq i32 %443, %447
  br i1 %448, label %449, label %460

; <label>:449:                                    ; preds = %434, %originalBBpart251, %322, %290
  %450 = load i32*, i32** %7, align 8
  %451 = icmp ne i32* %450, null
  br i1 %451, label %452, label %459

; <label>:452:                                    ; preds = %449
  %453 = load i32*, i32** %9, align 8
  %454 = load i32, i32* %11, align 4
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i32, i32* %453, i64 %455
  %457 = load i32, i32* %456, align 4
  %458 = load i32*, i32** %7, align 8
  store i32 %457, i32* %458, align 4
  br label %459

; <label>:459:                                    ; preds = %452, %449
  store i32 1, i32* %4, align 4
  br label %497

; <label>:460:                                    ; preds = %434, %originalBBpart262
  %461 = load i32, i32* @x.75
  %462 = load i32, i32* @y.76
  %463 = sub i32 %461, 1
  %464 = mul i32 %461, %463
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %466, %467
  br i1 %468, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %460
  %469 = load i32, i32* @x.75
  %470 = load i32, i32* @y.76
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %477

; <label>:477:                                    ; preds = %originalBBpart266
  %478 = load i32, i32* @x.75
  %479 = load i32, i32* @y.76
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %477
  %486 = load i32, i32* %11, align 4
  %487 = add nsw i32 %486, 1
  store i32 %487, i32* %11, align 4
  %488 = load i32, i32* @x.75
  %489 = load i32, i32* @y.76
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart284, label %originalBB68alteredBB

originalBBpart284:                                ; preds = %originalBB68
  br label %269

; <label>:496:                                    ; preds = %269
  store i32 0, i32* %4, align 4
  br label %497

; <label>:497:                                    ; preds = %496, %459
  %498 = load i32, i32* %4, align 4
  ret i32 %498

originalBBalteredBB:                              ; preds = %originalBB, %16
  %499 = load i32, i32* %5, align 4
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %500
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i32
  %504 = icmp ne i32 %503, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %505 = load i32, i32* %5, align 4
  %_ = sub i32 0, %505
  %gen = add i32 %_, 20
  %_2 = shl i32 %505, 20
  %506 = sdiv i32 %505, 20
  %_3 = sub i32 0, %506
  %gen4 = add i32 %_3, 1
  %507 = sub nsw i32 %506, 1
  %508 = load i32, i32* %5, align 4
  %_5 = sub i32 %508, 20
  %gen6 = mul i32 %_5, 20
  %509 = srem i32 %508, 20
  %_7 = sub i32 0, %509
  %gen8 = add i32 %_7, 1
  %_9 = shl i32 %509, 1
  %_10 = sub i32 0, %509
  %gen11 = add i32 %_10, 1
  %_12 = sub i32 0, %509
  %gen13 = add i32 %_12, 1
  %_14 = sub i32 0, %509
  %gen15 = add i32 %_14, 1
  %510 = sub nsw i32 %509, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2049, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 %507, i32 %510)
  br label %originalBB1

originalBB19alteredBB:                            ; preds = %originalBB19, %66
  %511 = load i32, i32* %6, align 4
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %512
  %514 = load i8, i8* %513, align 1
  %515 = zext i8 %514 to i32
  %516 = icmp ne i32 %515, 3
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %104
  %517 = load i32, i32* %5, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %518
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  %522 = icmp eq i32 %521, 2
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %142
  %523 = load i32, i32* %6, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %524
  %526 = load i8, i8* %525, align 1
  %527 = zext i8 %526 to i32
  %528 = icmp eq i32 %527, 2
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %173
  %529 = load i32, i32* %5, align 4
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %530
  %532 = load i32, i32* %531, align 4
  store i32 %532, i32* %12, align 4
  %533 = load i32, i32* %12, align 4
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %534
  %536 = getelementptr inbounds %struct.string_data, %struct.string_data* %535, i32 0, i32 3
  %537 = load i32, i32* %536, align 4
  store i32 %537, i32* %10, align 4
  %538 = load i32, i32* %10, align 4
  %539 = load i32, i32* %6, align 4
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %540
  %542 = load i32, i32* %541, align 4
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %543
  %545 = getelementptr inbounds %struct.string_data, %struct.string_data* %544, i32 0, i32 3
  %546 = load i32, i32* %545, align 4
  %547 = icmp sgt i32 %538, %546
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %209
  %548 = load i32, i32* %6, align 4
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %549
  %551 = load i32, i32* %550, align 4
  store i32 %551, i32* %12, align 4
  %552 = load i32, i32* %12, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %553
  %555 = getelementptr inbounds %struct.string_data, %struct.string_data* %554, i32 0, i32 3
  %556 = load i32, i32* %555, align 4
  store i32 %556, i32* %10, align 4
  %557 = load i32, i32* %5, align 4
  store i32 %557, i32* %13, align 4
  %558 = load i32, i32* %6, align 4
  store i32 %558, i32* %5, align 4
  %559 = load i32, i32* %13, align 4
  store i32 %559, i32* %6, align 4
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %252
  store i32 0, i32* %11, align 4
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %337
  %560 = load i32*, i32** %9, align 8
  %561 = load i32, i32* %11, align 4
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds i32, i32* %560, i64 %562
  %564 = load i32, i32* %563, align 4
  %_44 = sub i32 0, %564
  %gen45 = add i32 %_44, 20
  %565 = sub nsw i32 %564, 20
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %566
  %568 = load i8, i8* %567, align 1
  %569 = zext i8 %568 to i32
  %570 = load i32, i32* %6, align 4
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %571
  %573 = load i8, i8* %572, align 1
  %574 = zext i8 %573 to i32
  %575 = icmp eq i32 %569, %574
  br label %originalBB43

originalBB49alteredBB:                            ; preds = %originalBB49, %370
  %576 = load i32*, i32** %9, align 8
  %577 = load i32, i32* %11, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds i32, i32* %576, i64 %578
  %580 = load i32, i32* %579, align 4
  %581 = sub nsw i32 %580, 20
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  %585 = load i32, i32* %6, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %586
  %588 = load i32, i32* %587, align 4
  %589 = icmp eq i32 %584, %588
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %401
  %590 = load i32*, i32** %9, align 8
  %591 = load i32, i32* %11, align 4
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds i32, i32* %590, i64 %592
  %594 = load i32, i32* %593, align 4
  %_54 = sub i32 0, %594
  %gen55 = add i32 %_54, 1
  %_56 = sub i32 0, %594
  %gen57 = add i32 %_56, 1
  %_58 = sub i32 %594, 1
  %gen59 = mul i32 %_58, 1
  %_60 = shl i32 %594, 1
  %595 = add nsw i32 %594, 1
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %596
  %598 = load i8, i8* %597, align 1
  %599 = zext i8 %598 to i32
  %600 = load i32, i32* %6, align 4
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %601
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i32
  %605 = icmp eq i32 %599, %604
  br label %originalBB53

originalBB64alteredBB:                            ; preds = %originalBB64, %460
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %477
  %606 = load i32, i32* %11, align 4
  %_69 = sub i32 %606, 1
  %gen70 = mul i32 %_69, 1
  %_71 = sub i32 %606, 1
  %gen72 = mul i32 %_71, 1
  %_73 = sub i32 %606, 1
  %gen74 = mul i32 %_73, 1
  %_75 = shl i32 %606, 1
  %_76 = sub i32 %606, 1
  %gen77 = mul i32 %_76, 1
  %_78 = sub i32 0, %606
  %gen79 = add i32 %_78, 1
  %_80 = sub i32 0, %606
  %gen81 = add i32 %_80, 1
  %_82 = shl i32 %606, 1
  %607 = add nsw i32 %606, 1
  store i32 %607, i32* %11, align 4
  br label %originalBB68
}

; Function Attrs: noinline nounwind uwtable
define i32 @countstones(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 421
  br i1 %4, label %5, label %13

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp ne i32 %10, 3
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %5
  br label %20

; <label>:13:                                     ; preds = %5, %1
  %14 = load i32, i32* %2, align 4
  %15 = sdiv i32 %14, 20
  %16 = sub nsw i32 %15, 1
  %17 = load i32, i32* %2, align 4
  %18 = srem i32 %17, 20
  %19 = sub nsw i32 %18, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2093, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 %16, i32 %19)
  br label %20

; <label>:20:                                     ; preds = %13, %12
  %21 = load i32, i32* @x.77
  %22 = load i32, i32* @y.78
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %20
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %33, 1
  %35 = load i32, i32* @x.77
  %36 = load i32, i32* @y.78
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %34, label %66, label %43

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i32, i32* @x.77
  %45 = load i32, i32* @y.78
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %43
  %52 = load i32, i32* %2, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp eq i32 %56, 2
  %58 = load i32, i32* @x.77
  %59 = load i32, i32* @y.78
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %66, label %67

; <label>:66:                                     ; preds = %originalBBpart24, %originalBBpart2
  br label %90

; <label>:67:                                     ; preds = %originalBBpart24
  %68 = load i32, i32* @x.77
  %69 = load i32, i32* @y.78
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %67
  %76 = load i32, i32* %2, align 4
  %77 = sdiv i32 %76, 20
  %78 = sub nsw i32 %77, 1
  %79 = load i32, i32* %2, align 4
  %80 = srem i32 %79, 20
  %81 = sub nsw i32 %80, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2094, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %78, i32 %81)
  %82 = load i32, i32* @x.77
  %83 = load i32, i32* @y.78
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart223, label %originalBB6alteredBB

originalBBpart223:                                ; preds = %originalBB6
  br label %90

; <label>:90:                                     ; preds = %originalBBpart223, %66
  %91 = load i32, i32* %2, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %95
  %97 = getelementptr inbounds %struct.string_data, %struct.string_data* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  ret i32 %98

originalBBalteredBB:                              ; preds = %originalBB, %20
  %99 = load i32, i32* %2, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp eq i32 %103, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %105 = load i32, i32* %2, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %67
  %111 = load i32, i32* %2, align 4
  %_ = shl i32 %111, 20
  %_7 = sub i32 0, %111
  %gen = add i32 %_7, 20
  %_8 = sub i32 0, %111
  %gen9 = add i32 %_8, 20
  %112 = sdiv i32 %111, 20
  %_10 = sub i32 0, %112
  %gen11 = add i32 %_10, 1
  %_12 = shl i32 %112, 1
  %113 = sub nsw i32 %112, 1
  %114 = load i32, i32* %2, align 4
  %_13 = sub i32 0, %114
  %gen14 = add i32 %_13, 20
  %_15 = sub i32 0, %114
  %gen16 = add i32 %_15, 20
  %_17 = shl i32 %114, 20
  %_18 = sub i32 0, %114
  %gen19 = add i32 %_18, 20
  %_20 = shl i32 %114, 20
  %115 = srem i32 %114, 20
  %_21 = shl i32 %115, 1
  %116 = sub nsw i32 %115, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2094, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %113, i32 %116)
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @findstones(i32, i32, i32*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32* %2, i32** %6, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp ult i32 %11, 421
  br i1 %12, label %13, label %37

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.79
  %15 = load i32, i32* @y.80
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load i32, i32* %4, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = icmp ne i32 %26, 3
  %28 = load i32, i32* @x.79
  %29 = load i32, i32* @y.80
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %37

; <label>:36:                                     ; preds = %originalBBpart2
  br label %60

; <label>:37:                                     ; preds = %originalBBpart2, %3
  %38 = load i32, i32* @x.79
  %39 = load i32, i32* @y.80
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %37
  %46 = load i32, i32* %4, align 4
  %47 = sdiv i32 %46, 20
  %48 = sub nsw i32 %47, 1
  %49 = load i32, i32* %4, align 4
  %50 = srem i32 %49, 20
  %51 = sub nsw i32 %50, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2113, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 %48, i32 %51)
  %52 = load i32, i32* @x.79
  %53 = load i32, i32* @y.80
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart231, label %originalBB1alteredBB

originalBBpart231:                                ; preds = %originalBB1
  br label %60

; <label>:60:                                     ; preds = %originalBBpart231, %36
  %61 = load i32, i32* @x.79
  %62 = load i32, i32* @y.80
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %60
  %69 = load i32, i32* %4, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = icmp eq i32 %73, 1
  %75 = load i32, i32* @x.79
  %76 = load i32, i32* @y.80
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %74, label %90, label %83

; <label>:83:                                     ; preds = %originalBBpart235
  %84 = load i32, i32* %4, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %90, label %91

; <label>:90:                                     ; preds = %83, %originalBBpart235
  br label %98

; <label>:91:                                     ; preds = %83
  %92 = load i32, i32* %4, align 4
  %93 = sdiv i32 %92, 20
  %94 = sub nsw i32 %93, 1
  %95 = load i32, i32* %4, align 4
  %96 = srem i32 %95, 20
  %97 = sub nsw i32 %96, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2114, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %94, i32 %97)
  br label %98

; <label>:98:                                     ; preds = %91, %90
  %99 = load i32, i32* @x.79
  %100 = load i32, i32* @y.80
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %98
  %107 = load i32, i32* %4, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %7, align 4
  %111 = load i32, i32* %7, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %112
  %114 = getelementptr inbounds %struct.string_data, %struct.string_data* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %8, align 4
  %116 = load i32, i32* %7, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %117
  %119 = getelementptr inbounds %struct.string_data, %struct.string_data* %118, i32 0, i32 2
  %120 = load i32, i32* %119, align 8
  store i32 %120, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %121 = load i32, i32* @x.79
  %122 = load i32, i32* @y.80
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %129

; <label>:129:                                    ; preds = %originalBBpart247, %originalBBpart239
  %130 = load i32, i32* %10, align 4
  %131 = load i32, i32* %5, align 4
  %132 = icmp slt i32 %130, %131
  br i1 %132, label %133, label %137

; <label>:133:                                    ; preds = %129
  %134 = load i32, i32* %10, align 4
  %135 = load i32, i32* %8, align 4
  %136 = icmp slt i32 %134, %135
  br label %137

; <label>:137:                                    ; preds = %133, %129
  %138 = phi i1 [ false, %129 ], [ %136, %133 ]
  br i1 %138, label %139, label %184

; <label>:139:                                    ; preds = %137
  %140 = load i32, i32* @x.79
  %141 = load i32, i32* @y.80
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %139
  %148 = load i32, i32* %9, align 4
  %149 = load i32*, i32** %6, align 8
  %150 = load i32, i32* %10, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %149, i64 %151
  store i32 %148, i32* %152, align 4
  %153 = load i32, i32* %9, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %9, align 4
  %157 = load i32, i32* @x.79
  %158 = load i32, i32* @y.80
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %165

; <label>:165:                                    ; preds = %originalBBpart243
  %166 = load i32, i32* @x.79
  %167 = load i32, i32* @y.80
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %165
  %174 = load i32, i32* %10, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %10, align 4
  %176 = load i32, i32* @x.79
  %177 = load i32, i32* @y.80
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %129

; <label>:184:                                    ; preds = %137
  %185 = load i32, i32* @x.79
  %186 = load i32, i32* @y.80
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %184
  %193 = load i32, i32* %8, align 4
  %194 = load i32, i32* @x.79
  %195 = load i32, i32* @y.80
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  ret i32 %193

originalBBalteredBB:                              ; preds = %originalBB, %13
  %202 = load i32, i32* %4, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = icmp ne i32 %206, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %208 = load i32, i32* %4, align 4
  %_ = sub i32 0, %208
  %gen = add i32 %_, 20
  %_2 = shl i32 %208, 20
  %_3 = sub i32 0, %208
  %gen4 = add i32 %_3, 20
  %_5 = sub i32 0, %208
  %gen6 = add i32 %_5, 20
  %_7 = sub i32 0, %208
  %gen8 = add i32 %_7, 20
  %209 = sdiv i32 %208, 20
  %_9 = sub i32 %209, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 %209, 1
  %gen12 = mul i32 %_11, 1
  %_13 = shl i32 %209, 1
  %210 = sub nsw i32 %209, 1
  %211 = load i32, i32* %4, align 4
  %_14 = sub i32 %211, 20
  %gen15 = mul i32 %_14, 20
  %_16 = sub i32 0, %211
  %gen17 = add i32 %_16, 20
  %_18 = sub i32 0, %211
  %gen19 = add i32 %_18, 20
  %212 = srem i32 %211, 20
  %_20 = sub i32 0, %212
  %gen21 = add i32 %_20, 1
  %_22 = shl i32 %212, 1
  %_23 = sub i32 0, %212
  %gen24 = add i32 %_23, 1
  %_25 = shl i32 %212, 1
  %_26 = sub i32 0, %212
  %gen27 = add i32 %_26, 1
  %_28 = shl i32 %212, 1
  %_29 = shl i32 %212, 1
  %213 = sub nsw i32 %212, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2113, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 %210, i32 %213)
  br label %originalBB1

originalBB33alteredBB:                            ; preds = %originalBB33, %60
  %214 = load i32, i32* %4, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = icmp eq i32 %218, 1
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %98
  %220 = load i32, i32* %4, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %221
  %223 = load i32, i32* %222, align 4
  store i32 %223, i32* %7, align 4
  %224 = load i32, i32* %7, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %225
  %227 = getelementptr inbounds %struct.string_data, %struct.string_data* %226, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  store i32 %228, i32* %8, align 4
  %229 = load i32, i32* %7, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %230
  %232 = getelementptr inbounds %struct.string_data, %struct.string_data* %231, i32 0, i32 2
  %233 = load i32, i32* %232, align 8
  store i32 %233, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %139
  %234 = load i32, i32* %9, align 4
  %235 = load i32*, i32** %6, align 8
  %236 = load i32, i32* %10, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds i32, i32* %235, i64 %237
  store i32 %234, i32* %238, align 4
  %239 = load i32, i32* %9, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %240
  %242 = load i32, i32* %241, align 4
  store i32 %242, i32* %9, align 4
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %165
  %243 = load i32, i32* %10, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %10, align 4
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %184
  %245 = load i32, i32* %8, align 4
  br label %originalBB49
}

; Function Attrs: noinline nounwind uwtable
define i32 @chainlinks(i32, i32*) #0 {
  %3 = load i32, i32* @x.81
  %4 = load i32, i32* @y.82
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca %struct.string_data*, align 8
  %14 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32* %1, i32** %12, align 8
  %15 = load i32, i32* %11, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 1
  %21 = load i32, i32* @x.81
  %22 = load i32, i32* @y.82
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %36, label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* %11, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %53

; <label>:36:                                     ; preds = %29, %originalBBpart2
  %37 = load i32, i32* @x.81
  %38 = load i32, i32* @y.82
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %36
  %45 = load i32, i32* @x.81
  %46 = load i32, i32* @y.82
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %60

; <label>:53:                                     ; preds = %29
  %54 = load i32, i32* %11, align 4
  %55 = sdiv i32 %54, 20
  %56 = sub nsw i32 %55, 1
  %57 = load i32, i32* %11, align 4
  %58 = srem i32 %57, 20
  %59 = sub nsw i32 %58, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2140, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %56, i32 %59)
  br label %60

; <label>:60:                                     ; preds = %53, %originalBBpart24
  %61 = load i32, i32* %11, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %65
  store %struct.string_data* %66, %struct.string_data** %13, align 8
  store i32 0, i32* %14, align 4
  br label %67

; <label>:67:                                     ; preds = %originalBBpart218, %60
  %68 = load i32, i32* %14, align 4
  %69 = load %struct.string_data*, %struct.string_data** %13, align 8
  %70 = getelementptr inbounds %struct.string_data, %struct.string_data* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %68, %71
  br i1 %72, label %73, label %107

; <label>:73:                                     ; preds = %67
  %74 = load %struct.string_data*, %struct.string_data** %13, align 8
  %75 = getelementptr inbounds %struct.string_data, %struct.string_data* %74, i32 0, i32 6
  %76 = load i32, i32* %14, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [160 x i32], [160 x i32]* %75, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %80
  %82 = getelementptr inbounds %struct.string_data, %struct.string_data* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = load i32*, i32** %12, align 8
  %85 = load i32, i32* %14, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %84, i64 %86
  store i32 %83, i32* %87, align 4
  br label %88

; <label>:88:                                     ; preds = %73
  %89 = load i32, i32* @x.81
  %90 = load i32, i32* @y.82
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %88
  %97 = load i32, i32* %14, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %14, align 4
  %99 = load i32, i32* @x.81
  %100 = load i32, i32* @y.82
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart218, label %originalBB6alteredBB

originalBBpart218:                                ; preds = %originalBB6
  br label %67

; <label>:107:                                    ; preds = %67
  %108 = load %struct.string_data*, %struct.string_data** %13, align 8
  %109 = getelementptr inbounds %struct.string_data, %struct.string_data* %108, i32 0, i32 5
  %110 = load i32, i32* %109, align 4
  ret i32 %110

originalBBalteredBB:                              ; preds = %originalBB, %2
  %111 = alloca i32, align 4
  %112 = alloca i32*, align 8
  %113 = alloca %struct.string_data*, align 8
  %114 = alloca i32, align 4
  store i32 %0, i32* %111, align 4
  store i32* %1, i32** %112, align 8
  %115 = load i32, i32* %111, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  %121 = load i32, i32* %14, align 4
  %_ = sub i32 %121, 1
  %gen = mul i32 %_, 1
  %_7 = sub i32 0, %121
  %gen8 = add i32 %_7, 1
  %_9 = sub i32 %121, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 0, %121
  %gen12 = add i32 %_11, 1
  %_13 = shl i32 %121, 1
  %_14 = shl i32 %121, 1
  %_15 = sub i32 0, %121
  %gen16 = add i32 %_15, 1
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %14, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @chainlinks2(i32, i32*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.string_data*, align 8
  %8 = alloca %struct.string_data*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32* %1, i32** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %24, label %17

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %17, %3
  br label %48

; <label>:25:                                     ; preds = %17
  %26 = load i32, i32* @x.83
  %27 = load i32, i32* @y.84
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %25
  %34 = load i32, i32* %4, align 4
  %35 = sdiv i32 %34, 20
  %36 = sub nsw i32 %35, 1
  %37 = load i32, i32* %4, align 4
  %38 = srem i32 %37, 20
  %39 = sub nsw i32 %38, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2165, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %36, i32 %39)
  %40 = load i32, i32* @x.83
  %41 = load i32, i32* @y.84
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:48:                                     ; preds = %originalBBpart2, %24
  store i32 0, i32* %10, align 4
  %49 = load i32, i32* %4, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %53
  store %struct.string_data* %54, %struct.string_data** %7, align 8
  store i32 0, i32* %9, align 4
  br label %55

; <label>:55:                                     ; preds = %101, %48
  %56 = load i32, i32* %9, align 4
  %57 = load %struct.string_data*, %struct.string_data** %7, align 8
  %58 = getelementptr inbounds %struct.string_data, %struct.string_data* %57, i32 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %56, %59
  br i1 %60, label %61, label %104

; <label>:61:                                     ; preds = %55
  %62 = load %struct.string_data*, %struct.string_data** %7, align 8
  %63 = getelementptr inbounds %struct.string_data, %struct.string_data* %62, i32 0, i32 6
  %64 = load i32, i32* %9, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [160 x i32], [160 x i32]* %63, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %68
  store %struct.string_data* %69, %struct.string_data** %8, align 8
  %70 = load %struct.string_data*, %struct.string_data** %8, align 8
  %71 = getelementptr inbounds %struct.string_data, %struct.string_data* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = load i32, i32* %6, align 4
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %75, label %84

; <label>:75:                                     ; preds = %61
  %76 = load %struct.string_data*, %struct.string_data** %8, align 8
  %77 = getelementptr inbounds %struct.string_data, %struct.string_data* %76, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = load i32*, i32** %5, align 8
  %80 = load i32, i32* %10, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %10, align 4
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds i32, i32* %79, i64 %82
  store i32 %78, i32* %83, align 4
  br label %84

; <label>:84:                                     ; preds = %75, %61
  %85 = load i32, i32* @x.83
  %86 = load i32, i32* @y.84
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %84
  %93 = load i32, i32* @x.83
  %94 = load i32, i32* @y.84
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %101

; <label>:101:                                    ; preds = %originalBBpart221
  %102 = load i32, i32* %9, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %9, align 4
  br label %55

; <label>:104:                                    ; preds = %55
  %105 = load i32, i32* @x.83
  %106 = load i32, i32* @y.84
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %104
  %113 = load i32, i32* %10, align 4
  %114 = load i32, i32* @x.83
  %115 = load i32, i32* @y.84
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  ret i32 %113

originalBBalteredBB:                              ; preds = %originalBB, %25
  %122 = load i32, i32* %4, align 4
  %_ = sub i32 %122, 20
  %gen = mul i32 %_, 20
  %_1 = shl i32 %122, 20
  %123 = sdiv i32 %122, 20
  %_2 = sub i32 0, %123
  %gen3 = add i32 %_2, 1
  %124 = sub nsw i32 %123, 1
  %125 = load i32, i32* %4, align 4
  %_4 = shl i32 %125, 20
  %_5 = sub i32 %125, 20
  %gen6 = mul i32 %_5, 20
  %_7 = sub i32 0, %125
  %gen8 = add i32 %_7, 20
  %_9 = sub i32 0, %125
  %gen10 = add i32 %_9, 20
  %_11 = sub i32 %125, 20
  %gen12 = mul i32 %_11, 20
  %_13 = sub i32 %125, 20
  %gen14 = mul i32 %_13, 20
  %126 = srem i32 %125, 20
  %_15 = sub i32 %126, 1
  %gen16 = mul i32 %_15, 1
  %_17 = sub i32 0, %126
  %gen18 = add i32 %_17, 1
  %127 = sub nsw i32 %126, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2165, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %124, i32 %127)
  br label %originalBB

originalBB19alteredBB:                            ; preds = %originalBB19, %84
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %104
  %128 = load i32, i32* %10, align 4
  br label %originalBB23
}

; Function Attrs: noinline nounwind uwtable
define i32 @chainlinks3(i32, i32*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.string_data*, align 8
  %8 = alloca %struct.string_data*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32* %1, i32** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %24, label %17

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %17, %3
  br label %32

; <label>:25:                                     ; preds = %17
  %26 = load i32, i32* %4, align 4
  %27 = sdiv i32 %26, 20
  %28 = sub nsw i32 %27, 1
  %29 = load i32, i32* %4, align 4
  %30 = srem i32 %29, 20
  %31 = sub nsw i32 %30, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2193, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %28, i32 %31)
  br label %32

; <label>:32:                                     ; preds = %25, %24
  %33 = load i32, i32* @x.85
  %34 = load i32, i32* @y.86
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %32
  store i32 0, i32* %10, align 4
  %41 = load i32, i32* %4, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %45
  store %struct.string_data* %46, %struct.string_data** %7, align 8
  store i32 0, i32* %9, align 4
  %47 = load i32, i32* @x.85
  %48 = load i32, i32* @y.86
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %55

; <label>:55:                                     ; preds = %101, %originalBBpart2
  %56 = load i32, i32* @x.85
  %57 = load i32, i32* @y.86
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %55
  %64 = load i32, i32* %9, align 4
  %65 = load %struct.string_data*, %struct.string_data** %7, align 8
  %66 = getelementptr inbounds %struct.string_data, %struct.string_data* %65, i32 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %64, %67
  %69 = load i32, i32* @x.85
  %70 = load i32, i32* @y.86
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %68, label %77, label %104

; <label>:77:                                     ; preds = %originalBBpart24
  %78 = load %struct.string_data*, %struct.string_data** %7, align 8
  %79 = getelementptr inbounds %struct.string_data, %struct.string_data* %78, i32 0, i32 6
  %80 = load i32, i32* %9, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [160 x i32], [160 x i32]* %79, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %84
  store %struct.string_data* %85, %struct.string_data** %8, align 8
  %86 = load %struct.string_data*, %struct.string_data** %8, align 8
  %87 = getelementptr inbounds %struct.string_data, %struct.string_data* %86, i32 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = load i32, i32* %6, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %91, label %100

; <label>:91:                                     ; preds = %77
  %92 = load %struct.string_data*, %struct.string_data** %8, align 8
  %93 = getelementptr inbounds %struct.string_data, %struct.string_data* %92, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = load i32*, i32** %5, align 8
  %96 = load i32, i32* %10, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %10, align 4
  %98 = sext i32 %96 to i64
  %99 = getelementptr inbounds i32, i32* %95, i64 %98
  store i32 %94, i32* %99, align 4
  br label %100

; <label>:100:                                    ; preds = %91, %77
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i32, i32* %9, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %9, align 4
  br label %55

; <label>:104:                                    ; preds = %originalBBpart24
  %105 = load i32, i32* %10, align 4
  ret i32 %105

originalBBalteredBB:                              ; preds = %originalBB, %32
  store i32 0, i32* %10, align 4
  %106 = load i32, i32* %4, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %110
  store %struct.string_data* %111, %struct.string_data** %7, align 8
  store i32 0, i32* %9, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %112 = load i32, i32* %9, align 4
  %113 = load %struct.string_data*, %struct.string_data** %7, align 8
  %114 = getelementptr inbounds %struct.string_data, %struct.string_data* %113, i32 0, i32 5
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %112, %115
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define i32 @extended_chainlinks(i32, i32*, i32) #0 {
  %4 = load i32, i32* @x.87
  %5 = load i32, i32* @y.88
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.string_data*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca [241 x i32], align 16
  %20 = alloca i32, align 4
  store i32 %0, i32* %12, align 4
  store i32* %1, i32** %13, align 8
  store i32 %2, i32* %14, align 4
  %21 = load i32, i32* %12, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 1
  %27 = load i32, i32* @x.87
  %28 = load i32, i32* @y.88
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %58, label %35

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.87
  %37 = load i32, i32* @y.88
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = load i32, i32* %12, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = icmp eq i32 %48, 2
  %50 = load i32, i32* @x.87
  %51 = load i32, i32* @y.88
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75

; <label>:58:                                     ; preds = %originalBBpart24, %originalBBpart2
  %59 = load i32, i32* @x.87
  %60 = load i32, i32* @y.88
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %58
  %67 = load i32, i32* @x.87
  %68 = load i32, i32* @y.88
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %82

; <label>:75:                                     ; preds = %originalBBpart24
  %76 = load i32, i32* %12, align 4
  %77 = sdiv i32 %76, 20
  %78 = sub nsw i32 %77, 1
  %79 = load i32, i32* %12, align 4
  %80 = srem i32 %79, 20
  %81 = sub nsw i32 %80, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2227, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %78, i32 %81)
  br label %82

; <label>:82:                                     ; preds = %75, %originalBBpart28
  %83 = load i32, i32* %12, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %87
  store %struct.string_data* %88, %struct.string_data** %15, align 8
  %89 = load i32, i32* @string_mark, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* @string_mark, align 4
  store i32 0, i32* %16, align 4
  br label %91

; <label>:91:                                     ; preds = %124, %82
  %92 = load i32, i32* %16, align 4
  %93 = load %struct.string_data*, %struct.string_data** %15, align 8
  %94 = getelementptr inbounds %struct.string_data, %struct.string_data* %93, i32 0, i32 5
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %92, %95
  br i1 %96, label %97, label %127

; <label>:97:                                     ; preds = %91
  %98 = load %struct.string_data*, %struct.string_data** %15, align 8
  %99 = getelementptr inbounds %struct.string_data, %struct.string_data* %98, i32 0, i32 6
  %100 = load i32, i32* %16, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [160 x i32], [160 x i32]* %99, i64 0, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %104
  %106 = getelementptr inbounds %struct.string_data, %struct.string_data* %105, i32 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = load i32*, i32** %13, align 8
  %109 = load i32, i32* %16, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  store i32 %107, i32* %111, align 4
  %112 = load i32, i32* @string_mark, align 4
  %113 = load i32*, i32** %13, align 8
  %114 = load i32, i32* %16, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %113, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %121
  %123 = getelementptr inbounds %struct.string_data, %struct.string_data* %122, i32 0, i32 7
  store i32 %112, i32* %123, align 4
  br label %124

; <label>:124:                                    ; preds = %97
  %125 = load i32, i32* %16, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %16, align 4
  br label %91

; <label>:127:                                    ; preds = %91
  %128 = load i32, i32* %12, align 4
  %129 = getelementptr inbounds [241 x i32], [241 x i32]* %19, i32 0, i32 0
  %130 = call i32 @findlib(i32 %128, i32 241, i32* %129)
  store i32 %130, i32* %20, align 4
  store i32 0, i32* %18, align 4
  br label %131

; <label>:131:                                    ; preds = %322, %127
  %132 = load i32, i32* @x.87
  %133 = load i32, i32* @y.88
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %131
  %140 = load i32, i32* %18, align 4
  %141 = load i32, i32* %20, align 4
  %142 = icmp slt i32 %140, %141
  %143 = load i32, i32* @x.87
  %144 = load i32, i32* @y.88
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %142, label %151, label %325

; <label>:151:                                    ; preds = %originalBBpart212
  store i32 0, i32* %17, align 4
  br label %152

; <label>:152:                                    ; preds = %originalBBpart261, %151
  %153 = load i32, i32* %17, align 4
  %154 = icmp slt i32 %153, 4
  br i1 %154, label %155, label %321

; <label>:155:                                    ; preds = %152
  %156 = load i32, i32* @x.87
  %157 = load i32, i32* @y.88
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %155
  %164 = load i32, i32* %18, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [241 x i32], [241 x i32]* %19, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = load i32, i32* %17, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = add nsw i32 %167, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = load i32, i32* %12, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = sub nsw i32 3, %181
  %183 = icmp eq i32 %176, %182
  %184 = load i32, i32* @x.87
  %185 = load i32, i32* @y.88
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart234, label %originalBB14alteredBB

originalBBpart234:                                ; preds = %originalBB14
  br i1 %183, label %231, label %192

; <label>:192:                                    ; preds = %originalBBpart234
  %193 = load i32, i32* @x.87
  %194 = load i32, i32* @y.88
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %192
  %201 = load i32, i32* %14, align 4
  %202 = icmp ne i32 %201, 0
  %203 = load i32, i32* @x.87
  %204 = load i32, i32* @y.88
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br i1 %202, label %211, label %301

; <label>:211:                                    ; preds = %originalBBpart238
  %212 = load i32, i32* %18, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [241 x i32], [241 x i32]* %19, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = load i32, i32* %17, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = add nsw i32 %215, %219
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %221
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = load i32, i32* %12, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = icmp eq i32 %224, %229
  br i1 %230, label %231, label %301

; <label>:231:                                    ; preds = %211, %originalBBpart234
  %232 = load i32, i32* %18, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [241 x i32], [241 x i32]* %19, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = load i32, i32* %17, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = add nsw i32 %235, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %241
  %243 = load i32, i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %244
  %246 = getelementptr inbounds %struct.string_data, %struct.string_data* %245, i32 0, i32 7
  %247 = load i32, i32* %246, align 4
  %248 = load i32, i32* @string_mark, align 4
  %249 = icmp ne i32 %247, %248
  br i1 %249, label %250, label %301

; <label>:250:                                    ; preds = %231
  %251 = load i32, i32* @x.87
  %252 = load i32, i32* @y.88
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %250
  %259 = load i32, i32* %18, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [241 x i32], [241 x i32]* %19, i64 0, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = load i32, i32* %17, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = add nsw i32 %262, %266
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %271
  %273 = getelementptr inbounds %struct.string_data, %struct.string_data* %272, i32 0, i32 2
  %274 = load i32, i32* %273, align 8
  %275 = load i32*, i32** %13, align 8
  %276 = load i32, i32* %16, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i32, i32* %275, i64 %277
  store i32 %274, i32* %278, align 4
  %279 = load i32, i32* @string_mark, align 4
  %280 = load i32*, i32** %13, align 8
  %281 = load i32, i32* %16, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i32, i32* %280, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %288
  %290 = getelementptr inbounds %struct.string_data, %struct.string_data* %289, i32 0, i32 7
  store i32 %279, i32* %290, align 4
  %291 = load i32, i32* %16, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* %16, align 4
  %293 = load i32, i32* @x.87
  %294 = load i32, i32* @y.88
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart255, label %originalBB40alteredBB

originalBBpart255:                                ; preds = %originalBB40
  br label %301

; <label>:301:                                    ; preds = %originalBBpart255, %231, %211, %originalBBpart238
  br label %302

; <label>:302:                                    ; preds = %301
  %303 = load i32, i32* @x.87
  %304 = load i32, i32* @y.88
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %302
  %311 = load i32, i32* %17, align 4
  %312 = add nsw i32 %311, 1
  store i32 %312, i32* %17, align 4
  %313 = load i32, i32* @x.87
  %314 = load i32, i32* @y.88
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart261, label %originalBB57alteredBB

originalBBpart261:                                ; preds = %originalBB57
  br label %152

; <label>:321:                                    ; preds = %152
  br label %322

; <label>:322:                                    ; preds = %321
  %323 = load i32, i32* %18, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, i32* %18, align 4
  br label %131

; <label>:325:                                    ; preds = %originalBBpart212
  %326 = load i32, i32* %16, align 4
  ret i32 %326

originalBBalteredBB:                              ; preds = %originalBB, %3
  %327 = alloca i32, align 4
  %328 = alloca i32*, align 8
  %329 = alloca i32, align 4
  %330 = alloca %struct.string_data*, align 8
  %331 = alloca i32, align 4
  %332 = alloca i32, align 4
  %333 = alloca i32, align 4
  %334 = alloca [241 x i32], align 16
  %335 = alloca i32, align 4
  store i32 %0, i32* %327, align 4
  store i32* %1, i32** %328, align 8
  store i32 %2, i32* %329, align 4
  %336 = load i32, i32* %327, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %337
  %339 = load i8, i8* %338, align 1
  %340 = zext i8 %339 to i32
  %341 = icmp eq i32 %340, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %342 = load i32, i32* %12, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %343
  %345 = load i8, i8* %344, align 1
  %346 = zext i8 %345 to i32
  %347 = icmp eq i32 %346, 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %131
  %348 = load i32, i32* %18, align 4
  %349 = load i32, i32* %20, align 4
  %350 = icmp slt i32 %348, %349
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %155
  %351 = load i32, i32* %18, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [241 x i32], [241 x i32]* %19, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = load i32, i32* %17, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %356
  %358 = load i32, i32* %357, align 4
  %_ = sub i32 0, %354
  %gen = add i32 %_, %358
  %_15 = sub i32 %354, %358
  %gen16 = mul i32 %_15, %358
  %_17 = sub i32 %354, %358
  %gen18 = mul i32 %_17, %358
  %_19 = sub i32 %354, %358
  %gen20 = mul i32 %_19, %358
  %359 = add nsw i32 %354, %358
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %360
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i32
  %364 = load i32, i32* %12, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %365
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i32
  %_21 = shl i32 3, %368
  %_22 = shl i32 3, %368
  %_23 = shl i32 3, %368
  %_24 = sub i32 3, %368
  %gen25 = mul i32 %_24, %368
  %_26 = sub i32 0, 3
  %gen27 = add i32 %_26, %368
  %_28 = shl i32 3, %368
  %_29 = sub i32 0, 3
  %gen30 = add i32 %_29, %368
  %_31 = sub i32 0, 3
  %gen32 = add i32 %_31, %368
  %369 = sub nsw i32 3, %368
  %370 = icmp eq i32 %363, %369
  br label %originalBB14

originalBB36alteredBB:                            ; preds = %originalBB36, %192
  %371 = load i32, i32* %14, align 4
  %372 = icmp ne i32 %371, 0
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %250
  %373 = load i32, i32* %18, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [241 x i32], [241 x i32]* %19, i64 0, i64 %374
  %376 = load i32, i32* %375, align 4
  %377 = load i32, i32* %17, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %378
  %380 = load i32, i32* %379, align 4
  %_41 = sub i32 0, %376
  %gen42 = add i32 %_41, %380
  %_43 = sub i32 %376, %380
  %gen44 = mul i32 %_43, %380
  %_45 = shl i32 %376, %380
  %381 = add nsw i32 %376, %380
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %385
  %387 = getelementptr inbounds %struct.string_data, %struct.string_data* %386, i32 0, i32 2
  %388 = load i32, i32* %387, align 8
  %389 = load i32*, i32** %13, align 8
  %390 = load i32, i32* %16, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i32, i32* %389, i64 %391
  store i32 %388, i32* %392, align 4
  %393 = load i32, i32* @string_mark, align 4
  %394 = load i32*, i32** %13, align 8
  %395 = load i32, i32* %16, align 4
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds i32, i32* %394, i64 %396
  %398 = load i32, i32* %397, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %399
  %401 = load i32, i32* %400, align 4
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %402
  %404 = getelementptr inbounds %struct.string_data, %struct.string_data* %403, i32 0, i32 7
  store i32 %393, i32* %404, align 4
  %405 = load i32, i32* %16, align 4
  %_46 = shl i32 %405, 1
  %_47 = shl i32 %405, 1
  %_48 = sub i32 %405, 1
  %gen49 = mul i32 %_48, 1
  %_50 = sub i32 %405, 1
  %gen51 = mul i32 %_50, 1
  %_52 = sub i32 %405, 1
  %gen53 = mul i32 %_52, 1
  %406 = add nsw i32 %405, 1
  store i32 %406, i32* %16, align 4
  br label %originalBB40

originalBB57alteredBB:                            ; preds = %originalBB57, %302
  %407 = load i32, i32* %17, align 4
  %_58 = shl i32 %407, 1
  %_59 = shl i32 %407, 1
  %408 = add nsw i32 %407, 1
  store i32 %408, i32* %17, align 4
  br label %originalBB57
}

; Function Attrs: noinline nounwind uwtable
define i32 @find_origin(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %16, label %9

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %9, %1
  br label %40

; <label>:17:                                     ; preds = %9
  %18 = load i32, i32* @x.89
  %19 = load i32, i32* @y.90
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %17
  %26 = load i32, i32* %2, align 4
  %27 = sdiv i32 %26, 20
  %28 = sub nsw i32 %27, 1
  %29 = load i32, i32* %2, align 4
  %30 = srem i32 %29, 20
  %31 = sub nsw i32 %30, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2270, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %28, i32 %31)
  %32 = load i32, i32* @x.89
  %33 = load i32, i32* @y.90
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:40:                                     ; preds = %originalBBpart2, %16
  %41 = load i32, i32* @x.89
  %42 = load i32, i32* @y.90
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %40
  %49 = load i32, i32* %2, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %53
  %55 = getelementptr inbounds %struct.string_data, %struct.string_data* %54, i32 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = load i32, i32* @x.89
  %58 = load i32, i32* @y.90
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  ret i32 %56

originalBBalteredBB:                              ; preds = %originalBB, %17
  %65 = load i32, i32* %2, align 4
  %_ = shl i32 %65, 20
  %_1 = sub i32 0, %65
  %gen = add i32 %_1, 20
  %_2 = sub i32 %65, 20
  %gen3 = mul i32 %_2, 20
  %66 = sdiv i32 %65, 20
  %_4 = sub i32 %66, 1
  %gen5 = mul i32 %_4, 1
  %_6 = shl i32 %66, 1
  %_7 = shl i32 %66, 1
  %_8 = sub i32 %66, 1
  %gen9 = mul i32 %_8, 1
  %67 = sub nsw i32 %66, 1
  %68 = load i32, i32* %2, align 4
  %_10 = shl i32 %68, 20
  %_11 = sub i32 %68, 20
  %gen12 = mul i32 %_11, 20
  %_13 = sub i32 0, %68
  %gen14 = add i32 %_13, 20
  %_15 = shl i32 %68, 20
  %69 = srem i32 %68, 20
  %_16 = shl i32 %69, 1
  %_17 = shl i32 %69, 1
  %_18 = sub i32 0, %69
  %gen19 = add i32 %_18, 1
  %70 = sub nsw i32 %69, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2270, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %67, i32 %70)
  br label %originalBB

originalBB20alteredBB:                            ; preds = %originalBB20, %40
  %71 = load i32, i32* %2, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %75
  %77 = getelementptr inbounds %struct.string_data, %struct.string_data* %76, i32 0, i32 2
  %78 = load i32, i32* %77, align 8
  br label %originalBB20
}

; Function Attrs: noinline nounwind uwtable
define i32 @is_self_atari(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = sub nsw i32 3, %10
  store i32 %11, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp ult i32 %12, 421
  br i1 %13, label %14, label %38

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.91
  %16 = load i32, i32* @y.92
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %14
  %23 = load i32, i32* %4, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp ne i32 %27, 3
  %29 = load i32, i32* @x.91
  %30 = load i32, i32* @y.92
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %38

; <label>:37:                                     ; preds = %originalBBpart2
  br label %45

; <label>:38:                                     ; preds = %originalBBpart2, %2
  %39 = load i32, i32* %4, align 4
  %40 = sdiv i32 %39, 20
  %41 = sub nsw i32 %40, 1
  %42 = load i32, i32* %4, align 4
  %43 = srem i32 %42, 20
  %44 = sub nsw i32 %43, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2294, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %41, i32 %44)
  br label %45

; <label>:45:                                     ; preds = %38, %37
  %46 = load i32, i32* %4, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

; <label>:52:                                     ; preds = %45
  br label %60

; <label>:53:                                     ; preds = %45
  %54 = load i32, i32* %4, align 4
  %55 = sdiv i32 %54, 20
  %56 = sub nsw i32 %55, 1
  %57 = load i32, i32* %4, align 4
  %58 = srem i32 %57, 20
  %59 = sub nsw i32 %58, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2295, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %56, i32 %59)
  br label %60

; <label>:60:                                     ; preds = %53, %52
  %61 = load i32, i32* %5, align 4
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %82, label %63

; <label>:63:                                     ; preds = %60
  %64 = load i32, i32* @x.91
  %65 = load i32, i32* @y.92
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %63
  %72 = load i32, i32* %5, align 4
  %73 = icmp eq i32 %72, 2
  %74 = load i32, i32* @x.91
  %75 = load i32, i32* @y.92
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %73, label %82, label %83

; <label>:82:                                     ; preds = %originalBBpart24, %60
  br label %90

; <label>:83:                                     ; preds = %originalBBpart24
  %84 = load i32, i32* %4, align 4
  %85 = sdiv i32 %84, 20
  %86 = sub nsw i32 %85, 1
  %87 = load i32, i32* %4, align 4
  %88 = srem i32 %87, 20
  %89 = sub nsw i32 %88, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2296, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 %86, i32 %89)
  br label %90

; <label>:90:                                     ; preds = %83, %82
  %91 = load i32, i32* @x.91
  %92 = load i32, i32* @y.92
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %90
  %99 = load i32, i32* @string_mark, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* @string_mark, align 4
  %101 = load i32, i32* %4, align 4
  %102 = add nsw i32 %101, 20
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = icmp eq i32 %106, 0
  %108 = load i32, i32* @x.91
  %109 = load i32, i32* @y.92
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart223, label %originalBB6alteredBB

originalBBpart223:                                ; preds = %originalBB6
  br i1 %107, label %116, label %119

; <label>:116:                                    ; preds = %originalBBpart223
  %117 = load i32, i32* %7, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %7, align 4
  br label %249

; <label>:119:                                    ; preds = %originalBBpart223
  %120 = load i32, i32* %4, align 4
  %121 = add nsw i32 %120, 20
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = load i32, i32* %5, align 4
  %127 = icmp eq i32 %125, %126
  br i1 %127, label %128, label %171

; <label>:128:                                    ; preds = %119
  %129 = load i32, i32* @x.91
  %130 = load i32, i32* @y.92
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %128
  %137 = load i32, i32* %4, align 4
  %138 = add nsw i32 %137, 20
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %142
  %144 = getelementptr inbounds %struct.string_data, %struct.string_data* %143, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = icmp sgt i32 %145, 2
  %147 = load i32, i32* @x.91
  %148 = load i32, i32* @y.92
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart233, label %originalBB25alteredBB

originalBBpart233:                                ; preds = %originalBB25
  br i1 %146, label %155, label %156

; <label>:155:                                    ; preds = %originalBBpart233
  store i32 0, i32* %3, align 4
  br label %820

; <label>:156:                                    ; preds = %originalBBpart233
  %157 = load i32, i32* %4, align 4
  %158 = add nsw i32 %157, 20
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %162
  %164 = getelementptr inbounds %struct.string_data, %struct.string_data* %163, i32 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

; <label>:167:                                    ; preds = %156
  %168 = load i32, i32* %9, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %9, align 4
  br label %170

; <label>:170:                                    ; preds = %167, %156
  br label %232

; <label>:171:                                    ; preds = %119
  %172 = load i32, i32* %4, align 4
  %173 = add nsw i32 %172, 20
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = load i32, i32* %6, align 4
  %179 = icmp eq i32 %177, %178
  br i1 %179, label %180, label %231

; <label>:180:                                    ; preds = %171
  %181 = load i32, i32* @x.91
  %182 = load i32, i32* @y.92
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %180
  %189 = load i32, i32* %4, align 4
  %190 = add nsw i32 %189, 20
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %194
  %196 = getelementptr inbounds %struct.string_data, %struct.string_data* %195, i32 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 1
  %199 = load i32, i32* @x.91
  %200 = load i32, i32* @y.92
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart250, label %originalBB35alteredBB

originalBBpart250:                                ; preds = %originalBB35
  br i1 %198, label %207, label %231

; <label>:207:                                    ; preds = %originalBBpart250
  %208 = load i32, i32* %4, align 4
  %209 = add nsw i32 %208, 20
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %213
  %215 = getelementptr inbounds %struct.string_data, %struct.string_data* %214, i32 0, i32 7
  %216 = load i32, i32* %215, align 4
  %217 = load i32, i32* @string_mark, align 4
  %218 = icmp ne i32 %216, %217
  br i1 %218, label %219, label %231

; <label>:219:                                    ; preds = %207
  %220 = load i32, i32* %8, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %8, align 4
  %222 = load i32, i32* @string_mark, align 4
  %223 = load i32, i32* %4, align 4
  %224 = add nsw i32 %223, 20
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %228
  %230 = getelementptr inbounds %struct.string_data, %struct.string_data* %229, i32 0, i32 7
  store i32 %222, i32* %230, align 4
  br label %231

; <label>:231:                                    ; preds = %219, %207, %originalBBpart250, %171
  br label %232

; <label>:232:                                    ; preds = %231, %170
  %233 = load i32, i32* @x.91
  %234 = load i32, i32* @y.92
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %232
  %241 = load i32, i32* @x.91
  %242 = load i32, i32* @y.92
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %249

; <label>:249:                                    ; preds = %originalBBpart254, %116
  %250 = load i32, i32* %4, align 4
  %251 = sub nsw i32 %250, 1
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %260

; <label>:257:                                    ; preds = %249
  %258 = load i32, i32* %7, align 4
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %7, align 4
  br label %438

; <label>:260:                                    ; preds = %249
  %261 = load i32, i32* @x.91
  %262 = load i32, i32* @y.92
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %260
  %269 = load i32, i32* %4, align 4
  %270 = sub nsw i32 %269, 1
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %271
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i32
  %275 = load i32, i32* %5, align 4
  %276 = icmp eq i32 %274, %275
  %277 = load i32, i32* @x.91
  %278 = load i32, i32* @y.92
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart262, label %originalBB56alteredBB

originalBBpart262:                                ; preds = %originalBB56
  br i1 %276, label %285, label %344

; <label>:285:                                    ; preds = %originalBBpart262
  %286 = load i32, i32* %4, align 4
  %287 = sub nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %291
  %293 = getelementptr inbounds %struct.string_data, %struct.string_data* %292, i32 0, i32 3
  %294 = load i32, i32* %293, align 4
  %295 = icmp sgt i32 %294, 2
  br i1 %295, label %296, label %297

; <label>:296:                                    ; preds = %285
  store i32 0, i32* %3, align 4
  br label %820

; <label>:297:                                    ; preds = %285
  %298 = load i32, i32* @x.91
  %299 = load i32, i32* @y.92
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %297
  %306 = load i32, i32* %4, align 4
  %307 = sub nsw i32 %306, 1
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %311
  %313 = getelementptr inbounds %struct.string_data, %struct.string_data* %312, i32 0, i32 3
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 2
  %316 = load i32, i32* @x.91
  %317 = load i32, i32* @y.92
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBBpart268, label %originalBB64alteredBB

originalBBpart268:                                ; preds = %originalBB64
  br i1 %315, label %324, label %327

; <label>:324:                                    ; preds = %originalBBpart268
  %325 = load i32, i32* %9, align 4
  %326 = add nsw i32 %325, 1
  store i32 %326, i32* %9, align 4
  br label %327

; <label>:327:                                    ; preds = %324, %originalBBpart268
  %328 = load i32, i32* @x.91
  %329 = load i32, i32* @y.92
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %327
  %336 = load i32, i32* @x.91
  %337 = load i32, i32* @y.92
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %421

; <label>:344:                                    ; preds = %originalBBpart262
  %345 = load i32, i32* %4, align 4
  %346 = sub nsw i32 %345, 1
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %347
  %349 = load i8, i8* %348, align 1
  %350 = zext i8 %349 to i32
  %351 = load i32, i32* %6, align 4
  %352 = icmp eq i32 %350, %351
  br i1 %352, label %353, label %404

; <label>:353:                                    ; preds = %344
  %354 = load i32, i32* %4, align 4
  %355 = sub nsw i32 %354, 1
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %356
  %358 = load i32, i32* %357, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %359
  %361 = getelementptr inbounds %struct.string_data, %struct.string_data* %360, i32 0, i32 3
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 1
  br i1 %363, label %364, label %404

; <label>:364:                                    ; preds = %353
  %365 = load i32, i32* @x.91
  %366 = load i32, i32* @y.92
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %364
  %373 = load i32, i32* %4, align 4
  %374 = sub nsw i32 %373, 1
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %378
  %380 = getelementptr inbounds %struct.string_data, %struct.string_data* %379, i32 0, i32 7
  %381 = load i32, i32* %380, align 4
  %382 = load i32, i32* @string_mark, align 4
  %383 = icmp ne i32 %381, %382
  %384 = load i32, i32* @x.91
  %385 = load i32, i32* @y.92
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart283, label %originalBB74alteredBB

originalBBpart283:                                ; preds = %originalBB74
  br i1 %383, label %392, label %404

; <label>:392:                                    ; preds = %originalBBpart283
  %393 = load i32, i32* %8, align 4
  %394 = add nsw i32 %393, 1
  store i32 %394, i32* %8, align 4
  %395 = load i32, i32* @string_mark, align 4
  %396 = load i32, i32* %4, align 4
  %397 = sub nsw i32 %396, 1
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %398
  %400 = load i32, i32* %399, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %401
  %403 = getelementptr inbounds %struct.string_data, %struct.string_data* %402, i32 0, i32 7
  store i32 %395, i32* %403, align 4
  br label %404

; <label>:404:                                    ; preds = %392, %originalBBpart283, %353, %344
  %405 = load i32, i32* @x.91
  %406 = load i32, i32* @y.92
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %404
  %413 = load i32, i32* @x.91
  %414 = load i32, i32* @y.92
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %421

; <label>:421:                                    ; preds = %originalBBpart287, %originalBBpart272
  %422 = load i32, i32* @x.91
  %423 = load i32, i32* @y.92
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %421
  %430 = load i32, i32* @x.91
  %431 = load i32, i32* @y.92
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %438

; <label>:438:                                    ; preds = %originalBBpart291, %257
  %439 = load i32, i32* %4, align 4
  %440 = sub nsw i32 %439, 20
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %441
  %443 = load i8, i8* %442, align 1
  %444 = zext i8 %443 to i32
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %449

; <label>:446:                                    ; preds = %438
  %447 = load i32, i32* %7, align 4
  %448 = add nsw i32 %447, 1
  store i32 %448, i32* %7, align 4
  br label %611

; <label>:449:                                    ; preds = %438
  %450 = load i32, i32* @x.91
  %451 = load i32, i32* @y.92
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %449
  %458 = load i32, i32* %4, align 4
  %459 = sub nsw i32 %458, 20
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %460
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i32
  %464 = load i32, i32* %5, align 4
  %465 = icmp eq i32 %463, %464
  %466 = load i32, i32* @x.91
  %467 = load i32, i32* @y.92
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart2108, label %originalBB93alteredBB

originalBBpart2108:                               ; preds = %originalBB93
  br i1 %465, label %474, label %517

; <label>:474:                                    ; preds = %originalBBpart2108
  %475 = load i32, i32* @x.91
  %476 = load i32, i32* @y.92
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %474
  %483 = load i32, i32* %4, align 4
  %484 = sub nsw i32 %483, 20
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %488
  %490 = getelementptr inbounds %struct.string_data, %struct.string_data* %489, i32 0, i32 3
  %491 = load i32, i32* %490, align 4
  %492 = icmp sgt i32 %491, 2
  %493 = load i32, i32* @x.91
  %494 = load i32, i32* @y.92
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBBpart2117, label %originalBB110alteredBB

originalBBpart2117:                               ; preds = %originalBB110
  br i1 %492, label %501, label %502

; <label>:501:                                    ; preds = %originalBBpart2117
  store i32 0, i32* %3, align 4
  br label %820

; <label>:502:                                    ; preds = %originalBBpart2117
  %503 = load i32, i32* %4, align 4
  %504 = sub nsw i32 %503, 20
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %505
  %507 = load i32, i32* %506, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %508
  %510 = getelementptr inbounds %struct.string_data, %struct.string_data* %509, i32 0, i32 3
  %511 = load i32, i32* %510, align 4
  %512 = icmp eq i32 %511, 2
  br i1 %512, label %513, label %516

; <label>:513:                                    ; preds = %502
  %514 = load i32, i32* %9, align 4
  %515 = add nsw i32 %514, 1
  store i32 %515, i32* %9, align 4
  br label %516

; <label>:516:                                    ; preds = %513, %502
  br label %610

; <label>:517:                                    ; preds = %originalBBpart2108
  %518 = load i32, i32* @x.91
  %519 = load i32, i32* @y.92
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %517
  %526 = load i32, i32* %4, align 4
  %527 = sub nsw i32 %526, 20
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %528
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i32
  %532 = load i32, i32* %6, align 4
  %533 = icmp eq i32 %531, %532
  %534 = load i32, i32* @x.91
  %535 = load i32, i32* @y.92
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBBpart2127, label %originalBB119alteredBB

originalBBpart2127:                               ; preds = %originalBB119
  br i1 %533, label %542, label %593

; <label>:542:                                    ; preds = %originalBBpart2127
  %543 = load i32, i32* %4, align 4
  %544 = sub nsw i32 %543, 20
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %545
  %547 = load i32, i32* %546, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %548
  %550 = getelementptr inbounds %struct.string_data, %struct.string_data* %549, i32 0, i32 3
  %551 = load i32, i32* %550, align 4
  %552 = icmp eq i32 %551, 1
  br i1 %552, label %553, label %593

; <label>:553:                                    ; preds = %542
  %554 = load i32, i32* %4, align 4
  %555 = sub nsw i32 %554, 20
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %556
  %558 = load i32, i32* %557, align 4
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %559
  %561 = getelementptr inbounds %struct.string_data, %struct.string_data* %560, i32 0, i32 7
  %562 = load i32, i32* %561, align 4
  %563 = load i32, i32* @string_mark, align 4
  %564 = icmp ne i32 %562, %563
  br i1 %564, label %565, label %593

; <label>:565:                                    ; preds = %553
  %566 = load i32, i32* @x.91
  %567 = load i32, i32* @y.92
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %originalBB129alteredBB, %565
  %574 = load i32, i32* %8, align 4
  %575 = add nsw i32 %574, 1
  store i32 %575, i32* %8, align 4
  %576 = load i32, i32* @string_mark, align 4
  %577 = load i32, i32* %4, align 4
  %578 = sub nsw i32 %577, 20
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %582
  %584 = getelementptr inbounds %struct.string_data, %struct.string_data* %583, i32 0, i32 7
  store i32 %576, i32* %584, align 4
  %585 = load i32, i32* @x.91
  %586 = load i32, i32* @y.92
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBBpart2145, label %originalBB129alteredBB

originalBBpart2145:                               ; preds = %originalBB129
  br label %593

; <label>:593:                                    ; preds = %originalBBpart2145, %553, %542, %originalBBpart2127
  %594 = load i32, i32* @x.91
  %595 = load i32, i32* @y.92
  %596 = sub i32 %594, 1
  %597 = mul i32 %594, %596
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %595, 10
  %601 = or i1 %599, %600
  br i1 %601, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %originalBB147alteredBB, %593
  %602 = load i32, i32* @x.91
  %603 = load i32, i32* @y.92
  %604 = sub i32 %602, 1
  %605 = mul i32 %602, %604
  %606 = urem i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %603, 10
  %609 = or i1 %607, %608
  br i1 %609, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br label %610

; <label>:610:                                    ; preds = %originalBBpart2149, %516
  br label %611

; <label>:611:                                    ; preds = %610, %446
  %612 = load i32, i32* %4, align 4
  %613 = add nsw i32 %612, 1
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %614
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %622

; <label>:619:                                    ; preds = %611
  %620 = load i32, i32* %7, align 4
  %621 = add nsw i32 %620, 1
  store i32 %621, i32* %7, align 4
  br label %759

; <label>:622:                                    ; preds = %611
  %623 = load i32, i32* %4, align 4
  %624 = add nsw i32 %623, 1
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %625
  %627 = load i8, i8* %626, align 1
  %628 = zext i8 %627 to i32
  %629 = load i32, i32* %5, align 4
  %630 = icmp eq i32 %628, %629
  br i1 %630, label %631, label %690

; <label>:631:                                    ; preds = %622
  %632 = load i32, i32* @x.91
  %633 = load i32, i32* @y.92
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %631
  %640 = load i32, i32* %4, align 4
  %641 = add nsw i32 %640, 1
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %642
  %644 = load i32, i32* %643, align 4
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %645
  %647 = getelementptr inbounds %struct.string_data, %struct.string_data* %646, i32 0, i32 3
  %648 = load i32, i32* %647, align 4
  %649 = icmp sgt i32 %648, 2
  %650 = load i32, i32* @x.91
  %651 = load i32, i32* @y.92
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBBpart2161, label %originalBB151alteredBB

originalBBpart2161:                               ; preds = %originalBB151
  br i1 %649, label %658, label %675

; <label>:658:                                    ; preds = %originalBBpart2161
  %659 = load i32, i32* @x.91
  %660 = load i32, i32* @y.92
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %originalBB163alteredBB, %658
  store i32 0, i32* %3, align 4
  %667 = load i32, i32* @x.91
  %668 = load i32, i32* @y.92
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br label %820

; <label>:675:                                    ; preds = %originalBBpart2161
  %676 = load i32, i32* %4, align 4
  %677 = add nsw i32 %676, 1
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %678
  %680 = load i32, i32* %679, align 4
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %681
  %683 = getelementptr inbounds %struct.string_data, %struct.string_data* %682, i32 0, i32 3
  %684 = load i32, i32* %683, align 4
  %685 = icmp eq i32 %684, 2
  br i1 %685, label %686, label %689

; <label>:686:                                    ; preds = %675
  %687 = load i32, i32* %9, align 4
  %688 = add nsw i32 %687, 1
  store i32 %688, i32* %9, align 4
  br label %689

; <label>:689:                                    ; preds = %686, %675
  br label %758

; <label>:690:                                    ; preds = %622
  %691 = load i32, i32* @x.91
  %692 = load i32, i32* @y.92
  %693 = sub i32 %691, 1
  %694 = mul i32 %691, %693
  %695 = urem i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = icmp slt i32 %692, 10
  %698 = or i1 %696, %697
  br i1 %698, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %690
  %699 = load i32, i32* %4, align 4
  %700 = add nsw i32 %699, 1
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %701
  %703 = load i8, i8* %702, align 1
  %704 = zext i8 %703 to i32
  %705 = load i32, i32* %6, align 4
  %706 = icmp eq i32 %704, %705
  %707 = load i32, i32* @x.91
  %708 = load i32, i32* @y.92
  %709 = sub i32 %707, 1
  %710 = mul i32 %707, %709
  %711 = urem i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = icmp slt i32 %708, 10
  %714 = or i1 %712, %713
  br i1 %714, label %originalBBpart2180, label %originalBB167alteredBB

originalBBpart2180:                               ; preds = %originalBB167
  br i1 %706, label %715, label %757

; <label>:715:                                    ; preds = %originalBBpart2180
  %716 = load i32, i32* %4, align 4
  %717 = add nsw i32 %716, 1
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %718
  %720 = load i32, i32* %719, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %721
  %723 = getelementptr inbounds %struct.string_data, %struct.string_data* %722, i32 0, i32 3
  %724 = load i32, i32* %723, align 4
  %725 = icmp eq i32 %724, 1
  br i1 %725, label %726, label %757

; <label>:726:                                    ; preds = %715
  %727 = load i32, i32* @x.91
  %728 = load i32, i32* @y.92
  %729 = sub i32 %727, 1
  %730 = mul i32 %727, %729
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %728, 10
  %734 = or i1 %732, %733
  br i1 %734, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %726
  %735 = load i32, i32* %4, align 4
  %736 = add nsw i32 %735, 1
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %737
  %739 = load i32, i32* %738, align 4
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %740
  %742 = getelementptr inbounds %struct.string_data, %struct.string_data* %741, i32 0, i32 7
  %743 = load i32, i32* %742, align 4
  %744 = load i32, i32* @string_mark, align 4
  %745 = icmp ne i32 %743, %744
  %746 = load i32, i32* @x.91
  %747 = load i32, i32* @y.92
  %748 = sub i32 %746, 1
  %749 = mul i32 %746, %748
  %750 = urem i32 %749, 2
  %751 = icmp eq i32 %750, 0
  %752 = icmp slt i32 %747, 10
  %753 = or i1 %751, %752
  br i1 %753, label %originalBBpart2186, label %originalBB182alteredBB

originalBBpart2186:                               ; preds = %originalBB182
  br i1 %745, label %754, label %757

; <label>:754:                                    ; preds = %originalBBpart2186
  %755 = load i32, i32* %8, align 4
  %756 = add nsw i32 %755, 1
  store i32 %756, i32* %8, align 4
  br label %757

; <label>:757:                                    ; preds = %754, %originalBBpart2186, %715, %originalBBpart2180
  br label %758

; <label>:758:                                    ; preds = %757, %689
  br label %759

; <label>:759:                                    ; preds = %758, %619
  %760 = load i32, i32* %7, align 4
  %761 = load i32, i32* %8, align 4
  %762 = add nsw i32 %760, %761
  %763 = icmp sge i32 %762, 2
  br i1 %763, label %764, label %781

; <label>:764:                                    ; preds = %759
  %765 = load i32, i32* @x.91
  %766 = load i32, i32* @y.92
  %767 = sub i32 %765, 1
  %768 = mul i32 %765, %767
  %769 = urem i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = icmp slt i32 %766, 10
  %772 = or i1 %770, %771
  br i1 %772, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %originalBB188alteredBB, %764
  store i32 0, i32* %3, align 4
  %773 = load i32, i32* @x.91
  %774 = load i32, i32* @y.92
  %775 = sub i32 %773, 1
  %776 = mul i32 %773, %775
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %774, 10
  %780 = or i1 %778, %779
  br i1 %780, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br label %820

; <label>:781:                                    ; preds = %759
  %782 = load i32, i32* @x.91
  %783 = load i32, i32* @y.92
  %784 = sub i32 %782, 1
  %785 = mul i32 %782, %784
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %783, 10
  %789 = or i1 %787, %788
  br i1 %789, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %originalBB192alteredBB, %781
  %790 = load i32, i32* %9, align 4
  %791 = icmp sgt i32 %790, 0
  %792 = zext i1 %791 to i32
  %793 = load i32, i32* %8, align 4
  %794 = add nsw i32 %792, %793
  %795 = icmp sge i32 %794, 2
  %796 = load i32, i32* @x.91
  %797 = load i32, i32* @y.92
  %798 = sub i32 %796, 1
  %799 = mul i32 %796, %798
  %800 = urem i32 %799, 2
  %801 = icmp eq i32 %800, 0
  %802 = icmp slt i32 %797, 10
  %803 = or i1 %801, %802
  br i1 %803, label %originalBBpart2206, label %originalBB192alteredBB

originalBBpart2206:                               ; preds = %originalBB192
  br i1 %795, label %804, label %805

; <label>:804:                                    ; preds = %originalBBpart2206
  store i32 0, i32* %3, align 4
  br label %820

; <label>:805:                                    ; preds = %originalBBpart2206
  %806 = load i32, i32* %8, align 4
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %808, label %814

; <label>:808:                                    ; preds = %805
  %809 = load i32, i32* %9, align 4
  %810 = load i32, i32* %7, align 4
  %811 = add nsw i32 %809, %810
  %812 = icmp sle i32 %811, 1
  br i1 %812, label %813, label %814

; <label>:813:                                    ; preds = %808
  store i32 1, i32* %3, align 4
  br label %820

; <label>:814:                                    ; preds = %808, %805
  %815 = load i32, i32* %4, align 4
  %816 = load i32, i32* %5, align 4
  %817 = call i32 @accuratelib(i32 %815, i32 %816, i32 2, i32* null)
  %818 = icmp sle i32 %817, 1
  %819 = zext i1 %818 to i32
  store i32 %819, i32* %3, align 4
  br label %820

; <label>:820:                                    ; preds = %814, %813, %804, %originalBBpart2190, %originalBBpart2165, %501, %296, %155
  %821 = load i32, i32* %3, align 4
  ret i32 %821

originalBBalteredBB:                              ; preds = %originalBB, %14
  %822 = load i32, i32* %4, align 4
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %823
  %825 = load i8, i8* %824, align 1
  %826 = zext i8 %825 to i32
  %827 = icmp ne i32 %826, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %63
  %828 = load i32, i32* %5, align 4
  %829 = icmp eq i32 %828, 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  %830 = load i32, i32* @string_mark, align 4
  %_ = shl i32 %830, 1
  %_7 = sub i32 0, %830
  %gen = add i32 %_7, 1
  %_8 = sub i32 0, %830
  %gen9 = add i32 %_8, 1
  %831 = add nsw i32 %830, 1
  store i32 %831, i32* @string_mark, align 4
  %832 = load i32, i32* %4, align 4
  %_10 = sub i32 0, %832
  %gen11 = add i32 %_10, 20
  %_12 = sub i32 %832, 20
  %gen13 = mul i32 %_12, 20
  %_14 = shl i32 %832, 20
  %_15 = shl i32 %832, 20
  %_16 = sub i32 0, %832
  %gen17 = add i32 %_16, 20
  %_18 = sub i32 0, %832
  %gen19 = add i32 %_18, 20
  %_20 = sub i32 0, %832
  %gen21 = add i32 %_20, 20
  %833 = add nsw i32 %832, 20
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %834
  %836 = load i8, i8* %835, align 1
  %837 = zext i8 %836 to i32
  %838 = icmp eq i32 %837, 0
  br label %originalBB6

originalBB25alteredBB:                            ; preds = %originalBB25, %128
  %839 = load i32, i32* %4, align 4
  %_26 = sub i32 %839, 20
  %gen27 = mul i32 %_26, 20
  %_28 = shl i32 %839, 20
  %_29 = sub i32 0, %839
  %gen30 = add i32 %_29, 20
  %_31 = shl i32 %839, 20
  %840 = add nsw i32 %839, 20
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %841
  %843 = load i32, i32* %842, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %844
  %846 = getelementptr inbounds %struct.string_data, %struct.string_data* %845, i32 0, i32 3
  %847 = load i32, i32* %846, align 4
  %848 = icmp sgt i32 %847, 2
  br label %originalBB25

originalBB35alteredBB:                            ; preds = %originalBB35, %180
  %849 = load i32, i32* %4, align 4
  %_36 = sub i32 %849, 20
  %gen37 = mul i32 %_36, 20
  %_38 = sub i32 %849, 20
  %gen39 = mul i32 %_38, 20
  %_40 = sub i32 0, %849
  %gen41 = add i32 %_40, 20
  %_42 = shl i32 %849, 20
  %_43 = sub i32 %849, 20
  %gen44 = mul i32 %_43, 20
  %_45 = sub i32 0, %849
  %gen46 = add i32 %_45, 20
  %_47 = sub i32 0, %849
  %gen48 = add i32 %_47, 20
  %850 = add nsw i32 %849, 20
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %851
  %853 = load i32, i32* %852, align 4
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %854
  %856 = getelementptr inbounds %struct.string_data, %struct.string_data* %855, i32 0, i32 3
  %857 = load i32, i32* %856, align 4
  %858 = icmp eq i32 %857, 1
  br label %originalBB35

originalBB52alteredBB:                            ; preds = %originalBB52, %232
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %260
  %859 = load i32, i32* %4, align 4
  %_57 = shl i32 %859, 1
  %_58 = sub i32 %859, 1
  %gen59 = mul i32 %_58, 1
  %_60 = shl i32 %859, 1
  %860 = sub nsw i32 %859, 1
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %861
  %863 = load i8, i8* %862, align 1
  %864 = zext i8 %863 to i32
  %865 = load i32, i32* %5, align 4
  %866 = icmp eq i32 %864, %865
  br label %originalBB56

originalBB64alteredBB:                            ; preds = %originalBB64, %297
  %867 = load i32, i32* %4, align 4
  %_65 = shl i32 %867, 1
  %_66 = shl i32 %867, 1
  %868 = sub nsw i32 %867, 1
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %869
  %871 = load i32, i32* %870, align 4
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %872
  %874 = getelementptr inbounds %struct.string_data, %struct.string_data* %873, i32 0, i32 3
  %875 = load i32, i32* %874, align 4
  %876 = icmp eq i32 %875, 2
  br label %originalBB64

originalBB70alteredBB:                            ; preds = %originalBB70, %327
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %364
  %877 = load i32, i32* %4, align 4
  %_75 = shl i32 %877, 1
  %_76 = sub i32 0, %877
  %gen77 = add i32 %_76, 1
  %_78 = shl i32 %877, 1
  %_79 = shl i32 %877, 1
  %_80 = sub i32 0, %877
  %gen81 = add i32 %_80, 1
  %878 = sub nsw i32 %877, 1
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %879
  %881 = load i32, i32* %880, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %882
  %884 = getelementptr inbounds %struct.string_data, %struct.string_data* %883, i32 0, i32 7
  %885 = load i32, i32* %884, align 4
  %886 = load i32, i32* @string_mark, align 4
  %887 = icmp ne i32 %885, %886
  br label %originalBB74

originalBB85alteredBB:                            ; preds = %originalBB85, %404
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %421
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %449
  %888 = load i32, i32* %4, align 4
  %_94 = sub i32 0, %888
  %gen95 = add i32 %_94, 20
  %_96 = sub i32 0, %888
  %gen97 = add i32 %_96, 20
  %_98 = sub i32 %888, 20
  %gen99 = mul i32 %_98, 20
  %_100 = shl i32 %888, 20
  %_101 = sub i32 0, %888
  %gen102 = add i32 %_101, 20
  %_103 = sub i32 0, %888
  %gen104 = add i32 %_103, 20
  %_105 = shl i32 %888, 20
  %_106 = shl i32 %888, 20
  %889 = sub nsw i32 %888, 20
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %890
  %892 = load i8, i8* %891, align 1
  %893 = zext i8 %892 to i32
  %894 = load i32, i32* %5, align 4
  %895 = icmp eq i32 %893, %894
  br label %originalBB93

originalBB110alteredBB:                           ; preds = %originalBB110, %474
  %896 = load i32, i32* %4, align 4
  %_111 = sub i32 %896, 20
  %gen112 = mul i32 %_111, 20
  %_113 = sub i32 %896, 20
  %gen114 = mul i32 %_113, 20
  %_115 = shl i32 %896, 20
  %897 = sub nsw i32 %896, 20
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %898
  %900 = load i32, i32* %899, align 4
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %901
  %903 = getelementptr inbounds %struct.string_data, %struct.string_data* %902, i32 0, i32 3
  %904 = load i32, i32* %903, align 4
  %905 = icmp sgt i32 %904, 2
  br label %originalBB110

originalBB119alteredBB:                           ; preds = %originalBB119, %517
  %906 = load i32, i32* %4, align 4
  %_120 = sub i32 %906, 20
  %gen121 = mul i32 %_120, 20
  %_122 = sub i32 %906, 20
  %gen123 = mul i32 %_122, 20
  %_124 = sub i32 0, %906
  %gen125 = add i32 %_124, 20
  %907 = sub nsw i32 %906, 20
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %908
  %910 = load i8, i8* %909, align 1
  %911 = zext i8 %910 to i32
  %912 = load i32, i32* %6, align 4
  %913 = icmp eq i32 %911, %912
  br label %originalBB119

originalBB129alteredBB:                           ; preds = %originalBB129, %565
  %914 = load i32, i32* %8, align 4
  %_130 = shl i32 %914, 1
  %_131 = sub i32 0, %914
  %gen132 = add i32 %_131, 1
  %_133 = shl i32 %914, 1
  %_134 = shl i32 %914, 1
  %915 = add nsw i32 %914, 1
  store i32 %915, i32* %8, align 4
  %916 = load i32, i32* @string_mark, align 4
  %917 = load i32, i32* %4, align 4
  %_135 = sub i32 %917, 20
  %gen136 = mul i32 %_135, 20
  %_137 = shl i32 %917, 20
  %_138 = shl i32 %917, 20
  %_139 = shl i32 %917, 20
  %_140 = sub i32 %917, 20
  %gen141 = mul i32 %_140, 20
  %_142 = sub i32 %917, 20
  %gen143 = mul i32 %_142, 20
  %918 = sub nsw i32 %917, 20
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %919
  %921 = load i32, i32* %920, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %922
  %924 = getelementptr inbounds %struct.string_data, %struct.string_data* %923, i32 0, i32 7
  store i32 %916, i32* %924, align 4
  br label %originalBB129

originalBB147alteredBB:                           ; preds = %originalBB147, %593
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %631
  %925 = load i32, i32* %4, align 4
  %_152 = sub i32 0, %925
  %gen153 = add i32 %_152, 1
  %_154 = sub i32 0, %925
  %gen155 = add i32 %_154, 1
  %_156 = sub i32 0, %925
  %gen157 = add i32 %_156, 1
  %_158 = sub i32 %925, 1
  %gen159 = mul i32 %_158, 1
  %926 = add nsw i32 %925, 1
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %927
  %929 = load i32, i32* %928, align 4
  %930 = sext i32 %929 to i64
  %931 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %930
  %932 = getelementptr inbounds %struct.string_data, %struct.string_data* %931, i32 0, i32 3
  %933 = load i32, i32* %932, align 4
  %934 = icmp sgt i32 %933, 2
  br label %originalBB151

originalBB163alteredBB:                           ; preds = %originalBB163, %658
  store i32 0, i32* %3, align 4
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %690
  %935 = load i32, i32* %4, align 4
  %_168 = shl i32 %935, 1
  %_169 = sub i32 0, %935
  %gen170 = add i32 %_169, 1
  %_171 = shl i32 %935, 1
  %_172 = sub i32 0, %935
  %gen173 = add i32 %_172, 1
  %_174 = shl i32 %935, 1
  %_175 = sub i32 0, %935
  %gen176 = add i32 %_175, 1
  %_177 = sub i32 0, %935
  %gen178 = add i32 %_177, 1
  %936 = add nsw i32 %935, 1
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %937
  %939 = load i8, i8* %938, align 1
  %940 = zext i8 %939 to i32
  %941 = load i32, i32* %6, align 4
  %942 = icmp eq i32 %940, %941
  br label %originalBB167

originalBB182alteredBB:                           ; preds = %originalBB182, %726
  %943 = load i32, i32* %4, align 4
  %_183 = sub i32 0, %943
  %gen184 = add i32 %_183, 1
  %944 = add nsw i32 %943, 1
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %945
  %947 = load i32, i32* %946, align 4
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %948
  %950 = getelementptr inbounds %struct.string_data, %struct.string_data* %949, i32 0, i32 7
  %951 = load i32, i32* %950, align 4
  %952 = load i32, i32* @string_mark, align 4
  %953 = icmp ne i32 %951, %952
  br label %originalBB182

originalBB188alteredBB:                           ; preds = %originalBB188, %764
  store i32 0, i32* %3, align 4
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %781
  %954 = load i32, i32* %9, align 4
  %955 = icmp sgt i32 %954, 0
  %956 = zext i1 %955 to i32
  %957 = load i32, i32* %8, align 4
  %_193 = sub i32 0, %956
  %gen194 = add i32 %_193, %957
  %_195 = sub i32 %956, %957
  %gen196 = mul i32 %_195, %957
  %_197 = shl i32 %956, %957
  %_198 = sub i32 0, %956
  %gen199 = add i32 %_198, %957
  %_200 = sub i32 %956, %957
  %gen201 = mul i32 %_200, %957
  %_202 = shl i32 %956, %957
  %_203 = shl i32 %956, %957
  %_204 = shl i32 %956, %957
  %958 = add nsw i32 %956, %957
  %959 = icmp sge i32 %958, 2
  br label %originalBB192
}

; Function Attrs: noinline nounwind uwtable
define i32 @liberty_of_string(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp ult i32 %6, 421
  br i1 %7, label %8, label %32

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp ne i32 %13, 3
  br i1 %14, label %15, label %32

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* @x.93
  %17 = load i32, i32* @y.94
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  %24 = load i32, i32* @x.93
  %25 = load i32, i32* @y.94
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %55

; <label>:32:                                     ; preds = %8, %2
  %33 = load i32, i32* @x.93
  %34 = load i32, i32* @y.94
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  %41 = load i32, i32* %4, align 4
  %42 = sdiv i32 %41, 20
  %43 = sub nsw i32 %42, 1
  %44 = load i32, i32* %4, align 4
  %45 = srem i32 %44, 20
  %46 = sub nsw i32 %45, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2381, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %43, i32 %46)
  %47 = load i32, i32* @x.93
  %48 = load i32, i32* @y.94
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart224, label %originalBB1alteredBB

originalBBpart224:                                ; preds = %originalBB1
  br label %55

; <label>:55:                                     ; preds = %originalBBpart224, %originalBBpart2
  %56 = load i32, i32* %5, align 4
  %57 = icmp ult i32 %56, 421
  br i1 %57, label %58, label %82

; <label>:58:                                     ; preds = %55
  %59 = load i32, i32* %5, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = icmp ne i32 %63, 3
  br i1 %64, label %65, label %82

; <label>:65:                                     ; preds = %58
  %66 = load i32, i32* @x.93
  %67 = load i32, i32* @y.94
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %65
  %74 = load i32, i32* @x.93
  %75 = load i32, i32* @y.94
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %105

; <label>:82:                                     ; preds = %58, %55
  %83 = load i32, i32* @x.93
  %84 = load i32, i32* @y.94
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %82
  %91 = load i32, i32* %5, align 4
  %92 = sdiv i32 %91, 20
  %93 = sub nsw i32 %92, 1
  %94 = load i32, i32* %5, align 4
  %95 = srem i32 %94, 20
  %96 = sub nsw i32 %95, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2382, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 %93, i32 %96)
  %97 = load i32, i32* @x.93
  %98 = load i32, i32* @y.94
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart256, label %originalBB30alteredBB

originalBBpart256:                                ; preds = %originalBB30
  br label %105

; <label>:105:                                    ; preds = %originalBBpart256, %originalBBpart228
  %106 = load i32, i32* %4, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %135, label %112

; <label>:112:                                    ; preds = %105
  %113 = load i32, i32* @x.93
  %114 = load i32, i32* @y.94
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %112
  %121 = load i32, i32* %4, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = icmp eq i32 %125, 2
  %127 = load i32, i32* @x.93
  %128 = load i32, i32* @y.94
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %126, label %135, label %136

; <label>:135:                                    ; preds = %originalBBpart260, %105
  store i32 0, i32* %3, align 4
  br label %285

; <label>:136:                                    ; preds = %originalBBpart260
  %137 = load i32, i32* @x.93
  %138 = load i32, i32* @y.94
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %136
  %145 = load i32, i32* %4, align 4
  %146 = add nsw i32 %145, 20
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = load i32, i32* %5, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp eq i32 %150, %155
  %157 = load i32, i32* @x.93
  %158 = load i32, i32* @y.94
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart274, label %originalBB62alteredBB

originalBBpart274:                                ; preds = %originalBB62
  br i1 %156, label %165, label %176

; <label>:165:                                    ; preds = %originalBBpart274
  %166 = load i32, i32* %4, align 4
  %167 = add nsw i32 %166, 20
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* %5, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %170, %174
  br i1 %175, label %266, label %176

; <label>:176:                                    ; preds = %165, %originalBBpart274
  %177 = load i32, i32* %4, align 4
  %178 = sub nsw i32 %177, 1
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = load i32, i32* %5, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %182, %187
  br i1 %188, label %189, label %200

; <label>:189:                                    ; preds = %176
  %190 = load i32, i32* %4, align 4
  %191 = sub nsw i32 %190, 1
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = load i32, i32* %5, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %194, %198
  br i1 %199, label %266, label %200

; <label>:200:                                    ; preds = %189, %176
  %201 = load i32, i32* %4, align 4
  %202 = sub nsw i32 %201, 20
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = load i32, i32* %5, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = icmp eq i32 %206, %211
  br i1 %212, label %213, label %224

; <label>:213:                                    ; preds = %200
  %214 = load i32, i32* %4, align 4
  %215 = sub nsw i32 %214, 20
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = load i32, i32* %5, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %218, %222
  br i1 %223, label %266, label %224

; <label>:224:                                    ; preds = %213, %200
  %225 = load i32, i32* %4, align 4
  %226 = add nsw i32 %225, 1
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = load i32, i32* %5, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = icmp eq i32 %230, %235
  br i1 %236, label %237, label %248

; <label>:237:                                    ; preds = %224
  %238 = load i32, i32* %4, align 4
  %239 = add nsw i32 %238, 1
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = load i32, i32* %5, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %244
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %242, %246
  br label %248

; <label>:248:                                    ; preds = %237, %224
  %249 = phi i1 [ false, %224 ], [ %247, %237 ]
  %250 = load i32, i32* @x.93
  %251 = load i32, i32* @y.94
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %248
  %258 = load i32, i32* @x.93
  %259 = load i32, i32* @y.94
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %266

; <label>:266:                                    ; preds = %originalBBpart278, %213, %189, %165
  %267 = phi i1 [ true, %213 ], [ true, %189 ], [ true, %165 ], [ %249, %originalBBpart278 ]
  %268 = load i32, i32* @x.93
  %269 = load i32, i32* @y.94
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %266
  %276 = zext i1 %267 to i32
  store i32 %276, i32* %3, align 4
  %277 = load i32, i32* @x.93
  %278 = load i32, i32* @y.94
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %285

; <label>:285:                                    ; preds = %originalBBpart282, %135
  %286 = load i32, i32* %3, align 4
  ret i32 %286

originalBBalteredBB:                              ; preds = %originalBB, %15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %287 = load i32, i32* %4, align 4
  %_ = sub i32 %287, 20
  %gen = mul i32 %_, 20
  %_2 = shl i32 %287, 20
  %_3 = sub i32 %287, 20
  %gen4 = mul i32 %_3, 20
  %288 = sdiv i32 %287, 20
  %_5 = shl i32 %288, 1
  %_6 = shl i32 %288, 1
  %_7 = shl i32 %288, 1
  %_8 = sub i32 %288, 1
  %gen9 = mul i32 %_8, 1
  %_10 = sub i32 %288, 1
  %gen11 = mul i32 %_10, 1
  %289 = sub nsw i32 %288, 1
  %290 = load i32, i32* %4, align 4
  %_12 = sub i32 %290, 20
  %gen13 = mul i32 %_12, 20
  %_14 = sub i32 %290, 20
  %gen15 = mul i32 %_14, 20
  %_16 = shl i32 %290, 20
  %_17 = shl i32 %290, 20
  %_18 = shl i32 %290, 20
  %_19 = sub i32 0, %290
  %gen20 = add i32 %_19, 20
  %291 = srem i32 %290, 20
  %_21 = shl i32 %291, 1
  %_22 = shl i32 %291, 1
  %292 = sub nsw i32 %291, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2381, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %289, i32 %292)
  br label %originalBB1

originalBB26alteredBB:                            ; preds = %originalBB26, %65
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %82
  %293 = load i32, i32* %5, align 4
  %_31 = shl i32 %293, 20
  %_32 = sub i32 0, %293
  %gen33 = add i32 %_32, 20
  %_34 = sub i32 %293, 20
  %gen35 = mul i32 %_34, 20
  %_36 = shl i32 %293, 20
  %294 = sdiv i32 %293, 20
  %_37 = shl i32 %294, 1
  %_38 = sub i32 0, %294
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 0, %294
  %gen41 = add i32 %_40, 1
  %_42 = sub i32 0, %294
  %gen43 = add i32 %_42, 1
  %295 = sub nsw i32 %294, 1
  %296 = load i32, i32* %5, align 4
  %_44 = sub i32 0, %296
  %gen45 = add i32 %_44, 20
  %_46 = sub i32 0, %296
  %gen47 = add i32 %_46, 20
  %_48 = sub i32 %296, 20
  %gen49 = mul i32 %_48, 20
  %_50 = shl i32 %296, 20
  %_51 = sub i32 %296, 20
  %gen52 = mul i32 %_51, 20
  %297 = srem i32 %296, 20
  %_53 = sub i32 %297, 1
  %gen54 = mul i32 %_53, 1
  %298 = sub nsw i32 %297, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2382, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 %295, i32 %298)
  br label %originalBB30

originalBB58alteredBB:                            ; preds = %originalBB58, %112
  %299 = load i32, i32* %4, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = icmp eq i32 %303, 2
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %136
  %305 = load i32, i32* %4, align 4
  %_63 = sub i32 0, %305
  %gen64 = add i32 %_63, 20
  %_65 = sub i32 0, %305
  %gen66 = add i32 %_65, 20
  %_67 = sub i32 %305, 20
  %gen68 = mul i32 %_67, 20
  %_69 = sub i32 0, %305
  %gen70 = add i32 %_69, 20
  %_71 = sub i32 %305, 20
  %gen72 = mul i32 %_71, 20
  %306 = add nsw i32 %305, 20
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i32
  %311 = load i32, i32* %5, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = icmp eq i32 %310, %315
  br label %originalBB62

originalBB76alteredBB:                            ; preds = %originalBB76, %248
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %266
  %317 = zext i1 %267 to i32
  store i32 %317, i32* %3, align 4
  br label %originalBB80
}

; Function Attrs: noinline nounwind uwtable
define i32 @second_order_liberty_of_string(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 421
  br i1 %8, label %9, label %17

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = icmp ne i32 %14, 3
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %9
  br label %24

; <label>:17:                                     ; preds = %9, %2
  %18 = load i32, i32* %4, align 4
  %19 = sdiv i32 %18, 20
  %20 = sub nsw i32 %19, 1
  %21 = load i32, i32* %4, align 4
  %22 = srem i32 %21, 20
  %23 = sub nsw i32 %22, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2397, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %20, i32 %23)
  br label %24

; <label>:24:                                     ; preds = %17, %16
  %25 = load i32, i32* %5, align 4
  %26 = icmp ult i32 %25, 421
  br i1 %26, label %27, label %35

; <label>:27:                                     ; preds = %24
  %28 = load i32, i32* %5, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 3
  br i1 %33, label %34, label %35

; <label>:34:                                     ; preds = %27
  br label %42

; <label>:35:                                     ; preds = %27, %24
  %36 = load i32, i32* %5, align 4
  %37 = sdiv i32 %36, 20
  %38 = sub nsw i32 %37, 1
  %39 = load i32, i32* %5, align 4
  %40 = srem i32 %39, 20
  %41 = sub nsw i32 %40, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2398, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 %38, i32 %41)
  br label %42

; <label>:42:                                     ; preds = %35, %34
  store i32 0, i32* %6, align 4
  br label %43

; <label>:43:                                     ; preds = %244, %42
  %44 = load i32, i32* %6, align 4
  %45 = icmp slt i32 %44, 4
  br i1 %45, label %46, label %247

; <label>:46:                                     ; preds = %43
  %47 = load i32, i32* %4, align 4
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %47, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %243

; <label>:58:                                     ; preds = %46
  %59 = load i32, i32* %4, align 4
  %60 = load i32, i32* %6, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %59, %63
  %65 = add nsw i32 %64, 20
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = load i32, i32* %5, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = icmp eq i32 %69, %74
  br i1 %75, label %76, label %92

; <label>:76:                                     ; preds = %58
  %77 = load i32, i32* %4, align 4
  %78 = load i32, i32* %6, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = add nsw i32 %77, %81
  %83 = add nsw i32 %82, 20
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = load i32, i32* %5, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %86, %90
  br i1 %91, label %242, label %92

; <label>:92:                                     ; preds = %76, %58
  %93 = load i32, i32* @x.95
  %94 = load i32, i32* @y.96
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %92
  %101 = load i32, i32* %4, align 4
  %102 = load i32, i32* %6, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %101, %105
  %107 = sub nsw i32 %106, 1
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = load i32, i32* %5, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %111, %116
  %118 = load i32, i32* @x.95
  %119 = load i32, i32* @y.96
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %117, label %126, label %142

; <label>:126:                                    ; preds = %originalBBpart2
  %127 = load i32, i32* %4, align 4
  %128 = load i32, i32* %6, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = add nsw i32 %127, %131
  %133 = sub nsw i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %5, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %136, %140
  br i1 %141, label %242, label %142

; <label>:142:                                    ; preds = %126, %originalBBpart2
  %143 = load i32, i32* @x.95
  %144 = load i32, i32* @y.96
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %142
  %151 = load i32, i32* %4, align 4
  %152 = load i32, i32* %6, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = add nsw i32 %151, %155
  %157 = sub nsw i32 %156, 20
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = load i32, i32* %5, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %161, %166
  %168 = load i32, i32* @x.95
  %169 = load i32, i32* @y.96
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart233, label %originalBB11alteredBB

originalBBpart233:                                ; preds = %originalBB11
  br i1 %167, label %176, label %192

; <label>:176:                                    ; preds = %originalBBpart233
  %177 = load i32, i32* %4, align 4
  %178 = load i32, i32* %6, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = add nsw i32 %177, %181
  %183 = sub nsw i32 %182, 20
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = load i32, i32* %5, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %186, %190
  br i1 %191, label %242, label %192

; <label>:192:                                    ; preds = %176, %originalBBpart233
  %193 = load i32, i32* %4, align 4
  %194 = load i32, i32* %6, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %195
  %197 = load i32, i32* %196, align 4
  %198 = add nsw i32 %193, %197
  %199 = add nsw i32 %198, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = load i32, i32* %5, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = icmp eq i32 %203, %208
  br i1 %209, label %210, label %243

; <label>:210:                                    ; preds = %192
  %211 = load i32, i32* @x.95
  %212 = load i32, i32* @y.96
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %210
  %219 = load i32, i32* %4, align 4
  %220 = load i32, i32* %6, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = add nsw i32 %219, %223
  %225 = add nsw i32 %224, 1
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = load i32, i32* %5, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %228, %232
  %234 = load i32, i32* @x.95
  %235 = load i32, i32* @y.96
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart249, label %originalBB35alteredBB

originalBBpart249:                                ; preds = %originalBB35
  br i1 %233, label %242, label %243

; <label>:242:                                    ; preds = %originalBBpart249, %176, %126, %76
  store i32 1, i32* %3, align 4
  br label %248

; <label>:243:                                    ; preds = %originalBBpart249, %192, %46
  br label %244

; <label>:244:                                    ; preds = %243
  %245 = load i32, i32* %6, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %6, align 4
  br label %43

; <label>:247:                                    ; preds = %43
  store i32 0, i32* %3, align 4
  br label %248

; <label>:248:                                    ; preds = %247, %242
  %249 = load i32, i32* %3, align 4
  ret i32 %249

originalBBalteredBB:                              ; preds = %originalBB, %92
  %250 = load i32, i32* %4, align 4
  %251 = load i32, i32* %6, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %252
  %254 = load i32, i32* %253, align 4
  %_ = sub i32 0, %250
  %gen = add i32 %_, %254
  %_1 = sub i32 0, %250
  %gen2 = add i32 %_1, %254
  %_3 = shl i32 %250, %254
  %255 = add nsw i32 %250, %254
  %_4 = sub i32 0, %255
  %gen5 = add i32 %_4, 1
  %_6 = sub i32 %255, 1
  %gen7 = mul i32 %_6, 1
  %_8 = shl i32 %255, 1
  %_9 = sub i32 0, %255
  %gen10 = add i32 %_9, 1
  %256 = sub nsw i32 %255, 1
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %257
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i32
  %261 = load i32, i32* %5, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = icmp eq i32 %260, %265
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %142
  %267 = load i32, i32* %4, align 4
  %268 = load i32, i32* %6, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %269
  %271 = load i32, i32* %270, align 4
  %_12 = sub i32 %267, %271
  %gen13 = mul i32 %_12, %271
  %_14 = sub i32 0, %267
  %gen15 = add i32 %_14, %271
  %_16 = sub i32 %267, %271
  %gen17 = mul i32 %_16, %271
  %_18 = sub i32 0, %267
  %gen19 = add i32 %_18, %271
  %_20 = sub i32 0, %267
  %gen21 = add i32 %_20, %271
  %272 = add nsw i32 %267, %271
  %_22 = sub i32 0, %272
  %gen23 = add i32 %_22, 20
  %_24 = sub i32 0, %272
  %gen25 = add i32 %_24, 20
  %_26 = shl i32 %272, 20
  %_27 = sub i32 %272, 20
  %gen28 = mul i32 %_27, 20
  %_29 = sub i32 0, %272
  %gen30 = add i32 %_29, 20
  %_31 = shl i32 %272, 20
  %273 = sub nsw i32 %272, 20
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = load i32, i32* %5, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = icmp eq i32 %277, %282
  br label %originalBB11

originalBB35alteredBB:                            ; preds = %originalBB35, %210
  %284 = load i32, i32* %4, align 4
  %285 = load i32, i32* %6, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = add nsw i32 %284, %288
  %_36 = sub i32 %289, 1
  %gen37 = mul i32 %_36, 1
  %_38 = sub i32 0, %289
  %gen39 = add i32 %_38, 1
  %_40 = shl i32 %289, 1
  %_41 = shl i32 %289, 1
  %_42 = sub i32 %289, 1
  %gen43 = mul i32 %_42, 1
  %_44 = sub i32 %289, 1
  %gen45 = mul i32 %_44, 1
  %_46 = sub i32 0, %289
  %gen47 = add i32 %_46, 1
  %290 = add nsw i32 %289, 1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = load i32, i32* %5, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %293, %297
  br label %originalBB35
}

; Function Attrs: noinline nounwind uwtable
define i32 @neighbor_of_string(i32, i32) #0 {
  %3 = load i32, i32* @x.97
  %4 = load i32, i32* @y.98
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %14 = load i32, i32* %12, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  store i32 %18, i32* %13, align 4
  %19 = load i32, i32* %13, align 4
  %20 = icmp eq i32 %19, 1
  %21 = load i32, i32* @x.97
  %22 = load i32, i32* @y.98
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %32, label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* %13, align 4
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %29, %originalBBpart2
  br label %40

; <label>:33:                                     ; preds = %29
  %34 = load i32, i32* %12, align 4
  %35 = sdiv i32 %34, 20
  %36 = sub nsw i32 %35, 1
  %37 = load i32, i32* %12, align 4
  %38 = srem i32 %37, 20
  %39 = sub nsw i32 %38, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2418, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 %36, i32 %39)
  br label %40

; <label>:40:                                     ; preds = %33, %32
  %41 = load i32, i32* @x.97
  %42 = load i32, i32* @y.98
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %40
  %49 = load i32, i32* %11, align 4
  %50 = icmp ult i32 %49, 421
  %51 = load i32, i32* @x.97
  %52 = load i32, i32* @y.98
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %59, label %67

; <label>:59:                                     ; preds = %originalBBpart24
  %60 = load i32, i32* %11, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp ne i32 %64, 3
  br i1 %65, label %66, label %67

; <label>:66:                                     ; preds = %59
  br label %74

; <label>:67:                                     ; preds = %59, %originalBBpart24
  %68 = load i32, i32* %11, align 4
  %69 = sdiv i32 %68, 20
  %70 = sub nsw i32 %69, 1
  %71 = load i32, i32* %11, align 4
  %72 = srem i32 %71, 20
  %73 = sub nsw i32 %72, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2419, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %70, i32 %73)
  br label %74

; <label>:74:                                     ; preds = %67, %66
  %75 = load i32, i32* @x.97
  %76 = load i32, i32* @y.98
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %74
  %83 = load i32, i32* %11, align 4
  %84 = add nsw i32 %83, 20
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = load i32, i32* %13, align 4
  %90 = icmp eq i32 %88, %89
  %91 = load i32, i32* @x.97
  %92 = load i32, i32* @y.98
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br i1 %90, label %99, label %126

; <label>:99:                                     ; preds = %originalBBpart212
  %100 = load i32, i32* @x.97
  %101 = load i32, i32* @y.98
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %99
  %108 = load i32, i32* %11, align 4
  %109 = add nsw i32 %108, 20
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* %12, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %112, %116
  %118 = load i32, i32* @x.97
  %119 = load i32, i32* @y.98
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart228, label %originalBB14alteredBB

originalBBpart228:                                ; preds = %originalBB14
  br i1 %117, label %252, label %126

; <label>:126:                                    ; preds = %originalBBpart228, %originalBBpart212
  %127 = load i32, i32* %11, align 4
  %128 = sub nsw i32 %127, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = load i32, i32* %13, align 4
  %134 = icmp eq i32 %132, %133
  br i1 %134, label %135, label %146

; <label>:135:                                    ; preds = %126
  %136 = load i32, i32* %11, align 4
  %137 = sub nsw i32 %136, 1
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = load i32, i32* %12, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %140, %144
  br i1 %145, label %252, label %146

; <label>:146:                                    ; preds = %135, %126
  %147 = load i32, i32* @x.97
  %148 = load i32, i32* @y.98
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %146
  %155 = load i32, i32* %11, align 4
  %156 = sub nsw i32 %155, 20
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %157
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = load i32, i32* %13, align 4
  %162 = icmp eq i32 %160, %161
  %163 = load i32, i32* @x.97
  %164 = load i32, i32* @y.98
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart245, label %originalBB30alteredBB

originalBBpart245:                                ; preds = %originalBB30
  br i1 %162, label %171, label %198

; <label>:171:                                    ; preds = %originalBBpart245
  %172 = load i32, i32* @x.97
  %173 = load i32, i32* @y.98
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %171
  %180 = load i32, i32* %11, align 4
  %181 = sub nsw i32 %180, 20
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = load i32, i32* %12, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %184, %188
  %190 = load i32, i32* @x.97
  %191 = load i32, i32* @y.98
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart253, label %originalBB47alteredBB

originalBBpart253:                                ; preds = %originalBB47
  br i1 %189, label %252, label %198

; <label>:198:                                    ; preds = %originalBBpart253, %originalBBpart245
  %199 = load i32, i32* @x.97
  %200 = load i32, i32* @y.98
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %198
  %207 = load i32, i32* %11, align 4
  %208 = add nsw i32 %207, 1
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = load i32, i32* %13, align 4
  %214 = icmp eq i32 %212, %213
  %215 = load i32, i32* @x.97
  %216 = load i32, i32* @y.98
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart269, label %originalBB55alteredBB

originalBBpart269:                                ; preds = %originalBB55
  br i1 %214, label %223, label %250

; <label>:223:                                    ; preds = %originalBBpart269
  %224 = load i32, i32* @x.97
  %225 = load i32, i32* @y.98
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %223
  %232 = load i32, i32* %11, align 4
  %233 = add nsw i32 %232, 1
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = load i32, i32* %12, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %236, %240
  %242 = load i32, i32* @x.97
  %243 = load i32, i32* @y.98
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart276, label %originalBB71alteredBB

originalBBpart276:                                ; preds = %originalBB71
  br label %250

; <label>:250:                                    ; preds = %originalBBpart276, %originalBBpart269
  %251 = phi i1 [ false, %originalBBpart269 ], [ %241, %originalBBpart276 ]
  br label %252

; <label>:252:                                    ; preds = %250, %originalBBpart253, %135, %originalBBpart228
  %253 = phi i1 [ true, %originalBBpart253 ], [ true, %135 ], [ true, %originalBBpart228 ], [ %251, %250 ]
  %254 = zext i1 %253 to i32
  ret i32 %254

originalBBalteredBB:                              ; preds = %originalBB, %2
  %255 = alloca i32, align 4
  %256 = alloca i32, align 4
  %257 = alloca i32, align 4
  store i32 %0, i32* %255, align 4
  store i32 %1, i32* %256, align 4
  %258 = load i32, i32* %256, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i32
  store i32 %262, i32* %257, align 4
  %263 = load i32, i32* %257, align 4
  %264 = icmp eq i32 %263, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %265 = load i32, i32* %11, align 4
  %266 = icmp ult i32 %265, 421
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  %267 = load i32, i32* %11, align 4
  %_ = sub i32 0, %267
  %gen = add i32 %_, 20
  %_7 = sub i32 0, %267
  %gen8 = add i32 %_7, 20
  %_9 = sub i32 0, %267
  %gen10 = add i32 %_9, 20
  %268 = add nsw i32 %267, 20
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  %273 = load i32, i32* %13, align 4
  %274 = icmp eq i32 %272, %273
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %99
  %275 = load i32, i32* %11, align 4
  %_15 = sub i32 %275, 20
  %gen16 = mul i32 %_15, 20
  %_17 = sub i32 0, %275
  %gen18 = add i32 %_17, 20
  %_19 = sub i32 %275, 20
  %gen20 = mul i32 %_19, 20
  %_21 = shl i32 %275, 20
  %_22 = shl i32 %275, 20
  %_23 = sub i32 %275, 20
  %gen24 = mul i32 %_23, 20
  %_25 = shl i32 %275, 20
  %_26 = shl i32 %275, 20
  %276 = add nsw i32 %275, 20
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* %12, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = icmp eq i32 %279, %283
  br label %originalBB14

originalBB30alteredBB:                            ; preds = %originalBB30, %146
  %285 = load i32, i32* %11, align 4
  %_31 = sub i32 0, %285
  %gen32 = add i32 %_31, 20
  %_33 = shl i32 %285, 20
  %_34 = sub i32 %285, 20
  %gen35 = mul i32 %_34, 20
  %_36 = sub i32 %285, 20
  %gen37 = mul i32 %_36, 20
  %_38 = sub i32 0, %285
  %gen39 = add i32 %_38, 20
  %_40 = sub i32 %285, 20
  %gen41 = mul i32 %_40, 20
  %_42 = sub i32 %285, 20
  %gen43 = mul i32 %_42, 20
  %286 = sub nsw i32 %285, 20
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = load i32, i32* %13, align 4
  %292 = icmp eq i32 %290, %291
  br label %originalBB30

originalBB47alteredBB:                            ; preds = %originalBB47, %171
  %293 = load i32, i32* %11, align 4
  %_48 = sub i32 0, %293
  %gen49 = add i32 %_48, 20
  %_50 = sub i32 %293, 20
  %gen51 = mul i32 %_50, 20
  %294 = sub nsw i32 %293, 20
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = load i32, i32* %12, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = icmp eq i32 %297, %301
  br label %originalBB47

originalBB55alteredBB:                            ; preds = %originalBB55, %198
  %303 = load i32, i32* %11, align 4
  %_56 = sub i32 0, %303
  %gen57 = add i32 %_56, 1
  %_58 = sub i32 %303, 1
  %gen59 = mul i32 %_58, 1
  %_60 = sub i32 %303, 1
  %gen61 = mul i32 %_60, 1
  %_62 = shl i32 %303, 1
  %_63 = shl i32 %303, 1
  %_64 = sub i32 0, %303
  %gen65 = add i32 %_64, 1
  %_66 = sub i32 0, %303
  %gen67 = add i32 %_66, 1
  %304 = add nsw i32 %303, 1
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %305
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = load i32, i32* %13, align 4
  %310 = icmp eq i32 %308, %309
  br label %originalBB55

originalBB71alteredBB:                            ; preds = %originalBB71, %223
  %311 = load i32, i32* %11, align 4
  %_72 = sub i32 %311, 1
  %gen73 = mul i32 %_72, 1
  %_74 = shl i32 %311, 1
  %312 = add nsw i32 %311, 1
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %313
  %315 = load i32, i32* %314, align 4
  %316 = load i32, i32* %12, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = icmp eq i32 %315, %319
  br label %originalBB71
}

; Function Attrs: noinline nounwind uwtable
define i32 @has_neighbor(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp ult i32 %5, 421
  br i1 %6, label %7, label %47

; <label>:7:                                      ; preds = %2
  %8 = load i32, i32* @x.99
  %9 = load i32, i32* @y.100
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = load i32, i32* %3, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 3
  %22 = load i32, i32* @x.99
  %23 = load i32, i32* @y.100
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %47

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.99
  %32 = load i32, i32* @y.100
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %30
  %39 = load i32, i32* @x.99
  %40 = load i32, i32* @y.100
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54

; <label>:47:                                     ; preds = %originalBBpart2, %2
  %48 = load i32, i32* %3, align 4
  %49 = sdiv i32 %48, 20
  %50 = sub nsw i32 %49, 1
  %51 = load i32, i32* %3, align 4
  %52 = srem i32 %51, 20
  %53 = sub nsw i32 %52, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2431, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %50, i32 %53)
  br label %54

; <label>:54:                                     ; preds = %47, %originalBBpart24
  %55 = load i32, i32* %4, align 4
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %60, label %57

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %4, align 4
  %59 = icmp eq i32 %58, 2
  br i1 %59, label %60, label %61

; <label>:60:                                     ; preds = %57, %54
  br label %68

; <label>:61:                                     ; preds = %57
  %62 = load i32, i32* %3, align 4
  %63 = sdiv i32 %62, 20
  %64 = sub nsw i32 %63, 1
  %65 = load i32, i32* %3, align 4
  %66 = srem i32 %65, 20
  %67 = sub nsw i32 %66, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2432, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 %64, i32 %67)
  br label %68

; <label>:68:                                     ; preds = %61, %60
  %69 = load i32, i32* %3, align 4
  %70 = add nsw i32 %69, 20
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = load i32, i32* %4, align 4
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %120, label %77

; <label>:77:                                     ; preds = %68
  %78 = load i32, i32* @x.99
  %79 = load i32, i32* @y.100
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %77
  %86 = load i32, i32* %3, align 4
  %87 = sub nsw i32 %86, 1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = load i32, i32* %4, align 4
  %93 = icmp eq i32 %91, %92
  %94 = load i32, i32* @x.99
  %95 = load i32, i32* @y.100
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart213, label %originalBB6alteredBB

originalBBpart213:                                ; preds = %originalBB6
  br i1 %93, label %120, label %102

; <label>:102:                                    ; preds = %originalBBpart213
  %103 = load i32, i32* %3, align 4
  %104 = sub nsw i32 %103, 20
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = load i32, i32* %4, align 4
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %120, label %111

; <label>:111:                                    ; preds = %102
  %112 = load i32, i32* %3, align 4
  %113 = add nsw i32 %112, 1
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = load i32, i32* %4, align 4
  %119 = icmp eq i32 %117, %118
  br label %120

; <label>:120:                                    ; preds = %111, %102, %originalBBpart213, %68
  %121 = phi i1 [ true, %102 ], [ true, %originalBBpart213 ], [ true, %68 ], [ %119, %111 ]
  %122 = zext i1 %121 to i32
  ret i32 %122

originalBBalteredBB:                              ; preds = %originalBB, %7
  %123 = load i32, i32* %3, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp ne i32 %127, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  %129 = load i32, i32* %3, align 4
  %_ = sub i32 %129, 1
  %gen = mul i32 %_, 1
  %_7 = sub i32 %129, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 0, %129
  %gen10 = add i32 %_9, 1
  %_11 = shl i32 %129, 1
  %130 = sub nsw i32 %129, 1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = load i32, i32* %4, align 4
  %136 = icmp eq i32 %134, %135
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @same_string(i32, i32) #0 {
  %3 = load i32, i32* @x.101
  %4 = load i32, i32* @y.102
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %13 = load i32, i32* %11, align 4
  %14 = icmp ult i32 %13, 421
  %15 = load i32, i32* @x.101
  %16 = load i32, i32* @y.102
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %31

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = load i32, i32* %11, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = icmp ne i32 %28, 3
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %23
  br label %38

; <label>:31:                                     ; preds = %23, %originalBBpart2
  %32 = load i32, i32* %11, align 4
  %33 = sdiv i32 %32, 20
  %34 = sub nsw i32 %33, 1
  %35 = load i32, i32* %11, align 4
  %36 = srem i32 %35, 20
  %37 = sub nsw i32 %36, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2447, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 %34, i32 %37)
  br label %38

; <label>:38:                                     ; preds = %31, %30
  %39 = load i32, i32* %12, align 4
  %40 = icmp ult i32 %39, 421
  br i1 %40, label %41, label %65

; <label>:41:                                     ; preds = %38
  %42 = load i32, i32* @x.101
  %43 = load i32, i32* @y.102
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %41
  %50 = load i32, i32* %12, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = icmp ne i32 %54, 3
  %56 = load i32, i32* @x.101
  %57 = load i32, i32* @y.102
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %55, label %64, label %65

; <label>:64:                                     ; preds = %originalBBpart24
  br label %72

; <label>:65:                                     ; preds = %originalBBpart24, %38
  %66 = load i32, i32* %12, align 4
  %67 = sdiv i32 %66, 20
  %68 = sub nsw i32 %67, 1
  %69 = load i32, i32* %12, align 4
  %70 = srem i32 %69, 20
  %71 = sub nsw i32 %70, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2448, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %68, i32 %71)
  br label %72

; <label>:72:                                     ; preds = %65, %64
  %73 = load i32, i32* %11, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %102, label %79

; <label>:79:                                     ; preds = %72
  %80 = load i32, i32* @x.101
  %81 = load i32, i32* @y.102
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %79
  %88 = load i32, i32* %11, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 2
  %94 = load i32, i32* @x.101
  %95 = load i32, i32* @y.102
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %93, label %102, label %103

; <label>:102:                                    ; preds = %originalBBpart28, %72
  br label %126

; <label>:103:                                    ; preds = %originalBBpart28
  %104 = load i32, i32* @x.101
  %105 = load i32, i32* @y.102
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %103
  %112 = load i32, i32* %11, align 4
  %113 = sdiv i32 %112, 20
  %114 = sub nsw i32 %113, 1
  %115 = load i32, i32* %11, align 4
  %116 = srem i32 %115, 20
  %117 = sub nsw i32 %116, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2449, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 %114, i32 %117)
  %118 = load i32, i32* @x.101
  %119 = load i32, i32* @y.102
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart231, label %originalBB10alteredBB

originalBBpart231:                                ; preds = %originalBB10
  br label %126

; <label>:126:                                    ; preds = %originalBBpart231, %102
  %127 = load i32, i32* @x.101
  %128 = load i32, i32* @y.102
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %126
  %135 = load i32, i32* %12, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp eq i32 %139, 1
  %141 = load i32, i32* @x.101
  %142 = load i32, i32* @y.102
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %140, label %156, label %149

; <label>:149:                                    ; preds = %originalBBpart235
  %150 = load i32, i32* %12, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = icmp eq i32 %154, 2
  br i1 %155, label %156, label %157

; <label>:156:                                    ; preds = %149, %originalBBpart235
  br label %164

; <label>:157:                                    ; preds = %149
  %158 = load i32, i32* %12, align 4
  %159 = sdiv i32 %158, 20
  %160 = sub nsw i32 %159, 1
  %161 = load i32, i32* %12, align 4
  %162 = srem i32 %161, 20
  %163 = sub nsw i32 %162, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2450, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i32 %160, i32 %163)
  br label %164

; <label>:164:                                    ; preds = %157, %156
  %165 = load i32, i32* %11, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = load i32, i32* %12, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %168, %172
  %174 = zext i1 %173 to i32
  ret i32 %174

originalBBalteredBB:                              ; preds = %originalBB, %2
  %175 = alloca i32, align 4
  %176 = alloca i32, align 4
  store i32 %0, i32* %175, align 4
  store i32 %1, i32* %176, align 4
  %177 = load i32, i32* %175, align 4
  %178 = icmp ult i32 %177, 421
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %179 = load i32, i32* %12, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp ne i32 %183, 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %79
  %185 = load i32, i32* %11, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp eq i32 %189, 2
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %103
  %191 = load i32, i32* %11, align 4
  %192 = sdiv i32 %191, 20
  %_ = sub i32 %192, 1
  %gen = mul i32 %_, 1
  %_11 = sub i32 0, %192
  %gen12 = add i32 %_11, 1
  %193 = sub nsw i32 %192, 1
  %194 = load i32, i32* %11, align 4
  %_13 = sub i32 0, %194
  %gen14 = add i32 %_13, 20
  %_15 = sub i32 %194, 20
  %gen16 = mul i32 %_15, 20
  %_17 = sub i32 %194, 20
  %gen18 = mul i32 %_17, 20
  %195 = srem i32 %194, 20
  %_19 = sub i32 %195, 1
  %gen20 = mul i32 %_19, 1
  %_21 = shl i32 %195, 1
  %_22 = shl i32 %195, 1
  %_23 = sub i32 0, %195
  %gen24 = add i32 %_23, 1
  %_25 = shl i32 %195, 1
  %_26 = sub i32 %195, 1
  %gen27 = mul i32 %_26, 1
  %_28 = sub i32 %195, 1
  %gen29 = mul i32 %_28, 1
  %196 = sub nsw i32 %195, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2449, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 %193, i32 %196)
  br label %originalBB10

originalBB33alteredBB:                            ; preds = %originalBB33, %126
  %197 = load i32, i32* %12, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = icmp eq i32 %201, 1
  br label %originalBB33
}

; Function Attrs: noinline nounwind uwtable
define i32 @adjacent_strings(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp ult i32 %9, 421
  br i1 %10, label %11, label %51

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.103
  %13 = load i32, i32* @y.104
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = load i32, i32* %4, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 3
  %26 = load i32, i32* @x.103
  %27 = load i32, i32* @y.104
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %51

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.103
  %36 = load i32, i32* @y.104
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %34
  %43 = load i32, i32* @x.103
  %44 = load i32, i32* @y.104
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %74

; <label>:51:                                     ; preds = %originalBBpart2, %2
  %52 = load i32, i32* @x.103
  %53 = load i32, i32* @y.104
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %51
  %60 = load i32, i32* %4, align 4
  %61 = sdiv i32 %60, 20
  %62 = sub nsw i32 %61, 1
  %63 = load i32, i32* %4, align 4
  %64 = srem i32 %63, 20
  %65 = sub nsw i32 %64, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2466, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 %62, i32 %65)
  %66 = load i32, i32* @x.103
  %67 = load i32, i32* @y.104
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart242, label %originalBB6alteredBB

originalBBpart242:                                ; preds = %originalBB6
  br label %74

; <label>:74:                                     ; preds = %originalBBpart242, %originalBBpart24
  %75 = load i32, i32* %5, align 4
  %76 = icmp ult i32 %75, 421
  br i1 %76, label %77, label %101

; <label>:77:                                     ; preds = %74
  %78 = load i32, i32* %5, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = icmp ne i32 %82, 3
  br i1 %83, label %84, label %101

; <label>:84:                                     ; preds = %77
  %85 = load i32, i32* @x.103
  %86 = load i32, i32* @y.104
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %84
  %93 = load i32, i32* @x.103
  %94 = load i32, i32* @y.104
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %124

; <label>:101:                                    ; preds = %77, %74
  %102 = load i32, i32* @x.103
  %103 = load i32, i32* @y.104
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %101
  %110 = load i32, i32* %5, align 4
  %111 = sdiv i32 %110, 20
  %112 = sub nsw i32 %111, 1
  %113 = load i32, i32* %5, align 4
  %114 = srem i32 %113, 20
  %115 = sub nsw i32 %114, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2467, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %112, i32 %115)
  %116 = load i32, i32* @x.103
  %117 = load i32, i32* @y.104
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart275, label %originalBB48alteredBB

originalBBpart275:                                ; preds = %originalBB48
  br label %124

; <label>:124:                                    ; preds = %originalBBpart275, %originalBBpart246
  %125 = load i32, i32* %4, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %138, label %131

; <label>:131:                                    ; preds = %124
  %132 = load i32, i32* %4, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = icmp eq i32 %136, 2
  br i1 %137, label %138, label %139

; <label>:138:                                    ; preds = %131, %124
  br label %162

; <label>:139:                                    ; preds = %131
  %140 = load i32, i32* @x.103
  %141 = load i32, i32* @y.104
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %originalBB77alteredBB, %139
  %148 = load i32, i32* %4, align 4
  %149 = sdiv i32 %148, 20
  %150 = sub nsw i32 %149, 1
  %151 = load i32, i32* %4, align 4
  %152 = srem i32 %151, 20
  %153 = sub nsw i32 %152, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2468, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 %150, i32 %153)
  %154 = load i32, i32* @x.103
  %155 = load i32, i32* @y.104
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart2120, label %originalBB77alteredBB

originalBBpart2120:                               ; preds = %originalBB77
  br label %162

; <label>:162:                                    ; preds = %originalBBpart2120, %138
  %163 = load i32, i32* @x.103
  %164 = load i32, i32* @y.104
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %162
  %171 = load i32, i32* %5, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, 1
  %177 = load i32, i32* @x.103
  %178 = load i32, i32* @y.104
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %176, label %192, label %185

; <label>:185:                                    ; preds = %originalBBpart2124
  %186 = load i32, i32* %5, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %190, 2
  br i1 %191, label %192, label %193

; <label>:192:                                    ; preds = %185, %originalBBpart2124
  br label %216

; <label>:193:                                    ; preds = %185
  %194 = load i32, i32* @x.103
  %195 = load i32, i32* @y.104
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %193
  %202 = load i32, i32* %5, align 4
  %203 = sdiv i32 %202, 20
  %204 = sub nsw i32 %203, 1
  %205 = load i32, i32* %5, align 4
  %206 = srem i32 %205, 20
  %207 = sub nsw i32 %206, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2469, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i32 %204, i32 %207)
  %208 = load i32, i32* @x.103
  %209 = load i32, i32* @y.104
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart2165, label %originalBB126alteredBB

originalBBpart2165:                               ; preds = %originalBB126
  br label %216

; <label>:216:                                    ; preds = %originalBBpart2165, %192
  %217 = load i32, i32* %4, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %218
  %220 = load i32, i32* %219, align 4
  store i32 %220, i32* %6, align 4
  %221 = load i32, i32* %5, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  store i32 %224, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %225

; <label>:225:                                    ; preds = %278, %216
  %226 = load i32, i32* %8, align 4
  %227 = load i32, i32* %6, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %228
  %230 = getelementptr inbounds %struct.string_data, %struct.string_data* %229, i32 0, i32 5
  %231 = load i32, i32* %230, align 8
  %232 = icmp slt i32 %226, %231
  br i1 %232, label %233, label %281

; <label>:233:                                    ; preds = %225
  %234 = load i32, i32* @x.103
  %235 = load i32, i32* @y.104
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %233
  %242 = load i32, i32* %6, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %243
  %245 = getelementptr inbounds %struct.string_data, %struct.string_data* %244, i32 0, i32 6
  %246 = load i32, i32* %8, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [160 x i32], [160 x i32]* %245, i64 0, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = load i32, i32* %7, align 4
  %251 = icmp eq i32 %249, %250
  %252 = load i32, i32* @x.103
  %253 = load i32, i32* @y.104
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br i1 %251, label %260, label %277

; <label>:260:                                    ; preds = %originalBBpart2169
  %261 = load i32, i32* @x.103
  %262 = load i32, i32* @y.104
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %260
  store i32 1, i32* %3, align 4
  %269 = load i32, i32* @x.103
  %270 = load i32, i32* @y.104
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %282

; <label>:277:                                    ; preds = %originalBBpart2169
  br label %278

; <label>:278:                                    ; preds = %277
  %279 = load i32, i32* %8, align 4
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %8, align 4
  br label %225

; <label>:281:                                    ; preds = %225
  store i32 0, i32* %3, align 4
  br label %282

; <label>:282:                                    ; preds = %281, %originalBBpart2173
  %283 = load i32, i32* %3, align 4
  ret i32 %283

originalBBalteredBB:                              ; preds = %originalBB, %11
  %284 = load i32, i32* %4, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %285
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i32
  %289 = icmp ne i32 %288, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %290 = load i32, i32* %4, align 4
  %_ = sub i32 0, %290
  %gen = add i32 %_, 20
  %_7 = shl i32 %290, 20
  %_8 = sub i32 %290, 20
  %gen9 = mul i32 %_8, 20
  %291 = sdiv i32 %290, 20
  %_10 = sub i32 0, %291
  %gen11 = add i32 %_10, 1
  %_12 = sub i32 0, %291
  %gen13 = add i32 %_12, 1
  %_14 = shl i32 %291, 1
  %_15 = sub i32 %291, 1
  %gen16 = mul i32 %_15, 1
  %_17 = sub i32 0, %291
  %gen18 = add i32 %_17, 1
  %_19 = sub i32 0, %291
  %gen20 = add i32 %_19, 1
  %_21 = sub i32 %291, 1
  %gen22 = mul i32 %_21, 1
  %292 = sub nsw i32 %291, 1
  %293 = load i32, i32* %4, align 4
  %_23 = sub i32 %293, 20
  %gen24 = mul i32 %_23, 20
  %_25 = sub i32 %293, 20
  %gen26 = mul i32 %_25, 20
  %_27 = sub i32 %293, 20
  %gen28 = mul i32 %_27, 20
  %_29 = sub i32 0, %293
  %gen30 = add i32 %_29, 20
  %_31 = sub i32 0, %293
  %gen32 = add i32 %_31, 20
  %294 = srem i32 %293, 20
  %_33 = shl i32 %294, 1
  %_34 = sub i32 %294, 1
  %gen35 = mul i32 %_34, 1
  %_36 = shl i32 %294, 1
  %_37 = sub i32 %294, 1
  %gen38 = mul i32 %_37, 1
  %_39 = sub i32 %294, 1
  %gen40 = mul i32 %_39, 1
  %295 = sub nsw i32 %294, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2466, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 %292, i32 %295)
  br label %originalBB6

originalBB44alteredBB:                            ; preds = %originalBB44, %84
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %101
  %296 = load i32, i32* %5, align 4
  %297 = sdiv i32 %296, 20
  %_49 = sub i32 0, %297
  %gen50 = add i32 %_49, 1
  %_51 = sub i32 0, %297
  %gen52 = add i32 %_51, 1
  %_53 = sub i32 0, %297
  %gen54 = add i32 %_53, 1
  %_55 = shl i32 %297, 1
  %298 = sub nsw i32 %297, 1
  %299 = load i32, i32* %5, align 4
  %_56 = sub i32 %299, 20
  %gen57 = mul i32 %_56, 20
  %_58 = sub i32 %299, 20
  %gen59 = mul i32 %_58, 20
  %_60 = sub i32 %299, 20
  %gen61 = mul i32 %_60, 20
  %300 = srem i32 %299, 20
  %_62 = sub i32 0, %300
  %gen63 = add i32 %_62, 1
  %_64 = sub i32 %300, 1
  %gen65 = mul i32 %_64, 1
  %_66 = sub i32 %300, 1
  %gen67 = mul i32 %_66, 1
  %_68 = sub i32 0, %300
  %gen69 = add i32 %_68, 1
  %_70 = sub i32 %300, 1
  %gen71 = mul i32 %_70, 1
  %_72 = sub i32 0, %300
  %gen73 = add i32 %_72, 1
  %301 = sub nsw i32 %300, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2467, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 %298, i32 %301)
  br label %originalBB48

originalBB77alteredBB:                            ; preds = %originalBB77, %139
  %302 = load i32, i32* %4, align 4
  %_78 = sub i32 0, %302
  %gen79 = add i32 %_78, 20
  %_80 = sub i32 %302, 20
  %gen81 = mul i32 %_80, 20
  %_82 = sub i32 %302, 20
  %gen83 = mul i32 %_82, 20
  %_84 = sub i32 %302, 20
  %gen85 = mul i32 %_84, 20
  %_86 = shl i32 %302, 20
  %_87 = shl i32 %302, 20
  %_88 = sub i32 0, %302
  %gen89 = add i32 %_88, 20
  %_90 = sub i32 0, %302
  %gen91 = add i32 %_90, 20
  %_92 = sub i32 0, %302
  %gen93 = add i32 %_92, 20
  %303 = sdiv i32 %302, 20
  %_94 = sub i32 0, %303
  %gen95 = add i32 %_94, 1
  %_96 = sub i32 %303, 1
  %gen97 = mul i32 %_96, 1
  %_98 = sub i32 0, %303
  %gen99 = add i32 %_98, 1
  %_100 = shl i32 %303, 1
  %_101 = sub i32 0, %303
  %gen102 = add i32 %_101, 1
  %_103 = sub i32 0, %303
  %gen104 = add i32 %_103, 1
  %_105 = sub i32 %303, 1
  %gen106 = mul i32 %_105, 1
  %304 = sub nsw i32 %303, 1
  %305 = load i32, i32* %4, align 4
  %_107 = sub i32 0, %305
  %gen108 = add i32 %_107, 20
  %_109 = shl i32 %305, 20
  %_110 = shl i32 %305, 20
  %_111 = sub i32 0, %305
  %gen112 = add i32 %_111, 20
  %_113 = shl i32 %305, 20
  %_114 = shl i32 %305, 20
  %306 = srem i32 %305, 20
  %_115 = sub i32 %306, 1
  %gen116 = mul i32 %_115, 1
  %_117 = sub i32 0, %306
  %gen118 = add i32 %_117, 1
  %307 = sub nsw i32 %306, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2468, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 %304, i32 %307)
  br label %originalBB77

originalBB122alteredBB:                           ; preds = %originalBB122, %162
  %308 = load i32, i32* %5, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = icmp eq i32 %312, 1
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %193
  %314 = load i32, i32* %5, align 4
  %_127 = sub i32 %314, 20
  %gen128 = mul i32 %_127, 20
  %_129 = sub i32 %314, 20
  %gen130 = mul i32 %_129, 20
  %_131 = sub i32 0, %314
  %gen132 = add i32 %_131, 20
  %_133 = shl i32 %314, 20
  %_134 = sub i32 %314, 20
  %gen135 = mul i32 %_134, 20
  %_136 = sub i32 0, %314
  %gen137 = add i32 %_136, 20
  %_138 = shl i32 %314, 20
  %_139 = sub i32 %314, 20
  %gen140 = mul i32 %_139, 20
  %_141 = shl i32 %314, 20
  %315 = sdiv i32 %314, 20
  %_142 = sub i32 0, %315
  %gen143 = add i32 %_142, 1
  %_144 = shl i32 %315, 1
  %_145 = sub i32 %315, 1
  %gen146 = mul i32 %_145, 1
  %_147 = sub i32 %315, 1
  %gen148 = mul i32 %_147, 1
  %_149 = shl i32 %315, 1
  %316 = sub nsw i32 %315, 1
  %317 = load i32, i32* %5, align 4
  %_150 = sub i32 %317, 20
  %gen151 = mul i32 %_150, 20
  %_152 = sub i32 %317, 20
  %gen153 = mul i32 %_152, 20
  %_154 = sub i32 0, %317
  %gen155 = add i32 %_154, 20
  %_156 = sub i32 %317, 20
  %gen157 = mul i32 %_156, 20
  %_158 = sub i32 %317, 20
  %gen159 = mul i32 %_158, 20
  %318 = srem i32 %317, 20
  %_160 = shl i32 %318, 1
  %_161 = sub i32 0, %318
  %gen162 = add i32 %_161, 1
  %_163 = shl i32 %318, 1
  %319 = sub nsw i32 %318, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2469, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i32 %316, i32 %319)
  br label %originalBB126

originalBB167alteredBB:                           ; preds = %originalBB167, %233
  %320 = load i32, i32* %6, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %321
  %323 = getelementptr inbounds %struct.string_data, %struct.string_data* %322, i32 0, i32 6
  %324 = load i32, i32* %8, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [160 x i32], [160 x i32]* %323, i64 0, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = load i32, i32* %7, align 4
  %329 = icmp eq i32 %327, %328
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %260
  store i32 1, i32* %3, align 4
  br label %originalBB171
}

; Function Attrs: noinline nounwind uwtable
define i32 @is_ko_point(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.string_data*, align 8
  store i32 %0, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = icmp ult i32 %6, 421
  br i1 %7, label %8, label %16

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* %3, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp ne i32 %13, 3
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %8
  br label %23

; <label>:16:                                     ; preds = %8, %1
  %17 = load i32, i32* %3, align 4
  %18 = sdiv i32 %17, 20
  %19 = sub nsw i32 %18, 1
  %20 = load i32, i32* %3, align 4
  %21 = srem i32 %20, 20
  %22 = sub nsw i32 %21, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2563, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %19, i32 %22)
  br label %23

; <label>:23:                                     ; preds = %16, %15
  %24 = load i32, i32* %3, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %114

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* %3, align 4
  %32 = add nsw i32 %31, 20
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp ne i32 %36, 3
  br i1 %37, label %38, label %45

; <label>:38:                                     ; preds = %30
  %39 = load i32, i32* %3, align 4
  %40 = add nsw i32 %39, 20
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  store i32 %44, i32* %4, align 4
  br label %68

; <label>:45:                                     ; preds = %30
  %46 = load i32, i32* @x.105
  %47 = load i32, i32* @y.106
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %45
  %54 = load i32, i32* %3, align 4
  %55 = sub nsw i32 %54, 20
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  store i32 %59, i32* %4, align 4
  %60 = load i32, i32* @x.105
  %61 = load i32, i32* @y.106
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %68

; <label>:68:                                     ; preds = %originalBBpart2, %38
  %69 = load i32, i32* %4, align 4
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %90, label %71

; <label>:71:                                     ; preds = %68
  %72 = load i32, i32* @x.105
  %73 = load i32, i32* @y.106
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %71
  %80 = load i32, i32* %4, align 4
  %81 = icmp eq i32 %80, 2
  %82 = load i32, i32* @x.105
  %83 = load i32, i32* @y.106
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %81, label %90, label %113

; <label>:90:                                     ; preds = %originalBBpart213, %68
  %91 = load i32, i32* %3, align 4
  %92 = load i32, i32* %4, align 4
  %93 = sub nsw i32 3, %92
  %94 = call i32 @is_ko(i32 %91, i32 %93, i32* null)
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %113

; <label>:96:                                     ; preds = %90
  %97 = load i32, i32* @x.105
  %98 = load i32, i32* @y.106
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %96
  store i32 1, i32* %2, align 4
  %105 = load i32, i32* @x.105
  %106 = load i32, i32* @y.106
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %176

; <label>:113:                                    ; preds = %90, %originalBBpart213
  br label %175

; <label>:114:                                    ; preds = %23
  %115 = load i32, i32* %3, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %119
  store %struct.string_data* %120, %struct.string_data** %5, align 8
  %121 = load %struct.string_data*, %struct.string_data** %5, align 8
  %122 = getelementptr inbounds %struct.string_data, %struct.string_data* %121, i32 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %174

; <label>:125:                                    ; preds = %114
  %126 = load %struct.string_data*, %struct.string_data** %5, align 8
  %127 = getelementptr inbounds %struct.string_data, %struct.string_data* %126, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %174

; <label>:130:                                    ; preds = %125
  %131 = load i32, i32* @x.105
  %132 = load i32, i32* @y.106
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %130
  %139 = load %struct.string_data*, %struct.string_data** %5, align 8
  %140 = getelementptr inbounds %struct.string_data, %struct.string_data* %139, i32 0, i32 4
  %141 = getelementptr inbounds [20 x i32], [20 x i32]* %140, i64 0, i64 0
  %142 = load i32, i32* %141, align 4
  %143 = load %struct.string_data*, %struct.string_data** %5, align 8
  %144 = getelementptr inbounds %struct.string_data, %struct.string_data* %143, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = sub nsw i32 3, %145
  %147 = call i32 @is_ko(i32 %142, i32 %146, i32* null)
  %148 = icmp ne i32 %147, 0
  %149 = load i32, i32* @x.105
  %150 = load i32, i32* @y.106
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart226, label %originalBB19alteredBB

originalBBpart226:                                ; preds = %originalBB19
  br i1 %148, label %157, label %174

; <label>:157:                                    ; preds = %originalBBpart226
  %158 = load i32, i32* @x.105
  %159 = load i32, i32* @y.106
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %originalBB28alteredBB, %157
  store i32 1, i32* %2, align 4
  %166 = load i32, i32* @x.105
  %167 = load i32, i32* @y.106
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %176

; <label>:174:                                    ; preds = %originalBBpart226, %125, %114
  br label %175

; <label>:175:                                    ; preds = %174, %113
  store i32 0, i32* %2, align 4
  br label %176

; <label>:176:                                    ; preds = %175, %originalBBpart230, %originalBBpart217
  %177 = load i32, i32* %2, align 4
  ret i32 %177

originalBBalteredBB:                              ; preds = %originalBB, %45
  %178 = load i32, i32* %3, align 4
  %_ = shl i32 %178, 20
  %_1 = sub i32 %178, 20
  %gen = mul i32 %_1, 20
  %_2 = sub i32 0, %178
  %gen3 = add i32 %_2, 20
  %_4 = shl i32 %178, 20
  %_5 = sub i32 %178, 20
  %gen6 = mul i32 %_5, 20
  %_7 = sub i32 0, %178
  %gen8 = add i32 %_7, 20
  %_9 = sub i32 %178, 20
  %gen10 = mul i32 %_9, 20
  %179 = sub nsw i32 %178, 20
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  store i32 %183, i32* %4, align 4
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %71
  %184 = load i32, i32* %4, align 4
  %185 = icmp eq i32 %184, 2
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %96
  store i32 1, i32* %2, align 4
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %130
  %186 = load %struct.string_data*, %struct.string_data** %5, align 8
  %187 = getelementptr inbounds %struct.string_data, %struct.string_data* %186, i32 0, i32 4
  %188 = getelementptr inbounds [20 x i32], [20 x i32]* %187, i64 0, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = load %struct.string_data*, %struct.string_data** %5, align 8
  %191 = getelementptr inbounds %struct.string_data, %struct.string_data* %190, i32 0, i32 0
  %192 = load i32, i32* %191, align 4
  %_20 = sub i32 0, 3
  %gen21 = add i32 %_20, %192
  %_22 = sub i32 3, %192
  %gen23 = mul i32 %_22, %192
  %_24 = shl i32 3, %192
  %193 = sub nsw i32 3, %192
  %194 = call i32 @is_ko(i32 %189, i32 %193, i32* null)
  %195 = icmp ne i32 %194, 0
  br label %originalBB19

originalBB28alteredBB:                            ; preds = %originalBB28, %157
  store i32 1, i32* %2, align 4
  br label %originalBB28
}

; Function Attrs: noinline nounwind uwtable
define i32 @does_capture_something(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = sub nsw i32 3, %7
  store i32 %8, i32* %6, align 4
  %9 = load i32, i32* %4, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %2
  br label %39

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* @x.107
  %18 = load i32, i32* @y.108
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  %25 = load i32, i32* %4, align 4
  %26 = sdiv i32 %25, 20
  %27 = sub nsw i32 %26, 1
  %28 = load i32, i32* %4, align 4
  %29 = srem i32 %28, 20
  %30 = sub nsw i32 %29, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2592, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %27, i32 %30)
  %31 = load i32, i32* @x.107
  %32 = load i32, i32* @y.108
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %15
  %40 = load i32, i32* %4, align 4
  %41 = add nsw i32 %40, 20
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = load i32, i32* %6, align 4
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %92

; <label>:48:                                     ; preds = %39
  %49 = load i32, i32* @x.107
  %50 = load i32, i32* @y.108
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %48
  %57 = load i32, i32* %4, align 4
  %58 = add nsw i32 %57, 20
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %62
  %64 = getelementptr inbounds %struct.string_data, %struct.string_data* %63, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  %67 = load i32, i32* @x.107
  %68 = load i32, i32* @y.108
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart249, label %originalBB35alteredBB

originalBBpart249:                                ; preds = %originalBB35
  br i1 %66, label %75, label %92

; <label>:75:                                     ; preds = %originalBBpart249
  %76 = load i32, i32* @x.107
  %77 = load i32, i32* @y.108
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %75
  store i32 1, i32* %3, align 4
  %84 = load i32, i32* @x.107
  %85 = load i32, i32* @y.108
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %188

; <label>:92:                                     ; preds = %originalBBpart249, %39
  %93 = load i32, i32* %4, align 4
  %94 = sub nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = load i32, i32* %6, align 4
  %100 = icmp eq i32 %98, %99
  br i1 %100, label %101, label %113

; <label>:101:                                    ; preds = %92
  %102 = load i32, i32* %4, align 4
  %103 = sub nsw i32 %102, 1
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %107
  %109 = getelementptr inbounds %struct.string_data, %struct.string_data* %108, i32 0, i32 3
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %113

; <label>:112:                                    ; preds = %101
  store i32 1, i32* %3, align 4
  br label %188

; <label>:113:                                    ; preds = %101, %92
  %114 = load i32, i32* @x.107
  %115 = load i32, i32* @y.108
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %113
  %122 = load i32, i32* %4, align 4
  %123 = sub nsw i32 %122, 20
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = load i32, i32* %6, align 4
  %129 = icmp eq i32 %127, %128
  %130 = load i32, i32* @x.107
  %131 = load i32, i32* @y.108
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart264, label %originalBB55alteredBB

originalBBpart264:                                ; preds = %originalBB55
  br i1 %129, label %138, label %150

; <label>:138:                                    ; preds = %originalBBpart264
  %139 = load i32, i32* %4, align 4
  %140 = sub nsw i32 %139, 20
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %144
  %146 = getelementptr inbounds %struct.string_data, %struct.string_data* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %150

; <label>:149:                                    ; preds = %138
  store i32 1, i32* %3, align 4
  br label %188

; <label>:150:                                    ; preds = %138, %originalBBpart264
  %151 = load i32, i32* %4, align 4
  %152 = add nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = load i32, i32* %6, align 4
  %158 = icmp eq i32 %156, %157
  br i1 %158, label %159, label %187

; <label>:159:                                    ; preds = %150
  %160 = load i32, i32* %4, align 4
  %161 = add nsw i32 %160, 1
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %165
  %167 = getelementptr inbounds %struct.string_data, %struct.string_data* %166, i32 0, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %187

; <label>:170:                                    ; preds = %159
  %171 = load i32, i32* @x.107
  %172 = load i32, i32* @y.108
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %170
  store i32 1, i32* %3, align 4
  %179 = load i32, i32* @x.107
  %180 = load i32, i32* @y.108
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %188

; <label>:187:                                    ; preds = %159, %150
  store i32 0, i32* %3, align 4
  br label %188

; <label>:188:                                    ; preds = %187, %originalBBpart268, %149, %112, %originalBBpart253
  %189 = load i32, i32* %3, align 4
  ret i32 %189

originalBBalteredBB:                              ; preds = %originalBB, %16
  %190 = load i32, i32* %4, align 4
  %_ = sub i32 %190, 20
  %gen = mul i32 %_, 20
  %_1 = shl i32 %190, 20
  %_2 = sub i32 %190, 20
  %gen3 = mul i32 %_2, 20
  %_4 = shl i32 %190, 20
  %_5 = sub i32 %190, 20
  %gen6 = mul i32 %_5, 20
  %_7 = shl i32 %190, 20
  %_8 = sub i32 %190, 20
  %gen9 = mul i32 %_8, 20
  %_10 = sub i32 %190, 20
  %gen11 = mul i32 %_10, 20
  %191 = sdiv i32 %190, 20
  %_12 = sub i32 0, %191
  %gen13 = add i32 %_12, 1
  %_14 = shl i32 %191, 1
  %_15 = sub i32 0, %191
  %gen16 = add i32 %_15, 1
  %_17 = sub i32 0, %191
  %gen18 = add i32 %_17, 1
  %192 = sub nsw i32 %191, 1
  %193 = load i32, i32* %4, align 4
  %_19 = sub i32 0, %193
  %gen20 = add i32 %_19, 20
  %_21 = shl i32 %193, 20
  %194 = srem i32 %193, 20
  %_22 = sub i32 0, %194
  %gen23 = add i32 %_22, 1
  %_24 = sub i32 0, %194
  %gen25 = add i32 %_24, 1
  %_26 = sub i32 %194, 1
  %gen27 = mul i32 %_26, 1
  %_28 = sub i32 %194, 1
  %gen29 = mul i32 %_28, 1
  %_30 = sub i32 0, %194
  %gen31 = add i32 %_30, 1
  %_32 = sub i32 0, %194
  %gen33 = add i32 %_32, 1
  %_34 = shl i32 %194, 1
  %195 = sub nsw i32 %194, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2592, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i32 0, i32 0), i32 %192, i32 %195)
  br label %originalBB

originalBB35alteredBB:                            ; preds = %originalBB35, %48
  %196 = load i32, i32* %4, align 4
  %_36 = shl i32 %196, 20
  %_37 = sub i32 %196, 20
  %gen38 = mul i32 %_37, 20
  %_39 = shl i32 %196, 20
  %_40 = sub i32 0, %196
  %gen41 = add i32 %_40, 20
  %_42 = sub i32 %196, 20
  %gen43 = mul i32 %_42, 20
  %_44 = sub i32 0, %196
  %gen45 = add i32 %_44, 20
  %_46 = sub i32 0, %196
  %gen47 = add i32 %_46, 20
  %197 = add nsw i32 %196, 20
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %201
  %203 = getelementptr inbounds %struct.string_data, %struct.string_data* %202, i32 0, i32 3
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 1
  br label %originalBB35

originalBB51alteredBB:                            ; preds = %originalBB51, %75
  store i32 1, i32* %3, align 4
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %113
  %206 = load i32, i32* %4, align 4
  %_56 = sub i32 %206, 20
  %gen57 = mul i32 %_56, 20
  %_58 = shl i32 %206, 20
  %_59 = sub i32 0, %206
  %gen60 = add i32 %_59, 20
  %_61 = shl i32 %206, 20
  %_62 = shl i32 %206, 20
  %207 = sub nsw i32 %206, 20
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = load i32, i32* %6, align 4
  %213 = icmp eq i32 %211, %212
  br label %originalBB55

originalBB66alteredBB:                            ; preds = %originalBB66, %170
  store i32 1, i32* %3, align 4
  br label %originalBB66
}

; Function Attrs: noinline nounwind uwtable
define void @mark_string(i32, i8*, i8 signext) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8 %2, i8* %6, align 1
  %8 = load i32, i32* %4, align 4
  store i32 %8, i32* %7, align 4
  %9 = load i32, i32* %4, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %38, label %15

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.109
  %17 = load i32, i32* @y.110
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  %24 = load i32, i32* %4, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = icmp eq i32 %28, 2
  %30 = load i32, i32* @x.109
  %31 = load i32, i32* @y.110
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %39

; <label>:38:                                     ; preds = %originalBBpart2, %3
  br label %46

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* %4, align 4
  %41 = sdiv i32 %40, 20
  %42 = sub nsw i32 %41, 1
  %43 = load i32, i32* %4, align 4
  %44 = srem i32 %43, 20
  %45 = sub nsw i32 %44, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2621, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 %42, i32 %45)
  br label %46

; <label>:46:                                     ; preds = %39, %38
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %46
  %48 = load i8, i8* %6, align 1
  %49 = load i8*, i8** %5, align 8
  %50 = load i32, i32* %7, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  store i8 %48, i8* %52, align 1
  %53 = load i32, i32* %7, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %7, align 4
  br label %57

; <label>:57:                                     ; preds = %47
  %58 = load i32, i32* @x.109
  %59 = load i32, i32* @y.110
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %57
  %66 = load i32, i32* %7, align 4
  %67 = load i32, i32* %4, align 4
  %68 = icmp ne i32 %66, %67
  %69 = load i32, i32* @x.109
  %70 = load i32, i32* @y.110
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %68, label %47, label %77

; <label>:77:                                     ; preds = %originalBBpart24
  %78 = load i32, i32* @x.109
  %79 = load i32, i32* @y.110
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %77
  %86 = load i32, i32* @x.109
  %87 = load i32, i32* @y.110
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %15
  %94 = load i32, i32* %4, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %57
  %100 = load i32, i32* %7, align 4
  %101 = load i32, i32* %4, align 4
  %102 = icmp ne i32 %100, %101
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @move_in_stack(i32, i32) #0 {
  %3 = load i32, i32* @x.111
  %4 = load i32, i32* @y.112
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %12, align 4
  store i32 %1, i32* %13, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %14, align 4
  %16 = load i32, i32* @x.111
  %17 = load i32, i32* @y.112
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24

; <label>:24:                                     ; preds = %53, %originalBBpart2
  %25 = load i32, i32* %14, align 4
  %26 = load i32, i32* @stackp, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %56

; <label>:28:                                     ; preds = %24
  %29 = load i32, i32* %14, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [361 x i32], [361 x i32]* @stack, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %12, align 4
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %35, label %52

; <label>:35:                                     ; preds = %28
  %36 = load i32, i32* @x.111
  %37 = load i32, i32* @y.112
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  store i32 1, i32* %11, align 4
  %44 = load i32, i32* @x.111
  %45 = load i32, i32* @y.112
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %57

; <label>:52:                                     ; preds = %28
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* %14, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %14, align 4
  br label %24

; <label>:56:                                     ; preds = %24
  store i32 0, i32* %11, align 4
  br label %57

; <label>:57:                                     ; preds = %56, %originalBBpart24
  %58 = load i32, i32* %11, align 4
  ret i32 %58

originalBBalteredBB:                              ; preds = %originalBB, %2
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  store i32 %0, i32* %60, align 4
  store i32 %1, i32* %61, align 4
  %63 = load i32, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  store i32 1, i32* %11, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define void @get_move_from_stack(i32, i32*, i32*) #0 {
  %4 = load i32, i32* @x.113
  %5 = load i32, i32* @y.114
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  store i32 %0, i32* %12, align 4
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32, i32* %12, align 4
  %16 = load i32, i32* @stackp, align 4
  %17 = icmp slt i32 %15, %16
  %18 = load i32, i32* @x.113
  %19 = load i32, i32* @y.114
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %43

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.113
  %28 = load i32, i32* @y.114
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %26
  %35 = load i32, i32* @x.113
  %36 = load i32, i32* @y.114
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44

; <label>:43:                                     ; preds = %originalBBpart2
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2649, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i32 0, i32 0), i32 -1, i32 -1)
  br label %44

; <label>:44:                                     ; preds = %43, %originalBBpart24
  %45 = load i32, i32* %12, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [361 x i32], [361 x i32]* @stack, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = load i32*, i32** %13, align 8
  store i32 %48, i32* %49, align 4
  %50 = load i32, i32* %12, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [361 x i32], [361 x i32]* @move_color, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %14, align 8
  store i32 %53, i32* %54, align 4
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %55 = alloca i32, align 4
  %56 = alloca i32*, align 8
  %57 = alloca i32*, align 8
  store i32 %0, i32* %55, align 4
  store i32* %1, i32** %56, align 8
  store i32* %2, i32** %57, align 8
  %58 = load i32, i32* %55, align 4
  %59 = load i32, i32* @stackp, align 4
  %60 = icmp slt i32 %58, %59
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define i32 @stones_on_board(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* @stackp, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  br label %8

; <label>:7:                                      ; preds = %1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2666, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i32 -1, i32 -1)
  br label %8

; <label>:8:                                      ; preds = %7, %6
  %9 = load i32, i32* @stones_on_board.stone_count_for_position, align 4
  %10 = load i32, i32* @position_number, align 4
  %11 = icmp ne i32 %9, %10
  br i1 %11, label %12, label %155

; <label>:12:                                     ; preds = %8
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %12
  store i32 0, i32* @stones_on_board.white_stones, align 4
  store i32 0, i32* @stones_on_board.black_stones, align 4
  store i32 21, i32* %3, align 4
  %21 = load i32, i32* @x.115
  %22 = load i32, i32* @y.116
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart233, %originalBBpart2
  %30 = load i32, i32* @x.115
  %31 = load i32, i32* @y.116
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %29
  %38 = load i32, i32* %3, align 4
  %39 = icmp slt i32 %38, 400
  %40 = load i32, i32* @x.115
  %41 = load i32, i32* @y.116
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %153

; <label>:48:                                     ; preds = %originalBBpart24
  %49 = load i32, i32* @x.115
  %50 = load i32, i32* @y.116
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %48
  %57 = load i32, i32* %3, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp eq i32 %61, 1
  %63 = load i32, i32* @x.115
  %64 = load i32, i32* @y.116
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %62, label %71, label %90

; <label>:71:                                     ; preds = %originalBBpart28
  %72 = load i32, i32* @x.115
  %73 = load i32, i32* @y.116
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %71
  %80 = load i32, i32* @stones_on_board.white_stones, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* @stones_on_board.white_stones, align 4
  %82 = load i32, i32* @x.115
  %83 = load i32, i32* @y.116
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart214, label %originalBB10alteredBB

originalBBpart214:                                ; preds = %originalBB10
  br label %117

; <label>:90:                                     ; preds = %originalBBpart28
  %91 = load i32, i32* %3, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp eq i32 %95, 2
  br i1 %96, label %97, label %100

; <label>:97:                                     ; preds = %90
  %98 = load i32, i32* @stones_on_board.black_stones, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* @stones_on_board.black_stones, align 4
  br label %100

; <label>:100:                                    ; preds = %97, %90
  %101 = load i32, i32* @x.115
  %102 = load i32, i32* @y.116
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %100
  %109 = load i32, i32* @x.115
  %110 = load i32, i32* @y.116
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %117

; <label>:117:                                    ; preds = %originalBBpart218, %originalBBpart214
  %118 = load i32, i32* @x.115
  %119 = load i32, i32* @y.116
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %117
  %126 = load i32, i32* @x.115
  %127 = load i32, i32* @y.116
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %134

; <label>:134:                                    ; preds = %originalBBpart222
  %135 = load i32, i32* @x.115
  %136 = load i32, i32* @y.116
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %134
  %143 = load i32, i32* %3, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %3, align 4
  %145 = load i32, i32* @x.115
  %146 = load i32, i32* @y.116
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart233, label %originalBB24alteredBB

originalBBpart233:                                ; preds = %originalBB24
  br label %29

; <label>:153:                                    ; preds = %originalBBpart24
  %154 = load i32, i32* @position_number, align 4
  store i32 %154, i32* @stones_on_board.stone_count_for_position, align 4
  br label %155

; <label>:155:                                    ; preds = %153, %8
  %156 = load i32, i32* @x.115
  %157 = load i32, i32* @y.116
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %155
  %164 = load i32, i32* %2, align 4
  %165 = and i32 %164, 2
  %166 = icmp ne i32 %165, 0
  %167 = load i32, i32* @x.115
  %168 = load i32, i32* @y.116
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart243, label %originalBB35alteredBB

originalBBpart243:                                ; preds = %originalBB35
  br i1 %166, label %175, label %177

; <label>:175:                                    ; preds = %originalBBpart243
  %176 = load i32, i32* @stones_on_board.black_stones, align 4
  br label %178

; <label>:177:                                    ; preds = %originalBBpart243
  br label %178

; <label>:178:                                    ; preds = %177, %175
  %179 = phi i32 [ %176, %175 ], [ 0, %177 ]
  %180 = load i32, i32* %2, align 4
  %181 = and i32 %180, 1
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %185

; <label>:183:                                    ; preds = %178
  %184 = load i32, i32* @stones_on_board.white_stones, align 4
  br label %186

; <label>:185:                                    ; preds = %178
  br label %186

; <label>:186:                                    ; preds = %185, %183
  %187 = phi i32 [ %184, %183 ], [ 0, %185 ]
  %188 = add nsw i32 %179, %187
  ret i32 %188

originalBBalteredBB:                              ; preds = %originalBB, %12
  store i32 0, i32* @stones_on_board.white_stones, align 4
  store i32 0, i32* @stones_on_board.black_stones, align 4
  store i32 21, i32* %3, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %189 = load i32, i32* %3, align 4
  %190 = icmp slt i32 %189, 400
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %191 = load i32, i32* %3, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp eq i32 %195, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %197 = load i32, i32* @stones_on_board.white_stones, align 4
  %_ = sub i32 %197, 1
  %gen = mul i32 %_, 1
  %_11 = sub i32 0, %197
  %gen12 = add i32 %_11, 1
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* @stones_on_board.white_stones, align 4
  br label %originalBB10

originalBB16alteredBB:                            ; preds = %originalBB16, %100
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %117
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %134
  %199 = load i32, i32* %3, align 4
  %_25 = sub i32 0, %199
  %gen26 = add i32 %_25, 1
  %_27 = sub i32 0, %199
  %gen28 = add i32 %_27, 1
  %_29 = sub i32 %199, 1
  %gen30 = mul i32 %_29, 1
  %_31 = shl i32 %199, 1
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %3, align 4
  br label %originalBB24

originalBB35alteredBB:                            ; preds = %originalBB35, %155
  %201 = load i32, i32* %2, align 4
  %_36 = shl i32 %201, 2
  %_37 = shl i32 %201, 2
  %_38 = shl i32 %201, 2
  %_39 = sub i32 0, %201
  %gen40 = add i32 %_39, 2
  %_41 = shl i32 %201, 2
  %202 = and i32 %201, 2
  %203 = icmp ne i32 %202, 0
  br label %originalBB35
}

; Function Attrs: noinline nounwind uwtable
define void @reset_trymove_counter() #0 {
  store i32 0, i32* @trymove_counter, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @get_trymove_counter() #0 {
  %1 = load i32, i32* @trymove_counter, align 4
  ret i32 %1
}

; Function Attrs: noinline nounwind uwtable
define void @incremental_order_moves(i32, i32, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) #0 {
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %struct.string_data*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %struct.string_data*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %struct.string_data*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca %struct.string_data*, align 8
  store i32 %0, i32* %12, align 4
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  store i32* %3, i32** %15, align 8
  store i32* %4, i32** %16, align 8
  store i32* %5, i32** %17, align 8
  store i32* %6, i32** %18, align 8
  store i32* %7, i32** %19, align 8
  store i32* %8, i32** %20, align 8
  store i32* %9, i32** %21, align 8
  store i32* %10, i32** %22, align 8
  %35 = load i32, i32* @string_mark, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* @string_mark, align 4
  %37 = load i32, i32* %12, align 4
  %38 = add nsw i32 %37, 20
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp ne i32 %42, 3
  br i1 %43, label %64, label %44

; <label>:44:                                     ; preds = %11
  %45 = load i32, i32* @x.121
  %46 = load i32, i32* @y.122
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %44
  %53 = load i32*, i32** %15, align 8
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %53, align 4
  %56 = load i32, i32* @x.121
  %57 = load i32, i32* @y.122
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %312

; <label>:64:                                     ; preds = %11
  %65 = load i32, i32* @x.121
  %66 = load i32, i32* @y.122
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %originalBB5alteredBB, %64
  %73 = load i32, i32* %12, align 4
  %74 = add nsw i32 %73, 20
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp eq i32 %78, 0
  %80 = load i32, i32* @x.121
  %81 = load i32, i32* @y.122
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart29, label %originalBB5alteredBB

originalBBpart29:                                 ; preds = %originalBB5
  br i1 %79, label %88, label %92

; <label>:88:                                     ; preds = %originalBBpart29
  %89 = load i32*, i32** %22, align 8
  %90 = load i32, i32* %89, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 4
  br label %311

; <label>:92:                                     ; preds = %originalBBpart29
  %93 = load i32, i32* @x.121
  %94 = load i32, i32* @y.122
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %92
  %101 = load i32, i32* %12, align 4
  %102 = add nsw i32 %101, 20
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %23, align 4
  %106 = load i32, i32* %14, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = load i32, i32* %23, align 4
  %111 = icmp eq i32 %109, %110
  %112 = load i32, i32* @x.121
  %113 = load i32, i32* @y.122
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart224, label %originalBB11alteredBB

originalBBpart224:                                ; preds = %originalBB11
  br i1 %111, label %120, label %124

; <label>:120:                                    ; preds = %originalBBpart224
  %121 = load i32*, i32** %16, align 8
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %121, align 4
  br label %124

; <label>:124:                                    ; preds = %120, %originalBBpart224
  %125 = load i32, i32* %12, align 4
  %126 = add nsw i32 %125, 20
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = load i32, i32* %13, align 4
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %133, label %185

; <label>:133:                                    ; preds = %124
  %134 = load i32, i32* @x.121
  %135 = load i32, i32* @y.122
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %133
  %142 = load i32*, i32** %17, align 8
  %143 = load i32, i32* %142, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %142, align 4
  %145 = load i32, i32* %23, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %146
  %148 = getelementptr inbounds %struct.string_data, %struct.string_data* %147, i32 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 1
  %151 = load i32, i32* @x.121
  %152 = load i32, i32* @y.122
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart232, label %originalBB26alteredBB

originalBBpart232:                                ; preds = %originalBB26
  br i1 %150, label %159, label %184

; <label>:159:                                    ; preds = %originalBBpart232
  %160 = load i32, i32* @x.121
  %161 = load i32, i32* @y.122
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %159
  %168 = load i32, i32* %23, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %169
  %171 = getelementptr inbounds %struct.string_data, %struct.string_data* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = load i32*, i32** %21, align 8
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %174, %172
  store i32 %175, i32* %173, align 4
  %176 = load i32, i32* @x.121
  %177 = load i32, i32* @y.122
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart239, label %originalBB34alteredBB

originalBBpart239:                                ; preds = %originalBB34
  br label %184

; <label>:184:                                    ; preds = %originalBBpart239, %originalBBpart232
  br label %310

; <label>:185:                                    ; preds = %124
  %186 = load i32*, i32** %18, align 8
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %186, align 4
  %189 = load i32, i32* %23, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %190
  %192 = getelementptr inbounds %struct.string_data, %struct.string_data* %191, i32 0, i32 3
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %255

; <label>:195:                                    ; preds = %185
  %196 = load i32, i32* %23, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %197
  %199 = getelementptr inbounds %struct.string_data, %struct.string_data* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = load i32*, i32** %19, align 8
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %202, %200
  store i32 %203, i32* %201, align 4
  store i32 0, i32* %24, align 4
  br label %204

; <label>:204:                                    ; preds = %235, %195
  %205 = load i32, i32* %24, align 4
  %206 = load i32, i32* %23, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %207
  %209 = getelementptr inbounds %struct.string_data, %struct.string_data* %208, i32 0, i32 5
  %210 = load i32, i32* %209, align 8
  %211 = icmp slt i32 %205, %210
  br i1 %211, label %212, label %238

; <label>:212:                                    ; preds = %204
  %213 = load i32, i32* %23, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %214
  %216 = getelementptr inbounds %struct.string_data, %struct.string_data* %215, i32 0, i32 6
  %217 = load i32, i32* %24, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [160 x i32], [160 x i32]* %216, i64 0, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %221
  store %struct.string_data* %222, %struct.string_data** %25, align 8
  %223 = load %struct.string_data*, %struct.string_data** %25, align 8
  %224 = getelementptr inbounds %struct.string_data, %struct.string_data* %223, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, 1
  br i1 %226, label %227, label %234

; <label>:227:                                    ; preds = %212
  %228 = load %struct.string_data*, %struct.string_data** %25, align 8
  %229 = getelementptr inbounds %struct.string_data, %struct.string_data* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = load i32*, i32** %21, align 8
  %232 = load i32, i32* %231, align 4
  %233 = add nsw i32 %232, %230
  store i32 %233, i32* %231, align 4
  br label %234

; <label>:234:                                    ; preds = %227, %212
  br label %235

; <label>:235:                                    ; preds = %234
  %236 = load i32, i32* %24, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %24, align 4
  br label %204

; <label>:238:                                    ; preds = %204
  %239 = load i32, i32* @x.121
  %240 = load i32, i32* @y.122
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %238
  %247 = load i32, i32* @x.121
  %248 = load i32, i32* @y.122
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %309

; <label>:255:                                    ; preds = %185
  %256 = load i32, i32* %23, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %257
  %259 = getelementptr inbounds %struct.string_data, %struct.string_data* %258, i32 0, i32 3
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 2
  br i1 %261, label %262, label %308

; <label>:262:                                    ; preds = %255
  %263 = load i32, i32* %12, align 4
  %264 = add nsw i32 %263, 20
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %268
  %270 = getelementptr inbounds %struct.string_data, %struct.string_data* %269, i32 0, i32 7
  %271 = load i32, i32* %270, align 4
  %272 = load i32, i32* @string_mark, align 4
  %273 = icmp ne i32 %271, %272
  br i1 %273, label %274, label %308

; <label>:274:                                    ; preds = %262
  %275 = load i32, i32* @x.121
  %276 = load i32, i32* @y.122
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %274
  %283 = load i32, i32* %23, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %284
  %286 = getelementptr inbounds %struct.string_data, %struct.string_data* %285, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = load i32*, i32** %20, align 8
  %289 = load i32, i32* %288, align 4
  %290 = add nsw i32 %289, %287
  store i32 %290, i32* %288, align 4
  %291 = load i32, i32* @string_mark, align 4
  %292 = load i32, i32* %12, align 4
  %293 = add nsw i32 %292, 20
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %297
  %299 = getelementptr inbounds %struct.string_data, %struct.string_data* %298, i32 0, i32 7
  store i32 %291, i32* %299, align 4
  %300 = load i32, i32* @x.121
  %301 = load i32, i32* @y.122
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart266, label %originalBB45alteredBB

originalBBpart266:                                ; preds = %originalBB45
  br label %308

; <label>:308:                                    ; preds = %originalBBpart266, %262, %255
  br label %309

; <label>:309:                                    ; preds = %308, %originalBBpart243
  br label %310

; <label>:310:                                    ; preds = %309, %184
  br label %311

; <label>:311:                                    ; preds = %310, %88
  br label %312

; <label>:312:                                    ; preds = %311, %originalBBpart2
  %313 = load i32, i32* %12, align 4
  %314 = sub nsw i32 %313, 1
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp ne i32 %318, 3
  br i1 %319, label %324, label %320

; <label>:320:                                    ; preds = %312
  %321 = load i32*, i32** %15, align 8
  %322 = load i32, i32* %321, align 4
  %323 = add nsw i32 %322, 1
  store i32 %323, i32* %321, align 4
  br label %572

; <label>:324:                                    ; preds = %312
  %325 = load i32, i32* @x.121
  %326 = load i32, i32* @y.122
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %324
  %333 = load i32, i32* %12, align 4
  %334 = sub nsw i32 %333, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = zext i8 %337 to i32
  %339 = icmp eq i32 %338, 0
  %340 = load i32, i32* @x.121
  %341 = load i32, i32* @y.122
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart285, label %originalBB68alteredBB

originalBBpart285:                                ; preds = %originalBB68
  br i1 %339, label %348, label %368

; <label>:348:                                    ; preds = %originalBBpart285
  %349 = load i32, i32* @x.121
  %350 = load i32, i32* @y.122
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %348
  %357 = load i32*, i32** %22, align 8
  %358 = load i32, i32* %357, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %357, align 4
  %360 = load i32, i32* @x.121
  %361 = load i32, i32* @y.122
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart296, label %originalBB87alteredBB

originalBBpart296:                                ; preds = %originalBB87
  br label %571

; <label>:368:                                    ; preds = %originalBBpart285
  %369 = load i32, i32* %12, align 4
  %370 = sub nsw i32 %369, 1
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  store i32 %373, i32* %26, align 4
  %374 = load i32, i32* %14, align 4
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = load i32, i32* %26, align 4
  %379 = icmp eq i32 %377, %378
  br i1 %379, label %380, label %384

; <label>:380:                                    ; preds = %368
  %381 = load i32*, i32** %16, align 8
  %382 = load i32, i32* %381, align 4
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* %381, align 4
  br label %384

; <label>:384:                                    ; preds = %380, %368
  %385 = load i32, i32* @x.121
  %386 = load i32, i32* @y.122
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %384
  %393 = load i32, i32* %12, align 4
  %394 = sub nsw i32 %393, 1
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %395
  %397 = load i8, i8* %396, align 1
  %398 = zext i8 %397 to i32
  %399 = load i32, i32* %13, align 4
  %400 = icmp eq i32 %398, %399
  %401 = load i32, i32* @x.121
  %402 = load i32, i32* @y.122
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart2113, label %originalBB98alteredBB

originalBBpart2113:                               ; preds = %originalBB98
  br i1 %400, label %409, label %445

; <label>:409:                                    ; preds = %originalBBpart2113
  %410 = load i32, i32* @x.121
  %411 = load i32, i32* @y.122
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %409
  %418 = load i32*, i32** %17, align 8
  %419 = load i32, i32* %418, align 4
  %420 = add nsw i32 %419, 1
  store i32 %420, i32* %418, align 4
  %421 = load i32, i32* %26, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %422
  %424 = getelementptr inbounds %struct.string_data, %struct.string_data* %423, i32 0, i32 3
  %425 = load i32, i32* %424, align 4
  %426 = icmp eq i32 %425, 1
  %427 = load i32, i32* @x.121
  %428 = load i32, i32* @y.122
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBBpart2125, label %originalBB115alteredBB

originalBBpart2125:                               ; preds = %originalBB115
  br i1 %426, label %435, label %444

; <label>:435:                                    ; preds = %originalBBpart2125
  %436 = load i32, i32* %26, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %437
  %439 = getelementptr inbounds %struct.string_data, %struct.string_data* %438, i32 0, i32 1
  %440 = load i32, i32* %439, align 4
  %441 = load i32*, i32** %21, align 8
  %442 = load i32, i32* %441, align 4
  %443 = add nsw i32 %442, %440
  store i32 %443, i32* %441, align 4
  br label %444

; <label>:444:                                    ; preds = %435, %originalBBpart2125
  br label %570

; <label>:445:                                    ; preds = %originalBBpart2113
  %446 = load i32*, i32** %18, align 8
  %447 = load i32, i32* %446, align 4
  %448 = add nsw i32 %447, 1
  store i32 %448, i32* %446, align 4
  %449 = load i32, i32* %26, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %450
  %452 = getelementptr inbounds %struct.string_data, %struct.string_data* %451, i32 0, i32 3
  %453 = load i32, i32* %452, align 4
  %454 = icmp eq i32 %453, 1
  br i1 %454, label %455, label %515

; <label>:455:                                    ; preds = %445
  %456 = load i32, i32* %26, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %457
  %459 = getelementptr inbounds %struct.string_data, %struct.string_data* %458, i32 0, i32 1
  %460 = load i32, i32* %459, align 4
  %461 = load i32*, i32** %19, align 8
  %462 = load i32, i32* %461, align 4
  %463 = add nsw i32 %462, %460
  store i32 %463, i32* %461, align 4
  store i32 0, i32* %27, align 4
  br label %464

; <label>:464:                                    ; preds = %495, %455
  %465 = load i32, i32* %27, align 4
  %466 = load i32, i32* %26, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %467
  %469 = getelementptr inbounds %struct.string_data, %struct.string_data* %468, i32 0, i32 5
  %470 = load i32, i32* %469, align 8
  %471 = icmp slt i32 %465, %470
  br i1 %471, label %472, label %498

; <label>:472:                                    ; preds = %464
  %473 = load i32, i32* %26, align 4
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %474
  %476 = getelementptr inbounds %struct.string_data, %struct.string_data* %475, i32 0, i32 6
  %477 = load i32, i32* %27, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds [160 x i32], [160 x i32]* %476, i64 0, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %481
  store %struct.string_data* %482, %struct.string_data** %28, align 8
  %483 = load %struct.string_data*, %struct.string_data** %28, align 8
  %484 = getelementptr inbounds %struct.string_data, %struct.string_data* %483, i32 0, i32 3
  %485 = load i32, i32* %484, align 4
  %486 = icmp eq i32 %485, 1
  br i1 %486, label %487, label %494

; <label>:487:                                    ; preds = %472
  %488 = load %struct.string_data*, %struct.string_data** %28, align 8
  %489 = getelementptr inbounds %struct.string_data, %struct.string_data* %488, i32 0, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = load i32*, i32** %21, align 8
  %492 = load i32, i32* %491, align 4
  %493 = add nsw i32 %492, %490
  store i32 %493, i32* %491, align 4
  br label %494

; <label>:494:                                    ; preds = %487, %472
  br label %495

; <label>:495:                                    ; preds = %494
  %496 = load i32, i32* %27, align 4
  %497 = add nsw i32 %496, 1
  store i32 %497, i32* %27, align 4
  br label %464

; <label>:498:                                    ; preds = %464
  %499 = load i32, i32* @x.121
  %500 = load i32, i32* @y.122
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %originalBB127alteredBB, %498
  %507 = load i32, i32* @x.121
  %508 = load i32, i32* @y.122
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br label %569

; <label>:515:                                    ; preds = %445
  %516 = load i32, i32* %26, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %517
  %519 = getelementptr inbounds %struct.string_data, %struct.string_data* %518, i32 0, i32 3
  %520 = load i32, i32* %519, align 4
  %521 = icmp eq i32 %520, 2
  br i1 %521, label %522, label %568

; <label>:522:                                    ; preds = %515
  %523 = load i32, i32* @x.121
  %524 = load i32, i32* @y.122
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %originalBB131alteredBB, %522
  %531 = load i32, i32* %12, align 4
  %532 = sub nsw i32 %531, 1
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %533
  %535 = load i32, i32* %534, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %536
  %538 = getelementptr inbounds %struct.string_data, %struct.string_data* %537, i32 0, i32 7
  %539 = load i32, i32* %538, align 4
  %540 = load i32, i32* @string_mark, align 4
  %541 = icmp ne i32 %539, %540
  %542 = load i32, i32* @x.121
  %543 = load i32, i32* @y.122
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart2139, label %originalBB131alteredBB

originalBBpart2139:                               ; preds = %originalBB131
  br i1 %541, label %550, label %568

; <label>:550:                                    ; preds = %originalBBpart2139
  %551 = load i32, i32* %26, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %552
  %554 = getelementptr inbounds %struct.string_data, %struct.string_data* %553, i32 0, i32 1
  %555 = load i32, i32* %554, align 4
  %556 = load i32*, i32** %20, align 8
  %557 = load i32, i32* %556, align 4
  %558 = add nsw i32 %557, %555
  store i32 %558, i32* %556, align 4
  %559 = load i32, i32* @string_mark, align 4
  %560 = load i32, i32* %12, align 4
  %561 = sub nsw i32 %560, 1
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %565
  %567 = getelementptr inbounds %struct.string_data, %struct.string_data* %566, i32 0, i32 7
  store i32 %559, i32* %567, align 4
  br label %568

; <label>:568:                                    ; preds = %550, %originalBBpart2139, %515
  br label %569

; <label>:569:                                    ; preds = %568, %originalBBpart2129
  br label %570

; <label>:570:                                    ; preds = %569, %444
  br label %571

; <label>:571:                                    ; preds = %570, %originalBBpart296
  br label %572

; <label>:572:                                    ; preds = %571, %320
  %573 = load i32, i32* %12, align 4
  %574 = sub nsw i32 %573, 20
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %575
  %577 = load i8, i8* %576, align 1
  %578 = zext i8 %577 to i32
  %579 = icmp ne i32 %578, 3
  br i1 %579, label %584, label %580

; <label>:580:                                    ; preds = %572
  %581 = load i32*, i32** %15, align 8
  %582 = load i32, i32* %581, align 4
  %583 = add nsw i32 %582, 1
  store i32 %583, i32* %581, align 4
  br label %912

; <label>:584:                                    ; preds = %572
  %585 = load i32, i32* %12, align 4
  %586 = sub nsw i32 %585, 20
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %587
  %589 = load i8, i8* %588, align 1
  %590 = zext i8 %589 to i32
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %612

; <label>:592:                                    ; preds = %584
  %593 = load i32, i32* @x.121
  %594 = load i32, i32* @y.122
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %592
  %601 = load i32*, i32** %22, align 8
  %602 = load i32, i32* %601, align 4
  %603 = add nsw i32 %602, 1
  store i32 %603, i32* %601, align 4
  %604 = load i32, i32* @x.121
  %605 = load i32, i32* @y.122
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBBpart2158, label %originalBB141alteredBB

originalBBpart2158:                               ; preds = %originalBB141
  br label %895

; <label>:612:                                    ; preds = %584
  %613 = load i32, i32* @x.121
  %614 = load i32, i32* @y.122
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBB160, label %originalBB160alteredBB

originalBB160:                                    ; preds = %originalBB160alteredBB, %612
  %621 = load i32, i32* %12, align 4
  %622 = sub nsw i32 %621, 20
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %623
  %625 = load i32, i32* %624, align 4
  store i32 %625, i32* %29, align 4
  %626 = load i32, i32* %14, align 4
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = load i32, i32* %29, align 4
  %631 = icmp eq i32 %629, %630
  %632 = load i32, i32* @x.121
  %633 = load i32, i32* @y.122
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBBpart2170, label %originalBB160alteredBB

originalBBpart2170:                               ; preds = %originalBB160
  br i1 %631, label %640, label %660

; <label>:640:                                    ; preds = %originalBBpart2170
  %641 = load i32, i32* @x.121
  %642 = load i32, i32* @y.122
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %originalBB172alteredBB, %640
  %649 = load i32*, i32** %16, align 8
  %650 = load i32, i32* %649, align 4
  %651 = add nsw i32 %650, 1
  store i32 %651, i32* %649, align 4
  %652 = load i32, i32* @x.121
  %653 = load i32, i32* @y.122
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBBpart2179, label %originalBB172alteredBB

originalBBpart2179:                               ; preds = %originalBB172
  br label %660

; <label>:660:                                    ; preds = %originalBBpart2179, %originalBBpart2170
  %661 = load i32, i32* %12, align 4
  %662 = sub nsw i32 %661, 20
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %663
  %665 = load i8, i8* %664, align 1
  %666 = zext i8 %665 to i32
  %667 = load i32, i32* %13, align 4
  %668 = icmp eq i32 %666, %667
  br i1 %668, label %669, label %721

; <label>:669:                                    ; preds = %660
  %670 = load i32*, i32** %17, align 8
  %671 = load i32, i32* %670, align 4
  %672 = add nsw i32 %671, 1
  store i32 %672, i32* %670, align 4
  %673 = load i32, i32* %29, align 4
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %674
  %676 = getelementptr inbounds %struct.string_data, %struct.string_data* %675, i32 0, i32 3
  %677 = load i32, i32* %676, align 4
  %678 = icmp eq i32 %677, 1
  br i1 %678, label %679, label %704

; <label>:679:                                    ; preds = %669
  %680 = load i32, i32* @x.121
  %681 = load i32, i32* @y.122
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %originalBB181alteredBB, %679
  %688 = load i32, i32* %29, align 4
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %689
  %691 = getelementptr inbounds %struct.string_data, %struct.string_data* %690, i32 0, i32 1
  %692 = load i32, i32* %691, align 4
  %693 = load i32*, i32** %21, align 8
  %694 = load i32, i32* %693, align 4
  %695 = add nsw i32 %694, %692
  store i32 %695, i32* %693, align 4
  %696 = load i32, i32* @x.121
  %697 = load i32, i32* @y.122
  %698 = sub i32 %696, 1
  %699 = mul i32 %696, %698
  %700 = urem i32 %699, 2
  %701 = icmp eq i32 %700, 0
  %702 = icmp slt i32 %697, 10
  %703 = or i1 %701, %702
  br i1 %703, label %originalBBpart2186, label %originalBB181alteredBB

originalBBpart2186:                               ; preds = %originalBB181
  br label %704

; <label>:704:                                    ; preds = %originalBBpart2186, %669
  %705 = load i32, i32* @x.121
  %706 = load i32, i32* @y.122
  %707 = sub i32 %705, 1
  %708 = mul i32 %705, %707
  %709 = urem i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %706, 10
  %712 = or i1 %710, %711
  br i1 %712, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %originalBB188alteredBB, %704
  %713 = load i32, i32* @x.121
  %714 = load i32, i32* @y.122
  %715 = sub i32 %713, 1
  %716 = mul i32 %713, %715
  %717 = urem i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = icmp slt i32 %714, 10
  %720 = or i1 %718, %719
  br i1 %720, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br label %894

; <label>:721:                                    ; preds = %660
  %722 = load i32, i32* @x.121
  %723 = load i32, i32* @y.122
  %724 = sub i32 %722, 1
  %725 = mul i32 %722, %724
  %726 = urem i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = icmp slt i32 %723, 10
  %729 = or i1 %727, %728
  br i1 %729, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %originalBB192alteredBB, %721
  %730 = load i32*, i32** %18, align 8
  %731 = load i32, i32* %730, align 4
  %732 = add nsw i32 %731, 1
  store i32 %732, i32* %730, align 4
  %733 = load i32, i32* %29, align 4
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %734
  %736 = getelementptr inbounds %struct.string_data, %struct.string_data* %735, i32 0, i32 3
  %737 = load i32, i32* %736, align 4
  %738 = icmp eq i32 %737, 1
  %739 = load i32, i32* @x.121
  %740 = load i32, i32* @y.122
  %741 = sub i32 %739, 1
  %742 = mul i32 %739, %741
  %743 = urem i32 %742, 2
  %744 = icmp eq i32 %743, 0
  %745 = icmp slt i32 %740, 10
  %746 = or i1 %744, %745
  br i1 %746, label %originalBBpart2203, label %originalBB192alteredBB

originalBBpart2203:                               ; preds = %originalBB192
  br i1 %738, label %747, label %823

; <label>:747:                                    ; preds = %originalBBpart2203
  %748 = load i32, i32* @x.121
  %749 = load i32, i32* @y.122
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %originalBB205alteredBB, %747
  %756 = load i32, i32* %29, align 4
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %757
  %759 = getelementptr inbounds %struct.string_data, %struct.string_data* %758, i32 0, i32 1
  %760 = load i32, i32* %759, align 4
  %761 = load i32*, i32** %19, align 8
  %762 = load i32, i32* %761, align 4
  %763 = add nsw i32 %762, %760
  store i32 %763, i32* %761, align 4
  store i32 0, i32* %30, align 4
  %764 = load i32, i32* @x.121
  %765 = load i32, i32* @y.122
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBBpart2212, label %originalBB205alteredBB

originalBBpart2212:                               ; preds = %originalBB205
  br label %772

; <label>:772:                                    ; preds = %819, %originalBBpart2212
  %773 = load i32, i32* %30, align 4
  %774 = load i32, i32* %29, align 4
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %775
  %777 = getelementptr inbounds %struct.string_data, %struct.string_data* %776, i32 0, i32 5
  %778 = load i32, i32* %777, align 8
  %779 = icmp slt i32 %773, %778
  br i1 %779, label %780, label %822

; <label>:780:                                    ; preds = %772
  %781 = load i32, i32* @x.121
  %782 = load i32, i32* @y.122
  %783 = sub i32 %781, 1
  %784 = mul i32 %781, %783
  %785 = urem i32 %784, 2
  %786 = icmp eq i32 %785, 0
  %787 = icmp slt i32 %782, 10
  %788 = or i1 %786, %787
  br i1 %788, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %780
  %789 = load i32, i32* %29, align 4
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %790
  %792 = getelementptr inbounds %struct.string_data, %struct.string_data* %791, i32 0, i32 6
  %793 = load i32, i32* %30, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds [160 x i32], [160 x i32]* %792, i64 0, i64 %794
  %796 = load i32, i32* %795, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %797
  store %struct.string_data* %798, %struct.string_data** %31, align 8
  %799 = load %struct.string_data*, %struct.string_data** %31, align 8
  %800 = getelementptr inbounds %struct.string_data, %struct.string_data* %799, i32 0, i32 3
  %801 = load i32, i32* %800, align 4
  %802 = icmp eq i32 %801, 1
  %803 = load i32, i32* @x.121
  %804 = load i32, i32* @y.122
  %805 = sub i32 %803, 1
  %806 = mul i32 %803, %805
  %807 = urem i32 %806, 2
  %808 = icmp eq i32 %807, 0
  %809 = icmp slt i32 %804, 10
  %810 = or i1 %808, %809
  br i1 %810, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br i1 %802, label %811, label %818

; <label>:811:                                    ; preds = %originalBBpart2216
  %812 = load %struct.string_data*, %struct.string_data** %31, align 8
  %813 = getelementptr inbounds %struct.string_data, %struct.string_data* %812, i32 0, i32 1
  %814 = load i32, i32* %813, align 4
  %815 = load i32*, i32** %21, align 8
  %816 = load i32, i32* %815, align 4
  %817 = add nsw i32 %816, %814
  store i32 %817, i32* %815, align 4
  br label %818

; <label>:818:                                    ; preds = %811, %originalBBpart2216
  br label %819

; <label>:819:                                    ; preds = %818
  %820 = load i32, i32* %30, align 4
  %821 = add nsw i32 %820, 1
  store i32 %821, i32* %30, align 4
  br label %772

; <label>:822:                                    ; preds = %772
  br label %893

; <label>:823:                                    ; preds = %originalBBpart2203
  %824 = load i32, i32* @x.121
  %825 = load i32, i32* @y.122
  %826 = sub i32 %824, 1
  %827 = mul i32 %824, %826
  %828 = urem i32 %827, 2
  %829 = icmp eq i32 %828, 0
  %830 = icmp slt i32 %825, 10
  %831 = or i1 %829, %830
  br i1 %831, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %823
  %832 = load i32, i32* %29, align 4
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %833
  %835 = getelementptr inbounds %struct.string_data, %struct.string_data* %834, i32 0, i32 3
  %836 = load i32, i32* %835, align 4
  %837 = icmp eq i32 %836, 2
  %838 = load i32, i32* @x.121
  %839 = load i32, i32* @y.122
  %840 = sub i32 %838, 1
  %841 = mul i32 %838, %840
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %839, 10
  %845 = or i1 %843, %844
  br i1 %845, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br i1 %837, label %846, label %892

; <label>:846:                                    ; preds = %originalBBpart2220
  %847 = load i32, i32* %12, align 4
  %848 = sub nsw i32 %847, 20
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %849
  %851 = load i32, i32* %850, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %852
  %854 = getelementptr inbounds %struct.string_data, %struct.string_data* %853, i32 0, i32 7
  %855 = load i32, i32* %854, align 4
  %856 = load i32, i32* @string_mark, align 4
  %857 = icmp ne i32 %855, %856
  br i1 %857, label %858, label %892

; <label>:858:                                    ; preds = %846
  %859 = load i32, i32* @x.121
  %860 = load i32, i32* @y.122
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %858
  %867 = load i32, i32* %29, align 4
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %868
  %870 = getelementptr inbounds %struct.string_data, %struct.string_data* %869, i32 0, i32 1
  %871 = load i32, i32* %870, align 4
  %872 = load i32*, i32** %20, align 8
  %873 = load i32, i32* %872, align 4
  %874 = add nsw i32 %873, %871
  store i32 %874, i32* %872, align 4
  %875 = load i32, i32* @string_mark, align 4
  %876 = load i32, i32* %12, align 4
  %877 = sub nsw i32 %876, 20
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %878
  %880 = load i32, i32* %879, align 4
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %881
  %883 = getelementptr inbounds %struct.string_data, %struct.string_data* %882, i32 0, i32 7
  store i32 %875, i32* %883, align 4
  %884 = load i32, i32* @x.121
  %885 = load i32, i32* @y.122
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBBpart2247, label %originalBB222alteredBB

originalBBpart2247:                               ; preds = %originalBB222
  br label %892

; <label>:892:                                    ; preds = %originalBBpart2247, %846, %originalBBpart2220
  br label %893

; <label>:893:                                    ; preds = %892, %822
  br label %894

; <label>:894:                                    ; preds = %893, %originalBBpart2190
  br label %895

; <label>:895:                                    ; preds = %894, %originalBBpart2158
  %896 = load i32, i32* @x.121
  %897 = load i32, i32* @y.122
  %898 = sub i32 %896, 1
  %899 = mul i32 %896, %898
  %900 = urem i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = icmp slt i32 %897, 10
  %903 = or i1 %901, %902
  br i1 %903, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %originalBB249alteredBB, %895
  %904 = load i32, i32* @x.121
  %905 = load i32, i32* @y.122
  %906 = sub i32 %904, 1
  %907 = mul i32 %904, %906
  %908 = urem i32 %907, 2
  %909 = icmp eq i32 %908, 0
  %910 = icmp slt i32 %905, 10
  %911 = or i1 %909, %910
  br i1 %911, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br label %912

; <label>:912:                                    ; preds = %originalBBpart2251, %580
  %913 = load i32, i32* %12, align 4
  %914 = add nsw i32 %913, 1
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %915
  %917 = load i8, i8* %916, align 1
  %918 = zext i8 %917 to i32
  %919 = icmp ne i32 %918, 3
  br i1 %919, label %924, label %920

; <label>:920:                                    ; preds = %912
  %921 = load i32*, i32** %15, align 8
  %922 = load i32, i32* %921, align 4
  %923 = add nsw i32 %922, 1
  store i32 %923, i32* %921, align 4
  br label %1108

; <label>:924:                                    ; preds = %912
  %925 = load i32, i32* %12, align 4
  %926 = add nsw i32 %925, 1
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %927
  %929 = load i8, i8* %928, align 1
  %930 = zext i8 %929 to i32
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %936

; <label>:932:                                    ; preds = %924
  %933 = load i32*, i32** %22, align 8
  %934 = load i32, i32* %933, align 4
  %935 = add nsw i32 %934, 1
  store i32 %935, i32* %933, align 4
  br label %1107

; <label>:936:                                    ; preds = %924
  %937 = load i32, i32* %12, align 4
  %938 = add nsw i32 %937, 1
  %939 = sext i32 %938 to i64
  %940 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %939
  %941 = load i32, i32* %940, align 4
  store i32 %941, i32* %32, align 4
  %942 = load i32, i32* %14, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %943
  %945 = load i32, i32* %944, align 4
  %946 = load i32, i32* %32, align 4
  %947 = icmp eq i32 %945, %946
  br i1 %947, label %948, label %968

; <label>:948:                                    ; preds = %936
  %949 = load i32, i32* @x.121
  %950 = load i32, i32* @y.122
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %originalBB253alteredBB, %948
  %957 = load i32*, i32** %16, align 8
  %958 = load i32, i32* %957, align 4
  %959 = add nsw i32 %958, 1
  store i32 %959, i32* %957, align 4
  %960 = load i32, i32* @x.121
  %961 = load i32, i32* @y.122
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBBpart2262, label %originalBB253alteredBB

originalBBpart2262:                               ; preds = %originalBB253
  br label %968

; <label>:968:                                    ; preds = %originalBBpart2262, %936
  %969 = load i32, i32* %12, align 4
  %970 = add nsw i32 %969, 1
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %971
  %973 = load i8, i8* %972, align 1
  %974 = zext i8 %973 to i32
  %975 = load i32, i32* %13, align 4
  %976 = icmp eq i32 %974, %975
  br i1 %976, label %977, label %997

; <label>:977:                                    ; preds = %968
  %978 = load i32*, i32** %17, align 8
  %979 = load i32, i32* %978, align 4
  %980 = add nsw i32 %979, 1
  store i32 %980, i32* %978, align 4
  %981 = load i32, i32* %32, align 4
  %982 = sext i32 %981 to i64
  %983 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %982
  %984 = getelementptr inbounds %struct.string_data, %struct.string_data* %983, i32 0, i32 3
  %985 = load i32, i32* %984, align 4
  %986 = icmp eq i32 %985, 1
  br i1 %986, label %987, label %996

; <label>:987:                                    ; preds = %977
  %988 = load i32, i32* %32, align 4
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %989
  %991 = getelementptr inbounds %struct.string_data, %struct.string_data* %990, i32 0, i32 1
  %992 = load i32, i32* %991, align 4
  %993 = load i32*, i32** %21, align 8
  %994 = load i32, i32* %993, align 4
  %995 = add nsw i32 %994, %992
  store i32 %995, i32* %993, align 4
  br label %996

; <label>:996:                                    ; preds = %987, %977
  br label %1106

; <label>:997:                                    ; preds = %968
  %998 = load i32*, i32** %18, align 8
  %999 = load i32, i32* %998, align 4
  %1000 = add nsw i32 %999, 1
  store i32 %1000, i32* %998, align 4
  %1001 = load i32, i32* %32, align 4
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1002
  %1004 = getelementptr inbounds %struct.string_data, %struct.string_data* %1003, i32 0, i32 3
  %1005 = load i32, i32* %1004, align 4
  %1006 = icmp eq i32 %1005, 1
  br i1 %1006, label %1007, label %1051

; <label>:1007:                                   ; preds = %997
  %1008 = load i32, i32* %32, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1009
  %1011 = getelementptr inbounds %struct.string_data, %struct.string_data* %1010, i32 0, i32 1
  %1012 = load i32, i32* %1011, align 4
  %1013 = load i32*, i32** %19, align 8
  %1014 = load i32, i32* %1013, align 4
  %1015 = add nsw i32 %1014, %1012
  store i32 %1015, i32* %1013, align 4
  store i32 0, i32* %33, align 4
  br label %1016

; <label>:1016:                                   ; preds = %1047, %1007
  %1017 = load i32, i32* %33, align 4
  %1018 = load i32, i32* %32, align 4
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1019
  %1021 = getelementptr inbounds %struct.string_data, %struct.string_data* %1020, i32 0, i32 5
  %1022 = load i32, i32* %1021, align 8
  %1023 = icmp slt i32 %1017, %1022
  br i1 %1023, label %1024, label %1050

; <label>:1024:                                   ; preds = %1016
  %1025 = load i32, i32* %32, align 4
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1026
  %1028 = getelementptr inbounds %struct.string_data, %struct.string_data* %1027, i32 0, i32 6
  %1029 = load i32, i32* %33, align 4
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds [160 x i32], [160 x i32]* %1028, i64 0, i64 %1030
  %1032 = load i32, i32* %1031, align 4
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1033
  store %struct.string_data* %1034, %struct.string_data** %34, align 8
  %1035 = load %struct.string_data*, %struct.string_data** %34, align 8
  %1036 = getelementptr inbounds %struct.string_data, %struct.string_data* %1035, i32 0, i32 3
  %1037 = load i32, i32* %1036, align 4
  %1038 = icmp eq i32 %1037, 1
  br i1 %1038, label %1039, label %1046

; <label>:1039:                                   ; preds = %1024
  %1040 = load %struct.string_data*, %struct.string_data** %34, align 8
  %1041 = getelementptr inbounds %struct.string_data, %struct.string_data* %1040, i32 0, i32 1
  %1042 = load i32, i32* %1041, align 4
  %1043 = load i32*, i32** %21, align 8
  %1044 = load i32, i32* %1043, align 4
  %1045 = add nsw i32 %1044, %1042
  store i32 %1045, i32* %1043, align 4
  br label %1046

; <label>:1046:                                   ; preds = %1039, %1024
  br label %1047

; <label>:1047:                                   ; preds = %1046
  %1048 = load i32, i32* %33, align 4
  %1049 = add nsw i32 %1048, 1
  store i32 %1049, i32* %33, align 4
  br label %1016

; <label>:1050:                                   ; preds = %1016
  br label %1105

; <label>:1051:                                   ; preds = %997
  %1052 = load i32, i32* %32, align 4
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1053
  %1055 = getelementptr inbounds %struct.string_data, %struct.string_data* %1054, i32 0, i32 3
  %1056 = load i32, i32* %1055, align 4
  %1057 = icmp eq i32 %1056, 2
  br i1 %1057, label %1058, label %1088

; <label>:1058:                                   ; preds = %1051
  %1059 = load i32, i32* %12, align 4
  %1060 = add nsw i32 %1059, 1
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1061
  %1063 = load i32, i32* %1062, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1064
  %1066 = getelementptr inbounds %struct.string_data, %struct.string_data* %1065, i32 0, i32 7
  %1067 = load i32, i32* %1066, align 4
  %1068 = load i32, i32* @string_mark, align 4
  %1069 = icmp ne i32 %1067, %1068
  br i1 %1069, label %1070, label %1088

; <label>:1070:                                   ; preds = %1058
  %1071 = load i32, i32* %32, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1072
  %1074 = getelementptr inbounds %struct.string_data, %struct.string_data* %1073, i32 0, i32 1
  %1075 = load i32, i32* %1074, align 4
  %1076 = load i32*, i32** %20, align 8
  %1077 = load i32, i32* %1076, align 4
  %1078 = add nsw i32 %1077, %1075
  store i32 %1078, i32* %1076, align 4
  %1079 = load i32, i32* @string_mark, align 4
  %1080 = load i32, i32* %12, align 4
  %1081 = add nsw i32 %1080, 1
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1082
  %1084 = load i32, i32* %1083, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1085
  %1087 = getelementptr inbounds %struct.string_data, %struct.string_data* %1086, i32 0, i32 7
  store i32 %1079, i32* %1087, align 4
  br label %1088

; <label>:1088:                                   ; preds = %1070, %1058, %1051
  %1089 = load i32, i32* @x.121
  %1090 = load i32, i32* @y.122
  %1091 = sub i32 %1089, 1
  %1092 = mul i32 %1089, %1091
  %1093 = urem i32 %1092, 2
  %1094 = icmp eq i32 %1093, 0
  %1095 = icmp slt i32 %1090, 10
  %1096 = or i1 %1094, %1095
  br i1 %1096, label %originalBB264, label %originalBB264alteredBB

originalBB264:                                    ; preds = %originalBB264alteredBB, %1088
  %1097 = load i32, i32* @x.121
  %1098 = load i32, i32* @y.122
  %1099 = sub i32 %1097, 1
  %1100 = mul i32 %1097, %1099
  %1101 = urem i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  %1103 = icmp slt i32 %1098, 10
  %1104 = or i1 %1102, %1103
  br i1 %1104, label %originalBBpart2266, label %originalBB264alteredBB

originalBBpart2266:                               ; preds = %originalBB264
  br label %1105

; <label>:1105:                                   ; preds = %originalBBpart2266, %1050
  br label %1106

; <label>:1106:                                   ; preds = %1105, %996
  br label %1107

; <label>:1107:                                   ; preds = %1106, %932
  br label %1108

; <label>:1108:                                   ; preds = %1107, %920
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %44
  %1109 = load i32*, i32** %15, align 8
  %1110 = load i32, i32* %1109, align 4
  %_ = sub i32 %1110, 1
  %gen = mul i32 %_, 1
  %_1 = shl i32 %1110, 1
  %_2 = sub i32 0, %1110
  %gen3 = add i32 %_2, 1
  %_4 = shl i32 %1110, 1
  %1111 = add nsw i32 %1110, 1
  store i32 %1111, i32* %1109, align 4
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %64
  %1112 = load i32, i32* %12, align 4
  %_6 = sub i32 %1112, 20
  %gen7 = mul i32 %_6, 20
  %1113 = add nsw i32 %1112, 20
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1114
  %1116 = load i8, i8* %1115, align 1
  %1117 = zext i8 %1116 to i32
  %1118 = icmp eq i32 %1117, 0
  br label %originalBB5

originalBB11alteredBB:                            ; preds = %originalBB11, %92
  %1119 = load i32, i32* %12, align 4
  %_12 = sub i32 %1119, 20
  %gen13 = mul i32 %_12, 20
  %_14 = shl i32 %1119, 20
  %_15 = sub i32 %1119, 20
  %gen16 = mul i32 %_15, 20
  %_17 = shl i32 %1119, 20
  %_18 = shl i32 %1119, 20
  %_19 = sub i32 %1119, 20
  %gen20 = mul i32 %_19, 20
  %_21 = sub i32 %1119, 20
  %gen22 = mul i32 %_21, 20
  %1120 = add nsw i32 %1119, 20
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1121
  %1123 = load i32, i32* %1122, align 4
  store i32 %1123, i32* %23, align 4
  %1124 = load i32, i32* %14, align 4
  %1125 = sext i32 %1124 to i64
  %1126 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1125
  %1127 = load i32, i32* %1126, align 4
  %1128 = load i32, i32* %23, align 4
  %1129 = icmp eq i32 %1127, %1128
  br label %originalBB11

originalBB26alteredBB:                            ; preds = %originalBB26, %133
  %1130 = load i32*, i32** %17, align 8
  %1131 = load i32, i32* %1130, align 4
  %_27 = sub i32 %1131, 1
  %gen28 = mul i32 %_27, 1
  %_29 = shl i32 %1131, 1
  %_30 = shl i32 %1131, 1
  %1132 = add nsw i32 %1131, 1
  store i32 %1132, i32* %1130, align 4
  %1133 = load i32, i32* %23, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1134
  %1136 = getelementptr inbounds %struct.string_data, %struct.string_data* %1135, i32 0, i32 3
  %1137 = load i32, i32* %1136, align 4
  %1138 = icmp eq i32 %1137, 1
  br label %originalBB26

originalBB34alteredBB:                            ; preds = %originalBB34, %159
  %1139 = load i32, i32* %23, align 4
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1140
  %1142 = getelementptr inbounds %struct.string_data, %struct.string_data* %1141, i32 0, i32 1
  %1143 = load i32, i32* %1142, align 4
  %1144 = load i32*, i32** %21, align 8
  %1145 = load i32, i32* %1144, align 4
  %_35 = shl i32 %1145, %1143
  %_36 = sub i32 0, %1145
  %gen37 = add i32 %_36, %1143
  %1146 = add nsw i32 %1145, %1143
  store i32 %1146, i32* %1144, align 4
  br label %originalBB34

originalBB41alteredBB:                            ; preds = %originalBB41, %238
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %274
  %1147 = load i32, i32* %23, align 4
  %1148 = sext i32 %1147 to i64
  %1149 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1148
  %1150 = getelementptr inbounds %struct.string_data, %struct.string_data* %1149, i32 0, i32 1
  %1151 = load i32, i32* %1150, align 4
  %1152 = load i32*, i32** %20, align 8
  %1153 = load i32, i32* %1152, align 4
  %_46 = sub i32 %1153, %1151
  %gen47 = mul i32 %_46, %1151
  %_48 = shl i32 %1153, %1151
  %_49 = sub i32 %1153, %1151
  %gen50 = mul i32 %_49, %1151
  %_51 = sub i32 %1153, %1151
  %gen52 = mul i32 %_51, %1151
  %_53 = shl i32 %1153, %1151
  %_54 = sub i32 %1153, %1151
  %gen55 = mul i32 %_54, %1151
  %1154 = add nsw i32 %1153, %1151
  store i32 %1154, i32* %1152, align 4
  %1155 = load i32, i32* @string_mark, align 4
  %1156 = load i32, i32* %12, align 4
  %_56 = shl i32 %1156, 20
  %_57 = sub i32 0, %1156
  %gen58 = add i32 %_57, 20
  %_59 = sub i32 0, %1156
  %gen60 = add i32 %_59, 20
  %_61 = shl i32 %1156, 20
  %_62 = sub i32 %1156, 20
  %gen63 = mul i32 %_62, 20
  %_64 = shl i32 %1156, 20
  %1157 = add nsw i32 %1156, 20
  %1158 = sext i32 %1157 to i64
  %1159 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1158
  %1160 = load i32, i32* %1159, align 4
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1161
  %1163 = getelementptr inbounds %struct.string_data, %struct.string_data* %1162, i32 0, i32 7
  store i32 %1155, i32* %1163, align 4
  br label %originalBB45

originalBB68alteredBB:                            ; preds = %originalBB68, %324
  %1164 = load i32, i32* %12, align 4
  %_69 = sub i32 0, %1164
  %gen70 = add i32 %_69, 1
  %_71 = sub i32 0, %1164
  %gen72 = add i32 %_71, 1
  %_73 = sub i32 0, %1164
  %gen74 = add i32 %_73, 1
  %_75 = shl i32 %1164, 1
  %_76 = sub i32 0, %1164
  %gen77 = add i32 %_76, 1
  %_78 = shl i32 %1164, 1
  %_79 = sub i32 %1164, 1
  %gen80 = mul i32 %_79, 1
  %_81 = shl i32 %1164, 1
  %_82 = sub i32 0, %1164
  %gen83 = add i32 %_82, 1
  %1165 = sub nsw i32 %1164, 1
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1166
  %1168 = load i8, i8* %1167, align 1
  %1169 = zext i8 %1168 to i32
  %1170 = icmp eq i32 %1169, 0
  br label %originalBB68

originalBB87alteredBB:                            ; preds = %originalBB87, %348
  %1171 = load i32*, i32** %22, align 8
  %1172 = load i32, i32* %1171, align 4
  %_88 = sub i32 %1172, 1
  %gen89 = mul i32 %_88, 1
  %_90 = shl i32 %1172, 1
  %_91 = sub i32 0, %1172
  %gen92 = add i32 %_91, 1
  %_93 = sub i32 0, %1172
  %gen94 = add i32 %_93, 1
  %1173 = add nsw i32 %1172, 1
  store i32 %1173, i32* %1171, align 4
  br label %originalBB87

originalBB98alteredBB:                            ; preds = %originalBB98, %384
  %1174 = load i32, i32* %12, align 4
  %_99 = sub i32 %1174, 1
  %gen100 = mul i32 %_99, 1
  %_101 = sub i32 %1174, 1
  %gen102 = mul i32 %_101, 1
  %_103 = sub i32 %1174, 1
  %gen104 = mul i32 %_103, 1
  %_105 = sub i32 %1174, 1
  %gen106 = mul i32 %_105, 1
  %_107 = shl i32 %1174, 1
  %_108 = sub i32 0, %1174
  %gen109 = add i32 %_108, 1
  %_110 = sub i32 %1174, 1
  %gen111 = mul i32 %_110, 1
  %1175 = sub nsw i32 %1174, 1
  %1176 = sext i32 %1175 to i64
  %1177 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1176
  %1178 = load i8, i8* %1177, align 1
  %1179 = zext i8 %1178 to i32
  %1180 = load i32, i32* %13, align 4
  %1181 = icmp eq i32 %1179, %1180
  br label %originalBB98

originalBB115alteredBB:                           ; preds = %originalBB115, %409
  %1182 = load i32*, i32** %17, align 8
  %1183 = load i32, i32* %1182, align 4
  %_116 = sub i32 %1183, 1
  %gen117 = mul i32 %_116, 1
  %_118 = shl i32 %1183, 1
  %_119 = sub i32 %1183, 1
  %gen120 = mul i32 %_119, 1
  %_121 = sub i32 0, %1183
  %gen122 = add i32 %_121, 1
  %_123 = shl i32 %1183, 1
  %1184 = add nsw i32 %1183, 1
  store i32 %1184, i32* %1182, align 4
  %1185 = load i32, i32* %26, align 4
  %1186 = sext i32 %1185 to i64
  %1187 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1186
  %1188 = getelementptr inbounds %struct.string_data, %struct.string_data* %1187, i32 0, i32 3
  %1189 = load i32, i32* %1188, align 4
  %1190 = icmp eq i32 %1189, 1
  br label %originalBB115

originalBB127alteredBB:                           ; preds = %originalBB127, %498
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %522
  %1191 = load i32, i32* %12, align 4
  %_132 = sub i32 %1191, 1
  %gen133 = mul i32 %_132, 1
  %_134 = shl i32 %1191, 1
  %_135 = shl i32 %1191, 1
  %_136 = sub i32 0, %1191
  %gen137 = add i32 %_136, 1
  %1192 = sub nsw i32 %1191, 1
  %1193 = sext i32 %1192 to i64
  %1194 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1193
  %1195 = load i32, i32* %1194, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1196
  %1198 = getelementptr inbounds %struct.string_data, %struct.string_data* %1197, i32 0, i32 7
  %1199 = load i32, i32* %1198, align 4
  %1200 = load i32, i32* @string_mark, align 4
  %1201 = icmp ne i32 %1199, %1200
  br label %originalBB131

originalBB141alteredBB:                           ; preds = %originalBB141, %592
  %1202 = load i32*, i32** %22, align 8
  %1203 = load i32, i32* %1202, align 4
  %_142 = sub i32 %1203, 1
  %gen143 = mul i32 %_142, 1
  %_144 = sub i32 0, %1203
  %gen145 = add i32 %_144, 1
  %_146 = shl i32 %1203, 1
  %_147 = sub i32 %1203, 1
  %gen148 = mul i32 %_147, 1
  %_149 = sub i32 %1203, 1
  %gen150 = mul i32 %_149, 1
  %_151 = sub i32 %1203, 1
  %gen152 = mul i32 %_151, 1
  %_153 = sub i32 %1203, 1
  %gen154 = mul i32 %_153, 1
  %_155 = sub i32 0, %1203
  %gen156 = add i32 %_155, 1
  %1204 = add nsw i32 %1203, 1
  store i32 %1204, i32* %1202, align 4
  br label %originalBB141

originalBB160alteredBB:                           ; preds = %originalBB160, %612
  %1205 = load i32, i32* %12, align 4
  %_161 = sub i32 %1205, 20
  %gen162 = mul i32 %_161, 20
  %_163 = shl i32 %1205, 20
  %_164 = sub i32 0, %1205
  %gen165 = add i32 %_164, 20
  %_166 = shl i32 %1205, 20
  %_167 = sub i32 %1205, 20
  %gen168 = mul i32 %_167, 20
  %1206 = sub nsw i32 %1205, 20
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1207
  %1209 = load i32, i32* %1208, align 4
  store i32 %1209, i32* %29, align 4
  %1210 = load i32, i32* %14, align 4
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1211
  %1213 = load i32, i32* %1212, align 4
  %1214 = load i32, i32* %29, align 4
  %1215 = icmp eq i32 %1213, %1214
  br label %originalBB160

originalBB172alteredBB:                           ; preds = %originalBB172, %640
  %1216 = load i32*, i32** %16, align 8
  %1217 = load i32, i32* %1216, align 4
  %_173 = shl i32 %1217, 1
  %_174 = shl i32 %1217, 1
  %_175 = shl i32 %1217, 1
  %_176 = sub i32 %1217, 1
  %gen177 = mul i32 %_176, 1
  %1218 = add nsw i32 %1217, 1
  store i32 %1218, i32* %1216, align 4
  br label %originalBB172

originalBB181alteredBB:                           ; preds = %originalBB181, %679
  %1219 = load i32, i32* %29, align 4
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1220
  %1222 = getelementptr inbounds %struct.string_data, %struct.string_data* %1221, i32 0, i32 1
  %1223 = load i32, i32* %1222, align 4
  %1224 = load i32*, i32** %21, align 8
  %1225 = load i32, i32* %1224, align 4
  %_182 = shl i32 %1225, %1223
  %_183 = shl i32 %1225, %1223
  %_184 = shl i32 %1225, %1223
  %1226 = add nsw i32 %1225, %1223
  store i32 %1226, i32* %1224, align 4
  br label %originalBB181

originalBB188alteredBB:                           ; preds = %originalBB188, %704
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %721
  %1227 = load i32*, i32** %18, align 8
  %1228 = load i32, i32* %1227, align 4
  %_193 = shl i32 %1228, 1
  %_194 = sub i32 %1228, 1
  %gen195 = mul i32 %_194, 1
  %_196 = sub i32 0, %1228
  %gen197 = add i32 %_196, 1
  %_198 = shl i32 %1228, 1
  %_199 = shl i32 %1228, 1
  %_200 = sub i32 %1228, 1
  %gen201 = mul i32 %_200, 1
  %1229 = add nsw i32 %1228, 1
  store i32 %1229, i32* %1227, align 4
  %1230 = load i32, i32* %29, align 4
  %1231 = sext i32 %1230 to i64
  %1232 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1231
  %1233 = getelementptr inbounds %struct.string_data, %struct.string_data* %1232, i32 0, i32 3
  %1234 = load i32, i32* %1233, align 4
  %1235 = icmp eq i32 %1234, 1
  br label %originalBB192

originalBB205alteredBB:                           ; preds = %originalBB205, %747
  %1236 = load i32, i32* %29, align 4
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1237
  %1239 = getelementptr inbounds %struct.string_data, %struct.string_data* %1238, i32 0, i32 1
  %1240 = load i32, i32* %1239, align 4
  %1241 = load i32*, i32** %19, align 8
  %1242 = load i32, i32* %1241, align 4
  %_206 = sub i32 0, %1242
  %gen207 = add i32 %_206, %1240
  %_208 = sub i32 0, %1242
  %gen209 = add i32 %_208, %1240
  %1243 = add nsw i32 %1242, %1240
  store i32 %1243, i32* %1241, align 4
  store i32 0, i32* %30, align 4
  br label %originalBB205

originalBB214alteredBB:                           ; preds = %originalBB214, %780
  %1244 = load i32, i32* %29, align 4
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1245
  %1247 = getelementptr inbounds %struct.string_data, %struct.string_data* %1246, i32 0, i32 6
  %1248 = load i32, i32* %30, align 4
  %1249 = sext i32 %1248 to i64
  %1250 = getelementptr inbounds [160 x i32], [160 x i32]* %1247, i64 0, i64 %1249
  %1251 = load i32, i32* %1250, align 4
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1252
  store %struct.string_data* %1253, %struct.string_data** %31, align 8
  %1254 = load %struct.string_data*, %struct.string_data** %31, align 8
  %1255 = getelementptr inbounds %struct.string_data, %struct.string_data* %1254, i32 0, i32 3
  %1256 = load i32, i32* %1255, align 4
  %1257 = icmp eq i32 %1256, 1
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %823
  %1258 = load i32, i32* %29, align 4
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1259
  %1261 = getelementptr inbounds %struct.string_data, %struct.string_data* %1260, i32 0, i32 3
  %1262 = load i32, i32* %1261, align 4
  %1263 = icmp eq i32 %1262, 2
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %858
  %1264 = load i32, i32* %29, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1265
  %1267 = getelementptr inbounds %struct.string_data, %struct.string_data* %1266, i32 0, i32 1
  %1268 = load i32, i32* %1267, align 4
  %1269 = load i32*, i32** %20, align 8
  %1270 = load i32, i32* %1269, align 4
  %_223 = shl i32 %1270, %1268
  %_224 = sub i32 %1270, %1268
  %gen225 = mul i32 %_224, %1268
  %_226 = sub i32 0, %1270
  %gen227 = add i32 %_226, %1268
  %_228 = sub i32 0, %1270
  %gen229 = add i32 %_228, %1268
  %_230 = sub i32 0, %1270
  %gen231 = add i32 %_230, %1268
  %_232 = sub i32 %1270, %1268
  %gen233 = mul i32 %_232, %1268
  %_234 = shl i32 %1270, %1268
  %_235 = sub i32 %1270, %1268
  %gen236 = mul i32 %_235, %1268
  %_237 = shl i32 %1270, %1268
  %1271 = add nsw i32 %1270, %1268
  store i32 %1271, i32* %1269, align 4
  %1272 = load i32, i32* @string_mark, align 4
  %1273 = load i32, i32* %12, align 4
  %_238 = sub i32 0, %1273
  %gen239 = add i32 %_238, 20
  %_240 = sub i32 0, %1273
  %gen241 = add i32 %_240, 20
  %_242 = shl i32 %1273, 20
  %_243 = sub i32 0, %1273
  %gen244 = add i32 %_243, 20
  %_245 = shl i32 %1273, 20
  %1274 = sub nsw i32 %1273, 20
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1275
  %1277 = load i32, i32* %1276, align 4
  %1278 = sext i32 %1277 to i64
  %1279 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1278
  %1280 = getelementptr inbounds %struct.string_data, %struct.string_data* %1279, i32 0, i32 7
  store i32 %1272, i32* %1280, align 4
  br label %originalBB222

originalBB249alteredBB:                           ; preds = %originalBB249, %895
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %948
  %1281 = load i32*, i32** %16, align 8
  %1282 = load i32, i32* %1281, align 4
  %_254 = shl i32 %1282, 1
  %_255 = shl i32 %1282, 1
  %_256 = shl i32 %1282, 1
  %_257 = shl i32 %1282, 1
  %_258 = sub i32 0, %1282
  %gen259 = add i32 %_258, 1
  %_260 = shl i32 %1282, 1
  %1283 = add nsw i32 %1282, 1
  store i32 %1283, i32* %1281, align 4
  br label %originalBB253

originalBB264alteredBB:                           ; preds = %originalBB264, %1088
  br label %originalBB264
}

declare void @showboard(i32) #1

declare void @hashdata_invert_ko(%struct.Hash_data*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @do_play_move(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %14 = load i32, i32* %4, align 4
  %15 = sub nsw i32 3, %14
  store i32 %15, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  %16 = load i32, i32* %3, align 4
  %17 = add nsw i32 %16, 20
  store i32 %17, i32* %10, align 4
  %18 = load i32, i32* %3, align 4
  %19 = sub nsw i32 %18, 1
  store i32 %19, i32* %11, align 4
  %20 = load i32, i32* %3, align 4
  %21 = sub nsw i32 %20, 20
  store i32 %21, i32* %12, align 4
  %22 = load i32, i32* %3, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %13, align 4
  %24 = load i32, i32* %10, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = load i32, i32* %5, align 4
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %31, label %49

; <label>:31:                                     ; preds = %2
  %32 = load i32, i32* %10, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %36
  %38 = getelementptr inbounds %struct.string_data, %struct.string_data* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %49

; <label>:41:                                     ; preds = %31
  %42 = load i32, i32* %10, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = call i32 @do_remove_string(i32 %45)
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, %46
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %41, %31, %2
  %50 = load i32, i32* %11, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = load i32, i32* %5, align 4
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %57, label %91

; <label>:57:                                     ; preds = %49
  %58 = load i32, i32* @x.123
  %59 = load i32, i32* @y.124
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %57
  %66 = load i32, i32* %11, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %70
  %72 = getelementptr inbounds %struct.string_data, %struct.string_data* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 1
  %75 = load i32, i32* @x.123
  %76 = load i32, i32* @y.124
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %74, label %83, label %91

; <label>:83:                                     ; preds = %originalBBpart2
  %84 = load i32, i32* %11, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = call i32 @do_remove_string(i32 %87)
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, %88
  store i32 %90, i32* %6, align 4
  br label %91

; <label>:91:                                     ; preds = %83, %originalBBpart2, %49
  %92 = load i32, i32* %12, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = load i32, i32* %5, align 4
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %117

; <label>:99:                                     ; preds = %91
  %100 = load i32, i32* %12, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %104
  %106 = getelementptr inbounds %struct.string_data, %struct.string_data* %105, i32 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %117

; <label>:109:                                    ; preds = %99
  %110 = load i32, i32* %12, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = call i32 @do_remove_string(i32 %113)
  %115 = load i32, i32* %6, align 4
  %116 = add nsw i32 %115, %114
  store i32 %116, i32* %6, align 4
  br label %117

; <label>:117:                                    ; preds = %109, %99, %91
  %118 = load i32, i32* %13, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = load i32, i32* %5, align 4
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %125, label %143

; <label>:125:                                    ; preds = %117
  %126 = load i32, i32* %13, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %130
  %132 = getelementptr inbounds %struct.string_data, %struct.string_data* %131, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %143

; <label>:135:                                    ; preds = %125
  %136 = load i32, i32* %13, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = call i32 @do_remove_string(i32 %139)
  %141 = load i32, i32* %6, align 4
  %142 = add nsw i32 %141, %140
  store i32 %142, i32* %6, align 4
  br label %143

; <label>:143:                                    ; preds = %135, %125, %117
  %144 = load i32, i32* @x.123
  %145 = load i32, i32* @y.124
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %143
  %152 = load i32, i32* %6, align 4
  %153 = icmp eq i32 %152, 0
  %154 = load i32, i32* @x.123
  %155 = load i32, i32* @y.124
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %153, label %162, label %366

; <label>:162:                                    ; preds = %originalBBpart24
  %163 = load i32, i32* %10, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %187, label %169

; <label>:169:                                    ; preds = %162
  %170 = load i32, i32* %10, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = load i32, i32* %4, align 4
  %176 = icmp eq i32 %174, %175
  br i1 %176, label %177, label %188

; <label>:177:                                    ; preds = %169
  %178 = load i32, i32* %10, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %182
  %184 = getelementptr inbounds %struct.string_data, %struct.string_data* %183, i32 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, 1
  br i1 %186, label %187, label %188

; <label>:187:                                    ; preds = %177, %162
  store i32 1, i32* %8, align 4
  br label %349

; <label>:188:                                    ; preds = %177, %169
  %189 = load i32, i32* %11, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %213, label %195

; <label>:195:                                    ; preds = %188
  %196 = load i32, i32* %11, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = load i32, i32* %4, align 4
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %203, label %230

; <label>:203:                                    ; preds = %195
  %204 = load i32, i32* %11, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %208
  %210 = getelementptr inbounds %struct.string_data, %struct.string_data* %209, i32 0, i32 3
  %211 = load i32, i32* %210, align 4
  %212 = icmp sgt i32 %211, 1
  br i1 %212, label %213, label %230

; <label>:213:                                    ; preds = %203, %188
  %214 = load i32, i32* @x.123
  %215 = load i32, i32* @y.124
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %213
  store i32 1, i32* %8, align 4
  %222 = load i32, i32* @x.123
  %223 = load i32, i32* @y.124
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %332

; <label>:230:                                    ; preds = %203, %195
  %231 = load i32, i32* @x.123
  %232 = load i32, i32* @y.124
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %230
  %239 = load i32, i32* %12, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = icmp eq i32 %243, 0
  %245 = load i32, i32* @x.123
  %246 = load i32, i32* @y.124
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %244, label %271, label %253

; <label>:253:                                    ; preds = %originalBBpart212
  %254 = load i32, i32* %12, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %255
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = load i32, i32* %4, align 4
  %260 = icmp eq i32 %258, %259
  br i1 %260, label %261, label %272

; <label>:261:                                    ; preds = %253
  %262 = load i32, i32* %12, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %266
  %268 = getelementptr inbounds %struct.string_data, %struct.string_data* %267, i32 0, i32 3
  %269 = load i32, i32* %268, align 4
  %270 = icmp sgt i32 %269, 1
  br i1 %270, label %271, label %272

; <label>:271:                                    ; preds = %261, %originalBBpart212
  store i32 1, i32* %8, align 4
  br label %331

; <label>:272:                                    ; preds = %261, %253
  %273 = load i32, i32* @x.123
  %274 = load i32, i32* @y.124
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %272
  %281 = load i32, i32* %13, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = zext i8 %284 to i32
  %286 = icmp eq i32 %285, 0
  %287 = load i32, i32* @x.123
  %288 = load i32, i32* @y.124
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %286, label %329, label %295

; <label>:295:                                    ; preds = %originalBBpart216
  %296 = load i32, i32* @x.123
  %297 = load i32, i32* @y.124
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %295
  %304 = load i32, i32* %13, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %305
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = load i32, i32* %4, align 4
  %310 = icmp eq i32 %308, %309
  %311 = load i32, i32* @x.123
  %312 = load i32, i32* @y.124
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %310, label %319, label %330

; <label>:319:                                    ; preds = %originalBBpart220
  %320 = load i32, i32* %13, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %321
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %324
  %326 = getelementptr inbounds %struct.string_data, %struct.string_data* %325, i32 0, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = icmp sgt i32 %327, 1
  br i1 %328, label %329, label %330

; <label>:329:                                    ; preds = %319, %originalBBpart216
  store i32 1, i32* %8, align 4
  br label %330

; <label>:330:                                    ; preds = %329, %319, %originalBBpart220
  br label %331

; <label>:331:                                    ; preds = %330, %271
  br label %332

; <label>:332:                                    ; preds = %331, %originalBBpart28
  %333 = load i32, i32* @x.123
  %334 = load i32, i32* @y.124
  %335 = sub i32 %333, 1
  %336 = mul i32 %333, %335
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %338, %339
  br i1 %340, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %332
  %341 = load i32, i32* @x.123
  %342 = load i32, i32* @y.124
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %349

; <label>:349:                                    ; preds = %originalBBpart224, %187
  %350 = load i32, i32* @x.123
  %351 = load i32, i32* @y.124
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %349
  %358 = load i32, i32* @x.123
  %359 = load i32, i32* @y.124
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %367

; <label>:366:                                    ; preds = %originalBBpart24
  store i32 1, i32* %8, align 4
  br label %367

; <label>:367:                                    ; preds = %366, %originalBBpart228
  %368 = load i32, i32* %8, align 4
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %392

; <label>:370:                                    ; preds = %367
  %371 = load i32, i32* %6, align 4
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %392

; <label>:373:                                    ; preds = %370
  %374 = load i32, i32* @x.123
  %375 = load i32, i32* @y.124
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %373
  %382 = load i32, i32* %3, align 4
  %383 = load i32, i32* %4, align 4
  call void @do_commit_suicide(i32 %382, i32 %383)
  %384 = load i32, i32* @x.123
  %385 = load i32, i32* @y.124
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %980

; <label>:392:                                    ; preds = %370, %367
  br label %393

; <label>:393:                                    ; preds = %392
  %394 = load i32, i32* %3, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %395
  %397 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %398 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %397, i32 0, i32 0
  store i8* %396, i8** %398, align 8
  %399 = load i32, i32* %3, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %400
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i32
  %404 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %405 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %404, i32 1
  store %struct.vertex_stack_entry* %405, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %406 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %404, i32 0, i32 1
  store i32 %403, i32* %406, align 8
  %407 = load i32, i32* %4, align 4
  %408 = trunc i32 %407 to i8
  %409 = load i32, i32* %3, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %410
  store i8 %408, i8* %411, align 1
  %412 = load i32, i32* %3, align 4
  %413 = load i32, i32* %4, align 4
  call void @hashdata_invert_stone(%struct.Hash_data* @hashdata, i32 %412, i32 %413)
  br label %414

; <label>:414:                                    ; preds = %393
  %415 = load i32, i32* @x.123
  %416 = load i32, i32* @y.124
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %414
  %423 = load i32, i32* @string_mark, align 4
  %424 = add nsw i32 %423, 1
  store i32 %424, i32* @string_mark, align 4
  %425 = load i32, i32* %10, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %426
  %428 = load i8, i8* %427, align 1
  %429 = zext i8 %428 to i32
  %430 = load i32, i32* %4, align 4
  %431 = icmp eq i32 %429, %430
  %432 = load i32, i32* @x.123
  %433 = load i32, i32* @y.124
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBBpart243, label %originalBB34alteredBB

originalBBpart243:                                ; preds = %originalBB34
  br i1 %431, label %440, label %466

; <label>:440:                                    ; preds = %originalBBpart243
  %441 = load i32, i32* %10, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %445
  %447 = getelementptr inbounds %struct.string_data, %struct.string_data* %446, i32 0, i32 7
  %448 = load i32, i32* %447, align 4
  %449 = load i32, i32* @string_mark, align 4
  %450 = icmp ne i32 %448, %449
  br i1 %450, label %451, label %466

; <label>:451:                                    ; preds = %440
  %452 = load i32, i32* %7, align 4
  %453 = add nsw i32 %452, 1
  store i32 %453, i32* %7, align 4
  %454 = load i32, i32* %10, align 4
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %455
  %457 = load i32, i32* %456, align 4
  store i32 %457, i32* %9, align 4
  %458 = load i32, i32* @string_mark, align 4
  %459 = load i32, i32* %10, align 4
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %460
  %462 = load i32, i32* %461, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %463
  %465 = getelementptr inbounds %struct.string_data, %struct.string_data* %464, i32 0, i32 7
  store i32 %458, i32* %465, align 4
  br label %516

; <label>:466:                                    ; preds = %440, %originalBBpart243
  %467 = load i32, i32* %10, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %468
  %470 = load i8, i8* %469, align 1
  %471 = zext i8 %470 to i32
  %472 = load i32, i32* %5, align 4
  %473 = icmp eq i32 %471, %472
  br i1 %473, label %474, label %499

; <label>:474:                                    ; preds = %466
  %475 = load i32, i32* %10, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %476
  %478 = load i32, i32* %477, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %479
  %481 = getelementptr inbounds %struct.string_data, %struct.string_data* %480, i32 0, i32 7
  %482 = load i32, i32* %481, align 4
  %483 = load i32, i32* @string_mark, align 4
  %484 = icmp ne i32 %482, %483
  br i1 %484, label %485, label %499

; <label>:485:                                    ; preds = %474
  %486 = load i32, i32* %10, align 4
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %487
  %489 = load i32, i32* %488, align 4
  %490 = load i32, i32* %3, align 4
  call void @remove_liberty(i32 %489, i32 %490)
  %491 = load i32, i32* @string_mark, align 4
  %492 = load i32, i32* %10, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %496
  %498 = getelementptr inbounds %struct.string_data, %struct.string_data* %497, i32 0, i32 7
  store i32 %491, i32* %498, align 4
  br label %499

; <label>:499:                                    ; preds = %485, %474, %466
  %500 = load i32, i32* @x.123
  %501 = load i32, i32* @y.124
  %502 = sub i32 %500, 1
  %503 = mul i32 %500, %502
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %505, %506
  br i1 %507, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %499
  %508 = load i32, i32* @x.123
  %509 = load i32, i32* @y.124
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %516

; <label>:516:                                    ; preds = %originalBBpart247, %451
  %517 = load i32, i32* @x.123
  %518 = load i32, i32* @y.124
  %519 = sub i32 %517, 1
  %520 = mul i32 %517, %519
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %522, %523
  br i1 %524, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %516
  %525 = load i32, i32* %11, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %526
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i32
  %530 = load i32, i32* %4, align 4
  %531 = icmp eq i32 %529, %530
  %532 = load i32, i32* @x.123
  %533 = load i32, i32* @y.124
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %531, label %540, label %598

; <label>:540:                                    ; preds = %originalBBpart251
  %541 = load i32, i32* @x.123
  %542 = load i32, i32* @y.124
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %540
  %549 = load i32, i32* %11, align 4
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %553
  %555 = getelementptr inbounds %struct.string_data, %struct.string_data* %554, i32 0, i32 7
  %556 = load i32, i32* %555, align 4
  %557 = load i32, i32* @string_mark, align 4
  %558 = icmp ne i32 %556, %557
  %559 = load i32, i32* @x.123
  %560 = load i32, i32* @y.124
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %558, label %567, label %598

; <label>:567:                                    ; preds = %originalBBpart255
  %568 = load i32, i32* @x.123
  %569 = load i32, i32* @y.124
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %567
  %576 = load i32, i32* %7, align 4
  %577 = add nsw i32 %576, 1
  store i32 %577, i32* %7, align 4
  %578 = load i32, i32* %11, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %579
  %581 = load i32, i32* %580, align 4
  store i32 %581, i32* %9, align 4
  %582 = load i32, i32* @string_mark, align 4
  %583 = load i32, i32* %11, align 4
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %584
  %586 = load i32, i32* %585, align 4
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %587
  %589 = getelementptr inbounds %struct.string_data, %struct.string_data* %588, i32 0, i32 7
  store i32 %582, i32* %589, align 4
  %590 = load i32, i32* @x.123
  %591 = load i32, i32* @y.124
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBBpart270, label %originalBB57alteredBB

originalBBpart270:                                ; preds = %originalBB57
  br label %648

; <label>:598:                                    ; preds = %originalBBpart255, %originalBBpart251
  %599 = load i32, i32* %11, align 4
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %600
  %602 = load i8, i8* %601, align 1
  %603 = zext i8 %602 to i32
  %604 = load i32, i32* %5, align 4
  %605 = icmp eq i32 %603, %604
  br i1 %605, label %606, label %647

; <label>:606:                                    ; preds = %598
  %607 = load i32, i32* %11, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %608
  %610 = load i32, i32* %609, align 4
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %611
  %613 = getelementptr inbounds %struct.string_data, %struct.string_data* %612, i32 0, i32 7
  %614 = load i32, i32* %613, align 4
  %615 = load i32, i32* @string_mark, align 4
  %616 = icmp ne i32 %614, %615
  br i1 %616, label %617, label %647

; <label>:617:                                    ; preds = %606
  %618 = load i32, i32* @x.123
  %619 = load i32, i32* @y.124
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %617
  %626 = load i32, i32* %11, align 4
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = load i32, i32* %3, align 4
  call void @remove_liberty(i32 %629, i32 %630)
  %631 = load i32, i32* @string_mark, align 4
  %632 = load i32, i32* %11, align 4
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %633
  %635 = load i32, i32* %634, align 4
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %636
  %638 = getelementptr inbounds %struct.string_data, %struct.string_data* %637, i32 0, i32 7
  store i32 %631, i32* %638, align 4
  %639 = load i32, i32* @x.123
  %640 = load i32, i32* @y.124
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %647

; <label>:647:                                    ; preds = %originalBBpart274, %606, %598
  br label %648

; <label>:648:                                    ; preds = %647, %originalBBpart270
  %649 = load i32, i32* %12, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %650
  %652 = load i8, i8* %651, align 1
  %653 = zext i8 %652 to i32
  %654 = load i32, i32* %4, align 4
  %655 = icmp eq i32 %653, %654
  br i1 %655, label %656, label %714

; <label>:656:                                    ; preds = %648
  %657 = load i32, i32* @x.123
  %658 = load i32, i32* @y.124
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %656
  %665 = load i32, i32* %12, align 4
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %666
  %668 = load i32, i32* %667, align 4
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %669
  %671 = getelementptr inbounds %struct.string_data, %struct.string_data* %670, i32 0, i32 7
  %672 = load i32, i32* %671, align 4
  %673 = load i32, i32* @string_mark, align 4
  %674 = icmp ne i32 %672, %673
  %675 = load i32, i32* @x.123
  %676 = load i32, i32* @y.124
  %677 = sub i32 %675, 1
  %678 = mul i32 %675, %677
  %679 = urem i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = icmp slt i32 %676, 10
  %682 = or i1 %680, %681
  br i1 %682, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %674, label %683, label %714

; <label>:683:                                    ; preds = %originalBBpart278
  %684 = load i32, i32* @x.123
  %685 = load i32, i32* @y.124
  %686 = sub i32 %684, 1
  %687 = mul i32 %684, %686
  %688 = urem i32 %687, 2
  %689 = icmp eq i32 %688, 0
  %690 = icmp slt i32 %685, 10
  %691 = or i1 %689, %690
  br i1 %691, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %683
  %692 = load i32, i32* %7, align 4
  %693 = add nsw i32 %692, 1
  store i32 %693, i32* %7, align 4
  %694 = load i32, i32* %12, align 4
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %695
  %697 = load i32, i32* %696, align 4
  store i32 %697, i32* %9, align 4
  %698 = load i32, i32* @string_mark, align 4
  %699 = load i32, i32* %12, align 4
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %700
  %702 = load i32, i32* %701, align 4
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %703
  %705 = getelementptr inbounds %struct.string_data, %struct.string_data* %704, i32 0, i32 7
  store i32 %698, i32* %705, align 4
  %706 = load i32, i32* @x.123
  %707 = load i32, i32* @y.124
  %708 = sub i32 %706, 1
  %709 = mul i32 %706, %708
  %710 = urem i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = icmp slt i32 %707, 10
  %713 = or i1 %711, %712
  br i1 %713, label %originalBBpart289, label %originalBB80alteredBB

originalBBpart289:                                ; preds = %originalBB80
  br label %780

; <label>:714:                                    ; preds = %originalBBpart278, %648
  %715 = load i32, i32* %12, align 4
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %716
  %718 = load i8, i8* %717, align 1
  %719 = zext i8 %718 to i32
  %720 = load i32, i32* %5, align 4
  %721 = icmp eq i32 %719, %720
  br i1 %721, label %722, label %763

; <label>:722:                                    ; preds = %714
  %723 = load i32, i32* %12, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %724
  %726 = load i32, i32* %725, align 4
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %727
  %729 = getelementptr inbounds %struct.string_data, %struct.string_data* %728, i32 0, i32 7
  %730 = load i32, i32* %729, align 4
  %731 = load i32, i32* @string_mark, align 4
  %732 = icmp ne i32 %730, %731
  br i1 %732, label %733, label %763

; <label>:733:                                    ; preds = %722
  %734 = load i32, i32* @x.123
  %735 = load i32, i32* @y.124
  %736 = sub i32 %734, 1
  %737 = mul i32 %734, %736
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %735, 10
  %741 = or i1 %739, %740
  br i1 %741, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %733
  %742 = load i32, i32* %12, align 4
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %743
  %745 = load i32, i32* %744, align 4
  %746 = load i32, i32* %3, align 4
  call void @remove_liberty(i32 %745, i32 %746)
  %747 = load i32, i32* @string_mark, align 4
  %748 = load i32, i32* %12, align 4
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %749
  %751 = load i32, i32* %750, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %752
  %754 = getelementptr inbounds %struct.string_data, %struct.string_data* %753, i32 0, i32 7
  store i32 %747, i32* %754, align 4
  %755 = load i32, i32* @x.123
  %756 = load i32, i32* @y.124
  %757 = sub i32 %755, 1
  %758 = mul i32 %755, %757
  %759 = urem i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = icmp slt i32 %756, 10
  %762 = or i1 %760, %761
  br i1 %762, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %763

; <label>:763:                                    ; preds = %originalBBpart293, %722, %714
  %764 = load i32, i32* @x.123
  %765 = load i32, i32* @y.124
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %763
  %772 = load i32, i32* @x.123
  %773 = load i32, i32* @y.124
  %774 = sub i32 %772, 1
  %775 = mul i32 %772, %774
  %776 = urem i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = icmp slt i32 %773, 10
  %779 = or i1 %777, %778
  br i1 %779, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %780

; <label>:780:                                    ; preds = %originalBBpart297, %originalBBpart289
  %781 = load i32, i32* %13, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %782
  %784 = load i8, i8* %783, align 1
  %785 = zext i8 %784 to i32
  %786 = load i32, i32* %4, align 4
  %787 = icmp eq i32 %785, %786
  br i1 %787, label %788, label %806

; <label>:788:                                    ; preds = %780
  %789 = load i32, i32* %13, align 4
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %790
  %792 = load i32, i32* %791, align 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %793
  %795 = getelementptr inbounds %struct.string_data, %struct.string_data* %794, i32 0, i32 7
  %796 = load i32, i32* %795, align 4
  %797 = load i32, i32* @string_mark, align 4
  %798 = icmp ne i32 %796, %797
  br i1 %798, label %799, label %806

; <label>:799:                                    ; preds = %788
  %800 = load i32, i32* %7, align 4
  %801 = add nsw i32 %800, 1
  store i32 %801, i32* %7, align 4
  %802 = load i32, i32* %13, align 4
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %803
  %805 = load i32, i32* %804, align 4
  store i32 %805, i32* %9, align 4
  br label %864

; <label>:806:                                    ; preds = %788, %780
  %807 = load i32, i32* @x.123
  %808 = load i32, i32* @y.124
  %809 = sub i32 %807, 1
  %810 = mul i32 %807, %809
  %811 = urem i32 %810, 2
  %812 = icmp eq i32 %811, 0
  %813 = icmp slt i32 %808, 10
  %814 = or i1 %812, %813
  br i1 %814, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %806
  %815 = load i32, i32* %13, align 4
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %816
  %818 = load i8, i8* %817, align 1
  %819 = zext i8 %818 to i32
  %820 = load i32, i32* %5, align 4
  %821 = icmp eq i32 %819, %820
  %822 = load i32, i32* @x.123
  %823 = load i32, i32* @y.124
  %824 = sub i32 %822, 1
  %825 = mul i32 %822, %824
  %826 = urem i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = icmp slt i32 %823, 10
  %829 = or i1 %827, %828
  br i1 %829, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br i1 %821, label %830, label %847

; <label>:830:                                    ; preds = %originalBBpart2101
  %831 = load i32, i32* %13, align 4
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %832
  %834 = load i32, i32* %833, align 4
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %835
  %837 = getelementptr inbounds %struct.string_data, %struct.string_data* %836, i32 0, i32 7
  %838 = load i32, i32* %837, align 4
  %839 = load i32, i32* @string_mark, align 4
  %840 = icmp ne i32 %838, %839
  br i1 %840, label %841, label %847

; <label>:841:                                    ; preds = %830
  %842 = load i32, i32* %13, align 4
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %843
  %845 = load i32, i32* %844, align 4
  %846 = load i32, i32* %3, align 4
  call void @remove_liberty(i32 %845, i32 %846)
  br label %847

; <label>:847:                                    ; preds = %841, %830, %originalBBpart2101
  %848 = load i32, i32* @x.123
  %849 = load i32, i32* @y.124
  %850 = sub i32 %848, 1
  %851 = mul i32 %848, %850
  %852 = urem i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = icmp slt i32 %849, 10
  %855 = or i1 %853, %854
  br i1 %855, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %847
  %856 = load i32, i32* @x.123
  %857 = load i32, i32* @y.124
  %858 = sub i32 %856, 1
  %859 = mul i32 %856, %858
  %860 = urem i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = icmp slt i32 %857, 10
  %863 = or i1 %861, %862
  br i1 %863, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %864

; <label>:864:                                    ; preds = %originalBBpart2105, %799
  %865 = load i32, i32* @x.123
  %866 = load i32, i32* @y.124
  %867 = sub i32 %865, 1
  %868 = mul i32 %865, %867
  %869 = urem i32 %868, 2
  %870 = icmp eq i32 %869, 0
  %871 = icmp slt i32 %866, 10
  %872 = or i1 %870, %871
  br i1 %872, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %864
  %873 = load i32, i32* %7, align 4
  %874 = icmp eq i32 %873, 0
  %875 = load i32, i32* @x.123
  %876 = load i32, i32* @y.124
  %877 = sub i32 %875, 1
  %878 = mul i32 %875, %877
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %876, 10
  %882 = or i1 %880, %881
  br i1 %882, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br i1 %874, label %883, label %885

; <label>:883:                                    ; preds = %originalBBpart2109
  %884 = load i32, i32* %3, align 4
  call void @create_new_string(i32 %884)
  br label %930

; <label>:885:                                    ; preds = %originalBBpart2109
  %886 = load i32, i32* %7, align 4
  %887 = icmp eq i32 %886, 1
  br i1 %887, label %888, label %928

; <label>:888:                                    ; preds = %885
  %889 = load i32, i32* %9, align 4
  %890 = icmp sge i32 %889, 0
  br i1 %890, label %891, label %908

; <label>:891:                                    ; preds = %888
  %892 = load i32, i32* @x.123
  %893 = load i32, i32* @y.124
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %891
  %900 = load i32, i32* @x.123
  %901 = load i32, i32* @y.124
  %902 = sub i32 %900, 1
  %903 = mul i32 %900, %902
  %904 = urem i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = icmp slt i32 %901, 10
  %907 = or i1 %905, %906
  br i1 %907, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br label %909

; <label>:908:                                    ; preds = %888
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3498, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 -1, i32 -1)
  br label %909

; <label>:909:                                    ; preds = %908, %originalBBpart2113
  %910 = load i32, i32* @x.123
  %911 = load i32, i32* @y.124
  %912 = sub i32 %910, 1
  %913 = mul i32 %910, %912
  %914 = urem i32 %913, 2
  %915 = icmp eq i32 %914, 0
  %916 = icmp slt i32 %911, 10
  %917 = or i1 %915, %916
  br i1 %917, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %909
  %918 = load i32, i32* %3, align 4
  %919 = load i32, i32* %9, align 4
  call void @extend_neighbor_string(i32 %918, i32 %919)
  %920 = load i32, i32* @x.123
  %921 = load i32, i32* @y.124
  %922 = sub i32 %920, 1
  %923 = mul i32 %920, %922
  %924 = urem i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = icmp slt i32 %921, 10
  %927 = or i1 %925, %926
  br i1 %927, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br label %980

; <label>:928:                                    ; preds = %885
  %929 = load i32, i32* %3, align 4
  call void @assimilate_neighbor_strings(i32 %929)
  br label %980

; <label>:930:                                    ; preds = %883
  %931 = load i32, i32* %3, align 4
  %932 = sext i32 %931 to i64
  %933 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %932
  %934 = load i32, i32* %933, align 4
  store i32 %934, i32* %9, align 4
  %935 = load i32, i32* %9, align 4
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %936
  %938 = getelementptr inbounds %struct.string_data, %struct.string_data* %937, i32 0, i32 3
  %939 = load i32, i32* %938, align 4
  %940 = icmp eq i32 %939, 1
  br i1 %940, label %941, label %980

; <label>:941:                                    ; preds = %930
  %942 = load i32, i32* %9, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %943
  %945 = getelementptr inbounds %struct.string_data, %struct.string_data* %944, i32 0, i32 1
  %946 = load i32, i32* %945, align 4
  %947 = icmp eq i32 %946, 1
  br i1 %947, label %948, label %980

; <label>:948:                                    ; preds = %941
  %949 = load i32, i32* @x.123
  %950 = load i32, i32* @y.124
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %948
  %957 = load i32, i32* %6, align 4
  %958 = icmp eq i32 %957, 1
  %959 = load i32, i32* @x.123
  %960 = load i32, i32* @y.124
  %961 = sub i32 %959, 1
  %962 = mul i32 %959, %961
  %963 = urem i32 %962, 2
  %964 = icmp eq i32 %963, 0
  %965 = icmp slt i32 %960, 10
  %966 = or i1 %964, %965
  br i1 %966, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br i1 %958, label %967, label %980

; <label>:967:                                    ; preds = %originalBBpart2121
  %968 = load i32, i32* @board_ko_pos, align 4
  %969 = icmp ne i32 %968, 0
  br i1 %969, label %970, label %972

; <label>:970:                                    ; preds = %967
  %971 = load i32, i32* @board_ko_pos, align 4
  call void @hashdata_invert_ko(%struct.Hash_data* @hashdata, i32 %971)
  br label %972

; <label>:972:                                    ; preds = %970, %967
  %973 = load i32, i32* %9, align 4
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %974
  %976 = getelementptr inbounds %struct.string_data, %struct.string_data* %975, i32 0, i32 4
  %977 = getelementptr inbounds [20 x i32], [20 x i32]* %976, i64 0, i64 0
  %978 = load i32, i32* %977, align 8
  store i32 %978, i32* @board_ko_pos, align 4
  %979 = load i32, i32* @board_ko_pos, align 4
  call void @hashdata_invert_ko(%struct.Hash_data* @hashdata, i32 %979)
  br label %980

; <label>:980:                                    ; preds = %972, %originalBBpart2121, %941, %930, %928, %originalBBpart2117, %originalBBpart232
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %57
  %981 = load i32, i32* %11, align 4
  %982 = sext i32 %981 to i64
  %983 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %982
  %984 = load i32, i32* %983, align 4
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %985
  %987 = getelementptr inbounds %struct.string_data, %struct.string_data* %986, i32 0, i32 3
  %988 = load i32, i32* %987, align 4
  %989 = icmp eq i32 %988, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %143
  %990 = load i32, i32* %6, align 4
  %991 = icmp eq i32 %990, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %213
  store i32 1, i32* %8, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %230
  %992 = load i32, i32* %12, align 4
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %993
  %995 = load i8, i8* %994, align 1
  %996 = zext i8 %995 to i32
  %997 = icmp eq i32 %996, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %272
  %998 = load i32, i32* %13, align 4
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %999
  %1001 = load i8, i8* %1000, align 1
  %1002 = zext i8 %1001 to i32
  %1003 = icmp eq i32 %1002, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %295
  %1004 = load i32, i32* %13, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1005
  %1007 = load i8, i8* %1006, align 1
  %1008 = zext i8 %1007 to i32
  %1009 = load i32, i32* %4, align 4
  %1010 = icmp eq i32 %1008, %1009
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %332
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %349
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %373
  %1011 = load i32, i32* %3, align 4
  %1012 = load i32, i32* %4, align 4
  call void @do_commit_suicide(i32 %1011, i32 %1012)
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %414
  %1013 = load i32, i32* @string_mark, align 4
  %_ = shl i32 %1013, 1
  %_35 = sub i32 %1013, 1
  %gen = mul i32 %_35, 1
  %_36 = sub i32 0, %1013
  %gen37 = add i32 %_36, 1
  %_38 = sub i32 0, %1013
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 0, %1013
  %gen41 = add i32 %_40, 1
  %1014 = add nsw i32 %1013, 1
  store i32 %1014, i32* @string_mark, align 4
  %1015 = load i32, i32* %10, align 4
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1016
  %1018 = load i8, i8* %1017, align 1
  %1019 = zext i8 %1018 to i32
  %1020 = load i32, i32* %4, align 4
  %1021 = icmp eq i32 %1019, %1020
  br label %originalBB34

originalBB45alteredBB:                            ; preds = %originalBB45, %499
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %516
  %1022 = load i32, i32* %11, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1023
  %1025 = load i8, i8* %1024, align 1
  %1026 = zext i8 %1025 to i32
  %1027 = load i32, i32* %4, align 4
  %1028 = icmp eq i32 %1026, %1027
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %540
  %1029 = load i32, i32* %11, align 4
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1030
  %1032 = load i32, i32* %1031, align 4
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1033
  %1035 = getelementptr inbounds %struct.string_data, %struct.string_data* %1034, i32 0, i32 7
  %1036 = load i32, i32* %1035, align 4
  %1037 = load i32, i32* @string_mark, align 4
  %1038 = icmp ne i32 %1036, %1037
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %567
  %1039 = load i32, i32* %7, align 4
  %_58 = sub i32 %1039, 1
  %gen59 = mul i32 %_58, 1
  %_60 = shl i32 %1039, 1
  %_61 = shl i32 %1039, 1
  %_62 = sub i32 0, %1039
  %gen63 = add i32 %_62, 1
  %_64 = sub i32 %1039, 1
  %gen65 = mul i32 %_64, 1
  %_66 = shl i32 %1039, 1
  %_67 = sub i32 %1039, 1
  %gen68 = mul i32 %_67, 1
  %1040 = add nsw i32 %1039, 1
  store i32 %1040, i32* %7, align 4
  %1041 = load i32, i32* %11, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1042
  %1044 = load i32, i32* %1043, align 4
  store i32 %1044, i32* %9, align 4
  %1045 = load i32, i32* @string_mark, align 4
  %1046 = load i32, i32* %11, align 4
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1047
  %1049 = load i32, i32* %1048, align 4
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1050
  %1052 = getelementptr inbounds %struct.string_data, %struct.string_data* %1051, i32 0, i32 7
  store i32 %1045, i32* %1052, align 4
  br label %originalBB57

originalBB72alteredBB:                            ; preds = %originalBB72, %617
  %1053 = load i32, i32* %11, align 4
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1054
  %1056 = load i32, i32* %1055, align 4
  %1057 = load i32, i32* %3, align 4
  call void @remove_liberty(i32 %1056, i32 %1057)
  %1058 = load i32, i32* @string_mark, align 4
  %1059 = load i32, i32* %11, align 4
  %1060 = sext i32 %1059 to i64
  %1061 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1060
  %1062 = load i32, i32* %1061, align 4
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1063
  %1065 = getelementptr inbounds %struct.string_data, %struct.string_data* %1064, i32 0, i32 7
  store i32 %1058, i32* %1065, align 4
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %656
  %1066 = load i32, i32* %12, align 4
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1067
  %1069 = load i32, i32* %1068, align 4
  %1070 = sext i32 %1069 to i64
  %1071 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1070
  %1072 = getelementptr inbounds %struct.string_data, %struct.string_data* %1071, i32 0, i32 7
  %1073 = load i32, i32* %1072, align 4
  %1074 = load i32, i32* @string_mark, align 4
  %1075 = icmp ne i32 %1073, %1074
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %683
  %1076 = load i32, i32* %7, align 4
  %_81 = shl i32 %1076, 1
  %_82 = sub i32 %1076, 1
  %gen83 = mul i32 %_82, 1
  %_84 = sub i32 0, %1076
  %gen85 = add i32 %_84, 1
  %_86 = sub i32 0, %1076
  %gen87 = add i32 %_86, 1
  %1077 = add nsw i32 %1076, 1
  store i32 %1077, i32* %7, align 4
  %1078 = load i32, i32* %12, align 4
  %1079 = sext i32 %1078 to i64
  %1080 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1079
  %1081 = load i32, i32* %1080, align 4
  store i32 %1081, i32* %9, align 4
  %1082 = load i32, i32* @string_mark, align 4
  %1083 = load i32, i32* %12, align 4
  %1084 = sext i32 %1083 to i64
  %1085 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1084
  %1086 = load i32, i32* %1085, align 4
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1087
  %1089 = getelementptr inbounds %struct.string_data, %struct.string_data* %1088, i32 0, i32 7
  store i32 %1082, i32* %1089, align 4
  br label %originalBB80

originalBB91alteredBB:                            ; preds = %originalBB91, %733
  %1090 = load i32, i32* %12, align 4
  %1091 = sext i32 %1090 to i64
  %1092 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1091
  %1093 = load i32, i32* %1092, align 4
  %1094 = load i32, i32* %3, align 4
  call void @remove_liberty(i32 %1093, i32 %1094)
  %1095 = load i32, i32* @string_mark, align 4
  %1096 = load i32, i32* %12, align 4
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1097
  %1099 = load i32, i32* %1098, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1100
  %1102 = getelementptr inbounds %struct.string_data, %struct.string_data* %1101, i32 0, i32 7
  store i32 %1095, i32* %1102, align 4
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %763
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %806
  %1103 = load i32, i32* %13, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1104
  %1106 = load i8, i8* %1105, align 1
  %1107 = zext i8 %1106 to i32
  %1108 = load i32, i32* %5, align 4
  %1109 = icmp eq i32 %1107, %1108
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %847
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %864
  %1110 = load i32, i32* %7, align 4
  %1111 = icmp eq i32 %1110, 0
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %891
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %909
  %1112 = load i32, i32* %3, align 4
  %1113 = load i32, i32* %9, align 4
  call void @extend_neighbor_string(i32 %1112, i32 %1113)
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %948
  %1114 = load i32, i32* %6, align 4
  %1115 = icmp eq i32 %1114, 1
  br label %originalBB119
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @do_remove_string(i32) #0 {
  %2 = load i32, i32* @x.125
  %3 = load i32, i32* @y.126
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  %13 = load i32, i32* %10, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %14
  %16 = getelementptr inbounds %struct.string_data, %struct.string_data* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %11, align 4
  %18 = load i32, i32* @x.125
  %19 = load i32, i32* @y.126
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %95, %originalBBpart2
  %27 = load i32, i32* @x.125
  %28 = load i32, i32* @y.126
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %26
  %35 = load i32, i32* %11, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %36
  %38 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %39 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %38, i32 0, i32 0
  store i32* %37, i32** %39, align 8
  %40 = load i32, i32* %11, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %45 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %44, i32 1
  store %struct.change_stack_entry* %45, %struct.change_stack_entry** @change_stack_pointer, align 8
  %46 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %44, i32 0, i32 1
  store i32 %43, i32* %46, align 8
  %47 = load i32, i32* %11, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %48
  %50 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %51 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %50, i32 0, i32 0
  store i32* %49, i32** %51, align 8
  %52 = load i32, i32* %11, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %57 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %56, i32 1
  store %struct.change_stack_entry* %57, %struct.change_stack_entry** @change_stack_pointer, align 8
  %58 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %56, i32 0, i32 1
  store i32 %55, i32* %58, align 8
  %59 = load i32, i32* @x.125
  %60 = load i32, i32* @y.126
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %67

; <label>:67:                                     ; preds = %originalBBpart24
  %68 = load i32, i32* %11, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %69
  %71 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %72 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %71, i32 0, i32 0
  store i8* %70, i8** %72, align 8
  %73 = load i32, i32* %11, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = load %struct.vertex_stack_entry*, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %79 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %78, i32 1
  store %struct.vertex_stack_entry* %79, %struct.vertex_stack_entry** @vertex_stack_pointer, align 8
  %80 = getelementptr inbounds %struct.vertex_stack_entry, %struct.vertex_stack_entry* %78, i32 0, i32 1
  store i32 %77, i32* %80, align 8
  %81 = load i32, i32* %11, align 4
  %82 = load i32, i32* %11, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  call void @hashdata_invert_stone(%struct.Hash_data* @hashdata, i32 %81, i32 %86)
  %87 = load i32, i32* %11, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %88
  store i8 0, i8* %89, align 1
  br label %90

; <label>:90:                                     ; preds = %67
  %91 = load i32, i32* %11, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %11, align 4
  br label %95

; <label>:95:                                     ; preds = %90
  %96 = load i32, i32* %11, align 4
  %97 = load i32, i32* %10, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %98
  %100 = getelementptr inbounds %struct.string_data, %struct.string_data* %99, i32 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %96, %101
  %103 = xor i1 %102, true
  br i1 %103, label %26, label %104

; <label>:104:                                    ; preds = %95
  store i32 0, i32* %12, align 4
  br label %105

; <label>:105:                                    ; preds = %originalBBpart28, %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %10, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %108
  %110 = getelementptr inbounds %struct.string_data, %struct.string_data* %109, i32 0, i32 5
  %111 = load i32, i32* %110, align 8
  %112 = icmp slt i32 %106, %111
  br i1 %112, label %113, label %150

; <label>:113:                                    ; preds = %105
  %114 = load i32, i32* %10, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %115
  %117 = getelementptr inbounds %struct.string_data, %struct.string_data* %116, i32 0, i32 6
  %118 = load i32, i32* %12, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [160 x i32], [160 x i32]* %117, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = load i32, i32* %10, align 4
  call void @remove_neighbor(i32 %121, i32 %122)
  %123 = load i32, i32* %10, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %124
  %126 = getelementptr inbounds %struct.string_data, %struct.string_data* %125, i32 0, i32 6
  %127 = load i32, i32* %12, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [160 x i32], [160 x i32]* %126, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  call void @update_liberties(i32 %130)
  br label %131

; <label>:131:                                    ; preds = %113
  %132 = load i32, i32* @x.125
  %133 = load i32, i32* @y.126
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %131
  %140 = load i32, i32* %12, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %12, align 4
  %142 = load i32, i32* @x.125
  %143 = load i32, i32* @y.126
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %105

; <label>:150:                                    ; preds = %105
  %151 = load i32, i32* %10, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %152
  %154 = getelementptr inbounds %struct.string_data, %struct.string_data* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %181

; <label>:157:                                    ; preds = %150
  %158 = load i32, i32* @x.125
  %159 = load i32, i32* @y.126
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %157
  %166 = load i32, i32* %10, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %167
  %169 = getelementptr inbounds %struct.string_data, %struct.string_data* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* @white_captured, align 4
  %172 = add nsw i32 %171, %170
  store i32 %172, i32* @white_captured, align 4
  %173 = load i32, i32* @x.125
  %174 = load i32, i32* @y.126
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart224, label %originalBB10alteredBB

originalBBpart224:                                ; preds = %originalBB10
  br label %189

; <label>:181:                                    ; preds = %150
  %182 = load i32, i32* %10, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %183
  %185 = getelementptr inbounds %struct.string_data, %struct.string_data* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = load i32, i32* @black_captured, align 4
  %188 = add nsw i32 %187, %186
  store i32 %188, i32* @black_captured, align 4
  br label %189

; <label>:189:                                    ; preds = %181, %originalBBpart224
  %190 = load i32, i32* @x.125
  %191 = load i32, i32* @y.126
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %189
  %198 = load i32, i32* %10, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %199
  %201 = getelementptr inbounds %struct.string_data, %struct.string_data* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = load i32, i32* @x.125
  %204 = load i32, i32* @y.126
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i32 %202

originalBBalteredBB:                              ; preds = %originalBB, %1
  %211 = alloca i32, align 4
  %212 = alloca i32, align 4
  %213 = alloca i32, align 4
  store i32 %0, i32* %211, align 4
  %214 = load i32, i32* %211, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %215
  %217 = getelementptr inbounds %struct.string_data, %struct.string_data* %216, i32 0, i32 2
  %218 = load i32, i32* %217, align 8
  store i32 %218, i32* %212, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %219 = load i32, i32* %11, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %220
  %222 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %223 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %222, i32 0, i32 0
  store i32* %221, i32** %223, align 8
  %224 = load i32, i32* %11, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %229 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %228, i32 1
  store %struct.change_stack_entry* %229, %struct.change_stack_entry** @change_stack_pointer, align 8
  %230 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %228, i32 0, i32 1
  store i32 %227, i32* %230, align 8
  %231 = load i32, i32* %11, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %232
  %234 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %235 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %234, i32 0, i32 0
  store i32* %233, i32** %235, align 8
  %236 = load i32, i32* %11, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %241 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %240, i32 1
  store %struct.change_stack_entry* %241, %struct.change_stack_entry** @change_stack_pointer, align 8
  %242 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %240, i32 0, i32 1
  store i32 %239, i32* %242, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %131
  %243 = load i32, i32* %12, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %12, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %157
  %245 = load i32, i32* %10, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %246
  %248 = getelementptr inbounds %struct.string_data, %struct.string_data* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = load i32, i32* @white_captured, align 4
  %_ = sub i32 0, %250
  %gen = add i32 %_, %249
  %_11 = sub i32 %250, %249
  %gen12 = mul i32 %_11, %249
  %_13 = shl i32 %250, %249
  %_14 = sub i32 %250, %249
  %gen15 = mul i32 %_14, %249
  %_16 = sub i32 0, %250
  %gen17 = add i32 %_16, %249
  %_18 = shl i32 %250, %249
  %_19 = sub i32 0, %250
  %gen20 = add i32 %_19, %249
  %_21 = sub i32 0, %250
  %gen22 = add i32 %_21, %249
  %251 = add nsw i32 %250, %249
  store i32 %251, i32* @white_captured, align 4
  br label %originalBB10

originalBB26alteredBB:                            ; preds = %originalBB26, %189
  %252 = load i32, i32* %10, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %253
  %255 = getelementptr inbounds %struct.string_data, %struct.string_data* %254, i32 0, i32 1
  %256 = load i32, i32* %255, align 4
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_commit_suicide(i32, i32) #0 {
  %3 = load i32, i32* @x.127
  %4 = load i32, i32* @y.128
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %13 = load i32, i32* %11, align 4
  %14 = add nsw i32 %13, 20
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i32, i32* %12, align 4
  %20 = icmp eq i32 %18, %19
  %21 = load i32, i32* @x.127
  %22 = load i32, i32* @y.128
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %36

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* %11, align 4
  %31 = add nsw i32 %30, 20
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = call i32 @do_remove_string(i32 %34)
  br label %36

; <label>:36:                                     ; preds = %29, %originalBBpart2
  %37 = load i32, i32* %11, align 4
  %38 = sub nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = load i32, i32* %12, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %68

; <label>:45:                                     ; preds = %36
  %46 = load i32, i32* @x.127
  %47 = load i32, i32* @y.128
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %45
  %54 = load i32, i32* %11, align 4
  %55 = sub nsw i32 %54, 1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = call i32 @do_remove_string(i32 %58)
  %60 = load i32, i32* @x.127
  %61 = load i32, i32* @y.128
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br label %68

; <label>:68:                                     ; preds = %originalBBpart25, %36
  %69 = load i32, i32* %11, align 4
  %70 = sub nsw i32 %69, 20
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = load i32, i32* %12, align 4
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %84

; <label>:77:                                     ; preds = %68
  %78 = load i32, i32* %11, align 4
  %79 = sub nsw i32 %78, 20
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = call i32 @do_remove_string(i32 %82)
  br label %84

; <label>:84:                                     ; preds = %77, %68
  %85 = load i32, i32* %11, align 4
  %86 = add nsw i32 %85, 1
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = load i32, i32* %12, align 4
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %93, label %116

; <label>:93:                                     ; preds = %84
  %94 = load i32, i32* @x.127
  %95 = load i32, i32* @y.128
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %93
  %102 = load i32, i32* %11, align 4
  %103 = add nsw i32 %102, 1
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = call i32 @do_remove_string(i32 %106)
  %108 = load i32, i32* @x.127
  %109 = load i32, i32* @y.128
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart220, label %originalBB7alteredBB

originalBBpart220:                                ; preds = %originalBB7
  br label %116

; <label>:116:                                    ; preds = %originalBBpart220, %84
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %117 = alloca i32, align 4
  %118 = alloca i32, align 4
  store i32 %0, i32* %117, align 4
  store i32 %1, i32* %118, align 4
  %119 = load i32, i32* %117, align 4
  %_ = sub i32 %119, 20
  %gen = mul i32 %_, 20
  %_1 = sub i32 %119, 20
  %gen2 = mul i32 %_1, 20
  %120 = add nsw i32 %119, 20
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = load i32, i32* %118, align 4
  %126 = icmp eq i32 %124, %125
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %45
  %127 = load i32, i32* %11, align 4
  %128 = sub nsw i32 %127, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = call i32 @do_remove_string(i32 %131)
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %93
  %133 = load i32, i32* %11, align 4
  %_8 = sub i32 %133, 1
  %gen9 = mul i32 %_8, 1
  %_10 = sub i32 %133, 1
  %gen11 = mul i32 %_10, 1
  %_12 = sub i32 0, %133
  %gen13 = add i32 %_12, 1
  %_14 = shl i32 %133, 1
  %_15 = shl i32 %133, 1
  %_16 = shl i32 %133, 1
  %_17 = sub i32 0, %133
  %gen18 = add i32 %_17, 1
  %134 = add nsw i32 %133, 1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = call i32 @do_remove_string(i32 %137)
  br label %originalBB7
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_liberty(i32, i32) #0 {
  %3 = load i32, i32* @x.129
  %4 = load i32, i32* @y.130
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.string_data*, align 8
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %15 = load i32, i32* %11, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %16
  store %struct.string_data* %17, %struct.string_data** %14, align 8
  %18 = load %struct.string_data*, %struct.string_data** %14, align 8
  %19 = getelementptr inbounds %struct.string_data, %struct.string_data* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 20
  %22 = load i32, i32* @x.129
  %23 = load i32, i32* @y.130
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %32

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* %11, align 4
  call void @update_liberties(i32 %31)
  br label %136

; <label>:32:                                     ; preds = %originalBBpart2
  store i32 0, i32* %13, align 4
  br label %33

; <label>:33:                                     ; preds = %132, %32
  %34 = load i32, i32* %13, align 4
  %35 = load %struct.string_data*, %struct.string_data** %14, align 8
  %36 = getelementptr inbounds %struct.string_data, %struct.string_data* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %39, label %135

; <label>:39:                                     ; preds = %33
  %40 = load i32, i32* @x.129
  %41 = load i32, i32* @y.130
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %39
  %48 = load %struct.string_data*, %struct.string_data** %14, align 8
  %49 = getelementptr inbounds %struct.string_data, %struct.string_data* %48, i32 0, i32 4
  %50 = load i32, i32* %13, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [20 x i32], [20 x i32]* %49, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* %12, align 4
  %55 = icmp eq i32 %53, %54
  %56 = load i32, i32* @x.129
  %57 = load i32, i32* @y.130
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %55, label %64, label %131

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = load %struct.string_data*, %struct.string_data** %14, align 8
  %66 = getelementptr inbounds %struct.string_data, %struct.string_data* %65, i32 0, i32 4
  %67 = load %struct.string_data*, %struct.string_data** %14, align 8
  %68 = getelementptr inbounds %struct.string_data, %struct.string_data* %67, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = sub nsw i32 %69, 1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [20 x i32], [20 x i32]* %66, i64 0, i64 %71
  %73 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %74 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %73, i32 0, i32 0
  store i32* %72, i32** %74, align 8
  %75 = load %struct.string_data*, %struct.string_data** %14, align 8
  %76 = getelementptr inbounds %struct.string_data, %struct.string_data* %75, i32 0, i32 4
  %77 = load %struct.string_data*, %struct.string_data** %14, align 8
  %78 = getelementptr inbounds %struct.string_data, %struct.string_data* %77, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = sub nsw i32 %79, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [20 x i32], [20 x i32]* %76, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %85 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %84, i32 1
  store %struct.change_stack_entry* %85, %struct.change_stack_entry** @change_stack_pointer, align 8
  %86 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %84, i32 0, i32 1
  store i32 %83, i32* %86, align 8
  %87 = load %struct.string_data*, %struct.string_data** %14, align 8
  %88 = getelementptr inbounds %struct.string_data, %struct.string_data* %87, i32 0, i32 4
  %89 = load i32, i32* %13, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [20 x i32], [20 x i32]* %88, i64 0, i64 %90
  %92 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %93 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %92, i32 0, i32 0
  store i32* %91, i32** %93, align 8
  %94 = load %struct.string_data*, %struct.string_data** %14, align 8
  %95 = getelementptr inbounds %struct.string_data, %struct.string_data* %94, i32 0, i32 4
  %96 = load i32, i32* %13, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [20 x i32], [20 x i32]* %95, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %101 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %100, i32 1
  store %struct.change_stack_entry* %101, %struct.change_stack_entry** @change_stack_pointer, align 8
  %102 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %100, i32 0, i32 1
  store i32 %99, i32* %102, align 8
  %103 = load %struct.string_data*, %struct.string_data** %14, align 8
  %104 = getelementptr inbounds %struct.string_data, %struct.string_data* %103, i32 0, i32 3
  %105 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %106 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %105, i32 0, i32 0
  store i32* %104, i32** %106, align 8
  %107 = load %struct.string_data*, %struct.string_data** %14, align 8
  %108 = getelementptr inbounds %struct.string_data, %struct.string_data* %107, i32 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %111 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %110, i32 1
  store %struct.change_stack_entry* %111, %struct.change_stack_entry** @change_stack_pointer, align 8
  %112 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %110, i32 0, i32 1
  store i32 %109, i32* %112, align 8
  %113 = load %struct.string_data*, %struct.string_data** %14, align 8
  %114 = getelementptr inbounds %struct.string_data, %struct.string_data* %113, i32 0, i32 4
  %115 = load %struct.string_data*, %struct.string_data** %14, align 8
  %116 = getelementptr inbounds %struct.string_data, %struct.string_data* %115, i32 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = sub nsw i32 %117, 1
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [20 x i32], [20 x i32]* %114, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = load %struct.string_data*, %struct.string_data** %14, align 8
  %123 = getelementptr inbounds %struct.string_data, %struct.string_data* %122, i32 0, i32 4
  %124 = load i32, i32* %13, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [20 x i32], [20 x i32]* %123, i64 0, i64 %125
  store i32 %121, i32* %126, align 4
  %127 = load %struct.string_data*, %struct.string_data** %14, align 8
  %128 = getelementptr inbounds %struct.string_data, %struct.string_data* %127, i32 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = add nsw i32 %129, -1
  store i32 %130, i32* %128, align 4
  br label %135

; <label>:131:                                    ; preds = %originalBBpart24
  br label %132

; <label>:132:                                    ; preds = %131
  %133 = load i32, i32* %13, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %13, align 4
  br label %33

; <label>:135:                                    ; preds = %64, %33
  br label %136

; <label>:136:                                    ; preds = %135, %30
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %137 = alloca i32, align 4
  %138 = alloca i32, align 4
  %139 = alloca i32, align 4
  %140 = alloca %struct.string_data*, align 8
  store i32 %0, i32* %137, align 4
  store i32 %1, i32* %138, align 4
  %141 = load i32, i32* %137, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %142
  store %struct.string_data* %143, %struct.string_data** %140, align 8
  %144 = load %struct.string_data*, %struct.string_data** %140, align 8
  %145 = getelementptr inbounds %struct.string_data, %struct.string_data* %144, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = icmp sgt i32 %146, 20
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %148 = load %struct.string_data*, %struct.string_data** %14, align 8
  %149 = getelementptr inbounds %struct.string_data, %struct.string_data* %148, i32 0, i32 4
  %150 = load i32, i32* %13, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [20 x i32], [20 x i32]* %149, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* %12, align 4
  %155 = icmp eq i32 %153, %154
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define internal void @create_new_string(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %10 = load i32, i32* %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  store i32 %14, i32* %4, align 4
  %15 = load i32, i32* %4, align 4
  %16 = sub nsw i32 3, %15
  store i32 %16, i32* %5, align 4
  %17 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %18 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %17, i32 0, i32 0
  store i32* @next_string, i32** %18, align 8
  %19 = load i32, i32* @next_string, align 4
  %20 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %21 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %20, i32 1
  store %struct.change_stack_entry* %21, %struct.change_stack_entry** @change_stack_pointer, align 8
  %22 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %20, i32 0, i32 1
  store i32 %19, i32* %22, align 8
  %23 = load i32, i32* @next_string, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* @next_string, align 4
  store i32 %23, i32* %3, align 4
  %25 = load i32, i32* %3, align 4
  %26 = load i32, i32* %2, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %27
  store i32 %25, i32* %28, align 4
  %29 = load i32, i32* %2, align 4
  %30 = load i32, i32* %2, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %31
  store i32 %29, i32* %32, align 4
  %33 = load i32, i32* %4, align 4
  %34 = load i32, i32* %3, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %35
  %37 = getelementptr inbounds %struct.string_data, %struct.string_data* %36, i32 0, i32 0
  store i32 %33, i32* %37, align 8
  %38 = load i32, i32* %3, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %39
  %41 = getelementptr inbounds %struct.string_data, %struct.string_data* %40, i32 0, i32 1
  store i32 1, i32* %41, align 4
  %42 = load i32, i32* %2, align 4
  %43 = load i32, i32* %3, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %44
  %46 = getelementptr inbounds %struct.string_data, %struct.string_data* %45, i32 0, i32 2
  store i32 %42, i32* %46, align 8
  %47 = load i32, i32* %3, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %48
  %50 = getelementptr inbounds %struct.string_data, %struct.string_data* %49, i32 0, i32 3
  store i32 0, i32* %50, align 4
  %51 = load i32, i32* %3, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %52
  %54 = getelementptr inbounds %struct.string_data, %struct.string_data* %53, i32 0, i32 5
  store i32 0, i32* %54, align 8
  %55 = load i32, i32* %3, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %56
  %58 = getelementptr inbounds %struct.string_data, %struct.string_data* %57, i32 0, i32 7
  store i32 0, i32* %58, align 4
  %59 = load i32, i32* @string_mark, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* @string_mark, align 4
  %61 = load i32, i32* %2, align 4
  %62 = add nsw i32 %61, 20
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %130

; <label>:68:                                     ; preds = %1
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.131
  %71 = load i32, i32* @y.132
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %69
  %78 = load i32, i32* %3, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %79
  %81 = getelementptr inbounds %struct.string_data, %struct.string_data* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %82, 20
  %84 = load i32, i32* @x.131
  %85 = load i32, i32* @y.132
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %83, label %92, label %106

; <label>:92:                                     ; preds = %originalBBpart2
  %93 = load i32, i32* %2, align 4
  %94 = add nsw i32 %93, 20
  %95 = load i32, i32* %3, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %96
  %98 = getelementptr inbounds %struct.string_data, %struct.string_data* %97, i32 0, i32 4
  %99 = load i32, i32* %3, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %100
  %102 = getelementptr inbounds %struct.string_data, %struct.string_data* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [20 x i32], [20 x i32]* %98, i64 0, i64 %104
  store i32 %94, i32* %105, align 4
  br label %106

; <label>:106:                                    ; preds = %92, %originalBBpart2
  %107 = load i32, i32* @x.131
  %108 = load i32, i32* @y.132
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %106
  %115 = load i32, i32* %3, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %116
  %118 = getelementptr inbounds %struct.string_data, %struct.string_data* %117, i32 0, i32 3
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = load i32, i32* @x.131
  %122 = load i32, i32* @y.132
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart26, label %originalBB1alteredBB

originalBBpart26:                                 ; preds = %originalBB1
  br label %129

; <label>:129:                                    ; preds = %originalBBpart26
  br label %262

; <label>:130:                                    ; preds = %1
  %131 = load i32, i32* %2, align 4
  %132 = add nsw i32 %131, 20
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = load i32, i32* %5, align 4
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %139, label %245

; <label>:139:                                    ; preds = %130
  %140 = load i32, i32* @x.131
  %141 = load i32, i32* @y.132
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %originalBB8alteredBB, %139
  %148 = load i32, i32* %2, align 4
  %149 = add nsw i32 %148, 20
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %153
  %155 = getelementptr inbounds %struct.string_data, %struct.string_data* %154, i32 0, i32 7
  %156 = load i32, i32* %155, align 4
  %157 = load i32, i32* @string_mark, align 4
  %158 = icmp ne i32 %156, %157
  %159 = load i32, i32* @x.131
  %160 = load i32, i32* @y.132
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart216, label %originalBB8alteredBB

originalBBpart216:                                ; preds = %originalBB8
  br i1 %158, label %167, label %245

; <label>:167:                                    ; preds = %originalBBpart216
  %168 = load i32, i32* @x.131
  %169 = load i32, i32* @y.132
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %167
  %176 = load i32, i32* %2, align 4
  %177 = add nsw i32 %176, 20
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %6, align 4
  %181 = load i32, i32* %2, align 4
  %182 = add nsw i32 %181, 20
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = load i32, i32* %3, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %187
  %189 = getelementptr inbounds %struct.string_data, %struct.string_data* %188, i32 0, i32 6
  %190 = load i32, i32* %3, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %191
  %193 = getelementptr inbounds %struct.string_data, %struct.string_data* %192, i32 0, i32 5
  %194 = load i32, i32* %193, align 8
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %193, align 8
  %196 = sext i32 %194 to i64
  %197 = getelementptr inbounds [160 x i32], [160 x i32]* %189, i64 0, i64 %196
  store i32 %185, i32* %197, align 4
  %198 = load i32, i32* %6, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %199
  %201 = getelementptr inbounds %struct.string_data, %struct.string_data* %200, i32 0, i32 5
  %202 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %203 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %202, i32 0, i32 0
  store i32* %201, i32** %203, align 8
  %204 = load i32, i32* %6, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %205
  %207 = getelementptr inbounds %struct.string_data, %struct.string_data* %206, i32 0, i32 5
  %208 = load i32, i32* %207, align 8
  %209 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %210 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %209, i32 1
  store %struct.change_stack_entry* %210, %struct.change_stack_entry** @change_stack_pointer, align 8
  %211 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %209, i32 0, i32 1
  store i32 %208, i32* %211, align 8
  %212 = load i32, i32* %2, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = load i32, i32* %6, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %217
  %219 = getelementptr inbounds %struct.string_data, %struct.string_data* %218, i32 0, i32 6
  %220 = load i32, i32* %6, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %221
  %223 = getelementptr inbounds %struct.string_data, %struct.string_data* %222, i32 0, i32 5
  %224 = load i32, i32* %223, align 8
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %223, align 8
  %226 = sext i32 %224 to i64
  %227 = getelementptr inbounds [160 x i32], [160 x i32]* %219, i64 0, i64 %226
  store i32 %215, i32* %227, align 4
  %228 = load i32, i32* @string_mark, align 4
  %229 = load i32, i32* %2, align 4
  %230 = add nsw i32 %229, 20
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %234
  %236 = getelementptr inbounds %struct.string_data, %struct.string_data* %235, i32 0, i32 7
  store i32 %228, i32* %236, align 4
  %237 = load i32, i32* @x.131
  %238 = load i32, i32* @y.132
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart245, label %originalBB18alteredBB

originalBBpart245:                                ; preds = %originalBB18
  br label %245

; <label>:245:                                    ; preds = %originalBBpart245, %originalBBpart216, %130
  %246 = load i32, i32* @x.131
  %247 = load i32, i32* @y.132
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %245
  %254 = load i32, i32* @x.131
  %255 = load i32, i32* @y.132
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %262

; <label>:262:                                    ; preds = %originalBBpart249, %129
  %263 = load i32, i32* @x.131
  %264 = load i32, i32* @y.132
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %262
  %271 = load i32, i32* %2, align 4
  %272 = sub nsw i32 %271, 1
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i32
  %277 = icmp eq i32 %276, 0
  %278 = load i32, i32* @x.131
  %279 = load i32, i32* @y.132
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart264, label %originalBB51alteredBB

originalBBpart264:                                ; preds = %originalBB51
  br i1 %277, label %286, label %348

; <label>:286:                                    ; preds = %originalBBpart264
  br label %287

; <label>:287:                                    ; preds = %286
  %288 = load i32, i32* %3, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %289
  %291 = getelementptr inbounds %struct.string_data, %struct.string_data* %290, i32 0, i32 3
  %292 = load i32, i32* %291, align 4
  %293 = icmp slt i32 %292, 20
  br i1 %293, label %294, label %324

; <label>:294:                                    ; preds = %287
  %295 = load i32, i32* @x.131
  %296 = load i32, i32* @y.132
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %294
  %303 = load i32, i32* %2, align 4
  %304 = sub nsw i32 %303, 1
  %305 = load i32, i32* %3, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %306
  %308 = getelementptr inbounds %struct.string_data, %struct.string_data* %307, i32 0, i32 4
  %309 = load i32, i32* %3, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %310
  %312 = getelementptr inbounds %struct.string_data, %struct.string_data* %311, i32 0, i32 3
  %313 = load i32, i32* %312, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [20 x i32], [20 x i32]* %308, i64 0, i64 %314
  store i32 %304, i32* %315, align 4
  %316 = load i32, i32* @x.131
  %317 = load i32, i32* @y.132
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBBpart274, label %originalBB66alteredBB

originalBBpart274:                                ; preds = %originalBB66
  br label %324

; <label>:324:                                    ; preds = %originalBBpart274, %287
  %325 = load i32, i32* %3, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %326
  %328 = getelementptr inbounds %struct.string_data, %struct.string_data* %327, i32 0, i32 3
  %329 = load i32, i32* %328, align 4
  %330 = add nsw i32 %329, 1
  store i32 %330, i32* %328, align 4
  br label %331

; <label>:331:                                    ; preds = %324
  %332 = load i32, i32* @x.131
  %333 = load i32, i32* @y.132
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %331
  %340 = load i32, i32* @x.131
  %341 = load i32, i32* @y.132
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %448

; <label>:348:                                    ; preds = %originalBBpart264
  %349 = load i32, i32* %2, align 4
  %350 = sub nsw i32 %349, 1
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %351
  %353 = load i8, i8* %352, align 1
  %354 = zext i8 %353 to i32
  %355 = load i32, i32* %5, align 4
  %356 = icmp eq i32 %354, %355
  br i1 %356, label %357, label %447

; <label>:357:                                    ; preds = %348
  %358 = load i32, i32* @x.131
  %359 = load i32, i32* @y.132
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %357
  %366 = load i32, i32* %2, align 4
  %367 = sub nsw i32 %366, 1
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %368
  %370 = load i32, i32* %369, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %371
  %373 = getelementptr inbounds %struct.string_data, %struct.string_data* %372, i32 0, i32 7
  %374 = load i32, i32* %373, align 4
  %375 = load i32, i32* @string_mark, align 4
  %376 = icmp ne i32 %374, %375
  %377 = load i32, i32* @x.131
  %378 = load i32, i32* @y.132
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBBpart289, label %originalBB80alteredBB

originalBBpart289:                                ; preds = %originalBB80
  br i1 %376, label %385, label %447

; <label>:385:                                    ; preds = %originalBBpart289
  %386 = load i32, i32* %2, align 4
  %387 = sub nsw i32 %386, 1
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %388
  %390 = load i32, i32* %389, align 4
  store i32 %390, i32* %7, align 4
  %391 = load i32, i32* %2, align 4
  %392 = sub nsw i32 %391, 1
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %393
  %395 = load i32, i32* %394, align 4
  %396 = load i32, i32* %3, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %397
  %399 = getelementptr inbounds %struct.string_data, %struct.string_data* %398, i32 0, i32 6
  %400 = load i32, i32* %3, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %401
  %403 = getelementptr inbounds %struct.string_data, %struct.string_data* %402, i32 0, i32 5
  %404 = load i32, i32* %403, align 8
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %403, align 8
  %406 = sext i32 %404 to i64
  %407 = getelementptr inbounds [160 x i32], [160 x i32]* %399, i64 0, i64 %406
  store i32 %395, i32* %407, align 4
  %408 = load i32, i32* %7, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %409
  %411 = getelementptr inbounds %struct.string_data, %struct.string_data* %410, i32 0, i32 5
  %412 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %413 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %412, i32 0, i32 0
  store i32* %411, i32** %413, align 8
  %414 = load i32, i32* %7, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %415
  %417 = getelementptr inbounds %struct.string_data, %struct.string_data* %416, i32 0, i32 5
  %418 = load i32, i32* %417, align 8
  %419 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %420 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %419, i32 1
  store %struct.change_stack_entry* %420, %struct.change_stack_entry** @change_stack_pointer, align 8
  %421 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %419, i32 0, i32 1
  store i32 %418, i32* %421, align 8
  %422 = load i32, i32* %2, align 4
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = load i32, i32* %7, align 4
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %427
  %429 = getelementptr inbounds %struct.string_data, %struct.string_data* %428, i32 0, i32 6
  %430 = load i32, i32* %7, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %431
  %433 = getelementptr inbounds %struct.string_data, %struct.string_data* %432, i32 0, i32 5
  %434 = load i32, i32* %433, align 8
  %435 = add nsw i32 %434, 1
  store i32 %435, i32* %433, align 8
  %436 = sext i32 %434 to i64
  %437 = getelementptr inbounds [160 x i32], [160 x i32]* %429, i64 0, i64 %436
  store i32 %425, i32* %437, align 4
  %438 = load i32, i32* @string_mark, align 4
  %439 = load i32, i32* %2, align 4
  %440 = sub nsw i32 %439, 1
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %441
  %443 = load i32, i32* %442, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %444
  %446 = getelementptr inbounds %struct.string_data, %struct.string_data* %445, i32 0, i32 7
  store i32 %438, i32* %446, align 4
  br label %447

; <label>:447:                                    ; preds = %385, %originalBBpart289, %348
  br label %448

; <label>:448:                                    ; preds = %447, %originalBBpart278
  %449 = load i32, i32* %2, align 4
  %450 = sub nsw i32 %449, 20
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %451
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i32
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %502

; <label>:456:                                    ; preds = %448
  br label %457

; <label>:457:                                    ; preds = %456
  %458 = load i32, i32* %3, align 4
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %459
  %461 = getelementptr inbounds %struct.string_data, %struct.string_data* %460, i32 0, i32 3
  %462 = load i32, i32* %461, align 4
  %463 = icmp slt i32 %462, 20
  br i1 %463, label %464, label %478

; <label>:464:                                    ; preds = %457
  %465 = load i32, i32* %2, align 4
  %466 = sub nsw i32 %465, 20
  %467 = load i32, i32* %3, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %468
  %470 = getelementptr inbounds %struct.string_data, %struct.string_data* %469, i32 0, i32 4
  %471 = load i32, i32* %3, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %472
  %474 = getelementptr inbounds %struct.string_data, %struct.string_data* %473, i32 0, i32 3
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [20 x i32], [20 x i32]* %470, i64 0, i64 %476
  store i32 %466, i32* %477, align 4
  br label %478

; <label>:478:                                    ; preds = %464, %457
  %479 = load i32, i32* %3, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %480
  %482 = getelementptr inbounds %struct.string_data, %struct.string_data* %481, i32 0, i32 3
  %483 = load i32, i32* %482, align 4
  %484 = add nsw i32 %483, 1
  store i32 %484, i32* %482, align 4
  br label %485

; <label>:485:                                    ; preds = %478
  %486 = load i32, i32* @x.131
  %487 = load i32, i32* @y.132
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %485
  %494 = load i32, i32* @x.131
  %495 = load i32, i32* @y.132
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %602

; <label>:502:                                    ; preds = %448
  %503 = load i32, i32* %2, align 4
  %504 = sub nsw i32 %503, 20
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %505
  %507 = load i8, i8* %506, align 1
  %508 = zext i8 %507 to i32
  %509 = load i32, i32* %5, align 4
  %510 = icmp eq i32 %508, %509
  br i1 %510, label %511, label %601

; <label>:511:                                    ; preds = %502
  %512 = load i32, i32* @x.131
  %513 = load i32, i32* @y.132
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %511
  %520 = load i32, i32* %2, align 4
  %521 = sub nsw i32 %520, 20
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %522
  %524 = load i32, i32* %523, align 4
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %525
  %527 = getelementptr inbounds %struct.string_data, %struct.string_data* %526, i32 0, i32 7
  %528 = load i32, i32* %527, align 4
  %529 = load i32, i32* @string_mark, align 4
  %530 = icmp ne i32 %528, %529
  %531 = load i32, i32* @x.131
  %532 = load i32, i32* @y.132
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBBpart2104, label %originalBB95alteredBB

originalBBpart2104:                               ; preds = %originalBB95
  br i1 %530, label %539, label %601

; <label>:539:                                    ; preds = %originalBBpart2104
  %540 = load i32, i32* %2, align 4
  %541 = sub nsw i32 %540, 20
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %542
  %544 = load i32, i32* %543, align 4
  store i32 %544, i32* %8, align 4
  %545 = load i32, i32* %2, align 4
  %546 = sub nsw i32 %545, 20
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %547
  %549 = load i32, i32* %548, align 4
  %550 = load i32, i32* %3, align 4
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %551
  %553 = getelementptr inbounds %struct.string_data, %struct.string_data* %552, i32 0, i32 6
  %554 = load i32, i32* %3, align 4
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %555
  %557 = getelementptr inbounds %struct.string_data, %struct.string_data* %556, i32 0, i32 5
  %558 = load i32, i32* %557, align 8
  %559 = add nsw i32 %558, 1
  store i32 %559, i32* %557, align 8
  %560 = sext i32 %558 to i64
  %561 = getelementptr inbounds [160 x i32], [160 x i32]* %553, i64 0, i64 %560
  store i32 %549, i32* %561, align 4
  %562 = load i32, i32* %8, align 4
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %563
  %565 = getelementptr inbounds %struct.string_data, %struct.string_data* %564, i32 0, i32 5
  %566 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %567 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %566, i32 0, i32 0
  store i32* %565, i32** %567, align 8
  %568 = load i32, i32* %8, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %569
  %571 = getelementptr inbounds %struct.string_data, %struct.string_data* %570, i32 0, i32 5
  %572 = load i32, i32* %571, align 8
  %573 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %574 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %573, i32 1
  store %struct.change_stack_entry* %574, %struct.change_stack_entry** @change_stack_pointer, align 8
  %575 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %573, i32 0, i32 1
  store i32 %572, i32* %575, align 8
  %576 = load i32, i32* %2, align 4
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %577
  %579 = load i32, i32* %578, align 4
  %580 = load i32, i32* %8, align 4
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %581
  %583 = getelementptr inbounds %struct.string_data, %struct.string_data* %582, i32 0, i32 6
  %584 = load i32, i32* %8, align 4
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %585
  %587 = getelementptr inbounds %struct.string_data, %struct.string_data* %586, i32 0, i32 5
  %588 = load i32, i32* %587, align 8
  %589 = add nsw i32 %588, 1
  store i32 %589, i32* %587, align 8
  %590 = sext i32 %588 to i64
  %591 = getelementptr inbounds [160 x i32], [160 x i32]* %583, i64 0, i64 %590
  store i32 %579, i32* %591, align 4
  %592 = load i32, i32* @string_mark, align 4
  %593 = load i32, i32* %2, align 4
  %594 = sub nsw i32 %593, 20
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %595
  %597 = load i32, i32* %596, align 4
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %598
  %600 = getelementptr inbounds %struct.string_data, %struct.string_data* %599, i32 0, i32 7
  store i32 %592, i32* %600, align 4
  br label %601

; <label>:601:                                    ; preds = %539, %originalBBpart2104, %502
  br label %602

; <label>:602:                                    ; preds = %601, %originalBBpart293
  %603 = load i32, i32* @x.131
  %604 = load i32, i32* @y.132
  %605 = sub i32 %603, 1
  %606 = mul i32 %603, %605
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %604, 10
  %610 = or i1 %608, %609
  br i1 %610, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %602
  %611 = load i32, i32* %2, align 4
  %612 = add nsw i32 %611, 1
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %613
  %615 = load i8, i8* %614, align 1
  %616 = zext i8 %615 to i32
  %617 = icmp eq i32 %616, 0
  %618 = load i32, i32* @x.131
  %619 = load i32, i32* @y.132
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2112, label %originalBB106alteredBB

originalBBpart2112:                               ; preds = %originalBB106
  br i1 %617, label %626, label %656

; <label>:626:                                    ; preds = %originalBBpart2112
  br label %627

; <label>:627:                                    ; preds = %626
  %628 = load i32, i32* %3, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %629
  %631 = getelementptr inbounds %struct.string_data, %struct.string_data* %630, i32 0, i32 3
  %632 = load i32, i32* %631, align 4
  %633 = icmp slt i32 %632, 20
  br i1 %633, label %634, label %648

; <label>:634:                                    ; preds = %627
  %635 = load i32, i32* %2, align 4
  %636 = add nsw i32 %635, 1
  %637 = load i32, i32* %3, align 4
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %638
  %640 = getelementptr inbounds %struct.string_data, %struct.string_data* %639, i32 0, i32 4
  %641 = load i32, i32* %3, align 4
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %642
  %644 = getelementptr inbounds %struct.string_data, %struct.string_data* %643, i32 0, i32 3
  %645 = load i32, i32* %644, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds [20 x i32], [20 x i32]* %640, i64 0, i64 %646
  store i32 %636, i32* %647, align 4
  br label %648

; <label>:648:                                    ; preds = %634, %627
  %649 = load i32, i32* %3, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %650
  %652 = getelementptr inbounds %struct.string_data, %struct.string_data* %651, i32 0, i32 3
  %653 = load i32, i32* %652, align 4
  %654 = add nsw i32 %653, 1
  store i32 %654, i32* %652, align 4
  br label %655

; <label>:655:                                    ; preds = %648
  br label %779

; <label>:656:                                    ; preds = %originalBBpart2112
  %657 = load i32, i32* %2, align 4
  %658 = add nsw i32 %657, 1
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %659
  %661 = load i8, i8* %660, align 1
  %662 = zext i8 %661 to i32
  %663 = load i32, i32* %5, align 4
  %664 = icmp eq i32 %662, %663
  br i1 %664, label %665, label %762

; <label>:665:                                    ; preds = %656
  %666 = load i32, i32* @x.131
  %667 = load i32, i32* @y.132
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %665
  %674 = load i32, i32* %2, align 4
  %675 = add nsw i32 %674, 1
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %676
  %678 = load i32, i32* %677, align 4
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %679
  %681 = getelementptr inbounds %struct.string_data, %struct.string_data* %680, i32 0, i32 7
  %682 = load i32, i32* %681, align 4
  %683 = load i32, i32* @string_mark, align 4
  %684 = icmp ne i32 %682, %683
  %685 = load i32, i32* @x.131
  %686 = load i32, i32* @y.132
  %687 = sub i32 %685, 1
  %688 = mul i32 %685, %687
  %689 = urem i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = icmp slt i32 %686, 10
  %692 = or i1 %690, %691
  br i1 %692, label %originalBBpart2122, label %originalBB114alteredBB

originalBBpart2122:                               ; preds = %originalBB114
  br i1 %684, label %693, label %762

; <label>:693:                                    ; preds = %originalBBpart2122
  %694 = load i32, i32* @x.131
  %695 = load i32, i32* @y.132
  %696 = sub i32 %694, 1
  %697 = mul i32 %694, %696
  %698 = urem i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = icmp slt i32 %695, 10
  %701 = or i1 %699, %700
  br i1 %701, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %originalBB124alteredBB, %693
  %702 = load i32, i32* %2, align 4
  %703 = add nsw i32 %702, 1
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %704
  %706 = load i32, i32* %705, align 4
  store i32 %706, i32* %9, align 4
  %707 = load i32, i32* %2, align 4
  %708 = add nsw i32 %707, 1
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %709
  %711 = load i32, i32* %710, align 4
  %712 = load i32, i32* %3, align 4
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %713
  %715 = getelementptr inbounds %struct.string_data, %struct.string_data* %714, i32 0, i32 6
  %716 = load i32, i32* %3, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %717
  %719 = getelementptr inbounds %struct.string_data, %struct.string_data* %718, i32 0, i32 5
  %720 = load i32, i32* %719, align 8
  %721 = add nsw i32 %720, 1
  store i32 %721, i32* %719, align 8
  %722 = sext i32 %720 to i64
  %723 = getelementptr inbounds [160 x i32], [160 x i32]* %715, i64 0, i64 %722
  store i32 %711, i32* %723, align 4
  %724 = load i32, i32* %9, align 4
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %725
  %727 = getelementptr inbounds %struct.string_data, %struct.string_data* %726, i32 0, i32 5
  %728 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %729 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %728, i32 0, i32 0
  store i32* %727, i32** %729, align 8
  %730 = load i32, i32* %9, align 4
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %731
  %733 = getelementptr inbounds %struct.string_data, %struct.string_data* %732, i32 0, i32 5
  %734 = load i32, i32* %733, align 8
  %735 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %736 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %735, i32 1
  store %struct.change_stack_entry* %736, %struct.change_stack_entry** @change_stack_pointer, align 8
  %737 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %735, i32 0, i32 1
  store i32 %734, i32* %737, align 8
  %738 = load i32, i32* %2, align 4
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %739
  %741 = load i32, i32* %740, align 4
  %742 = load i32, i32* %9, align 4
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %743
  %745 = getelementptr inbounds %struct.string_data, %struct.string_data* %744, i32 0, i32 6
  %746 = load i32, i32* %9, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %747
  %749 = getelementptr inbounds %struct.string_data, %struct.string_data* %748, i32 0, i32 5
  %750 = load i32, i32* %749, align 8
  %751 = add nsw i32 %750, 1
  store i32 %751, i32* %749, align 8
  %752 = sext i32 %750 to i64
  %753 = getelementptr inbounds [160 x i32], [160 x i32]* %745, i64 0, i64 %752
  store i32 %741, i32* %753, align 4
  %754 = load i32, i32* @x.131
  %755 = load i32, i32* @y.132
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBBpart2160, label %originalBB124alteredBB

originalBBpart2160:                               ; preds = %originalBB124
  br label %762

; <label>:762:                                    ; preds = %originalBBpart2160, %originalBBpart2122, %656
  %763 = load i32, i32* @x.131
  %764 = load i32, i32* @y.132
  %765 = sub i32 %763, 1
  %766 = mul i32 %763, %765
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %764, 10
  %770 = or i1 %768, %769
  br i1 %770, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %762
  %771 = load i32, i32* @x.131
  %772 = load i32, i32* @y.132
  %773 = sub i32 %771, 1
  %774 = mul i32 %771, %773
  %775 = urem i32 %774, 2
  %776 = icmp eq i32 %775, 0
  %777 = icmp slt i32 %772, 10
  %778 = or i1 %776, %777
  br i1 %778, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br label %779

; <label>:779:                                    ; preds = %originalBBpart2164, %655
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %69
  %780 = load i32, i32* %3, align 4
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %781
  %783 = getelementptr inbounds %struct.string_data, %struct.string_data* %782, i32 0, i32 3
  %784 = load i32, i32* %783, align 4
  %785 = icmp slt i32 %784, 20
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %106
  %786 = load i32, i32* %3, align 4
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %787
  %789 = getelementptr inbounds %struct.string_data, %struct.string_data* %788, i32 0, i32 3
  %790 = load i32, i32* %789, align 4
  %_ = sub i32 0, %790
  %gen = add i32 %_, 1
  %_2 = shl i32 %790, 1
  %_3 = sub i32 0, %790
  %gen4 = add i32 %_3, 1
  %791 = add nsw i32 %790, 1
  store i32 %791, i32* %789, align 4
  br label %originalBB1

originalBB8alteredBB:                             ; preds = %originalBB8, %139
  %792 = load i32, i32* %2, align 4
  %_9 = sub i32 %792, 20
  %gen10 = mul i32 %_9, 20
  %_11 = sub i32 %792, 20
  %gen12 = mul i32 %_11, 20
  %_13 = sub i32 %792, 20
  %gen14 = mul i32 %_13, 20
  %793 = add nsw i32 %792, 20
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %794
  %796 = load i32, i32* %795, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %797
  %799 = getelementptr inbounds %struct.string_data, %struct.string_data* %798, i32 0, i32 7
  %800 = load i32, i32* %799, align 4
  %801 = load i32, i32* @string_mark, align 4
  %802 = icmp ne i32 %800, %801
  br label %originalBB8

originalBB18alteredBB:                            ; preds = %originalBB18, %167
  %803 = load i32, i32* %2, align 4
  %_19 = sub i32 0, %803
  %gen20 = add i32 %_19, 20
  %_21 = sub i32 %803, 20
  %gen22 = mul i32 %_21, 20
  %_23 = shl i32 %803, 20
  %_24 = shl i32 %803, 20
  %_25 = sub i32 0, %803
  %gen26 = add i32 %_25, 20
  %804 = add nsw i32 %803, 20
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %805
  %807 = load i32, i32* %806, align 4
  store i32 %807, i32* %6, align 4
  %808 = load i32, i32* %2, align 4
  %_27 = shl i32 %808, 20
  %_28 = shl i32 %808, 20
  %809 = add nsw i32 %808, 20
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %810
  %812 = load i32, i32* %811, align 4
  %813 = load i32, i32* %3, align 4
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %814
  %816 = getelementptr inbounds %struct.string_data, %struct.string_data* %815, i32 0, i32 6
  %817 = load i32, i32* %3, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %818
  %820 = getelementptr inbounds %struct.string_data, %struct.string_data* %819, i32 0, i32 5
  %821 = load i32, i32* %820, align 8
  %_29 = sub i32 0, %821
  %gen30 = add i32 %_29, 1
  %_31 = shl i32 %821, 1
  %_32 = sub i32 %821, 1
  %gen33 = mul i32 %_32, 1
  %_34 = shl i32 %821, 1
  %822 = add nsw i32 %821, 1
  store i32 %822, i32* %820, align 8
  %823 = sext i32 %821 to i64
  %824 = getelementptr inbounds [160 x i32], [160 x i32]* %816, i64 0, i64 %823
  store i32 %812, i32* %824, align 4
  %825 = load i32, i32* %6, align 4
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %826
  %828 = getelementptr inbounds %struct.string_data, %struct.string_data* %827, i32 0, i32 5
  %829 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %830 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %829, i32 0, i32 0
  store i32* %828, i32** %830, align 8
  %831 = load i32, i32* %6, align 4
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %832
  %834 = getelementptr inbounds %struct.string_data, %struct.string_data* %833, i32 0, i32 5
  %835 = load i32, i32* %834, align 8
  %836 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %837 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %836, i32 1
  store %struct.change_stack_entry* %837, %struct.change_stack_entry** @change_stack_pointer, align 8
  %838 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %836, i32 0, i32 1
  store i32 %835, i32* %838, align 8
  %839 = load i32, i32* %2, align 4
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %840
  %842 = load i32, i32* %841, align 4
  %843 = load i32, i32* %6, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %844
  %846 = getelementptr inbounds %struct.string_data, %struct.string_data* %845, i32 0, i32 6
  %847 = load i32, i32* %6, align 4
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %848
  %850 = getelementptr inbounds %struct.string_data, %struct.string_data* %849, i32 0, i32 5
  %851 = load i32, i32* %850, align 8
  %_35 = sub i32 %851, 1
  %gen36 = mul i32 %_35, 1
  %_37 = shl i32 %851, 1
  %_38 = sub i32 %851, 1
  %gen39 = mul i32 %_38, 1
  %_40 = sub i32 0, %851
  %gen41 = add i32 %_40, 1
  %852 = add nsw i32 %851, 1
  store i32 %852, i32* %850, align 8
  %853 = sext i32 %851 to i64
  %854 = getelementptr inbounds [160 x i32], [160 x i32]* %846, i64 0, i64 %853
  store i32 %842, i32* %854, align 4
  %855 = load i32, i32* @string_mark, align 4
  %856 = load i32, i32* %2, align 4
  %_42 = sub i32 %856, 20
  %gen43 = mul i32 %_42, 20
  %857 = add nsw i32 %856, 20
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %858
  %860 = load i32, i32* %859, align 4
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %861
  %863 = getelementptr inbounds %struct.string_data, %struct.string_data* %862, i32 0, i32 7
  store i32 %855, i32* %863, align 4
  br label %originalBB18

originalBB47alteredBB:                            ; preds = %originalBB47, %245
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %262
  %864 = load i32, i32* %2, align 4
  %_52 = sub i32 %864, 1
  %gen53 = mul i32 %_52, 1
  %_54 = sub i32 %864, 1
  %gen55 = mul i32 %_54, 1
  %_56 = sub i32 0, %864
  %gen57 = add i32 %_56, 1
  %_58 = shl i32 %864, 1
  %_59 = shl i32 %864, 1
  %_60 = shl i32 %864, 1
  %_61 = sub i32 0, %864
  %gen62 = add i32 %_61, 1
  %865 = sub nsw i32 %864, 1
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %866
  %868 = load i8, i8* %867, align 1
  %869 = zext i8 %868 to i32
  %870 = icmp eq i32 %869, 0
  br label %originalBB51

originalBB66alteredBB:                            ; preds = %originalBB66, %294
  %871 = load i32, i32* %2, align 4
  %_67 = shl i32 %871, 1
  %_68 = sub i32 %871, 1
  %gen69 = mul i32 %_68, 1
  %_70 = shl i32 %871, 1
  %_71 = sub i32 0, %871
  %gen72 = add i32 %_71, 1
  %872 = sub nsw i32 %871, 1
  %873 = load i32, i32* %3, align 4
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %874
  %876 = getelementptr inbounds %struct.string_data, %struct.string_data* %875, i32 0, i32 4
  %877 = load i32, i32* %3, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %878
  %880 = getelementptr inbounds %struct.string_data, %struct.string_data* %879, i32 0, i32 3
  %881 = load i32, i32* %880, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds [20 x i32], [20 x i32]* %876, i64 0, i64 %882
  store i32 %872, i32* %883, align 4
  br label %originalBB66

originalBB76alteredBB:                            ; preds = %originalBB76, %331
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %357
  %884 = load i32, i32* %2, align 4
  %_81 = shl i32 %884, 1
  %_82 = shl i32 %884, 1
  %_83 = shl i32 %884, 1
  %_84 = sub i32 0, %884
  %gen85 = add i32 %_84, 1
  %_86 = sub i32 0, %884
  %gen87 = add i32 %_86, 1
  %885 = sub nsw i32 %884, 1
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %886
  %888 = load i32, i32* %887, align 4
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %889
  %891 = getelementptr inbounds %struct.string_data, %struct.string_data* %890, i32 0, i32 7
  %892 = load i32, i32* %891, align 4
  %893 = load i32, i32* @string_mark, align 4
  %894 = icmp ne i32 %892, %893
  br label %originalBB80

originalBB91alteredBB:                            ; preds = %originalBB91, %485
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %511
  %895 = load i32, i32* %2, align 4
  %_96 = sub i32 0, %895
  %gen97 = add i32 %_96, 20
  %_98 = sub i32 0, %895
  %gen99 = add i32 %_98, 20
  %_100 = shl i32 %895, 20
  %_101 = sub i32 0, %895
  %gen102 = add i32 %_101, 20
  %896 = sub nsw i32 %895, 20
  %897 = sext i32 %896 to i64
  %898 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %897
  %899 = load i32, i32* %898, align 4
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %900
  %902 = getelementptr inbounds %struct.string_data, %struct.string_data* %901, i32 0, i32 7
  %903 = load i32, i32* %902, align 4
  %904 = load i32, i32* @string_mark, align 4
  %905 = icmp ne i32 %903, %904
  br label %originalBB95

originalBB106alteredBB:                           ; preds = %originalBB106, %602
  %906 = load i32, i32* %2, align 4
  %_107 = sub i32 0, %906
  %gen108 = add i32 %_107, 1
  %_109 = sub i32 %906, 1
  %gen110 = mul i32 %_109, 1
  %907 = add nsw i32 %906, 1
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %908
  %910 = load i8, i8* %909, align 1
  %911 = zext i8 %910 to i32
  %912 = icmp eq i32 %911, 0
  br label %originalBB106

originalBB114alteredBB:                           ; preds = %originalBB114, %665
  %913 = load i32, i32* %2, align 4
  %_115 = sub i32 0, %913
  %gen116 = add i32 %_115, 1
  %_117 = sub i32 %913, 1
  %gen118 = mul i32 %_117, 1
  %_119 = sub i32 0, %913
  %gen120 = add i32 %_119, 1
  %914 = add nsw i32 %913, 1
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %915
  %917 = load i32, i32* %916, align 4
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %918
  %920 = getelementptr inbounds %struct.string_data, %struct.string_data* %919, i32 0, i32 7
  %921 = load i32, i32* %920, align 4
  %922 = load i32, i32* @string_mark, align 4
  %923 = icmp ne i32 %921, %922
  br label %originalBB114

originalBB124alteredBB:                           ; preds = %originalBB124, %693
  %924 = load i32, i32* %2, align 4
  %_125 = shl i32 %924, 1
  %_126 = sub i32 %924, 1
  %gen127 = mul i32 %_126, 1
  %_128 = sub i32 0, %924
  %gen129 = add i32 %_128, 1
  %_130 = sub i32 %924, 1
  %gen131 = mul i32 %_130, 1
  %_132 = sub i32 0, %924
  %gen133 = add i32 %_132, 1
  %925 = add nsw i32 %924, 1
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %926
  %928 = load i32, i32* %927, align 4
  store i32 %928, i32* %9, align 4
  %929 = load i32, i32* %2, align 4
  %_134 = sub i32 0, %929
  %gen135 = add i32 %_134, 1
  %_136 = sub i32 0, %929
  %gen137 = add i32 %_136, 1
  %_138 = sub i32 0, %929
  %gen139 = add i32 %_138, 1
  %_140 = sub i32 0, %929
  %gen141 = add i32 %_140, 1
  %_142 = sub i32 0, %929
  %gen143 = add i32 %_142, 1
  %_144 = shl i32 %929, 1
  %_145 = sub i32 %929, 1
  %gen146 = mul i32 %_145, 1
  %930 = add nsw i32 %929, 1
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %931
  %933 = load i32, i32* %932, align 4
  %934 = load i32, i32* %3, align 4
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %935
  %937 = getelementptr inbounds %struct.string_data, %struct.string_data* %936, i32 0, i32 6
  %938 = load i32, i32* %3, align 4
  %939 = sext i32 %938 to i64
  %940 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %939
  %941 = getelementptr inbounds %struct.string_data, %struct.string_data* %940, i32 0, i32 5
  %942 = load i32, i32* %941, align 8
  %943 = add nsw i32 %942, 1
  store i32 %943, i32* %941, align 8
  %944 = sext i32 %942 to i64
  %945 = getelementptr inbounds [160 x i32], [160 x i32]* %937, i64 0, i64 %944
  store i32 %933, i32* %945, align 4
  %946 = load i32, i32* %9, align 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %947
  %949 = getelementptr inbounds %struct.string_data, %struct.string_data* %948, i32 0, i32 5
  %950 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %951 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %950, i32 0, i32 0
  store i32* %949, i32** %951, align 8
  %952 = load i32, i32* %9, align 4
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %953
  %955 = getelementptr inbounds %struct.string_data, %struct.string_data* %954, i32 0, i32 5
  %956 = load i32, i32* %955, align 8
  %957 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %958 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %957, i32 1
  store %struct.change_stack_entry* %958, %struct.change_stack_entry** @change_stack_pointer, align 8
  %959 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %957, i32 0, i32 1
  store i32 %956, i32* %959, align 8
  %960 = load i32, i32* %2, align 4
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %961
  %963 = load i32, i32* %962, align 4
  %964 = load i32, i32* %9, align 4
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %965
  %967 = getelementptr inbounds %struct.string_data, %struct.string_data* %966, i32 0, i32 6
  %968 = load i32, i32* %9, align 4
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %969
  %971 = getelementptr inbounds %struct.string_data, %struct.string_data* %970, i32 0, i32 5
  %972 = load i32, i32* %971, align 8
  %_147 = shl i32 %972, 1
  %_148 = shl i32 %972, 1
  %_149 = sub i32 0, %972
  %gen150 = add i32 %_149, 1
  %_151 = sub i32 %972, 1
  %gen152 = mul i32 %_151, 1
  %_153 = sub i32 0, %972
  %gen154 = add i32 %_153, 1
  %_155 = sub i32 %972, 1
  %gen156 = mul i32 %_155, 1
  %_157 = sub i32 0, %972
  %gen158 = add i32 %_157, 1
  %973 = add nsw i32 %972, 1
  store i32 %973, i32* %971, align 8
  %974 = sext i32 %972 to i64
  %975 = getelementptr inbounds [160 x i32], [160 x i32]* %967, i64 0, i64 %974
  store i32 %963, i32* %975, align 4
  br label %originalBB124

originalBB162alteredBB:                           ; preds = %originalBB162, %762
  br label %originalBB162
}

; Function Attrs: noinline nounwind uwtable
define internal void @extend_neighbor_string(i32, i32) #0 {
  %3 = load i32, i32* @x.133
  %4 = load i32, i32* @y.134
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  store i32 0, i32* %14, align 4
  %22 = load i32, i32* %11, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %15, align 4
  %27 = load i32, i32* %15, align 4
  %28 = sub nsw i32 3, %27
  store i32 %28, i32* %16, align 4
  %29 = load i32, i32* %12, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %30
  %32 = getelementptr inbounds %struct.string_data, %struct.string_data* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %17, align 4
  %34 = load i32, i32* %17, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %11, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %39
  store i32 %37, i32* %40, align 4
  %41 = load i32, i32* %17, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %42
  %44 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %45 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %44, i32 0, i32 0
  store i32* %43, i32** %45, align 8
  %46 = load i32, i32* %17, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %51 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %50, i32 1
  store %struct.change_stack_entry* %51, %struct.change_stack_entry** @change_stack_pointer, align 8
  %52 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %50, i32 0, i32 1
  store i32 %49, i32* %52, align 8
  %53 = load i32, i32* %11, align 4
  %54 = load i32, i32* %17, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %55
  store i32 %53, i32* %56, align 4
  %57 = load i32, i32* %11, align 4
  %58 = load i32, i32* %17, align 4
  %59 = icmp slt i32 %57, %58
  %60 = load i32, i32* @x.133
  %61 = load i32, i32* @y.134
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %59, label %68, label %88

; <label>:68:                                     ; preds = %originalBBpart2
  %69 = load i32, i32* %12, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %70
  %72 = getelementptr inbounds %struct.string_data, %struct.string_data* %71, i32 0, i32 2
  %73 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %74 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %73, i32 0, i32 0
  store i32* %72, i32** %74, align 8
  %75 = load i32, i32* %12, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %76
  %78 = getelementptr inbounds %struct.string_data, %struct.string_data* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %81 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %80, i32 1
  store %struct.change_stack_entry* %81, %struct.change_stack_entry** @change_stack_pointer, align 8
  %82 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %80, i32 0, i32 1
  store i32 %79, i32* %82, align 8
  %83 = load i32, i32* %11, align 4
  %84 = load i32, i32* %12, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %85
  %87 = getelementptr inbounds %struct.string_data, %struct.string_data* %86, i32 0, i32 2
  store i32 %83, i32* %87, align 8
  br label %88

; <label>:88:                                     ; preds = %68, %originalBBpart2
  %89 = load i32, i32* %12, align 4
  %90 = load i32, i32* %11, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %91
  store i32 %89, i32* %92, align 4
  %93 = load i32, i32* %12, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %94
  %96 = getelementptr inbounds %struct.string_data, %struct.string_data* %95, i32 0, i32 1
  %97 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %98 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %97, i32 0, i32 0
  store i32* %96, i32** %98, align 8
  %99 = load i32, i32* %12, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %100
  %102 = getelementptr inbounds %struct.string_data, %struct.string_data* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %105 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %104, i32 1
  store %struct.change_stack_entry* %105, %struct.change_stack_entry** @change_stack_pointer, align 8
  %106 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %104, i32 0, i32 1
  store i32 %103, i32* %106, align 8
  %107 = load i32, i32* %12, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %108
  %110 = getelementptr inbounds %struct.string_data, %struct.string_data* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = load i32, i32* %12, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %114
  %116 = getelementptr inbounds %struct.string_data, %struct.string_data* %115, i32 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 20
  br i1 %118, label %119, label %121

; <label>:119:                                    ; preds = %88
  %120 = load i32, i32* %12, align 4
  call void @update_liberties(i32 %120)
  store i32 1, i32* %14, align 4
  br label %124

; <label>:121:                                    ; preds = %88
  %122 = load i32, i32* %12, align 4
  %123 = load i32, i32* %11, align 4
  call void @remove_liberty(i32 %122, i32 %123)
  br label %124

; <label>:124:                                    ; preds = %121, %119
  %125 = load i32, i32* @x.133
  %126 = load i32, i32* @y.134
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %124
  %133 = load i32, i32* @string_mark, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* @string_mark, align 4
  store i32 0, i32* %13, align 4
  %135 = load i32, i32* @x.133
  %136 = load i32, i32* @y.134
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart210, label %originalBB3alteredBB

originalBBpart210:                                ; preds = %originalBB3
  br label %143

; <label>:143:                                    ; preds = %180, %originalBBpart210
  %144 = load i32, i32* @x.133
  %145 = load i32, i32* @y.134
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %originalBB12alteredBB, %143
  %152 = load i32, i32* %13, align 4
  %153 = load i32, i32* %12, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %154
  %156 = getelementptr inbounds %struct.string_data, %struct.string_data* %155, i32 0, i32 5
  %157 = load i32, i32* %156, align 8
  %158 = icmp slt i32 %152, %157
  %159 = load i32, i32* @x.133
  %160 = load i32, i32* @y.134
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br i1 %158, label %167, label %183

; <label>:167:                                    ; preds = %originalBBpart214
  %168 = load i32, i32* @string_mark, align 4
  %169 = load i32, i32* %12, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %170
  %172 = getelementptr inbounds %struct.string_data, %struct.string_data* %171, i32 0, i32 6
  %173 = load i32, i32* %13, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [160 x i32], [160 x i32]* %172, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %177
  %179 = getelementptr inbounds %struct.string_data, %struct.string_data* %178, i32 0, i32 7
  store i32 %168, i32* %179, align 4
  br label %180

; <label>:180:                                    ; preds = %167
  %181 = load i32, i32* %13, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %13, align 4
  br label %143

; <label>:183:                                    ; preds = %originalBBpart214
  %184 = load i32, i32* %11, align 4
  %185 = add nsw i32 %184, 20
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %298

; <label>:191:                                    ; preds = %183
  %192 = load i32, i32* %14, align 4
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %297, label %194

; <label>:194:                                    ; preds = %191
  %195 = load i32, i32* %11, align 4
  %196 = add nsw i32 %195, 20
  %197 = add nsw i32 %196, 20
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = load i32, i32* %15, align 4
  %203 = icmp eq i32 %201, %202
  br i1 %203, label %204, label %213

; <label>:204:                                    ; preds = %194
  %205 = load i32, i32* %11, align 4
  %206 = add nsw i32 %205, 20
  %207 = add nsw i32 %206, 20
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = load i32, i32* %12, align 4
  %212 = icmp eq i32 %210, %211
  br i1 %212, label %297, label %213

; <label>:213:                                    ; preds = %204, %194
  %214 = load i32, i32* %11, align 4
  %215 = add nsw i32 %214, 20
  %216 = sub nsw i32 %215, 1
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = load i32, i32* %15, align 4
  %222 = icmp eq i32 %220, %221
  br i1 %222, label %223, label %232

; <label>:223:                                    ; preds = %213
  %224 = load i32, i32* %11, align 4
  %225 = add nsw i32 %224, 20
  %226 = sub nsw i32 %225, 1
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = load i32, i32* %12, align 4
  %231 = icmp eq i32 %229, %230
  br i1 %231, label %297, label %232

; <label>:232:                                    ; preds = %223, %213
  %233 = load i32, i32* %11, align 4
  %234 = add nsw i32 %233, 20
  %235 = add nsw i32 %234, 1
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = load i32, i32* %15, align 4
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %242, label %251

; <label>:242:                                    ; preds = %232
  %243 = load i32, i32* %11, align 4
  %244 = add nsw i32 %243, 20
  %245 = add nsw i32 %244, 1
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = load i32, i32* %12, align 4
  %250 = icmp eq i32 %248, %249
  br i1 %250, label %297, label %251

; <label>:251:                                    ; preds = %242, %232
  %252 = load i32, i32* @x.133
  %253 = load i32, i32* @y.134
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %251
  %260 = load i32, i32* @x.133
  %261 = load i32, i32* @y.134
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %268

; <label>:268:                                    ; preds = %originalBBpart218
  %269 = load i32, i32* %12, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %270
  %272 = getelementptr inbounds %struct.string_data, %struct.string_data* %271, i32 0, i32 3
  %273 = load i32, i32* %272, align 4
  %274 = icmp slt i32 %273, 20
  br i1 %274, label %275, label %289

; <label>:275:                                    ; preds = %268
  %276 = load i32, i32* %11, align 4
  %277 = add nsw i32 %276, 20
  %278 = load i32, i32* %12, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %279
  %281 = getelementptr inbounds %struct.string_data, %struct.string_data* %280, i32 0, i32 4
  %282 = load i32, i32* %12, align 4
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %283
  %285 = getelementptr inbounds %struct.string_data, %struct.string_data* %284, i32 0, i32 3
  %286 = load i32, i32* %285, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [20 x i32], [20 x i32]* %281, i64 0, i64 %287
  store i32 %277, i32* %288, align 4
  br label %289

; <label>:289:                                    ; preds = %275, %268
  %290 = load i32, i32* %12, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %291
  %293 = getelementptr inbounds %struct.string_data, %struct.string_data* %292, i32 0, i32 3
  %294 = load i32, i32* %293, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %293, align 4
  br label %296

; <label>:296:                                    ; preds = %289
  br label %297

; <label>:297:                                    ; preds = %296, %242, %223, %204, %191
  br label %412

; <label>:298:                                    ; preds = %183
  %299 = load i32, i32* %11, align 4
  %300 = add nsw i32 %299, 20
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i32
  %305 = load i32, i32* %16, align 4
  %306 = icmp eq i32 %304, %305
  br i1 %306, label %307, label %411

; <label>:307:                                    ; preds = %298
  %308 = load i32, i32* @x.133
  %309 = load i32, i32* @y.134
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %307
  %316 = load i32, i32* %11, align 4
  %317 = add nsw i32 %316, 20
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %321
  %323 = getelementptr inbounds %struct.string_data, %struct.string_data* %322, i32 0, i32 7
  %324 = load i32, i32* %323, align 4
  %325 = load i32, i32* @string_mark, align 4
  %326 = icmp ne i32 %324, %325
  %327 = load i32, i32* @x.133
  %328 = load i32, i32* @y.134
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart227, label %originalBB20alteredBB

originalBBpart227:                                ; preds = %originalBB20
  br i1 %326, label %335, label %411

; <label>:335:                                    ; preds = %originalBBpart227
  %336 = load i32, i32* %11, align 4
  %337 = add nsw i32 %336, 20
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %338
  %340 = load i32, i32* %339, align 4
  store i32 %340, i32* %18, align 4
  %341 = load i32, i32* %12, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %342
  %344 = getelementptr inbounds %struct.string_data, %struct.string_data* %343, i32 0, i32 5
  %345 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %346 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %345, i32 0, i32 0
  store i32* %344, i32** %346, align 8
  %347 = load i32, i32* %12, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %348
  %350 = getelementptr inbounds %struct.string_data, %struct.string_data* %349, i32 0, i32 5
  %351 = load i32, i32* %350, align 8
  %352 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %353 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %352, i32 1
  store %struct.change_stack_entry* %353, %struct.change_stack_entry** @change_stack_pointer, align 8
  %354 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %352, i32 0, i32 1
  store i32 %351, i32* %354, align 8
  %355 = load i32, i32* %11, align 4
  %356 = add nsw i32 %355, 20
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = load i32, i32* %12, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %361
  %363 = getelementptr inbounds %struct.string_data, %struct.string_data* %362, i32 0, i32 6
  %364 = load i32, i32* %12, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %365
  %367 = getelementptr inbounds %struct.string_data, %struct.string_data* %366, i32 0, i32 5
  %368 = load i32, i32* %367, align 8
  %369 = add nsw i32 %368, 1
  store i32 %369, i32* %367, align 8
  %370 = sext i32 %368 to i64
  %371 = getelementptr inbounds [160 x i32], [160 x i32]* %363, i64 0, i64 %370
  store i32 %359, i32* %371, align 4
  %372 = load i32, i32* %18, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %373
  %375 = getelementptr inbounds %struct.string_data, %struct.string_data* %374, i32 0, i32 5
  %376 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %377 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %376, i32 0, i32 0
  store i32* %375, i32** %377, align 8
  %378 = load i32, i32* %18, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %379
  %381 = getelementptr inbounds %struct.string_data, %struct.string_data* %380, i32 0, i32 5
  %382 = load i32, i32* %381, align 8
  %383 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %384 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %383, i32 1
  store %struct.change_stack_entry* %384, %struct.change_stack_entry** @change_stack_pointer, align 8
  %385 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %383, i32 0, i32 1
  store i32 %382, i32* %385, align 8
  %386 = load i32, i32* %11, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = load i32, i32* %18, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %391
  %393 = getelementptr inbounds %struct.string_data, %struct.string_data* %392, i32 0, i32 6
  %394 = load i32, i32* %18, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %395
  %397 = getelementptr inbounds %struct.string_data, %struct.string_data* %396, i32 0, i32 5
  %398 = load i32, i32* %397, align 8
  %399 = add nsw i32 %398, 1
  store i32 %399, i32* %397, align 8
  %400 = sext i32 %398 to i64
  %401 = getelementptr inbounds [160 x i32], [160 x i32]* %393, i64 0, i64 %400
  store i32 %389, i32* %401, align 4
  %402 = load i32, i32* @string_mark, align 4
  %403 = load i32, i32* %11, align 4
  %404 = add nsw i32 %403, 20
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %408
  %410 = getelementptr inbounds %struct.string_data, %struct.string_data* %409, i32 0, i32 7
  store i32 %402, i32* %410, align 4
  br label %411

; <label>:411:                                    ; preds = %335, %originalBBpart227, %298
  br label %412

; <label>:412:                                    ; preds = %411, %297
  %413 = load i32, i32* @x.133
  %414 = load i32, i32* @y.134
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %412
  %421 = load i32, i32* %11, align 4
  %422 = sub nsw i32 %421, 1
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %423
  %425 = load i8, i8* %424, align 1
  %426 = zext i8 %425 to i32
  %427 = icmp eq i32 %426, 0
  %428 = load i32, i32* @x.133
  %429 = load i32, i32* @y.134
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBBpart233, label %originalBB29alteredBB

originalBBpart233:                                ; preds = %originalBB29
  br i1 %427, label %436, label %591

; <label>:436:                                    ; preds = %originalBBpart233
  %437 = load i32, i32* %14, align 4
  %438 = icmp ne i32 %437, 0
  br i1 %438, label %590, label %439

; <label>:439:                                    ; preds = %436
  %440 = load i32, i32* %11, align 4
  %441 = sub nsw i32 %440, 1
  %442 = sub nsw i32 %441, 1
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %443
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i32
  %447 = load i32, i32* %15, align 4
  %448 = icmp eq i32 %446, %447
  br i1 %448, label %449, label %458

; <label>:449:                                    ; preds = %439
  %450 = load i32, i32* %11, align 4
  %451 = sub nsw i32 %450, 1
  %452 = sub nsw i32 %451, 1
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = load i32, i32* %12, align 4
  %457 = icmp eq i32 %455, %456
  br i1 %457, label %590, label %458

; <label>:458:                                    ; preds = %449, %439
  %459 = load i32, i32* @x.133
  %460 = load i32, i32* @y.134
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %458
  %467 = load i32, i32* %11, align 4
  %468 = sub nsw i32 %467, 1
  %469 = sub nsw i32 %468, 20
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %470
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i32
  %474 = load i32, i32* %15, align 4
  %475 = icmp eq i32 %473, %474
  %476 = load i32, i32* @x.133
  %477 = load i32, i32* @y.134
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart244, label %originalBB35alteredBB

originalBBpart244:                                ; preds = %originalBB35
  br i1 %475, label %484, label %493

; <label>:484:                                    ; preds = %originalBBpart244
  %485 = load i32, i32* %11, align 4
  %486 = sub nsw i32 %485, 1
  %487 = sub nsw i32 %486, 20
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = load i32, i32* %12, align 4
  %492 = icmp eq i32 %490, %491
  br i1 %492, label %590, label %493

; <label>:493:                                    ; preds = %484, %originalBBpart244
  %494 = load i32, i32* %11, align 4
  %495 = sub nsw i32 %494, 1
  %496 = add nsw i32 %495, 20
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %497
  %499 = load i8, i8* %498, align 1
  %500 = zext i8 %499 to i32
  %501 = load i32, i32* %15, align 4
  %502 = icmp eq i32 %500, %501
  br i1 %502, label %503, label %512

; <label>:503:                                    ; preds = %493
  %504 = load i32, i32* %11, align 4
  %505 = sub nsw i32 %504, 1
  %506 = add nsw i32 %505, 20
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %507
  %509 = load i32, i32* %508, align 4
  %510 = load i32, i32* %12, align 4
  %511 = icmp eq i32 %509, %510
  br i1 %511, label %590, label %512

; <label>:512:                                    ; preds = %503, %493
  %513 = load i32, i32* @x.133
  %514 = load i32, i32* @y.134
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %512
  %521 = load i32, i32* @x.133
  %522 = load i32, i32* @y.134
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %529

; <label>:529:                                    ; preds = %originalBBpart248
  %530 = load i32, i32* @x.133
  %531 = load i32, i32* @y.134
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %529
  %538 = load i32, i32* %12, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %539
  %541 = getelementptr inbounds %struct.string_data, %struct.string_data* %540, i32 0, i32 3
  %542 = load i32, i32* %541, align 4
  %543 = icmp slt i32 %542, 20
  %544 = load i32, i32* @x.133
  %545 = load i32, i32* @y.134
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %543, label %552, label %566

; <label>:552:                                    ; preds = %originalBBpart252
  %553 = load i32, i32* %11, align 4
  %554 = sub nsw i32 %553, 1
  %555 = load i32, i32* %12, align 4
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %556
  %558 = getelementptr inbounds %struct.string_data, %struct.string_data* %557, i32 0, i32 4
  %559 = load i32, i32* %12, align 4
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %560
  %562 = getelementptr inbounds %struct.string_data, %struct.string_data* %561, i32 0, i32 3
  %563 = load i32, i32* %562, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds [20 x i32], [20 x i32]* %558, i64 0, i64 %564
  store i32 %554, i32* %565, align 4
  br label %566

; <label>:566:                                    ; preds = %552, %originalBBpart252
  %567 = load i32, i32* @x.133
  %568 = load i32, i32* @y.134
  %569 = sub i32 %567, 1
  %570 = mul i32 %567, %569
  %571 = urem i32 %570, 2
  %572 = icmp eq i32 %571, 0
  %573 = icmp slt i32 %568, 10
  %574 = or i1 %572, %573
  br i1 %574, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %566
  %575 = load i32, i32* %12, align 4
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %576
  %578 = getelementptr inbounds %struct.string_data, %struct.string_data* %577, i32 0, i32 3
  %579 = load i32, i32* %578, align 4
  %580 = add nsw i32 %579, 1
  store i32 %580, i32* %578, align 4
  %581 = load i32, i32* @x.133
  %582 = load i32, i32* @y.134
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBBpart264, label %originalBB54alteredBB

originalBBpart264:                                ; preds = %originalBB54
  br label %589

; <label>:589:                                    ; preds = %originalBBpart264
  br label %590

; <label>:590:                                    ; preds = %589, %503, %484, %449, %436
  br label %705

; <label>:591:                                    ; preds = %originalBBpart233
  %592 = load i32, i32* %11, align 4
  %593 = sub nsw i32 %592, 1
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %594
  %596 = load i8, i8* %595, align 1
  %597 = zext i8 %596 to i32
  %598 = load i32, i32* %16, align 4
  %599 = icmp eq i32 %597, %598
  br i1 %599, label %600, label %688

; <label>:600:                                    ; preds = %591
  %601 = load i32, i32* %11, align 4
  %602 = sub nsw i32 %601, 1
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %603
  %605 = load i32, i32* %604, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %606
  %608 = getelementptr inbounds %struct.string_data, %struct.string_data* %607, i32 0, i32 7
  %609 = load i32, i32* %608, align 4
  %610 = load i32, i32* @string_mark, align 4
  %611 = icmp ne i32 %609, %610
  br i1 %611, label %612, label %688

; <label>:612:                                    ; preds = %600
  %613 = load i32, i32* %11, align 4
  %614 = sub nsw i32 %613, 1
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %615
  %617 = load i32, i32* %616, align 4
  store i32 %617, i32* %19, align 4
  %618 = load i32, i32* %12, align 4
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %619
  %621 = getelementptr inbounds %struct.string_data, %struct.string_data* %620, i32 0, i32 5
  %622 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %623 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %622, i32 0, i32 0
  store i32* %621, i32** %623, align 8
  %624 = load i32, i32* %12, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %625
  %627 = getelementptr inbounds %struct.string_data, %struct.string_data* %626, i32 0, i32 5
  %628 = load i32, i32* %627, align 8
  %629 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %630 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %629, i32 1
  store %struct.change_stack_entry* %630, %struct.change_stack_entry** @change_stack_pointer, align 8
  %631 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %629, i32 0, i32 1
  store i32 %628, i32* %631, align 8
  %632 = load i32, i32* %11, align 4
  %633 = sub nsw i32 %632, 1
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %634
  %636 = load i32, i32* %635, align 4
  %637 = load i32, i32* %12, align 4
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %638
  %640 = getelementptr inbounds %struct.string_data, %struct.string_data* %639, i32 0, i32 6
  %641 = load i32, i32* %12, align 4
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %642
  %644 = getelementptr inbounds %struct.string_data, %struct.string_data* %643, i32 0, i32 5
  %645 = load i32, i32* %644, align 8
  %646 = add nsw i32 %645, 1
  store i32 %646, i32* %644, align 8
  %647 = sext i32 %645 to i64
  %648 = getelementptr inbounds [160 x i32], [160 x i32]* %640, i64 0, i64 %647
  store i32 %636, i32* %648, align 4
  %649 = load i32, i32* %19, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %650
  %652 = getelementptr inbounds %struct.string_data, %struct.string_data* %651, i32 0, i32 5
  %653 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %654 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %653, i32 0, i32 0
  store i32* %652, i32** %654, align 8
  %655 = load i32, i32* %19, align 4
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %656
  %658 = getelementptr inbounds %struct.string_data, %struct.string_data* %657, i32 0, i32 5
  %659 = load i32, i32* %658, align 8
  %660 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %661 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %660, i32 1
  store %struct.change_stack_entry* %661, %struct.change_stack_entry** @change_stack_pointer, align 8
  %662 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %660, i32 0, i32 1
  store i32 %659, i32* %662, align 8
  %663 = load i32, i32* %11, align 4
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %664
  %666 = load i32, i32* %665, align 4
  %667 = load i32, i32* %19, align 4
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %668
  %670 = getelementptr inbounds %struct.string_data, %struct.string_data* %669, i32 0, i32 6
  %671 = load i32, i32* %19, align 4
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %672
  %674 = getelementptr inbounds %struct.string_data, %struct.string_data* %673, i32 0, i32 5
  %675 = load i32, i32* %674, align 8
  %676 = add nsw i32 %675, 1
  store i32 %676, i32* %674, align 8
  %677 = sext i32 %675 to i64
  %678 = getelementptr inbounds [160 x i32], [160 x i32]* %670, i64 0, i64 %677
  store i32 %666, i32* %678, align 4
  %679 = load i32, i32* @string_mark, align 4
  %680 = load i32, i32* %11, align 4
  %681 = sub nsw i32 %680, 1
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %682
  %684 = load i32, i32* %683, align 4
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %685
  %687 = getelementptr inbounds %struct.string_data, %struct.string_data* %686, i32 0, i32 7
  store i32 %679, i32* %687, align 4
  br label %688

; <label>:688:                                    ; preds = %612, %600, %591
  %689 = load i32, i32* @x.133
  %690 = load i32, i32* @y.134
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %688
  %697 = load i32, i32* @x.133
  %698 = load i32, i32* @y.134
  %699 = sub i32 %697, 1
  %700 = mul i32 %697, %699
  %701 = urem i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = icmp slt i32 %698, 10
  %704 = or i1 %702, %703
  br i1 %704, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %705

; <label>:705:                                    ; preds = %originalBBpart268, %590
  %706 = load i32, i32* @x.133
  %707 = load i32, i32* @y.134
  %708 = sub i32 %706, 1
  %709 = mul i32 %706, %708
  %710 = urem i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = icmp slt i32 %707, 10
  %713 = or i1 %711, %712
  br i1 %713, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %705
  %714 = load i32, i32* %11, align 4
  %715 = sub nsw i32 %714, 20
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %716
  %718 = load i8, i8* %717, align 1
  %719 = zext i8 %718 to i32
  %720 = icmp eq i32 %719, 0
  %721 = load i32, i32* @x.133
  %722 = load i32, i32* @y.134
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBBpart276, label %originalBB70alteredBB

originalBBpart276:                                ; preds = %originalBB70
  br i1 %720, label %729, label %868

; <label>:729:                                    ; preds = %originalBBpart276
  %730 = load i32, i32* %14, align 4
  %731 = icmp ne i32 %730, 0
  br i1 %731, label %851, label %732

; <label>:732:                                    ; preds = %729
  %733 = load i32, i32* @x.133
  %734 = load i32, i32* @y.134
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %732
  %741 = load i32, i32* %11, align 4
  %742 = sub nsw i32 %741, 20
  %743 = sub nsw i32 %742, 20
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %744
  %746 = load i8, i8* %745, align 1
  %747 = zext i8 %746 to i32
  %748 = load i32, i32* %15, align 4
  %749 = icmp eq i32 %747, %748
  %750 = load i32, i32* @x.133
  %751 = load i32, i32* @y.134
  %752 = sub i32 %750, 1
  %753 = mul i32 %750, %752
  %754 = urem i32 %753, 2
  %755 = icmp eq i32 %754, 0
  %756 = icmp slt i32 %751, 10
  %757 = or i1 %755, %756
  br i1 %757, label %originalBBpart293, label %originalBB78alteredBB

originalBBpart293:                                ; preds = %originalBB78
  br i1 %749, label %758, label %767

; <label>:758:                                    ; preds = %originalBBpart293
  %759 = load i32, i32* %11, align 4
  %760 = sub nsw i32 %759, 20
  %761 = sub nsw i32 %760, 20
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %762
  %764 = load i32, i32* %763, align 4
  %765 = load i32, i32* %12, align 4
  %766 = icmp eq i32 %764, %765
  br i1 %766, label %851, label %767

; <label>:767:                                    ; preds = %758, %originalBBpart293
  %768 = load i32, i32* %11, align 4
  %769 = sub nsw i32 %768, 20
  %770 = add nsw i32 %769, 1
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %771
  %773 = load i8, i8* %772, align 1
  %774 = zext i8 %773 to i32
  %775 = load i32, i32* %15, align 4
  %776 = icmp eq i32 %774, %775
  br i1 %776, label %777, label %786

; <label>:777:                                    ; preds = %767
  %778 = load i32, i32* %11, align 4
  %779 = sub nsw i32 %778, 20
  %780 = add nsw i32 %779, 1
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %781
  %783 = load i32, i32* %782, align 4
  %784 = load i32, i32* %12, align 4
  %785 = icmp eq i32 %783, %784
  br i1 %785, label %851, label %786

; <label>:786:                                    ; preds = %777, %767
  %787 = load i32, i32* %11, align 4
  %788 = sub nsw i32 %787, 20
  %789 = sub nsw i32 %788, 1
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %790
  %792 = load i8, i8* %791, align 1
  %793 = zext i8 %792 to i32
  %794 = load i32, i32* %15, align 4
  %795 = icmp eq i32 %793, %794
  br i1 %795, label %796, label %805

; <label>:796:                                    ; preds = %786
  %797 = load i32, i32* %11, align 4
  %798 = sub nsw i32 %797, 20
  %799 = sub nsw i32 %798, 1
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %800
  %802 = load i32, i32* %801, align 4
  %803 = load i32, i32* %12, align 4
  %804 = icmp eq i32 %802, %803
  br i1 %804, label %851, label %805

; <label>:805:                                    ; preds = %796, %786
  br label %806

; <label>:806:                                    ; preds = %805
  %807 = load i32, i32* %12, align 4
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %808
  %810 = getelementptr inbounds %struct.string_data, %struct.string_data* %809, i32 0, i32 3
  %811 = load i32, i32* %810, align 4
  %812 = icmp slt i32 %811, 20
  br i1 %812, label %813, label %827

; <label>:813:                                    ; preds = %806
  %814 = load i32, i32* %11, align 4
  %815 = sub nsw i32 %814, 20
  %816 = load i32, i32* %12, align 4
  %817 = sext i32 %816 to i64
  %818 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %817
  %819 = getelementptr inbounds %struct.string_data, %struct.string_data* %818, i32 0, i32 4
  %820 = load i32, i32* %12, align 4
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %821
  %823 = getelementptr inbounds %struct.string_data, %struct.string_data* %822, i32 0, i32 3
  %824 = load i32, i32* %823, align 4
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds [20 x i32], [20 x i32]* %819, i64 0, i64 %825
  store i32 %815, i32* %826, align 4
  br label %827

; <label>:827:                                    ; preds = %813, %806
  %828 = load i32, i32* @x.133
  %829 = load i32, i32* @y.134
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %827
  %836 = load i32, i32* %12, align 4
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %837
  %839 = getelementptr inbounds %struct.string_data, %struct.string_data* %838, i32 0, i32 3
  %840 = load i32, i32* %839, align 4
  %841 = add nsw i32 %840, 1
  store i32 %841, i32* %839, align 4
  %842 = load i32, i32* @x.133
  %843 = load i32, i32* @y.134
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBBpart2111, label %originalBB95alteredBB

originalBBpart2111:                               ; preds = %originalBB95
  br label %850

; <label>:850:                                    ; preds = %originalBBpart2111
  br label %851

; <label>:851:                                    ; preds = %850, %796, %777, %758, %729
  %852 = load i32, i32* @x.133
  %853 = load i32, i32* @y.134
  %854 = sub i32 %852, 1
  %855 = mul i32 %852, %854
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %853, 10
  %859 = or i1 %857, %858
  br i1 %859, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %originalBB113alteredBB, %851
  %860 = load i32, i32* @x.133
  %861 = load i32, i32* @y.134
  %862 = sub i32 %860, 1
  %863 = mul i32 %860, %862
  %864 = urem i32 %863, 2
  %865 = icmp eq i32 %864, 0
  %866 = icmp slt i32 %861, 10
  %867 = or i1 %865, %866
  br i1 %867, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %982

; <label>:868:                                    ; preds = %originalBBpart276
  %869 = load i32, i32* %11, align 4
  %870 = sub nsw i32 %869, 20
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %871
  %873 = load i8, i8* %872, align 1
  %874 = zext i8 %873 to i32
  %875 = load i32, i32* %16, align 4
  %876 = icmp eq i32 %874, %875
  br i1 %876, label %877, label %981

; <label>:877:                                    ; preds = %868
  %878 = load i32, i32* @x.133
  %879 = load i32, i32* @y.134
  %880 = sub i32 %878, 1
  %881 = mul i32 %878, %880
  %882 = urem i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = icmp slt i32 %879, 10
  %885 = or i1 %883, %884
  br i1 %885, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %877
  %886 = load i32, i32* %11, align 4
  %887 = sub nsw i32 %886, 20
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %888
  %890 = load i32, i32* %889, align 4
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %891
  %893 = getelementptr inbounds %struct.string_data, %struct.string_data* %892, i32 0, i32 7
  %894 = load i32, i32* %893, align 4
  %895 = load i32, i32* @string_mark, align 4
  %896 = icmp ne i32 %894, %895
  %897 = load i32, i32* @x.133
  %898 = load i32, i32* @y.134
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBBpart2126, label %originalBB117alteredBB

originalBBpart2126:                               ; preds = %originalBB117
  br i1 %896, label %905, label %981

; <label>:905:                                    ; preds = %originalBBpart2126
  %906 = load i32, i32* %11, align 4
  %907 = sub nsw i32 %906, 20
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %908
  %910 = load i32, i32* %909, align 4
  store i32 %910, i32* %20, align 4
  %911 = load i32, i32* %12, align 4
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %912
  %914 = getelementptr inbounds %struct.string_data, %struct.string_data* %913, i32 0, i32 5
  %915 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %916 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %915, i32 0, i32 0
  store i32* %914, i32** %916, align 8
  %917 = load i32, i32* %12, align 4
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %918
  %920 = getelementptr inbounds %struct.string_data, %struct.string_data* %919, i32 0, i32 5
  %921 = load i32, i32* %920, align 8
  %922 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %923 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %922, i32 1
  store %struct.change_stack_entry* %923, %struct.change_stack_entry** @change_stack_pointer, align 8
  %924 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %922, i32 0, i32 1
  store i32 %921, i32* %924, align 8
  %925 = load i32, i32* %11, align 4
  %926 = sub nsw i32 %925, 20
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %927
  %929 = load i32, i32* %928, align 4
  %930 = load i32, i32* %12, align 4
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %931
  %933 = getelementptr inbounds %struct.string_data, %struct.string_data* %932, i32 0, i32 6
  %934 = load i32, i32* %12, align 4
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %935
  %937 = getelementptr inbounds %struct.string_data, %struct.string_data* %936, i32 0, i32 5
  %938 = load i32, i32* %937, align 8
  %939 = add nsw i32 %938, 1
  store i32 %939, i32* %937, align 8
  %940 = sext i32 %938 to i64
  %941 = getelementptr inbounds [160 x i32], [160 x i32]* %933, i64 0, i64 %940
  store i32 %929, i32* %941, align 4
  %942 = load i32, i32* %20, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %943
  %945 = getelementptr inbounds %struct.string_data, %struct.string_data* %944, i32 0, i32 5
  %946 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %947 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %946, i32 0, i32 0
  store i32* %945, i32** %947, align 8
  %948 = load i32, i32* %20, align 4
  %949 = sext i32 %948 to i64
  %950 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %949
  %951 = getelementptr inbounds %struct.string_data, %struct.string_data* %950, i32 0, i32 5
  %952 = load i32, i32* %951, align 8
  %953 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %954 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %953, i32 1
  store %struct.change_stack_entry* %954, %struct.change_stack_entry** @change_stack_pointer, align 8
  %955 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %953, i32 0, i32 1
  store i32 %952, i32* %955, align 8
  %956 = load i32, i32* %11, align 4
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %957
  %959 = load i32, i32* %958, align 4
  %960 = load i32, i32* %20, align 4
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %961
  %963 = getelementptr inbounds %struct.string_data, %struct.string_data* %962, i32 0, i32 6
  %964 = load i32, i32* %20, align 4
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %965
  %967 = getelementptr inbounds %struct.string_data, %struct.string_data* %966, i32 0, i32 5
  %968 = load i32, i32* %967, align 8
  %969 = add nsw i32 %968, 1
  store i32 %969, i32* %967, align 8
  %970 = sext i32 %968 to i64
  %971 = getelementptr inbounds [160 x i32], [160 x i32]* %963, i64 0, i64 %970
  store i32 %959, i32* %971, align 4
  %972 = load i32, i32* @string_mark, align 4
  %973 = load i32, i32* %11, align 4
  %974 = sub nsw i32 %973, 20
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %975
  %977 = load i32, i32* %976, align 4
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %978
  %980 = getelementptr inbounds %struct.string_data, %struct.string_data* %979, i32 0, i32 7
  store i32 %972, i32* %980, align 4
  br label %981

; <label>:981:                                    ; preds = %905, %originalBBpart2126, %868
  br label %982

; <label>:982:                                    ; preds = %981, %originalBBpart2115
  %983 = load i32, i32* %11, align 4
  %984 = add nsw i32 %983, 1
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %985
  %987 = load i8, i8* %986, align 1
  %988 = zext i8 %987 to i32
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %990, label %1177

; <label>:990:                                    ; preds = %982
  %991 = load i32, i32* %14, align 4
  %992 = icmp ne i32 %991, 0
  br i1 %992, label %1176, label %993

; <label>:993:                                    ; preds = %990
  %994 = load i32, i32* @x.133
  %995 = load i32, i32* @y.134
  %996 = sub i32 %994, 1
  %997 = mul i32 %994, %996
  %998 = urem i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = icmp slt i32 %995, 10
  %1001 = or i1 %999, %1000
  br i1 %1001, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %originalBB128alteredBB, %993
  %1002 = load i32, i32* %11, align 4
  %1003 = add nsw i32 %1002, 1
  %1004 = add nsw i32 %1003, 1
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1005
  %1007 = load i8, i8* %1006, align 1
  %1008 = zext i8 %1007 to i32
  %1009 = load i32, i32* %15, align 4
  %1010 = icmp eq i32 %1008, %1009
  %1011 = load i32, i32* @x.133
  %1012 = load i32, i32* @y.134
  %1013 = sub i32 %1011, 1
  %1014 = mul i32 %1011, %1013
  %1015 = urem i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = icmp slt i32 %1012, 10
  %1018 = or i1 %1016, %1017
  br i1 %1018, label %originalBBpart2147, label %originalBB128alteredBB

originalBBpart2147:                               ; preds = %originalBB128
  br i1 %1010, label %1019, label %1028

; <label>:1019:                                   ; preds = %originalBBpart2147
  %1020 = load i32, i32* %11, align 4
  %1021 = add nsw i32 %1020, 1
  %1022 = add nsw i32 %1021, 1
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1023
  %1025 = load i32, i32* %1024, align 4
  %1026 = load i32, i32* %12, align 4
  %1027 = icmp eq i32 %1025, %1026
  br i1 %1027, label %1176, label %1028

; <label>:1028:                                   ; preds = %1019, %originalBBpart2147
  %1029 = load i32, i32* @x.133
  %1030 = load i32, i32* @y.134
  %1031 = sub i32 %1029, 1
  %1032 = mul i32 %1029, %1031
  %1033 = urem i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  %1035 = icmp slt i32 %1030, 10
  %1036 = or i1 %1034, %1035
  br i1 %1036, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %1028
  %1037 = load i32, i32* %11, align 4
  %1038 = add nsw i32 %1037, 1
  %1039 = add nsw i32 %1038, 20
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1040
  %1042 = load i8, i8* %1041, align 1
  %1043 = zext i8 %1042 to i32
  %1044 = load i32, i32* %15, align 4
  %1045 = icmp eq i32 %1043, %1044
  %1046 = load i32, i32* @x.133
  %1047 = load i32, i32* @y.134
  %1048 = sub i32 %1046, 1
  %1049 = mul i32 %1046, %1048
  %1050 = urem i32 %1049, 2
  %1051 = icmp eq i32 %1050, 0
  %1052 = icmp slt i32 %1047, 10
  %1053 = or i1 %1051, %1052
  br i1 %1053, label %originalBBpart2181, label %originalBB149alteredBB

originalBBpart2181:                               ; preds = %originalBB149
  br i1 %1045, label %1054, label %1063

; <label>:1054:                                   ; preds = %originalBBpart2181
  %1055 = load i32, i32* %11, align 4
  %1056 = add nsw i32 %1055, 1
  %1057 = add nsw i32 %1056, 20
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1058
  %1060 = load i32, i32* %1059, align 4
  %1061 = load i32, i32* %12, align 4
  %1062 = icmp eq i32 %1060, %1061
  br i1 %1062, label %1176, label %1063

; <label>:1063:                                   ; preds = %1054, %originalBBpart2181
  %1064 = load i32, i32* @x.133
  %1065 = load i32, i32* @y.134
  %1066 = sub i32 %1064, 1
  %1067 = mul i32 %1064, %1066
  %1068 = urem i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  %1070 = icmp slt i32 %1065, 10
  %1071 = or i1 %1069, %1070
  br i1 %1071, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %originalBB183alteredBB, %1063
  %1072 = load i32, i32* %11, align 4
  %1073 = add nsw i32 %1072, 1
  %1074 = sub nsw i32 %1073, 20
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1075
  %1077 = load i8, i8* %1076, align 1
  %1078 = zext i8 %1077 to i32
  %1079 = load i32, i32* %15, align 4
  %1080 = icmp eq i32 %1078, %1079
  %1081 = load i32, i32* @x.133
  %1082 = load i32, i32* @y.134
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBBpart2200, label %originalBB183alteredBB

originalBBpart2200:                               ; preds = %originalBB183
  br i1 %1080, label %1089, label %1114

; <label>:1089:                                   ; preds = %originalBBpart2200
  %1090 = load i32, i32* @x.133
  %1091 = load i32, i32* @y.134
  %1092 = sub i32 %1090, 1
  %1093 = mul i32 %1090, %1092
  %1094 = urem i32 %1093, 2
  %1095 = icmp eq i32 %1094, 0
  %1096 = icmp slt i32 %1091, 10
  %1097 = or i1 %1095, %1096
  br i1 %1097, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %originalBB202alteredBB, %1089
  %1098 = load i32, i32* %11, align 4
  %1099 = add nsw i32 %1098, 1
  %1100 = sub nsw i32 %1099, 20
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1101
  %1103 = load i32, i32* %1102, align 4
  %1104 = load i32, i32* %12, align 4
  %1105 = icmp eq i32 %1103, %1104
  %1106 = load i32, i32* @x.133
  %1107 = load i32, i32* @y.134
  %1108 = sub i32 %1106, 1
  %1109 = mul i32 %1106, %1108
  %1110 = urem i32 %1109, 2
  %1111 = icmp eq i32 %1110, 0
  %1112 = icmp slt i32 %1107, 10
  %1113 = or i1 %1111, %1112
  br i1 %1113, label %originalBBpart2208, label %originalBB202alteredBB

originalBBpart2208:                               ; preds = %originalBB202
  br i1 %1105, label %1176, label %1114

; <label>:1114:                                   ; preds = %originalBBpart2208, %originalBBpart2200
  %1115 = load i32, i32* @x.133
  %1116 = load i32, i32* @y.134
  %1117 = sub i32 %1115, 1
  %1118 = mul i32 %1115, %1117
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1116, 10
  %1122 = or i1 %1120, %1121
  br i1 %1122, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1114
  %1123 = load i32, i32* @x.133
  %1124 = load i32, i32* @y.134
  %1125 = sub i32 %1123, 1
  %1126 = mul i32 %1123, %1125
  %1127 = urem i32 %1126, 2
  %1128 = icmp eq i32 %1127, 0
  %1129 = icmp slt i32 %1124, 10
  %1130 = or i1 %1128, %1129
  br i1 %1130, label %originalBBpart2213, label %originalBB210alteredBB

originalBBpart2213:                               ; preds = %originalBB210
  br label %1131

; <label>:1131:                                   ; preds = %originalBBpart2213
  %1132 = load i32, i32* %12, align 4
  %1133 = sext i32 %1132 to i64
  %1134 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1133
  %1135 = getelementptr inbounds %struct.string_data, %struct.string_data* %1134, i32 0, i32 3
  %1136 = load i32, i32* %1135, align 4
  %1137 = icmp slt i32 %1136, 20
  br i1 %1137, label %1138, label %1152

; <label>:1138:                                   ; preds = %1131
  %1139 = load i32, i32* %11, align 4
  %1140 = add nsw i32 %1139, 1
  %1141 = load i32, i32* %12, align 4
  %1142 = sext i32 %1141 to i64
  %1143 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1142
  %1144 = getelementptr inbounds %struct.string_data, %struct.string_data* %1143, i32 0, i32 4
  %1145 = load i32, i32* %12, align 4
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1146
  %1148 = getelementptr inbounds %struct.string_data, %struct.string_data* %1147, i32 0, i32 3
  %1149 = load i32, i32* %1148, align 4
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds [20 x i32], [20 x i32]* %1144, i64 0, i64 %1150
  store i32 %1140, i32* %1151, align 4
  br label %1152

; <label>:1152:                                   ; preds = %1138, %1131
  %1153 = load i32, i32* @x.133
  %1154 = load i32, i32* @y.134
  %1155 = sub i32 %1153, 1
  %1156 = mul i32 %1153, %1155
  %1157 = urem i32 %1156, 2
  %1158 = icmp eq i32 %1157, 0
  %1159 = icmp slt i32 %1154, 10
  %1160 = or i1 %1158, %1159
  br i1 %1160, label %originalBB215, label %originalBB215alteredBB

originalBB215:                                    ; preds = %originalBB215alteredBB, %1152
  %1161 = load i32, i32* %12, align 4
  %1162 = sext i32 %1161 to i64
  %1163 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1162
  %1164 = getelementptr inbounds %struct.string_data, %struct.string_data* %1163, i32 0, i32 3
  %1165 = load i32, i32* %1164, align 4
  %1166 = add nsw i32 %1165, 1
  store i32 %1166, i32* %1164, align 4
  %1167 = load i32, i32* @x.133
  %1168 = load i32, i32* @y.134
  %1169 = sub i32 %1167, 1
  %1170 = mul i32 %1167, %1169
  %1171 = urem i32 %1170, 2
  %1172 = icmp eq i32 %1171, 0
  %1173 = icmp slt i32 %1168, 10
  %1174 = or i1 %1172, %1173
  br i1 %1174, label %originalBBpart2219, label %originalBB215alteredBB

originalBBpart2219:                               ; preds = %originalBB215
  br label %1175

; <label>:1175:                                   ; preds = %originalBBpart2219
  br label %1176

; <label>:1176:                                   ; preds = %1175, %originalBBpart2208, %1054, %1019, %990
  br label %1266

; <label>:1177:                                   ; preds = %982
  %1178 = load i32, i32* %11, align 4
  %1179 = add nsw i32 %1178, 1
  %1180 = sext i32 %1179 to i64
  %1181 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1180
  %1182 = load i8, i8* %1181, align 1
  %1183 = zext i8 %1182 to i32
  %1184 = load i32, i32* %16, align 4
  %1185 = icmp eq i32 %1183, %1184
  br i1 %1185, label %1186, label %1265

; <label>:1186:                                   ; preds = %1177
  %1187 = load i32, i32* %11, align 4
  %1188 = add nsw i32 %1187, 1
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1189
  %1191 = load i32, i32* %1190, align 4
  %1192 = sext i32 %1191 to i64
  %1193 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1192
  %1194 = getelementptr inbounds %struct.string_data, %struct.string_data* %1193, i32 0, i32 7
  %1195 = load i32, i32* %1194, align 4
  %1196 = load i32, i32* @string_mark, align 4
  %1197 = icmp ne i32 %1195, %1196
  br i1 %1197, label %1198, label %1265

; <label>:1198:                                   ; preds = %1186
  %1199 = load i32, i32* %11, align 4
  %1200 = add nsw i32 %1199, 1
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1201
  %1203 = load i32, i32* %1202, align 4
  store i32 %1203, i32* %21, align 4
  %1204 = load i32, i32* %12, align 4
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1205
  %1207 = getelementptr inbounds %struct.string_data, %struct.string_data* %1206, i32 0, i32 5
  %1208 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1209 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1208, i32 0, i32 0
  store i32* %1207, i32** %1209, align 8
  %1210 = load i32, i32* %12, align 4
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1211
  %1213 = getelementptr inbounds %struct.string_data, %struct.string_data* %1212, i32 0, i32 5
  %1214 = load i32, i32* %1213, align 8
  %1215 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1216 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1215, i32 1
  store %struct.change_stack_entry* %1216, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1217 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1215, i32 0, i32 1
  store i32 %1214, i32* %1217, align 8
  %1218 = load i32, i32* %11, align 4
  %1219 = add nsw i32 %1218, 1
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1220
  %1222 = load i32, i32* %1221, align 4
  %1223 = load i32, i32* %12, align 4
  %1224 = sext i32 %1223 to i64
  %1225 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1224
  %1226 = getelementptr inbounds %struct.string_data, %struct.string_data* %1225, i32 0, i32 6
  %1227 = load i32, i32* %12, align 4
  %1228 = sext i32 %1227 to i64
  %1229 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1228
  %1230 = getelementptr inbounds %struct.string_data, %struct.string_data* %1229, i32 0, i32 5
  %1231 = load i32, i32* %1230, align 8
  %1232 = add nsw i32 %1231, 1
  store i32 %1232, i32* %1230, align 8
  %1233 = sext i32 %1231 to i64
  %1234 = getelementptr inbounds [160 x i32], [160 x i32]* %1226, i64 0, i64 %1233
  store i32 %1222, i32* %1234, align 4
  %1235 = load i32, i32* %21, align 4
  %1236 = sext i32 %1235 to i64
  %1237 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1236
  %1238 = getelementptr inbounds %struct.string_data, %struct.string_data* %1237, i32 0, i32 5
  %1239 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1240 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1239, i32 0, i32 0
  store i32* %1238, i32** %1240, align 8
  %1241 = load i32, i32* %21, align 4
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1242
  %1244 = getelementptr inbounds %struct.string_data, %struct.string_data* %1243, i32 0, i32 5
  %1245 = load i32, i32* %1244, align 8
  %1246 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1247 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1246, i32 1
  store %struct.change_stack_entry* %1247, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1248 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1246, i32 0, i32 1
  store i32 %1245, i32* %1248, align 8
  %1249 = load i32, i32* %11, align 4
  %1250 = sext i32 %1249 to i64
  %1251 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1250
  %1252 = load i32, i32* %1251, align 4
  %1253 = load i32, i32* %21, align 4
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1254
  %1256 = getelementptr inbounds %struct.string_data, %struct.string_data* %1255, i32 0, i32 6
  %1257 = load i32, i32* %21, align 4
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1258
  %1260 = getelementptr inbounds %struct.string_data, %struct.string_data* %1259, i32 0, i32 5
  %1261 = load i32, i32* %1260, align 8
  %1262 = add nsw i32 %1261, 1
  store i32 %1262, i32* %1260, align 8
  %1263 = sext i32 %1261 to i64
  %1264 = getelementptr inbounds [160 x i32], [160 x i32]* %1256, i64 0, i64 %1263
  store i32 %1252, i32* %1264, align 4
  br label %1265

; <label>:1265:                                   ; preds = %1198, %1186, %1177
  br label %1266

; <label>:1266:                                   ; preds = %1265, %1176
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %1267 = alloca i32, align 4
  %1268 = alloca i32, align 4
  %1269 = alloca i32, align 4
  %1270 = alloca i32, align 4
  %1271 = alloca i32, align 4
  %1272 = alloca i32, align 4
  %1273 = alloca i32, align 4
  %1274 = alloca i32, align 4
  %1275 = alloca i32, align 4
  %1276 = alloca i32, align 4
  %1277 = alloca i32, align 4
  store i32 %0, i32* %1267, align 4
  store i32 %1, i32* %1268, align 4
  store i32 0, i32* %1270, align 4
  %1278 = load i32, i32* %1267, align 4
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1279
  %1281 = load i8, i8* %1280, align 1
  %1282 = zext i8 %1281 to i32
  store i32 %1282, i32* %1271, align 4
  %1283 = load i32, i32* %1271, align 4
  %_ = shl i32 3, %1283
  %_1 = shl i32 3, %1283
  %_2 = shl i32 3, %1283
  %1284 = sub nsw i32 3, %1283
  store i32 %1284, i32* %1272, align 4
  %1285 = load i32, i32* %1268, align 4
  %1286 = sext i32 %1285 to i64
  %1287 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1286
  %1288 = getelementptr inbounds %struct.string_data, %struct.string_data* %1287, i32 0, i32 2
  %1289 = load i32, i32* %1288, align 8
  store i32 %1289, i32* %1273, align 4
  %1290 = load i32, i32* %1273, align 4
  %1291 = sext i32 %1290 to i64
  %1292 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %1291
  %1293 = load i32, i32* %1292, align 4
  %1294 = load i32, i32* %1267, align 4
  %1295 = sext i32 %1294 to i64
  %1296 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %1295
  store i32 %1293, i32* %1296, align 4
  %1297 = load i32, i32* %1273, align 4
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %1298
  %1300 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1301 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1300, i32 0, i32 0
  store i32* %1299, i32** %1301, align 8
  %1302 = load i32, i32* %1273, align 4
  %1303 = sext i32 %1302 to i64
  %1304 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %1303
  %1305 = load i32, i32* %1304, align 4
  %1306 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1307 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1306, i32 1
  store %struct.change_stack_entry* %1307, %struct.change_stack_entry** @change_stack_pointer, align 8
  %1308 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %1306, i32 0, i32 1
  store i32 %1305, i32* %1308, align 8
  %1309 = load i32, i32* %1267, align 4
  %1310 = load i32, i32* %1273, align 4
  %1311 = sext i32 %1310 to i64
  %1312 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %1311
  store i32 %1309, i32* %1312, align 4
  %1313 = load i32, i32* %1267, align 4
  %1314 = load i32, i32* %1273, align 4
  %1315 = icmp slt i32 %1313, %1314
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %124
  %1316 = load i32, i32* @string_mark, align 4
  %_4 = sub i32 %1316, 1
  %gen = mul i32 %_4, 1
  %_5 = sub i32 0, %1316
  %gen6 = add i32 %_5, 1
  %_7 = sub i32 0, %1316
  %gen8 = add i32 %_7, 1
  %1317 = add nsw i32 %1316, 1
  store i32 %1317, i32* @string_mark, align 4
  store i32 0, i32* %13, align 4
  br label %originalBB3

originalBB12alteredBB:                            ; preds = %originalBB12, %143
  %1318 = load i32, i32* %13, align 4
  %1319 = load i32, i32* %12, align 4
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1320
  %1322 = getelementptr inbounds %struct.string_data, %struct.string_data* %1321, i32 0, i32 5
  %1323 = load i32, i32* %1322, align 8
  %1324 = icmp slt i32 %1318, %1323
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %251
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %307
  %1325 = load i32, i32* %11, align 4
  %_21 = sub i32 %1325, 20
  %gen22 = mul i32 %_21, 20
  %_23 = sub i32 %1325, 20
  %gen24 = mul i32 %_23, 20
  %_25 = shl i32 %1325, 20
  %1326 = add nsw i32 %1325, 20
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1327
  %1329 = load i32, i32* %1328, align 4
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1330
  %1332 = getelementptr inbounds %struct.string_data, %struct.string_data* %1331, i32 0, i32 7
  %1333 = load i32, i32* %1332, align 4
  %1334 = load i32, i32* @string_mark, align 4
  %1335 = icmp ne i32 %1333, %1334
  br label %originalBB20

originalBB29alteredBB:                            ; preds = %originalBB29, %412
  %1336 = load i32, i32* %11, align 4
  %_30 = sub i32 0, %1336
  %gen31 = add i32 %_30, 1
  %1337 = sub nsw i32 %1336, 1
  %1338 = sext i32 %1337 to i64
  %1339 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1338
  %1340 = load i8, i8* %1339, align 1
  %1341 = zext i8 %1340 to i32
  %1342 = icmp eq i32 %1341, 0
  br label %originalBB29

originalBB35alteredBB:                            ; preds = %originalBB35, %458
  %1343 = load i32, i32* %11, align 4
  %_36 = shl i32 %1343, 1
  %_37 = sub i32 %1343, 1
  %gen38 = mul i32 %_37, 1
  %_39 = shl i32 %1343, 1
  %_40 = sub i32 0, %1343
  %gen41 = add i32 %_40, 1
  %1344 = sub nsw i32 %1343, 1
  %_42 = shl i32 %1344, 20
  %1345 = sub nsw i32 %1344, 20
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1346
  %1348 = load i8, i8* %1347, align 1
  %1349 = zext i8 %1348 to i32
  %1350 = load i32, i32* %15, align 4
  %1351 = icmp eq i32 %1349, %1350
  br label %originalBB35

originalBB46alteredBB:                            ; preds = %originalBB46, %512
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %529
  %1352 = load i32, i32* %12, align 4
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1353
  %1355 = getelementptr inbounds %struct.string_data, %struct.string_data* %1354, i32 0, i32 3
  %1356 = load i32, i32* %1355, align 4
  %1357 = icmp slt i32 %1356, 20
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %566
  %1358 = load i32, i32* %12, align 4
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1359
  %1361 = getelementptr inbounds %struct.string_data, %struct.string_data* %1360, i32 0, i32 3
  %1362 = load i32, i32* %1361, align 4
  %_55 = sub i32 %1362, 1
  %gen56 = mul i32 %_55, 1
  %_57 = shl i32 %1362, 1
  %_58 = sub i32 %1362, 1
  %gen59 = mul i32 %_58, 1
  %_60 = sub i32 %1362, 1
  %gen61 = mul i32 %_60, 1
  %_62 = shl i32 %1362, 1
  %1363 = add nsw i32 %1362, 1
  store i32 %1363, i32* %1361, align 4
  br label %originalBB54

originalBB66alteredBB:                            ; preds = %originalBB66, %688
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %705
  %1364 = load i32, i32* %11, align 4
  %_71 = shl i32 %1364, 20
  %_72 = sub i32 %1364, 20
  %gen73 = mul i32 %_72, 20
  %_74 = shl i32 %1364, 20
  %1365 = sub nsw i32 %1364, 20
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1366
  %1368 = load i8, i8* %1367, align 1
  %1369 = zext i8 %1368 to i32
  %1370 = icmp eq i32 %1369, 0
  br label %originalBB70

originalBB78alteredBB:                            ; preds = %originalBB78, %732
  %1371 = load i32, i32* %11, align 4
  %_79 = shl i32 %1371, 20
  %_80 = sub i32 0, %1371
  %gen81 = add i32 %_80, 20
  %_82 = sub i32 %1371, 20
  %gen83 = mul i32 %_82, 20
  %_84 = sub i32 %1371, 20
  %gen85 = mul i32 %_84, 20
  %_86 = sub i32 %1371, 20
  %gen87 = mul i32 %_86, 20
  %1372 = sub nsw i32 %1371, 20
  %_88 = sub i32 0, %1372
  %gen89 = add i32 %_88, 20
  %_90 = sub i32 %1372, 20
  %gen91 = mul i32 %_90, 20
  %1373 = sub nsw i32 %1372, 20
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1374
  %1376 = load i8, i8* %1375, align 1
  %1377 = zext i8 %1376 to i32
  %1378 = load i32, i32* %15, align 4
  %1379 = icmp eq i32 %1377, %1378
  br label %originalBB78

originalBB95alteredBB:                            ; preds = %originalBB95, %827
  %1380 = load i32, i32* %12, align 4
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1381
  %1383 = getelementptr inbounds %struct.string_data, %struct.string_data* %1382, i32 0, i32 3
  %1384 = load i32, i32* %1383, align 4
  %_96 = shl i32 %1384, 1
  %_97 = shl i32 %1384, 1
  %_98 = sub i32 0, %1384
  %gen99 = add i32 %_98, 1
  %_100 = sub i32 0, %1384
  %gen101 = add i32 %_100, 1
  %_102 = sub i32 %1384, 1
  %gen103 = mul i32 %_102, 1
  %_104 = sub i32 %1384, 1
  %gen105 = mul i32 %_104, 1
  %_106 = sub i32 %1384, 1
  %gen107 = mul i32 %_106, 1
  %_108 = sub i32 0, %1384
  %gen109 = add i32 %_108, 1
  %1385 = add nsw i32 %1384, 1
  store i32 %1385, i32* %1383, align 4
  br label %originalBB95

originalBB113alteredBB:                           ; preds = %originalBB113, %851
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %877
  %1386 = load i32, i32* %11, align 4
  %_118 = sub i32 %1386, 20
  %gen119 = mul i32 %_118, 20
  %_120 = sub i32 0, %1386
  %gen121 = add i32 %_120, 20
  %_122 = shl i32 %1386, 20
  %_123 = shl i32 %1386, 20
  %_124 = shl i32 %1386, 20
  %1387 = sub nsw i32 %1386, 20
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1388
  %1390 = load i32, i32* %1389, align 4
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1391
  %1393 = getelementptr inbounds %struct.string_data, %struct.string_data* %1392, i32 0, i32 7
  %1394 = load i32, i32* %1393, align 4
  %1395 = load i32, i32* @string_mark, align 4
  %1396 = icmp ne i32 %1394, %1395
  br label %originalBB117

originalBB128alteredBB:                           ; preds = %originalBB128, %993
  %1397 = load i32, i32* %11, align 4
  %_129 = sub i32 0, %1397
  %gen130 = add i32 %_129, 1
  %_131 = shl i32 %1397, 1
  %_132 = shl i32 %1397, 1
  %_133 = shl i32 %1397, 1
  %1398 = add nsw i32 %1397, 1
  %_134 = sub i32 0, %1398
  %gen135 = add i32 %_134, 1
  %_136 = sub i32 0, %1398
  %gen137 = add i32 %_136, 1
  %_138 = shl i32 %1398, 1
  %_139 = sub i32 %1398, 1
  %gen140 = mul i32 %_139, 1
  %_141 = shl i32 %1398, 1
  %_142 = sub i32 0, %1398
  %gen143 = add i32 %_142, 1
  %_144 = sub i32 %1398, 1
  %gen145 = mul i32 %_144, 1
  %1399 = add nsw i32 %1398, 1
  %1400 = sext i32 %1399 to i64
  %1401 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1400
  %1402 = load i8, i8* %1401, align 1
  %1403 = zext i8 %1402 to i32
  %1404 = load i32, i32* %15, align 4
  %1405 = icmp eq i32 %1403, %1404
  br label %originalBB128

originalBB149alteredBB:                           ; preds = %originalBB149, %1028
  %1406 = load i32, i32* %11, align 4
  %_150 = sub i32 %1406, 1
  %gen151 = mul i32 %_150, 1
  %_152 = sub i32 %1406, 1
  %gen153 = mul i32 %_152, 1
  %_154 = sub i32 %1406, 1
  %gen155 = mul i32 %_154, 1
  %_156 = sub i32 0, %1406
  %gen157 = add i32 %_156, 1
  %_158 = sub i32 %1406, 1
  %gen159 = mul i32 %_158, 1
  %_160 = sub i32 %1406, 1
  %gen161 = mul i32 %_160, 1
  %_162 = sub i32 0, %1406
  %gen163 = add i32 %_162, 1
  %1407 = add nsw i32 %1406, 1
  %_164 = sub i32 0, %1407
  %gen165 = add i32 %_164, 20
  %_166 = sub i32 %1407, 20
  %gen167 = mul i32 %_166, 20
  %_168 = shl i32 %1407, 20
  %_169 = sub i32 0, %1407
  %gen170 = add i32 %_169, 20
  %_171 = sub i32 0, %1407
  %gen172 = add i32 %_171, 20
  %_173 = sub i32 %1407, 20
  %gen174 = mul i32 %_173, 20
  %_175 = shl i32 %1407, 20
  %_176 = sub i32 %1407, 20
  %gen177 = mul i32 %_176, 20
  %_178 = sub i32 %1407, 20
  %gen179 = mul i32 %_178, 20
  %1408 = add nsw i32 %1407, 20
  %1409 = sext i32 %1408 to i64
  %1410 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1409
  %1411 = load i8, i8* %1410, align 1
  %1412 = zext i8 %1411 to i32
  %1413 = load i32, i32* %15, align 4
  %1414 = icmp eq i32 %1412, %1413
  br label %originalBB149

originalBB183alteredBB:                           ; preds = %originalBB183, %1063
  %1415 = load i32, i32* %11, align 4
  %_184 = sub i32 0, %1415
  %gen185 = add i32 %_184, 1
  %_186 = sub i32 %1415, 1
  %gen187 = mul i32 %_186, 1
  %1416 = add nsw i32 %1415, 1
  %_188 = sub i32 %1416, 20
  %gen189 = mul i32 %_188, 20
  %_190 = shl i32 %1416, 20
  %_191 = shl i32 %1416, 20
  %_192 = sub i32 0, %1416
  %gen193 = add i32 %_192, 20
  %_194 = sub i32 0, %1416
  %gen195 = add i32 %_194, 20
  %_196 = sub i32 0, %1416
  %gen197 = add i32 %_196, 20
  %_198 = shl i32 %1416, 20
  %1417 = sub nsw i32 %1416, 20
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1418
  %1420 = load i8, i8* %1419, align 1
  %1421 = zext i8 %1420 to i32
  %1422 = load i32, i32* %15, align 4
  %1423 = icmp eq i32 %1421, %1422
  br label %originalBB183

originalBB202alteredBB:                           ; preds = %originalBB202, %1089
  %1424 = load i32, i32* %11, align 4
  %_203 = sub i32 %1424, 1
  %gen204 = mul i32 %_203, 1
  %1425 = add nsw i32 %1424, 1
  %_205 = sub i32 %1425, 20
  %gen206 = mul i32 %_205, 20
  %1426 = sub nsw i32 %1425, 20
  %1427 = sext i32 %1426 to i64
  %1428 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1427
  %1429 = load i32, i32* %1428, align 4
  %1430 = load i32, i32* %12, align 4
  %1431 = icmp eq i32 %1429, %1430
  br label %originalBB202

originalBB210alteredBB:                           ; preds = %originalBB210, %1114
  br label %originalBB210

originalBB215alteredBB:                           ; preds = %originalBB215, %1152
  %1432 = load i32, i32* %12, align 4
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1433
  %1435 = getelementptr inbounds %struct.string_data, %struct.string_data* %1434, i32 0, i32 3
  %1436 = load i32, i32* %1435, align 4
  %_216 = sub i32 %1436, 1
  %gen217 = mul i32 %_216, 1
  %1437 = add nsw i32 %1436, 1
  store i32 %1437, i32* %1435, align 4
  br label %originalBB215
}

; Function Attrs: noinline nounwind uwtable
define internal void @assimilate_neighbor_strings(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %6 = load i32, i32* %2, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  store i32 %10, i32* %4, align 4
  %11 = load i32, i32* %4, align 4
  %12 = sub nsw i32 3, %11
  store i32 %12, i32* %5, align 4
  %13 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %14 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %13, i32 0, i32 0
  store i32* @next_string, i32** %14, align 8
  %15 = load i32, i32* @next_string, align 4
  %16 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %17 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %16, i32 1
  store %struct.change_stack_entry* %17, %struct.change_stack_entry** @change_stack_pointer, align 8
  %18 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %16, i32 0, i32 1
  store i32 %15, i32* %18, align 8
  %19 = load i32, i32* @next_string, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* @next_string, align 4
  store i32 %19, i32* %3, align 4
  %21 = load i32, i32* %3, align 4
  %22 = icmp slt i32 %21, 240
  br i1 %22, label %23, label %40

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.135
  %25 = load i32, i32* @y.136
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %23
  %32 = load i32, i32* @x.135
  %33 = load i32, i32* @y.136
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %63

; <label>:40:                                     ; preds = %1
  %41 = load i32, i32* @x.135
  %42 = load i32, i32* @y.136
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %40
  %49 = load i32, i32* %2, align 4
  %50 = sdiv i32 %49, 20
  %51 = sub nsw i32 %50, 1
  %52 = load i32, i32* %2, align 4
  %53 = srem i32 %52, 20
  %54 = sub nsw i32 %53, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3296, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0), i32 %51, i32 %54)
  %55 = load i32, i32* @x.135
  %56 = load i32, i32* @y.136
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart240, label %originalBB1alteredBB

originalBBpart240:                                ; preds = %originalBB1
  br label %63

; <label>:63:                                     ; preds = %originalBBpart240, %originalBBpart2
  %64 = load i32, i32* %3, align 4
  %65 = load i32, i32* %2, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %66
  store i32 %64, i32* %67, align 4
  %68 = load i32, i32* %2, align 4
  %69 = load i32, i32* %2, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %70
  store i32 %68, i32* %71, align 4
  %72 = load i32, i32* %4, align 4
  %73 = load i32, i32* %3, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %74
  %76 = getelementptr inbounds %struct.string_data, %struct.string_data* %75, i32 0, i32 0
  store i32 %72, i32* %76, align 8
  %77 = load i32, i32* %3, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %78
  %80 = getelementptr inbounds %struct.string_data, %struct.string_data* %79, i32 0, i32 1
  store i32 1, i32* %80, align 4
  %81 = load i32, i32* %2, align 4
  %82 = load i32, i32* %3, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %83
  %85 = getelementptr inbounds %struct.string_data, %struct.string_data* %84, i32 0, i32 2
  store i32 %81, i32* %85, align 8
  %86 = load i32, i32* %3, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %87
  %89 = getelementptr inbounds %struct.string_data, %struct.string_data* %88, i32 0, i32 3
  store i32 0, i32* %89, align 4
  %90 = load i32, i32* %3, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %91
  %93 = getelementptr inbounds %struct.string_data, %struct.string_data* %92, i32 0, i32 5
  store i32 0, i32* %93, align 8
  %94 = load i32, i32* @liberty_mark, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* @liberty_mark, align 4
  %96 = load i32, i32* @string_mark, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* @string_mark, align 4
  %98 = load i32, i32* @string_mark, align 4
  %99 = load i32, i32* %3, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %100
  %102 = getelementptr inbounds %struct.string_data, %struct.string_data* %101, i32 0, i32 7
  store i32 %98, i32* %102, align 4
  %103 = load i32, i32* %2, align 4
  %104 = add nsw i32 %103, 20
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %185

; <label>:110:                                    ; preds = %63
  %111 = load i32, i32* @x.135
  %112 = load i32, i32* @y.136
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %110
  %119 = load i32, i32* %2, align 4
  %120 = add nsw i32 %119, 20
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = load i32, i32* @liberty_mark, align 4
  %125 = icmp ne i32 %123, %124
  %126 = load i32, i32* @x.135
  %127 = load i32, i32* @y.136
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart254, label %originalBB42alteredBB

originalBBpart254:                                ; preds = %originalBB42
  br i1 %125, label %134, label %185

; <label>:134:                                    ; preds = %originalBBpart254
  %135 = load i32, i32* @x.135
  %136 = load i32, i32* @y.136
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %134
  %143 = load i32, i32* @x.135
  %144 = load i32, i32* @y.136
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %151

; <label>:151:                                    ; preds = %originalBBpart258
  %152 = load i32, i32* %3, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %153
  %155 = getelementptr inbounds %struct.string_data, %struct.string_data* %154, i32 0, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = icmp slt i32 %156, 20
  br i1 %157, label %158, label %172

; <label>:158:                                    ; preds = %151
  %159 = load i32, i32* %2, align 4
  %160 = add nsw i32 %159, 20
  %161 = load i32, i32* %3, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %162
  %164 = getelementptr inbounds %struct.string_data, %struct.string_data* %163, i32 0, i32 4
  %165 = load i32, i32* %3, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %166
  %168 = getelementptr inbounds %struct.string_data, %struct.string_data* %167, i32 0, i32 3
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [20 x i32], [20 x i32]* %164, i64 0, i64 %170
  store i32 %160, i32* %171, align 4
  br label %172

; <label>:172:                                    ; preds = %158, %151
  %173 = load i32, i32* %3, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %174
  %176 = getelementptr inbounds %struct.string_data, %struct.string_data* %175, i32 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %176, align 4
  %179 = load i32, i32* @liberty_mark, align 4
  %180 = load i32, i32* %2, align 4
  %181 = add nsw i32 %180, 20
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %182
  store i32 %179, i32* %183, align 4
  br label %184

; <label>:184:                                    ; preds = %172
  br label %354

; <label>:185:                                    ; preds = %originalBBpart254, %63
  %186 = load i32, i32* %2, align 4
  %187 = add nsw i32 %186, 20
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = load i32, i32* %5, align 4
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %194, label %295

; <label>:194:                                    ; preds = %185
  %195 = load i32, i32* @x.135
  %196 = load i32, i32* @y.136
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %194
  %203 = load i32, i32* %2, align 4
  %204 = add nsw i32 %203, 20
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %208
  %210 = getelementptr inbounds %struct.string_data, %struct.string_data* %209, i32 0, i32 7
  %211 = load i32, i32* %210, align 4
  %212 = load i32, i32* @string_mark, align 4
  %213 = icmp ne i32 %211, %212
  %214 = load i32, i32* @x.135
  %215 = load i32, i32* @y.136
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart272, label %originalBB60alteredBB

originalBBpart272:                                ; preds = %originalBB60
  br i1 %213, label %222, label %295

; <label>:222:                                    ; preds = %originalBBpart272
  %223 = load i32, i32* %2, align 4
  %224 = add nsw i32 %223, 20
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = load i32, i32* %3, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %229
  %231 = getelementptr inbounds %struct.string_data, %struct.string_data* %230, i32 0, i32 6
  %232 = load i32, i32* %3, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %233
  %235 = getelementptr inbounds %struct.string_data, %struct.string_data* %234, i32 0, i32 5
  %236 = load i32, i32* %235, align 8
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %235, align 8
  %238 = sext i32 %236 to i64
  %239 = getelementptr inbounds [160 x i32], [160 x i32]* %231, i64 0, i64 %238
  store i32 %227, i32* %239, align 4
  %240 = load i32, i32* %2, align 4
  %241 = add nsw i32 %240, 20
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %245
  %247 = getelementptr inbounds %struct.string_data, %struct.string_data* %246, i32 0, i32 5
  %248 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %249 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %248, i32 0, i32 0
  store i32* %247, i32** %249, align 8
  %250 = load i32, i32* %2, align 4
  %251 = add nsw i32 %250, 20
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %252
  %254 = load i32, i32* %253, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %255
  %257 = getelementptr inbounds %struct.string_data, %struct.string_data* %256, i32 0, i32 5
  %258 = load i32, i32* %257, align 8
  %259 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %260 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %259, i32 1
  store %struct.change_stack_entry* %260, %struct.change_stack_entry** @change_stack_pointer, align 8
  %261 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %259, i32 0, i32 1
  store i32 %258, i32* %261, align 8
  %262 = load i32, i32* %2, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = load i32, i32* %2, align 4
  %267 = add nsw i32 %266, 20
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %271
  %273 = getelementptr inbounds %struct.string_data, %struct.string_data* %272, i32 0, i32 6
  %274 = load i32, i32* %2, align 4
  %275 = add nsw i32 %274, 20
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %279
  %281 = getelementptr inbounds %struct.string_data, %struct.string_data* %280, i32 0, i32 5
  %282 = load i32, i32* %281, align 8
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %281, align 8
  %284 = sext i32 %282 to i64
  %285 = getelementptr inbounds [160 x i32], [160 x i32]* %273, i64 0, i64 %284
  store i32 %265, i32* %285, align 4
  %286 = load i32, i32* @string_mark, align 4
  %287 = load i32, i32* %2, align 4
  %288 = add nsw i32 %287, 20
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %292
  %294 = getelementptr inbounds %struct.string_data, %struct.string_data* %293, i32 0, i32 7
  store i32 %286, i32* %294, align 4
  br label %337

; <label>:295:                                    ; preds = %originalBBpart272, %185
  %296 = load i32, i32* %2, align 4
  %297 = add nsw i32 %296, 20
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i32
  %302 = load i32, i32* %4, align 4
  %303 = icmp eq i32 %301, %302
  br i1 %303, label %304, label %336

; <label>:304:                                    ; preds = %295
  %305 = load i32, i32* %2, align 4
  %306 = add nsw i32 %305, 20
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %310
  %312 = getelementptr inbounds %struct.string_data, %struct.string_data* %311, i32 0, i32 7
  %313 = load i32, i32* %312, align 4
  %314 = load i32, i32* @string_mark, align 4
  %315 = icmp ne i32 %313, %314
  br i1 %315, label %316, label %336

; <label>:316:                                    ; preds = %304
  %317 = load i32, i32* @x.135
  %318 = load i32, i32* @y.136
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %316
  %325 = load i32, i32* %3, align 4
  %326 = load i32, i32* %2, align 4
  %327 = add nsw i32 %326, 20
  call void @assimilate_string(i32 %325, i32 %327)
  %328 = load i32, i32* @x.135
  %329 = load i32, i32* @y.136
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart284, label %originalBB74alteredBB

originalBBpart284:                                ; preds = %originalBB74
  br label %336

; <label>:336:                                    ; preds = %originalBBpart284, %304, %295
  br label %337

; <label>:337:                                    ; preds = %336, %222
  %338 = load i32, i32* @x.135
  %339 = load i32, i32* @y.136
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %337
  %346 = load i32, i32* @x.135
  %347 = load i32, i32* @y.136
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %354

; <label>:354:                                    ; preds = %originalBBpart288, %184
  %355 = load i32, i32* %2, align 4
  %356 = sub nsw i32 %355, 1
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %357
  %359 = load i8, i8* %358, align 1
  %360 = zext i8 %359 to i32
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %421

; <label>:362:                                    ; preds = %354
  %363 = load i32, i32* %2, align 4
  %364 = sub nsw i32 %363, 1
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %365
  %367 = load i32, i32* %366, align 4
  %368 = load i32, i32* @liberty_mark, align 4
  %369 = icmp ne i32 %367, %368
  br i1 %369, label %370, label %421

; <label>:370:                                    ; preds = %362
  br label %371

; <label>:371:                                    ; preds = %370
  %372 = load i32, i32* @x.135
  %373 = load i32, i32* @y.136
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %371
  %380 = load i32, i32* %3, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %381
  %383 = getelementptr inbounds %struct.string_data, %struct.string_data* %382, i32 0, i32 3
  %384 = load i32, i32* %383, align 4
  %385 = icmp slt i32 %384, 20
  %386 = load i32, i32* @x.135
  %387 = load i32, i32* @y.136
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %385, label %394, label %408

; <label>:394:                                    ; preds = %originalBBpart292
  %395 = load i32, i32* %2, align 4
  %396 = sub nsw i32 %395, 1
  %397 = load i32, i32* %3, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %398
  %400 = getelementptr inbounds %struct.string_data, %struct.string_data* %399, i32 0, i32 4
  %401 = load i32, i32* %3, align 4
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %402
  %404 = getelementptr inbounds %struct.string_data, %struct.string_data* %403, i32 0, i32 3
  %405 = load i32, i32* %404, align 4
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds [20 x i32], [20 x i32]* %400, i64 0, i64 %406
  store i32 %396, i32* %407, align 4
  br label %408

; <label>:408:                                    ; preds = %394, %originalBBpart292
  %409 = load i32, i32* %3, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %410
  %412 = getelementptr inbounds %struct.string_data, %struct.string_data* %411, i32 0, i32 3
  %413 = load i32, i32* %412, align 4
  %414 = add nsw i32 %413, 1
  store i32 %414, i32* %412, align 4
  %415 = load i32, i32* @liberty_mark, align 4
  %416 = load i32, i32* %2, align 4
  %417 = sub nsw i32 %416, 1
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %418
  store i32 %415, i32* %419, align 4
  br label %420

; <label>:420:                                    ; preds = %408
  br label %590

; <label>:421:                                    ; preds = %362, %354
  %422 = load i32, i32* @x.135
  %423 = load i32, i32* @y.136
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %421
  %430 = load i32, i32* %2, align 4
  %431 = sub nsw i32 %430, 1
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = load i32, i32* %5, align 4
  %437 = icmp eq i32 %435, %436
  %438 = load i32, i32* @x.135
  %439 = load i32, i32* @y.136
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart2107, label %originalBB94alteredBB

originalBBpart2107:                               ; preds = %originalBB94
  br i1 %437, label %446, label %531

; <label>:446:                                    ; preds = %originalBBpart2107
  %447 = load i32, i32* %2, align 4
  %448 = sub nsw i32 %447, 1
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %449
  %451 = load i32, i32* %450, align 4
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %452
  %454 = getelementptr inbounds %struct.string_data, %struct.string_data* %453, i32 0, i32 7
  %455 = load i32, i32* %454, align 4
  %456 = load i32, i32* @string_mark, align 4
  %457 = icmp ne i32 %455, %456
  br i1 %457, label %458, label %531

; <label>:458:                                    ; preds = %446
  %459 = load i32, i32* %2, align 4
  %460 = sub nsw i32 %459, 1
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = load i32, i32* %3, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %465
  %467 = getelementptr inbounds %struct.string_data, %struct.string_data* %466, i32 0, i32 6
  %468 = load i32, i32* %3, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %469
  %471 = getelementptr inbounds %struct.string_data, %struct.string_data* %470, i32 0, i32 5
  %472 = load i32, i32* %471, align 8
  %473 = add nsw i32 %472, 1
  store i32 %473, i32* %471, align 8
  %474 = sext i32 %472 to i64
  %475 = getelementptr inbounds [160 x i32], [160 x i32]* %467, i64 0, i64 %474
  store i32 %463, i32* %475, align 4
  %476 = load i32, i32* %2, align 4
  %477 = sub nsw i32 %476, 1
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %481
  %483 = getelementptr inbounds %struct.string_data, %struct.string_data* %482, i32 0, i32 5
  %484 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %485 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %484, i32 0, i32 0
  store i32* %483, i32** %485, align 8
  %486 = load i32, i32* %2, align 4
  %487 = sub nsw i32 %486, 1
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %491
  %493 = getelementptr inbounds %struct.string_data, %struct.string_data* %492, i32 0, i32 5
  %494 = load i32, i32* %493, align 8
  %495 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %496 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %495, i32 1
  store %struct.change_stack_entry* %496, %struct.change_stack_entry** @change_stack_pointer, align 8
  %497 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %495, i32 0, i32 1
  store i32 %494, i32* %497, align 8
  %498 = load i32, i32* %2, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %499
  %501 = load i32, i32* %500, align 4
  %502 = load i32, i32* %2, align 4
  %503 = sub nsw i32 %502, 1
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %504
  %506 = load i32, i32* %505, align 4
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %507
  %509 = getelementptr inbounds %struct.string_data, %struct.string_data* %508, i32 0, i32 6
  %510 = load i32, i32* %2, align 4
  %511 = sub nsw i32 %510, 1
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %512
  %514 = load i32, i32* %513, align 4
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %515
  %517 = getelementptr inbounds %struct.string_data, %struct.string_data* %516, i32 0, i32 5
  %518 = load i32, i32* %517, align 8
  %519 = add nsw i32 %518, 1
  store i32 %519, i32* %517, align 8
  %520 = sext i32 %518 to i64
  %521 = getelementptr inbounds [160 x i32], [160 x i32]* %509, i64 0, i64 %520
  store i32 %501, i32* %521, align 4
  %522 = load i32, i32* @string_mark, align 4
  %523 = load i32, i32* %2, align 4
  %524 = sub nsw i32 %523, 1
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %528
  %530 = getelementptr inbounds %struct.string_data, %struct.string_data* %529, i32 0, i32 7
  store i32 %522, i32* %530, align 4
  br label %589

; <label>:531:                                    ; preds = %446, %originalBBpart2107
  %532 = load i32, i32* %2, align 4
  %533 = sub nsw i32 %532, 1
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %534
  %536 = load i8, i8* %535, align 1
  %537 = zext i8 %536 to i32
  %538 = load i32, i32* %4, align 4
  %539 = icmp eq i32 %537, %538
  br i1 %539, label %540, label %588

; <label>:540:                                    ; preds = %531
  %541 = load i32, i32* @x.135
  %542 = load i32, i32* @y.136
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %540
  %549 = load i32, i32* %2, align 4
  %550 = sub nsw i32 %549, 1
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %551
  %553 = load i32, i32* %552, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %554
  %556 = getelementptr inbounds %struct.string_data, %struct.string_data* %555, i32 0, i32 7
  %557 = load i32, i32* %556, align 4
  %558 = load i32, i32* @string_mark, align 4
  %559 = icmp ne i32 %557, %558
  %560 = load i32, i32* @x.135
  %561 = load i32, i32* @y.136
  %562 = sub i32 %560, 1
  %563 = mul i32 %560, %562
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %561, 10
  %567 = or i1 %565, %566
  br i1 %567, label %originalBBpart2124, label %originalBB109alteredBB

originalBBpart2124:                               ; preds = %originalBB109
  br i1 %559, label %568, label %588

; <label>:568:                                    ; preds = %originalBBpart2124
  %569 = load i32, i32* @x.135
  %570 = load i32, i32* @y.136
  %571 = sub i32 %569, 1
  %572 = mul i32 %569, %571
  %573 = urem i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = icmp slt i32 %570, 10
  %576 = or i1 %574, %575
  br i1 %576, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %568
  %577 = load i32, i32* %3, align 4
  %578 = load i32, i32* %2, align 4
  %579 = sub nsw i32 %578, 1
  call void @assimilate_string(i32 %577, i32 %579)
  %580 = load i32, i32* @x.135
  %581 = load i32, i32* @y.136
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart2129, label %originalBB126alteredBB

originalBBpart2129:                               ; preds = %originalBB126
  br label %588

; <label>:588:                                    ; preds = %originalBBpart2129, %originalBBpart2124, %531
  br label %589

; <label>:589:                                    ; preds = %588, %458
  br label %590

; <label>:590:                                    ; preds = %589, %420
  %591 = load i32, i32* @x.135
  %592 = load i32, i32* @y.136
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %originalBB131alteredBB, %590
  %599 = load i32, i32* %2, align 4
  %600 = sub nsw i32 %599, 20
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %601
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i32
  %605 = icmp eq i32 %604, 0
  %606 = load i32, i32* @x.135
  %607 = load i32, i32* @y.136
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBBpart2143, label %originalBB131alteredBB

originalBBpart2143:                               ; preds = %originalBB131
  br i1 %605, label %614, label %689

; <label>:614:                                    ; preds = %originalBBpart2143
  %615 = load i32, i32* %2, align 4
  %616 = sub nsw i32 %615, 20
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %617
  %619 = load i32, i32* %618, align 4
  %620 = load i32, i32* @liberty_mark, align 4
  %621 = icmp ne i32 %619, %620
  br i1 %621, label %622, label %689

; <label>:622:                                    ; preds = %614
  br label %623

; <label>:623:                                    ; preds = %622
  %624 = load i32, i32* @x.135
  %625 = load i32, i32* @y.136
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %originalBB145alteredBB, %623
  %632 = load i32, i32* %3, align 4
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %633
  %635 = getelementptr inbounds %struct.string_data, %struct.string_data* %634, i32 0, i32 3
  %636 = load i32, i32* %635, align 4
  %637 = icmp slt i32 %636, 20
  %638 = load i32, i32* @x.135
  %639 = load i32, i32* @y.136
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br i1 %637, label %646, label %660

; <label>:646:                                    ; preds = %originalBBpart2147
  %647 = load i32, i32* %2, align 4
  %648 = sub nsw i32 %647, 20
  %649 = load i32, i32* %3, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %650
  %652 = getelementptr inbounds %struct.string_data, %struct.string_data* %651, i32 0, i32 4
  %653 = load i32, i32* %3, align 4
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %654
  %656 = getelementptr inbounds %struct.string_data, %struct.string_data* %655, i32 0, i32 3
  %657 = load i32, i32* %656, align 4
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds [20 x i32], [20 x i32]* %652, i64 0, i64 %658
  store i32 %648, i32* %659, align 4
  br label %660

; <label>:660:                                    ; preds = %646, %originalBBpart2147
  %661 = load i32, i32* @x.135
  %662 = load i32, i32* @y.136
  %663 = sub i32 %661, 1
  %664 = mul i32 %661, %663
  %665 = urem i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %662, 10
  %668 = or i1 %666, %667
  br i1 %668, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %660
  %669 = load i32, i32* %3, align 4
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %670
  %672 = getelementptr inbounds %struct.string_data, %struct.string_data* %671, i32 0, i32 3
  %673 = load i32, i32* %672, align 4
  %674 = add nsw i32 %673, 1
  store i32 %674, i32* %672, align 4
  %675 = load i32, i32* @liberty_mark, align 4
  %676 = load i32, i32* %2, align 4
  %677 = sub nsw i32 %676, 20
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %678
  store i32 %675, i32* %679, align 4
  %680 = load i32, i32* @x.135
  %681 = load i32, i32* @y.136
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBBpart2169, label %originalBB149alteredBB

originalBBpart2169:                               ; preds = %originalBB149
  br label %688

; <label>:688:                                    ; preds = %originalBBpart2169
  br label %874

; <label>:689:                                    ; preds = %614, %originalBBpart2143
  %690 = load i32, i32* %2, align 4
  %691 = sub nsw i32 %690, 20
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %692
  %694 = load i8, i8* %693, align 1
  %695 = zext i8 %694 to i32
  %696 = load i32, i32* %5, align 4
  %697 = icmp eq i32 %695, %696
  br i1 %697, label %698, label %783

; <label>:698:                                    ; preds = %689
  %699 = load i32, i32* %2, align 4
  %700 = sub nsw i32 %699, 20
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %701
  %703 = load i32, i32* %702, align 4
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %704
  %706 = getelementptr inbounds %struct.string_data, %struct.string_data* %705, i32 0, i32 7
  %707 = load i32, i32* %706, align 4
  %708 = load i32, i32* @string_mark, align 4
  %709 = icmp ne i32 %707, %708
  br i1 %709, label %710, label %783

; <label>:710:                                    ; preds = %698
  %711 = load i32, i32* %2, align 4
  %712 = sub nsw i32 %711, 20
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %713
  %715 = load i32, i32* %714, align 4
  %716 = load i32, i32* %3, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %717
  %719 = getelementptr inbounds %struct.string_data, %struct.string_data* %718, i32 0, i32 6
  %720 = load i32, i32* %3, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %721
  %723 = getelementptr inbounds %struct.string_data, %struct.string_data* %722, i32 0, i32 5
  %724 = load i32, i32* %723, align 8
  %725 = add nsw i32 %724, 1
  store i32 %725, i32* %723, align 8
  %726 = sext i32 %724 to i64
  %727 = getelementptr inbounds [160 x i32], [160 x i32]* %719, i64 0, i64 %726
  store i32 %715, i32* %727, align 4
  %728 = load i32, i32* %2, align 4
  %729 = sub nsw i32 %728, 20
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %730
  %732 = load i32, i32* %731, align 4
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %733
  %735 = getelementptr inbounds %struct.string_data, %struct.string_data* %734, i32 0, i32 5
  %736 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %737 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %736, i32 0, i32 0
  store i32* %735, i32** %737, align 8
  %738 = load i32, i32* %2, align 4
  %739 = sub nsw i32 %738, 20
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %740
  %742 = load i32, i32* %741, align 4
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %743
  %745 = getelementptr inbounds %struct.string_data, %struct.string_data* %744, i32 0, i32 5
  %746 = load i32, i32* %745, align 8
  %747 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %748 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %747, i32 1
  store %struct.change_stack_entry* %748, %struct.change_stack_entry** @change_stack_pointer, align 8
  %749 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %747, i32 0, i32 1
  store i32 %746, i32* %749, align 8
  %750 = load i32, i32* %2, align 4
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %751
  %753 = load i32, i32* %752, align 4
  %754 = load i32, i32* %2, align 4
  %755 = sub nsw i32 %754, 20
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %756
  %758 = load i32, i32* %757, align 4
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %759
  %761 = getelementptr inbounds %struct.string_data, %struct.string_data* %760, i32 0, i32 6
  %762 = load i32, i32* %2, align 4
  %763 = sub nsw i32 %762, 20
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %764
  %766 = load i32, i32* %765, align 4
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %767
  %769 = getelementptr inbounds %struct.string_data, %struct.string_data* %768, i32 0, i32 5
  %770 = load i32, i32* %769, align 8
  %771 = add nsw i32 %770, 1
  store i32 %771, i32* %769, align 8
  %772 = sext i32 %770 to i64
  %773 = getelementptr inbounds [160 x i32], [160 x i32]* %761, i64 0, i64 %772
  store i32 %753, i32* %773, align 4
  %774 = load i32, i32* @string_mark, align 4
  %775 = load i32, i32* %2, align 4
  %776 = sub nsw i32 %775, 20
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %777
  %779 = load i32, i32* %778, align 4
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %780
  %782 = getelementptr inbounds %struct.string_data, %struct.string_data* %781, i32 0, i32 7
  store i32 %774, i32* %782, align 4
  br label %857

; <label>:783:                                    ; preds = %698, %689
  %784 = load i32, i32* @x.135
  %785 = load i32, i32* @y.136
  %786 = sub i32 %784, 1
  %787 = mul i32 %784, %786
  %788 = urem i32 %787, 2
  %789 = icmp eq i32 %788, 0
  %790 = icmp slt i32 %785, 10
  %791 = or i1 %789, %790
  br i1 %791, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %783
  %792 = load i32, i32* %2, align 4
  %793 = sub nsw i32 %792, 20
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %794
  %796 = load i8, i8* %795, align 1
  %797 = zext i8 %796 to i32
  %798 = load i32, i32* %4, align 4
  %799 = icmp eq i32 %797, %798
  %800 = load i32, i32* @x.135
  %801 = load i32, i32* @y.136
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBBpart2180, label %originalBB171alteredBB

originalBBpart2180:                               ; preds = %originalBB171
  br i1 %799, label %808, label %856

; <label>:808:                                    ; preds = %originalBBpart2180
  %809 = load i32, i32* @x.135
  %810 = load i32, i32* @y.136
  %811 = sub i32 %809, 1
  %812 = mul i32 %809, %811
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %810, 10
  %816 = or i1 %814, %815
  br i1 %816, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %808
  %817 = load i32, i32* %2, align 4
  %818 = sub nsw i32 %817, 20
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %819
  %821 = load i32, i32* %820, align 4
  %822 = sext i32 %821 to i64
  %823 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %822
  %824 = getelementptr inbounds %struct.string_data, %struct.string_data* %823, i32 0, i32 7
  %825 = load i32, i32* %824, align 4
  %826 = load i32, i32* @string_mark, align 4
  %827 = icmp ne i32 %825, %826
  %828 = load i32, i32* @x.135
  %829 = load i32, i32* @y.136
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBBpart2186, label %originalBB182alteredBB

originalBBpart2186:                               ; preds = %originalBB182
  br i1 %827, label %836, label %856

; <label>:836:                                    ; preds = %originalBBpart2186
  %837 = load i32, i32* @x.135
  %838 = load i32, i32* @y.136
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %originalBB188alteredBB, %836
  %845 = load i32, i32* %3, align 4
  %846 = load i32, i32* %2, align 4
  %847 = sub nsw i32 %846, 20
  call void @assimilate_string(i32 %845, i32 %847)
  %848 = load i32, i32* @x.135
  %849 = load i32, i32* @y.136
  %850 = sub i32 %848, 1
  %851 = mul i32 %848, %850
  %852 = urem i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = icmp slt i32 %849, 10
  %855 = or i1 %853, %854
  br i1 %855, label %originalBBpart2194, label %originalBB188alteredBB

originalBBpart2194:                               ; preds = %originalBB188
  br label %856

; <label>:856:                                    ; preds = %originalBBpart2194, %originalBBpart2186, %originalBBpart2180
  br label %857

; <label>:857:                                    ; preds = %856, %710
  %858 = load i32, i32* @x.135
  %859 = load i32, i32* @y.136
  %860 = sub i32 %858, 1
  %861 = mul i32 %858, %860
  %862 = urem i32 %861, 2
  %863 = icmp eq i32 %862, 0
  %864 = icmp slt i32 %859, 10
  %865 = or i1 %863, %864
  br i1 %865, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %originalBB196alteredBB, %857
  %866 = load i32, i32* @x.135
  %867 = load i32, i32* @y.136
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  br label %874

; <label>:874:                                    ; preds = %originalBBpart2198, %688
  %875 = load i32, i32* %2, align 4
  %876 = add nsw i32 %875, 1
  %877 = sext i32 %876 to i64
  %878 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %877
  %879 = load i8, i8* %878, align 1
  %880 = zext i8 %879 to i32
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %882, label %920

; <label>:882:                                    ; preds = %874
  %883 = load i32, i32* %2, align 4
  %884 = add nsw i32 %883, 1
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %885
  %887 = load i32, i32* %886, align 4
  %888 = load i32, i32* @liberty_mark, align 4
  %889 = icmp ne i32 %887, %888
  br i1 %889, label %890, label %920

; <label>:890:                                    ; preds = %882
  br label %891

; <label>:891:                                    ; preds = %890
  %892 = load i32, i32* %3, align 4
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %893
  %895 = getelementptr inbounds %struct.string_data, %struct.string_data* %894, i32 0, i32 3
  %896 = load i32, i32* %895, align 4
  %897 = icmp slt i32 %896, 20
  br i1 %897, label %898, label %912

; <label>:898:                                    ; preds = %891
  %899 = load i32, i32* %2, align 4
  %900 = add nsw i32 %899, 1
  %901 = load i32, i32* %3, align 4
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %902
  %904 = getelementptr inbounds %struct.string_data, %struct.string_data* %903, i32 0, i32 4
  %905 = load i32, i32* %3, align 4
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %906
  %908 = getelementptr inbounds %struct.string_data, %struct.string_data* %907, i32 0, i32 3
  %909 = load i32, i32* %908, align 4
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds [20 x i32], [20 x i32]* %904, i64 0, i64 %910
  store i32 %900, i32* %911, align 4
  br label %912

; <label>:912:                                    ; preds = %898, %891
  %913 = load i32, i32* %3, align 4
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %914
  %916 = getelementptr inbounds %struct.string_data, %struct.string_data* %915, i32 0, i32 3
  %917 = load i32, i32* %916, align 4
  %918 = add nsw i32 %917, 1
  store i32 %918, i32* %916, align 4
  br label %919

; <label>:919:                                    ; preds = %912
  br label %1064

; <label>:920:                                    ; preds = %882, %874
  %921 = load i32, i32* %2, align 4
  %922 = add nsw i32 %921, 1
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %923
  %925 = load i8, i8* %924, align 1
  %926 = zext i8 %925 to i32
  %927 = load i32, i32* %5, align 4
  %928 = icmp eq i32 %926, %927
  br i1 %928, label %929, label %1021

; <label>:929:                                    ; preds = %920
  %930 = load i32, i32* @x.135
  %931 = load i32, i32* @y.136
  %932 = sub i32 %930, 1
  %933 = mul i32 %930, %932
  %934 = urem i32 %933, 2
  %935 = icmp eq i32 %934, 0
  %936 = icmp slt i32 %931, 10
  %937 = or i1 %935, %936
  br i1 %937, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %originalBB200alteredBB, %929
  %938 = load i32, i32* %2, align 4
  %939 = add nsw i32 %938, 1
  %940 = sext i32 %939 to i64
  %941 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %940
  %942 = load i32, i32* %941, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %943
  %945 = getelementptr inbounds %struct.string_data, %struct.string_data* %944, i32 0, i32 7
  %946 = load i32, i32* %945, align 4
  %947 = load i32, i32* @string_mark, align 4
  %948 = icmp ne i32 %946, %947
  %949 = load i32, i32* @x.135
  %950 = load i32, i32* @y.136
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBBpart2204, label %originalBB200alteredBB

originalBBpart2204:                               ; preds = %originalBB200
  br i1 %948, label %957, label %1021

; <label>:957:                                    ; preds = %originalBBpart2204
  %958 = load i32, i32* %2, align 4
  %959 = add nsw i32 %958, 1
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %960
  %962 = load i32, i32* %961, align 4
  %963 = load i32, i32* %3, align 4
  %964 = sext i32 %963 to i64
  %965 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %964
  %966 = getelementptr inbounds %struct.string_data, %struct.string_data* %965, i32 0, i32 6
  %967 = load i32, i32* %3, align 4
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %968
  %970 = getelementptr inbounds %struct.string_data, %struct.string_data* %969, i32 0, i32 5
  %971 = load i32, i32* %970, align 8
  %972 = add nsw i32 %971, 1
  store i32 %972, i32* %970, align 8
  %973 = sext i32 %971 to i64
  %974 = getelementptr inbounds [160 x i32], [160 x i32]* %966, i64 0, i64 %973
  store i32 %962, i32* %974, align 4
  %975 = load i32, i32* %2, align 4
  %976 = add nsw i32 %975, 1
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %977
  %979 = load i32, i32* %978, align 4
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %980
  %982 = getelementptr inbounds %struct.string_data, %struct.string_data* %981, i32 0, i32 5
  %983 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %984 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %983, i32 0, i32 0
  store i32* %982, i32** %984, align 8
  %985 = load i32, i32* %2, align 4
  %986 = add nsw i32 %985, 1
  %987 = sext i32 %986 to i64
  %988 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %987
  %989 = load i32, i32* %988, align 4
  %990 = sext i32 %989 to i64
  %991 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %990
  %992 = getelementptr inbounds %struct.string_data, %struct.string_data* %991, i32 0, i32 5
  %993 = load i32, i32* %992, align 8
  %994 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %995 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %994, i32 1
  store %struct.change_stack_entry* %995, %struct.change_stack_entry** @change_stack_pointer, align 8
  %996 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %994, i32 0, i32 1
  store i32 %993, i32* %996, align 8
  %997 = load i32, i32* %2, align 4
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %998
  %1000 = load i32, i32* %999, align 4
  %1001 = load i32, i32* %2, align 4
  %1002 = add nsw i32 %1001, 1
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1003
  %1005 = load i32, i32* %1004, align 4
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1006
  %1008 = getelementptr inbounds %struct.string_data, %struct.string_data* %1007, i32 0, i32 6
  %1009 = load i32, i32* %2, align 4
  %1010 = add nsw i32 %1009, 1
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1011
  %1013 = load i32, i32* %1012, align 4
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1014
  %1016 = getelementptr inbounds %struct.string_data, %struct.string_data* %1015, i32 0, i32 5
  %1017 = load i32, i32* %1016, align 8
  %1018 = add nsw i32 %1017, 1
  store i32 %1018, i32* %1016, align 8
  %1019 = sext i32 %1017 to i64
  %1020 = getelementptr inbounds [160 x i32], [160 x i32]* %1008, i64 0, i64 %1019
  store i32 %1000, i32* %1020, align 4
  br label %1063

; <label>:1021:                                   ; preds = %originalBBpart2204, %920
  %1022 = load i32, i32* %2, align 4
  %1023 = add nsw i32 %1022, 1
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1024
  %1026 = load i8, i8* %1025, align 1
  %1027 = zext i8 %1026 to i32
  %1028 = load i32, i32* %4, align 4
  %1029 = icmp eq i32 %1027, %1028
  br i1 %1029, label %1030, label %1046

; <label>:1030:                                   ; preds = %1021
  %1031 = load i32, i32* %2, align 4
  %1032 = add nsw i32 %1031, 1
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1033
  %1035 = load i32, i32* %1034, align 4
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1036
  %1038 = getelementptr inbounds %struct.string_data, %struct.string_data* %1037, i32 0, i32 7
  %1039 = load i32, i32* %1038, align 4
  %1040 = load i32, i32* @string_mark, align 4
  %1041 = icmp ne i32 %1039, %1040
  br i1 %1041, label %1042, label %1046

; <label>:1042:                                   ; preds = %1030
  %1043 = load i32, i32* %3, align 4
  %1044 = load i32, i32* %2, align 4
  %1045 = add nsw i32 %1044, 1
  call void @assimilate_string(i32 %1043, i32 %1045)
  br label %1046

; <label>:1046:                                   ; preds = %1042, %1030, %1021
  %1047 = load i32, i32* @x.135
  %1048 = load i32, i32* @y.136
  %1049 = sub i32 %1047, 1
  %1050 = mul i32 %1047, %1049
  %1051 = urem i32 %1050, 2
  %1052 = icmp eq i32 %1051, 0
  %1053 = icmp slt i32 %1048, 10
  %1054 = or i1 %1052, %1053
  br i1 %1054, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1046
  %1055 = load i32, i32* @x.135
  %1056 = load i32, i32* @y.136
  %1057 = sub i32 %1055, 1
  %1058 = mul i32 %1055, %1057
  %1059 = urem i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = icmp slt i32 %1056, 10
  %1062 = or i1 %1060, %1061
  br i1 %1062, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %1063

; <label>:1063:                                   ; preds = %originalBBpart2208, %957
  br label %1064

; <label>:1064:                                   ; preds = %1063, %919
  %1065 = load i32, i32* @x.135
  %1066 = load i32, i32* @y.136
  %1067 = sub i32 %1065, 1
  %1068 = mul i32 %1065, %1067
  %1069 = urem i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  %1071 = icmp slt i32 %1066, 10
  %1072 = or i1 %1070, %1071
  br i1 %1072, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1064
  %1073 = load i32, i32* @x.135
  %1074 = load i32, i32* @y.136
  %1075 = sub i32 %1073, 1
  %1076 = mul i32 %1073, %1075
  %1077 = urem i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = icmp slt i32 %1074, 10
  %1080 = or i1 %1078, %1079
  br i1 %1080, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %23
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %1081 = load i32, i32* %2, align 4
  %_ = sub i32 0, %1081
  %gen = add i32 %_, 20
  %_2 = sub i32 0, %1081
  %gen3 = add i32 %_2, 20
  %_4 = sub i32 %1081, 20
  %gen5 = mul i32 %_4, 20
  %_6 = sub i32 0, %1081
  %gen7 = add i32 %_6, 20
  %_8 = sub i32 0, %1081
  %gen9 = add i32 %_8, 20
  %1082 = sdiv i32 %1081, 20
  %_10 = sub i32 0, %1082
  %gen11 = add i32 %_10, 1
  %_12 = shl i32 %1082, 1
  %_13 = sub i32 %1082, 1
  %gen14 = mul i32 %_13, 1
  %_15 = sub i32 0, %1082
  %gen16 = add i32 %_15, 1
  %_17 = shl i32 %1082, 1
  %1083 = sub nsw i32 %1082, 1
  %1084 = load i32, i32* %2, align 4
  %_18 = shl i32 %1084, 20
  %_19 = sub i32 %1084, 20
  %gen20 = mul i32 %_19, 20
  %_21 = shl i32 %1084, 20
  %_22 = sub i32 %1084, 20
  %gen23 = mul i32 %_22, 20
  %_24 = sub i32 %1084, 20
  %gen25 = mul i32 %_24, 20
  %_26 = sub i32 %1084, 20
  %gen27 = mul i32 %_26, 20
  %_28 = shl i32 %1084, 20
  %_29 = shl i32 %1084, 20
  %1085 = srem i32 %1084, 20
  %_30 = sub i32 %1085, 1
  %gen31 = mul i32 %_30, 1
  %_32 = sub i32 0, %1085
  %gen33 = add i32 %_32, 1
  %_34 = sub i32 %1085, 1
  %gen35 = mul i32 %_34, 1
  %_36 = shl i32 %1085, 1
  %_37 = sub i32 0, %1085
  %gen38 = add i32 %_37, 1
  %1086 = sub nsw i32 %1085, 1
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3296, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0), i32 %1083, i32 %1086)
  br label %originalBB1

originalBB42alteredBB:                            ; preds = %originalBB42, %110
  %1087 = load i32, i32* %2, align 4
  %_43 = sub i32 0, %1087
  %gen44 = add i32 %_43, 20
  %_45 = sub i32 0, %1087
  %gen46 = add i32 %_45, 20
  %_47 = sub i32 0, %1087
  %gen48 = add i32 %_47, 20
  %_49 = sub i32 0, %1087
  %gen50 = add i32 %_49, 20
  %_51 = shl i32 %1087, 20
  %_52 = shl i32 %1087, 20
  %1088 = add nsw i32 %1087, 20
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1089
  %1091 = load i32, i32* %1090, align 4
  %1092 = load i32, i32* @liberty_mark, align 4
  %1093 = icmp ne i32 %1091, %1092
  br label %originalBB42

originalBB56alteredBB:                            ; preds = %originalBB56, %134
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %194
  %1094 = load i32, i32* %2, align 4
  %_61 = sub i32 %1094, 20
  %gen62 = mul i32 %_61, 20
  %_63 = shl i32 %1094, 20
  %_64 = shl i32 %1094, 20
  %_65 = sub i32 0, %1094
  %gen66 = add i32 %_65, 20
  %_67 = sub i32 0, %1094
  %gen68 = add i32 %_67, 20
  %_69 = sub i32 %1094, 20
  %gen70 = mul i32 %_69, 20
  %1095 = add nsw i32 %1094, 20
  %1096 = sext i32 %1095 to i64
  %1097 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1096
  %1098 = load i32, i32* %1097, align 4
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1099
  %1101 = getelementptr inbounds %struct.string_data, %struct.string_data* %1100, i32 0, i32 7
  %1102 = load i32, i32* %1101, align 4
  %1103 = load i32, i32* @string_mark, align 4
  %1104 = icmp ne i32 %1102, %1103
  br label %originalBB60

originalBB74alteredBB:                            ; preds = %originalBB74, %316
  %1105 = load i32, i32* %3, align 4
  %1106 = load i32, i32* %2, align 4
  %_75 = sub i32 0, %1106
  %gen76 = add i32 %_75, 20
  %_77 = sub i32 0, %1106
  %gen78 = add i32 %_77, 20
  %_79 = sub i32 0, %1106
  %gen80 = add i32 %_79, 20
  %_81 = sub i32 %1106, 20
  %gen82 = mul i32 %_81, 20
  %1107 = add nsw i32 %1106, 20
  call void @assimilate_string(i32 %1105, i32 %1107)
  br label %originalBB74

originalBB86alteredBB:                            ; preds = %originalBB86, %337
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %371
  %1108 = load i32, i32* %3, align 4
  %1109 = sext i32 %1108 to i64
  %1110 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1109
  %1111 = getelementptr inbounds %struct.string_data, %struct.string_data* %1110, i32 0, i32 3
  %1112 = load i32, i32* %1111, align 4
  %1113 = icmp slt i32 %1112, 20
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %421
  %1114 = load i32, i32* %2, align 4
  %_95 = sub i32 0, %1114
  %gen96 = add i32 %_95, 1
  %_97 = sub i32 %1114, 1
  %gen98 = mul i32 %_97, 1
  %_99 = sub i32 0, %1114
  %gen100 = add i32 %_99, 1
  %_101 = sub i32 0, %1114
  %gen102 = add i32 %_101, 1
  %_103 = sub i32 0, %1114
  %gen104 = add i32 %_103, 1
  %_105 = shl i32 %1114, 1
  %1115 = sub nsw i32 %1114, 1
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1116
  %1118 = load i8, i8* %1117, align 1
  %1119 = zext i8 %1118 to i32
  %1120 = load i32, i32* %5, align 4
  %1121 = icmp eq i32 %1119, %1120
  br label %originalBB94

originalBB109alteredBB:                           ; preds = %originalBB109, %540
  %1122 = load i32, i32* %2, align 4
  %_110 = sub i32 0, %1122
  %gen111 = add i32 %_110, 1
  %_112 = shl i32 %1122, 1
  %_113 = sub i32 0, %1122
  %gen114 = add i32 %_113, 1
  %_115 = sub i32 %1122, 1
  %gen116 = mul i32 %_115, 1
  %_117 = sub i32 %1122, 1
  %gen118 = mul i32 %_117, 1
  %_119 = shl i32 %1122, 1
  %_120 = sub i32 %1122, 1
  %gen121 = mul i32 %_120, 1
  %_122 = shl i32 %1122, 1
  %1123 = sub nsw i32 %1122, 1
  %1124 = sext i32 %1123 to i64
  %1125 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1124
  %1126 = load i32, i32* %1125, align 4
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1127
  %1129 = getelementptr inbounds %struct.string_data, %struct.string_data* %1128, i32 0, i32 7
  %1130 = load i32, i32* %1129, align 4
  %1131 = load i32, i32* @string_mark, align 4
  %1132 = icmp ne i32 %1130, %1131
  br label %originalBB109

originalBB126alteredBB:                           ; preds = %originalBB126, %568
  %1133 = load i32, i32* %3, align 4
  %1134 = load i32, i32* %2, align 4
  %_127 = shl i32 %1134, 1
  %1135 = sub nsw i32 %1134, 1
  call void @assimilate_string(i32 %1133, i32 %1135)
  br label %originalBB126

originalBB131alteredBB:                           ; preds = %originalBB131, %590
  %1136 = load i32, i32* %2, align 4
  %_132 = shl i32 %1136, 20
  %_133 = shl i32 %1136, 20
  %_134 = shl i32 %1136, 20
  %_135 = sub i32 %1136, 20
  %gen136 = mul i32 %_135, 20
  %_137 = sub i32 0, %1136
  %gen138 = add i32 %_137, 20
  %_139 = sub i32 0, %1136
  %gen140 = add i32 %_139, 20
  %_141 = shl i32 %1136, 20
  %1137 = sub nsw i32 %1136, 20
  %1138 = sext i32 %1137 to i64
  %1139 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1138
  %1140 = load i8, i8* %1139, align 1
  %1141 = zext i8 %1140 to i32
  %1142 = icmp eq i32 %1141, 0
  br label %originalBB131

originalBB145alteredBB:                           ; preds = %originalBB145, %623
  %1143 = load i32, i32* %3, align 4
  %1144 = sext i32 %1143 to i64
  %1145 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1144
  %1146 = getelementptr inbounds %struct.string_data, %struct.string_data* %1145, i32 0, i32 3
  %1147 = load i32, i32* %1146, align 4
  %1148 = icmp slt i32 %1147, 20
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %660
  %1149 = load i32, i32* %3, align 4
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1150
  %1152 = getelementptr inbounds %struct.string_data, %struct.string_data* %1151, i32 0, i32 3
  %1153 = load i32, i32* %1152, align 4
  %_150 = sub i32 %1153, 1
  %gen151 = mul i32 %_150, 1
  %_152 = sub i32 0, %1153
  %gen153 = add i32 %_152, 1
  %_154 = shl i32 %1153, 1
  %_155 = shl i32 %1153, 1
  %_156 = sub i32 %1153, 1
  %gen157 = mul i32 %_156, 1
  %1154 = add nsw i32 %1153, 1
  store i32 %1154, i32* %1152, align 4
  %1155 = load i32, i32* @liberty_mark, align 4
  %1156 = load i32, i32* %2, align 4
  %_158 = shl i32 %1156, 20
  %_159 = shl i32 %1156, 20
  %_160 = sub i32 0, %1156
  %gen161 = add i32 %_160, 20
  %_162 = shl i32 %1156, 20
  %_163 = shl i32 %1156, 20
  %_164 = sub i32 %1156, 20
  %gen165 = mul i32 %_164, 20
  %_166 = sub i32 %1156, 20
  %gen167 = mul i32 %_166, 20
  %1157 = sub nsw i32 %1156, 20
  %1158 = sext i32 %1157 to i64
  %1159 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %1158
  store i32 %1155, i32* %1159, align 4
  br label %originalBB149

originalBB171alteredBB:                           ; preds = %originalBB171, %783
  %1160 = load i32, i32* %2, align 4
  %_172 = shl i32 %1160, 20
  %_173 = sub i32 0, %1160
  %gen174 = add i32 %_173, 20
  %_175 = sub i32 0, %1160
  %gen176 = add i32 %_175, 20
  %_177 = sub i32 %1160, 20
  %gen178 = mul i32 %_177, 20
  %1161 = sub nsw i32 %1160, 20
  %1162 = sext i32 %1161 to i64
  %1163 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %1162
  %1164 = load i8, i8* %1163, align 1
  %1165 = zext i8 %1164 to i32
  %1166 = load i32, i32* %4, align 4
  %1167 = icmp eq i32 %1165, %1166
  br label %originalBB171

originalBB182alteredBB:                           ; preds = %originalBB182, %808
  %1168 = load i32, i32* %2, align 4
  %_183 = shl i32 %1168, 20
  %_184 = shl i32 %1168, 20
  %1169 = sub nsw i32 %1168, 20
  %1170 = sext i32 %1169 to i64
  %1171 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1170
  %1172 = load i32, i32* %1171, align 4
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1173
  %1175 = getelementptr inbounds %struct.string_data, %struct.string_data* %1174, i32 0, i32 7
  %1176 = load i32, i32* %1175, align 4
  %1177 = load i32, i32* @string_mark, align 4
  %1178 = icmp ne i32 %1176, %1177
  br label %originalBB182

originalBB188alteredBB:                           ; preds = %originalBB188, %836
  %1179 = load i32, i32* %3, align 4
  %1180 = load i32, i32* %2, align 4
  %_189 = sub i32 %1180, 20
  %gen190 = mul i32 %_189, 20
  %_191 = sub i32 %1180, 20
  %gen192 = mul i32 %_191, 20
  %1181 = sub nsw i32 %1180, 20
  call void @assimilate_string(i32 %1179, i32 %1181)
  br label %originalBB188

originalBB196alteredBB:                           ; preds = %originalBB196, %857
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %929
  %1182 = load i32, i32* %2, align 4
  %_201 = shl i32 %1182, 1
  %_202 = shl i32 %1182, 1
  %1183 = add nsw i32 %1182, 1
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %1184
  %1186 = load i32, i32* %1185, align 4
  %1187 = sext i32 %1186 to i64
  %1188 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %1187
  %1189 = getelementptr inbounds %struct.string_data, %struct.string_data* %1188, i32 0, i32 7
  %1190 = load i32, i32* %1189, align 4
  %1191 = load i32, i32* @string_mark, align 4
  %1192 = icmp ne i32 %1190, %1191
  br label %originalBB200

originalBB206alteredBB:                           ; preds = %originalBB206, %1046
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1064
  br label %originalBB210
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_neighbor(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.string_data*, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %6, align 4
  %8 = load i32, i32* %3, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %9
  store %struct.string_data* %10, %struct.string_data** %7, align 8
  store i32 0, i32* %5, align 4
  br label %11

; <label>:11:                                     ; preds = %94, %2
  %12 = load i32, i32* %5, align 4
  %13 = load %struct.string_data*, %struct.string_data** %7, align 8
  %14 = getelementptr inbounds %struct.string_data, %struct.string_data* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %12, %15
  br i1 %16, label %17, label %97

; <label>:17:                                     ; preds = %11
  %18 = load %struct.string_data*, %struct.string_data** %7, align 8
  %19 = getelementptr inbounds %struct.string_data, %struct.string_data* %18, i32 0, i32 6
  %20 = load i32, i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [160 x i32], [160 x i32]* %19, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %4, align 4
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %93

; <label>:26:                                     ; preds = %17
  %27 = load %struct.string_data*, %struct.string_data** %7, align 8
  %28 = getelementptr inbounds %struct.string_data, %struct.string_data* %27, i32 0, i32 6
  %29 = load %struct.string_data*, %struct.string_data** %7, align 8
  %30 = getelementptr inbounds %struct.string_data, %struct.string_data* %29, i32 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [160 x i32], [160 x i32]* %28, i64 0, i64 %33
  %35 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %36 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %35, i32 0, i32 0
  store i32* %34, i32** %36, align 8
  %37 = load %struct.string_data*, %struct.string_data** %7, align 8
  %38 = getelementptr inbounds %struct.string_data, %struct.string_data* %37, i32 0, i32 6
  %39 = load %struct.string_data*, %struct.string_data** %7, align 8
  %40 = getelementptr inbounds %struct.string_data, %struct.string_data* %39, i32 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [160 x i32], [160 x i32]* %38, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %47 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %46, i32 1
  store %struct.change_stack_entry* %47, %struct.change_stack_entry** @change_stack_pointer, align 8
  %48 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %46, i32 0, i32 1
  store i32 %45, i32* %48, align 8
  %49 = load %struct.string_data*, %struct.string_data** %7, align 8
  %50 = getelementptr inbounds %struct.string_data, %struct.string_data* %49, i32 0, i32 6
  %51 = load i32, i32* %5, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [160 x i32], [160 x i32]* %50, i64 0, i64 %52
  %54 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %55 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %54, i32 0, i32 0
  store i32* %53, i32** %55, align 8
  %56 = load %struct.string_data*, %struct.string_data** %7, align 8
  %57 = getelementptr inbounds %struct.string_data, %struct.string_data* %56, i32 0, i32 6
  %58 = load i32, i32* %5, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [160 x i32], [160 x i32]* %57, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %63 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %62, i32 1
  store %struct.change_stack_entry* %63, %struct.change_stack_entry** @change_stack_pointer, align 8
  %64 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %62, i32 0, i32 1
  store i32 %61, i32* %64, align 8
  %65 = load %struct.string_data*, %struct.string_data** %7, align 8
  %66 = getelementptr inbounds %struct.string_data, %struct.string_data* %65, i32 0, i32 5
  %67 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %68 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %67, i32 0, i32 0
  store i32* %66, i32** %68, align 8
  %69 = load %struct.string_data*, %struct.string_data** %7, align 8
  %70 = getelementptr inbounds %struct.string_data, %struct.string_data* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 4
  %72 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %73 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %72, i32 1
  store %struct.change_stack_entry* %73, %struct.change_stack_entry** @change_stack_pointer, align 8
  %74 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %72, i32 0, i32 1
  store i32 %71, i32* %74, align 8
  %75 = load %struct.string_data*, %struct.string_data** %7, align 8
  %76 = getelementptr inbounds %struct.string_data, %struct.string_data* %75, i32 0, i32 6
  %77 = load %struct.string_data*, %struct.string_data** %7, align 8
  %78 = getelementptr inbounds %struct.string_data, %struct.string_data* %77, i32 0, i32 5
  %79 = load i32, i32* %78, align 4
  %80 = sub nsw i32 %79, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [160 x i32], [160 x i32]* %76, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load %struct.string_data*, %struct.string_data** %7, align 8
  %85 = getelementptr inbounds %struct.string_data, %struct.string_data* %84, i32 0, i32 6
  %86 = load i32, i32* %5, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [160 x i32], [160 x i32]* %85, i64 0, i64 %87
  store i32 %83, i32* %88, align 4
  %89 = load %struct.string_data*, %struct.string_data** %7, align 8
  %90 = getelementptr inbounds %struct.string_data, %struct.string_data* %89, i32 0, i32 5
  %91 = load i32, i32* %90, align 4
  %92 = add nsw i32 %91, -1
  store i32 %92, i32* %90, align 4
  store i32 1, i32* %6, align 4
  br label %97

; <label>:93:                                     ; preds = %17
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = load i32, i32* %5, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %5, align 4
  br label %11

; <label>:97:                                     ; preds = %26, %11
  %98 = load i32, i32* %6, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %101

; <label>:100:                                    ; preds = %97
  br label %102

; <label>:101:                                    ; preds = %97
  call void @abortgo(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2930, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 -1, i32 -1)
  br label %102

; <label>:102:                                    ; preds = %101, %100
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_liberties(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %6
  %8 = getelementptr inbounds %struct.string_data, %struct.string_data* %7, i32 0, i32 3
  %9 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %10 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %9, i32 0, i32 0
  store i32* %8, i32** %10, align 8
  %11 = load i32, i32* %2, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %12
  %14 = getelementptr inbounds %struct.string_data, %struct.string_data* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %17 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %16, i32 1
  store %struct.change_stack_entry* %17, %struct.change_stack_entry** @change_stack_pointer, align 8
  %18 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %16, i32 0, i32 1
  store i32 %15, i32* %18, align 8
  store i32 0, i32* %4, align 4
  br label %19

; <label>:19:                                     ; preds = %69, %1
  %20 = load i32, i32* %4, align 4
  %21 = load i32, i32* %2, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %22
  %24 = getelementptr inbounds %struct.string_data, %struct.string_data* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %20, %25
  br i1 %26, label %27, label %46

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* @x.139
  %29 = load i32, i32* @y.140
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %27
  %36 = load i32, i32* %4, align 4
  %37 = icmp slt i32 %36, 20
  %38 = load i32, i32* @x.139
  %39 = load i32, i32* @y.140
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:46:                                     ; preds = %originalBBpart2, %19
  %47 = phi i1 [ false, %19 ], [ %37, %originalBBpart2 ]
  br i1 %47, label %48, label %72

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* %2, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %50
  %52 = getelementptr inbounds %struct.string_data, %struct.string_data* %51, i32 0, i32 4
  %53 = load i32, i32* %4, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20 x i32], [20 x i32]* %52, i64 0, i64 %54
  %56 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %57 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %56, i32 0, i32 0
  store i32* %55, i32** %57, align 8
  %58 = load i32, i32* %2, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %59
  %61 = getelementptr inbounds %struct.string_data, %struct.string_data* %60, i32 0, i32 4
  %62 = load i32, i32* %4, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [20 x i32], [20 x i32]* %61, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %67 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %66, i32 1
  store %struct.change_stack_entry* %67, %struct.change_stack_entry** @change_stack_pointer, align 8
  %68 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %66, i32 0, i32 1
  store i32 %65, i32* %68, align 8
  br label %69

; <label>:69:                                     ; preds = %48
  %70 = load i32, i32* %4, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %4, align 4
  br label %19

; <label>:72:                                     ; preds = %46
  %73 = load i32, i32* %2, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %74
  %76 = getelementptr inbounds %struct.string_data, %struct.string_data* %75, i32 0, i32 3
  store i32 0, i32* %76, align 4
  %77 = load i32, i32* @liberty_mark, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* @liberty_mark, align 4
  %79 = load i32, i32* %2, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %80
  %82 = getelementptr inbounds %struct.string_data, %struct.string_data* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 8
  store i32 %83, i32* %3, align 4
  br label %84

; <label>:84:                                     ; preds = %originalBBpart2115, %72
  %85 = load i32, i32* %3, align 4
  %86 = add nsw i32 %85, 20
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %199

; <label>:92:                                     ; preds = %84
  %93 = load i32, i32* @x.139
  %94 = load i32, i32* @y.140
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %92
  %101 = load i32, i32* %3, align 4
  %102 = add nsw i32 %101, 20
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = load i32, i32* @liberty_mark, align 4
  %107 = icmp ne i32 %105, %106
  %108 = load i32, i32* @x.139
  %109 = load i32, i32* @y.140
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %107, label %116, label %199

; <label>:116:                                    ; preds = %originalBBpart24
  %117 = load i32, i32* @x.139
  %118 = load i32, i32* @y.140
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %116
  %125 = load i32, i32* @x.139
  %126 = load i32, i32* @y.140
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %133

; <label>:133:                                    ; preds = %originalBBpart28
  %134 = load i32, i32* @x.139
  %135 = load i32, i32* @y.140
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %133
  %142 = load i32, i32* %2, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %143
  %145 = getelementptr inbounds %struct.string_data, %struct.string_data* %144, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = icmp slt i32 %146, 20
  %148 = load i32, i32* @x.139
  %149 = load i32, i32* @y.140
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %147, label %156, label %170

; <label>:156:                                    ; preds = %originalBBpart212
  %157 = load i32, i32* %3, align 4
  %158 = add nsw i32 %157, 20
  %159 = load i32, i32* %2, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %160
  %162 = getelementptr inbounds %struct.string_data, %struct.string_data* %161, i32 0, i32 4
  %163 = load i32, i32* %2, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %164
  %166 = getelementptr inbounds %struct.string_data, %struct.string_data* %165, i32 0, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [20 x i32], [20 x i32]* %162, i64 0, i64 %168
  store i32 %158, i32* %169, align 4
  br label %170

; <label>:170:                                    ; preds = %156, %originalBBpart212
  %171 = load i32, i32* %2, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %172
  %174 = getelementptr inbounds %struct.string_data, %struct.string_data* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %174, align 4
  %177 = load i32, i32* @liberty_mark, align 4
  %178 = load i32, i32* %3, align 4
  %179 = add nsw i32 %178, 20
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %180
  store i32 %177, i32* %181, align 4
  br label %182

; <label>:182:                                    ; preds = %170
  %183 = load i32, i32* @x.139
  %184 = load i32, i32* @y.140
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %182
  %191 = load i32, i32* @x.139
  %192 = load i32, i32* @y.140
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %199

; <label>:199:                                    ; preds = %originalBBpart216, %originalBBpart24, %84
  %200 = load i32, i32* %3, align 4
  %201 = sub nsw i32 %200, 1
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %298

; <label>:207:                                    ; preds = %199
  %208 = load i32, i32* %3, align 4
  %209 = sub nsw i32 %208, 1
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = load i32, i32* @liberty_mark, align 4
  %214 = icmp ne i32 %212, %213
  br i1 %214, label %215, label %298

; <label>:215:                                    ; preds = %207
  %216 = load i32, i32* @x.139
  %217 = load i32, i32* @y.140
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %215
  %224 = load i32, i32* @x.139
  %225 = load i32, i32* @y.140
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %232

; <label>:232:                                    ; preds = %originalBBpart220
  %233 = load i32, i32* @x.139
  %234 = load i32, i32* @y.140
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %232
  %241 = load i32, i32* %2, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %242
  %244 = getelementptr inbounds %struct.string_data, %struct.string_data* %243, i32 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = icmp slt i32 %245, 20
  %247 = load i32, i32* @x.139
  %248 = load i32, i32* @y.140
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %246, label %255, label %269

; <label>:255:                                    ; preds = %originalBBpart224
  %256 = load i32, i32* %3, align 4
  %257 = sub nsw i32 %256, 1
  %258 = load i32, i32* %2, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %259
  %261 = getelementptr inbounds %struct.string_data, %struct.string_data* %260, i32 0, i32 4
  %262 = load i32, i32* %2, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %263
  %265 = getelementptr inbounds %struct.string_data, %struct.string_data* %264, i32 0, i32 3
  %266 = load i32, i32* %265, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [20 x i32], [20 x i32]* %261, i64 0, i64 %267
  store i32 %257, i32* %268, align 4
  br label %269

; <label>:269:                                    ; preds = %255, %originalBBpart224
  %270 = load i32, i32* %2, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %271
  %273 = getelementptr inbounds %struct.string_data, %struct.string_data* %272, i32 0, i32 3
  %274 = load i32, i32* %273, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %273, align 4
  %276 = load i32, i32* @liberty_mark, align 4
  %277 = load i32, i32* %3, align 4
  %278 = sub nsw i32 %277, 1
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %279
  store i32 %276, i32* %280, align 4
  br label %281

; <label>:281:                                    ; preds = %269
  %282 = load i32, i32* @x.139
  %283 = load i32, i32* @y.140
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %281
  %290 = load i32, i32* @x.139
  %291 = load i32, i32* @y.140
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %298

; <label>:298:                                    ; preds = %originalBBpart228, %207, %199
  %299 = load i32, i32* %3, align 4
  %300 = sub nsw i32 %299, 20
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i32
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %397

; <label>:306:                                    ; preds = %298
  %307 = load i32, i32* %3, align 4
  %308 = sub nsw i32 %307, 20
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = load i32, i32* @liberty_mark, align 4
  %313 = icmp ne i32 %311, %312
  br i1 %313, label %314, label %397

; <label>:314:                                    ; preds = %306
  %315 = load i32, i32* @x.139
  %316 = load i32, i32* @y.140
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %314
  %323 = load i32, i32* @x.139
  %324 = load i32, i32* @y.140
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %331

; <label>:331:                                    ; preds = %originalBBpart232
  %332 = load i32, i32* %2, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %333
  %335 = getelementptr inbounds %struct.string_data, %struct.string_data* %334, i32 0, i32 3
  %336 = load i32, i32* %335, align 4
  %337 = icmp slt i32 %336, 20
  br i1 %337, label %338, label %368

; <label>:338:                                    ; preds = %331
  %339 = load i32, i32* @x.139
  %340 = load i32, i32* @y.140
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %338
  %347 = load i32, i32* %3, align 4
  %348 = sub nsw i32 %347, 20
  %349 = load i32, i32* %2, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %350
  %352 = getelementptr inbounds %struct.string_data, %struct.string_data* %351, i32 0, i32 4
  %353 = load i32, i32* %2, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %354
  %356 = getelementptr inbounds %struct.string_data, %struct.string_data* %355, i32 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds [20 x i32], [20 x i32]* %352, i64 0, i64 %358
  store i32 %348, i32* %359, align 4
  %360 = load i32, i32* @x.139
  %361 = load i32, i32* @y.140
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart248, label %originalBB34alteredBB

originalBBpart248:                                ; preds = %originalBB34
  br label %368

; <label>:368:                                    ; preds = %originalBBpart248, %331
  %369 = load i32, i32* %2, align 4
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %370
  %372 = getelementptr inbounds %struct.string_data, %struct.string_data* %371, i32 0, i32 3
  %373 = load i32, i32* %372, align 4
  %374 = add nsw i32 %373, 1
  store i32 %374, i32* %372, align 4
  %375 = load i32, i32* @liberty_mark, align 4
  %376 = load i32, i32* %3, align 4
  %377 = sub nsw i32 %376, 20
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %378
  store i32 %375, i32* %379, align 4
  br label %380

; <label>:380:                                    ; preds = %368
  %381 = load i32, i32* @x.139
  %382 = load i32, i32* @y.140
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %380
  %389 = load i32, i32* @x.139
  %390 = load i32, i32* @y.140
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %397

; <label>:397:                                    ; preds = %originalBBpart252, %306, %298
  %398 = load i32, i32* %3, align 4
  %399 = add nsw i32 %398, 1
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %400
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i32
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %496

; <label>:405:                                    ; preds = %397
  %406 = load i32, i32* @x.139
  %407 = load i32, i32* @y.140
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %405
  %414 = load i32, i32* %3, align 4
  %415 = add nsw i32 %414, 1
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = load i32, i32* @liberty_mark, align 4
  %420 = icmp ne i32 %418, %419
  %421 = load i32, i32* @x.139
  %422 = load i32, i32* @y.140
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart261, label %originalBB54alteredBB

originalBBpart261:                                ; preds = %originalBB54
  br i1 %420, label %429, label %496

; <label>:429:                                    ; preds = %originalBBpart261
  br label %430

; <label>:430:                                    ; preds = %429
  %431 = load i32, i32* %2, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %432
  %434 = getelementptr inbounds %struct.string_data, %struct.string_data* %433, i32 0, i32 3
  %435 = load i32, i32* %434, align 4
  %436 = icmp slt i32 %435, 20
  br i1 %436, label %437, label %467

; <label>:437:                                    ; preds = %430
  %438 = load i32, i32* @x.139
  %439 = load i32, i32* @y.140
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %437
  %446 = load i32, i32* %3, align 4
  %447 = add nsw i32 %446, 1
  %448 = load i32, i32* %2, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %449
  %451 = getelementptr inbounds %struct.string_data, %struct.string_data* %450, i32 0, i32 4
  %452 = load i32, i32* %2, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %453
  %455 = getelementptr inbounds %struct.string_data, %struct.string_data* %454, i32 0, i32 3
  %456 = load i32, i32* %455, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [20 x i32], [20 x i32]* %451, i64 0, i64 %457
  store i32 %447, i32* %458, align 4
  %459 = load i32, i32* @x.139
  %460 = load i32, i32* @y.140
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart278, label %originalBB63alteredBB

originalBBpart278:                                ; preds = %originalBB63
  br label %467

; <label>:467:                                    ; preds = %originalBBpart278, %430
  %468 = load i32, i32* @x.139
  %469 = load i32, i32* @y.140
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %467
  %476 = load i32, i32* %2, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %477
  %479 = getelementptr inbounds %struct.string_data, %struct.string_data* %478, i32 0, i32 3
  %480 = load i32, i32* %479, align 4
  %481 = add nsw i32 %480, 1
  store i32 %481, i32* %479, align 4
  %482 = load i32, i32* @liberty_mark, align 4
  %483 = load i32, i32* %3, align 4
  %484 = add nsw i32 %483, 1
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %485
  store i32 %482, i32* %486, align 4
  %487 = load i32, i32* @x.139
  %488 = load i32, i32* @y.140
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart2102, label %originalBB80alteredBB

originalBBpart2102:                               ; preds = %originalBB80
  br label %495

; <label>:495:                                    ; preds = %originalBBpart2102
  br label %496

; <label>:496:                                    ; preds = %495, %originalBBpart261, %397
  %497 = load i32, i32* %3, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %498
  %500 = load i32, i32* %499, align 4
  store i32 %500, i32* %3, align 4
  br label %501

; <label>:501:                                    ; preds = %496
  %502 = load i32, i32* @x.139
  %503 = load i32, i32* @y.140
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %originalBB104alteredBB, %501
  %510 = load i32, i32* %3, align 4
  %511 = load i32, i32* %2, align 4
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %512
  %514 = getelementptr inbounds %struct.string_data, %struct.string_data* %513, i32 0, i32 2
  %515 = load i32, i32* %514, align 8
  %516 = icmp eq i32 %510, %515
  %517 = xor i1 %516, true
  %518 = load i32, i32* @x.139
  %519 = load i32, i32* @y.140
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBBpart2115, label %originalBB104alteredBB

originalBBpart2115:                               ; preds = %originalBB104
  br i1 %517, label %84, label %526

; <label>:526:                                    ; preds = %originalBBpart2115
  %527 = load i32, i32* @x.139
  %528 = load i32, i32* @y.140
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %526
  %535 = load i32, i32* @x.139
  %536 = load i32, i32* @y.140
  %537 = sub i32 %535, 1
  %538 = mul i32 %535, %537
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %540, %541
  br i1 %542, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %27
  %543 = load i32, i32* %4, align 4
  %544 = icmp slt i32 %543, 20
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %92
  %545 = load i32, i32* %3, align 4
  %_ = sub i32 0, %545
  %gen = add i32 %_, 20
  %546 = add nsw i32 %545, 20
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %547
  %549 = load i32, i32* %548, align 4
  %550 = load i32, i32* @liberty_mark, align 4
  %551 = icmp ne i32 %549, %550
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %116
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %133
  %552 = load i32, i32* %2, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %553
  %555 = getelementptr inbounds %struct.string_data, %struct.string_data* %554, i32 0, i32 3
  %556 = load i32, i32* %555, align 4
  %557 = icmp slt i32 %556, 20
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %182
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %215
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %232
  %558 = load i32, i32* %2, align 4
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %559
  %561 = getelementptr inbounds %struct.string_data, %struct.string_data* %560, i32 0, i32 3
  %562 = load i32, i32* %561, align 4
  %563 = icmp slt i32 %562, 20
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %281
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %314
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %338
  %564 = load i32, i32* %3, align 4
  %_35 = shl i32 %564, 20
  %_36 = shl i32 %564, 20
  %_37 = sub i32 %564, 20
  %gen38 = mul i32 %_37, 20
  %_39 = sub i32 0, %564
  %gen40 = add i32 %_39, 20
  %_41 = sub i32 %564, 20
  %gen42 = mul i32 %_41, 20
  %_43 = sub i32 0, %564
  %gen44 = add i32 %_43, 20
  %_45 = sub i32 0, %564
  %gen46 = add i32 %_45, 20
  %565 = sub nsw i32 %564, 20
  %566 = load i32, i32* %2, align 4
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %567
  %569 = getelementptr inbounds %struct.string_data, %struct.string_data* %568, i32 0, i32 4
  %570 = load i32, i32* %2, align 4
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %571
  %573 = getelementptr inbounds %struct.string_data, %struct.string_data* %572, i32 0, i32 3
  %574 = load i32, i32* %573, align 4
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds [20 x i32], [20 x i32]* %569, i64 0, i64 %575
  store i32 %565, i32* %576, align 4
  br label %originalBB34

originalBB50alteredBB:                            ; preds = %originalBB50, %380
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %405
  %577 = load i32, i32* %3, align 4
  %_55 = sub i32 0, %577
  %gen56 = add i32 %_55, 1
  %_57 = sub i32 %577, 1
  %gen58 = mul i32 %_57, 1
  %_59 = shl i32 %577, 1
  %578 = add nsw i32 %577, 1
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = load i32, i32* @liberty_mark, align 4
  %583 = icmp ne i32 %581, %582
  br label %originalBB54

originalBB63alteredBB:                            ; preds = %originalBB63, %437
  %584 = load i32, i32* %3, align 4
  %_64 = sub i32 %584, 1
  %gen65 = mul i32 %_64, 1
  %_66 = sub i32 0, %584
  %gen67 = add i32 %_66, 1
  %_68 = shl i32 %584, 1
  %_69 = sub i32 %584, 1
  %gen70 = mul i32 %_69, 1
  %_71 = sub i32 0, %584
  %gen72 = add i32 %_71, 1
  %_73 = sub i32 0, %584
  %gen74 = add i32 %_73, 1
  %_75 = sub i32 0, %584
  %gen76 = add i32 %_75, 1
  %585 = add nsw i32 %584, 1
  %586 = load i32, i32* %2, align 4
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %587
  %589 = getelementptr inbounds %struct.string_data, %struct.string_data* %588, i32 0, i32 4
  %590 = load i32, i32* %2, align 4
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %591
  %593 = getelementptr inbounds %struct.string_data, %struct.string_data* %592, i32 0, i32 3
  %594 = load i32, i32* %593, align 4
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [20 x i32], [20 x i32]* %589, i64 0, i64 %595
  store i32 %585, i32* %596, align 4
  br label %originalBB63

originalBB80alteredBB:                            ; preds = %originalBB80, %467
  %597 = load i32, i32* %2, align 4
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %598
  %600 = getelementptr inbounds %struct.string_data, %struct.string_data* %599, i32 0, i32 3
  %601 = load i32, i32* %600, align 4
  %_81 = sub i32 0, %601
  %gen82 = add i32 %_81, 1
  %_83 = shl i32 %601, 1
  %602 = add nsw i32 %601, 1
  store i32 %602, i32* %600, align 4
  %603 = load i32, i32* @liberty_mark, align 4
  %604 = load i32, i32* %3, align 4
  %_84 = sub i32 0, %604
  %gen85 = add i32 %_84, 1
  %_86 = sub i32 %604, 1
  %gen87 = mul i32 %_86, 1
  %_88 = sub i32 0, %604
  %gen89 = add i32 %_88, 1
  %_90 = sub i32 0, %604
  %gen91 = add i32 %_90, 1
  %_92 = shl i32 %604, 1
  %_93 = sub i32 %604, 1
  %gen94 = mul i32 %_93, 1
  %_95 = shl i32 %604, 1
  %_96 = sub i32 %604, 1
  %gen97 = mul i32 %_96, 1
  %_98 = sub i32 %604, 1
  %gen99 = mul i32 %_98, 1
  %_100 = shl i32 %604, 1
  %605 = add nsw i32 %604, 1
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %606
  store i32 %603, i32* %607, align 4
  br label %originalBB80

originalBB104alteredBB:                           ; preds = %originalBB104, %501
  %608 = load i32, i32* %3, align 4
  %609 = load i32, i32* %2, align 4
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %610
  %612 = getelementptr inbounds %struct.string_data, %struct.string_data* %611, i32 0, i32 2
  %613 = load i32, i32* %612, align 8
  %614 = icmp eq i32 %608, %613
  %_105 = shl i1 %614, true
  %_106 = sub i1 false, %614
  %gen107 = add i1 %_106, true
  %_108 = sub i1 %614, true
  %gen109 = mul i1 %_108, true
  %_110 = shl i1 %614, true
  %_111 = sub i1 false, %614
  %gen112 = add i1 %_111, true
  %_113 = shl i1 %614, true
  %615 = xor i1 %614, true
  br label %originalBB104

originalBB117alteredBB:                           ; preds = %originalBB117, %526
  br label %originalBB117
}

; Function Attrs: noinline nounwind uwtable
define internal void @assimilate_string(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %16
  %18 = getelementptr inbounds %struct.string_data, %struct.string_data* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %3, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %21
  %23 = getelementptr inbounds %struct.string_data, %struct.string_data* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, %19
  store i32 %25, i32* %23, align 4
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %27
  %29 = getelementptr inbounds %struct.string_data, %struct.string_data* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %4, align 4
  br label %31

; <label>:31:                                     ; preds = %69, %2
  %32 = load i32, i32* @x.141
  %33 = load i32, i32* @y.142
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %31
  %40 = load i32, i32* %4, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %41
  %43 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %44 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %43, i32 0, i32 0
  store i32* %42, i32** %44, align 8
  %45 = load i32, i32* %4, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %50 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %49, i32 1
  store %struct.change_stack_entry* %50, %struct.change_stack_entry** @change_stack_pointer, align 8
  %51 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %49, i32 0, i32 1
  store i32 %48, i32* %51, align 8
  %52 = load i32, i32* %3, align 4
  %53 = load i32, i32* %4, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %54
  store i32 %52, i32* %55, align 4
  %56 = load i32, i32* %4, align 4
  store i32 %56, i32* %6, align 4
  %57 = load i32, i32* %4, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %4, align 4
  %61 = load i32, i32* @x.141
  %62 = load i32, i32* @y.142
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %69

; <label>:69:                                     ; preds = %originalBBpart2
  %70 = load i32, i32* %4, align 4
  %71 = load i32, i32* %7, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %72
  %74 = getelementptr inbounds %struct.string_data, %struct.string_data* %73, i32 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %70, %75
  %77 = xor i1 %76, true
  br i1 %77, label %31, label %78

; <label>:78:                                     ; preds = %69
  %79 = load i32, i32* %3, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %80
  %82 = getelementptr inbounds %struct.string_data, %struct.string_data* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 8
  store i32 %83, i32* %8, align 4
  %84 = load i32, i32* %6, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %85
  %87 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %88 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %87, i32 0, i32 0
  store i32* %86, i32** %88, align 8
  %89 = load i32, i32* %6, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %94 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %93, i32 1
  store %struct.change_stack_entry* %94, %struct.change_stack_entry** @change_stack_pointer, align 8
  %95 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %93, i32 0, i32 1
  store i32 %92, i32* %95, align 8
  %96 = load i32, i32* %8, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %97
  %99 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %100 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %99, i32 0, i32 0
  store i32* %98, i32** %100, align 8
  %101 = load i32, i32* %8, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %106 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %105, i32 1
  store %struct.change_stack_entry* %106, %struct.change_stack_entry** @change_stack_pointer, align 8
  %107 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %105, i32 0, i32 1
  store i32 %104, i32* %107, align 8
  %108 = load i32, i32* %8, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = load i32, i32* %6, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %113
  store i32 %111, i32* %114, align 4
  %115 = load i32, i32* %7, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %116
  %118 = getelementptr inbounds %struct.string_data, %struct.string_data* %117, i32 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = load i32, i32* %8, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %121
  store i32 %119, i32* %122, align 4
  %123 = load i32, i32* %7, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %124
  %126 = getelementptr inbounds %struct.string_data, %struct.string_data* %125, i32 0, i32 2
  %127 = load i32, i32* %126, align 8
  %128 = load i32, i32* %8, align 4
  %129 = icmp slt i32 %127, %128
  br i1 %129, label %130, label %156

; <label>:130:                                    ; preds = %78
  %131 = load i32, i32* @x.141
  %132 = load i32, i32* @y.142
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %130
  %139 = load i32, i32* %7, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %140
  %142 = getelementptr inbounds %struct.string_data, %struct.string_data* %141, i32 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = load i32, i32* %3, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %145
  %147 = getelementptr inbounds %struct.string_data, %struct.string_data* %146, i32 0, i32 2
  store i32 %143, i32* %147, align 8
  %148 = load i32, i32* @x.141
  %149 = load i32, i32* @y.142
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %156

; <label>:156:                                    ; preds = %originalBBpart24, %78
  %157 = load i32, i32* %7, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %158
  %160 = getelementptr inbounds %struct.string_data, %struct.string_data* %159, i32 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = icmp sle i32 %161, 20
  br i1 %162, label %163, label %280

; <label>:163:                                    ; preds = %156
  store i32 0, i32* %5, align 4
  br label %164

; <label>:164:                                    ; preds = %260, %163
  %165 = load i32, i32* @x.141
  %166 = load i32, i32* @y.142
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %164
  %173 = load i32, i32* %5, align 4
  %174 = load i32, i32* %7, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %175
  %177 = getelementptr inbounds %struct.string_data, %struct.string_data* %176, i32 0, i32 3
  %178 = load i32, i32* %177, align 4
  %179 = icmp slt i32 %173, %178
  %180 = load i32, i32* @x.141
  %181 = load i32, i32* @y.142
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %179, label %188, label %263

; <label>:188:                                    ; preds = %originalBBpart28
  %189 = load i32, i32* %7, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %190
  %192 = getelementptr inbounds %struct.string_data, %struct.string_data* %191, i32 0, i32 4
  %193 = load i32, i32* %5, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [20 x i32], [20 x i32]* %192, i64 0, i64 %194
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %9, align 4
  %197 = load i32, i32* %9, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %259

; <label>:203:                                    ; preds = %188
  %204 = load i32, i32* %9, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = load i32, i32* @liberty_mark, align 4
  %209 = icmp ne i32 %207, %208
  br i1 %209, label %210, label %259

; <label>:210:                                    ; preds = %203
  br label %211

; <label>:211:                                    ; preds = %210
  %212 = load i32, i32* %3, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %213
  %215 = getelementptr inbounds %struct.string_data, %struct.string_data* %214, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = icmp slt i32 %216, 20
  br i1 %217, label %218, label %231

; <label>:218:                                    ; preds = %211
  %219 = load i32, i32* %9, align 4
  %220 = load i32, i32* %3, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %221
  %223 = getelementptr inbounds %struct.string_data, %struct.string_data* %222, i32 0, i32 4
  %224 = load i32, i32* %3, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %225
  %227 = getelementptr inbounds %struct.string_data, %struct.string_data* %226, i32 0, i32 3
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [20 x i32], [20 x i32]* %223, i64 0, i64 %229
  store i32 %219, i32* %230, align 4
  br label %231

; <label>:231:                                    ; preds = %218, %211
  %232 = load i32, i32* %3, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %233
  %235 = getelementptr inbounds %struct.string_data, %struct.string_data* %234, i32 0, i32 3
  %236 = load i32, i32* %235, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %235, align 4
  %238 = load i32, i32* @liberty_mark, align 4
  %239 = load i32, i32* %9, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %240
  store i32 %238, i32* %241, align 4
  br label %242

; <label>:242:                                    ; preds = %231
  %243 = load i32, i32* @x.141
  %244 = load i32, i32* @y.142
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %242
  %251 = load i32, i32* @x.141
  %252 = load i32, i32* @y.142
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %259

; <label>:259:                                    ; preds = %originalBBpart212, %203, %188
  br label %260

; <label>:260:                                    ; preds = %259
  %261 = load i32, i32* %5, align 4
  %262 = add nsw i32 %261, 1
  store i32 %262, i32* %5, align 4
  br label %164

; <label>:263:                                    ; preds = %originalBBpart28
  %264 = load i32, i32* @x.141
  %265 = load i32, i32* @y.142
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %263
  %272 = load i32, i32* @x.141
  %273 = load i32, i32* @y.142
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %288

; <label>:280:                                    ; preds = %156
  %281 = load i32, i32* @liberty_mark, align 4
  %282 = add nsw i32 %281, 1
  store i32 %282, i32* @liberty_mark, align 4
  %283 = load i32, i32* %3, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %284
  %286 = getelementptr inbounds %struct.string_data, %struct.string_data* %285, i32 0, i32 3
  store i32 0, i32* %286, align 4
  %287 = load i32, i32* %3, align 4
  call void @update_liberties(i32 %287)
  br label %288

; <label>:288:                                    ; preds = %280, %originalBBpart216
  store i32 0, i32* %5, align 4
  br label %289

; <label>:289:                                    ; preds = %410, %288
  %290 = load i32, i32* @x.141
  %291 = load i32, i32* @y.142
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %289
  %298 = load i32, i32* %5, align 4
  %299 = load i32, i32* %7, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %300
  %302 = getelementptr inbounds %struct.string_data, %struct.string_data* %301, i32 0, i32 5
  %303 = load i32, i32* %302, align 8
  %304 = icmp slt i32 %298, %303
  %305 = load i32, i32* @x.141
  %306 = load i32, i32* @y.142
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %304, label %313, label %413

; <label>:313:                                    ; preds = %originalBBpart220
  %314 = load i32, i32* @x.141
  %315 = load i32, i32* @y.142
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %313
  %322 = load i32, i32* %7, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %323
  %325 = getelementptr inbounds %struct.string_data, %struct.string_data* %324, i32 0, i32 6
  %326 = load i32, i32* %5, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds [160 x i32], [160 x i32]* %325, i64 0, i64 %327
  %329 = load i32, i32* %328, align 4
  store i32 %329, i32* %10, align 4
  %330 = load i32, i32* %10, align 4
  %331 = load i32, i32* %7, align 4
  call void @remove_neighbor(i32 %330, i32 %331)
  %332 = load i32, i32* %10, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %333
  %335 = getelementptr inbounds %struct.string_data, %struct.string_data* %334, i32 0, i32 7
  %336 = load i32, i32* %335, align 4
  %337 = load i32, i32* @string_mark, align 4
  %338 = icmp ne i32 %336, %337
  %339 = load i32, i32* @x.141
  %340 = load i32, i32* @y.142
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %338, label %347, label %409

; <label>:347:                                    ; preds = %originalBBpart224
  %348 = load i32, i32* @x.141
  %349 = load i32, i32* @y.142
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %347
  %356 = load i32, i32* %10, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %357
  %359 = getelementptr inbounds %struct.string_data, %struct.string_data* %358, i32 0, i32 5
  %360 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %361 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %360, i32 0, i32 0
  store i32* %359, i32** %361, align 8
  %362 = load i32, i32* %10, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %363
  %365 = getelementptr inbounds %struct.string_data, %struct.string_data* %364, i32 0, i32 5
  %366 = load i32, i32* %365, align 8
  %367 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %368 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %367, i32 1
  store %struct.change_stack_entry* %368, %struct.change_stack_entry** @change_stack_pointer, align 8
  %369 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %367, i32 0, i32 1
  store i32 %366, i32* %369, align 8
  %370 = load i32, i32* %3, align 4
  %371 = load i32, i32* %10, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %372
  %374 = getelementptr inbounds %struct.string_data, %struct.string_data* %373, i32 0, i32 6
  %375 = load i32, i32* %10, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %376
  %378 = getelementptr inbounds %struct.string_data, %struct.string_data* %377, i32 0, i32 5
  %379 = load i32, i32* %378, align 8
  %380 = add nsw i32 %379, 1
  store i32 %380, i32* %378, align 8
  %381 = sext i32 %379 to i64
  %382 = getelementptr inbounds [160 x i32], [160 x i32]* %374, i64 0, i64 %381
  store i32 %370, i32* %382, align 4
  %383 = load i32, i32* %10, align 4
  %384 = load i32, i32* %3, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %385
  %387 = getelementptr inbounds %struct.string_data, %struct.string_data* %386, i32 0, i32 6
  %388 = load i32, i32* %3, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %389
  %391 = getelementptr inbounds %struct.string_data, %struct.string_data* %390, i32 0, i32 5
  %392 = load i32, i32* %391, align 8
  %393 = add nsw i32 %392, 1
  store i32 %393, i32* %391, align 8
  %394 = sext i32 %392 to i64
  %395 = getelementptr inbounds [160 x i32], [160 x i32]* %387, i64 0, i64 %394
  store i32 %383, i32* %395, align 4
  %396 = load i32, i32* @string_mark, align 4
  %397 = load i32, i32* %10, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %398
  %400 = getelementptr inbounds %struct.string_data, %struct.string_data* %399, i32 0, i32 7
  store i32 %396, i32* %400, align 4
  %401 = load i32, i32* @x.141
  %402 = load i32, i32* @y.142
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %409

; <label>:409:                                    ; preds = %originalBBpart228, %originalBBpart224
  br label %410

; <label>:410:                                    ; preds = %409
  %411 = load i32, i32* %5, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %5, align 4
  br label %289

; <label>:413:                                    ; preds = %originalBBpart220
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %31
  %414 = load i32, i32* %4, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %415
  %417 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %418 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %417, i32 0, i32 0
  store i32* %416, i32** %418, align 8
  %419 = load i32, i32* %4, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %424 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %423, i32 1
  store %struct.change_stack_entry* %424, %struct.change_stack_entry** @change_stack_pointer, align 8
  %425 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %423, i32 0, i32 1
  store i32 %422, i32* %425, align 8
  %426 = load i32, i32* %3, align 4
  %427 = load i32, i32* %4, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %428
  store i32 %426, i32* %429, align 4
  %430 = load i32, i32* %4, align 4
  store i32 %430, i32* %6, align 4
  %431 = load i32, i32* %4, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %432
  %434 = load i32, i32* %433, align 4
  store i32 %434, i32* %4, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %130
  %435 = load i32, i32* %7, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %436
  %438 = getelementptr inbounds %struct.string_data, %struct.string_data* %437, i32 0, i32 2
  %439 = load i32, i32* %438, align 8
  %440 = load i32, i32* %3, align 4
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %441
  %443 = getelementptr inbounds %struct.string_data, %struct.string_data* %442, i32 0, i32 2
  store i32 %439, i32* %443, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %164
  %444 = load i32, i32* %5, align 4
  %445 = load i32, i32* %7, align 4
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %446
  %448 = getelementptr inbounds %struct.string_data, %struct.string_data* %447, i32 0, i32 3
  %449 = load i32, i32* %448, align 4
  %450 = icmp slt i32 %444, %449
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %242
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %263
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %289
  %451 = load i32, i32* %5, align 4
  %452 = load i32, i32* %7, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %453
  %455 = getelementptr inbounds %struct.string_data, %struct.string_data* %454, i32 0, i32 5
  %456 = load i32, i32* %455, align 8
  %457 = icmp slt i32 %451, %456
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %313
  %458 = load i32, i32* %7, align 4
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %459
  %461 = getelementptr inbounds %struct.string_data, %struct.string_data* %460, i32 0, i32 6
  %462 = load i32, i32* %5, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [160 x i32], [160 x i32]* %461, i64 0, i64 %463
  %465 = load i32, i32* %464, align 4
  store i32 %465, i32* %10, align 4
  %466 = load i32, i32* %10, align 4
  %467 = load i32, i32* %7, align 4
  call void @remove_neighbor(i32 %466, i32 %467)
  %468 = load i32, i32* %10, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %469
  %471 = getelementptr inbounds %struct.string_data, %struct.string_data* %470, i32 0, i32 7
  %472 = load i32, i32* %471, align 4
  %473 = load i32, i32* @string_mark, align 4
  %474 = icmp ne i32 %472, %473
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %347
  %475 = load i32, i32* %10, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %476
  %478 = getelementptr inbounds %struct.string_data, %struct.string_data* %477, i32 0, i32 5
  %479 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %480 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %479, i32 0, i32 0
  store i32* %478, i32** %480, align 8
  %481 = load i32, i32* %10, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %482
  %484 = getelementptr inbounds %struct.string_data, %struct.string_data* %483, i32 0, i32 5
  %485 = load i32, i32* %484, align 8
  %486 = load %struct.change_stack_entry*, %struct.change_stack_entry** @change_stack_pointer, align 8
  %487 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %486, i32 1
  store %struct.change_stack_entry* %487, %struct.change_stack_entry** @change_stack_pointer, align 8
  %488 = getelementptr inbounds %struct.change_stack_entry, %struct.change_stack_entry* %486, i32 0, i32 1
  store i32 %485, i32* %488, align 8
  %489 = load i32, i32* %3, align 4
  %490 = load i32, i32* %10, align 4
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %491
  %493 = getelementptr inbounds %struct.string_data, %struct.string_data* %492, i32 0, i32 6
  %494 = load i32, i32* %10, align 4
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %495
  %497 = getelementptr inbounds %struct.string_data, %struct.string_data* %496, i32 0, i32 5
  %498 = load i32, i32* %497, align 8
  %499 = add nsw i32 %498, 1
  store i32 %499, i32* %497, align 8
  %500 = sext i32 %498 to i64
  %501 = getelementptr inbounds [160 x i32], [160 x i32]* %493, i64 0, i64 %500
  store i32 %489, i32* %501, align 4
  %502 = load i32, i32* %10, align 4
  %503 = load i32, i32* %3, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %504
  %506 = getelementptr inbounds %struct.string_data, %struct.string_data* %505, i32 0, i32 6
  %507 = load i32, i32* %3, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %508
  %510 = getelementptr inbounds %struct.string_data, %struct.string_data* %509, i32 0, i32 5
  %511 = load i32, i32* %510, align 8
  %_ = sub i32 %511, 1
  %gen = mul i32 %_, 1
  %512 = add nsw i32 %511, 1
  store i32 %512, i32* %510, align 8
  %513 = sext i32 %511 to i64
  %514 = getelementptr inbounds [160 x i32], [160 x i32]* %506, i64 0, i64 %513
  store i32 %502, i32* %514, align 4
  %515 = load i32, i32* @string_mark, align 4
  %516 = load i32, i32* %10, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %517
  %519 = getelementptr inbounds %struct.string_data, %struct.string_data* %518, i32 0, i32 7
  store i32 %515, i32* %519, align 4
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @propagate_string(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 1, i32* %5, align 4
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %11, label %16

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %3, align 4
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %14
  store i32 %12, i32* %15, align 4
  br label %35

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* %4, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %3, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %22
  store i32 %20, i32* %23, align 4
  %24 = load i32, i32* %4, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* %3, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %29
  store i32 %27, i32* %30, align 4
  %31 = load i32, i32* %3, align 4
  %32 = load i32, i32* %4, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %33
  store i32 %31, i32* %34, align 4
  br label %35

; <label>:35:                                     ; preds = %16, %11
  store i32 0, i32* %6, align 4
  br label %36

; <label>:36:                                     ; preds = %99, %35
  %37 = load i32, i32* @x.143
  %38 = load i32, i32* @y.144
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i32, i32* %6, align 4
  %46 = icmp slt i32 %45, 4
  %47 = load i32, i32* @x.143
  %48 = load i32, i32* @y.144
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %55, label %102

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load i32, i32* %6, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [8 x i32], [8 x i32]* @delta, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %7, align 4
  %60 = load i32, i32* %3, align 4
  %61 = load i32, i32* %7, align 4
  %62 = add nsw i32 %60, %61
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = icmp ne i32 %66, 3
  br i1 %67, label %68, label %98

; <label>:68:                                     ; preds = %55
  %69 = load i32, i32* %3, align 4
  %70 = load i32, i32* %7, align 4
  %71 = add nsw i32 %69, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i32, i32* %3, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = icmp eq i32 %75, %80
  br i1 %81, label %82, label %98

; <label>:82:                                     ; preds = %68
  %83 = load i32, i32* %3, align 4
  %84 = load i32, i32* %7, align 4
  %85 = add nsw i32 %83, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %90, label %98

; <label>:90:                                     ; preds = %82
  %91 = load i32, i32* %3, align 4
  %92 = load i32, i32* %7, align 4
  %93 = add nsw i32 %91, %92
  %94 = load i32, i32* %4, align 4
  %95 = call i32 @propagate_string(i32 %93, i32 %94)
  %96 = load i32, i32* %5, align 4
  %97 = add nsw i32 %96, %95
  store i32 %97, i32* %5, align 4
  br label %98

; <label>:98:                                     ; preds = %90, %82, %68, %55
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* %6, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %6, align 4
  br label %36

; <label>:102:                                    ; preds = %originalBBpart2
  %103 = load i32, i32* %5, align 4
  ret i32 %103

originalBBalteredBB:                              ; preds = %originalBB, %36
  %104 = load i32, i32* %6, align 4
  %105 = icmp slt i32 %104, 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal void @find_liberties_and_neighbors(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %6
  %8 = getelementptr inbounds %struct.string_data, %struct.string_data* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sub nsw i32 3, %9
  store i32 %10, i32* %4, align 4
  %11 = load i32, i32* @liberty_mark, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* @liberty_mark, align 4
  %13 = load i32, i32* @string_mark, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @string_mark, align 4
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %16
  %18 = getelementptr inbounds %struct.string_data, %struct.string_data* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %3, align 4
  br label %20

; <label>:20:                                     ; preds = %713, %1
  %21 = load i32, i32* %3, align 4
  %22 = add nsw i32 %21, 20
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %135

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* %3, align 4
  %30 = add nsw i32 %29, 20
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* @liberty_mark, align 4
  %35 = icmp ne i32 %33, %34
  br i1 %35, label %36, label %135

; <label>:36:                                     ; preds = %28
  %37 = load i32, i32* @x.145
  %38 = load i32, i32* @y.146
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i32, i32* @x.145
  %46 = load i32, i32* @y.146
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %53

; <label>:53:                                     ; preds = %originalBBpart2
  %54 = load i32, i32* @x.145
  %55 = load i32, i32* @y.146
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %53
  %62 = load i32, i32* %2, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %63
  %65 = getelementptr inbounds %struct.string_data, %struct.string_data* %64, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 20
  %68 = load i32, i32* @x.145
  %69 = load i32, i32* @y.146
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %67, label %76, label %106

; <label>:76:                                     ; preds = %originalBBpart24
  %77 = load i32, i32* @x.145
  %78 = load i32, i32* @y.146
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %76
  %85 = load i32, i32* %3, align 4
  %86 = add nsw i32 %85, 20
  %87 = load i32, i32* %2, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %88
  %90 = getelementptr inbounds %struct.string_data, %struct.string_data* %89, i32 0, i32 4
  %91 = load i32, i32* %2, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %92
  %94 = getelementptr inbounds %struct.string_data, %struct.string_data* %93, i32 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [20 x i32], [20 x i32]* %90, i64 0, i64 %96
  store i32 %86, i32* %97, align 4
  %98 = load i32, i32* @x.145
  %99 = load i32, i32* @y.146
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart211, label %originalBB6alteredBB

originalBBpart211:                                ; preds = %originalBB6
  br label %106

; <label>:106:                                    ; preds = %originalBBpart211, %originalBBpart24
  %107 = load i32, i32* %2, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %108
  %110 = getelementptr inbounds %struct.string_data, %struct.string_data* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = load i32, i32* @liberty_mark, align 4
  %114 = load i32, i32* %3, align 4
  %115 = add nsw i32 %114, 20
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %116
  store i32 %113, i32* %117, align 4
  br label %118

; <label>:118:                                    ; preds = %106
  %119 = load i32, i32* @x.145
  %120 = load i32, i32* @y.146
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %118
  %127 = load i32, i32* @x.145
  %128 = load i32, i32* @y.146
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %184

; <label>:135:                                    ; preds = %28, %20
  %136 = load i32, i32* %3, align 4
  %137 = add nsw i32 %136, 20
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = load i32, i32* %4, align 4
  %143 = icmp eq i32 %141, %142
  br i1 %143, label %144, label %183

; <label>:144:                                    ; preds = %135
  %145 = load i32, i32* %3, align 4
  %146 = add nsw i32 %145, 20
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %150
  %152 = getelementptr inbounds %struct.string_data, %struct.string_data* %151, i32 0, i32 7
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* @string_mark, align 4
  %155 = icmp ne i32 %153, %154
  br i1 %155, label %156, label %183

; <label>:156:                                    ; preds = %144
  %157 = load i32, i32* %3, align 4
  %158 = add nsw i32 %157, 20
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = load i32, i32* %2, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %163
  %165 = getelementptr inbounds %struct.string_data, %struct.string_data* %164, i32 0, i32 6
  %166 = load i32, i32* %2, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %167
  %169 = getelementptr inbounds %struct.string_data, %struct.string_data* %168, i32 0, i32 5
  %170 = load i32, i32* %169, align 8
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %169, align 8
  %172 = sext i32 %170 to i64
  %173 = getelementptr inbounds [160 x i32], [160 x i32]* %165, i64 0, i64 %172
  store i32 %161, i32* %173, align 4
  %174 = load i32, i32* @string_mark, align 4
  %175 = load i32, i32* %3, align 4
  %176 = add nsw i32 %175, 20
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %180
  %182 = getelementptr inbounds %struct.string_data, %struct.string_data* %181, i32 0, i32 7
  store i32 %174, i32* %182, align 4
  br label %183

; <label>:183:                                    ; preds = %156, %144, %135
  br label %184

; <label>:184:                                    ; preds = %183, %originalBBpart215
  %185 = load i32, i32* @x.145
  %186 = load i32, i32* @y.146
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %184
  %193 = load i32, i32* %3, align 4
  %194 = sub nsw i32 %193, 1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = icmp eq i32 %198, 0
  %200 = load i32, i32* @x.145
  %201 = load i32, i32* @y.146
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart229, label %originalBB17alteredBB

originalBBpart229:                                ; preds = %originalBB17
  br i1 %199, label %208, label %267

; <label>:208:                                    ; preds = %originalBBpart229
  %209 = load i32, i32* %3, align 4
  %210 = sub nsw i32 %209, 1
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = load i32, i32* @liberty_mark, align 4
  %215 = icmp ne i32 %213, %214
  br i1 %215, label %216, label %267

; <label>:216:                                    ; preds = %208
  %217 = load i32, i32* @x.145
  %218 = load i32, i32* @y.146
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %216
  %225 = load i32, i32* @x.145
  %226 = load i32, i32* @y.146
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %233

; <label>:233:                                    ; preds = %originalBBpart233
  %234 = load i32, i32* %2, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %235
  %237 = getelementptr inbounds %struct.string_data, %struct.string_data* %236, i32 0, i32 3
  %238 = load i32, i32* %237, align 4
  %239 = icmp slt i32 %238, 20
  br i1 %239, label %240, label %254

; <label>:240:                                    ; preds = %233
  %241 = load i32, i32* %3, align 4
  %242 = sub nsw i32 %241, 1
  %243 = load i32, i32* %2, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %244
  %246 = getelementptr inbounds %struct.string_data, %struct.string_data* %245, i32 0, i32 4
  %247 = load i32, i32* %2, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %248
  %250 = getelementptr inbounds %struct.string_data, %struct.string_data* %249, i32 0, i32 3
  %251 = load i32, i32* %250, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [20 x i32], [20 x i32]* %246, i64 0, i64 %252
  store i32 %242, i32* %253, align 4
  br label %254

; <label>:254:                                    ; preds = %240, %233
  %255 = load i32, i32* %2, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %256
  %258 = getelementptr inbounds %struct.string_data, %struct.string_data* %257, i32 0, i32 3
  %259 = load i32, i32* %258, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %258, align 4
  %261 = load i32, i32* @liberty_mark, align 4
  %262 = load i32, i32* %3, align 4
  %263 = sub nsw i32 %262, 1
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %264
  store i32 %261, i32* %265, align 4
  br label %266

; <label>:266:                                    ; preds = %254
  br label %316

; <label>:267:                                    ; preds = %208, %originalBBpart229
  %268 = load i32, i32* %3, align 4
  %269 = sub nsw i32 %268, 1
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = load i32, i32* %4, align 4
  %275 = icmp eq i32 %273, %274
  br i1 %275, label %276, label %315

; <label>:276:                                    ; preds = %267
  %277 = load i32, i32* %3, align 4
  %278 = sub nsw i32 %277, 1
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %282
  %284 = getelementptr inbounds %struct.string_data, %struct.string_data* %283, i32 0, i32 7
  %285 = load i32, i32* %284, align 4
  %286 = load i32, i32* @string_mark, align 4
  %287 = icmp ne i32 %285, %286
  br i1 %287, label %288, label %315

; <label>:288:                                    ; preds = %276
  %289 = load i32, i32* %3, align 4
  %290 = sub nsw i32 %289, 1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = load i32, i32* %2, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %295
  %297 = getelementptr inbounds %struct.string_data, %struct.string_data* %296, i32 0, i32 6
  %298 = load i32, i32* %2, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %299
  %301 = getelementptr inbounds %struct.string_data, %struct.string_data* %300, i32 0, i32 5
  %302 = load i32, i32* %301, align 8
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %301, align 8
  %304 = sext i32 %302 to i64
  %305 = getelementptr inbounds [160 x i32], [160 x i32]* %297, i64 0, i64 %304
  store i32 %293, i32* %305, align 4
  %306 = load i32, i32* @string_mark, align 4
  %307 = load i32, i32* %3, align 4
  %308 = sub nsw i32 %307, 1
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %312
  %314 = getelementptr inbounds %struct.string_data, %struct.string_data* %313, i32 0, i32 7
  store i32 %306, i32* %314, align 4
  br label %315

; <label>:315:                                    ; preds = %288, %276, %267
  br label %316

; <label>:316:                                    ; preds = %315, %266
  %317 = load i32, i32* %3, align 4
  %318 = sub nsw i32 %317, 20
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %319
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i32
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %399

; <label>:324:                                    ; preds = %316
  %325 = load i32, i32* %3, align 4
  %326 = sub nsw i32 %325, 20
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %327
  %329 = load i32, i32* %328, align 4
  %330 = load i32, i32* @liberty_mark, align 4
  %331 = icmp ne i32 %329, %330
  br i1 %331, label %332, label %399

; <label>:332:                                    ; preds = %324
  br label %333

; <label>:333:                                    ; preds = %332
  %334 = load i32, i32* @x.145
  %335 = load i32, i32* @y.146
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %333
  %342 = load i32, i32* %2, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %343
  %345 = getelementptr inbounds %struct.string_data, %struct.string_data* %344, i32 0, i32 3
  %346 = load i32, i32* %345, align 4
  %347 = icmp slt i32 %346, 20
  %348 = load i32, i32* @x.145
  %349 = load i32, i32* @y.146
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %347, label %356, label %370

; <label>:356:                                    ; preds = %originalBBpart237
  %357 = load i32, i32* %3, align 4
  %358 = sub nsw i32 %357, 20
  %359 = load i32, i32* %2, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %360
  %362 = getelementptr inbounds %struct.string_data, %struct.string_data* %361, i32 0, i32 4
  %363 = load i32, i32* %2, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %364
  %366 = getelementptr inbounds %struct.string_data, %struct.string_data* %365, i32 0, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [20 x i32], [20 x i32]* %362, i64 0, i64 %368
  store i32 %358, i32* %369, align 4
  br label %370

; <label>:370:                                    ; preds = %356, %originalBBpart237
  %371 = load i32, i32* @x.145
  %372 = load i32, i32* @y.146
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %370
  %379 = load i32, i32* %2, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %380
  %382 = getelementptr inbounds %struct.string_data, %struct.string_data* %381, i32 0, i32 3
  %383 = load i32, i32* %382, align 4
  %384 = add nsw i32 %383, 1
  store i32 %384, i32* %382, align 4
  %385 = load i32, i32* @liberty_mark, align 4
  %386 = load i32, i32* %3, align 4
  %387 = sub nsw i32 %386, 20
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %388
  store i32 %385, i32* %389, align 4
  %390 = load i32, i32* @x.145
  %391 = load i32, i32* @y.146
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart258, label %originalBB39alteredBB

originalBBpart258:                                ; preds = %originalBB39
  br label %398

; <label>:398:                                    ; preds = %originalBBpart258
  br label %496

; <label>:399:                                    ; preds = %324, %316
  %400 = load i32, i32* @x.145
  %401 = load i32, i32* @y.146
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %399
  %408 = load i32, i32* %3, align 4
  %409 = sub nsw i32 %408, 20
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %410
  %412 = load i8, i8* %411, align 1
  %413 = zext i8 %412 to i32
  %414 = load i32, i32* %4, align 4
  %415 = icmp eq i32 %413, %414
  %416 = load i32, i32* @x.145
  %417 = load i32, i32* @y.146
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBBpart271, label %originalBB60alteredBB

originalBBpart271:                                ; preds = %originalBB60
  br i1 %415, label %424, label %495

; <label>:424:                                    ; preds = %originalBBpart271
  %425 = load i32, i32* @x.145
  %426 = load i32, i32* @y.146
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %originalBB73alteredBB, %424
  %433 = load i32, i32* %3, align 4
  %434 = sub nsw i32 %433, 20
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %438
  %440 = getelementptr inbounds %struct.string_data, %struct.string_data* %439, i32 0, i32 7
  %441 = load i32, i32* %440, align 4
  %442 = load i32, i32* @string_mark, align 4
  %443 = icmp ne i32 %441, %442
  %444 = load i32, i32* @x.145
  %445 = load i32, i32* @y.146
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br i1 %443, label %452, label %495

; <label>:452:                                    ; preds = %originalBBpart275
  %453 = load i32, i32* @x.145
  %454 = load i32, i32* @y.146
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %originalBB77alteredBB, %452
  %461 = load i32, i32* %3, align 4
  %462 = sub nsw i32 %461, 20
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %463
  %465 = load i32, i32* %464, align 4
  %466 = load i32, i32* %2, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %467
  %469 = getelementptr inbounds %struct.string_data, %struct.string_data* %468, i32 0, i32 6
  %470 = load i32, i32* %2, align 4
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %471
  %473 = getelementptr inbounds %struct.string_data, %struct.string_data* %472, i32 0, i32 5
  %474 = load i32, i32* %473, align 8
  %475 = add nsw i32 %474, 1
  store i32 %475, i32* %473, align 8
  %476 = sext i32 %474 to i64
  %477 = getelementptr inbounds [160 x i32], [160 x i32]* %469, i64 0, i64 %476
  store i32 %465, i32* %477, align 4
  %478 = load i32, i32* @string_mark, align 4
  %479 = load i32, i32* %3, align 4
  %480 = sub nsw i32 %479, 20
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %481
  %483 = load i32, i32* %482, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %484
  %486 = getelementptr inbounds %struct.string_data, %struct.string_data* %485, i32 0, i32 7
  store i32 %478, i32* %486, align 4
  %487 = load i32, i32* @x.145
  %488 = load i32, i32* @y.146
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart296, label %originalBB77alteredBB

originalBBpart296:                                ; preds = %originalBB77
  br label %495

; <label>:495:                                    ; preds = %originalBBpart296, %originalBBpart275, %originalBBpart271
  br label %496

; <label>:496:                                    ; preds = %495, %398
  %497 = load i32, i32* @x.145
  %498 = load i32, i32* @y.146
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %496
  %505 = load i32, i32* %3, align 4
  %506 = add nsw i32 %505, 1
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %507
  %509 = load i8, i8* %508, align 1
  %510 = zext i8 %509 to i32
  %511 = icmp eq i32 %510, 0
  %512 = load i32, i32* @x.145
  %513 = load i32, i32* @y.146
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBBpart2107, label %originalBB98alteredBB

originalBBpart2107:                               ; preds = %originalBB98
  br i1 %511, label %520, label %611

; <label>:520:                                    ; preds = %originalBBpart2107
  %521 = load i32, i32* %3, align 4
  %522 = add nsw i32 %521, 1
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %523
  %525 = load i32, i32* %524, align 4
  %526 = load i32, i32* @liberty_mark, align 4
  %527 = icmp ne i32 %525, %526
  br i1 %527, label %528, label %611

; <label>:528:                                    ; preds = %520
  br label %529

; <label>:529:                                    ; preds = %528
  %530 = load i32, i32* @x.145
  %531 = load i32, i32* @y.146
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %529
  %538 = load i32, i32* %2, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %539
  %541 = getelementptr inbounds %struct.string_data, %struct.string_data* %540, i32 0, i32 3
  %542 = load i32, i32* %541, align 4
  %543 = icmp slt i32 %542, 20
  %544 = load i32, i32* @x.145
  %545 = load i32, i32* @y.146
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %543, label %552, label %566

; <label>:552:                                    ; preds = %originalBBpart2111
  %553 = load i32, i32* %3, align 4
  %554 = add nsw i32 %553, 1
  %555 = load i32, i32* %2, align 4
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %556
  %558 = getelementptr inbounds %struct.string_data, %struct.string_data* %557, i32 0, i32 4
  %559 = load i32, i32* %2, align 4
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %560
  %562 = getelementptr inbounds %struct.string_data, %struct.string_data* %561, i32 0, i32 3
  %563 = load i32, i32* %562, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds [20 x i32], [20 x i32]* %558, i64 0, i64 %564
  store i32 %554, i32* %565, align 4
  br label %566

; <label>:566:                                    ; preds = %552, %originalBBpart2111
  %567 = load i32, i32* @x.145
  %568 = load i32, i32* @y.146
  %569 = sub i32 %567, 1
  %570 = mul i32 %567, %569
  %571 = urem i32 %570, 2
  %572 = icmp eq i32 %571, 0
  %573 = icmp slt i32 %568, 10
  %574 = or i1 %572, %573
  br i1 %574, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %originalBB113alteredBB, %566
  %575 = load i32, i32* %2, align 4
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %576
  %578 = getelementptr inbounds %struct.string_data, %struct.string_data* %577, i32 0, i32 3
  %579 = load i32, i32* %578, align 4
  %580 = add nsw i32 %579, 1
  store i32 %580, i32* %578, align 4
  %581 = load i32, i32* @liberty_mark, align 4
  %582 = load i32, i32* %3, align 4
  %583 = add nsw i32 %582, 1
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %584
  store i32 %581, i32* %585, align 4
  %586 = load i32, i32* @x.145
  %587 = load i32, i32* @y.146
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBBpart2121, label %originalBB113alteredBB

originalBBpart2121:                               ; preds = %originalBB113
  br label %594

; <label>:594:                                    ; preds = %originalBBpart2121
  %595 = load i32, i32* @x.145
  %596 = load i32, i32* @y.146
  %597 = sub i32 %595, 1
  %598 = mul i32 %595, %597
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %600, %601
  br i1 %602, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %originalBB123alteredBB, %594
  %603 = load i32, i32* @x.145
  %604 = load i32, i32* @y.146
  %605 = sub i32 %603, 1
  %606 = mul i32 %603, %605
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %604, 10
  %610 = or i1 %608, %609
  br i1 %610, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br label %708

; <label>:611:                                    ; preds = %520, %originalBBpart2107
  %612 = load i32, i32* @x.145
  %613 = load i32, i32* @y.146
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %originalBB127alteredBB, %611
  %620 = load i32, i32* %3, align 4
  %621 = add nsw i32 %620, 1
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %622
  %624 = load i8, i8* %623, align 1
  %625 = zext i8 %624 to i32
  %626 = load i32, i32* %4, align 4
  %627 = icmp eq i32 %625, %626
  %628 = load i32, i32* @x.145
  %629 = load i32, i32* @y.146
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBBpart2138, label %originalBB127alteredBB

originalBBpart2138:                               ; preds = %originalBB127
  br i1 %627, label %636, label %691

; <label>:636:                                    ; preds = %originalBBpart2138
  %637 = load i32, i32* @x.145
  %638 = load i32, i32* @y.146
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %636
  %645 = load i32, i32* %3, align 4
  %646 = add nsw i32 %645, 1
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %647
  %649 = load i32, i32* %648, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %650
  %652 = getelementptr inbounds %struct.string_data, %struct.string_data* %651, i32 0, i32 7
  %653 = load i32, i32* %652, align 4
  %654 = load i32, i32* @string_mark, align 4
  %655 = icmp ne i32 %653, %654
  %656 = load i32, i32* @x.145
  %657 = load i32, i32* @y.146
  %658 = sub i32 %656, 1
  %659 = mul i32 %656, %658
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %661, %662
  br i1 %663, label %originalBBpart2150, label %originalBB140alteredBB

originalBBpart2150:                               ; preds = %originalBB140
  br i1 %655, label %664, label %691

; <label>:664:                                    ; preds = %originalBBpart2150
  %665 = load i32, i32* %3, align 4
  %666 = add nsw i32 %665, 1
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %667
  %669 = load i32, i32* %668, align 4
  %670 = load i32, i32* %2, align 4
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %671
  %673 = getelementptr inbounds %struct.string_data, %struct.string_data* %672, i32 0, i32 6
  %674 = load i32, i32* %2, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %675
  %677 = getelementptr inbounds %struct.string_data, %struct.string_data* %676, i32 0, i32 5
  %678 = load i32, i32* %677, align 8
  %679 = add nsw i32 %678, 1
  store i32 %679, i32* %677, align 8
  %680 = sext i32 %678 to i64
  %681 = getelementptr inbounds [160 x i32], [160 x i32]* %673, i64 0, i64 %680
  store i32 %669, i32* %681, align 4
  %682 = load i32, i32* @string_mark, align 4
  %683 = load i32, i32* %3, align 4
  %684 = add nsw i32 %683, 1
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %685
  %687 = load i32, i32* %686, align 4
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %688
  %690 = getelementptr inbounds %struct.string_data, %struct.string_data* %689, i32 0, i32 7
  store i32 %682, i32* %690, align 4
  br label %691

; <label>:691:                                    ; preds = %664, %originalBBpart2150, %originalBBpart2138
  %692 = load i32, i32* @x.145
  %693 = load i32, i32* @y.146
  %694 = sub i32 %692, 1
  %695 = mul i32 %692, %694
  %696 = urem i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = icmp slt i32 %693, 10
  %699 = or i1 %697, %698
  br i1 %699, label %originalBB152, label %originalBB152alteredBB

originalBB152:                                    ; preds = %originalBB152alteredBB, %691
  %700 = load i32, i32* @x.145
  %701 = load i32, i32* @y.146
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBBpart2154, label %originalBB152alteredBB

originalBBpart2154:                               ; preds = %originalBB152
  br label %708

; <label>:708:                                    ; preds = %originalBBpart2154, %originalBBpart2125
  %709 = load i32, i32* %3, align 4
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds [400 x i32], [400 x i32]* @next_stone, i64 0, i64 %710
  %712 = load i32, i32* %711, align 4
  store i32 %712, i32* %3, align 4
  br label %713

; <label>:713:                                    ; preds = %708
  %714 = load i32, i32* %3, align 4
  %715 = load i32, i32* %2, align 4
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %716
  %718 = getelementptr inbounds %struct.string_data, %struct.string_data* %717, i32 0, i32 2
  %719 = load i32, i32* %718, align 8
  %720 = icmp eq i32 %714, %719
  %721 = xor i1 %720, true
  br i1 %721, label %20, label %722

; <label>:722:                                    ; preds = %713
  %723 = load i32, i32* @x.145
  %724 = load i32, i32* @y.146
  %725 = sub i32 %723, 1
  %726 = mul i32 %723, %725
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %728, %729
  br i1 %730, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %originalBB156alteredBB, %722
  %731 = load i32, i32* @x.145
  %732 = load i32, i32* @y.146
  %733 = sub i32 %731, 1
  %734 = mul i32 %731, %733
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %732, 10
  %738 = or i1 %736, %737
  br i1 %738, label %originalBBpart2158, label %originalBB156alteredBB

originalBBpart2158:                               ; preds = %originalBB156
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %36
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  %739 = load i32, i32* %2, align 4
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %740
  %742 = getelementptr inbounds %struct.string_data, %struct.string_data* %741, i32 0, i32 3
  %743 = load i32, i32* %742, align 4
  %744 = icmp slt i32 %743, 20
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %76
  %745 = load i32, i32* %3, align 4
  %_ = sub i32 %745, 20
  %gen = mul i32 %_, 20
  %_7 = shl i32 %745, 20
  %_8 = sub i32 %745, 20
  %gen9 = mul i32 %_8, 20
  %746 = add nsw i32 %745, 20
  %747 = load i32, i32* %2, align 4
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %748
  %750 = getelementptr inbounds %struct.string_data, %struct.string_data* %749, i32 0, i32 4
  %751 = load i32, i32* %2, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %752
  %754 = getelementptr inbounds %struct.string_data, %struct.string_data* %753, i32 0, i32 3
  %755 = load i32, i32* %754, align 4
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds [20 x i32], [20 x i32]* %750, i64 0, i64 %756
  store i32 %746, i32* %757, align 4
  br label %originalBB6

originalBB13alteredBB:                            ; preds = %originalBB13, %118
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %184
  %758 = load i32, i32* %3, align 4
  %_18 = sub i32 %758, 1
  %gen19 = mul i32 %_18, 1
  %_20 = sub i32 %758, 1
  %gen21 = mul i32 %_20, 1
  %_22 = sub i32 0, %758
  %gen23 = add i32 %_22, 1
  %_24 = sub i32 %758, 1
  %gen25 = mul i32 %_24, 1
  %_26 = sub i32 %758, 1
  %gen27 = mul i32 %_26, 1
  %759 = sub nsw i32 %758, 1
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %760
  %762 = load i8, i8* %761, align 1
  %763 = zext i8 %762 to i32
  %764 = icmp eq i32 %763, 0
  br label %originalBB17

originalBB31alteredBB:                            ; preds = %originalBB31, %216
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %333
  %765 = load i32, i32* %2, align 4
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %766
  %768 = getelementptr inbounds %struct.string_data, %struct.string_data* %767, i32 0, i32 3
  %769 = load i32, i32* %768, align 4
  %770 = icmp slt i32 %769, 20
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %370
  %771 = load i32, i32* %2, align 4
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %772
  %774 = getelementptr inbounds %struct.string_data, %struct.string_data* %773, i32 0, i32 3
  %775 = load i32, i32* %774, align 4
  %_40 = sub i32 0, %775
  %gen41 = add i32 %_40, 1
  %_42 = sub i32 0, %775
  %gen43 = add i32 %_42, 1
  %_44 = sub i32 0, %775
  %gen45 = add i32 %_44, 1
  %_46 = sub i32 %775, 1
  %gen47 = mul i32 %_46, 1
  %776 = add nsw i32 %775, 1
  store i32 %776, i32* %774, align 4
  %777 = load i32, i32* @liberty_mark, align 4
  %778 = load i32, i32* %3, align 4
  %_48 = shl i32 %778, 20
  %_49 = shl i32 %778, 20
  %_50 = shl i32 %778, 20
  %_51 = shl i32 %778, 20
  %_52 = sub i32 %778, 20
  %gen53 = mul i32 %_52, 20
  %_54 = sub i32 %778, 20
  %gen55 = mul i32 %_54, 20
  %_56 = shl i32 %778, 20
  %779 = sub nsw i32 %778, 20
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %780
  store i32 %777, i32* %781, align 4
  br label %originalBB39

originalBB60alteredBB:                            ; preds = %originalBB60, %399
  %782 = load i32, i32* %3, align 4
  %_61 = sub i32 %782, 20
  %gen62 = mul i32 %_61, 20
  %_63 = shl i32 %782, 20
  %_64 = sub i32 %782, 20
  %gen65 = mul i32 %_64, 20
  %_66 = sub i32 %782, 20
  %gen67 = mul i32 %_66, 20
  %_68 = sub i32 %782, 20
  %gen69 = mul i32 %_68, 20
  %783 = sub nsw i32 %782, 20
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %784
  %786 = load i8, i8* %785, align 1
  %787 = zext i8 %786 to i32
  %788 = load i32, i32* %4, align 4
  %789 = icmp eq i32 %787, %788
  br label %originalBB60

originalBB73alteredBB:                            ; preds = %originalBB73, %424
  %790 = load i32, i32* %3, align 4
  %791 = sub nsw i32 %790, 20
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %792
  %794 = load i32, i32* %793, align 4
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %795
  %797 = getelementptr inbounds %struct.string_data, %struct.string_data* %796, i32 0, i32 7
  %798 = load i32, i32* %797, align 4
  %799 = load i32, i32* @string_mark, align 4
  %800 = icmp ne i32 %798, %799
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %452
  %801 = load i32, i32* %3, align 4
  %_78 = sub i32 0, %801
  %gen79 = add i32 %_78, 20
  %_80 = shl i32 %801, 20
  %_81 = sub i32 0, %801
  %gen82 = add i32 %_81, 20
  %802 = sub nsw i32 %801, 20
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %803
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %2, align 4
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %807
  %809 = getelementptr inbounds %struct.string_data, %struct.string_data* %808, i32 0, i32 6
  %810 = load i32, i32* %2, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %811
  %813 = getelementptr inbounds %struct.string_data, %struct.string_data* %812, i32 0, i32 5
  %814 = load i32, i32* %813, align 8
  %_83 = sub i32 %814, 1
  %gen84 = mul i32 %_83, 1
  %_85 = shl i32 %814, 1
  %_86 = sub i32 0, %814
  %gen87 = add i32 %_86, 1
  %_88 = shl i32 %814, 1
  %_89 = sub i32 0, %814
  %gen90 = add i32 %_89, 1
  %_91 = sub i32 0, %814
  %gen92 = add i32 %_91, 1
  %815 = add nsw i32 %814, 1
  store i32 %815, i32* %813, align 8
  %816 = sext i32 %814 to i64
  %817 = getelementptr inbounds [160 x i32], [160 x i32]* %809, i64 0, i64 %816
  store i32 %805, i32* %817, align 4
  %818 = load i32, i32* @string_mark, align 4
  %819 = load i32, i32* %3, align 4
  %_93 = sub i32 %819, 20
  %gen94 = mul i32 %_93, 20
  %820 = sub nsw i32 %819, 20
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %821
  %823 = load i32, i32* %822, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %824
  %826 = getelementptr inbounds %struct.string_data, %struct.string_data* %825, i32 0, i32 7
  store i32 %818, i32* %826, align 4
  br label %originalBB77

originalBB98alteredBB:                            ; preds = %originalBB98, %496
  %827 = load i32, i32* %3, align 4
  %_99 = sub i32 %827, 1
  %gen100 = mul i32 %_99, 1
  %_101 = sub i32 %827, 1
  %gen102 = mul i32 %_101, 1
  %_103 = shl i32 %827, 1
  %_104 = sub i32 %827, 1
  %gen105 = mul i32 %_104, 1
  %828 = add nsw i32 %827, 1
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %829
  %831 = load i8, i8* %830, align 1
  %832 = zext i8 %831 to i32
  %833 = icmp eq i32 %832, 0
  br label %originalBB98

originalBB109alteredBB:                           ; preds = %originalBB109, %529
  %834 = load i32, i32* %2, align 4
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %835
  %837 = getelementptr inbounds %struct.string_data, %struct.string_data* %836, i32 0, i32 3
  %838 = load i32, i32* %837, align 4
  %839 = icmp slt i32 %838, 20
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %566
  %840 = load i32, i32* %2, align 4
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %841
  %843 = getelementptr inbounds %struct.string_data, %struct.string_data* %842, i32 0, i32 3
  %844 = load i32, i32* %843, align 4
  %845 = add nsw i32 %844, 1
  store i32 %845, i32* %843, align 4
  %846 = load i32, i32* @liberty_mark, align 4
  %847 = load i32, i32* %3, align 4
  %_114 = sub i32 %847, 1
  %gen115 = mul i32 %_114, 1
  %_116 = shl i32 %847, 1
  %_117 = sub i32 0, %847
  %gen118 = add i32 %_117, 1
  %_119 = shl i32 %847, 1
  %848 = add nsw i32 %847, 1
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds [400 x i32], [400 x i32]* @ml, i64 0, i64 %849
  store i32 %846, i32* %850, align 4
  br label %originalBB113

originalBB123alteredBB:                           ; preds = %originalBB123, %594
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %611
  %851 = load i32, i32* %3, align 4
  %_128 = sub i32 0, %851
  %gen129 = add i32 %_128, 1
  %_130 = sub i32 0, %851
  %gen131 = add i32 %_130, 1
  %_132 = sub i32 0, %851
  %gen133 = add i32 %_132, 1
  %_134 = shl i32 %851, 1
  %_135 = sub i32 0, %851
  %gen136 = add i32 %_135, 1
  %852 = add nsw i32 %851, 1
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds [421 x i8], [421 x i8]* @board, i64 0, i64 %853
  %855 = load i8, i8* %854, align 1
  %856 = zext i8 %855 to i32
  %857 = load i32, i32* %4, align 4
  %858 = icmp eq i32 %856, %857
  br label %originalBB127

originalBB140alteredBB:                           ; preds = %originalBB140, %636
  %859 = load i32, i32* %3, align 4
  %_141 = sub i32 0, %859
  %gen142 = add i32 %_141, 1
  %_143 = sub i32 0, %859
  %gen144 = add i32 %_143, 1
  %_145 = sub i32 %859, 1
  %gen146 = mul i32 %_145, 1
  %_147 = sub i32 %859, 1
  %gen148 = mul i32 %_147, 1
  %860 = add nsw i32 %859, 1
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds [400 x i32], [400 x i32]* @string_number, i64 0, i64 %861
  %863 = load i32, i32* %862, align 4
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds [240 x %struct.string_data], [240 x %struct.string_data]* @string, i64 0, i64 %864
  %866 = getelementptr inbounds %struct.string_data, %struct.string_data* %865, i32 0, i32 7
  %867 = load i32, i32* %866, align 4
  %868 = load i32, i32* @string_mark, align 4
  %869 = icmp ne i32 %867, %868
  br label %originalBB140

originalBB152alteredBB:                           ; preds = %originalBB152, %691
  br label %originalBB152

originalBB156alteredBB:                           ; preds = %originalBB156, %722
  br label %originalBB156
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
