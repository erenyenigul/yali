; ModuleID = 'host/ir_bcf/povray_lighting.ll'
source_filename = "lighting.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.pov::Texture_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.25, %"struct.pov::Texture_Struct"*, %"struct.pov::Pigment_Struct"*, %"struct.pov::Tnormal_Struct"*, %"struct.pov::Finish_Struct"*, %"struct.pov::Texture_Struct"*, i32 }
%"struct.pov::Warps_Struct" = type { i16, %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"* }
%"struct.pov::Pattern_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.21 }
%struct.anon.21 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::Blend_Map_Struct" = type { i32, i16, i8, i8, %"struct.pov::Blend_Map_Entry"* }
%"struct.pov::Blend_Map_Entry" = type { float, i8, %union.anon }
%union.anon = type { [2 x double], [8 x i8] }
%union.anon.25 = type { %struct.anon.29 }
%struct.anon.29 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::Pigment_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.0, [5 x float] }
%union.anon.0 = type { %struct.anon.5 }
%struct.anon.5 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::Tnormal_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.9, float, float }
%union.anon.9 = type { %struct.anon.13 }
%struct.anon.13 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::Finish_Struct" = type { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, i32, float, i32 }
%"struct.pov::Light_Tested_Struct" = type { i32, [5 x float] }
%"struct.pov::Media_Struct" = type { i32, i32, i32, i32, i32, double, i32, double, double, i32, i32, i32, i32, [5 x float], [5 x float], [5 x float], [5 x float], double, double, double, double*, double, i32, i32, %"struct.pov::Pigment_Struct"*, %"struct.pov::Media_Struct"* }
%"struct.pov::ComTexData_Struct" = type { %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"*, [100 x double], [100 x [3 x double]], [100 x [5 x float]], [100 x float] }
%"struct.pov::Light_List_Struct" = type { i8, double, double, %"struct.pov::Light_Source_Struct"* }
%"struct.pov::Light_Source_Struct" = type { %"struct.pov::Method_Struct"*, i32, %"struct.pov::Object_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Interior_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Bounding_Box_Struct", %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*, float, i32, %"struct.pov::Object_Struct"*, [5 x float], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], double, double, double, double, double, %"struct.pov::Light_Source_Struct"*, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, [5 x float]**, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Blend_Map_Struct"*, [6 x %"struct.pov::Project_Tree_Node_Struct"*] }
%"struct.pov::Method_Struct" = type { i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)*, i32 (double*, %"struct.pov::Object_Struct"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, i8* (%"struct.pov::Object_Struct"*)*, void (%"struct.pov::Object_Struct"*, double*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*, double*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*, double*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*)*, void (%"struct.pov::Object_Struct"*)* }
%"struct.pov::Ray_Struct" = type { [3 x double], [3 x double], i32, i32, [100 x %"struct.pov::Interior_Struct"*] }
%"struct.pov::istack_struct" = type { %"struct.pov::istack_struct"*, %"struct.pov::istk_entry"*, i32, i32 }
%"struct.pov::istk_entry" = type { double, [3 x double], [3 x double], [3 x double], [2 x double], %"struct.pov::Object_Struct"*, i32, i32, double, double, double, double, double, double, double, double, double, i8*, i8* }
%"struct.pov::Interior_Struct" = type { i32, i32, i32, float, float, float, float, float, float, [5 x float], %"struct.pov::Media_Struct"* }
%"struct.pov::Bounding_Box_Struct" = type { [3 x float], [3 x float] }
%"struct.pov::Transform_Struct" = type { [4 x [4 x double]], [4 x [4 x double]] }
%"struct.pov::Object_Struct" = type { %"struct.pov::Method_Struct"*, i32, %"struct.pov::Object_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Interior_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Bounding_Box_Struct", %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*, float, i32 }
%"struct.pov::Project_Tree_Node_Struct" = type { i16, %"struct.pov::BBox_Tree_Struct"*, %"struct.pov::Project_Struct", i16, %"struct.pov::Project_Tree_Node_Struct"** }
%"struct.pov::BBox_Tree_Struct" = type { i16, i16, %"struct.pov::Bounding_Box_Struct", %"struct.pov::BBox_Tree_Struct"** }
%"struct.pov::Project_Struct" = type { i32, i32, i32, i32 }
%"struct.pov::Lit_Interval_Struct" = type { i32, double, double, double }
%"struct.pov::Media_Interval_Struct" = type { i32, i32, double, double, double, [5 x float], [5 x float], [5 x float] }
%"struct.pov::Frame_Struct" = type { %"struct.pov::Camera_Struct"*, i32, i32, i32, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Object_Struct"*, double, double, double, [5 x float], [5 x float], [5 x float], %"struct.pov::Media_Struct"*, %"struct.pov::Fog_Struct"*, %"struct.pov::Rainbow_Struct"*, %"struct.pov::Skysphere_Struct"*, %"struct.pov::light_group_light_struct"* }
%"struct.pov::Camera_Struct" = type { [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], double, double, i32, double, double, i32, double, double, double, %"struct.pov::Tnormal_Struct"*, %"struct.pov::Transform_Struct"* }
%"struct.pov::Fog_Struct" = type { i32, double, double, double, [5 x float], [3 x double], %"struct.pov::Turb_Struct"*, float, %"struct.pov::Fog_Struct"* }
%"struct.pov::Turb_Struct" = type { i16, %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"*, [3 x double], i32, float, float }
%"struct.pov::Rainbow_Struct" = type { double, double, double, double, double, double, double, [3 x double], [3 x double], [3 x double], %"struct.pov::Pigment_Struct"*, %"struct.pov::Rainbow_Struct"* }
%"struct.pov::Skysphere_Struct" = type { i32, %"struct.pov::Pigment_Struct"**, %"struct.pov::Transform_Struct"* }
%"struct.pov::light_group_light_struct" = type { %"struct.pov::Light_Source_Struct"*, %"struct.pov::light_group_light_struct"* }
%"struct.pov::OPTIONS_STRUCT" = type { i32, i8, i8, i8, i32, i32, [1024 x i8], [1024 x i8], [1024 x i8], [1024 x i8], [1024 x i8], float, float, i32, i32, double, double, i32, [25 x i8*], i32, i32, i32, double, double, i32, i32, double, double, i32, i8, i64, i32, i32, i32, %"struct.pov::FRAMESEQ", double, i64, double, double, double, double, double, i64, i32, i64, i32, i32, i32, i32, i32, i32, double, double, double, i32, i32, i8*, i8*, i32, i8, double, double, i32, i32, i8, i32, i32, [1024 x i8], [6 x %"struct.pov::shelldata"], [1024 x i8], [1024 x i8], i32, i32, i64, i32, i32, i32, %struct.POVMSData }
%"struct.pov::FRAMESEQ" = type { i32, double, i32, i32, double, i32, i32, double, i32, double, i32, double, i8, i8 }
%"struct.pov::shelldata" = type { i32, i32, [250 x i8] }
%struct.POVMSData = type { i32, i32, %union.anon.33 }
%union.anon.33 = type { i8* }
%"struct.pov::photon_options_struct" = type { i32, double, double, double, i32, i32, double, double, double, i32, i32, i8*, i32, i32, %"struct.pov::photon_map_struct", i32, double, double, %"struct.pov::Object_Struct"*, double*, double*, %"struct.pov::photon_struct"**, double*, i32, i32, i32, i32, %"struct.pov::Light_Source_Struct"*, i8, %"struct.pov::photon_map_struct", double, i32, i32, i32, i32 }
%"struct.pov::photon_struct" = type { [3 x float], [4 x i8], i8, i8, i8 }
%"struct.pov::photon_map_struct" = type { %"struct.pov::photon_struct"**, i32, i32, double, double, double, i32 }
%"struct.pov::Blob_Struct" = type { %"struct.pov::Method_Struct"*, i32, %"struct.pov::Object_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Interior_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Bounding_Box_Struct", %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*, float, i32, %"struct.pov::Blob_Data_Struct"*, %"struct.pov::Texture_Struct"**, %"struct.pov::BSphere_Tree_Struct"**, i32 }
%"struct.pov::Blob_Data_Struct" = type { i32, i32, double, %"struct.pov::Blob_Element_Struct"*, %"struct.pov::Blob_Interval_Struct"*, %"struct.pov::BSphere_Tree_Struct"* }
%"struct.pov::Blob_Element_Struct" = type { i16, i32, [3 x double], double, double, [3 x double], [5 x double], %"struct.pov::Texture_Struct"*, %"struct.pov::Transform_Struct"* }
%"struct.pov::Blob_Interval_Struct" = type { i32, double, %"struct.pov::Blob_Element_Struct"* }
%"struct.pov::BSphere_Tree_Struct" = type { i16, [3 x double], double, %"struct.pov::BSphere_Tree_Struct"** }
%"struct.pov::Mesh_Triangle_Struct" = type { i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, [3 x float] }
%"struct.pov::CSG_Struct" = type { %"struct.pov::Method_Struct"*, i32, %"struct.pov::Object_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Interior_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Bounding_Box_Struct", %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*, float, i32, %"struct.pov::Object_Struct"*, i32 }
%"struct.pov::Mesh_Struct" = type { %"struct.pov::Method_Struct"*, i32, %"struct.pov::Object_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Interior_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Bounding_Box_Struct", %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*, float, i32, %"struct.pov::Mesh_Data_Struct"*, i64, %"struct.pov::Texture_Struct"**, i16 }
%"struct.pov::Mesh_Data_Struct" = type { i32, i64, i64, i64, i64, [3 x float]*, [3 x float]*, [2 x double]*, %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::BBox_Tree_Struct"*, [3 x double] }

$_ZN3pov13Assign_VectorEPdS0_ = comdat any

$_ZN3pov4VDotERdPKdS2_ = comdat any

$_ZN3pov8VScaleEqEPdd = comdat any

$_ZN3pov14Assign_UV_VectEPdS0_ = comdat any

$_ZSt4fabsf = comdat any

$_ZN3pov9VLinComb2EPddPKddS2_ = comdat any

$_ZN3pov3SqrEd = comdat any

$_ZSt3minIdERKT_S2_S2_ = comdat any

$_ZSt3maxIdERKT_S2_S2_ = comdat any

$_ZN3pov15CRGBAddScaledEqEPffPKf = comdat any

$_ZN3pov5VHalfEPdPKdS2_ = comdat any

$_ZN3pov7VLengthERdPKd = comdat any

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZN3pov13Assign_ColourEPfS0_ = comdat any

$_ZN3pov4VSubEPdPKdS2_ = comdat any

$_ZN3pov12VNormalizeEqEPd = comdat any

$_ZN3pov15VInverseScaleEqEPdd = comdat any

$_ZN3pov8VScaleEqEPff = comdat any

$_ZN3pov12Make_ColourAEPffffff = comdat any

$_ZN3pov6VScaleEPfPKff = comdat any

$_ZN3pov9CLinComb2EPffPKffS2_ = comdat any

$_ZN3pov11Make_ColourEPffff = comdat any

$_ZSt3maxIfERKT_S2_S2_ = comdat any

$_ZSt3powff = comdat any

$_ZN3pov10Assign_RGBEPfS0_ = comdat any

$_ZN3pov12CRGBLinComb2EPffPKffS2_ = comdat any

$_ZN3pov16Increase_CounterERx = comdat any

$_ZN3pov10VAddScaledEPdPKddS2_ = comdat any

$_ZN3pov12VAddScaledEqEPddPKd = comdat any

$_ZN3pov6VAddEqEPfPKf = comdat any

$_ZN3pov4VSubEPdPKfPKd = comdat any

$_ZN3pov6VCrossEPdPKdS2_ = comdat any

$_ZN3pov6VScaleEPdPKdd = comdat any

$_ZN3pov11Make_VectorEPdddd = comdat any

$_ZN3pov6VAddEqEPdPKd = comdat any

$_ZN3pov9pop_entryEPNS_13istack_structE = comdat any

@_ZN3pov21warpNormalTextureListE = global %"struct.pov::Texture_Struct"** null, align 8
@_ZN3pov28warpNormalTextureListMaxSizeE = global i32 0, align 4
@_ZN3pov7GFilColE = global [5 x float] zeroinitializer, align 16
@_ZN3pov10Light_ListE = global %"struct.pov::Light_Tested_Struct"* null, align 8
@_ZN3pov12Texture_ListE = global %"struct.pov::Texture_Struct"** null, align 8
@_ZN3pov11Weight_ListE = global double* null, align 8
@_ZN3pov30Number_Of_Textures_And_WeightsE = global i32 0, align 4
@_ZN3pov22photonsAlreadyGatheredE = global i32 0, align 4
@_ZN3pov11previousRadE = global double 0.000000e+00, align 8
@_ZN3pov19MediaMallocPoolSizeE = global i64 0, align 8
@_ZN3pov17MaxLightPoolDepthE = global i64 0, align 8
@_ZN3pov17LightingPoolIndexE = global i64 -1, align 8
@_ZN3pov14WeightListPoolE = global double** null, align 8
@_ZN3pov15TextureListPoolE = global %"struct.pov::Texture_Struct"*** null, align 8
@_ZN3pov13LightListPoolE = global %"struct.pov::Light_Tested_Struct"** null, align 8
@_ZN3pov20ShadowMediaListIndexE = global i64 -1, align 8
@_ZN3pov19ShadowMediaListPoolE = global %"struct.pov::Media_Struct"*** null, align 8
@_ZN3pov23ShadowMediaListPoolSizeE = global i64* null, align 8
@_ZN3pov22LightingMediaListIndexE = global i64 -1, align 8
@_ZN3pov21LightingMediaListPoolE = global %"struct.pov::Media_Struct"*** null, align 8
@_ZN3pov25LightingMediaListPoolSizeE = global i64* null, align 8
@_ZN3pov22ComputeTextureUsedPoolE = global %"struct.pov::ComTexData_Struct"* null, align 8
@_ZN3pov22ComputeTextureFreePoolE = global %"struct.pov::ComTexData_Struct"* null, align 8
@_ZN3pov22ComputeTexturePoolSizeE = global i32 0, align 4
@_ZN3pov18warpNormalTexturesE = global i32 0, align 4
@_ZN3pov9disp_elemE = global i32 0, align 4
@_ZN3pov11disp_nelemsE = global i32 0, align 4
@_ZN3pov19TotalMallocPoolSizeE = global i64 0, align 8
@_ZN3pov17MaxMediaPoolDepthE = global i64 0, align 8
@_ZN3pov14MediaPoolIndexE = global i64 -1, align 8
@_ZN3pov18MediaLightListPoolE = global %"struct.pov::Light_List_Struct"** null, align 8
@_ZN3pov20MediaLitIntervalPoolE = global %"struct.pov::Lit_Interval_Struct"** null, align 8
@_ZN3pov17MediaIntervalPoolE = global %"struct.pov::Media_Interval_Struct"** null, align 8
@_ZN3pov21MediaIntervalPoolSizeE = global i64* null, align 8
@_ZN3pov2s0E = global double* null, align 8
@_ZN3pov2s1E = global double* null, align 8
@.str = private unnamed_addr constant [13 x i8] c"lighting.cpp\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"Warp normal texture list\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"Too many entries in texture and weight lists.\00", align 1
@_ZN3pov11Total_DepthE = external global double, align 8
@_ZN3pov5FrameE = external global %"struct.pov::Frame_Struct", align 8
@_ZN3pov11ADC_BailoutE = external global double, align 8
@_ZN3pov13backtraceFlagE = external global i32, align 4
@_ZN3pov4optsE = external global %"struct.pov::OPTIONS_STRUCT", align 8
@.str.3 = private unnamed_addr constant [16 x i8] c"temp media list\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"light list\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"lit interval\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"media intervals\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Weight list stack\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"compute texture data\00", align 1
@_ZN3pov24CSG_Intersection_MethodsE = external global %"struct.pov::Method_Struct", align 8
@_ZN3pov17CSG_Merge_MethodsE = external global %"struct.pov::Method_Struct", align 8
@_ZN3pov17CSG_Union_MethodsE = external global %"struct.pov::Method_Struct", align 8
@_ZN3pov12Blob_MethodsE = external global %"struct.pov::Method_Struct", align 8
@_ZN3pov12Mesh_MethodsE = external global %"struct.pov::Method_Struct", align 8
@.str.9 = private unnamed_addr constant [37 x i8] c"Bad texture type in do_texture_map()\00", align 1
@_ZN3pov11Trace_LevelE = external global i32, align 4
@_ZN3pov13photonOptionsE = external global %"struct.pov::photon_options_struct", align 8
@.str.10 = private unnamed_addr constant [25 x i8] c"Too many texture layers.\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"Reflection_Type 1 used with no interior.\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"Illegal reflection_type.\00", align 1
@_ZN3pov5statsE = external global [126 x i64], align 16
@_ZN3pov18firstRadiosityPassE = external global i32, align 4
@_ZN3pov17In_Reflection_RayE = external global i8, align 1
@_ZN3pov21Radiosity_Trace_LevelE = external global i32, align 4
@.str.13 = private unnamed_addr constant [35 x i8] c"ERROR - Containing Index too high.\00", align 1
@_ZN3pov13In_Shadow_RayE = external global i8, align 1
@_ZN3pov11Root_ObjectE = external global %"struct.pov::BBox_Tree_Struct"*, align 8
@.str.14 = private unnamed_addr constant [10 x i8] c"temp data\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0

; Function Attrs: noinline uwtable
define void @_ZN3pov24Initialize_Lighting_CodeEv() #0 {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  store %"struct.pov::Light_Tested_Struct"* null, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  store double* null, double** @_ZN3pov11Weight_ListE, align 8
  store i32 16, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  call void @_ZN3povL15InitMallocPoolsEv()
  call void @_ZN3pov18InitComTexDataPoolEv()
  %9 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %11 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %12 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %13 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %11, i64 %12
  %14 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %13, align 8
  store %"struct.pov::Light_Tested_Struct"* %14, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %15 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %16 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %17 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %15, i64 %16
  %18 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %17, align 8
  store %"struct.pov::Texture_Struct"** %18, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %19 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %20 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %21 = getelementptr inbounds double*, double** %19, i64 %20
  %22 = load double*, double** %21, align 8
  store double* %22, double** @_ZN3pov11Weight_ListE, align 8
  store i32 100, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %23 = load i32, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, 8
  %26 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 327, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0))
  %27 = bitcast i8* %26 to %"struct.pov::Texture_Struct"**
  store %"struct.pov::Texture_Struct"** %27, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  store i32 0, i32* @_ZN3pov9disp_elemE, align 4
  %28 = load i32, i32* @x
  %29 = load i32, i32* @y
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  store %"struct.pov::Light_Tested_Struct"* null, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  store double* null, double** @_ZN3pov11Weight_ListE, align 8
  store i32 16, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  call void @_ZN3povL15InitMallocPoolsEv()
  call void @_ZN3pov18InitComTexDataPoolEv()
  %36 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %_ = shl i64 %36, 1
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %38 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %39 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %40 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %38, i64 %39
  %41 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %40, align 8
  store %"struct.pov::Light_Tested_Struct"* %41, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %42 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %43 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %44 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %42, i64 %43
  %45 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %44, align 8
  store %"struct.pov::Texture_Struct"** %45, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %46 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %47 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %48 = getelementptr inbounds double*, double** %46, i64 %47
  %49 = load double*, double** %48, align 8
  store double* %49, double** @_ZN3pov11Weight_ListE, align 8
  store i32 100, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %50 = load i32, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %51 = sext i32 %50 to i64
  %_1 = sub i64 0, %51
  %gen = add i64 %_1, 8
  %_2 = sub i64 0, %51
  %gen3 = add i64 %_2, 8
  %_4 = shl i64 %51, 8
  %_5 = sub i64 0, %51
  %gen6 = add i64 %_5, 8
  %_7 = sub i64 %51, 8
  %gen8 = mul i64 %_7, 8
  %52 = mul i64 %51, 8
  %53 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %52, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 327, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0))
  %54 = bitcast i8* %53 to %"struct.pov::Texture_Struct"**
  store %"struct.pov::Texture_Struct"** %54, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  store i32 0, i32* @_ZN3pov9disp_elemE, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL15InitMallocPoolsEv() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %8 = sext i32 %7 to i64
  %9 = mul i64 %8, 8
  store i64 %9, i64* %2, align 8
  %10 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %11 = sext i32 %10 to i64
  %12 = mul i64 %11, 8
  store i64 %12, i64* %3, align 8
  %13 = load i32, i32* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3), align 8
  store i32 %13, i32* %4, align 4
  store i64 5, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  store i64 20, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  store i64 0, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  store i64 0, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  store i64 -1, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  store i64 -1, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  store i64 -1, i64* @_ZN3pov14MediaPoolIndexE, align 8
  store i64 -1, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %14 = load i32, i32* %4, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %33

; <label>:16:                                     ; preds = %0
  %17 = load i32, i32* @x.1
  %18 = load i32, i32* @y.2
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  store i32 2, i32* %4, align 4
  %25 = load i32, i32* @x.1
  %26 = load i32, i32* @y.2
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2, %0
  %34 = load i32, i32* %4, align 4
  %35 = sext i32 %34 to i64
  %36 = mul i64 %35, 8
  %37 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 5999, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0))
  %38 = bitcast i8* %37 to double*
  store double* %38, double** @_ZN3pov2s0E, align 8
  %39 = load i32, i32* %4, align 4
  %40 = sext i32 %39 to i64
  %41 = mul i64 %40, 8
  %42 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %41, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0))
  %43 = bitcast i8* %42 to double*
  store double* %43, double** @_ZN3pov2s1E, align 8
  %44 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %45 = mul i64 %44, 8
  %46 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6002, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %47 = bitcast i8* %46 to i64*
  store i64* %47, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %48 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %49 = mul i64 %48, 8
  %50 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6003, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %51 = bitcast i8* %50 to i64*
  store i64* %51, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %52 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %53 = mul i64 %52, 8
  %54 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6004, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %55 = bitcast i8* %54 to i64*
  store i64* %55, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %56 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %57 = mul i64 %56, 8
  %58 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %57, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6005, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %59 = bitcast i8* %58 to %"struct.pov::Media_Struct"***
  store %"struct.pov::Media_Struct"*** %59, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %60 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %61 = mul i64 %60, 8
  %62 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %61, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6006, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %63 = bitcast i8* %62 to %"struct.pov::Media_Struct"***
  store %"struct.pov::Media_Struct"*** %63, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %64 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %65 = mul i64 %64, 8
  %66 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6007, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0))
  %67 = bitcast i8* %66 to %"struct.pov::Light_List_Struct"**
  store %"struct.pov::Light_List_Struct"** %67, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %68 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %69 = mul i64 %68, 8
  %70 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %69, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6008, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %71 = bitcast i8* %70 to %"struct.pov::Lit_Interval_Struct"**
  store %"struct.pov::Lit_Interval_Struct"** %71, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %72 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %73 = mul i64 %72, 8
  %74 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %73, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6009, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0))
  %75 = bitcast i8* %74 to %"struct.pov::Media_Interval_Struct"**
  store %"struct.pov::Media_Interval_Struct"** %75, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  store i32 0, i32* %1, align 4
  br label %76

; <label>:76:                                     ; preds = %originalBBpart28, %33
  %77 = load i32, i32* @x.1
  %78 = load i32, i32* @y.2
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %76
  %85 = load i32, i32* %1, align 4
  %86 = sext i32 %85 to i64
  %87 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %88 = icmp slt i64 %86, %87
  %89 = load i32, i32* @x.1
  %90 = load i32, i32* @y.2
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %88, label %97, label %180

; <label>:97:                                     ; preds = %originalBBpart24
  %98 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6013, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %99 = bitcast i8* %98 to %"struct.pov::Media_Struct"**
  %100 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %101 = load i32, i32* %1, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %100, i64 %102
  store %"struct.pov::Media_Struct"** %99, %"struct.pov::Media_Struct"*** %103, align 8
  %104 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %105 = load i32, i32* %1, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i64, i64* %104, i64 %106
  store i64 10, i64* %107, align 8
  %108 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6015, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %109 = bitcast i8* %108 to %"struct.pov::Media_Struct"**
  %110 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %111 = load i32, i32* %1, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %110, i64 %112
  store %"struct.pov::Media_Struct"** %109, %"struct.pov::Media_Struct"*** %113, align 8
  %114 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %115 = load i32, i32* %1, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i64, i64* %114, i64 %116
  store i64 10, i64* %117, align 8
  %118 = load i32, i32* %4, align 4
  %119 = sext i32 %118 to i64
  %120 = mul i64 %119, 32
  %121 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %120, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6017, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0))
  %122 = bitcast i8* %121 to %"struct.pov::Light_List_Struct"*
  %123 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %124 = load i32, i32* %1, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %123, i64 %125
  store %"struct.pov::Light_List_Struct"* %122, %"struct.pov::Light_List_Struct"** %126, align 8
  %127 = load i32, i32* %4, align 4
  %128 = mul nsw i32 2, %127
  %129 = add nsw i32 %128, 1
  %130 = sext i32 %129 to i64
  %131 = mul i64 %130, 32
  %132 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %131, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6018, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %133 = bitcast i8* %132 to %"struct.pov::Lit_Interval_Struct"*
  %134 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %135 = load i32, i32* %1, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %134, i64 %136
  store %"struct.pov::Lit_Interval_Struct"* %133, %"struct.pov::Lit_Interval_Struct"** %137, align 8
  %138 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 960, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6019, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0))
  %139 = bitcast i8* %138 to %"struct.pov::Media_Interval_Struct"*
  %140 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %141 = load i32, i32* %1, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %140, i64 %142
  store %"struct.pov::Media_Interval_Struct"* %139, %"struct.pov::Media_Interval_Struct"** %143, align 8
  %144 = load i64*, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %145 = load i32, i32* %1, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i64, i64* %144, i64 %146
  store i64 10, i64* %147, align 8
  %148 = load i32, i32* %4, align 4
  %149 = sext i32 %148 to i64
  %150 = mul i64 %149, 32
  %151 = add i64 160, %150
  %152 = load i32, i32* %4, align 4
  %153 = mul nsw i32 2, %152
  %154 = add nsw i32 %153, 1
  %155 = sext i32 %154 to i64
  %156 = mul i64 %155, 32
  %157 = add i64 %151, %156
  %158 = add i64 %157, 960
  %159 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %160 = add i64 %159, %158
  store i64 %160, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  br label %161

; <label>:161:                                    ; preds = %97
  %162 = load i32, i32* @x.1
  %163 = load i32, i32* @y.2
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %161
  %170 = load i32, i32* %1, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %1, align 4
  %172 = load i32, i32* @x.1
  %173 = load i32, i32* @y.2
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %76

; <label>:180:                                    ; preds = %originalBBpart24
  %181 = load i32, i32* @x.1
  %182 = load i32, i32* @y.2
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %180
  %189 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %190 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %191 = add nsw i64 %190, %189
  store i64 %191, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %192 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %193 = mul i64 %192, 8
  %194 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %193, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6028, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %195 = bitcast i8* %194 to double**
  store double** %195, double*** @_ZN3pov14WeightListPoolE, align 8
  %196 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %197 = mul i64 %196, 8
  %198 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %197, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6029, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %199 = bitcast i8* %198 to %"struct.pov::Texture_Struct"***
  store %"struct.pov::Texture_Struct"*** %199, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %200 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %201 = mul i64 %200, 8
  %202 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %201, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6030, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %203 = bitcast i8* %202 to %"struct.pov::Light_Tested_Struct"**
  store %"struct.pov::Light_Tested_Struct"** %203, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  store i32 0, i32* %1, align 4
  %204 = load i32, i32* @x.1
  %205 = load i32, i32* @y.2
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart235, label %originalBB10alteredBB

originalBBpart235:                                ; preds = %originalBB10
  br label %212

; <label>:212:                                    ; preds = %256, %originalBBpart235
  %213 = load i32, i32* %1, align 4
  %214 = sext i32 %213 to i64
  %215 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %216 = icmp slt i64 %214, %215
  br i1 %216, label %217, label %259

; <label>:217:                                    ; preds = %212
  %218 = load i64, i64* %2, align 8
  %219 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %218, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6034, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %220 = bitcast i8* %219 to double*
  %221 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %222 = load i32, i32* %1, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds double*, double** %221, i64 %223
  store double* %220, double** %224, align 8
  %225 = load i64, i64* %3, align 8
  %226 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %225, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6035, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %227 = bitcast i8* %226 to %"struct.pov::Texture_Struct"**
  %228 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %229 = load i32, i32* %1, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %228, i64 %230
  store %"struct.pov::Texture_Struct"** %227, %"struct.pov::Texture_Struct"*** %231, align 8
  store i32 1, i32* %5, align 4
  %232 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %5, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = mul i64 %234, 24
  %236 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %235, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6036, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %237 = bitcast i8* %236 to %"struct.pov::Light_Tested_Struct"*
  %238 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %239 = load i32, i32* %1, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %238, i64 %240
  store %"struct.pov::Light_Tested_Struct"* %237, %"struct.pov::Light_Tested_Struct"** %241, align 8
  %242 = load i64, i64* %2, align 8
  %243 = load i64, i64* %3, align 8
  %244 = add nsw i64 %242, %243
  %245 = load i64, i64* %2, align 8
  %246 = add nsw i64 %244, %245
  %247 = load i64, i64* %3, align 8
  %248 = add nsw i64 %246, %247
  store i32 1, i32* %6, align 4
  %249 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %6, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %250 = load i32, i32* %249, align 4
  %251 = sext i32 %250 to i64
  %252 = mul i64 %251, 24
  %253 = add i64 %248, %252
  %254 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %255 = add i64 %254, %253
  store i64 %255, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  br label %256

; <label>:256:                                    ; preds = %217
  %257 = load i32, i32* %1, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %1, align 4
  br label %212

; <label>:259:                                    ; preds = %212
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %16
  store i32 2, i32* %4, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %76
  %260 = load i32, i32* %1, align 4
  %261 = sext i32 %260 to i64
  %262 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %263 = icmp slt i64 %261, %262
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %161
  %264 = load i32, i32* %1, align 4
  %_ = sub i32 0, %264
  %gen = add i32 %_, 1
  %265 = add nsw i32 %264, 1
  store i32 %265, i32* %1, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %180
  %266 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %267 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %_11 = sub i64 0, %267
  %gen12 = add i64 %_11, %266
  %_13 = sub i64 0, %267
  %gen14 = add i64 %_13, %266
  %_15 = shl i64 %267, %266
  %_16 = shl i64 %267, %266
  %268 = add nsw i64 %267, %266
  store i64 %268, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %269 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %270 = mul i64 %269, 8
  %271 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %270, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6028, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %272 = bitcast i8* %271 to double**
  store double** %272, double*** @_ZN3pov14WeightListPoolE, align 8
  %273 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %_17 = sub i64 %273, 8
  %gen18 = mul i64 %_17, 8
  %_19 = sub i64 0, %273
  %gen20 = add i64 %_19, 8
  %_21 = shl i64 %273, 8
  %274 = mul i64 %273, 8
  %275 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %274, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6029, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %276 = bitcast i8* %275 to %"struct.pov::Texture_Struct"***
  store %"struct.pov::Texture_Struct"*** %276, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %277 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %_22 = sub i64 0, %277
  %gen23 = add i64 %_22, 8
  %_24 = sub i64 0, %277
  %gen25 = add i64 %_24, 8
  %_26 = shl i64 %277, 8
  %_27 = sub i64 0, %277
  %gen28 = add i64 %_27, 8
  %_29 = sub i64 0, %277
  %gen30 = add i64 %_29, 8
  %_31 = shl i64 %277, 8
  %_32 = sub i64 0, %277
  %gen33 = add i64 %_32, 8
  %278 = mul i64 %277, 8
  %279 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %278, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6030, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %280 = bitcast i8* %279 to %"struct.pov::Light_Tested_Struct"**
  store %"struct.pov::Light_Tested_Struct"** %280, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  store i32 0, i32* %1, align 4
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define void @_ZN3pov18InitComTexDataPoolEv() #1 {
  store %"struct.pov::ComTexData_Struct"* null, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  store %"struct.pov::ComTexData_Struct"* null, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  store i32 0, i32* @_ZN3pov22ComputeTexturePoolSizeE, align 4
  ret void
}

declare i8* @_ZN3pov10pov_mallocEmPKciS1_(i64, i8*, i32, i8*) #2

; Function Attrs: noinline uwtable
define void @_ZN3pov26Reinitialize_Lighting_CodeEiPPPNS_14Texture_StructEPPd(i32, %"struct.pov::Texture_Struct"***, double**) #0 {
  %4 = load i32, i32* @x.5
  %5 = load i32, i32* @y.6
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i32, align 4
  %13 = alloca %"struct.pov::Texture_Struct"***, align 8
  %14 = alloca double**, align 8
  store i32 %0, i32* %12, align 4
  store %"struct.pov::Texture_Struct"*** %1, %"struct.pov::Texture_Struct"**** %13, align 8
  store double** %2, double*** %14, align 8
  %15 = load i32, i32* %12, align 4
  %16 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %17 = icmp sgt i32 %15, %16
  %18 = load i32, i32* @x.5
  %19 = load i32, i32* @y.6
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %43

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* %12, align 4
  %28 = icmp sge i32 %27, 1073741823
  br i1 %28, label %29, label %31

; <label>:29:                                     ; preds = %26
  %30 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0))
  br label %31

; <label>:31:                                     ; preds = %29, %26
  %32 = load i32, i32* %12, align 4
  store i32 %32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  call void @_ZN3povL17ReInitMallocPoolsEv()
  %33 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %34 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %35 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %33, i64 %34
  %36 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %35, align 8
  store %"struct.pov::Texture_Struct"** %36, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %37 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** %13, align 8
  store %"struct.pov::Texture_Struct"** %36, %"struct.pov::Texture_Struct"*** %37, align 8
  %38 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %39 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %40 = getelementptr inbounds double*, double** %38, i64 %39
  %41 = load double*, double** %40, align 8
  store double* %41, double** @_ZN3pov11Weight_ListE, align 8
  %42 = load double**, double*** %14, align 8
  store double* %41, double** %42, align 8
  br label %43

; <label>:43:                                     ; preds = %31, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %44 = alloca i32, align 4
  %45 = alloca %"struct.pov::Texture_Struct"***, align 8
  %46 = alloca double**, align 8
  store i32 %0, i32* %44, align 4
  store %"struct.pov::Texture_Struct"*** %1, %"struct.pov::Texture_Struct"**** %45, align 8
  store double** %2, double*** %46, align 8
  %47 = load i32, i32* %44, align 4
  %48 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %49 = icmp sgt i32 %47, %48
  br label %originalBB
}

declare i32 @_ZN3pov5ErrorEPKcz(i8*, ...) #2

; Function Attrs: noinline uwtable
define internal void @_ZN3povL17ReInitMallocPoolsEv() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %7 = sext i32 %6 to i64
  %8 = mul i64 %7, 8
  store i64 %8, i64* %2, align 8
  %9 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %10 = sext i32 %9 to i64
  %11 = mul i64 %10, 8
  store i64 %11, i64* %3, align 8
  %12 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  store i64 %12, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  store i32 0, i32* %1, align 4
  br label %13

; <label>:13:                                     ; preds = %originalBBpart258, %0
  %14 = load i32, i32* @x.7
  %15 = load i32, i32* @y.8
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load i32, i32* %1, align 4
  %23 = sext i32 %22 to i64
  %24 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %25 = icmp slt i64 %23, %24
  %26 = load i32, i32* @x.7
  %27 = load i32, i32* @y.8
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %126

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.7
  %36 = load i32, i32* @y.8
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %34
  %43 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %44 = load i32, i32* %1, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds double*, double** %43, i64 %45
  %47 = load double*, double** %46, align 8
  %48 = bitcast double* %47 to i8*
  %49 = load i64, i64* %2, align 8
  %50 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %48, i64 %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6128, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %51 = bitcast i8* %50 to double*
  %52 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %53 = load i32, i32* %1, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds double*, double** %52, i64 %54
  store double* %51, double** %55, align 8
  %56 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %57 = load i32, i32* %1, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %56, i64 %58
  %60 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %59, align 8
  %61 = bitcast %"struct.pov::Texture_Struct"** %60 to i8*
  %62 = load i64, i64* %3, align 8
  %63 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %61, i64 %62, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6129, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %64 = bitcast i8* %63 to %"struct.pov::Texture_Struct"**
  %65 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %66 = load i32, i32* %1, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %65, i64 %67
  store %"struct.pov::Texture_Struct"** %64, %"struct.pov::Texture_Struct"*** %68, align 8
  %69 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %70 = load i32, i32* %1, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %69, i64 %71
  %73 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %72, align 8
  %74 = bitcast %"struct.pov::Light_Tested_Struct"* %73 to i8*
  store i32 1, i32* %4, align 4
  %75 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %4, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul i64 %77, 24
  %79 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %74, i64 %78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6130, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %80 = bitcast i8* %79 to %"struct.pov::Light_Tested_Struct"*
  %81 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %82 = load i32, i32* %1, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %81, i64 %83
  store %"struct.pov::Light_Tested_Struct"* %80, %"struct.pov::Light_Tested_Struct"** %84, align 8
  %85 = load i64, i64* %2, align 8
  %86 = load i64, i64* %3, align 8
  %87 = add nsw i64 %85, %86
  %88 = load i64, i64* %2, align 8
  %89 = add nsw i64 %87, %88
  %90 = load i64, i64* %3, align 8
  %91 = add nsw i64 %89, %90
  store i32 1, i32* %5, align 4
  %92 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %5, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = mul i64 %94, 24
  %96 = add i64 %91, %95
  %97 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %98 = add i64 %97, %96
  store i64 %98, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %99 = load i32, i32* @x.7
  %100 = load i32, i32* @y.8
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart254, label %originalBB1alteredBB

originalBBpart254:                                ; preds = %originalBB1
  br label %107

; <label>:107:                                    ; preds = %originalBBpart254
  %108 = load i32, i32* @x.7
  %109 = load i32, i32* @y.8
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %107
  %116 = load i32, i32* %1, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %1, align 4
  %118 = load i32, i32* @x.7
  %119 = load i32, i32* @y.8
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %13

; <label>:126:                                    ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %13
  %127 = load i32, i32* %1, align 4
  %128 = sext i32 %127 to i64
  %129 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %130 = icmp slt i64 %128, %129
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %131 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %132 = load i32, i32* %1, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double*, double** %131, i64 %133
  %135 = load double*, double** %134, align 8
  %136 = bitcast double* %135 to i8*
  %137 = load i64, i64* %2, align 8
  %138 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %136, i64 %137, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6128, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %139 = bitcast i8* %138 to double*
  %140 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %141 = load i32, i32* %1, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds double*, double** %140, i64 %142
  store double* %139, double** %143, align 8
  %144 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %145 = load i32, i32* %1, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %144, i64 %146
  %148 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %147, align 8
  %149 = bitcast %"struct.pov::Texture_Struct"** %148 to i8*
  %150 = load i64, i64* %3, align 8
  %151 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %149, i64 %150, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6129, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %152 = bitcast i8* %151 to %"struct.pov::Texture_Struct"**
  %153 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %154 = load i32, i32* %1, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %153, i64 %155
  store %"struct.pov::Texture_Struct"** %152, %"struct.pov::Texture_Struct"*** %156, align 8
  %157 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %158 = load i32, i32* %1, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %157, i64 %159
  %161 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %160, align 8
  %162 = bitcast %"struct.pov::Light_Tested_Struct"* %161 to i8*
  store i32 1, i32* %4, align 4
  %163 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %4, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %_ = sub i64 0, %165
  %gen = add i64 %_, 24
  %_2 = sub i64 %165, 24
  %gen3 = mul i64 %_2, 24
  %_4 = shl i64 %165, 24
  %_5 = sub i64 %165, 24
  %gen6 = mul i64 %_5, 24
  %_7 = sub i64 0, %165
  %gen8 = add i64 %_7, 24
  %_9 = sub i64 %165, 24
  %gen10 = mul i64 %_9, 24
  %166 = mul i64 %165, 24
  %167 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %162, i64 %166, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6130, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %168 = bitcast i8* %167 to %"struct.pov::Light_Tested_Struct"*
  %169 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %170 = load i32, i32* %1, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %169, i64 %171
  store %"struct.pov::Light_Tested_Struct"* %168, %"struct.pov::Light_Tested_Struct"** %172, align 8
  %173 = load i64, i64* %2, align 8
  %174 = load i64, i64* %3, align 8
  %_11 = sub i64 0, %173
  %gen12 = add i64 %_11, %174
  %_13 = shl i64 %173, %174
  %_14 = sub i64 %173, %174
  %gen15 = mul i64 %_14, %174
  %_16 = shl i64 %173, %174
  %_17 = sub i64 0, %173
  %gen18 = add i64 %_17, %174
  %_19 = sub i64 %173, %174
  %gen20 = mul i64 %_19, %174
  %_21 = shl i64 %173, %174
  %175 = add nsw i64 %173, %174
  %176 = load i64, i64* %2, align 8
  %_22 = sub i64 %175, %176
  %gen23 = mul i64 %_22, %176
  %_24 = sub i64 0, %175
  %gen25 = add i64 %_24, %176
  %_26 = shl i64 %175, %176
  %_27 = shl i64 %175, %176
  %_28 = shl i64 %175, %176
  %_29 = sub i64 0, %175
  %gen30 = add i64 %_29, %176
  %_31 = shl i64 %175, %176
  %_32 = shl i64 %175, %176
  %177 = add nsw i64 %175, %176
  %178 = load i64, i64* %3, align 8
  %_33 = shl i64 %177, %178
  %_34 = shl i64 %177, %178
  %_35 = sub i64 0, %177
  %gen36 = add i64 %_35, %178
  %_37 = sub i64 %177, %178
  %gen38 = mul i64 %_37, %178
  %179 = add nsw i64 %177, %178
  store i32 1, i32* %5, align 4
  %180 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %5, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = mul i64 %182, 24
  %_39 = shl i64 %179, %183
  %184 = add i64 %179, %183
  %185 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %_40 = sub i64 0, %185
  %gen41 = add i64 %_40, %184
  %_42 = sub i64 0, %185
  %gen43 = add i64 %_42, %184
  %_44 = sub i64 0, %185
  %gen45 = add i64 %_44, %184
  %_46 = shl i64 %185, %184
  %_47 = sub i64 %185, %184
  %gen48 = mul i64 %_47, %184
  %_49 = sub i64 %185, %184
  %gen50 = mul i64 %_49, %184
  %_51 = sub i64 %185, %184
  %gen52 = mul i64 %_51, %184
  %186 = add i64 %185, %184
  store i64 %186, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  br label %originalBB1

originalBB56alteredBB:                            ; preds = %originalBB56, %107
  %187 = load i32, i32* %1, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %1, align 4
  br label %originalBB56
}

; Function Attrs: noinline uwtable
define void @_ZN3pov26Deinitialize_Lighting_CodeEv() #0 {
  call void @_ZN3povL17DeInitMallocPoolsEv()
  call void @_ZN3pov18FreeComTexDataPoolEv()
  %1 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %2 = icmp ne %"struct.pov::Texture_Struct"** %1, null
  br i1 %2, label %3, label %6

; <label>:3:                                      ; preds = %0
  %4 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %5 = bitcast %"struct.pov::Texture_Struct"** %4 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 423)
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  br label %6

; <label>:6:                                      ; preds = %3, %0
  %7 = load i32, i32* @x.9
  %8 = load i32, i32* @y.10
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  store i32 0, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %15 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %16 = icmp ne i32 %15, 0
  %17 = load i32, i32* @x.9
  %18 = load i32, i32* @y.10
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %26

; <label>:25:                                     ; preds = %originalBBpart2
  store i32 0, i32* @_ZN3pov9disp_elemE, align 4
  br label %26

; <label>:26:                                     ; preds = %25, %originalBBpart2
  store %"struct.pov::Light_Tested_Struct"* null, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  store double* null, double** @_ZN3pov11Weight_ListE, align 8
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %6
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  store i32 0, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %27 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %28 = icmp ne i32 %27, 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL17DeInitMallocPoolsEv() #0 {
  %1 = alloca i32, align 4
  %2 = load double*, double** @_ZN3pov2s0E, align 8
  %3 = icmp ne double* %2, null
  br i1 %3, label %4, label %23

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @x.11
  %6 = load i32, i32* @y.12
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = load double*, double** @_ZN3pov2s0E, align 8
  %14 = bitcast double* %13 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6047)
  store double* null, double** @_ZN3pov2s0E, align 8
  %15 = load i32, i32* @x.11
  %16 = load i32, i32* @y.12
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %originalBBpart2, %0
  store double* null, double** @_ZN3pov2s0E, align 8
  %24 = load double*, double** @_ZN3pov2s1E, align 8
  %25 = icmp ne double* %24, null
  br i1 %25, label %26, label %45

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.11
  %28 = load i32, i32* @y.12
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %26
  %35 = load double*, double** @_ZN3pov2s1E, align 8
  %36 = bitcast double* %35 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6048)
  store double* null, double** @_ZN3pov2s1E, align 8
  %37 = load i32, i32* @x.11
  %38 = load i32, i32* @y.12
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45

; <label>:45:                                     ; preds = %originalBBpart24, %23
  store double* null, double** @_ZN3pov2s1E, align 8
  %46 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %47 = icmp ne %"struct.pov::Media_Struct"*** %46, null
  br i1 %47, label %48, label %217

; <label>:48:                                     ; preds = %45
  %49 = load i32, i32* @x.11
  %50 = load i32, i32* @y.12
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %48
  store i32 0, i32* %1, align 4
  %57 = load i32, i32* @x.11
  %58 = load i32, i32* @y.12
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65

; <label>:65:                                     ; preds = %213, %originalBBpart28
  %66 = load i32, i32* %1, align 4
  %67 = sext i32 %66 to i64
  %68 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %69 = icmp slt i64 %67, %68
  br i1 %69, label %70, label %216

; <label>:70:                                     ; preds = %65
  %71 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %72 = load i32, i32* %1, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %71, i64 %73
  %75 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %74, align 8
  %76 = icmp ne %"struct.pov::Media_Struct"** %75, null
  br i1 %76, label %77, label %88

; <label>:77:                                     ; preds = %70
  %78 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %79 = load i32, i32* %1, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %78, i64 %80
  %82 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %81, align 8
  %83 = bitcast %"struct.pov::Media_Struct"** %82 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %83, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6054)
  %84 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %85 = load i32, i32* %1, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %84, i64 %86
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %87, align 8
  br label %88

; <label>:88:                                     ; preds = %77, %70
  %89 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %90 = load i32, i32* %1, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %89, i64 %91
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %92, align 8
  %93 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %94 = load i32, i32* %1, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %93, i64 %95
  %97 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %96, align 8
  %98 = icmp ne %"struct.pov::Media_Struct"** %97, null
  br i1 %98, label %99, label %110

; <label>:99:                                     ; preds = %88
  %100 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %101 = load i32, i32* %1, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %100, i64 %102
  %104 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %103, align 8
  %105 = bitcast %"struct.pov::Media_Struct"** %104 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %105, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6057)
  %106 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %107 = load i32, i32* %1, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %106, i64 %108
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %109, align 8
  br label %110

; <label>:110:                                    ; preds = %99, %88
  %111 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %112 = load i32, i32* %1, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %111, i64 %113
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %114, align 8
  %115 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %116 = load i32, i32* %1, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %115, i64 %117
  %119 = load %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %118, align 8
  %120 = icmp ne %"struct.pov::Light_List_Struct"* %119, null
  br i1 %120, label %121, label %132

; <label>:121:                                    ; preds = %110
  %122 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %123 = load i32, i32* %1, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %122, i64 %124
  %126 = load %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %125, align 8
  %127 = bitcast %"struct.pov::Light_List_Struct"* %126 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %127, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6060)
  %128 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %129 = load i32, i32* %1, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %128, i64 %130
  store %"struct.pov::Light_List_Struct"* null, %"struct.pov::Light_List_Struct"** %131, align 8
  br label %132

; <label>:132:                                    ; preds = %121, %110
  %133 = load i32, i32* @x.11
  %134 = load i32, i32* @y.12
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %132
  %141 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %142 = load i32, i32* %1, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %141, i64 %143
  store %"struct.pov::Light_List_Struct"* null, %"struct.pov::Light_List_Struct"** %144, align 8
  %145 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %146 = load i32, i32* %1, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %145, i64 %147
  %149 = load %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %148, align 8
  %150 = icmp ne %"struct.pov::Lit_Interval_Struct"* %149, null
  %151 = load i32, i32* @x.11
  %152 = load i32, i32* @y.12
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %150, label %159, label %170

; <label>:159:                                    ; preds = %originalBBpart212
  %160 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %161 = load i32, i32* %1, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %160, i64 %162
  %164 = load %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %163, align 8
  %165 = bitcast %"struct.pov::Lit_Interval_Struct"* %164 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %165, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6063)
  %166 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %167 = load i32, i32* %1, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %166, i64 %168
  store %"struct.pov::Lit_Interval_Struct"* null, %"struct.pov::Lit_Interval_Struct"** %169, align 8
  br label %170

; <label>:170:                                    ; preds = %159, %originalBBpart212
  %171 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %172 = load i32, i32* %1, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %171, i64 %173
  store %"struct.pov::Lit_Interval_Struct"* null, %"struct.pov::Lit_Interval_Struct"** %174, align 8
  %175 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %176 = load i32, i32* %1, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %175, i64 %177
  %179 = load %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %178, align 8
  %180 = icmp ne %"struct.pov::Media_Interval_Struct"* %179, null
  br i1 %180, label %181, label %192

; <label>:181:                                    ; preds = %170
  %182 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %183 = load i32, i32* %1, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %182, i64 %184
  %186 = load %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %185, align 8
  %187 = bitcast %"struct.pov::Media_Interval_Struct"* %186 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %187, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6066)
  %188 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %189 = load i32, i32* %1, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %188, i64 %190
  store %"struct.pov::Media_Interval_Struct"* null, %"struct.pov::Media_Interval_Struct"** %191, align 8
  br label %192

; <label>:192:                                    ; preds = %181, %170
  %193 = load i32, i32* @x.11
  %194 = load i32, i32* @y.12
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %192
  %201 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %202 = load i32, i32* %1, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %201, i64 %203
  store %"struct.pov::Media_Interval_Struct"* null, %"struct.pov::Media_Interval_Struct"** %204, align 8
  %205 = load i32, i32* @x.11
  %206 = load i32, i32* @y.12
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %213

; <label>:213:                                    ; preds = %originalBBpart216
  %214 = load i32, i32* %1, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %1, align 4
  br label %65

; <label>:216:                                    ; preds = %65
  br label %217

; <label>:217:                                    ; preds = %216, %45
  %218 = load i32, i32* @x.11
  %219 = load i32, i32* @y.12
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %217
  %226 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %227 = icmp ne %"struct.pov::Media_Struct"*** %226, null
  %228 = load i32, i32* @x.11
  %229 = load i32, i32* @y.12
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %227, label %236, label %239

; <label>:236:                                    ; preds = %originalBBpart220
  %237 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %238 = bitcast %"struct.pov::Media_Struct"*** %237 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %238, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6071)
  store %"struct.pov::Media_Struct"*** null, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  br label %239

; <label>:239:                                    ; preds = %236, %originalBBpart220
  store %"struct.pov::Media_Struct"*** null, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %240 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %241 = icmp ne i64* %240, null
  br i1 %241, label %242, label %245

; <label>:242:                                    ; preds = %239
  %243 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %244 = bitcast i64* %243 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %244, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6073)
  store i64* null, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  br label %245

; <label>:245:                                    ; preds = %242, %239
  store i64* null, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %246 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %247 = icmp ne %"struct.pov::Media_Struct"*** %246, null
  br i1 %247, label %248, label %251

; <label>:248:                                    ; preds = %245
  %249 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %250 = bitcast %"struct.pov::Media_Struct"*** %249 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %250, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6076)
  store %"struct.pov::Media_Struct"*** null, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  br label %251

; <label>:251:                                    ; preds = %248, %245
  store %"struct.pov::Media_Struct"*** null, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %252 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %253 = icmp ne i64* %252, null
  br i1 %253, label %254, label %257

; <label>:254:                                    ; preds = %251
  %255 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %256 = bitcast i64* %255 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %256, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6078)
  store i64* null, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  br label %257

; <label>:257:                                    ; preds = %254, %251
  store i64* null, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %258 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %259 = icmp ne %"struct.pov::Light_List_Struct"** %258, null
  br i1 %259, label %260, label %263

; <label>:260:                                    ; preds = %257
  %261 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %262 = bitcast %"struct.pov::Light_List_Struct"** %261 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %262, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6081)
  store %"struct.pov::Light_List_Struct"** null, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  br label %263

; <label>:263:                                    ; preds = %260, %257
  store %"struct.pov::Light_List_Struct"** null, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %264 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %265 = icmp ne %"struct.pov::Lit_Interval_Struct"** %264, null
  br i1 %265, label %266, label %269

; <label>:266:                                    ; preds = %263
  %267 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %268 = bitcast %"struct.pov::Lit_Interval_Struct"** %267 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %268, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6084)
  store %"struct.pov::Lit_Interval_Struct"** null, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  br label %269

; <label>:269:                                    ; preds = %266, %263
  store %"struct.pov::Lit_Interval_Struct"** null, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %270 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %271 = icmp ne %"struct.pov::Media_Interval_Struct"** %270, null
  br i1 %271, label %272, label %275

; <label>:272:                                    ; preds = %269
  %273 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %274 = bitcast %"struct.pov::Media_Interval_Struct"** %273 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %274, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6087)
  store %"struct.pov::Media_Interval_Struct"** null, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  br label %275

; <label>:275:                                    ; preds = %272, %269
  store %"struct.pov::Media_Interval_Struct"** null, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %276 = load i64*, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %277 = icmp ne i64* %276, null
  br i1 %277, label %278, label %281

; <label>:278:                                    ; preds = %275
  %279 = load i64*, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %280 = bitcast i64* %279 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %280, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6089)
  store i64* null, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  br label %281

; <label>:281:                                    ; preds = %278, %275
  %282 = load i32, i32* @x.11
  %283 = load i32, i32* @y.12
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %281
  store i64* null, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %290 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %291 = icmp ne %"struct.pov::Light_Tested_Struct"** %290, null
  %292 = load i32, i32* @x.11
  %293 = load i32, i32* @y.12
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %291, label %300, label %409

; <label>:300:                                    ; preds = %originalBBpart224
  store i32 0, i32* %1, align 4
  br label %301

; <label>:301:                                    ; preds = %389, %300
  %302 = load i32, i32* @x.11
  %303 = load i32, i32* @y.12
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %301
  %310 = load i32, i32* %1, align 4
  %311 = sext i32 %310 to i64
  %312 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %313 = icmp slt i64 %311, %312
  %314 = load i32, i32* @x.11
  %315 = load i32, i32* @y.12
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %313, label %322, label %392

; <label>:322:                                    ; preds = %originalBBpart228
  %323 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %324 = load i32, i32* %1, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %323, i64 %325
  %327 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %326, align 8
  %328 = icmp ne %"struct.pov::Light_Tested_Struct"* %327, null
  br i1 %328, label %329, label %340

; <label>:329:                                    ; preds = %322
  %330 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %331 = load i32, i32* %1, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %330, i64 %332
  %334 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %333, align 8
  %335 = bitcast %"struct.pov::Light_Tested_Struct"* %334 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %335, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6097)
  %336 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %337 = load i32, i32* %1, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %336, i64 %338
  store %"struct.pov::Light_Tested_Struct"* null, %"struct.pov::Light_Tested_Struct"** %339, align 8
  br label %340

; <label>:340:                                    ; preds = %329, %322
  %341 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %342 = load i32, i32* %1, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %341, i64 %343
  store %"struct.pov::Light_Tested_Struct"* null, %"struct.pov::Light_Tested_Struct"** %344, align 8
  %345 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %346 = load i32, i32* %1, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds double*, double** %345, i64 %347
  %349 = load double*, double** %348, align 8
  %350 = icmp ne double* %349, null
  br i1 %350, label %351, label %362

; <label>:351:                                    ; preds = %340
  %352 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %353 = load i32, i32* %1, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds double*, double** %352, i64 %354
  %356 = load double*, double** %355, align 8
  %357 = bitcast double* %356 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %357, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6100)
  %358 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %359 = load i32, i32* %1, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds double*, double** %358, i64 %360
  store double* null, double** %361, align 8
  br label %362

; <label>:362:                                    ; preds = %351, %340
  %363 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %364 = load i32, i32* %1, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds double*, double** %363, i64 %365
  store double* null, double** %366, align 8
  %367 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %368 = load i32, i32* %1, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %367, i64 %369
  %371 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %370, align 8
  %372 = icmp ne %"struct.pov::Texture_Struct"** %371, null
  br i1 %372, label %373, label %384

; <label>:373:                                    ; preds = %362
  %374 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %375 = load i32, i32* %1, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %374, i64 %376
  %378 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %377, align 8
  %379 = bitcast %"struct.pov::Texture_Struct"** %378 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %379, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6103)
  %380 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %381 = load i32, i32* %1, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %380, i64 %382
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** %383, align 8
  br label %384

; <label>:384:                                    ; preds = %373, %362
  %385 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %386 = load i32, i32* %1, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %385, i64 %387
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** %388, align 8
  br label %389

; <label>:389:                                    ; preds = %384
  %390 = load i32, i32* %1, align 4
  %391 = add nsw i32 %390, 1
  store i32 %391, i32* %1, align 4
  br label %301

; <label>:392:                                    ; preds = %originalBBpart228
  %393 = load i32, i32* @x.11
  %394 = load i32, i32* @y.12
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %392
  %401 = load i32, i32* @x.11
  %402 = load i32, i32* @y.12
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %409

; <label>:409:                                    ; preds = %originalBBpart232, %originalBBpart224
  %410 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %411 = icmp ne %"struct.pov::Light_Tested_Struct"** %410, null
  br i1 %411, label %412, label %415

; <label>:412:                                    ; preds = %409
  %413 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %414 = bitcast %"struct.pov::Light_Tested_Struct"** %413 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %414, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6108)
  store %"struct.pov::Light_Tested_Struct"** null, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  br label %415

; <label>:415:                                    ; preds = %412, %409
  store %"struct.pov::Light_Tested_Struct"** null, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %416 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %417 = icmp ne double** %416, null
  br i1 %417, label %418, label %421

; <label>:418:                                    ; preds = %415
  %419 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %420 = bitcast double** %419 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %420, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6111)
  store double** null, double*** @_ZN3pov14WeightListPoolE, align 8
  br label %421

; <label>:421:                                    ; preds = %418, %415
  store double** null, double*** @_ZN3pov14WeightListPoolE, align 8
  %422 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %423 = icmp ne %"struct.pov::Texture_Struct"*** %422, null
  br i1 %423, label %424, label %427

; <label>:424:                                    ; preds = %421
  %425 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %426 = bitcast %"struct.pov::Texture_Struct"*** %425 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %426, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6114)
  store %"struct.pov::Texture_Struct"*** null, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  br label %427

; <label>:427:                                    ; preds = %424, %421
  store %"struct.pov::Texture_Struct"*** null, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %428 = load double*, double** @_ZN3pov2s0E, align 8
  %429 = bitcast double* %428 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %429, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6047)
  store double* null, double** @_ZN3pov2s0E, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %430 = load double*, double** @_ZN3pov2s1E, align 8
  %431 = bitcast double* %430 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %431, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6048)
  store double* null, double** @_ZN3pov2s1E, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  store i32 0, i32* %1, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %132
  %432 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %433 = load i32, i32* %1, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %432, i64 %434
  store %"struct.pov::Light_List_Struct"* null, %"struct.pov::Light_List_Struct"** %435, align 8
  %436 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %437 = load i32, i32* %1, align 4
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %436, i64 %438
  %440 = load %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %439, align 8
  %441 = icmp ne %"struct.pov::Lit_Interval_Struct"* %440, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %192
  %442 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %443 = load i32, i32* %1, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %442, i64 %444
  store %"struct.pov::Media_Interval_Struct"* null, %"struct.pov::Media_Interval_Struct"** %445, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %217
  %446 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %447 = icmp ne %"struct.pov::Media_Struct"*** %446, null
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %281
  store i64* null, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %448 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %449 = icmp ne %"struct.pov::Light_Tested_Struct"** %448, null
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %301
  %450 = load i32, i32* %1, align 4
  %451 = sext i32 %450 to i64
  %452 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %453 = icmp slt i64 %451, %452
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %392
  br label %originalBB30
}

; Function Attrs: noinline uwtable
define void @_ZN3pov18FreeComTexDataPoolEv() #0 {
  %1 = alloca %"struct.pov::ComTexData_Struct"*, align 8
  store %"struct.pov::ComTexData_Struct"* null, %"struct.pov::ComTexData_Struct"** %1, align 8
  br label %2

; <label>:2:                                      ; preds = %5, %0
  %3 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %4 = icmp ne %"struct.pov::ComTexData_Struct"* %3, null
  br i1 %4, label %5, label %12

; <label>:5:                                      ; preds = %2
  %6 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  store %"struct.pov::ComTexData_Struct"* %6, %"struct.pov::ComTexData_Struct"** %1, align 8
  %7 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %8 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %7, i32 0, i32 1
  %9 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %8, align 8
  store %"struct.pov::ComTexData_Struct"* %9, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %10 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %1, align 8
  %11 = bitcast %"struct.pov::ComTexData_Struct"* %10 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6215)
  store %"struct.pov::ComTexData_Struct"* null, %"struct.pov::ComTexData_Struct"** %1, align 8
  br label %2

; <label>:12:                                     ; preds = %2
  br label %13

; <label>:13:                                     ; preds = %16, %12
  %14 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  %15 = icmp ne %"struct.pov::ComTexData_Struct"* %14, null
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %13
  %17 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  store %"struct.pov::ComTexData_Struct"* %17, %"struct.pov::ComTexData_Struct"** %1, align 8
  %18 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  %19 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %18, i32 0, i32 1
  %20 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %19, align 8
  store %"struct.pov::ComTexData_Struct"* %20, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  %21 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %1, align 8
  %22 = bitcast %"struct.pov::ComTexData_Struct"* %21 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6222)
  store %"struct.pov::ComTexData_Struct"* null, %"struct.pov::ComTexData_Struct"** %1, align 8
  br label %13

; <label>:23:                                     ; preds = %13
  ret void
}

declare void @_ZN3pov8pov_freeEPvPKci(i8*, i8*, i32) #2

; Function Attrs: noinline uwtable
define void @_ZN3pov25Determine_Apparent_ColourEPNS_10istk_entryEPfPNS_10Ray_StructEd(%"struct.pov::istk_entry"*, float*, %"struct.pov::Ray_Struct"*, double) #0 {
  %5 = load i32, i32* @x.15
  %6 = load i32, i32* @y.16
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca %"struct.pov::istk_entry"*, align 8
  %14 = alloca float*, align 8
  %15 = alloca %"struct.pov::Ray_Struct"*, align 8
  %16 = alloca double, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca double*, align 8
  %20 = alloca double, align 8
  %21 = alloca [5 x float], align 16
  %22 = alloca [3 x double], align 16
  %23 = alloca [3 x double], align 16
  %24 = alloca [2 x double], align 16
  %25 = alloca %"struct.pov::Texture_Struct"**, align 8
  %26 = alloca %"struct.pov::Texture_Struct"*, align 8
  %27 = alloca %"struct.pov::Light_Tested_Struct"*, align 8
  store %"struct.pov::istk_entry"* %0, %"struct.pov::istk_entry"** %13, align 8
  store float* %1, float** %14, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %15, align 8
  store double %3, double* %16, align 8
  store double* null, double** %19, align 8
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** %25, align 8
  store %"struct.pov::Light_Tested_Struct"* null, %"struct.pov::Light_Tested_Struct"** %27, align 8
  %28 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %29 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %28, i32 0, i32 0
  %30 = load double, double* %29, align 8
  %31 = load double, double* @_ZN3pov11Total_DepthE, align 8
  %32 = fadd double %31, %30
  store double %32, double* @_ZN3pov11Total_DepthE, align 8
  %33 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %34 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %35 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %34, i32 0, i32 1
  %36 = getelementptr inbounds [3 x double], [3 x double]* %35, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %33, double* %36)
  %37 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %39 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %40 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %41 = icmp sge i64 %39, %40
  %42 = load i32, i32* @x.15
  %43 = load i32, i32* @y.16
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %50, label %53

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %52 = mul nsw i64 %51, 2
  call void @_ZN3pov22ResizeLightMallocPoolsEl(i64 %52)
  br label %53

; <label>:53:                                     ; preds = %50, %originalBBpart2
  %54 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %55 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %56 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %54, i64 %55
  %57 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %56, align 8
  store %"struct.pov::Light_Tested_Struct"* %57, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  store i32 0, i32* %17, align 4
  br label %58

; <label>:58:                                     ; preds = %68, %53
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3), align 8
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %71

; <label>:62:                                     ; preds = %58
  %63 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %64 = load i32, i32* %17, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %63, i64 %65
  %67 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %66, i32 0, i32 0
  store i32 0, i32* %67, align 4
  br label %68

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* %17, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %17, align 4
  br label %58

; <label>:71:                                     ; preds = %58
  %72 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %73 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %72, i32 0, i32 5
  %74 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %73, align 8
  %75 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %74, i32 0, i32 0
  %76 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %75, align 8
  %77 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %76, i32 0, i32 2
  %78 = load void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)** %77, align 8
  %79 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %80 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %81 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %80, i32 0, i32 5
  %82 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %81, align 8
  %83 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  call void %78(double* %79, %"struct.pov::Object_Struct"* %82, %"struct.pov::istk_entry"* %83)
  %84 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %85 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %84, i32 0, i32 5
  %86 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %85, align 8
  %87 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %86, i32 0, i32 13
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = and i64 %89, 4
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %105

; <label>:92:                                     ; preds = %71
  %93 = getelementptr inbounds [3 x double], [3 x double]* %22, i64 0, i64 0
  %94 = load double, double* %93, align 16
  %95 = fsub double -0.000000e+00, %94
  %96 = getelementptr inbounds [3 x double], [3 x double]* %22, i64 0, i64 0
  store double %95, double* %96, align 16
  %97 = getelementptr inbounds [3 x double], [3 x double]* %22, i64 0, i64 1
  %98 = load double, double* %97, align 8
  %99 = fsub double -0.000000e+00, %98
  %100 = getelementptr inbounds [3 x double], [3 x double]* %22, i64 0, i64 1
  store double %99, double* %100, align 8
  %101 = getelementptr inbounds [3 x double], [3 x double]* %22, i64 0, i64 2
  %102 = load double, double* %101, align 16
  %103 = fsub double -0.000000e+00, %102
  %104 = getelementptr inbounds [3 x double], [3 x double]* %22, i64 0, i64 2
  store double %103, double* %104, align 16
  br label %105

; <label>:105:                                    ; preds = %92, %71
  %106 = load i32, i32* @x.15
  %107 = load i32, i32* @y.16
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %105
  %114 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %115 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %116 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %115, i32 0, i32 1
  %117 = getelementptr inbounds [3 x double], [3 x double]* %116, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %20, double* %114, double* %117)
  %118 = load double, double* %20, align 8
  %119 = fcmp ogt double %118, 0.000000e+00
  %120 = load i32, i32* @x.15
  %121 = load i32, i32* @y.16
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br i1 %119, label %128, label %130

; <label>:128:                                    ; preds = %originalBBpart25
  %129 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %129, double -1.000000e+00)
  br label %130

; <label>:130:                                    ; preds = %128, %originalBBpart25
  %131 = load i32, i32* @x.15
  %132 = load i32, i32* @y.16
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %130
  %139 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %140 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %139, i32 0, i32 2
  %141 = getelementptr inbounds [3 x double], [3 x double]* %140, i32 0, i32 0
  %142 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %141, double* %142)
  %143 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %144 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %143, i32 0, i32 3
  %145 = getelementptr inbounds [3 x double], [3 x double]* %144, i32 0, i32 0
  %146 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %145, double* %146)
  %147 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %148 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %147, i32 0, i32 5
  %149 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %148, align 8
  %150 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %149, i32 0, i32 13
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i64
  %153 = and i64 %152, 8192
  %154 = icmp ne i64 %153, 0
  %155 = load i32, i32* @x.15
  %156 = load i32, i32* @y.16
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart215, label %originalBB7alteredBB

originalBBpart215:                                ; preds = %originalBB7
  br i1 %154, label %163, label %196

; <label>:163:                                    ; preds = %originalBBpart215
  %164 = load i32, i32* @x.15
  %165 = load i32, i32* @y.16
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %163
  %172 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %173 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %172, i32 0, i32 5
  %174 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %173, align 8
  %175 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %174, i32 0, i32 0
  %176 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %175, align 8
  %177 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %176, i32 0, i32 3
  %178 = load void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)** %177, align 8
  %179 = getelementptr inbounds [2 x double], [2 x double]* %24, i32 0, i32 0
  %180 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %181 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %180, i32 0, i32 5
  %182 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %181, align 8
  %183 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  call void %178(double* %179, %"struct.pov::Object_Struct"* %182, %"struct.pov::istk_entry"* %183)
  %184 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %185 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %184, i32 0, i32 4
  %186 = getelementptr inbounds [2 x double], [2 x double]* %185, i32 0, i32 0
  %187 = getelementptr inbounds [2 x double], [2 x double]* %24, i32 0, i32 0
  call void @_ZN3pov14Assign_UV_VectEPdS0_(double* %186, double* %187)
  %188 = load i32, i32* @x.15
  %189 = load i32, i32* @y.16
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %196

; <label>:196:                                    ; preds = %originalBBpart219, %originalBBpart215
  %197 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %198 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %197, i32 0, i32 5
  %199 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %198, align 8
  %200 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %199, i32 0, i32 13
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i64
  %203 = and i64 %202, 8192
  %204 = icmp ne i64 %203, 0
  br i1 %204, label %205, label %213

; <label>:205:                                    ; preds = %196
  %206 = getelementptr inbounds [2 x double], [2 x double]* %24, i64 0, i64 0
  %207 = load double, double* %206, align 16
  %208 = getelementptr inbounds [3 x double], [3 x double]* %23, i64 0, i64 0
  store double %207, double* %208, align 16
  %209 = getelementptr inbounds [2 x double], [2 x double]* %24, i64 0, i64 1
  %210 = load double, double* %209, align 8
  %211 = getelementptr inbounds [3 x double], [3 x double]* %23, i64 0, i64 1
  store double %210, double* %211, align 8
  %212 = getelementptr inbounds [3 x double], [3 x double]* %23, i64 0, i64 2
  store double 0.000000e+00, double* %212, align 16
  br label %213

; <label>:213:                                    ; preds = %205, %196
  %214 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %215 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %216 = getelementptr inbounds double*, double** %214, i64 %215
  %217 = load double*, double** %216, align 8
  store double* %217, double** @_ZN3pov11Weight_ListE, align 8
  %218 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %219 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %220 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %218, i64 %219
  %221 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %220, align 8
  store %"struct.pov::Texture_Struct"** %221, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %222 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %223 = load double, double* %20, align 8
  %224 = call i32 @_ZN3povL19create_texture_listEPNS_10istk_entryEd(%"struct.pov::istk_entry"* %222, double %223)
  store i32 %224, i32* %18, align 4
  store i32 -1, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  store i32 0, i32* %17, align 4
  br label %225

; <label>:225:                                    ; preds = %originalBBpart236, %213
  %226 = load i32, i32* %17, align 4
  %227 = load i32, i32* %18, align 4
  %228 = icmp slt i32 %226, %227
  br i1 %228, label %229, label %410

; <label>:229:                                    ; preds = %225
  %230 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %231 = load i32, i32* %17, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds double, double* %230, i64 %232
  %234 = load double, double* %233, align 8
  %235 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %236 = fcmp olt double %234, %235
  br i1 %236, label %237, label %238

; <label>:237:                                    ; preds = %229
  br label %391

; <label>:238:                                    ; preds = %229
  %239 = load i32, i32* @x.15
  %240 = load i32, i32* @y.16
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %238
  %247 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %248 = load i32, i32* %17, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %247, i64 %249
  %251 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %250, align 8
  store %"struct.pov::Texture_Struct"* %251, %"struct.pov::Texture_Struct"** %26, align 8
  %252 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %253 = icmp ne i32 %252, 0
  %254 = load i32, i32* @x.15
  %255 = load i32, i32* @y.16
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %253, label %262, label %306

; <label>:262:                                    ; preds = %originalBBpart223
  %263 = load float*, float** %14, align 8
  %264 = getelementptr inbounds float, float* %263, i64 0
  %265 = load float, float* %264, align 4
  %266 = fpext float %265 to double
  %267 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %268 = load i32, i32* %17, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds double, double* %267, i64 %269
  %271 = load double, double* %270, align 8
  %272 = fmul double %266, %271
  %273 = fptrunc double %272 to float
  %274 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 0
  store float %273, float* %274, align 16
  %275 = load float*, float** %14, align 8
  %276 = getelementptr inbounds float, float* %275, i64 1
  %277 = load float, float* %276, align 4
  %278 = fpext float %277 to double
  %279 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %280 = load i32, i32* %17, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds double, double* %279, i64 %281
  %283 = load double, double* %282, align 8
  %284 = fmul double %278, %283
  %285 = fptrunc double %284 to float
  %286 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 1
  store float %285, float* %286, align 4
  %287 = load float*, float** %14, align 8
  %288 = getelementptr inbounds float, float* %287, i64 2
  %289 = load float, float* %288, align 4
  %290 = fpext float %289 to double
  %291 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %292 = load i32, i32* %17, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds double, double* %291, i64 %293
  %295 = load double, double* %294, align 8
  %296 = fmul double %290, %295
  %297 = fptrunc double %296 to float
  %298 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 2
  store float %297, float* %298, align 8
  %299 = getelementptr inbounds [5 x float], [5 x float]* %21, i32 0, i32 0
  %300 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %26, align 8
  %301 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %302 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %303 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %304 = load double, double* %16, align 8
  %305 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %299, %"struct.pov::Texture_Struct"* %300, double* %301, double* %302, %"struct.pov::Ray_Struct"* %303, double %304, %"struct.pov::istk_entry"* %305, i32 0)
  br label %374

; <label>:306:                                    ; preds = %originalBBpart223
  %307 = getelementptr inbounds [5 x float], [5 x float]* %21, i32 0, i32 0
  %308 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %26, align 8
  %309 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %310 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %311 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %312 = load double, double* %16, align 8
  %313 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %307, %"struct.pov::Texture_Struct"* %308, double* %309, double* %310, %"struct.pov::Ray_Struct"* %311, double %312, %"struct.pov::istk_entry"* %313, i32 0)
  %314 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %315 = load i32, i32* %17, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds double, double* %314, i64 %316
  %318 = load double, double* %317, align 8
  %319 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 0
  %320 = load float, float* %319, align 16
  %321 = fpext float %320 to double
  %322 = fmul double %318, %321
  %323 = load float*, float** %14, align 8
  %324 = getelementptr inbounds float, float* %323, i64 0
  %325 = load float, float* %324, align 4
  %326 = fpext float %325 to double
  %327 = fadd double %326, %322
  %328 = fptrunc double %327 to float
  store float %328, float* %324, align 4
  %329 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %330 = load i32, i32* %17, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds double, double* %329, i64 %331
  %333 = load double, double* %332, align 8
  %334 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 1
  %335 = load float, float* %334, align 4
  %336 = fpext float %335 to double
  %337 = fmul double %333, %336
  %338 = load float*, float** %14, align 8
  %339 = getelementptr inbounds float, float* %338, i64 1
  %340 = load float, float* %339, align 4
  %341 = fpext float %340 to double
  %342 = fadd double %341, %337
  %343 = fptrunc double %342 to float
  store float %343, float* %339, align 4
  %344 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %345 = load i32, i32* %17, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds double, double* %344, i64 %346
  %348 = load double, double* %347, align 8
  %349 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 2
  %350 = load float, float* %349, align 8
  %351 = fpext float %350 to double
  %352 = fmul double %348, %351
  %353 = load float*, float** %14, align 8
  %354 = getelementptr inbounds float, float* %353, i64 2
  %355 = load float, float* %354, align 4
  %356 = fpext float %355 to double
  %357 = fadd double %356, %352
  %358 = fptrunc double %357 to float
  store float %358, float* %354, align 4
  %359 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %360 = load i32, i32* %17, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds double, double* %359, i64 %361
  %363 = load double, double* %362, align 8
  %364 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 4
  %365 = load float, float* %364, align 16
  %366 = fpext float %365 to double
  %367 = fmul double %363, %366
  %368 = load float*, float** %14, align 8
  %369 = getelementptr inbounds float, float* %368, i64 4
  %370 = load float, float* %369, align 4
  %371 = fpext float %370 to double
  %372 = fadd double %371, %367
  %373 = fptrunc double %372 to float
  store float %373, float* %369, align 4
  br label %374

; <label>:374:                                    ; preds = %306, %262
  %375 = load i32, i32* @x.15
  %376 = load i32, i32* @y.16
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %374
  %383 = load i32, i32* @x.15
  %384 = load i32, i32* @y.16
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart228, label %originalBB25alteredBB

originalBBpart228:                                ; preds = %originalBB25
  br label %391

; <label>:391:                                    ; preds = %originalBBpart228, %237
  %392 = load i32, i32* @x.15
  %393 = load i32, i32* @y.16
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %391
  %400 = load i32, i32* %17, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %17, align 4
  %402 = load i32, i32* @x.15
  %403 = load i32, i32* @y.16
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart236, label %originalBB30alteredBB

originalBBpart236:                                ; preds = %originalBB30
  br label %225

; <label>:410:                                    ; preds = %225
  %411 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %412 = add nsw i64 %411, -1
  store i64 %412, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %413 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %414 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %415 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %413, i64 %414
  %416 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %415, align 8
  store %"struct.pov::Light_Tested_Struct"* %416, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %417 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %418 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %419 = getelementptr inbounds double*, double** %417, i64 %418
  %420 = load double*, double** %419, align 8
  store double* %420, double** @_ZN3pov11Weight_ListE, align 8
  %421 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %422 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %423 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %421, i64 %422
  %424 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %423, align 8
  store %"struct.pov::Texture_Struct"** %424, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %425 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %426 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %425, i32 0, i32 0
  %427 = load double, double* %426, align 8
  %428 = load double, double* @_ZN3pov11Total_DepthE, align 8
  %429 = fsub double %428, %427
  store double %429, double* @_ZN3pov11Total_DepthE, align 8
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %430 = alloca %"struct.pov::istk_entry"*, align 8
  %431 = alloca float*, align 8
  %432 = alloca %"struct.pov::Ray_Struct"*, align 8
  %433 = alloca double, align 8
  %434 = alloca i32, align 4
  %435 = alloca i32, align 4
  %436 = alloca double*, align 8
  %437 = alloca double, align 8
  %438 = alloca [5 x float], align 16
  %439 = alloca [3 x double], align 16
  %440 = alloca [3 x double], align 16
  %441 = alloca [2 x double], align 16
  %442 = alloca %"struct.pov::Texture_Struct"**, align 8
  %443 = alloca %"struct.pov::Texture_Struct"*, align 8
  %444 = alloca %"struct.pov::Light_Tested_Struct"*, align 8
  store %"struct.pov::istk_entry"* %0, %"struct.pov::istk_entry"** %430, align 8
  store float* %1, float** %431, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %432, align 8
  store double %3, double* %433, align 8
  store double* null, double** %436, align 8
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** %442, align 8
  store %"struct.pov::Light_Tested_Struct"* null, %"struct.pov::Light_Tested_Struct"** %444, align 8
  %445 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %430, align 8
  %446 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %445, i32 0, i32 0
  %447 = load double, double* %446, align 8
  %448 = load double, double* @_ZN3pov11Total_DepthE, align 8
  %_ = fsub double -0.000000e+00, %448
  %gen = fadd double %_, %447
  %449 = fadd double %448, %447
  store double %449, double* @_ZN3pov11Total_DepthE, align 8
  %450 = getelementptr inbounds [3 x double], [3 x double]* %440, i32 0, i32 0
  %451 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %430, align 8
  %452 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %451, i32 0, i32 1
  %453 = getelementptr inbounds [3 x double], [3 x double]* %452, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %450, double* %453)
  %454 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %_1 = sub i64 0, %454
  %gen2 = add i64 %_1, 1
  %455 = add nsw i64 %454, 1
  store i64 %455, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %456 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %457 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %458 = icmp sge i64 %456, %457
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %105
  %459 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %460 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %461 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %460, i32 0, i32 1
  %462 = getelementptr inbounds [3 x double], [3 x double]* %461, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %20, double* %459, double* %462)
  %463 = load double, double* %20, align 8
  %464 = fcmp ogt double %463, 0.000000e+00
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %130
  %465 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %466 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %465, i32 0, i32 2
  %467 = getelementptr inbounds [3 x double], [3 x double]* %466, i32 0, i32 0
  %468 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %467, double* %468)
  %469 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %470 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %469, i32 0, i32 3
  %471 = getelementptr inbounds [3 x double], [3 x double]* %470, i32 0, i32 0
  %472 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %471, double* %472)
  %473 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %474 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %473, i32 0, i32 5
  %475 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %474, align 8
  %476 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %475, i32 0, i32 13
  %477 = load i32, i32* %476, align 4
  %478 = zext i32 %477 to i64
  %_8 = shl i64 %478, 8192
  %_9 = sub i64 0, %478
  %gen10 = add i64 %_9, 8192
  %_11 = sub i64 0, %478
  %gen12 = add i64 %_11, 8192
  %_13 = shl i64 %478, 8192
  %479 = and i64 %478, 8192
  %480 = icmp ne i64 %479, 0
  br label %originalBB7

originalBB17alteredBB:                            ; preds = %originalBB17, %163
  %481 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %482 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %481, i32 0, i32 5
  %483 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %482, align 8
  %484 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %483, i32 0, i32 0
  %485 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %484, align 8
  %486 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %485, i32 0, i32 3
  %487 = load void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)** %486, align 8
  %488 = getelementptr inbounds [2 x double], [2 x double]* %24, i32 0, i32 0
  %489 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %490 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %489, i32 0, i32 5
  %491 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %490, align 8
  %492 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  call void %487(double* %488, %"struct.pov::Object_Struct"* %491, %"struct.pov::istk_entry"* %492)
  %493 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %13, align 8
  %494 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %493, i32 0, i32 4
  %495 = getelementptr inbounds [2 x double], [2 x double]* %494, i32 0, i32 0
  %496 = getelementptr inbounds [2 x double], [2 x double]* %24, i32 0, i32 0
  call void @_ZN3pov14Assign_UV_VectEPdS0_(double* %495, double* %496)
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %238
  %497 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %498 = load i32, i32* %17, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %497, i64 %499
  %501 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %500, align 8
  store %"struct.pov::Texture_Struct"* %501, %"struct.pov::Texture_Struct"** %26, align 8
  %502 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %503 = icmp ne i32 %502, 0
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %374
  br label %originalBB25

originalBB30alteredBB:                            ; preds = %originalBB30, %391
  %504 = load i32, i32* %17, align 4
  %_31 = sub i32 %504, 1
  %gen32 = mul i32 %_31, 1
  %_33 = sub i32 %504, 1
  %gen34 = mul i32 %_33, 1
  %505 = add nsw i32 %504, 1
  store i32 %505, i32* %17, align 4
  br label %originalBB30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov13Assign_VectorEPdS0_(double*, double*) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds double, double* %5, i64 0
  %7 = load double, double* %6, align 8
  %8 = load double*, double** %3, align 8
  %9 = getelementptr inbounds double, double* %8, i64 0
  store double %7, double* %9, align 8
  %10 = load double*, double** %4, align 8
  %11 = getelementptr inbounds double, double* %10, i64 1
  %12 = load double, double* %11, align 8
  %13 = load double*, double** %3, align 8
  %14 = getelementptr inbounds double, double* %13, i64 1
  store double %12, double* %14, align 8
  %15 = load double*, double** %4, align 8
  %16 = getelementptr inbounds double, double* %15, i64 2
  %17 = load double, double* %16, align 8
  %18 = load double*, double** %3, align 8
  %19 = getelementptr inbounds double, double* %18, i64 2
  store double %17, double* %19, align 8
  ret void
}

; Function Attrs: noinline uwtable
define void @_ZN3pov22ResizeLightMallocPoolsEl(i64) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i64 %0, i64* %2, align 8
  %9 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %10 = sext i32 %9 to i64
  %11 = mul i64 %10, 8
  store i64 %11, i64* %4, align 8
  %12 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  %13 = sext i32 %12 to i64
  %14 = mul i64 %13, 8
  store i64 %14, i64* %5, align 8
  %15 = load i32, i32* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3), align 8
  store i32 %15, i32* %6, align 4
  %16 = load i32, i32* %6, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

; <label>:18:                                     ; preds = %1
  store i32 2, i32* %6, align 4
  br label %19

; <label>:19:                                     ; preds = %18, %1
  %20 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %21 = bitcast double** %20 to i8*
  %22 = load i64, i64* %2, align 8
  %23 = mul i64 %22, 8
  %24 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %21, i64 %23, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6182, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %25 = bitcast i8* %24 to double**
  store double** %25, double*** @_ZN3pov14WeightListPoolE, align 8
  %26 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %27 = bitcast %"struct.pov::Texture_Struct"*** %26 to i8*
  %28 = load i64, i64* %2, align 8
  %29 = mul i64 %28, 8
  %30 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %27, i64 %29, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6183, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %31 = bitcast i8* %30 to %"struct.pov::Texture_Struct"***
  store %"struct.pov::Texture_Struct"*** %31, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %32 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %33 = bitcast %"struct.pov::Light_Tested_Struct"** %32 to i8*
  %34 = load i64, i64* %2, align 8
  %35 = mul i64 %34, 8
  %36 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %33, i64 %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6184, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %37 = bitcast i8* %36 to %"struct.pov::Light_Tested_Struct"**
  store %"struct.pov::Light_Tested_Struct"** %37, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %38 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %3, align 4
  br label %40

; <label>:40:                                     ; preds = %100, %19
  %41 = load i32, i32* %3, align 4
  %42 = sext i32 %41 to i64
  %43 = load i64, i64* %2, align 8
  %44 = icmp slt i64 %42, %43
  br i1 %44, label %45, label %103

; <label>:45:                                     ; preds = %40
  %46 = load i32, i32* @x.19
  %47 = load i32, i32* @y.20
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %45
  %54 = load i64, i64* %4, align 8
  %55 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %54, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6188, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %56 = bitcast i8* %55 to double*
  %57 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %58 = load i32, i32* %3, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds double*, double** %57, i64 %59
  store double* %56, double** %60, align 8
  %61 = load i64, i64* %5, align 8
  %62 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %61, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6189, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %63 = bitcast i8* %62 to %"struct.pov::Texture_Struct"**
  %64 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %65 = load i32, i32* %3, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %64, i64 %66
  store %"struct.pov::Texture_Struct"** %63, %"struct.pov::Texture_Struct"*** %67, align 8
  store i32 1, i32* %7, align 4
  %68 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %7, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = mul i64 %70, 24
  %72 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %71, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6190, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %73 = bitcast i8* %72 to %"struct.pov::Light_Tested_Struct"*
  %74 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %75 = load i32, i32* %3, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %74, i64 %76
  store %"struct.pov::Light_Tested_Struct"* %73, %"struct.pov::Light_Tested_Struct"** %77, align 8
  %78 = load i64, i64* %4, align 8
  %79 = load i64, i64* %5, align 8
  %80 = add nsw i64 %78, %79
  %81 = load i64, i64* %4, align 8
  %82 = add nsw i64 %80, %81
  %83 = load i64, i64* %5, align 8
  %84 = add nsw i64 %82, %83
  store i32 1, i32* %8, align 4
  %85 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %8, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = mul i64 %87, 24
  %89 = add i64 %84, %88
  %90 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %91 = add i64 %90, %89
  store i64 %91, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %92 = load i32, i32* @x.19
  %93 = load i32, i32* @y.20
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %100

; <label>:100:                                    ; preds = %originalBBpart2
  %101 = load i32, i32* %3, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %3, align 4
  br label %40

; <label>:103:                                    ; preds = %40
  %104 = load i64, i64* %2, align 8
  store i64 %104, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %45
  %105 = load i64, i64* %4, align 8
  %106 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %105, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6188, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %107 = bitcast i8* %106 to double*
  %108 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %109 = load i32, i32* %3, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds double*, double** %108, i64 %110
  store double* %107, double** %111, align 8
  %112 = load i64, i64* %5, align 8
  %113 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6189, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %114 = bitcast i8* %113 to %"struct.pov::Texture_Struct"**
  %115 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %116 = load i32, i32* %3, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %115, i64 %117
  store %"struct.pov::Texture_Struct"** %114, %"struct.pov::Texture_Struct"*** %118, align 8
  store i32 1, i32* %7, align 4
  %119 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %7, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %_ = shl i64 %121, 24
  %_1 = shl i64 %121, 24
  %_2 = sub i64 %121, 24
  %gen = mul i64 %_2, 24
  %_3 = sub i64 %121, 24
  %gen4 = mul i64 %_3, 24
  %_5 = sub i64 0, %121
  %gen6 = add i64 %_5, 24
  %122 = mul i64 %121, 24
  %123 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %122, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6190, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0))
  %124 = bitcast i8* %123 to %"struct.pov::Light_Tested_Struct"*
  %125 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %126 = load i32, i32* %3, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %125, i64 %127
  store %"struct.pov::Light_Tested_Struct"* %124, %"struct.pov::Light_Tested_Struct"** %128, align 8
  %129 = load i64, i64* %4, align 8
  %130 = load i64, i64* %5, align 8
  %_7 = sub i64 0, %129
  %gen8 = add i64 %_7, %130
  %_9 = sub i64 0, %129
  %gen10 = add i64 %_9, %130
  %_11 = shl i64 %129, %130
  %_12 = sub i64 %129, %130
  %gen13 = mul i64 %_12, %130
  %131 = add nsw i64 %129, %130
  %132 = load i64, i64* %4, align 8
  %_14 = shl i64 %131, %132
  %_15 = sub i64 %131, %132
  %gen16 = mul i64 %_15, %132
  %_17 = sub i64 %131, %132
  %gen18 = mul i64 %_17, %132
  %_19 = shl i64 %131, %132
  %_20 = sub i64 %131, %132
  %gen21 = mul i64 %_20, %132
  %_22 = shl i64 %131, %132
  %133 = add nsw i64 %131, %132
  %134 = load i64, i64* %5, align 8
  %_23 = shl i64 %133, %134
  %_24 = sub i64 %133, %134
  %gen25 = mul i64 %_24, %134
  %_26 = sub i64 %133, %134
  %gen27 = mul i64 %_26, %134
  %_28 = shl i64 %133, %134
  %_29 = sub i64 0, %133
  %gen30 = add i64 %_29, %134
  %135 = add nsw i64 %133, %134
  store i32 1, i32* %8, align 4
  %136 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %8, i32* dereferenceable(4) getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3))
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %_31 = sub i64 0, %138
  %gen32 = add i64 %_31, 24
  %139 = mul i64 %138, 24
  %_33 = shl i64 %135, %139
  %140 = add i64 %135, %139
  %141 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %_34 = shl i64 %141, %140
  %142 = add i64 %141, %140
  store i64 %142, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8), double*, double*) #1 comdat {
  %4 = load i32, i32* @x.21
  %5 = load i32, i32* @y.22
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %13, align 8
  %16 = getelementptr inbounds double, double* %15, i64 0
  %17 = load double, double* %16, align 8
  %18 = load double*, double** %14, align 8
  %19 = getelementptr inbounds double, double* %18, i64 0
  %20 = load double, double* %19, align 8
  %21 = fmul double %17, %20
  %22 = load double*, double** %13, align 8
  %23 = getelementptr inbounds double, double* %22, i64 1
  %24 = load double, double* %23, align 8
  %25 = load double*, double** %14, align 8
  %26 = getelementptr inbounds double, double* %25, i64 1
  %27 = load double, double* %26, align 8
  %28 = fmul double %24, %27
  %29 = fadd double %21, %28
  %30 = load double*, double** %13, align 8
  %31 = getelementptr inbounds double, double* %30, i64 2
  %32 = load double, double* %31, align 8
  %33 = load double*, double** %14, align 8
  %34 = getelementptr inbounds double, double* %33, i64 2
  %35 = load double, double* %34, align 8
  %36 = fmul double %32, %35
  %37 = fadd double %29, %36
  %38 = load double*, double** %12, align 8
  store double %37, double* %38, align 8
  %39 = load i32, i32* @x.21
  %40 = load i32, i32* @y.22
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %47 = alloca double*, align 8
  %48 = alloca double*, align 8
  %49 = alloca double*, align 8
  store double* %0, double** %47, align 8
  store double* %1, double** %48, align 8
  store double* %2, double** %49, align 8
  %50 = load double*, double** %48, align 8
  %51 = getelementptr inbounds double, double* %50, i64 0
  %52 = load double, double* %51, align 8
  %53 = load double*, double** %49, align 8
  %54 = getelementptr inbounds double, double* %53, i64 0
  %55 = load double, double* %54, align 8
  %_ = fsub double -0.000000e+00, %52
  %gen = fadd double %_, %55
  %_1 = fsub double %52, %55
  %gen2 = fmul double %_1, %55
  %56 = fmul double %52, %55
  %57 = load double*, double** %48, align 8
  %58 = getelementptr inbounds double, double* %57, i64 1
  %59 = load double, double* %58, align 8
  %60 = load double*, double** %49, align 8
  %61 = getelementptr inbounds double, double* %60, i64 1
  %62 = load double, double* %61, align 8
  %_3 = fsub double -0.000000e+00, %59
  %gen4 = fadd double %_3, %62
  %_5 = fsub double %59, %62
  %gen6 = fmul double %_5, %62
  %_7 = fsub double -0.000000e+00, %59
  %gen8 = fadd double %_7, %62
  %_9 = fsub double -0.000000e+00, %59
  %gen10 = fadd double %_9, %62
  %_11 = fsub double %59, %62
  %gen12 = fmul double %_11, %62
  %_13 = fsub double -0.000000e+00, %59
  %gen14 = fadd double %_13, %62
  %_15 = fsub double %59, %62
  %gen16 = fmul double %_15, %62
  %63 = fmul double %59, %62
  %_17 = fsub double %56, %63
  %gen18 = fmul double %_17, %63
  %_19 = fsub double %56, %63
  %gen20 = fmul double %_19, %63
  %_21 = fsub double %56, %63
  %gen22 = fmul double %_21, %63
  %_23 = fsub double -0.000000e+00, %56
  %gen24 = fadd double %_23, %63
  %_25 = fsub double %56, %63
  %gen26 = fmul double %_25, %63
  %_27 = fsub double -0.000000e+00, %56
  %gen28 = fadd double %_27, %63
  %_29 = fsub double -0.000000e+00, %56
  %gen30 = fadd double %_29, %63
  %_31 = fsub double -0.000000e+00, %56
  %gen32 = fadd double %_31, %63
  %64 = fadd double %56, %63
  %65 = load double*, double** %48, align 8
  %66 = getelementptr inbounds double, double* %65, i64 2
  %67 = load double, double* %66, align 8
  %68 = load double*, double** %49, align 8
  %69 = getelementptr inbounds double, double* %68, i64 2
  %70 = load double, double* %69, align 8
  %_33 = fsub double %67, %70
  %gen34 = fmul double %_33, %70
  %_35 = fsub double -0.000000e+00, %67
  %gen36 = fadd double %_35, %70
  %_37 = fsub double %67, %70
  %gen38 = fmul double %_37, %70
  %71 = fmul double %67, %70
  %_39 = fsub double -0.000000e+00, %64
  %gen40 = fadd double %_39, %71
  %_41 = fsub double %64, %71
  %gen42 = fmul double %_41, %71
  %_43 = fsub double %64, %71
  %gen44 = fmul double %_43, %71
  %72 = fadd double %64, %71
  %73 = load double*, double** %47, align 8
  store double %72, double* %73, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov8VScaleEqEPdd(double*, double) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double, align 8
  store double* %0, double** %3, align 8
  store double %1, double* %4, align 8
  %5 = load double, double* %4, align 8
  %6 = load double*, double** %3, align 8
  %7 = getelementptr inbounds double, double* %6, i64 0
  %8 = load double, double* %7, align 8
  %9 = fmul double %8, %5
  store double %9, double* %7, align 8
  %10 = load double, double* %4, align 8
  %11 = load double*, double** %3, align 8
  %12 = getelementptr inbounds double, double* %11, i64 1
  %13 = load double, double* %12, align 8
  %14 = fmul double %13, %10
  store double %14, double* %12, align 8
  %15 = load double, double* %4, align 8
  %16 = load double*, double** %3, align 8
  %17 = getelementptr inbounds double, double* %16, i64 2
  %18 = load double, double* %17, align 8
  %19 = fmul double %18, %15
  store double %19, double* %17, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov14Assign_UV_VectEPdS0_(double*, double*) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds double, double* %5, i64 0
  %7 = load double, double* %6, align 8
  %8 = load double*, double** %3, align 8
  %9 = getelementptr inbounds double, double* %8, i64 0
  store double %7, double* %9, align 8
  %10 = load double*, double** %4, align 8
  %11 = getelementptr inbounds double, double* %10, i64 1
  %12 = load double, double* %11, align 8
  %13 = load double*, double** %3, align 8
  %14 = getelementptr inbounds double, double* %13, i64 1
  store double %12, double* %14, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal i32 @_ZN3povL19create_texture_listEPNS_10istk_entryEd(%"struct.pov::istk_entry"*, double) #0 {
  %3 = load i32, i32* @x.27
  %4 = load i32, i32* @y.28
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca %"struct.pov::istk_entry"*, align 8
  %13 = alloca double, align 8
  %14 = alloca i32, align 4
  %15 = alloca %"struct.pov::Blob_Struct"*, align 8
  %16 = alloca %"struct.pov::Mesh_Triangle_Struct"*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca %"struct.pov::CSG_Struct"*, align 8
  %20 = alloca [3 x double], align 16
  store %"struct.pov::istk_entry"* %0, %"struct.pov::istk_entry"** %12, align 8
  store double %1, double* %13, align 8
  store i8 0, i8* %17, align 1
  store i8 0, i8* %18, align 1
  %21 = load double, double* %13, align 8
  %22 = fcmp ogt double %21, 0.000000e+00
  %23 = load i32, i32* @x.27
  %24 = load i32, i32* @y.28
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %55

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %33 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %32, i32 0, i32 5
  %34 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %33, align 8
  %35 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %34, i32 0, i32 4
  %36 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %35, align 8
  %37 = icmp ne %"struct.pov::Texture_Struct"* %36, null
  br i1 %37, label %38, label %55

; <label>:38:                                     ; preds = %31
  %39 = load i32, i32* @x.27
  %40 = load i32, i32* @y.28
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %38
  store i8 1, i8* %17, align 1
  %47 = load i32, i32* @x.27
  %48 = load i32, i32* @y.28
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %55

; <label>:55:                                     ; preds = %originalBBpart24, %31, %originalBBpart2
  %56 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %57 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %56, i32 0, i32 18
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast i8* %58 to %"struct.pov::CSG_Struct"*
  store %"struct.pov::CSG_Struct"* %59, %"struct.pov::CSG_Struct"** %19, align 8
  %60 = load %"struct.pov::CSG_Struct"*, %"struct.pov::CSG_Struct"** %19, align 8
  %61 = icmp ne %"struct.pov::CSG_Struct"* %60, null
  br i1 %61, label %62, label %183

; <label>:62:                                     ; preds = %55
  %63 = load i32, i32* @x.27
  %64 = load i32, i32* @y.28
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %62
  %71 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %72 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %71, i32 0, i32 5
  %73 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %72, align 8
  %74 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %73, i32 0, i32 13
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = and i64 %76, 256
  %78 = icmp ne i64 %77, 0
  %79 = load i32, i32* @x.27
  %80 = load i32, i32* @y.28
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %78, label %87, label %183

; <label>:87:                                     ; preds = %originalBBpart28
  %88 = load %"struct.pov::CSG_Struct"*, %"struct.pov::CSG_Struct"** %19, align 8
  %89 = getelementptr inbounds %"struct.pov::CSG_Struct", %"struct.pov::CSG_Struct"* %88, i32 0, i32 0
  %90 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %89, align 8
  %91 = icmp eq %"struct.pov::Method_Struct"* %90, @_ZN3pov24CSG_Intersection_MethodsE
  br i1 %91, label %134, label %92

; <label>:92:                                     ; preds = %87
  %93 = load i32, i32* @x.27
  %94 = load i32, i32* @y.28
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %92
  %101 = load %"struct.pov::CSG_Struct"*, %"struct.pov::CSG_Struct"** %19, align 8
  %102 = getelementptr inbounds %"struct.pov::CSG_Struct", %"struct.pov::CSG_Struct"* %101, i32 0, i32 0
  %103 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %102, align 8
  %104 = icmp eq %"struct.pov::Method_Struct"* %103, @_ZN3pov17CSG_Merge_MethodsE
  %105 = load i32, i32* @x.27
  %106 = load i32, i32* @y.28
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %104, label %134, label %113

; <label>:113:                                    ; preds = %originalBBpart212
  %114 = load i32, i32* @x.27
  %115 = load i32, i32* @y.28
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %113
  %122 = load %"struct.pov::CSG_Struct"*, %"struct.pov::CSG_Struct"** %19, align 8
  %123 = getelementptr inbounds %"struct.pov::CSG_Struct", %"struct.pov::CSG_Struct"* %122, i32 0, i32 0
  %124 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %123, align 8
  %125 = icmp eq %"struct.pov::Method_Struct"* %124, @_ZN3pov17CSG_Union_MethodsE
  %126 = load i32, i32* @x.27
  %127 = load i32, i32* @y.28
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %125, label %134, label %183

; <label>:134:                                    ; preds = %originalBBpart216, %originalBBpart212, %87
  %135 = load i32, i32* @x.27
  %136 = load i32, i32* @y.28
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %134
  %143 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %144 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %143, i32 0, i32 5
  %145 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %144, align 8
  %146 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %145, i32 0, i32 3
  %147 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %146, align 8
  %148 = icmp eq %"struct.pov::Texture_Struct"* %147, null
  %149 = load i32, i32* @x.27
  %150 = load i32, i32* @y.28
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %148, label %157, label %165

; <label>:157:                                    ; preds = %originalBBpart220
  %158 = load %"struct.pov::CSG_Struct"*, %"struct.pov::CSG_Struct"** %19, align 8
  %159 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %160 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %159, i32 0, i32 1
  %161 = getelementptr inbounds [3 x double], [3 x double]* %160, i32 0, i32 0
  %162 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %163 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  call void @_ZN3pov22Determine_CSG_TexturesEPNS_10CSG_StructEPdPiPPNS_14Texture_StructES2_(%"struct.pov::CSG_Struct"* %158, double* %161, i32* %14, %"struct.pov::Texture_Struct"** %162, double* %163)
  %164 = load i32, i32* %14, align 4
  store i32 %164, i32* %11, align 4
  br label %563

; <label>:165:                                    ; preds = %originalBBpart220
  store i8 1, i8* %18, align 1
  br label %166

; <label>:166:                                    ; preds = %165
  %167 = load i32, i32* @x.27
  %168 = load i32, i32* @y.28
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %166
  %175 = load i32, i32* @x.27
  %176 = load i32, i32* @y.28
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %183

; <label>:183:                                    ; preds = %originalBBpart224, %originalBBpart216, %originalBBpart28, %55
  %184 = load i32, i32* @x.27
  %185 = load i32, i32* @y.28
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %183
  %192 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %193 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %192, i32 0, i32 5
  %194 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %193, align 8
  %195 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %194, i32 0, i32 13
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  %198 = and i64 %197, 256
  %199 = icmp ne i64 %198, 0
  %200 = load i32, i32* @x.27
  %201 = load i32, i32* @y.28
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart237, label %originalBB26alteredBB

originalBBpart237:                                ; preds = %originalBB26
  br i1 %199, label %208, label %512

; <label>:208:                                    ; preds = %originalBBpart237
  %209 = load i8, i8* %18, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %512, label %211

; <label>:211:                                    ; preds = %208
  %212 = load i32, i32* @x.27
  %213 = load i32, i32* @y.28
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %211
  %220 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %221 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %220, i32 0, i32 5
  %222 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %221, align 8
  %223 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %222, i32 0, i32 0
  %224 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %223, align 8
  %225 = icmp eq %"struct.pov::Method_Struct"* %224, @_ZN3pov12Blob_MethodsE
  %226 = load i32, i32* @x.27
  %227 = load i32, i32* @y.28
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %225, label %234, label %261

; <label>:234:                                    ; preds = %originalBBpart241
  %235 = load i32, i32* @x.27
  %236 = load i32, i32* @y.28
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %234
  %243 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %244 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %243, i32 0, i32 5
  %245 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %244, align 8
  %246 = bitcast %"struct.pov::Object_Struct"* %245 to %"struct.pov::Blob_Struct"*
  store %"struct.pov::Blob_Struct"* %246, %"struct.pov::Blob_Struct"** %15, align 8
  %247 = load %"struct.pov::Blob_Struct"*, %"struct.pov::Blob_Struct"** %15, align 8
  %248 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %249 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %248, i32 0, i32 1
  %250 = getelementptr inbounds [3 x double], [3 x double]* %249, i32 0, i32 0
  %251 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %252 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  call void @_ZN3pov23Determine_Blob_TexturesEPNS_11Blob_StructEPdPiPPNS_14Texture_StructES2_(%"struct.pov::Blob_Struct"* %247, double* %250, i32* %14, %"struct.pov::Texture_Struct"** %251, double* %252)
  %253 = load i32, i32* @x.27
  %254 = load i32, i32* @y.28
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %261

; <label>:261:                                    ; preds = %originalBBpart245, %originalBBpart241
  %262 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %263 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %262, i32 0, i32 5
  %264 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %263, align 8
  %265 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %264, i32 0, i32 0
  %266 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %265, align 8
  %267 = icmp eq %"struct.pov::Method_Struct"* %266, @_ZN3pov12Mesh_MethodsE
  br i1 %267, label %268, label %511

; <label>:268:                                    ; preds = %261
  %269 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %270 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %269, i32 0, i32 17
  %271 = load i8*, i8** %270, align 8
  %272 = bitcast i8* %271 to %"struct.pov::Mesh_Triangle_Struct"*
  store %"struct.pov::Mesh_Triangle_Struct"* %272, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %273 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %274 = bitcast %"struct.pov::Mesh_Triangle_Struct"* %273 to i8*
  %275 = load i8, i8* %274, align 8
  %276 = lshr i8 %275, 5
  %277 = and i8 %276, 1
  %278 = zext i8 %277 to i32
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %280, label %448

; <label>:280:                                    ; preds = %268
  %281 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %282 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %283 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %282, i32 0, i32 1
  %284 = getelementptr inbounds [3 x double], [3 x double]* %283, i32 0, i32 0
  %285 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %286 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %285, i32 0, i32 5
  %287 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %286, align 8
  %288 = bitcast %"struct.pov::Object_Struct"* %287 to %"struct.pov::Mesh_Struct"*
  %289 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %290 = call i32 @_ZN3pov16Mesh_InterpolateEPdS0_PNS_11Mesh_StructEPNS_20Mesh_Triangle_StructE(double* %281, double* %284, %"struct.pov::Mesh_Struct"* %288, %"struct.pov::Mesh_Triangle_Struct"* %289)
  %291 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %292 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %291, i32 0, i32 5
  %293 = load i64, i64* %292, align 8
  %294 = icmp sge i64 %293, 0
  br i1 %294, label %295, label %325

; <label>:295:                                    ; preds = %280
  %296 = load i32, i32* @x.27
  %297 = load i32, i32* @y.28
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %295
  %304 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %305 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %304, i32 0, i32 5
  %306 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %305, align 8
  %307 = bitcast %"struct.pov::Object_Struct"* %306 to %"struct.pov::Mesh_Struct"*
  %308 = getelementptr inbounds %"struct.pov::Mesh_Struct", %"struct.pov::Mesh_Struct"* %307, i32 0, i32 16
  %309 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %308, align 8
  %310 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %311 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %310, i32 0, i32 5
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %309, i64 %312
  %314 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %313, align 8
  %315 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %316 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %315, i64 0
  store %"struct.pov::Texture_Struct"* %314, %"struct.pov::Texture_Struct"** %316, align 8
  %317 = load i32, i32* @x.27
  %318 = load i32, i32* @y.28
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %349

; <label>:325:                                    ; preds = %280
  %326 = load i32, i32* @x.27
  %327 = load i32, i32* @y.28
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %325
  %334 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %335 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %334, i32 0, i32 5
  %336 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %335, align 8
  %337 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %336, i32 0, i32 3
  %338 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %337, align 8
  %339 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %340 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %339, i64 0
  store %"struct.pov::Texture_Struct"* %338, %"struct.pov::Texture_Struct"** %340, align 8
  %341 = load i32, i32* @x.27
  %342 = load i32, i32* @y.28
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %349

; <label>:349:                                    ; preds = %originalBBpart253, %originalBBpart249
  %350 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %351 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %350, i32 0, i32 6
  %352 = load i64, i64* %351, align 8
  %353 = icmp sge i64 %352, 0
  br i1 %353, label %354, label %368

; <label>:354:                                    ; preds = %349
  %355 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %356 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %355, i32 0, i32 5
  %357 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %356, align 8
  %358 = bitcast %"struct.pov::Object_Struct"* %357 to %"struct.pov::Mesh_Struct"*
  %359 = getelementptr inbounds %"struct.pov::Mesh_Struct", %"struct.pov::Mesh_Struct"* %358, i32 0, i32 16
  %360 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %359, align 8
  %361 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %362 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %361, i32 0, i32 6
  %363 = load i64, i64* %362, align 8
  %364 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %360, i64 %363
  %365 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %364, align 8
  %366 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %367 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %366, i64 1
  store %"struct.pov::Texture_Struct"* %365, %"struct.pov::Texture_Struct"** %367, align 8
  br label %392

; <label>:368:                                    ; preds = %349
  %369 = load i32, i32* @x.27
  %370 = load i32, i32* @y.28
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %368
  %377 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %378 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %377, i32 0, i32 5
  %379 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %378, align 8
  %380 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %379, i32 0, i32 3
  %381 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %380, align 8
  %382 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %383 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %382, i64 1
  store %"struct.pov::Texture_Struct"* %381, %"struct.pov::Texture_Struct"** %383, align 8
  %384 = load i32, i32* @x.27
  %385 = load i32, i32* @y.28
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %392

; <label>:392:                                    ; preds = %originalBBpart257, %354
  %393 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %394 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %393, i32 0, i32 7
  %395 = load i64, i64* %394, align 8
  %396 = icmp sge i64 %395, 0
  br i1 %396, label %397, label %427

; <label>:397:                                    ; preds = %392
  %398 = load i32, i32* @x.27
  %399 = load i32, i32* @y.28
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %397
  %406 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %407 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %406, i32 0, i32 5
  %408 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %407, align 8
  %409 = bitcast %"struct.pov::Object_Struct"* %408 to %"struct.pov::Mesh_Struct"*
  %410 = getelementptr inbounds %"struct.pov::Mesh_Struct", %"struct.pov::Mesh_Struct"* %409, i32 0, i32 16
  %411 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %410, align 8
  %412 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %413 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %412, i32 0, i32 7
  %414 = load i64, i64* %413, align 8
  %415 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %411, i64 %414
  %416 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %415, align 8
  %417 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %418 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %417, i64 2
  store %"struct.pov::Texture_Struct"* %416, %"struct.pov::Texture_Struct"** %418, align 8
  %419 = load i32, i32* @x.27
  %420 = load i32, i32* @y.28
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %435

; <label>:427:                                    ; preds = %392
  %428 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %429 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %428, i32 0, i32 5
  %430 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %429, align 8
  %431 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %430, i32 0, i32 3
  %432 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %431, align 8
  %433 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %434 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %433, i64 2
  store %"struct.pov::Texture_Struct"* %432, %"struct.pov::Texture_Struct"** %434, align 8
  br label %435

; <label>:435:                                    ; preds = %427, %originalBBpart261
  %436 = getelementptr inbounds [3 x double], [3 x double]* %20, i64 0, i64 0
  %437 = load double, double* %436, align 16
  %438 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %439 = getelementptr inbounds double, double* %438, i64 0
  store double %437, double* %439, align 8
  %440 = getelementptr inbounds [3 x double], [3 x double]* %20, i64 0, i64 1
  %441 = load double, double* %440, align 8
  %442 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %443 = getelementptr inbounds double, double* %442, i64 1
  store double %441, double* %443, align 8
  %444 = getelementptr inbounds [3 x double], [3 x double]* %20, i64 0, i64 2
  %445 = load double, double* %444, align 16
  %446 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %447 = getelementptr inbounds double, double* %446, i64 2
  store double %445, double* %447, align 8
  store i32 3, i32* %14, align 4
  br label %494

; <label>:448:                                    ; preds = %268
  %449 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %450 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %449, i32 0, i32 5
  %451 = load i64, i64* %450, align 8
  %452 = icmp sge i64 %451, 0
  br i1 %452, label %453, label %483

; <label>:453:                                    ; preds = %448
  %454 = load i32, i32* @x.27
  %455 = load i32, i32* @y.28
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %453
  %462 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %463 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %462, i32 0, i32 5
  %464 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %463, align 8
  %465 = bitcast %"struct.pov::Object_Struct"* %464 to %"struct.pov::Mesh_Struct"*
  %466 = getelementptr inbounds %"struct.pov::Mesh_Struct", %"struct.pov::Mesh_Struct"* %465, i32 0, i32 16
  %467 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %466, align 8
  %468 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %469 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %468, i32 0, i32 5
  %470 = load i64, i64* %469, align 8
  %471 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %467, i64 %470
  %472 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %471, align 8
  %473 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %474 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %473, i64 0
  store %"struct.pov::Texture_Struct"* %472, %"struct.pov::Texture_Struct"** %474, align 8
  %475 = load i32, i32* @x.27
  %476 = load i32, i32* @y.28
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %491

; <label>:483:                                    ; preds = %448
  %484 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %485 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %484, i32 0, i32 5
  %486 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %485, align 8
  %487 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %486, i32 0, i32 3
  %488 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %487, align 8
  %489 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %490 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %489, i64 0
  store %"struct.pov::Texture_Struct"* %488, %"struct.pov::Texture_Struct"** %490, align 8
  br label %491

; <label>:491:                                    ; preds = %483, %originalBBpart265
  %492 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %493 = getelementptr inbounds double, double* %492, i64 0
  store double 1.000000e+00, double* %493, align 8
  store i32 1, i32* %14, align 4
  br label %494

; <label>:494:                                    ; preds = %491, %435
  %495 = load i32, i32* @x.27
  %496 = load i32, i32* @y.28
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %494
  %503 = load i32, i32* @x.27
  %504 = load i32, i32* @y.28
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %511

; <label>:511:                                    ; preds = %originalBBpart269, %261
  br label %561

; <label>:512:                                    ; preds = %208, %originalBBpart237
  %513 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %514 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %513, i32 0, i32 5
  %515 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %514, align 8
  %516 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %515, i32 0, i32 3
  %517 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %516, align 8
  %518 = icmp eq %"struct.pov::Texture_Struct"* %517, null
  br i1 %518, label %519, label %536

; <label>:519:                                    ; preds = %512
  %520 = load i32, i32* @x.27
  %521 = load i32, i32* @y.28
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %519
  store i32 0, i32* %14, align 4
  %528 = load i32, i32* @x.27
  %529 = load i32, i32* @y.28
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %560

; <label>:536:                                    ; preds = %512
  %537 = load i8, i8* %17, align 1
  %538 = trunc i8 %537 to i1
  %539 = zext i1 %538 to i32
  %540 = icmp eq i32 %539, 1
  br i1 %540, label %541, label %549

; <label>:541:                                    ; preds = %536
  %542 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %543 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %542, i32 0, i32 5
  %544 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %543, align 8
  %545 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %544, i32 0, i32 4
  %546 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %545, align 8
  %547 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %548 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %547, i64 0
  store %"struct.pov::Texture_Struct"* %546, %"struct.pov::Texture_Struct"** %548, align 8
  br label %557

; <label>:549:                                    ; preds = %536
  %550 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %551 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %550, i32 0, i32 5
  %552 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %551, align 8
  %553 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %552, i32 0, i32 3
  %554 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %553, align 8
  %555 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %556 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %555, i64 0
  store %"struct.pov::Texture_Struct"* %554, %"struct.pov::Texture_Struct"** %556, align 8
  br label %557

; <label>:557:                                    ; preds = %549, %541
  %558 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %559 = getelementptr inbounds double, double* %558, i64 0
  store double 1.000000e+00, double* %559, align 8
  store i32 1, i32* %14, align 4
  br label %560

; <label>:560:                                    ; preds = %557, %originalBBpart273
  br label %561

; <label>:561:                                    ; preds = %560, %511
  %562 = load i32, i32* %14, align 4
  store i32 %562, i32* %11, align 4
  br label %563

; <label>:563:                                    ; preds = %561, %157
  %564 = load i32, i32* %11, align 4
  ret i32 %564

originalBBalteredBB:                              ; preds = %originalBB, %2
  %565 = alloca i32, align 4
  %566 = alloca %"struct.pov::istk_entry"*, align 8
  %567 = alloca double, align 8
  %568 = alloca i32, align 4
  %569 = alloca %"struct.pov::Blob_Struct"*, align 8
  %570 = alloca %"struct.pov::Mesh_Triangle_Struct"*, align 8
  %571 = alloca i8, align 1
  %572 = alloca i8, align 1
  %573 = alloca %"struct.pov::CSG_Struct"*, align 8
  %574 = alloca [3 x double], align 16
  store %"struct.pov::istk_entry"* %0, %"struct.pov::istk_entry"** %566, align 8
  store double %1, double* %567, align 8
  store i8 0, i8* %571, align 1
  store i8 0, i8* %572, align 1
  %575 = load double, double* %567, align 8
  %576 = fcmp ogt double %575, 0.000000e+00
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  store i8 1, i8* %17, align 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %577 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %578 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %577, i32 0, i32 5
  %579 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %578, align 8
  %580 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %579, i32 0, i32 13
  %581 = load i32, i32* %580, align 4
  %582 = zext i32 %581 to i64
  %_ = shl i64 %582, 256
  %583 = and i64 %582, 256
  %584 = icmp ne i64 %583, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %92
  %585 = load %"struct.pov::CSG_Struct"*, %"struct.pov::CSG_Struct"** %19, align 8
  %586 = getelementptr inbounds %"struct.pov::CSG_Struct", %"struct.pov::CSG_Struct"* %585, i32 0, i32 0
  %587 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %586, align 8
  %588 = icmp eq %"struct.pov::Method_Struct"* %587, @_ZN3pov17CSG_Merge_MethodsE
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %113
  %589 = load %"struct.pov::CSG_Struct"*, %"struct.pov::CSG_Struct"** %19, align 8
  %590 = getelementptr inbounds %"struct.pov::CSG_Struct", %"struct.pov::CSG_Struct"* %589, i32 0, i32 0
  %591 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %590, align 8
  %592 = icmp eq %"struct.pov::Method_Struct"* %591, @_ZN3pov17CSG_Union_MethodsE
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %134
  %593 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %594 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %593, i32 0, i32 5
  %595 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %594, align 8
  %596 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %595, i32 0, i32 3
  %597 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %596, align 8
  %598 = icmp eq %"struct.pov::Texture_Struct"* %597, null
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %166
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %183
  %599 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %600 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %599, i32 0, i32 5
  %601 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %600, align 8
  %602 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %601, i32 0, i32 13
  %603 = load i32, i32* %602, align 4
  %604 = zext i32 %603 to i64
  %_27 = sub i64 %604, 256
  %gen = mul i64 %_27, 256
  %_28 = sub i64 0, %604
  %gen29 = add i64 %_28, 256
  %_30 = sub i64 %604, 256
  %gen31 = mul i64 %_30, 256
  %_32 = shl i64 %604, 256
  %_33 = shl i64 %604, 256
  %_34 = sub i64 %604, 256
  %gen35 = mul i64 %_34, 256
  %605 = and i64 %604, 256
  %606 = icmp ne i64 %605, 0
  br label %originalBB26

originalBB39alteredBB:                            ; preds = %originalBB39, %211
  %607 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %608 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %607, i32 0, i32 5
  %609 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %608, align 8
  %610 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %609, i32 0, i32 0
  %611 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %610, align 8
  %612 = icmp eq %"struct.pov::Method_Struct"* %611, @_ZN3pov12Blob_MethodsE
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %234
  %613 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %614 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %613, i32 0, i32 5
  %615 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %614, align 8
  %616 = bitcast %"struct.pov::Object_Struct"* %615 to %"struct.pov::Blob_Struct"*
  store %"struct.pov::Blob_Struct"* %616, %"struct.pov::Blob_Struct"** %15, align 8
  %617 = load %"struct.pov::Blob_Struct"*, %"struct.pov::Blob_Struct"** %15, align 8
  %618 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %619 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %618, i32 0, i32 1
  %620 = getelementptr inbounds [3 x double], [3 x double]* %619, i32 0, i32 0
  %621 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %622 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  call void @_ZN3pov23Determine_Blob_TexturesEPNS_11Blob_StructEPdPiPPNS_14Texture_StructES2_(%"struct.pov::Blob_Struct"* %617, double* %620, i32* %14, %"struct.pov::Texture_Struct"** %621, double* %622)
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %295
  %623 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %624 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %623, i32 0, i32 5
  %625 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %624, align 8
  %626 = bitcast %"struct.pov::Object_Struct"* %625 to %"struct.pov::Mesh_Struct"*
  %627 = getelementptr inbounds %"struct.pov::Mesh_Struct", %"struct.pov::Mesh_Struct"* %626, i32 0, i32 16
  %628 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %627, align 8
  %629 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %630 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %629, i32 0, i32 5
  %631 = load i64, i64* %630, align 8
  %632 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %628, i64 %631
  %633 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %632, align 8
  %634 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %635 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %634, i64 0
  store %"struct.pov::Texture_Struct"* %633, %"struct.pov::Texture_Struct"** %635, align 8
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %325
  %636 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %637 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %636, i32 0, i32 5
  %638 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %637, align 8
  %639 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %638, i32 0, i32 3
  %640 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %639, align 8
  %641 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %642 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %641, i64 0
  store %"struct.pov::Texture_Struct"* %640, %"struct.pov::Texture_Struct"** %642, align 8
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %368
  %643 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %644 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %643, i32 0, i32 5
  %645 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %644, align 8
  %646 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %645, i32 0, i32 3
  %647 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %646, align 8
  %648 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %649 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %648, i64 1
  store %"struct.pov::Texture_Struct"* %647, %"struct.pov::Texture_Struct"** %649, align 8
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %397
  %650 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %651 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %650, i32 0, i32 5
  %652 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %651, align 8
  %653 = bitcast %"struct.pov::Object_Struct"* %652 to %"struct.pov::Mesh_Struct"*
  %654 = getelementptr inbounds %"struct.pov::Mesh_Struct", %"struct.pov::Mesh_Struct"* %653, i32 0, i32 16
  %655 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %654, align 8
  %656 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %657 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %656, i32 0, i32 7
  %658 = load i64, i64* %657, align 8
  %659 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %655, i64 %658
  %660 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %659, align 8
  %661 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %662 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %661, i64 2
  store %"struct.pov::Texture_Struct"* %660, %"struct.pov::Texture_Struct"** %662, align 8
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %453
  %663 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %664 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %663, i32 0, i32 5
  %665 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %664, align 8
  %666 = bitcast %"struct.pov::Object_Struct"* %665 to %"struct.pov::Mesh_Struct"*
  %667 = getelementptr inbounds %"struct.pov::Mesh_Struct", %"struct.pov::Mesh_Struct"* %666, i32 0, i32 16
  %668 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %667, align 8
  %669 = load %"struct.pov::Mesh_Triangle_Struct"*, %"struct.pov::Mesh_Triangle_Struct"** %16, align 8
  %670 = getelementptr inbounds %"struct.pov::Mesh_Triangle_Struct", %"struct.pov::Mesh_Triangle_Struct"* %669, i32 0, i32 5
  %671 = load i64, i64* %670, align 8
  %672 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %668, i64 %671
  %673 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %672, align 8
  %674 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %675 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %674, i64 0
  store %"struct.pov::Texture_Struct"* %673, %"struct.pov::Texture_Struct"** %675, align 8
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %494
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %519
  store i32 0, i32* %14, align 4
  br label %originalBB71
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float*, %"struct.pov::Texture_Struct"*, double*, double*, %"struct.pov::Ray_Struct"*, double, %"struct.pov::istk_entry"*, i32) #0 {
  %9 = alloca float*, align 8
  %10 = alloca %"struct.pov::Texture_Struct"*, align 8
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  %13 = alloca %"struct.pov::Ray_Struct"*, align 8
  %14 = alloca double, align 8
  %15 = alloca %"struct.pov::istk_entry"*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %"struct.pov::Blend_Map_Struct"*, align 8
  %18 = alloca %"struct.pov::Blend_Map_Entry"*, align 8
  %19 = alloca %"struct.pov::Blend_Map_Entry"*, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca [5 x float], align 16
  %23 = alloca [3 x double], align 16
  %24 = alloca [2 x double], align 16
  %25 = alloca i8, align 1
  store float* %0, float** %9, align 8
  store %"struct.pov::Texture_Struct"* %1, %"struct.pov::Texture_Struct"** %10, align 8
  store double* %2, double** %11, align 8
  store double* %3, double** %12, align 8
  store %"struct.pov::Ray_Struct"* %4, %"struct.pov::Ray_Struct"** %13, align 8
  store double %5, double* %14, align 8
  store %"struct.pov::istk_entry"* %6, %"struct.pov::istk_entry"** %15, align 8
  store i32 %7, i32* %16, align 4
  %26 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %27 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %26, i32 0, i32 9
  %28 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %27, align 8
  store %"struct.pov::Blend_Map_Struct"* %28, %"struct.pov::Blend_Map_Struct"** %17, align 8
  store i8 0, i8* %25, align 1
  %29 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 28), align 8
  %30 = icmp sgt i32 %29, 310
  br i1 %30, label %31, label %108

; <label>:31:                                     ; preds = %8
  %32 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %33 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %32, i32 0, i32 0
  %34 = load i16, i16* %33, align 8
  %35 = zext i16 %34 to i32
  switch i32 %35, label %70 [
    i32 0, label %36
    i32 1, label %36
    i32 2, label %53
    i32 3, label %53
    i32 4, label %53
  ]

; <label>:36:                                     ; preds = %31, %31
  %37 = load i32, i32* @x.29
  %38 = load i32, i32* @y.30
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i32, i32* @x.29
  %46 = load i32, i32* @y.30
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %107

; <label>:53:                                     ; preds = %31, %31, %31
  %54 = load i32, i32* @x.29
  %55 = load i32, i32* @y.30
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %53
  %62 = load i32, i32* @x.29
  %63 = load i32, i32* @y.30
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %70

; <label>:70:                                     ; preds = %originalBBpart24, %31
  %71 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %72 = load i32, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %73 = icmp sge i32 %71, %72
  br i1 %73, label %74, label %84

; <label>:74:                                     ; preds = %70
  %75 = load i32, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %76 = mul nsw i32 %75, 2
  store i32 %76, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %77 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %78 = bitcast %"struct.pov::Texture_Struct"** %77 to i8*
  %79 = load i32, i32* @_ZN3pov28warpNormalTextureListMaxSizeE, align 4
  %80 = sext i32 %79 to i64
  %81 = mul i64 %80, 8
  %82 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %78, i64 %81, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 3564, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0))
  %83 = bitcast i8* %82 to %"struct.pov::Texture_Struct"**
  store %"struct.pov::Texture_Struct"** %83, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  br label %84

; <label>:84:                                     ; preds = %74, %70
  %85 = load i32, i32* @x.29
  %86 = load i32, i32* @y.30
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %84
  %93 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %94 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %95 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %97 = sext i32 %95 to i64
  %98 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %94, i64 %97
  store %"struct.pov::Texture_Struct"* %93, %"struct.pov::Texture_Struct"** %98, align 8
  store i8 1, i8* %25, align 1
  %99 = load i32, i32* @x.29
  %100 = load i32, i32* @y.30
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br label %107

; <label>:107:                                    ; preds = %originalBBpart212, %originalBBpart2
  br label %108

; <label>:108:                                    ; preds = %107, %8
  %109 = load i32, i32* @x.29
  %110 = load i32, i32* @y.30
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %108
  %117 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %118 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %117, i32 0, i32 0
  %119 = load i16, i16* %118, align 8
  %120 = zext i16 %119 to i32
  %121 = icmp sle i32 %120, 4
  %122 = load i32, i32* @x.29
  %123 = load i32, i32* @y.30
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %121, label %130, label %346

; <label>:130:                                    ; preds = %originalBBpart216
  %131 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %132 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %131, i32 0, i32 0
  %133 = load i16, i16* %132, align 8
  %134 = zext i16 %133 to i32
  switch i32 %134, label %327 [
    i32 0, label %135
    i32 2, label %153
    i32 3, label %211
    i32 4, label %248
    i32 1, label %264
  ]

; <label>:135:                                    ; preds = %130
  %136 = load i32, i32* @x.29
  %137 = load i32, i32* @y.30
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %135
  %144 = load float*, float** %9, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %144, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00)
  %145 = load i32, i32* @x.29
  %146 = load i32, i32* @y.30
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %345

; <label>:153:                                    ; preds = %130
  %154 = load i32, i32* @x.29
  %155 = load i32, i32* @y.30
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %153
  %162 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %163 = load double*, double** %11, align 8
  %164 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %165 = bitcast %"struct.pov::Texture_Struct"* %164 to %"struct.pov::Pattern_Struct"*
  call void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double* %162, double* %163, %"struct.pov::Pattern_Struct"* %165)
  %166 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %167 = icmp ne i32 %166, 0
  %168 = load i32, i32* @x.29
  %169 = load i32, i32* @y.30
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %167, label %176, label %185

; <label>:176:                                    ; preds = %originalBBpart224
  %177 = load float*, float** %9, align 8
  %178 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %179 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %180 = load double*, double** %12, align 8
  %181 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %182 = load double, double* %14, align 8
  %183 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %184 = load i32, i32* %16, align 4
  call void @_ZN3povL26backtrace_average_texturesEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %177, %"struct.pov::Texture_Struct"* %178, double* %179, double* %180, %"struct.pov::Ray_Struct"* %181, double %182, %"struct.pov::istk_entry"* %183, i32 %184)
  br label %210

; <label>:185:                                    ; preds = %originalBBpart224
  %186 = load i32, i32* @x.29
  %187 = load i32, i32* @y.30
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %185
  %194 = load float*, float** %9, align 8
  %195 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %196 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %197 = load double*, double** %12, align 8
  %198 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %199 = load double, double* %14, align 8
  %200 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %201 = load i32, i32* %16, align 4
  call void @_ZN3povL16average_texturesEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %194, %"struct.pov::Texture_Struct"* %195, double* %196, double* %197, %"struct.pov::Ray_Struct"* %198, double %199, %"struct.pov::istk_entry"* %200, i32 %201)
  %202 = load i32, i32* @x.29
  %203 = load i32, i32* @y.30
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %210

; <label>:210:                                    ; preds = %originalBBpart228, %176
  br label %345

; <label>:211:                                    ; preds = %130
  %212 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %213 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %212, i32 0, i32 5
  %214 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %213, align 8
  %215 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %214, i32 0, i32 0
  %216 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %215, align 8
  %217 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %216, i32 0, i32 3
  %218 = load void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)** %217, align 8
  %219 = getelementptr inbounds [2 x double], [2 x double]* %24, i32 0, i32 0
  %220 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %221 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %220, i32 0, i32 5
  %222 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %221, align 8
  %223 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  call void %218(double* %219, %"struct.pov::Object_Struct"* %222, %"struct.pov::istk_entry"* %223)
  %224 = getelementptr inbounds [2 x double], [2 x double]* %24, i64 0, i64 0
  %225 = load double, double* %224, align 16
  %226 = getelementptr inbounds [3 x double], [3 x double]* %23, i64 0, i64 0
  store double %225, double* %226, align 16
  %227 = getelementptr inbounds [2 x double], [2 x double]* %24, i64 0, i64 1
  %228 = load double, double* %227, align 8
  %229 = getelementptr inbounds [3 x double], [3 x double]* %23, i64 0, i64 1
  store double %228, double* %229, align 8
  %230 = getelementptr inbounds [3 x double], [3 x double]* %23, i64 0, i64 2
  store double 0.000000e+00, double* %230, align 16
  %231 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %232 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %231, i32 0, i32 9
  %233 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %232, align 8
  %234 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %233, i32 0, i32 4
  %235 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %234, align 8
  %236 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %235, i64 0
  store %"struct.pov::Blend_Map_Entry"* %236, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %237 = load float*, float** %9, align 8
  %238 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %239 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %238, i32 0, i32 2
  %240 = bitcast %union.anon* %239 to %"struct.pov::Texture_Struct"**
  %241 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %240, align 8
  %242 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %243 = load double*, double** %12, align 8
  %244 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %245 = load double, double* %14, align 8
  %246 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %247 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %237, %"struct.pov::Texture_Struct"* %241, double* %242, double* %243, %"struct.pov::Ray_Struct"* %244, double %245, %"struct.pov::istk_entry"* %246, i32 %247)
  br label %345

; <label>:248:                                    ; preds = %130
  %249 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %250 = load double*, double** %11, align 8
  %251 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %252 = bitcast %"struct.pov::Texture_Struct"* %251 to %"struct.pov::Pattern_Struct"*
  call void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double* %249, double* %250, %"struct.pov::Pattern_Struct"* %252)
  %253 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %254 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %255 = call %"struct.pov::Texture_Struct"* @_ZN3pov12material_mapEPdPNS_14Texture_StructE(double* %253, %"struct.pov::Texture_Struct"* %254)
  store %"struct.pov::Texture_Struct"* %255, %"struct.pov::Texture_Struct"** %10, align 8
  %256 = load float*, float** %9, align 8
  %257 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %258 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %259 = load double*, double** %12, align 8
  %260 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %261 = load double, double* %14, align 8
  %262 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %263 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %256, %"struct.pov::Texture_Struct"* %257, double* %258, double* %259, %"struct.pov::Ray_Struct"* %260, double %261, %"struct.pov::istk_entry"* %262, i32 %263)
  br label %345

; <label>:264:                                    ; preds = %130
  %265 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %267, label %275

; <label>:267:                                    ; preds = %264
  %268 = load float*, float** %9, align 8
  %269 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %270 = load double*, double** %11, align 8
  %271 = load double*, double** %12, align 8
  %272 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %273 = load double, double* %14, align 8
  %274 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  call void @_ZN3povL25compute_backtrace_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryE(float* %268, %"struct.pov::Texture_Struct"* %269, double* %270, double* %271, %"struct.pov::Ray_Struct"* %272, double %273, %"struct.pov::istk_entry"* %274)
  br label %326

; <label>:275:                                    ; preds = %264
  %276 = load i32, i32* %16, align 4
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %278, label %301

; <label>:278:                                    ; preds = %275
  %279 = load i32, i32* @x.29
  %280 = load i32, i32* @y.30
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %278
  %287 = load float*, float** %9, align 8
  %288 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %289 = load double*, double** %11, align 8
  %290 = load double*, double** %12, align 8
  %291 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %292 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  call void @_ZN3povL22compute_shadow_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEPNS_10istk_entryE(float* %287, %"struct.pov::Texture_Struct"* %288, double* %289, double* %290, %"struct.pov::Ray_Struct"* %291, %"struct.pov::istk_entry"* %292)
  %293 = load i32, i32* @x.29
  %294 = load i32, i32* @y.30
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %325

; <label>:301:                                    ; preds = %275
  %302 = load i32, i32* @x.29
  %303 = load i32, i32* @y.30
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %301
  %310 = load float*, float** %9, align 8
  %311 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %312 = load double*, double** %11, align 8
  %313 = load double*, double** %12, align 8
  %314 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %315 = load double, double* %14, align 8
  %316 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  call void @_ZN3povL23compute_lighted_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryE(float* %310, %"struct.pov::Texture_Struct"* %311, double* %312, double* %313, %"struct.pov::Ray_Struct"* %314, double %315, %"struct.pov::istk_entry"* %316)
  %317 = load i32, i32* @x.29
  %318 = load i32, i32* @y.30
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %325

; <label>:325:                                    ; preds = %originalBBpart236, %originalBBpart232
  br label %326

; <label>:326:                                    ; preds = %325, %267
  br label %345

; <label>:327:                                    ; preds = %130
  %328 = load i32, i32* @x.29
  %329 = load i32, i32* @y.30
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %327
  %336 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0))
  %337 = load i32, i32* @x.29
  %338 = load i32, i32* @y.30
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %345

; <label>:345:                                    ; preds = %originalBBpart240, %326, %248, %211, %210, %originalBBpart220
  br label %530

; <label>:346:                                    ; preds = %originalBBpart216
  %347 = load i32, i32* @x.29
  %348 = load i32, i32* @y.30
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %346
  %355 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %356 = load double*, double** %11, align 8
  %357 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %358 = bitcast %"struct.pov::Texture_Struct"* %357 to %"struct.pov::Pattern_Struct"*
  call void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double* %355, double* %356, %"struct.pov::Pattern_Struct"* %358)
  %359 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %360 = bitcast %"struct.pov::Texture_Struct"* %359 to %"struct.pov::Pattern_Struct"*
  %361 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %362 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %363 = call double @_ZN3pov13Evaluate_TPatEPNS_14Pattern_StructEPdPNS_10istk_entryE(%"struct.pov::Pattern_Struct"* %360, double* %361, %"struct.pov::istk_entry"* %362)
  store double %363, double* %20, align 8
  %364 = load double, double* %20, align 8
  %365 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %17, align 8
  call void @_ZN3pov16Search_Blend_MapEdPNS_16Blend_Map_StructEPPNS_15Blend_Map_EntryES4_(double %364, %"struct.pov::Blend_Map_Struct"* %365, %"struct.pov::Blend_Map_Entry"** %18, %"struct.pov::Blend_Map_Entry"** %19)
  %366 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %367 = load double*, double** %11, align 8
  %368 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %369 = bitcast %"struct.pov::Texture_Struct"* %368 to %"struct.pov::Pattern_Struct"*
  call void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double* %366, double* %367, %"struct.pov::Pattern_Struct"* %369)
  %370 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %371 = icmp ne i32 %370, 0
  %372 = load i32, i32* @x.29
  %373 = load i32, i32* @y.30
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %371, label %380, label %461

; <label>:380:                                    ; preds = %originalBBpart244
  %381 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %382 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %383 = icmp eq %"struct.pov::Blend_Map_Entry"* %381, %382
  br i1 %383, label %384, label %396

; <label>:384:                                    ; preds = %380
  %385 = load float*, float** %9, align 8
  %386 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %387 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %386, i32 0, i32 2
  %388 = bitcast %union.anon* %387 to %"struct.pov::Texture_Struct"**
  %389 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %388, align 8
  %390 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %391 = load double*, double** %12, align 8
  %392 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %393 = load double, double* %14, align 8
  %394 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %395 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %385, %"struct.pov::Texture_Struct"* %389, double* %390, double* %391, %"struct.pov::Ray_Struct"* %392, double %393, %"struct.pov::istk_entry"* %394, i32 %395)
  br label %444

; <label>:396:                                    ; preds = %380
  %397 = load double, double* %20, align 8
  %398 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %399 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %398, i32 0, i32 0
  %400 = load float, float* %399, align 8
  %401 = fpext float %400 to double
  %402 = fsub double %397, %401
  %403 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %404 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %403, i32 0, i32 0
  %405 = load float, float* %404, align 8
  %406 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %407 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %406, i32 0, i32 0
  %408 = load float, float* %407, align 8
  %409 = fsub float %405, %408
  %410 = fpext float %409 to double
  %411 = fdiv double %402, %410
  store double %411, double* %20, align 8
  %412 = load double, double* %20, align 8
  %413 = fsub double 1.000000e+00, %412
  store double %413, double* %21, align 8
  %414 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %415 = load float*, float** %9, align 8
  %416 = load double, double* %20, align 8
  %417 = fptrunc double %416 to float
  call void @_ZN3pov6VScaleEPfPKff(float* %414, float* %415, float %417)
  %418 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %419 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %420 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %419, i32 0, i32 2
  %421 = bitcast %union.anon* %420 to %"struct.pov::Texture_Struct"**
  %422 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %421, align 8
  %423 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %424 = load double*, double** %12, align 8
  %425 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %426 = load double, double* %14, align 8
  %427 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %428 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %418, %"struct.pov::Texture_Struct"* %422, double* %423, double* %424, %"struct.pov::Ray_Struct"* %425, double %426, %"struct.pov::istk_entry"* %427, i32 %428)
  %429 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %430 = load float*, float** %9, align 8
  %431 = load double, double* %21, align 8
  %432 = fptrunc double %431 to float
  call void @_ZN3pov6VScaleEPfPKff(float* %429, float* %430, float %432)
  %433 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %434 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %435 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %434, i32 0, i32 2
  %436 = bitcast %union.anon* %435 to %"struct.pov::Texture_Struct"**
  %437 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %436, align 8
  %438 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %439 = load double*, double** %12, align 8
  %440 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %441 = load double, double* %14, align 8
  %442 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %443 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %433, %"struct.pov::Texture_Struct"* %437, double* %438, double* %439, %"struct.pov::Ray_Struct"* %440, double %441, %"struct.pov::istk_entry"* %442, i32 %443)
  br label %444

; <label>:444:                                    ; preds = %396, %384
  %445 = load i32, i32* @x.29
  %446 = load i32, i32* @y.30
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %444
  %453 = load i32, i32* @x.29
  %454 = load i32, i32* @y.30
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %529

; <label>:461:                                    ; preds = %originalBBpart244
  %462 = load float*, float** %9, align 8
  %463 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %464 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %463, i32 0, i32 2
  %465 = bitcast %union.anon* %464 to %"struct.pov::Texture_Struct"**
  %466 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %465, align 8
  %467 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %468 = load double*, double** %12, align 8
  %469 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %470 = load double, double* %14, align 8
  %471 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %472 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %462, %"struct.pov::Texture_Struct"* %466, double* %467, double* %468, %"struct.pov::Ray_Struct"* %469, double %470, %"struct.pov::istk_entry"* %471, i32 %472)
  %473 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %474 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %475 = icmp ne %"struct.pov::Blend_Map_Entry"* %473, %474
  br i1 %475, label %476, label %528

; <label>:476:                                    ; preds = %461
  %477 = load i32, i32* @x.29
  %478 = load i32, i32* @y.30
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %476
  %485 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %486 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %487 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %486, i32 0, i32 2
  %488 = bitcast %union.anon* %487 to %"struct.pov::Texture_Struct"**
  %489 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %488, align 8
  %490 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %491 = load double*, double** %12, align 8
  %492 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %493 = load double, double* %14, align 8
  %494 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %495 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %485, %"struct.pov::Texture_Struct"* %489, double* %490, double* %491, %"struct.pov::Ray_Struct"* %492, double %493, %"struct.pov::istk_entry"* %494, i32 %495)
  %496 = load double, double* %20, align 8
  %497 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %498 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %497, i32 0, i32 0
  %499 = load float, float* %498, align 8
  %500 = fpext float %499 to double
  %501 = fsub double %496, %500
  %502 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %503 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %502, i32 0, i32 0
  %504 = load float, float* %503, align 8
  %505 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %506 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %505, i32 0, i32 0
  %507 = load float, float* %506, align 8
  %508 = fsub float %504, %507
  %509 = fpext float %508 to double
  %510 = fdiv double %501, %509
  store double %510, double* %20, align 8
  %511 = load double, double* %20, align 8
  %512 = fsub double 1.000000e+00, %511
  store double %512, double* %21, align 8
  %513 = load float*, float** %9, align 8
  %514 = load double, double* %20, align 8
  %515 = fptrunc double %514 to float
  %516 = load float*, float** %9, align 8
  %517 = load double, double* %21, align 8
  %518 = fptrunc double %517 to float
  %519 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  call void @_ZN3pov9CLinComb2EPffPKffS2_(float* %513, float %515, float* %516, float %518, float* %519)
  %520 = load i32, i32* @x.29
  %521 = load i32, i32* @y.30
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBBpart288, label %originalBB50alteredBB

originalBBpart288:                                ; preds = %originalBB50
  br label %528

; <label>:528:                                    ; preds = %originalBBpart288, %461
  br label %529

; <label>:529:                                    ; preds = %528, %originalBBpart248
  br label %530

; <label>:530:                                    ; preds = %529, %345
  %531 = load i8, i8* %25, align 1
  %532 = trunc i8 %531 to i1
  %533 = zext i1 %532 to i32
  %534 = icmp eq i32 %533, 1
  br i1 %534, label %535, label %554

; <label>:535:                                    ; preds = %530
  %536 = load i32, i32* @x.29
  %537 = load i32, i32* @y.30
  %538 = sub i32 %536, 1
  %539 = mul i32 %536, %538
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %541, %542
  br i1 %543, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %535
  %544 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %545 = add nsw i32 %544, -1
  store i32 %545, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %546 = load i32, i32* @x.29
  %547 = load i32, i32* @y.30
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %554

; <label>:554:                                    ; preds = %originalBBpart292, %530
  %555 = load i32, i32* @x.29
  %556 = load i32, i32* @y.30
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %554
  %563 = load i32, i32* @x.29
  %564 = load i32, i32* @y.30
  %565 = sub i32 %563, 1
  %566 = mul i32 %563, %565
  %567 = urem i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = icmp slt i32 %564, 10
  %570 = or i1 %568, %569
  br i1 %570, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %36
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %84
  %571 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %572 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %573 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %_ = sub i32 0, %573
  %gen = add i32 %_, 1
  %_7 = shl i32 %573, 1
  %_8 = shl i32 %573, 1
  %_9 = sub i32 %573, 1
  %gen10 = mul i32 %_9, 1
  %574 = add nsw i32 %573, 1
  store i32 %574, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %575 = sext i32 %573 to i64
  %576 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %572, i64 %575
  store %"struct.pov::Texture_Struct"* %571, %"struct.pov::Texture_Struct"** %576, align 8
  store i8 1, i8* %25, align 1
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %108
  %577 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %578 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %577, i32 0, i32 0
  %579 = load i16, i16* %578, align 8
  %580 = zext i16 %579 to i32
  %581 = icmp sle i32 %580, 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %135
  %582 = load float*, float** %9, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %582, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %153
  %583 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %584 = load double*, double** %11, align 8
  %585 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %586 = bitcast %"struct.pov::Texture_Struct"* %585 to %"struct.pov::Pattern_Struct"*
  call void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double* %583, double* %584, %"struct.pov::Pattern_Struct"* %586)
  %587 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %588 = icmp ne i32 %587, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %185
  %589 = load float*, float** %9, align 8
  %590 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %591 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %592 = load double*, double** %12, align 8
  %593 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %594 = load double, double* %14, align 8
  %595 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %596 = load i32, i32* %16, align 4
  call void @_ZN3povL16average_texturesEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %589, %"struct.pov::Texture_Struct"* %590, double* %591, double* %592, %"struct.pov::Ray_Struct"* %593, double %594, %"struct.pov::istk_entry"* %595, i32 %596)
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %278
  %597 = load float*, float** %9, align 8
  %598 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %599 = load double*, double** %11, align 8
  %600 = load double*, double** %12, align 8
  %601 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %602 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  call void @_ZN3povL22compute_shadow_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEPNS_10istk_entryE(float* %597, %"struct.pov::Texture_Struct"* %598, double* %599, double* %600, %"struct.pov::Ray_Struct"* %601, %"struct.pov::istk_entry"* %602)
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %301
  %603 = load float*, float** %9, align 8
  %604 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %605 = load double*, double** %11, align 8
  %606 = load double*, double** %12, align 8
  %607 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %608 = load double, double* %14, align 8
  %609 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  call void @_ZN3povL23compute_lighted_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryE(float* %603, %"struct.pov::Texture_Struct"* %604, double* %605, double* %606, %"struct.pov::Ray_Struct"* %607, double %608, %"struct.pov::istk_entry"* %609)
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %327
  %610 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0))
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %346
  %611 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %612 = load double*, double** %11, align 8
  %613 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %614 = bitcast %"struct.pov::Texture_Struct"* %613 to %"struct.pov::Pattern_Struct"*
  call void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double* %611, double* %612, %"struct.pov::Pattern_Struct"* %614)
  %615 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %616 = bitcast %"struct.pov::Texture_Struct"* %615 to %"struct.pov::Pattern_Struct"*
  %617 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %618 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %619 = call double @_ZN3pov13Evaluate_TPatEPNS_14Pattern_StructEPdPNS_10istk_entryE(%"struct.pov::Pattern_Struct"* %616, double* %617, %"struct.pov::istk_entry"* %618)
  store double %619, double* %20, align 8
  %620 = load double, double* %20, align 8
  %621 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %17, align 8
  call void @_ZN3pov16Search_Blend_MapEdPNS_16Blend_Map_StructEPPNS_15Blend_Map_EntryES4_(double %620, %"struct.pov::Blend_Map_Struct"* %621, %"struct.pov::Blend_Map_Entry"** %18, %"struct.pov::Blend_Map_Entry"** %19)
  %622 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %623 = load double*, double** %11, align 8
  %624 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %625 = bitcast %"struct.pov::Texture_Struct"* %624 to %"struct.pov::Pattern_Struct"*
  call void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double* %622, double* %623, %"struct.pov::Pattern_Struct"* %625)
  %626 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %627 = icmp ne i32 %626, 0
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %444
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %476
  %628 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %629 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %630 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %629, i32 0, i32 2
  %631 = bitcast %union.anon* %630 to %"struct.pov::Texture_Struct"**
  %632 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %631, align 8
  %633 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %634 = load double*, double** %12, align 8
  %635 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %636 = load double, double* %14, align 8
  %637 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %638 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %628, %"struct.pov::Texture_Struct"* %632, double* %633, double* %634, %"struct.pov::Ray_Struct"* %635, double %636, %"struct.pov::istk_entry"* %637, i32 %638)
  %639 = load double, double* %20, align 8
  %640 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %641 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %640, i32 0, i32 0
  %642 = load float, float* %641, align 8
  %643 = fpext float %642 to double
  %_51 = fsub double -0.000000e+00, %639
  %gen52 = fadd double %_51, %643
  %_53 = fsub double -0.000000e+00, %639
  %gen54 = fadd double %_53, %643
  %_55 = fsub double -0.000000e+00, %639
  %gen56 = fadd double %_55, %643
  %_57 = fsub double -0.000000e+00, %639
  %gen58 = fadd double %_57, %643
  %_59 = fsub double -0.000000e+00, %639
  %gen60 = fadd double %_59, %643
  %644 = fsub double %639, %643
  %645 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %646 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %645, i32 0, i32 0
  %647 = load float, float* %646, align 8
  %648 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %18, align 8
  %649 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %648, i32 0, i32 0
  %650 = load float, float* %649, align 8
  %_61 = fsub float -0.000000e+00, %647
  %gen62 = fadd float %_61, %650
  %_63 = fsub float -0.000000e+00, %647
  %gen64 = fadd float %_63, %650
  %651 = fsub float %647, %650
  %652 = fpext float %651 to double
  %_65 = fsub double %644, %652
  %gen66 = fmul double %_65, %652
  %_67 = fsub double %644, %652
  %gen68 = fmul double %_67, %652
  %_69 = fsub double %644, %652
  %gen70 = fmul double %_69, %652
  %_71 = fsub double -0.000000e+00, %644
  %gen72 = fadd double %_71, %652
  %_73 = fsub double %644, %652
  %gen74 = fmul double %_73, %652
  %653 = fdiv double %644, %652
  store double %653, double* %20, align 8
  %654 = load double, double* %20, align 8
  %_75 = fsub double 1.000000e+00, %654
  %gen76 = fmul double %_75, %654
  %_77 = fsub double 1.000000e+00, %654
  %gen78 = fmul double %_77, %654
  %_79 = fsub double 1.000000e+00, %654
  %gen80 = fmul double %_79, %654
  %_81 = fsub double -0.000000e+00, 1.000000e+00
  %gen82 = fadd double %_81, %654
  %_83 = fsub double 1.000000e+00, %654
  %gen84 = fmul double %_83, %654
  %_85 = fsub double -0.000000e+00, 1.000000e+00
  %gen86 = fadd double %_85, %654
  %655 = fsub double 1.000000e+00, %654
  store double %655, double* %21, align 8
  %656 = load float*, float** %9, align 8
  %657 = load double, double* %20, align 8
  %658 = fptrunc double %657 to float
  %659 = load float*, float** %9, align 8
  %660 = load double, double* %21, align 8
  %661 = fptrunc double %660 to float
  %662 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  call void @_ZN3pov9CLinComb2EPffPKffS2_(float* %656, float %658, float* %659, float %661, float* %662)
  br label %originalBB50

originalBB90alteredBB:                            ; preds = %originalBB90, %535
  %663 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %664 = add nsw i32 %663, -1
  store i32 %664, i32* @_ZN3pov18warpNormalTexturesE, align 4
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %554
  br label %originalBB94
}

; Function Attrs: noinline uwtable
define i32 @_ZN3pov11Test_ShadowEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pf(%"struct.pov::Light_Source_Struct"*, double*, %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"*, double*, float*) #0 {
  %7 = load i32, i32* @x.31
  %8 = load i32, i32* @y.32
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = alloca i32, align 4
  %16 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %17 = alloca double*, align 8
  %18 = alloca %"struct.pov::Ray_Struct"*, align 8
  %19 = alloca %"struct.pov::Ray_Struct"*, align 8
  %20 = alloca double*, align 8
  %21 = alloca float*, align 8
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %16, align 8
  store double* %1, double** %17, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %18, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %19, align 8
  store double* %4, double** %20, align 8
  store float* %5, float** %21, align 8
  %22 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %16, align 8
  %23 = load double*, double** %17, align 8
  %24 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %18, align 8
  %25 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %19, align 8
  %26 = load double*, double** %20, align 8
  %27 = load float*, float** %21, align 8
  call void @_ZN3povL8do_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pf(%"struct.pov::Light_Source_Struct"* %22, double* %23, %"struct.pov::Ray_Struct"* %24, %"struct.pov::Ray_Struct"* %25, double* %26, float* %27)
  %28 = load float*, float** %21, align 8
  %29 = getelementptr inbounds float, float* %28, i64 0
  %30 = load float, float* %29, align 4
  %31 = call float @_ZSt4fabsf(float %30)
  %32 = fpext float %31 to double
  %33 = fcmp olt double %32, 1.000000e-07
  %34 = load i32, i32* @x.31
  %35 = load i32, i32* @y.32
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %42, label %89

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i32, i32* @x.31
  %44 = load i32, i32* @y.32
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %42
  %51 = load float*, float** %21, align 8
  %52 = getelementptr inbounds float, float* %51, i64 1
  %53 = load float, float* %52, align 4
  %54 = call float @_ZSt4fabsf(float %53)
  %55 = fpext float %54 to double
  %56 = fcmp olt double %55, 1.000000e-07
  %57 = load i32, i32* @x.31
  %58 = load i32, i32* @y.32
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %56, label %65, label %89

; <label>:65:                                     ; preds = %originalBBpart24
  %66 = load i32, i32* @x.31
  %67 = load i32, i32* @y.32
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %65
  %74 = load float*, float** %21, align 8
  %75 = getelementptr inbounds float, float* %74, i64 2
  %76 = load float, float* %75, align 4
  %77 = call float @_ZSt4fabsf(float %76)
  %78 = fpext float %77 to double
  %79 = fcmp olt double %78, 1.000000e-07
  %80 = load i32, i32* @x.31
  %81 = load i32, i32* @y.32
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %79, label %88, label %89

; <label>:88:                                     ; preds = %originalBBpart28
  store i32 1, i32* %15, align 4
  br label %201

; <label>:89:                                     ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %90 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %91 = zext i32 %90 to i64
  %92 = and i64 %91, 4
  %93 = icmp ne i64 %92, 0
  br i1 %93, label %94, label %199

; <label>:94:                                     ; preds = %89
  %95 = load i32, i32* @x.31
  %96 = load i32, i32* @y.32
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %94
  %103 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %16, align 8
  %104 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %103, i32 0, i32 42
  %105 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %104, align 8
  %106 = icmp ne %"struct.pov::Object_Struct"* %105, null
  %107 = load i32, i32* @x.31
  %108 = load i32, i32* @y.32
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %106, label %137, label %115

; <label>:115:                                    ; preds = %originalBBpart212
  %116 = load i32, i32* @x.31
  %117 = load i32, i32* @y.32
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %115
  %124 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %16, align 8
  %125 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %124, i32 0, i32 27
  %126 = load i8, i8* %125, align 8
  %127 = zext i8 %126 to i32
  %128 = icmp ne i32 %127, 3
  %129 = load i32, i32* @x.31
  %130 = load i32, i32* @y.32
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %128, label %137, label %199

; <label>:137:                                    ; preds = %originalBBpart216, %originalBBpart212
  %138 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %16, align 8
  %139 = load double*, double** %17, align 8
  %140 = load double, double* %139, align 8
  %141 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %18, align 8
  %142 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %19, align 8
  %143 = load double*, double** %20, align 8
  %144 = load float*, float** %21, align 8
  call void @_ZN3povL18block_light_sourceEPNS_19Light_Source_StructEdPNS_10Ray_StructES3_PdPf(%"struct.pov::Light_Source_Struct"* %138, double %140, %"struct.pov::Ray_Struct"* %141, %"struct.pov::Ray_Struct"* %142, double* %143, float* %144)
  %145 = load float*, float** %21, align 8
  %146 = getelementptr inbounds float, float* %145, i64 0
  %147 = load float, float* %146, align 4
  %148 = call float @_ZSt4fabsf(float %147)
  %149 = fpext float %148 to double
  %150 = fcmp olt double %149, 1.000000e-07
  br i1 %150, label %151, label %198

; <label>:151:                                    ; preds = %137
  %152 = load float*, float** %21, align 8
  %153 = getelementptr inbounds float, float* %152, i64 1
  %154 = load float, float* %153, align 4
  %155 = call float @_ZSt4fabsf(float %154)
  %156 = fpext float %155 to double
  %157 = fcmp olt double %156, 1.000000e-07
  br i1 %157, label %158, label %198

; <label>:158:                                    ; preds = %151
  %159 = load i32, i32* @x.31
  %160 = load i32, i32* @y.32
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %158
  %167 = load float*, float** %21, align 8
  %168 = getelementptr inbounds float, float* %167, i64 2
  %169 = load float, float* %168, align 4
  %170 = call float @_ZSt4fabsf(float %169)
  %171 = fpext float %170 to double
  %172 = fcmp olt double %171, 1.000000e-07
  %173 = load i32, i32* @x.31
  %174 = load i32, i32* @y.32
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %172, label %181, label %198

; <label>:181:                                    ; preds = %originalBBpart220
  %182 = load i32, i32* @x.31
  %183 = load i32, i32* @y.32
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %181
  store i32 1, i32* %15, align 4
  %190 = load i32, i32* @x.31
  %191 = load i32, i32* @y.32
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %201

; <label>:198:                                    ; preds = %originalBBpart220, %151, %137
  br label %199

; <label>:199:                                    ; preds = %198, %originalBBpart216, %89
  br label %200

; <label>:200:                                    ; preds = %199
  store i32 0, i32* %15, align 4
  br label %201

; <label>:201:                                    ; preds = %200, %originalBBpart224, %88
  %202 = load i32, i32* @x.31
  %203 = load i32, i32* @y.32
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %201
  %210 = load i32, i32* %15, align 4
  %211 = load i32, i32* @x.31
  %212 = load i32, i32* @y.32
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i32 %210

originalBBalteredBB:                              ; preds = %originalBB, %6
  %219 = alloca i32, align 4
  %220 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %221 = alloca double*, align 8
  %222 = alloca %"struct.pov::Ray_Struct"*, align 8
  %223 = alloca %"struct.pov::Ray_Struct"*, align 8
  %224 = alloca double*, align 8
  %225 = alloca float*, align 8
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %220, align 8
  store double* %1, double** %221, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %222, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %223, align 8
  store double* %4, double** %224, align 8
  store float* %5, float** %225, align 8
  %226 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %220, align 8
  %227 = load double*, double** %221, align 8
  %228 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %222, align 8
  %229 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %223, align 8
  %230 = load double*, double** %224, align 8
  %231 = load float*, float** %225, align 8
  call void @_ZN3povL8do_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pf(%"struct.pov::Light_Source_Struct"* %226, double* %227, %"struct.pov::Ray_Struct"* %228, %"struct.pov::Ray_Struct"* %229, double* %230, float* %231)
  %232 = load float*, float** %225, align 8
  %233 = getelementptr inbounds float, float* %232, i64 0
  %234 = load float, float* %233, align 4
  %235 = call float @_ZSt4fabsf(float %234)
  %236 = fpext float %235 to double
  %237 = fcmp olt double %236, 1.000000e-07
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %238 = load float*, float** %21, align 8
  %239 = getelementptr inbounds float, float* %238, i64 1
  %240 = load float, float* %239, align 4
  %241 = call float @_ZSt4fabsf(float %240)
  %242 = fpext float %241 to double
  %243 = fcmp olt double %242, 1.000000e-07
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %244 = load float*, float** %21, align 8
  %245 = getelementptr inbounds float, float* %244, i64 2
  %246 = load float, float* %245, align 4
  %247 = call float @_ZSt4fabsf(float %246)
  %248 = fpext float %247 to double
  %249 = fcmp olt double %248, 1.000000e-07
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %94
  %250 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %16, align 8
  %251 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %250, i32 0, i32 42
  %252 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %251, align 8
  %253 = icmp ne %"struct.pov::Object_Struct"* %252, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %115
  %254 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %16, align 8
  %255 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %254, i32 0, i32 27
  %256 = load i8, i8* %255, align 8
  %257 = zext i8 %256 to i32
  %258 = icmp ne i32 %257, 3
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %158
  %259 = load float*, float** %21, align 8
  %260 = getelementptr inbounds float, float* %259, i64 2
  %261 = load float, float* %260, align 4
  %262 = call float @_ZSt4fabsf(float %261)
  %263 = fpext float %262 to double
  %264 = fcmp olt double %263, 1.000000e-07
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %181
  store i32 1, i32* %15, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %201
  %265 = load i32, i32* %15, align 4
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL8do_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pf(%"struct.pov::Light_Source_Struct"*, double*, %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"*, double*, float*) #0 {
  %7 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %8 = alloca double*, align 8
  %9 = alloca %"struct.pov::Ray_Struct"*, align 8
  %10 = alloca %"struct.pov::Ray_Struct"*, align 8
  %11 = alloca double*, align 8
  %12 = alloca float*, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca [3 x double], align 16
  %16 = alloca double, align 8
  %17 = alloca [3 x double], align 16
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %7, align 8
  store double* %1, double** %8, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %9, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %10, align 8
  store double* %4, double** %11, align 8
  store float* %5, float** %12, align 8
  %18 = load float*, float** %12, align 8
  %19 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %20 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %19, i32 0, i32 15
  %21 = getelementptr inbounds [5 x float], [5 x float]* %20, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %18, float* %21)
  %22 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %23 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 0
  %24 = getelementptr inbounds [3 x double], [3 x double]* %23, i32 0, i32 0
  %25 = load double*, double** %11, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %24, double* %25)
  %26 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %27 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %26, i32 0, i32 27
  %28 = load i8, i8* %27, align 8
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 4
  br i1 %30, label %31, label %72

; <label>:31:                                     ; preds = %6
  %32 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %33 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %32, i32 0, i32 1
  %34 = getelementptr inbounds [3 x double], [3 x double]* %33, i32 0, i32 0
  %35 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %36 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %35, i32 0, i32 17
  %37 = getelementptr inbounds [3 x double], [3 x double]* %36, i32 0, i32 0
  %38 = load double*, double** %11, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %34, double* %37, double* %38)
  %39 = load double*, double** %8, align 8
  %40 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %41 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %40, i32 0, i32 1
  %42 = getelementptr inbounds [3 x double], [3 x double]* %41, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %39, double* %42)
  %43 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %44 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %43, i32 0, i32 1
  %45 = getelementptr inbounds [3 x double], [3 x double]* %44, i32 0, i32 0
  %46 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %47 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %46, i32 0, i32 17
  %48 = getelementptr inbounds [3 x double], [3 x double]* %47, i32 0, i32 0
  %49 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %50 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %49, i32 0, i32 18
  %51 = getelementptr inbounds [3 x double], [3 x double]* %50, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %45, double* %48, double* %51)
  %52 = getelementptr inbounds [3 x double], [3 x double]* %17, i32 0, i32 0
  %53 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %54 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %53, i32 0, i32 17
  %55 = getelementptr inbounds [3 x double], [3 x double]* %54, i32 0, i32 0
  %56 = load double*, double** %11, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %52, double* %55, double* %56)
  %57 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %58 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %57, i32 0, i32 1
  %59 = getelementptr inbounds [3 x double], [3 x double]* %58, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %16, double* %59)
  %60 = load double*, double** %8, align 8
  %61 = getelementptr inbounds [3 x double], [3 x double]* %17, i32 0, i32 0
  %62 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %63 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %62, i32 0, i32 1
  %64 = getelementptr inbounds [3 x double], [3 x double]* %63, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %60, double* %61, double* %64)
  %65 = load double, double* %16, align 8
  %66 = load double*, double** %8, align 8
  %67 = load double, double* %66, align 8
  %68 = fdiv double %67, %65
  store double %68, double* %66, align 8
  %69 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %70 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %69, i32 0, i32 1
  %71 = getelementptr inbounds [3 x double], [3 x double]* %70, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %71)
  br label %89

; <label>:72:                                     ; preds = %6
  %73 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %74 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %73, i32 0, i32 1
  %75 = getelementptr inbounds [3 x double], [3 x double]* %74, i32 0, i32 0
  %76 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %77 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %76, i32 0, i32 17
  %78 = getelementptr inbounds [3 x double], [3 x double]* %77, i32 0, i32 0
  %79 = load double*, double** %11, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %75, double* %78, double* %79)
  %80 = load double*, double** %8, align 8
  %81 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %82 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %81, i32 0, i32 1
  %83 = getelementptr inbounds [3 x double], [3 x double]* %82, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %80, double* %83)
  %84 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %85 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %84, i32 0, i32 1
  %86 = getelementptr inbounds [3 x double], [3 x double]* %85, i32 0, i32 0
  %87 = load double*, double** %8, align 8
  %88 = load double, double* %87, align 8
  call void @_ZN3pov15VInverseScaleEqEPdd(double* %86, double %88)
  br label %89

; <label>:89:                                     ; preds = %72, %31
  %90 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %91 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %92 = load double*, double** %8, align 8
  %93 = load double, double* %92, align 8
  %94 = call double @_ZN3pov15Attenuate_LightEPNS_19Light_Source_StructEPNS_10Ray_StructEd(%"struct.pov::Light_Source_Struct"* %90, %"struct.pov::Ray_Struct"* %91, double %93)
  store double %94, double* %13, align 8
  %95 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %96 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %95, i32 0, i32 33
  %97 = load i8, i8* %96, align 2
  %98 = icmp ne i8 %97, 0
  br i1 %98, label %99, label %163

; <label>:99:                                     ; preds = %89
  %100 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %101 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %100, i32 0, i32 28
  %102 = load i8, i8* %101, align 1
  %103 = icmp ne i8 %102, 0
  br i1 %103, label %104, label %125

; <label>:104:                                    ; preds = %99
  %105 = getelementptr inbounds [3 x double], [3 x double]* %15, i32 0, i32 0
  %106 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %107 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %106, i32 0, i32 17
  %108 = getelementptr inbounds [3 x double], [3 x double]* %107, i32 0, i32 0
  %109 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %110 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %109, i32 0, i32 18
  %111 = getelementptr inbounds [3 x double], [3 x double]* %110, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %105, double* %108, double* %111)
  %112 = getelementptr inbounds [3 x double], [3 x double]* %15, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %112)
  %113 = getelementptr inbounds [3 x double], [3 x double]* %15, i32 0, i32 0
  %114 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %115 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %114, i32 0, i32 1
  %116 = getelementptr inbounds [3 x double], [3 x double]* %115, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %14, double* %113, double* %116)
  %117 = load double, double* %14, align 8
  %118 = load double*, double** %8, align 8
  %119 = load double, double* %118, align 8
  %120 = fmul double %119, %117
  store double %120, double* %118, align 8
  %121 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %122 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %121, i32 0, i32 1
  %123 = getelementptr inbounds [3 x double], [3 x double]* %122, i32 0, i32 0
  %124 = getelementptr inbounds [3 x double], [3 x double]* %15, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %123, double* %124)
  br label %146

; <label>:125:                                    ; preds = %99
  %126 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %127 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %126, i32 0, i32 16
  %128 = getelementptr inbounds [3 x double], [3 x double]* %127, i32 0, i32 0
  %129 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %130 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %129, i32 0, i32 1
  %131 = getelementptr inbounds [3 x double], [3 x double]* %130, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %14, double* %128, double* %131)
  %132 = load double, double* %14, align 8
  %133 = fsub double -0.000000e+00, %132
  %134 = load double*, double** %8, align 8
  %135 = load double, double* %134, align 8
  %136 = fmul double %135, %133
  store double %136, double* %134, align 8
  %137 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %138 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %137, i32 0, i32 1
  %139 = getelementptr inbounds [3 x double], [3 x double]* %138, i32 0, i32 0
  %140 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %141 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %140, i32 0, i32 16
  %142 = getelementptr inbounds [3 x double], [3 x double]* %141, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %139, double* %142)
  %143 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %144 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %143, i32 0, i32 1
  %145 = getelementptr inbounds [3 x double], [3 x double]* %144, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %145, double -1.000000e+00)
  br label %146

; <label>:146:                                    ; preds = %125, %104
  %147 = load i32, i32* @x.33
  %148 = load i32, i32* @y.34
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %146
  %155 = load i32, i32* @x.33
  %156 = load i32, i32* @y.34
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %163

; <label>:163:                                    ; preds = %originalBBpart2, %89
  %164 = load i32, i32* @x.33
  %165 = load i32, i32* @y.34
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %163
  %172 = load float*, float** %12, align 8
  %173 = load double, double* %13, align 8
  %174 = fptrunc double %173 to float
  call void @_ZN3pov8VScaleEqEPff(float* %172, float %174)
  %175 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  call void @_ZN3pov25Initialize_Ray_ContainersEPNS_10Ray_StructEj(%"struct.pov::Ray_Struct"* %175, i32 0)
  %176 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %177 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %10, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %176, %"struct.pov::Ray_Struct"* %177)
  %178 = load i32, i32* @x.33
  %179 = load i32, i32* @y.34
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %146
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %163
  %186 = load float*, float** %12, align 8
  %187 = load double, double* %13, align 8
  %188 = fptrunc double %187 to float
  call void @_ZN3pov8VScaleEqEPff(float* %186, float %188)
  %189 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  call void @_ZN3pov25Initialize_Ray_ContainersEPNS_10Ray_StructEj(%"struct.pov::Ray_Struct"* %189, i32 0)
  %190 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %191 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %10, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %190, %"struct.pov::Ray_Struct"* %191)
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float @_ZSt4fabsf(float) #1 comdat {
  %2 = load i32, i32* @x.35
  %3 = load i32, i32* @y.36
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca float, align 4
  store float %0, float* %10, align 4
  %11 = load float, float* %10, align 4
  %12 = call float @llvm.fabs.f32(float %11)
  %13 = load i32, i32* @x.35
  %14 = load i32, i32* @y.36
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca float, align 4
  store float %0, float* %21, align 4
  %22 = load float, float* %21, align 4
  %23 = call float @llvm.fabs.f32(float %22)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL18block_light_sourceEPNS_19Light_Source_StructEdPNS_10Ray_StructES3_PdPf(%"struct.pov::Light_Source_Struct"*, double, %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"*, double*, float*) #0 {
  %7 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %8 = alloca double, align 8
  %9 = alloca %"struct.pov::Ray_Struct"*, align 8
  %10 = alloca %"struct.pov::Ray_Struct"*, align 8
  %11 = alloca double*, align 8
  %12 = alloca float*, align 8
  %13 = alloca double, align 8
  %14 = alloca %"struct.pov::istk_entry", align 8
  %15 = alloca %"struct.pov::Ray_Struct", align 8
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %7, align 8
  store double %1, double* %8, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %9, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %10, align 8
  store double* %4, double** %11, align 8
  store float* %5, float** %12, align 8
  %16 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %17 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %16, i32 0, i32 13
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %19 = load double, double* %8, align 8
  store double %19, double* %13, align 8
  %20 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %21 = bitcast %"struct.pov::Ray_Struct"* %15 to i8*
  %22 = bitcast %"struct.pov::Ray_Struct"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 856, i32 8, i1 false)
  %23 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %15, i32 0, i32 3
  store i32 1, i32* %23, align 4
  %24 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %25 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %24, i32 0, i32 28
  %26 = load i8, i8* %25, align 1
  %27 = icmp ne i8 %26, 0
  br i1 %27, label %28, label %38

; <label>:28:                                     ; preds = %6
  %29 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %30 = zext i32 %29 to i64
  %31 = and i64 %30, 8
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %38

; <label>:33:                                     ; preds = %28
  %34 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %35 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %10, align 8
  %36 = load double*, double** %11, align 8
  %37 = load float*, float** %12, align 8
  call void @_ZN3povL16block_area_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pfiiiii(%"struct.pov::Light_Source_Struct"* %34, double* %13, %"struct.pov::Ray_Struct"* %15, %"struct.pov::Ray_Struct"* %35, double* %36, float* %37, i32 0, i32 0, i32 0, i32 0, i32 0)
  br label %115

; <label>:38:                                     ; preds = %28, %6
  %39 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 0), align 8
  %40 = zext i32 %39 to i64
  %41 = and i64 %40, 4096
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %43, label %79

; <label>:43:                                     ; preds = %38
  %44 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %45 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %44, i32 0, i32 27
  %46 = load i8, i8* %45, align 8
  %47 = zext i8 %46 to i32
  %48 = icmp ne i32 %47, 4
  br i1 %48, label %49, label %79

; <label>:49:                                     ; preds = %43
  %50 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %51 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %50, i32 0, i32 33
  %52 = load i8, i8* %51, align 2
  %53 = icmp ne i8 %52, 0
  br i1 %53, label %79, label %54

; <label>:54:                                     ; preds = %49
  %55 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %56 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 4096
  %59 = icmp ne i32 %58, 4096
  br i1 %59, label %60, label %79

; <label>:60:                                     ; preds = %54
  %61 = load i32, i32* @x.37
  %62 = load i32, i32* @y.38
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %60
  %69 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %70 = load float*, float** %12, align 8
  call void @_ZN3povL25block_point_light_LBufferEPNS_19Light_Source_StructEPdPNS_10Ray_StructEPf(%"struct.pov::Light_Source_Struct"* %69, double* %13, %"struct.pov::Ray_Struct"* %15, float* %70)
  %71 = load i32, i32* @x.37
  %72 = load i32, i32* @y.38
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %98

; <label>:79:                                     ; preds = %54, %49, %43, %38
  %80 = load i32, i32* @x.37
  %81 = load i32, i32* @y.38
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %79
  %88 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %89 = load float*, float** %12, align 8
  call void @_ZN3povL17block_point_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructEPf(%"struct.pov::Light_Source_Struct"* %88, double* %13, %"struct.pov::Ray_Struct"* %15, float* %89)
  %90 = load i32, i32* @x.37
  %91 = load i32, i32* @y.38
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %98

; <label>:98:                                     ; preds = %originalBBpart24, %originalBBpart2
  %99 = load i32, i32* @x.37
  %100 = load i32, i32* @y.38
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %98
  %107 = load i32, i32* @x.37
  %108 = load i32, i32* @y.38
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %115

; <label>:115:                                    ; preds = %originalBBpart28, %33
  %116 = load i32, i32* @x.37
  %117 = load i32, i32* @y.38
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %115
  %124 = load double, double* %13, align 8
  %125 = fcmp ogt double %124, 1.000000e-03
  %126 = load i32, i32* @x.37
  %127 = load i32, i32* @y.38
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %125, label %134, label %165

; <label>:134:                                    ; preds = %originalBBpart212
  %135 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %136 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %135, i32 0, i32 39
  %137 = load i32, i32* %136, align 8
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %165

; <label>:139:                                    ; preds = %134
  %140 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %141 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %140, i32 0, i32 38
  %142 = load i32, i32* %141, align 4
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %165

; <label>:144:                                    ; preds = %139
  %145 = load i32, i32* @x.37
  %146 = load i32, i32* @y.38
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %144
  %153 = load double, double* %13, align 8
  %154 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %14, i32 0, i32 0
  store double %153, double* %154, align 8
  %155 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %14, i32 0, i32 5
  store %"struct.pov::Object_Struct"* null, %"struct.pov::Object_Struct"** %155, align 8
  %156 = load float*, float** %12, align 8
  call void @_ZN3povL23do_light_ray_atmosphereEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Ray_Struct"* %15, %"struct.pov::istk_entry"* %14, float* %156, i32 0)
  %157 = load i32, i32* @x.37
  %158 = load i32, i32* @y.38
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %165

; <label>:165:                                    ; preds = %originalBBpart216, %139, %134, %originalBBpart212
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %60
  %166 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %167 = load float*, float** %12, align 8
  call void @_ZN3povL25block_point_light_LBufferEPNS_19Light_Source_StructEPdPNS_10Ray_StructEPf(%"struct.pov::Light_Source_Struct"* %166, double* %13, %"struct.pov::Ray_Struct"* %15, float* %167)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  %168 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %7, align 8
  %169 = load float*, float** %12, align 8
  call void @_ZN3povL17block_point_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructEPf(%"struct.pov::Light_Source_Struct"* %168, double* %13, %"struct.pov::Ray_Struct"* %15, float* %169)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %98
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %115
  %170 = load double, double* %13, align 8
  %171 = fcmp ogt double %170, 1.000000e-03
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %144
  %172 = load double, double* %13, align 8
  %173 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %14, i32 0, i32 0
  store double %172, double* %173, align 8
  %174 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %14, i32 0, i32 5
  store %"struct.pov::Object_Struct"* null, %"struct.pov::Object_Struct"** %174, align 8
  %175 = load float*, float** %12, align 8
  call void @_ZN3povL23do_light_ray_atmosphereEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Ray_Struct"* %15, %"struct.pov::istk_entry"* %14, float* %175, i32 0)
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define void @_ZN3pov10do_diffuseEPNS_13Finish_StructEPNS_10Ray_StructEPdPfS5_S5_d(%"struct.pov::Finish_Struct"*, %"struct.pov::Ray_Struct"*, double*, float*, float*, float*, double) #0 {
  %8 = alloca %"struct.pov::Finish_Struct"*, align 8
  %9 = alloca %"struct.pov::Ray_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca float*, align 8
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  store %"struct.pov::Finish_Struct"* %0, %"struct.pov::Finish_Struct"** %8, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %9, align 8
  store double* %2, double** %10, align 8
  store float* %3, float** %11, align 8
  store float* %4, float** %12, align 8
  store float* %5, float** %13, align 8
  store double %6, double* %14, align 8
  %17 = load double*, double** %10, align 8
  %18 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %19 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %18, i32 0, i32 1
  %20 = getelementptr inbounds [3 x double], [3 x double]* %19, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %15, double* %17, double* %20)
  %21 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %22 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %21, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fpext float %23 to double
  %25 = fcmp une double %24, 1.000000e+00
  br i1 %25, label %26, label %50

; <label>:26:                                     ; preds = %7
  %27 = load i32, i32* @x.39
  %28 = load i32, i32* @y.40
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %26
  %35 = load double, double* %15, align 8
  %36 = call double @fabs(double %35) #5
  %37 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %38 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %37, i32 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fpext float %39 to double
  %41 = call double @pow(double %36, double %40) #7
  store double %41, double* %16, align 8
  %42 = load i32, i32* @x.39
  %43 = load i32, i32* @y.40
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %53

; <label>:50:                                     ; preds = %7
  %51 = load double, double* %15, align 8
  %52 = call double @fabs(double %51) #5
  store double %52, double* %16, align 8
  br label %53

; <label>:53:                                     ; preds = %50, %originalBBpart2
  %54 = load i32, i32* @x.39
  %55 = load i32, i32* @y.40
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %53
  %62 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %63 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %62, i32 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = fpext float %64 to double
  %66 = load double, double* %14, align 8
  %67 = fmul double %65, %66
  %68 = load double, double* %16, align 8
  %69 = fmul double %68, %67
  store double %69, double* %16, align 8
  %70 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %71 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %70, i32 0, i32 14
  %72 = load float, float* %71, align 4
  %73 = fpext float %72 to double
  %74 = fcmp ogt double %73, 0.000000e+00
  %75 = load i32, i32* @x.39
  %76 = load i32, i32* @y.40
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br i1 %74, label %83, label %94

; <label>:83:                                     ; preds = %originalBBpart29
  %84 = call i32 @_ZN3pov8POV_RANDEv()
  %85 = sitofp i32 %84 to double
  %86 = fmul double %85, 0x3F0000200040021E
  %87 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %88 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %87, i32 0, i32 14
  %89 = load float, float* %88, align 4
  %90 = fpext float %89 to double
  %91 = fmul double %86, %90
  %92 = load double, double* %16, align 8
  %93 = fsub double %92, %91
  store double %93, double* %16, align 8
  br label %94

; <label>:94:                                     ; preds = %83, %originalBBpart29
  %95 = load double, double* %16, align 8
  %96 = load float*, float** %13, align 8
  %97 = getelementptr inbounds float, float* %96, i64 0
  %98 = load float, float* %97, align 4
  %99 = fpext float %98 to double
  %100 = fmul double %95, %99
  %101 = load float*, float** %12, align 8
  %102 = getelementptr inbounds float, float* %101, i64 0
  %103 = load float, float* %102, align 4
  %104 = fpext float %103 to double
  %105 = fmul double %100, %104
  %106 = load float*, float** %11, align 8
  %107 = getelementptr inbounds float, float* %106, i64 0
  %108 = load float, float* %107, align 4
  %109 = fpext float %108 to double
  %110 = fadd double %109, %105
  %111 = fptrunc double %110 to float
  store float %111, float* %107, align 4
  %112 = load double, double* %16, align 8
  %113 = load float*, float** %13, align 8
  %114 = getelementptr inbounds float, float* %113, i64 1
  %115 = load float, float* %114, align 4
  %116 = fpext float %115 to double
  %117 = fmul double %112, %116
  %118 = load float*, float** %12, align 8
  %119 = getelementptr inbounds float, float* %118, i64 1
  %120 = load float, float* %119, align 4
  %121 = fpext float %120 to double
  %122 = fmul double %117, %121
  %123 = load float*, float** %11, align 8
  %124 = getelementptr inbounds float, float* %123, i64 1
  %125 = load float, float* %124, align 4
  %126 = fpext float %125 to double
  %127 = fadd double %126, %122
  %128 = fptrunc double %127 to float
  store float %128, float* %124, align 4
  %129 = load double, double* %16, align 8
  %130 = load float*, float** %13, align 8
  %131 = getelementptr inbounds float, float* %130, i64 2
  %132 = load float, float* %131, align 4
  %133 = fpext float %132 to double
  %134 = fmul double %129, %133
  %135 = load float*, float** %12, align 8
  %136 = getelementptr inbounds float, float* %135, i64 2
  %137 = load float, float* %136, align 4
  %138 = fpext float %137 to double
  %139 = fmul double %134, %138
  %140 = load float*, float** %11, align 8
  %141 = getelementptr inbounds float, float* %140, i64 2
  %142 = load float, float* %141, align 4
  %143 = fpext float %142 to double
  %144 = fadd double %143, %139
  %145 = fptrunc double %144 to float
  store float %145, float* %141, align 4
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %26
  %146 = load double, double* %15, align 8
  %147 = call double @fabs(double %146) #5
  %148 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %149 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %148, i32 0, i32 1
  %150 = load float, float* %149, align 4
  %151 = fpext float %150 to double
  %152 = call double @pow(double %147, double %151) #7
  store double %152, double* %16, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  %153 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %154 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %153, i32 0, i32 0
  %155 = load float, float* %154, align 4
  %156 = fpext float %155 to double
  %157 = load double, double* %14, align 8
  %_ = fsub double -0.000000e+00, %156
  %gen = fadd double %_, %157
  %_2 = fsub double %156, %157
  %gen3 = fmul double %_2, %157
  %_4 = fsub double %156, %157
  %gen5 = fmul double %_4, %157
  %_6 = fsub double %156, %157
  %gen7 = fmul double %_6, %157
  %158 = fmul double %156, %157
  %159 = load double, double* %16, align 8
  %160 = fmul double %159, %158
  store double %160, double* %16, align 8
  %161 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %162 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %161, i32 0, i32 14
  %163 = load float, float* %162, align 4
  %164 = fpext float %163 to double
  %165 = fcmp ogt double %164, 0.000000e+00
  br label %originalBB1
}

; Function Attrs: nounwind
declare double @pow(double, double) #3

; Function Attrs: nounwind readnone
declare double @fabs(double) #4

declare i32 @_ZN3pov8POV_RANDEv() #2

; Function Attrs: noinline uwtable
define void @_ZN3pov8do_phongEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_PfS5_S5_(%"struct.pov::Finish_Struct"*, %"struct.pov::Ray_Struct"*, double*, double*, float*, float*, float*) #0 {
  %8 = alloca %"struct.pov::Finish_Struct"*, align 8
  %9 = alloca %"struct.pov::Ray_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca float*, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca [3 x double], align 16
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca [5 x float], align 16
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  store %"struct.pov::Finish_Struct"* %0, %"struct.pov::Finish_Struct"** %8, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %9, align 8
  store double* %2, double** %10, align 8
  store double* %3, double** %11, align 8
  store float* %4, float** %12, align 8
  store float* %5, float** %13, align 8
  store float* %6, float** %14, align 8
  %24 = load double*, double** %10, align 8
  %25 = load double*, double** %11, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %15, double* %24, double* %25)
  %26 = load double, double* %15, align 8
  %27 = fmul double %26, -2.000000e+00
  store double %27, double* %15, align 8
  %28 = getelementptr inbounds [3 x double], [3 x double]* %17, i32 0, i32 0
  %29 = load double*, double** %10, align 8
  %30 = load double, double* %15, align 8
  %31 = load double*, double** %11, align 8
  call void @_ZN3pov9VLinComb2EPddPKddS2_(double* %28, double 1.000000e+00, double* %29, double %30, double* %31)
  %32 = getelementptr inbounds [3 x double], [3 x double]* %17, i32 0, i32 0
  %33 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %34 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %33, i32 0, i32 1
  %35 = getelementptr inbounds [3 x double], [3 x double]* %34, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %15, double* %32, double* %35)
  %36 = load double, double* %15, align 8
  %37 = fcmp ogt double %36, 0.000000e+00
  br i1 %37, label %38, label %251

; <label>:38:                                     ; preds = %7
  %39 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %40 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %39, i32 0, i32 5
  %41 = load float, float* %40, align 4
  %42 = fcmp olt float %41, 6.000000e+01
  br i1 %42, label %46, label %43

; <label>:43:                                     ; preds = %38
  %44 = load double, double* %15, align 8
  %45 = fcmp ogt double %44, 8.000000e-04
  br i1 %45, label %46, label %58

; <label>:46:                                     ; preds = %43, %38
  %47 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %48 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %47, i32 0, i32 4
  %49 = load float, float* %48, align 4
  %50 = fpext float %49 to double
  %51 = load double, double* %15, align 8
  %52 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %53 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %52, i32 0, i32 5
  %54 = load float, float* %53, align 4
  %55 = fpext float %54 to double
  %56 = call double @pow(double %51, double %55) #7
  %57 = fmul double %50, %56
  store double %57, double* %16, align 8
  br label %75

; <label>:58:                                     ; preds = %43
  %59 = load i32, i32* @x.41
  %60 = load i32, i32* @y.42
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %58
  store double 0.000000e+00, double* %16, align 8
  %67 = load i32, i32* @x.41
  %68 = load i32, i32* @y.42
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %75

; <label>:75:                                     ; preds = %originalBBpart2, %46
  %76 = load i32, i32* @x.41
  %77 = load i32, i32* @y.42
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %75
  %84 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %85 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %84, i32 0, i32 15
  %86 = load float, float* %85, align 4
  %87 = fpext float %86 to double
  %88 = fcmp ogt double %87, 0.000000e+00
  %89 = load i32, i32* @x.41
  %90 = load i32, i32* @y.42
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %88, label %97, label %181

; <label>:97:                                     ; preds = %originalBBpart24
  %98 = load double*, double** %11, align 8
  %99 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %100 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %99, i32 0, i32 1
  %101 = getelementptr inbounds [3 x double], [3 x double]* %100, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %18, double* %98, double* %101)
  %102 = load double, double* %18, align 8
  %103 = call double @acos(double %102) #7
  %104 = call double @fabs(double %103) #5
  %105 = fdiv double %104, 0x3FF921FB54442D18
  store double %105, double* %19, align 8
  %106 = load double, double* %19, align 8
  %107 = fsub double %106, 1.120000e+00
  %108 = call double @_ZN3pov3SqrEd(double %107)
  %109 = fdiv double 0x3F8DD56BD7BF6F16, %108
  %110 = fsub double %109, 0x3F87C88174C5E0DC
  store double %110, double* %20, align 8
  store double 1.000000e+00, double* %22, align 8
  store double 0.000000e+00, double* %23, align 8
  %111 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %23, double* dereferenceable(8) %20)
  %112 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %22, double* dereferenceable(8) %111)
  %113 = load double, double* %112, align 8
  store double %113, double* %20, align 8
  %114 = load float*, float** %13, align 8
  %115 = getelementptr inbounds float, float* %114, i64 0
  %116 = load float, float* %115, align 4
  %117 = fpext float %116 to double
  %118 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %119 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %118, i32 0, i32 15
  %120 = load float, float* %119, align 4
  %121 = fpext float %120 to double
  %122 = load double, double* %20, align 8
  %123 = fsub double 1.000000e+00, %122
  %124 = fmul double %121, %123
  %125 = load float*, float** %14, align 8
  %126 = getelementptr inbounds float, float* %125, i64 0
  %127 = load float, float* %126, align 4
  %128 = fpext float %127 to double
  %129 = fsub double %128, 1.000000e+00
  %130 = fmul double %124, %129
  %131 = fadd double 1.000000e+00, %130
  %132 = fmul double %117, %131
  %133 = fptrunc double %132 to float
  %134 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 0
  store float %133, float* %134, align 16
  %135 = load float*, float** %13, align 8
  %136 = getelementptr inbounds float, float* %135, i64 1
  %137 = load float, float* %136, align 4
  %138 = fpext float %137 to double
  %139 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %140 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %139, i32 0, i32 15
  %141 = load float, float* %140, align 4
  %142 = fpext float %141 to double
  %143 = load double, double* %20, align 8
  %144 = fsub double 1.000000e+00, %143
  %145 = fmul double %142, %144
  %146 = load float*, float** %14, align 8
  %147 = getelementptr inbounds float, float* %146, i64 1
  %148 = load float, float* %147, align 4
  %149 = fpext float %148 to double
  %150 = fsub double %149, 1.000000e+00
  %151 = fmul double %145, %150
  %152 = fadd double 1.000000e+00, %151
  %153 = fmul double %138, %152
  %154 = fptrunc double %153 to float
  %155 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 1
  store float %154, float* %155, align 4
  %156 = load float*, float** %13, align 8
  %157 = getelementptr inbounds float, float* %156, i64 2
  %158 = load float, float* %157, align 4
  %159 = fpext float %158 to double
  %160 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %161 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %160, i32 0, i32 15
  %162 = load float, float* %161, align 4
  %163 = fpext float %162 to double
  %164 = load double, double* %20, align 8
  %165 = fsub double 1.000000e+00, %164
  %166 = fmul double %163, %165
  %167 = load float*, float** %14, align 8
  %168 = getelementptr inbounds float, float* %167, i64 2
  %169 = load float, float* %168, align 4
  %170 = fpext float %169 to double
  %171 = fsub double %170, 1.000000e+00
  %172 = fmul double %166, %171
  %173 = fadd double 1.000000e+00, %172
  %174 = fmul double %159, %173
  %175 = fptrunc double %174 to float
  %176 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 2
  store float %175, float* %176, align 8
  %177 = load float*, float** %12, align 8
  %178 = load double, double* %16, align 8
  %179 = fptrunc double %178 to float
  %180 = getelementptr inbounds [5 x float], [5 x float]* %21, i32 0, i32 0
  call void @_ZN3pov15CRGBAddScaledEqEPffPKf(float* %177, float %179, float* %180)
  br label %234

; <label>:181:                                    ; preds = %originalBBpart24
  %182 = load i32, i32* @x.41
  %183 = load i32, i32* @y.42
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %181
  %190 = load double, double* %16, align 8
  %191 = load float*, float** %13, align 8
  %192 = getelementptr inbounds float, float* %191, i64 0
  %193 = load float, float* %192, align 4
  %194 = fpext float %193 to double
  %195 = fmul double %190, %194
  %196 = load float*, float** %12, align 8
  %197 = getelementptr inbounds float, float* %196, i64 0
  %198 = load float, float* %197, align 4
  %199 = fpext float %198 to double
  %200 = fadd double %199, %195
  %201 = fptrunc double %200 to float
  store float %201, float* %197, align 4
  %202 = load double, double* %16, align 8
  %203 = load float*, float** %13, align 8
  %204 = getelementptr inbounds float, float* %203, i64 1
  %205 = load float, float* %204, align 4
  %206 = fpext float %205 to double
  %207 = fmul double %202, %206
  %208 = load float*, float** %12, align 8
  %209 = getelementptr inbounds float, float* %208, i64 1
  %210 = load float, float* %209, align 4
  %211 = fpext float %210 to double
  %212 = fadd double %211, %207
  %213 = fptrunc double %212 to float
  store float %213, float* %209, align 4
  %214 = load double, double* %16, align 8
  %215 = load float*, float** %13, align 8
  %216 = getelementptr inbounds float, float* %215, i64 2
  %217 = load float, float* %216, align 4
  %218 = fpext float %217 to double
  %219 = fmul double %214, %218
  %220 = load float*, float** %12, align 8
  %221 = getelementptr inbounds float, float* %220, i64 2
  %222 = load float, float* %221, align 4
  %223 = fpext float %222 to double
  %224 = fadd double %223, %219
  %225 = fptrunc double %224 to float
  store float %225, float* %221, align 4
  %226 = load i32, i32* @x.41
  %227 = load i32, i32* @y.42
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart238, label %originalBB6alteredBB

originalBBpart238:                                ; preds = %originalBB6
  br label %234

; <label>:234:                                    ; preds = %originalBBpart238, %97
  %235 = load i32, i32* @x.41
  %236 = load i32, i32* @y.42
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %234
  %243 = load i32, i32* @x.41
  %244 = load i32, i32* @y.42
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %251

; <label>:251:                                    ; preds = %originalBBpart242, %7
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %58
  store double 0.000000e+00, double* %16, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %75
  %252 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %253 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %252, i32 0, i32 15
  %254 = load float, float* %253, align 4
  %255 = fpext float %254 to double
  %256 = fcmp ogt double %255, 0.000000e+00
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %181
  %257 = load double, double* %16, align 8
  %258 = load float*, float** %13, align 8
  %259 = getelementptr inbounds float, float* %258, i64 0
  %260 = load float, float* %259, align 4
  %261 = fpext float %260 to double
  %_ = fsub double -0.000000e+00, %257
  %gen = fadd double %_, %261
  %262 = fmul double %257, %261
  %263 = load float*, float** %12, align 8
  %264 = getelementptr inbounds float, float* %263, i64 0
  %265 = load float, float* %264, align 4
  %266 = fpext float %265 to double
  %267 = fadd double %266, %262
  %268 = fptrunc double %267 to float
  store float %268, float* %264, align 4
  %269 = load double, double* %16, align 8
  %270 = load float*, float** %13, align 8
  %271 = getelementptr inbounds float, float* %270, i64 1
  %272 = load float, float* %271, align 4
  %273 = fpext float %272 to double
  %_7 = fsub double -0.000000e+00, %269
  %gen8 = fadd double %_7, %273
  %_9 = fsub double %269, %273
  %gen10 = fmul double %_9, %273
  %274 = fmul double %269, %273
  %275 = load float*, float** %12, align 8
  %276 = getelementptr inbounds float, float* %275, i64 1
  %277 = load float, float* %276, align 4
  %278 = fpext float %277 to double
  %_11 = fsub double %278, %274
  %gen12 = fmul double %_11, %274
  %_13 = fsub double %278, %274
  %gen14 = fmul double %_13, %274
  %_15 = fsub double %278, %274
  %gen16 = fmul double %_15, %274
  %_17 = fsub double %278, %274
  %gen18 = fmul double %_17, %274
  %_19 = fsub double -0.000000e+00, %278
  %gen20 = fadd double %_19, %274
  %279 = fadd double %278, %274
  %280 = fptrunc double %279 to float
  store float %280, float* %276, align 4
  %281 = load double, double* %16, align 8
  %282 = load float*, float** %13, align 8
  %283 = getelementptr inbounds float, float* %282, i64 2
  %284 = load float, float* %283, align 4
  %285 = fpext float %284 to double
  %_21 = fsub double %281, %285
  %gen22 = fmul double %_21, %285
  %286 = fmul double %281, %285
  %287 = load float*, float** %12, align 8
  %288 = getelementptr inbounds float, float* %287, i64 2
  %289 = load float, float* %288, align 4
  %290 = fpext float %289 to double
  %_23 = fsub double -0.000000e+00, %290
  %gen24 = fadd double %_23, %286
  %_25 = fsub double %290, %286
  %gen26 = fmul double %_25, %286
  %_27 = fsub double -0.000000e+00, %290
  %gen28 = fadd double %_27, %286
  %_29 = fsub double %290, %286
  %gen30 = fmul double %_29, %286
  %_31 = fsub double %290, %286
  %gen32 = fmul double %_31, %286
  %_33 = fsub double %290, %286
  %gen34 = fmul double %_33, %286
  %_35 = fsub double -0.000000e+00, %290
  %gen36 = fadd double %_35, %286
  %291 = fadd double %290, %286
  %292 = fptrunc double %291 to float
  store float %292, float* %288, align 4
  br label %originalBB6

originalBB40alteredBB:                            ; preds = %originalBB40, %234
  br label %originalBB40
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov9VLinComb2EPddPKddS2_(double*, double, double*, double, double*) #1 comdat {
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  %8 = alloca double*, align 8
  %9 = alloca double, align 8
  %10 = alloca double*, align 8
  store double* %0, double** %6, align 8
  store double %1, double* %7, align 8
  store double* %2, double** %8, align 8
  store double %3, double* %9, align 8
  store double* %4, double** %10, align 8
  %11 = load double, double* %7, align 8
  %12 = load double*, double** %8, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  %14 = load double, double* %13, align 8
  %15 = fmul double %11, %14
  %16 = load double, double* %9, align 8
  %17 = load double*, double** %10, align 8
  %18 = getelementptr inbounds double, double* %17, i64 0
  %19 = load double, double* %18, align 8
  %20 = fmul double %16, %19
  %21 = fadd double %15, %20
  %22 = load double*, double** %6, align 8
  %23 = getelementptr inbounds double, double* %22, i64 0
  store double %21, double* %23, align 8
  %24 = load double, double* %7, align 8
  %25 = load double*, double** %8, align 8
  %26 = getelementptr inbounds double, double* %25, i64 1
  %27 = load double, double* %26, align 8
  %28 = fmul double %24, %27
  %29 = load double, double* %9, align 8
  %30 = load double*, double** %10, align 8
  %31 = getelementptr inbounds double, double* %30, i64 1
  %32 = load double, double* %31, align 8
  %33 = fmul double %29, %32
  %34 = fadd double %28, %33
  %35 = load double*, double** %6, align 8
  %36 = getelementptr inbounds double, double* %35, i64 1
  store double %34, double* %36, align 8
  %37 = load double, double* %7, align 8
  %38 = load double*, double** %8, align 8
  %39 = getelementptr inbounds double, double* %38, i64 2
  %40 = load double, double* %39, align 8
  %41 = fmul double %37, %40
  %42 = load double, double* %9, align 8
  %43 = load double*, double** %10, align 8
  %44 = getelementptr inbounds double, double* %43, i64 2
  %45 = load double, double* %44, align 8
  %46 = fmul double %42, %45
  %47 = fadd double %41, %46
  %48 = load double*, double** %6, align 8
  %49 = getelementptr inbounds double, double* %48, i64 2
  store double %47, double* %49, align 8
  ret void
}

; Function Attrs: nounwind
declare double @acos(double) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZN3pov3SqrEd(double) #1 comdat {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca double, align 8
  store double %0, double* %10, align 8
  %11 = load double, double* %10, align 8
  %12 = load double, double* %10, align 8
  %13 = fmul double %11, %12
  %14 = load i32, i32* @x.45
  %15 = load i32, i32* @y.46
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca double, align 8
  store double %0, double* %22, align 8
  %23 = load double, double* %22, align 8
  %24 = load double, double* %22, align 8
  %_ = fsub double -0.000000e+00, %23
  %gen = fadd double %_, %24
  %_1 = fsub double -0.000000e+00, %23
  %gen2 = fadd double %_1, %24
  %25 = fmul double %23, %24
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8), double* dereferenceable(8)) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  %6 = load double*, double** %5, align 8
  %7 = load double, double* %6, align 8
  %8 = load double*, double** %4, align 8
  %9 = load double, double* %8, align 8
  %10 = fcmp olt double %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load double*, double** %5, align 8
  store double* %12, double** %3, align 8
  br label %31

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.47
  %15 = load i32, i32* @y.48
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load double*, double** %4, align 8
  store double* %22, double** %3, align 8
  %23 = load i32, i32* @x.47
  %24 = load i32, i32* @y.48
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %11
  %32 = load double*, double** %3, align 8
  ret double* %32

originalBBalteredBB:                              ; preds = %originalBB, %13
  %33 = load double*, double** %4, align 8
  store double* %33, double** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8), double* dereferenceable(8)) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  %6 = load double*, double** %4, align 8
  %7 = load double, double* %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double, double* %8, align 8
  %10 = fcmp olt double %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load double*, double** %5, align 8
  store double* %12, double** %3, align 8
  br label %15

; <label>:13:                                     ; preds = %2
  %14 = load double*, double** %4, align 8
  store double* %14, double** %3, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %11
  %16 = load double*, double** %3, align 8
  ret double* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov15CRGBAddScaledEqEPffPKf(float*, float, float*) #1 comdat {
  %4 = load i32, i32* @x.51
  %5 = load i32, i32* @y.52
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca float*, align 8
  %13 = alloca float, align 4
  %14 = alloca float*, align 8
  store float* %0, float** %12, align 8
  store float %1, float* %13, align 4
  store float* %2, float** %14, align 8
  %15 = load float, float* %13, align 4
  %16 = load float*, float** %14, align 8
  %17 = getelementptr inbounds float, float* %16, i64 0
  %18 = load float, float* %17, align 4
  %19 = fmul float %15, %18
  %20 = load float*, float** %12, align 8
  %21 = getelementptr inbounds float, float* %20, i64 0
  %22 = load float, float* %21, align 4
  %23 = fadd float %22, %19
  store float %23, float* %21, align 4
  %24 = load float, float* %13, align 4
  %25 = load float*, float** %14, align 8
  %26 = getelementptr inbounds float, float* %25, i64 1
  %27 = load float, float* %26, align 4
  %28 = fmul float %24, %27
  %29 = load float*, float** %12, align 8
  %30 = getelementptr inbounds float, float* %29, i64 1
  %31 = load float, float* %30, align 4
  %32 = fadd float %31, %28
  store float %32, float* %30, align 4
  %33 = load float, float* %13, align 4
  %34 = load float*, float** %14, align 8
  %35 = getelementptr inbounds float, float* %34, i64 2
  %36 = load float, float* %35, align 4
  %37 = fmul float %33, %36
  %38 = load float*, float** %12, align 8
  %39 = getelementptr inbounds float, float* %38, i64 2
  %40 = load float, float* %39, align 4
  %41 = fadd float %40, %37
  store float %41, float* %39, align 4
  %42 = load i32, i32* @x.51
  %43 = load i32, i32* @y.52
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %50 = alloca float*, align 8
  %51 = alloca float, align 4
  %52 = alloca float*, align 8
  store float* %0, float** %50, align 8
  store float %1, float* %51, align 4
  store float* %2, float** %52, align 8
  %53 = load float, float* %51, align 4
  %54 = load float*, float** %52, align 8
  %55 = getelementptr inbounds float, float* %54, i64 0
  %56 = load float, float* %55, align 4
  %_ = fsub float -0.000000e+00, %53
  %gen = fadd float %_, %56
  %_1 = fsub float %53, %56
  %gen2 = fmul float %_1, %56
  %_3 = fsub float %53, %56
  %gen4 = fmul float %_3, %56
  %_5 = fsub float %53, %56
  %gen6 = fmul float %_5, %56
  %_7 = fsub float %53, %56
  %gen8 = fmul float %_7, %56
  %_9 = fsub float %53, %56
  %gen10 = fmul float %_9, %56
  %_11 = fsub float -0.000000e+00, %53
  %gen12 = fadd float %_11, %56
  %57 = fmul float %53, %56
  %58 = load float*, float** %50, align 8
  %59 = getelementptr inbounds float, float* %58, i64 0
  %60 = load float, float* %59, align 4
  %_13 = fsub float -0.000000e+00, %60
  %gen14 = fadd float %_13, %57
  %_15 = fsub float %60, %57
  %gen16 = fmul float %_15, %57
  %_17 = fsub float %60, %57
  %gen18 = fmul float %_17, %57
  %61 = fadd float %60, %57
  store float %61, float* %59, align 4
  %62 = load float, float* %51, align 4
  %63 = load float*, float** %52, align 8
  %64 = getelementptr inbounds float, float* %63, i64 1
  %65 = load float, float* %64, align 4
  %_19 = fsub float %62, %65
  %gen20 = fmul float %_19, %65
  %_21 = fsub float -0.000000e+00, %62
  %gen22 = fadd float %_21, %65
  %_23 = fsub float -0.000000e+00, %62
  %gen24 = fadd float %_23, %65
  %66 = fmul float %62, %65
  %67 = load float*, float** %50, align 8
  %68 = getelementptr inbounds float, float* %67, i64 1
  %69 = load float, float* %68, align 4
  %_25 = fsub float %69, %66
  %gen26 = fmul float %_25, %66
  %_27 = fsub float %69, %66
  %gen28 = fmul float %_27, %66
  %_29 = fsub float -0.000000e+00, %69
  %gen30 = fadd float %_29, %66
  %70 = fadd float %69, %66
  store float %70, float* %68, align 4
  %71 = load float, float* %51, align 4
  %72 = load float*, float** %52, align 8
  %73 = getelementptr inbounds float, float* %72, i64 2
  %74 = load float, float* %73, align 4
  %_31 = fsub float %71, %74
  %gen32 = fmul float %_31, %74
  %75 = fmul float %71, %74
  %76 = load float*, float** %50, align 8
  %77 = getelementptr inbounds float, float* %76, i64 2
  %78 = load float, float* %77, align 4
  %_33 = fsub float -0.000000e+00, %78
  %gen34 = fadd float %_33, %75
  %_35 = fsub float %78, %75
  %gen36 = fmul float %_35, %75
  %_37 = fsub float %78, %75
  %gen38 = fmul float %_37, %75
  %79 = fadd float %78, %75
  store float %79, float* %77, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define void @_ZN3pov11do_specularEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_PfS5_S5_(%"struct.pov::Finish_Struct"*, %"struct.pov::Ray_Struct"*, double*, double*, float*, float*, float*) #0 {
  %8 = alloca %"struct.pov::Finish_Struct"*, align 8
  %9 = alloca %"struct.pov::Ray_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca float*, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca [3 x double], align 16
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca [5 x float], align 16
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  store %"struct.pov::Finish_Struct"* %0, %"struct.pov::Finish_Struct"** %8, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %9, align 8
  store double* %2, double** %10, align 8
  store double* %3, double** %11, align 8
  store float* %4, float** %12, align 8
  store float* %5, float** %13, align 8
  store float* %6, float** %14, align 8
  %25 = getelementptr inbounds [3 x double], [3 x double]* %18, i32 0, i32 0
  %26 = load double*, double** %10, align 8
  %27 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %28 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %27, i32 0, i32 1
  %29 = getelementptr inbounds [3 x double], [3 x double]* %28, i32 0, i32 0
  call void @_ZN3pov5VHalfEPdPKdS2_(double* %25, double* %26, double* %29)
  %30 = getelementptr inbounds [3 x double], [3 x double]* %18, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %17, double* %30)
  %31 = load double, double* %17, align 8
  %32 = fcmp ogt double %31, 0.000000e+00
  br i1 %32, label %33, label %229

; <label>:33:                                     ; preds = %7
  %34 = getelementptr inbounds [3 x double], [3 x double]* %18, i32 0, i32 0
  %35 = load double*, double** %11, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %15, double* %34, double* %35)
  %36 = load double, double* %17, align 8
  %37 = load double, double* %15, align 8
  %38 = fdiv double %37, %36
  store double %38, double* %15, align 8
  %39 = load double, double* %15, align 8
  %40 = fcmp ogt double %39, 0.000000e+00
  br i1 %40, label %41, label %228

; <label>:41:                                     ; preds = %33
  %42 = load i32, i32* @x.53
  %43 = load i32, i32* @y.54
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %41
  %50 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %51 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %50, i32 0, i32 2
  %52 = load float, float* %51, align 4
  %53 = fpext float %52 to double
  %54 = load double, double* %15, align 8
  %55 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %56 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %55, i32 0, i32 3
  %57 = load float, float* %56, align 4
  %58 = fpext float %57 to double
  %59 = call double @pow(double %54, double %58) #7
  %60 = fmul double %53, %59
  store double %60, double* %16, align 8
  %61 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %62 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %61, i32 0, i32 15
  %63 = load float, float* %62, align 4
  %64 = fpext float %63 to double
  %65 = fcmp ogt double %64, 0.000000e+00
  %66 = load i32, i32* @x.53
  %67 = load i32, i32* @y.54
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %65, label %74, label %158

; <label>:74:                                     ; preds = %originalBBpart2
  %75 = load double*, double** %11, align 8
  %76 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %9, align 8
  %77 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %76, i32 0, i32 1
  %78 = getelementptr inbounds [3 x double], [3 x double]* %77, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %19, double* %75, double* %78)
  %79 = load double, double* %19, align 8
  %80 = call double @acos(double %79) #7
  %81 = call double @fabs(double %80) #5
  %82 = fdiv double %81, 0x3FF921FB54442D18
  store double %82, double* %20, align 8
  %83 = load double, double* %20, align 8
  %84 = fsub double %83, 1.120000e+00
  %85 = call double @_ZN3pov3SqrEd(double %84)
  %86 = fdiv double 0x3F8DD56BD7BF6F16, %85
  %87 = fsub double %86, 0x3F87C88174C5E0DC
  store double %87, double* %21, align 8
  store double 1.000000e+00, double* %23, align 8
  store double 0.000000e+00, double* %24, align 8
  %88 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %24, double* dereferenceable(8) %21)
  %89 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %23, double* dereferenceable(8) %88)
  %90 = load double, double* %89, align 8
  store double %90, double* %21, align 8
  %91 = load float*, float** %13, align 8
  %92 = getelementptr inbounds float, float* %91, i64 0
  %93 = load float, float* %92, align 4
  %94 = fpext float %93 to double
  %95 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %96 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %95, i32 0, i32 15
  %97 = load float, float* %96, align 4
  %98 = fpext float %97 to double
  %99 = load double, double* %21, align 8
  %100 = fsub double 1.000000e+00, %99
  %101 = fmul double %98, %100
  %102 = load float*, float** %14, align 8
  %103 = getelementptr inbounds float, float* %102, i64 0
  %104 = load float, float* %103, align 4
  %105 = fpext float %104 to double
  %106 = fsub double %105, 1.000000e+00
  %107 = fmul double %101, %106
  %108 = fadd double 1.000000e+00, %107
  %109 = fmul double %94, %108
  %110 = fptrunc double %109 to float
  %111 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 0
  store float %110, float* %111, align 16
  %112 = load float*, float** %13, align 8
  %113 = getelementptr inbounds float, float* %112, i64 1
  %114 = load float, float* %113, align 4
  %115 = fpext float %114 to double
  %116 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %117 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %116, i32 0, i32 15
  %118 = load float, float* %117, align 4
  %119 = fpext float %118 to double
  %120 = load double, double* %21, align 8
  %121 = fsub double 1.000000e+00, %120
  %122 = fmul double %119, %121
  %123 = load float*, float** %14, align 8
  %124 = getelementptr inbounds float, float* %123, i64 1
  %125 = load float, float* %124, align 4
  %126 = fpext float %125 to double
  %127 = fsub double %126, 1.000000e+00
  %128 = fmul double %122, %127
  %129 = fadd double 1.000000e+00, %128
  %130 = fmul double %115, %129
  %131 = fptrunc double %130 to float
  %132 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 1
  store float %131, float* %132, align 4
  %133 = load float*, float** %13, align 8
  %134 = getelementptr inbounds float, float* %133, i64 2
  %135 = load float, float* %134, align 4
  %136 = fpext float %135 to double
  %137 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %138 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %137, i32 0, i32 15
  %139 = load float, float* %138, align 4
  %140 = fpext float %139 to double
  %141 = load double, double* %21, align 8
  %142 = fsub double 1.000000e+00, %141
  %143 = fmul double %140, %142
  %144 = load float*, float** %14, align 8
  %145 = getelementptr inbounds float, float* %144, i64 2
  %146 = load float, float* %145, align 4
  %147 = fpext float %146 to double
  %148 = fsub double %147, 1.000000e+00
  %149 = fmul double %143, %148
  %150 = fadd double 1.000000e+00, %149
  %151 = fmul double %136, %150
  %152 = fptrunc double %151 to float
  %153 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 2
  store float %152, float* %153, align 8
  %154 = load float*, float** %12, align 8
  %155 = load double, double* %16, align 8
  %156 = fptrunc double %155 to float
  %157 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  call void @_ZN3pov15CRGBAddScaledEqEPffPKf(float* %154, float %156, float* %157)
  br label %211

; <label>:158:                                    ; preds = %originalBBpart2
  %159 = load i32, i32* @x.53
  %160 = load i32, i32* @y.54
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %158
  %167 = load double, double* %16, align 8
  %168 = load float*, float** %13, align 8
  %169 = getelementptr inbounds float, float* %168, i64 0
  %170 = load float, float* %169, align 4
  %171 = fpext float %170 to double
  %172 = fmul double %167, %171
  %173 = load float*, float** %12, align 8
  %174 = getelementptr inbounds float, float* %173, i64 0
  %175 = load float, float* %174, align 4
  %176 = fpext float %175 to double
  %177 = fadd double %176, %172
  %178 = fptrunc double %177 to float
  store float %178, float* %174, align 4
  %179 = load double, double* %16, align 8
  %180 = load float*, float** %13, align 8
  %181 = getelementptr inbounds float, float* %180, i64 1
  %182 = load float, float* %181, align 4
  %183 = fpext float %182 to double
  %184 = fmul double %179, %183
  %185 = load float*, float** %12, align 8
  %186 = getelementptr inbounds float, float* %185, i64 1
  %187 = load float, float* %186, align 4
  %188 = fpext float %187 to double
  %189 = fadd double %188, %184
  %190 = fptrunc double %189 to float
  store float %190, float* %186, align 4
  %191 = load double, double* %16, align 8
  %192 = load float*, float** %13, align 8
  %193 = getelementptr inbounds float, float* %192, i64 2
  %194 = load float, float* %193, align 4
  %195 = fpext float %194 to double
  %196 = fmul double %191, %195
  %197 = load float*, float** %12, align 8
  %198 = getelementptr inbounds float, float* %197, i64 2
  %199 = load float, float* %198, align 4
  %200 = fpext float %199 to double
  %201 = fadd double %200, %196
  %202 = fptrunc double %201 to float
  store float %202, float* %198, align 4
  %203 = load i32, i32* @x.53
  %204 = load i32, i32* @y.54
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart255, label %originalBB1alteredBB

originalBBpart255:                                ; preds = %originalBB1
  br label %211

; <label>:211:                                    ; preds = %originalBBpart255, %74
  %212 = load i32, i32* @x.53
  %213 = load i32, i32* @y.54
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %211
  %220 = load i32, i32* @x.53
  %221 = load i32, i32* @y.54
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %228

; <label>:228:                                    ; preds = %originalBBpart259, %33
  br label %229

; <label>:229:                                    ; preds = %228, %7
  %230 = load i32, i32* @x.53
  %231 = load i32, i32* @y.54
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %229
  %238 = load i32, i32* @x.53
  %239 = load i32, i32* @y.54
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %41
  %246 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %247 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %246, i32 0, i32 2
  %248 = load float, float* %247, align 4
  %249 = fpext float %248 to double
  %250 = load double, double* %15, align 8
  %251 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %252 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %251, i32 0, i32 3
  %253 = load float, float* %252, align 4
  %254 = fpext float %253 to double
  %255 = call double @pow(double %250, double %254) #7
  %_ = fsub double %249, %255
  %gen = fmul double %_, %255
  %256 = fmul double %249, %255
  store double %256, double* %16, align 8
  %257 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %8, align 8
  %258 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %257, i32 0, i32 15
  %259 = load float, float* %258, align 4
  %260 = fpext float %259 to double
  %261 = fcmp ogt double %260, 0.000000e+00
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %158
  %262 = load double, double* %16, align 8
  %263 = load float*, float** %13, align 8
  %264 = getelementptr inbounds float, float* %263, i64 0
  %265 = load float, float* %264, align 4
  %266 = fpext float %265 to double
  %_2 = fsub double %262, %266
  %gen3 = fmul double %_2, %266
  %_4 = fsub double %262, %266
  %gen5 = fmul double %_4, %266
  %_6 = fsub double %262, %266
  %gen7 = fmul double %_6, %266
  %_8 = fsub double %262, %266
  %gen9 = fmul double %_8, %266
  %_10 = fsub double %262, %266
  %gen11 = fmul double %_10, %266
  %_12 = fsub double %262, %266
  %gen13 = fmul double %_12, %266
  %_14 = fsub double %262, %266
  %gen15 = fmul double %_14, %266
  %267 = fmul double %262, %266
  %268 = load float*, float** %12, align 8
  %269 = getelementptr inbounds float, float* %268, i64 0
  %270 = load float, float* %269, align 4
  %271 = fpext float %270 to double
  %_16 = fsub double -0.000000e+00, %271
  %gen17 = fadd double %_16, %267
  %_18 = fsub double -0.000000e+00, %271
  %gen19 = fadd double %_18, %267
  %272 = fadd double %271, %267
  %273 = fptrunc double %272 to float
  store float %273, float* %269, align 4
  %274 = load double, double* %16, align 8
  %275 = load float*, float** %13, align 8
  %276 = getelementptr inbounds float, float* %275, i64 1
  %277 = load float, float* %276, align 4
  %278 = fpext float %277 to double
  %_20 = fsub double %274, %278
  %gen21 = fmul double %_20, %278
  %_22 = fsub double -0.000000e+00, %274
  %gen23 = fadd double %_22, %278
  %_24 = fsub double %274, %278
  %gen25 = fmul double %_24, %278
  %_26 = fsub double %274, %278
  %gen27 = fmul double %_26, %278
  %_28 = fsub double %274, %278
  %gen29 = fmul double %_28, %278
  %_30 = fsub double -0.000000e+00, %274
  %gen31 = fadd double %_30, %278
  %_32 = fsub double -0.000000e+00, %274
  %gen33 = fadd double %_32, %278
  %_34 = fsub double %274, %278
  %gen35 = fmul double %_34, %278
  %279 = fmul double %274, %278
  %280 = load float*, float** %12, align 8
  %281 = getelementptr inbounds float, float* %280, i64 1
  %282 = load float, float* %281, align 4
  %283 = fpext float %282 to double
  %_36 = fsub double -0.000000e+00, %283
  %gen37 = fadd double %_36, %279
  %_38 = fsub double -0.000000e+00, %283
  %gen39 = fadd double %_38, %279
  %_40 = fsub double %283, %279
  %gen41 = fmul double %_40, %279
  %_42 = fsub double -0.000000e+00, %283
  %gen43 = fadd double %_42, %279
  %_44 = fsub double -0.000000e+00, %283
  %gen45 = fadd double %_44, %279
  %284 = fadd double %283, %279
  %285 = fptrunc double %284 to float
  store float %285, float* %281, align 4
  %286 = load double, double* %16, align 8
  %287 = load float*, float** %13, align 8
  %288 = getelementptr inbounds float, float* %287, i64 2
  %289 = load float, float* %288, align 4
  %290 = fpext float %289 to double
  %_46 = fsub double -0.000000e+00, %286
  %gen47 = fadd double %_46, %290
  %_48 = fsub double %286, %290
  %gen49 = fmul double %_48, %290
  %_50 = fsub double %286, %290
  %gen51 = fmul double %_50, %290
  %291 = fmul double %286, %290
  %292 = load float*, float** %12, align 8
  %293 = getelementptr inbounds float, float* %292, i64 2
  %294 = load float, float* %293, align 4
  %295 = fpext float %294 to double
  %_52 = fsub double %295, %291
  %gen53 = fmul double %_52, %291
  %296 = fadd double %295, %291
  %297 = fptrunc double %296 to float
  store float %297, float* %293, align 4
  br label %originalBB1

originalBB57alteredBB:                            ; preds = %originalBB57, %211
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %229
  br label %originalBB61
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov5VHalfEPdPKdS2_(double*, double*, double*) #1 comdat {
  %4 = load i32, i32* @x.55
  %5 = load i32, i32* @y.56
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %13, align 8
  %16 = getelementptr inbounds double, double* %15, i64 0
  %17 = load double, double* %16, align 8
  %18 = load double*, double** %14, align 8
  %19 = getelementptr inbounds double, double* %18, i64 0
  %20 = load double, double* %19, align 8
  %21 = fadd double %17, %20
  %22 = fmul double 5.000000e-01, %21
  %23 = load double*, double** %12, align 8
  %24 = getelementptr inbounds double, double* %23, i64 0
  store double %22, double* %24, align 8
  %25 = load double*, double** %13, align 8
  %26 = getelementptr inbounds double, double* %25, i64 1
  %27 = load double, double* %26, align 8
  %28 = load double*, double** %14, align 8
  %29 = getelementptr inbounds double, double* %28, i64 1
  %30 = load double, double* %29, align 8
  %31 = fadd double %27, %30
  %32 = fmul double 5.000000e-01, %31
  %33 = load double*, double** %12, align 8
  %34 = getelementptr inbounds double, double* %33, i64 1
  store double %32, double* %34, align 8
  %35 = load double*, double** %13, align 8
  %36 = getelementptr inbounds double, double* %35, i64 2
  %37 = load double, double* %36, align 8
  %38 = load double*, double** %14, align 8
  %39 = getelementptr inbounds double, double* %38, i64 2
  %40 = load double, double* %39, align 8
  %41 = fadd double %37, %40
  %42 = fmul double 5.000000e-01, %41
  %43 = load double*, double** %12, align 8
  %44 = getelementptr inbounds double, double* %43, i64 2
  store double %42, double* %44, align 8
  %45 = load i32, i32* @x.55
  %46 = load i32, i32* @y.56
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %53 = alloca double*, align 8
  %54 = alloca double*, align 8
  %55 = alloca double*, align 8
  store double* %0, double** %53, align 8
  store double* %1, double** %54, align 8
  store double* %2, double** %55, align 8
  %56 = load double*, double** %54, align 8
  %57 = getelementptr inbounds double, double* %56, i64 0
  %58 = load double, double* %57, align 8
  %59 = load double*, double** %55, align 8
  %60 = getelementptr inbounds double, double* %59, i64 0
  %61 = load double, double* %60, align 8
  %_ = fsub double %58, %61
  %gen = fmul double %_, %61
  %_1 = fsub double -0.000000e+00, %58
  %gen2 = fadd double %_1, %61
  %_3 = fsub double -0.000000e+00, %58
  %gen4 = fadd double %_3, %61
  %_5 = fsub double -0.000000e+00, %58
  %gen6 = fadd double %_5, %61
  %62 = fadd double %58, %61
  %_7 = fsub double -0.000000e+00, 5.000000e-01
  %gen8 = fadd double %_7, %62
  %_9 = fsub double 5.000000e-01, %62
  %gen10 = fmul double %_9, %62
  %_11 = fsub double -0.000000e+00, 5.000000e-01
  %gen12 = fadd double %_11, %62
  %63 = fmul double 5.000000e-01, %62
  %64 = load double*, double** %53, align 8
  %65 = getelementptr inbounds double, double* %64, i64 0
  store double %63, double* %65, align 8
  %66 = load double*, double** %54, align 8
  %67 = getelementptr inbounds double, double* %66, i64 1
  %68 = load double, double* %67, align 8
  %69 = load double*, double** %55, align 8
  %70 = getelementptr inbounds double, double* %69, i64 1
  %71 = load double, double* %70, align 8
  %_13 = fsub double -0.000000e+00, %68
  %gen14 = fadd double %_13, %71
  %_15 = fsub double -0.000000e+00, %68
  %gen16 = fadd double %_15, %71
  %_17 = fsub double -0.000000e+00, %68
  %gen18 = fadd double %_17, %71
  %_19 = fsub double %68, %71
  %gen20 = fmul double %_19, %71
  %_21 = fsub double -0.000000e+00, %68
  %gen22 = fadd double %_21, %71
  %72 = fadd double %68, %71
  %_23 = fsub double 5.000000e-01, %72
  %gen24 = fmul double %_23, %72
  %_25 = fsub double -0.000000e+00, 5.000000e-01
  %gen26 = fadd double %_25, %72
  %_27 = fsub double 5.000000e-01, %72
  %gen28 = fmul double %_27, %72
  %_29 = fsub double 5.000000e-01, %72
  %gen30 = fmul double %_29, %72
  %_31 = fsub double 5.000000e-01, %72
  %gen32 = fmul double %_31, %72
  %_33 = fsub double 5.000000e-01, %72
  %gen34 = fmul double %_33, %72
  %_35 = fsub double -0.000000e+00, 5.000000e-01
  %gen36 = fadd double %_35, %72
  %73 = fmul double 5.000000e-01, %72
  %74 = load double*, double** %53, align 8
  %75 = getelementptr inbounds double, double* %74, i64 1
  store double %73, double* %75, align 8
  %76 = load double*, double** %54, align 8
  %77 = getelementptr inbounds double, double* %76, i64 2
  %78 = load double, double* %77, align 8
  %79 = load double*, double** %55, align 8
  %80 = getelementptr inbounds double, double* %79, i64 2
  %81 = load double, double* %80, align 8
  %_37 = fsub double %78, %81
  %gen38 = fmul double %_37, %81
  %_39 = fsub double -0.000000e+00, %78
  %gen40 = fadd double %_39, %81
  %_41 = fsub double -0.000000e+00, %78
  %gen42 = fadd double %_41, %81
  %_43 = fsub double -0.000000e+00, %78
  %gen44 = fadd double %_43, %81
  %82 = fadd double %78, %81
  %_45 = fsub double 5.000000e-01, %82
  %gen46 = fmul double %_45, %82
  %83 = fmul double 5.000000e-01, %82
  %84 = load double*, double** %53, align 8
  %85 = getelementptr inbounds double, double* %84, i64 2
  store double %83, double* %85, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8), double*) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds double, double* %5, i64 0
  %7 = load double, double* %6, align 8
  %8 = load double*, double** %4, align 8
  %9 = getelementptr inbounds double, double* %8, i64 0
  %10 = load double, double* %9, align 8
  %11 = fmul double %7, %10
  %12 = load double*, double** %4, align 8
  %13 = getelementptr inbounds double, double* %12, i64 1
  %14 = load double, double* %13, align 8
  %15 = load double*, double** %4, align 8
  %16 = getelementptr inbounds double, double* %15, i64 1
  %17 = load double, double* %16, align 8
  %18 = fmul double %14, %17
  %19 = fadd double %11, %18
  %20 = load double*, double** %4, align 8
  %21 = getelementptr inbounds double, double* %20, i64 2
  %22 = load double, double* %21, align 8
  %23 = load double*, double** %4, align 8
  %24 = getelementptr inbounds double, double* %23, i64 2
  %25 = load double, double* %24, align 8
  %26 = fmul double %22, %25
  %27 = fadd double %19, %26
  %28 = call double @sqrt(double %27) #7
  %29 = load double*, double** %3, align 8
  store double %28, double* %29, align 8
  ret void
}

; Function Attrs: noinline uwtable
define void @_ZN3pov22ResizeMediaMallocPoolsEl(i64) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i64 %0, i64* %2, align 8
  %5 = load i32, i32* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 3), align 8
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %1
  store i32 2, i32* %4, align 4
  br label %9

; <label>:9:                                      ; preds = %8, %1
  %10 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %11 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %12 = sub nsw i64 %11, %10
  store i64 %12, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %13 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %14 = bitcast i64* %13 to i8*
  %15 = load i64, i64* %2, align 8
  %16 = mul i64 %15, 8
  %17 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %14, i64 %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6144, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %18 = bitcast i8* %17 to i64*
  store i64* %18, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %19 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %20 = bitcast i64* %19 to i8*
  %21 = load i64, i64* %2, align 8
  %22 = mul i64 %21, 8
  %23 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %20, i64 %22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6145, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %24 = bitcast i8* %23 to i64*
  store i64* %24, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %25 = load i64*, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %26 = bitcast i64* %25 to i8*
  %27 = load i64, i64* %2, align 8
  %28 = mul i64 %27, 8
  %29 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %26, i64 %28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6146, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %30 = bitcast i8* %29 to i64*
  store i64* %30, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %31 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %32 = bitcast %"struct.pov::Media_Struct"*** %31 to i8*
  %33 = load i64, i64* %2, align 8
  %34 = mul i64 %33, 8
  %35 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %32, i64 %34, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6147, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %36 = bitcast i8* %35 to %"struct.pov::Media_Struct"***
  store %"struct.pov::Media_Struct"*** %36, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %37 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %38 = bitcast %"struct.pov::Media_Struct"*** %37 to i8*
  %39 = load i64, i64* %2, align 8
  %40 = mul i64 %39, 8
  %41 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %38, i64 %40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6148, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %42 = bitcast i8* %41 to %"struct.pov::Media_Struct"***
  store %"struct.pov::Media_Struct"*** %42, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %43 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %44 = bitcast %"struct.pov::Light_List_Struct"** %43 to i8*
  %45 = load i64, i64* %2, align 8
  %46 = mul i64 %45, 8
  %47 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %44, i64 %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6149, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0))
  %48 = bitcast i8* %47 to %"struct.pov::Light_List_Struct"**
  store %"struct.pov::Light_List_Struct"** %48, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %49 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %50 = bitcast %"struct.pov::Lit_Interval_Struct"** %49 to i8*
  %51 = load i64, i64* %2, align 8
  %52 = mul i64 %51, 8
  %53 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %50, i64 %52, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6150, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %54 = bitcast i8* %53 to %"struct.pov::Lit_Interval_Struct"**
  store %"struct.pov::Lit_Interval_Struct"** %54, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %55 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %56 = bitcast %"struct.pov::Media_Interval_Struct"** %55 to i8*
  %57 = load i64, i64* %2, align 8
  %58 = mul i64 %57, 8
  %59 = call i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8* %56, i64 %58, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6151, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0))
  %60 = bitcast i8* %59 to %"struct.pov::Media_Interval_Struct"**
  store %"struct.pov::Media_Interval_Struct"** %60, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %61 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %3, align 4
  br label %63

; <label>:63:                                     ; preds = %originalBBpart280, %9
  %64 = load i32, i32* %3, align 4
  %65 = sext i32 %64 to i64
  %66 = load i64, i64* %2, align 8
  %67 = icmp slt i64 %65, %66
  br i1 %67, label %68, label %167

; <label>:68:                                     ; preds = %63
  %69 = load i32, i32* @x.59
  %70 = load i32, i32* @y.60
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %68
  %77 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6156, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %78 = bitcast i8* %77 to %"struct.pov::Media_Struct"**
  %79 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %80 = load i32, i32* %3, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %79, i64 %81
  store %"struct.pov::Media_Struct"** %78, %"struct.pov::Media_Struct"*** %82, align 8
  %83 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %84 = load i32, i32* %3, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i64, i64* %83, i64 %85
  store i64 10, i64* %86, align 8
  %87 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6158, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %88 = bitcast i8* %87 to %"struct.pov::Media_Struct"**
  %89 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %90 = load i32, i32* %3, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %89, i64 %91
  store %"struct.pov::Media_Struct"** %88, %"struct.pov::Media_Struct"*** %92, align 8
  %93 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %94 = load i32, i32* %3, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i64, i64* %93, i64 %95
  store i64 10, i64* %96, align 8
  %97 = load i32, i32* %4, align 4
  %98 = sext i32 %97 to i64
  %99 = mul i64 %98, 32
  %100 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %99, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6160, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0))
  %101 = bitcast i8* %100 to %"struct.pov::Light_List_Struct"*
  %102 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %103 = load i32, i32* %3, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %102, i64 %104
  store %"struct.pov::Light_List_Struct"* %101, %"struct.pov::Light_List_Struct"** %105, align 8
  %106 = load i32, i32* %4, align 4
  %107 = mul nsw i32 2, %106
  %108 = add nsw i32 %107, 1
  %109 = sext i32 %108 to i64
  %110 = mul i64 %109, 32
  %111 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %110, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6161, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %112 = bitcast i8* %111 to %"struct.pov::Lit_Interval_Struct"*
  %113 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %114 = load i32, i32* %3, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %113, i64 %115
  store %"struct.pov::Lit_Interval_Struct"* %112, %"struct.pov::Lit_Interval_Struct"** %116, align 8
  %117 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 960, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6162, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0))
  %118 = bitcast i8* %117 to %"struct.pov::Media_Interval_Struct"*
  %119 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %120 = load i32, i32* %3, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %119, i64 %121
  store %"struct.pov::Media_Interval_Struct"* %118, %"struct.pov::Media_Interval_Struct"** %122, align 8
  %123 = load i64*, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %124 = load i32, i32* %3, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i64, i64* %123, i64 %125
  store i64 10, i64* %126, align 8
  %127 = load i32, i32* %4, align 4
  %128 = sext i32 %127 to i64
  %129 = mul i64 %128, 32
  %130 = add i64 160, %129
  %131 = load i32, i32* %4, align 4
  %132 = mul nsw i32 2, %131
  %133 = add nsw i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = mul i64 %134, 32
  %136 = add i64 %130, %135
  %137 = add i64 %136, 960
  %138 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %139 = add i64 %138, %137
  store i64 %139, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %140 = load i32, i32* @x.59
  %141 = load i32, i32* @y.60
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %148

; <label>:148:                                    ; preds = %originalBBpart2
  %149 = load i32, i32* @x.59
  %150 = load i32, i32* @y.60
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %originalBB77alteredBB, %148
  %157 = load i32, i32* %3, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %3, align 4
  %159 = load i32, i32* @x.59
  %160 = load i32, i32* @y.60
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart280, label %originalBB77alteredBB

originalBBpart280:                                ; preds = %originalBB77
  br label %63

; <label>:167:                                    ; preds = %63
  %168 = load i64, i64* %2, align 8
  store i64 %168, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %169 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %170 = load i64, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  %171 = add nsw i64 %170, %169
  store i64 %171, i64* @_ZN3pov19TotalMallocPoolSizeE, align 8
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %68
  %172 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6156, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %173 = bitcast i8* %172 to %"struct.pov::Media_Struct"**
  %174 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %175 = load i32, i32* %3, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %174, i64 %176
  store %"struct.pov::Media_Struct"** %173, %"struct.pov::Media_Struct"*** %177, align 8
  %178 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %179 = load i32, i32* %3, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i64, i64* %178, i64 %180
  store i64 10, i64* %181, align 8
  %182 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6158, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %183 = bitcast i8* %182 to %"struct.pov::Media_Struct"**
  %184 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %185 = load i32, i32* %3, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %184, i64 %186
  store %"struct.pov::Media_Struct"** %183, %"struct.pov::Media_Struct"*** %187, align 8
  %188 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %189 = load i32, i32* %3, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i64, i64* %188, i64 %190
  store i64 10, i64* %191, align 8
  %192 = load i32, i32* %4, align 4
  %193 = sext i32 %192 to i64
  %_ = sub i64 %193, 32
  %gen = mul i64 %_, 32
  %_1 = sub i64 0, %193
  %gen2 = add i64 %_1, 32
  %_3 = shl i64 %193, 32
  %194 = mul i64 %193, 32
  %195 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %194, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6160, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0))
  %196 = bitcast i8* %195 to %"struct.pov::Light_List_Struct"*
  %197 = load %"struct.pov::Light_List_Struct"**, %"struct.pov::Light_List_Struct"*** @_ZN3pov18MediaLightListPoolE, align 8
  %198 = load i32, i32* %3, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %"struct.pov::Light_List_Struct"*, %"struct.pov::Light_List_Struct"** %197, i64 %199
  store %"struct.pov::Light_List_Struct"* %196, %"struct.pov::Light_List_Struct"** %200, align 8
  %201 = load i32, i32* %4, align 4
  %_4 = shl i32 2, %201
  %202 = mul nsw i32 2, %201
  %_5 = sub i32 %202, 1
  %gen6 = mul i32 %_5, 1
  %_7 = shl i32 %202, 1
  %_8 = sub i32 %202, 1
  %gen9 = mul i32 %_8, 1
  %203 = add nsw i32 %202, 1
  %204 = sext i32 %203 to i64
  %_10 = sub i64 0, %204
  %gen11 = add i64 %_10, 32
  %_12 = shl i64 %204, 32
  %_13 = shl i64 %204, 32
  %_14 = sub i64 0, %204
  %gen15 = add i64 %_14, 32
  %_16 = sub i64 0, %204
  %gen17 = add i64 %_16, 32
  %_18 = shl i64 %204, 32
  %_19 = sub i64 0, %204
  %gen20 = add i64 %_19, 32
  %205 = mul i64 %204, 32
  %206 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %205, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6161, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %207 = bitcast i8* %206 to %"struct.pov::Lit_Interval_Struct"*
  %208 = load %"struct.pov::Lit_Interval_Struct"**, %"struct.pov::Lit_Interval_Struct"*** @_ZN3pov20MediaLitIntervalPoolE, align 8
  %209 = load i32, i32* %3, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.pov::Lit_Interval_Struct"*, %"struct.pov::Lit_Interval_Struct"** %208, i64 %210
  store %"struct.pov::Lit_Interval_Struct"* %207, %"struct.pov::Lit_Interval_Struct"** %211, align 8
  %212 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 960, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6162, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0))
  %213 = bitcast i8* %212 to %"struct.pov::Media_Interval_Struct"*
  %214 = load %"struct.pov::Media_Interval_Struct"**, %"struct.pov::Media_Interval_Struct"*** @_ZN3pov17MediaIntervalPoolE, align 8
  %215 = load i32, i32* %3, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds %"struct.pov::Media_Interval_Struct"*, %"struct.pov::Media_Interval_Struct"** %214, i64 %216
  store %"struct.pov::Media_Interval_Struct"* %213, %"struct.pov::Media_Interval_Struct"** %217, align 8
  %218 = load i64*, i64** @_ZN3pov21MediaIntervalPoolSizeE, align 8
  %219 = load i32, i32* %3, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i64, i64* %218, i64 %220
  store i64 10, i64* %221, align 8
  %222 = load i32, i32* %4, align 4
  %223 = sext i32 %222 to i64
  %_21 = sub i64 0, %223
  %gen22 = add i64 %_21, 32
  %_23 = sub i64 0, %223
  %gen24 = add i64 %_23, 32
  %_25 = sub i64 0, %223
  %gen26 = add i64 %_25, 32
  %_27 = sub i64 0, %223
  %gen28 = add i64 %_27, 32
  %_29 = shl i64 %223, 32
  %_30 = sub i64 %223, 32
  %gen31 = mul i64 %_30, 32
  %224 = mul i64 %223, 32
  %_32 = shl i64 160, %224
  %_33 = sub i64 0, 160
  %gen34 = add i64 %_33, %224
  %_35 = sub i64 160, %224
  %gen36 = mul i64 %_35, %224
  %_37 = shl i64 160, %224
  %_38 = sub i64 0, 160
  %gen39 = add i64 %_38, %224
  %_40 = sub i64 160, %224
  %gen41 = mul i64 %_40, %224
  %_42 = shl i64 160, %224
  %225 = add i64 160, %224
  %226 = load i32, i32* %4, align 4
  %_43 = sub i32 2, %226
  %gen44 = mul i32 %_43, %226
  %_45 = sub i32 0, 2
  %gen46 = add i32 %_45, %226
  %_47 = sub i32 2, %226
  %gen48 = mul i32 %_47, %226
  %_49 = shl i32 2, %226
  %_50 = sub i32 0, 2
  %gen51 = add i32 %_50, %226
  %_52 = sub i32 0, 2
  %gen53 = add i32 %_52, %226
  %227 = mul nsw i32 2, %226
  %_54 = sub i32 0, %227
  %gen55 = add i32 %_54, 1
  %_56 = shl i32 %227, 1
  %228 = add nsw i32 %227, 1
  %229 = sext i32 %228 to i64
  %230 = mul i64 %229, 32
  %_57 = shl i64 %225, %230
  %231 = add i64 %225, %230
  %_58 = sub i64 0, %231
  %gen59 = add i64 %_58, 960
  %_60 = sub i64 0, %231
  %gen61 = add i64 %_60, 960
  %_62 = shl i64 %231, 960
  %_63 = sub i64 %231, 960
  %gen64 = mul i64 %_63, 960
  %_65 = shl i64 %231, 960
  %232 = add i64 %231, 960
  %233 = load i64, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  %_66 = sub i64 0, %233
  %gen67 = add i64 %_66, %232
  %_68 = shl i64 %233, %232
  %_69 = sub i64 %233, %232
  %gen70 = mul i64 %_69, %232
  %_71 = shl i64 %233, %232
  %_72 = shl i64 %233, %232
  %_73 = sub i64 %233, %232
  %gen74 = mul i64 %_73, %232
  %_75 = sub i64 %233, %232
  %gen76 = mul i64 %_75, %232
  %234 = add i64 %233, %232
  store i64 %234, i64* @_ZN3pov19MediaMallocPoolSizeE, align 8
  br label %originalBB

originalBB77alteredBB:                            ; preds = %originalBB77, %148
  %235 = load i32, i32* %3, align 4
  %_78 = shl i32 %235, 1
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %3, align 4
  br label %originalBB77
}

declare i8* @_ZN3pov11pov_reallocEPvmPKciS2_(i8*, i64, i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4), i32* dereferenceable(4)) #1 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load i32, i32* %6, align 4
  %8 = load i32*, i32** %5, align 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load i32*, i32** %5, align 8
  store i32* %12, i32** %3, align 8
  br label %31

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.61
  %15 = load i32, i32* @y.62
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load i32*, i32** %4, align 8
  store i32* %22, i32** %3, align 8
  %23 = load i32, i32* @x.61
  %24 = load i32, i32* @y.62
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %11
  %32 = load i32*, i32** %3, align 8
  ret i32* %32

originalBBalteredBB:                              ; preds = %originalBB, %13
  %33 = load i32*, i32** %4, align 8
  store i32* %33, i32** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define %"struct.pov::ComTexData_Struct"* @_ZN3pov13NewComTexDataEv() #0 {
  %1 = load i32, i32* @x.63
  %2 = load i32, i32* @y.64
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca %"struct.pov::ComTexData_Struct"*, align 8
  %10 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  store %"struct.pov::ComTexData_Struct"* %10, %"struct.pov::ComTexData_Struct"** %9, align 8
  %11 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %12 = icmp ne %"struct.pov::ComTexData_Struct"* %11, null
  %13 = load i32, i32* @x.63
  %14 = load i32, i32* @y.64
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %88

; <label>:21:                                     ; preds = %originalBBpart2
  %22 = load i32, i32* @x.63
  %23 = load i32, i32* @y.64
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %21
  %30 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %31 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %30, i32 0, i32 0
  %32 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %31, align 8
  %33 = icmp ne %"struct.pov::ComTexData_Struct"* %32, null
  %34 = load i32, i32* @x.63
  %35 = load i32, i32* @y.64
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %42, label %50

; <label>:42:                                     ; preds = %originalBBpart24
  %43 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %44 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %43, i32 0, i32 1
  %45 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %44, align 8
  %46 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %47 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %46, i32 0, i32 0
  %48 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %47, align 8
  %49 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %48, i32 0, i32 1
  store %"struct.pov::ComTexData_Struct"* %45, %"struct.pov::ComTexData_Struct"** %49, align 8
  br label %50

; <label>:50:                                     ; preds = %42, %originalBBpart24
  %51 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %52 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %51, i32 0, i32 1
  %53 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %52, align 8
  %54 = icmp ne %"struct.pov::ComTexData_Struct"* %53, null
  br i1 %54, label %55, label %79

; <label>:55:                                     ; preds = %50
  %56 = load i32, i32* @x.63
  %57 = load i32, i32* @y.64
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %55
  %64 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %65 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %64, i32 0, i32 0
  %66 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %65, align 8
  %67 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %68 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %67, i32 0, i32 1
  %69 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %68, align 8
  %70 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %69, i32 0, i32 0
  store %"struct.pov::ComTexData_Struct"* %66, %"struct.pov::ComTexData_Struct"** %70, align 8
  %71 = load i32, i32* @x.63
  %72 = load i32, i32* @y.64
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %79

; <label>:79:                                     ; preds = %originalBBpart28, %50
  %80 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %81 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  %82 = icmp eq %"struct.pov::ComTexData_Struct"* %80, %81
  br i1 %82, label %83, label %87

; <label>:83:                                     ; preds = %79
  %84 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %85 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %84, i32 0, i32 1
  %86 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %85, align 8
  store %"struct.pov::ComTexData_Struct"* %86, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  br label %87

; <label>:87:                                     ; preds = %83, %79
  br label %93

; <label>:88:                                     ; preds = %originalBBpart2
  %89 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 5616, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6246, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0))
  %90 = bitcast i8* %89 to %"struct.pov::ComTexData_Struct"*
  store %"struct.pov::ComTexData_Struct"* %90, %"struct.pov::ComTexData_Struct"** %9, align 8
  %91 = load i32, i32* @_ZN3pov22ComputeTexturePoolSizeE, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* @_ZN3pov22ComputeTexturePoolSizeE, align 4
  br label %93

; <label>:93:                                     ; preds = %88, %87
  %94 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %95 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %94, i32 0, i32 0
  store %"struct.pov::ComTexData_Struct"* null, %"struct.pov::ComTexData_Struct"** %95, align 8
  %96 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %97 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %98 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %97, i32 0, i32 1
  store %"struct.pov::ComTexData_Struct"* %96, %"struct.pov::ComTexData_Struct"** %98, align 8
  %99 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %100 = icmp ne %"struct.pov::ComTexData_Struct"* %99, null
  br i1 %100, label %101, label %105

; <label>:101:                                    ; preds = %93
  %102 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %103 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %104 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %103, i32 0, i32 0
  store %"struct.pov::ComTexData_Struct"* %102, %"struct.pov::ComTexData_Struct"** %104, align 8
  br label %105

; <label>:105:                                    ; preds = %101, %93
  %106 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  store %"struct.pov::ComTexData_Struct"* %106, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %107 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  ret %"struct.pov::ComTexData_Struct"* %107

originalBBalteredBB:                              ; preds = %originalBB, %0
  %108 = alloca %"struct.pov::ComTexData_Struct"*, align 8
  %109 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  store %"struct.pov::ComTexData_Struct"* %109, %"struct.pov::ComTexData_Struct"** %108, align 8
  %110 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %108, align 8
  %111 = icmp ne %"struct.pov::ComTexData_Struct"* %110, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %112 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %113 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %112, i32 0, i32 0
  %114 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %113, align 8
  %115 = icmp ne %"struct.pov::ComTexData_Struct"* %114, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %116 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %117 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %116, i32 0, i32 0
  %118 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %117, align 8
  %119 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %9, align 8
  %120 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %119, i32 0, i32 1
  %121 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %120, align 8
  %122 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %121, i32 0, i32 0
  store %"struct.pov::ComTexData_Struct"* %118, %"struct.pov::ComTexData_Struct"** %122, align 8
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define void @_ZN3pov14FreeComTexDataEPNS_17ComTexData_StructE(%"struct.pov::ComTexData_Struct"*) #1 {
  %2 = alloca %"struct.pov::ComTexData_Struct"*, align 8
  store %"struct.pov::ComTexData_Struct"* %0, %"struct.pov::ComTexData_Struct"** %2, align 8
  %3 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %4 = icmp eq %"struct.pov::ComTexData_Struct"* %3, null
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  br label %54

; <label>:6:                                      ; preds = %1
  %7 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %8 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %7, i32 0, i32 0
  %9 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %8, align 8
  %10 = icmp ne %"struct.pov::ComTexData_Struct"* %9, null
  br i1 %10, label %11, label %19

; <label>:11:                                     ; preds = %6
  %12 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %13 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %12, i32 0, i32 1
  %14 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %13, align 8
  %15 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %16 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %15, i32 0, i32 0
  %17 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %16, align 8
  %18 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %17, i32 0, i32 1
  store %"struct.pov::ComTexData_Struct"* %14, %"struct.pov::ComTexData_Struct"** %18, align 8
  br label %19

; <label>:19:                                     ; preds = %11, %6
  %20 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %21 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %20, i32 0, i32 1
  %22 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %21, align 8
  %23 = icmp ne %"struct.pov::ComTexData_Struct"* %22, null
  br i1 %23, label %24, label %32

; <label>:24:                                     ; preds = %19
  %25 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %26 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %25, i32 0, i32 0
  %27 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %26, align 8
  %28 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %29 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %28, i32 0, i32 1
  %30 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %29, align 8
  %31 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %30, i32 0, i32 0
  store %"struct.pov::ComTexData_Struct"* %27, %"struct.pov::ComTexData_Struct"** %31, align 8
  br label %32

; <label>:32:                                     ; preds = %24, %19
  %33 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %34 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  %35 = icmp eq %"struct.pov::ComTexData_Struct"* %33, %34
  br i1 %35, label %36, label %40

; <label>:36:                                     ; preds = %32
  %37 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %38 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %37, i32 0, i32 1
  %39 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %38, align 8
  store %"struct.pov::ComTexData_Struct"* %39, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureUsedPoolE, align 8
  br label %40

; <label>:40:                                     ; preds = %36, %32
  %41 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %42 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %41, i32 0, i32 0
  store %"struct.pov::ComTexData_Struct"* null, %"struct.pov::ComTexData_Struct"** %42, align 8
  %43 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  %44 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %45 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %44, i32 0, i32 1
  store %"struct.pov::ComTexData_Struct"* %43, %"struct.pov::ComTexData_Struct"** %45, align 8
  %46 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  %47 = icmp ne %"struct.pov::ComTexData_Struct"* %46, null
  br i1 %47, label %48, label %52

; <label>:48:                                     ; preds = %40
  %49 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  %50 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  %51 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %50, i32 0, i32 0
  store %"struct.pov::ComTexData_Struct"* %49, %"struct.pov::ComTexData_Struct"** %51, align 8
  br label %52

; <label>:52:                                     ; preds = %48, %40
  %53 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %2, align 8
  store %"struct.pov::ComTexData_Struct"* %53, %"struct.pov::ComTexData_Struct"** @_ZN3pov22ComputeTextureFreePoolE, align 8
  br label %54

; <label>:54:                                     ; preds = %52, %5
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov13Assign_ColourEPfS0_(float*, float*) #1 comdat {
  %3 = load i32, i32* @x.67
  %4 = load i32, i32* @y.68
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca float*, align 8
  %12 = alloca float*, align 8
  store float* %0, float** %11, align 8
  store float* %1, float** %12, align 8
  %13 = load float*, float** %12, align 8
  %14 = getelementptr inbounds float, float* %13, i64 0
  %15 = load float, float* %14, align 4
  %16 = load float*, float** %11, align 8
  %17 = getelementptr inbounds float, float* %16, i64 0
  store float %15, float* %17, align 4
  %18 = load float*, float** %12, align 8
  %19 = getelementptr inbounds float, float* %18, i64 1
  %20 = load float, float* %19, align 4
  %21 = load float*, float** %11, align 8
  %22 = getelementptr inbounds float, float* %21, i64 1
  store float %20, float* %22, align 4
  %23 = load float*, float** %12, align 8
  %24 = getelementptr inbounds float, float* %23, i64 2
  %25 = load float, float* %24, align 4
  %26 = load float*, float** %11, align 8
  %27 = getelementptr inbounds float, float* %26, i64 2
  store float %25, float* %27, align 4
  %28 = load float*, float** %12, align 8
  %29 = getelementptr inbounds float, float* %28, i64 3
  %30 = load float, float* %29, align 4
  %31 = load float*, float** %11, align 8
  %32 = getelementptr inbounds float, float* %31, i64 3
  store float %30, float* %32, align 4
  %33 = load float*, float** %12, align 8
  %34 = getelementptr inbounds float, float* %33, i64 4
  %35 = load float, float* %34, align 4
  %36 = load float*, float** %11, align 8
  %37 = getelementptr inbounds float, float* %36, i64 4
  store float %35, float* %37, align 4
  %38 = load i32, i32* @x.67
  %39 = load i32, i32* @y.68
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %46 = alloca float*, align 8
  %47 = alloca float*, align 8
  store float* %0, float** %46, align 8
  store float* %1, float** %47, align 8
  %48 = load float*, float** %47, align 8
  %49 = getelementptr inbounds float, float* %48, i64 0
  %50 = load float, float* %49, align 4
  %51 = load float*, float** %46, align 8
  %52 = getelementptr inbounds float, float* %51, i64 0
  store float %50, float* %52, align 4
  %53 = load float*, float** %47, align 8
  %54 = getelementptr inbounds float, float* %53, i64 1
  %55 = load float, float* %54, align 4
  %56 = load float*, float** %46, align 8
  %57 = getelementptr inbounds float, float* %56, i64 1
  store float %55, float* %57, align 4
  %58 = load float*, float** %47, align 8
  %59 = getelementptr inbounds float, float* %58, i64 2
  %60 = load float, float* %59, align 4
  %61 = load float*, float** %46, align 8
  %62 = getelementptr inbounds float, float* %61, i64 2
  store float %60, float* %62, align 4
  %63 = load float*, float** %47, align 8
  %64 = getelementptr inbounds float, float* %63, i64 3
  %65 = load float, float* %64, align 4
  %66 = load float*, float** %46, align 8
  %67 = getelementptr inbounds float, float* %66, i64 3
  store float %65, float* %67, align 4
  %68 = load float*, float** %47, align 8
  %69 = getelementptr inbounds float, float* %68, i64 4
  %70 = load float, float* %69, align 4
  %71 = load float*, float** %46, align 8
  %72 = getelementptr inbounds float, float* %71, i64 4
  store float %70, float* %72, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov4VSubEPdPKdS2_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %5, align 8
  %8 = getelementptr inbounds double, double* %7, i64 0
  %9 = load double, double* %8, align 8
  %10 = load double*, double** %6, align 8
  %11 = getelementptr inbounds double, double* %10, i64 0
  %12 = load double, double* %11, align 8
  %13 = fsub double %9, %12
  %14 = load double*, double** %4, align 8
  %15 = getelementptr inbounds double, double* %14, i64 0
  store double %13, double* %15, align 8
  %16 = load double*, double** %5, align 8
  %17 = getelementptr inbounds double, double* %16, i64 1
  %18 = load double, double* %17, align 8
  %19 = load double*, double** %6, align 8
  %20 = getelementptr inbounds double, double* %19, i64 1
  %21 = load double, double* %20, align 8
  %22 = fsub double %18, %21
  %23 = load double*, double** %4, align 8
  %24 = getelementptr inbounds double, double* %23, i64 1
  store double %22, double* %24, align 8
  %25 = load double*, double** %5, align 8
  %26 = getelementptr inbounds double, double* %25, i64 2
  %27 = load double, double* %26, align 8
  %28 = load double*, double** %6, align 8
  %29 = getelementptr inbounds double, double* %28, i64 2
  %30 = load double, double* %29, align 8
  %31 = fsub double %27, %30
  %32 = load double*, double** %4, align 8
  %33 = getelementptr inbounds double, double* %32, i64 2
  store double %31, double* %33, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3pov12VNormalizeEqEPd(double*) #0 comdat {
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  store double* %0, double** %2, align 8
  %4 = load double*, double** %2, align 8
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %3, double* %4)
  %5 = load double*, double** %2, align 8
  %6 = load double, double* %3, align 8
  call void @_ZN3pov15VInverseScaleEqEPdd(double* %5, double %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov15VInverseScaleEqEPdd(double*, double) #1 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  store double* %0, double** %3, align 8
  store double %1, double* %4, align 8
  %6 = load double, double* %4, align 8
  %7 = fdiv double 1.000000e+00, %6
  store double %7, double* %5, align 8
  %8 = load double, double* %5, align 8
  %9 = load double*, double** %3, align 8
  %10 = getelementptr inbounds double, double* %9, i64 0
  %11 = load double, double* %10, align 8
  %12 = fmul double %11, %8
  store double %12, double* %10, align 8
  %13 = load double, double* %5, align 8
  %14 = load double*, double** %3, align 8
  %15 = getelementptr inbounds double, double* %14, i64 1
  %16 = load double, double* %15, align 8
  %17 = fmul double %16, %13
  store double %17, double* %15, align 8
  %18 = load double, double* %5, align 8
  %19 = load double*, double** %3, align 8
  %20 = getelementptr inbounds double, double* %19, i64 2
  %21 = load double, double* %20, align 8
  %22 = fmul double %21, %18
  store double %22, double* %20, align 8
  ret void
}

declare double @_ZN3pov15Attenuate_LightEPNS_19Light_Source_StructEPNS_10Ray_StructEd(%"struct.pov::Light_Source_Struct"*, %"struct.pov::Ray_Struct"*, double) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov8VScaleEqEPff(float*, float) #1 comdat {
  %3 = alloca float*, align 8
  %4 = alloca float, align 4
  store float* %0, float** %3, align 8
  store float %1, float* %4, align 4
  %5 = load float, float* %4, align 4
  %6 = load float*, float** %3, align 8
  %7 = getelementptr inbounds float, float* %6, i64 0
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %5
  store float %9, float* %7, align 4
  %10 = load float, float* %4, align 4
  %11 = load float*, float** %3, align 8
  %12 = getelementptr inbounds float, float* %11, i64 1
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, %10
  store float %14, float* %12, align 4
  %15 = load float, float* %4, align 4
  %16 = load float*, float** %3, align 8
  %17 = getelementptr inbounds float, float* %16, i64 2
  %18 = load float, float* %17, align 4
  %19 = fmul float %18, %15
  store float %19, float* %17, align 4
  ret void
}

declare void @_ZN3pov25Initialize_Ray_ContainersEPNS_10Ray_StructEj(%"struct.pov::Ray_Struct"*, i32) #2

declare void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"*) #2

; Function Attrs: nounwind
declare double @sqrt(double) #3

declare void @_ZN3pov22Determine_CSG_TexturesEPNS_10CSG_StructEPdPiPPNS_14Texture_StructES2_(%"struct.pov::CSG_Struct"*, double*, i32*, %"struct.pov::Texture_Struct"**, double*) #2

declare void @_ZN3pov23Determine_Blob_TexturesEPNS_11Blob_StructEPdPiPPNS_14Texture_StructES2_(%"struct.pov::Blob_Struct"*, double*, i32*, %"struct.pov::Texture_Struct"**, double*) #2

declare i32 @_ZN3pov16Mesh_InterpolateEPdS0_PNS_11Mesh_StructEPNS_20Mesh_Triangle_StructE(double*, double*, %"struct.pov::Mesh_Struct"*, %"struct.pov::Mesh_Triangle_Struct"*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov12Make_ColourAEPffffff(float*, float, float, float, float, float) #1 comdat {
  %7 = alloca float*, align 8
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  store float* %0, float** %7, align 8
  store float %1, float* %8, align 4
  store float %2, float* %9, align 4
  store float %3, float* %10, align 4
  store float %4, float* %11, align 4
  store float %5, float* %12, align 4
  %13 = load float, float* %8, align 4
  %14 = load float*, float** %7, align 8
  %15 = getelementptr inbounds float, float* %14, i64 0
  store float %13, float* %15, align 4
  %16 = load float, float* %9, align 4
  %17 = load float*, float** %7, align 8
  %18 = getelementptr inbounds float, float* %17, i64 1
  store float %16, float* %18, align 4
  %19 = load float, float* %10, align 4
  %20 = load float*, float** %7, align 8
  %21 = getelementptr inbounds float, float* %20, i64 2
  store float %19, float* %21, align 4
  %22 = load float, float* %11, align 4
  %23 = load float*, float** %7, align 8
  %24 = getelementptr inbounds float, float* %23, i64 3
  store float %22, float* %24, align 4
  %25 = load float, float* %12, align 4
  %26 = load float*, float** %7, align 8
  %27 = getelementptr inbounds float, float* %26, i64 4
  store float %25, float* %27, align 4
  ret void
}

declare void @_ZN3pov11Warp_EPointEPdS0_PNS_14Pattern_StructE(double*, double*, %"struct.pov::Pattern_Struct"*) #2

; Function Attrs: noinline uwtable
define internal void @_ZN3povL26backtrace_average_texturesEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float*, %"struct.pov::Texture_Struct"*, double*, double*, %"struct.pov::Ray_Struct"*, double, %"struct.pov::istk_entry"*, i32) #0 {
  %9 = load i32, i32* @x.79
  %10 = load i32, i32* @y.80
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  %17 = alloca float*, align 8
  %18 = alloca %"struct.pov::Texture_Struct"*, align 8
  %19 = alloca double*, align 8
  %20 = alloca double*, align 8
  %21 = alloca %"struct.pov::Ray_Struct"*, align 8
  %22 = alloca double, align 8
  %23 = alloca %"struct.pov::istk_entry"*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca [5 x float], align 16
  %27 = alloca %"struct.pov::Blend_Map_Struct"*, align 8
  %28 = alloca float, align 4
  %29 = alloca float, align 4
  store float* %0, float** %17, align 8
  store %"struct.pov::Texture_Struct"* %1, %"struct.pov::Texture_Struct"** %18, align 8
  store double* %2, double** %19, align 8
  store double* %3, double** %20, align 8
  store %"struct.pov::Ray_Struct"* %4, %"struct.pov::Ray_Struct"** %21, align 8
  store double %5, double* %22, align 8
  store %"struct.pov::istk_entry"* %6, %"struct.pov::istk_entry"** %23, align 8
  store i32 %7, i32* %24, align 4
  %30 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %18, align 8
  %31 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %30, i32 0, i32 9
  %32 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %31, align 8
  store %"struct.pov::Blend_Map_Struct"* %32, %"struct.pov::Blend_Map_Struct"** %27, align 8
  store float 0.000000e+00, float* %29, align 4
  store i32 0, i32* %25, align 4
  %33 = load i32, i32* @x.79
  %34 = load i32, i32* @y.80
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41

; <label>:41:                                     ; preds = %76, %originalBBpart2
  %42 = load i32, i32* %25, align 4
  %43 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %27, align 8
  %44 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %43, i32 0, i32 1
  %45 = load i16, i16* %44, align 4
  %46 = sext i16 %45 to i32
  %47 = icmp slt i32 %42, %46
  br i1 %47, label %48, label %79

; <label>:48:                                     ; preds = %41
  %49 = load i32, i32* @x.79
  %50 = load i32, i32* @y.80
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %48
  %57 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %27, align 8
  %58 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %57, i32 0, i32 4
  %59 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %58, align 8
  %60 = load i32, i32* %25, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %59, i64 %61
  %63 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %62, i32 0, i32 0
  %64 = load float, float* %63, align 8
  store float %64, float* %28, align 4
  %65 = load float, float* %28, align 4
  %66 = load float, float* %29, align 4
  %67 = fadd float %66, %65
  store float %67, float* %29, align 4
  %68 = load i32, i32* @x.79
  %69 = load i32, i32* @y.80
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart27, label %originalBB1alteredBB

originalBBpart27:                                 ; preds = %originalBB1
  br label %76

; <label>:76:                                     ; preds = %originalBBpart27
  %77 = load i32, i32* %25, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %25, align 4
  br label %41

; <label>:79:                                     ; preds = %41
  store i32 0, i32* %25, align 4
  br label %80

; <label>:80:                                     ; preds = %originalBBpart217, %79
  %81 = load i32, i32* %25, align 4
  %82 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %27, align 8
  %83 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %82, i32 0, i32 1
  %84 = load i16, i16* %83, align 4
  %85 = sext i16 %84 to i32
  %86 = icmp slt i32 %81, %85
  br i1 %86, label %87, label %136

; <label>:87:                                     ; preds = %80
  %88 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %27, align 8
  %89 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %88, i32 0, i32 4
  %90 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %89, align 8
  %91 = load i32, i32* %25, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %90, i64 %92
  %94 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %93, i32 0, i32 0
  %95 = load float, float* %94, align 8
  %96 = load float, float* %29, align 4
  %97 = fdiv float %95, %96
  store float %97, float* %28, align 4
  %98 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  %99 = load float*, float** %17, align 8
  %100 = load float, float* %28, align 4
  call void @_ZN3pov6VScaleEPfPKff(float* %98, float* %99, float %100)
  %101 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  %102 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %27, align 8
  %103 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %102, i32 0, i32 4
  %104 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %103, align 8
  %105 = load i32, i32* %25, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %104, i64 %106
  %108 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %107, i32 0, i32 2
  %109 = bitcast %union.anon* %108 to %"struct.pov::Texture_Struct"**
  %110 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %109, align 8
  %111 = load double*, double** %19, align 8
  %112 = load double*, double** %20, align 8
  %113 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %21, align 8
  %114 = load double, double* %22, align 8
  %115 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %23, align 8
  %116 = load i32, i32* %24, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %101, %"struct.pov::Texture_Struct"* %110, double* %111, double* %112, %"struct.pov::Ray_Struct"* %113, double %114, %"struct.pov::istk_entry"* %115, i32 %116)
  br label %117

; <label>:117:                                    ; preds = %87
  %118 = load i32, i32* @x.79
  %119 = load i32, i32* @y.80
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %originalBB9alteredBB, %117
  %126 = load i32, i32* %25, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %25, align 4
  %128 = load i32, i32* @x.79
  %129 = load i32, i32* @y.80
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart217, label %originalBB9alteredBB

originalBBpart217:                                ; preds = %originalBB9
  br label %80

; <label>:136:                                    ; preds = %80
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %137 = alloca float*, align 8
  %138 = alloca %"struct.pov::Texture_Struct"*, align 8
  %139 = alloca double*, align 8
  %140 = alloca double*, align 8
  %141 = alloca %"struct.pov::Ray_Struct"*, align 8
  %142 = alloca double, align 8
  %143 = alloca %"struct.pov::istk_entry"*, align 8
  %144 = alloca i32, align 4
  %145 = alloca i32, align 4
  %146 = alloca [5 x float], align 16
  %147 = alloca %"struct.pov::Blend_Map_Struct"*, align 8
  %148 = alloca float, align 4
  %149 = alloca float, align 4
  store float* %0, float** %137, align 8
  store %"struct.pov::Texture_Struct"* %1, %"struct.pov::Texture_Struct"** %138, align 8
  store double* %2, double** %139, align 8
  store double* %3, double** %140, align 8
  store %"struct.pov::Ray_Struct"* %4, %"struct.pov::Ray_Struct"** %141, align 8
  store double %5, double* %142, align 8
  store %"struct.pov::istk_entry"* %6, %"struct.pov::istk_entry"** %143, align 8
  store i32 %7, i32* %144, align 4
  %150 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %138, align 8
  %151 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %150, i32 0, i32 9
  %152 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %151, align 8
  store %"struct.pov::Blend_Map_Struct"* %152, %"struct.pov::Blend_Map_Struct"** %147, align 8
  store float 0.000000e+00, float* %149, align 4
  store i32 0, i32* %145, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %153 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %27, align 8
  %154 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %153, i32 0, i32 4
  %155 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %154, align 8
  %156 = load i32, i32* %25, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %155, i64 %157
  %159 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %158, i32 0, i32 0
  %160 = load float, float* %159, align 8
  store float %160, float* %28, align 4
  %161 = load float, float* %28, align 4
  %162 = load float, float* %29, align 4
  %_ = fsub float %162, %161
  %gen = fmul float %_, %161
  %_2 = fsub float -0.000000e+00, %162
  %gen3 = fadd float %_2, %161
  %_4 = fsub float -0.000000e+00, %162
  %gen5 = fadd float %_4, %161
  %163 = fadd float %162, %161
  store float %163, float* %29, align 4
  br label %originalBB1

originalBB9alteredBB:                             ; preds = %originalBB9, %117
  %164 = load i32, i32* %25, align 4
  %_10 = sub i32 %164, 1
  %gen11 = mul i32 %_10, 1
  %_12 = sub i32 %164, 1
  %gen13 = mul i32 %_12, 1
  %_14 = sub i32 %164, 1
  %gen15 = mul i32 %_14, 1
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %25, align 4
  br label %originalBB9
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL16average_texturesEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float*, %"struct.pov::Texture_Struct"*, double*, double*, %"struct.pov::Ray_Struct"*, double, %"struct.pov::istk_entry"*, i32) #0 {
  %9 = alloca float*, align 8
  %10 = alloca %"struct.pov::Texture_Struct"*, align 8
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  %13 = alloca %"struct.pov::Ray_Struct"*, align 8
  %14 = alloca double, align 8
  %15 = alloca %"struct.pov::istk_entry"*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca [5 x float], align 16
  %19 = alloca %"struct.pov::Blend_Map_Struct"*, align 8
  %20 = alloca float, align 4
  %21 = alloca float, align 4
  store float* %0, float** %9, align 8
  store %"struct.pov::Texture_Struct"* %1, %"struct.pov::Texture_Struct"** %10, align 8
  store double* %2, double** %11, align 8
  store double* %3, double** %12, align 8
  store %"struct.pov::Ray_Struct"* %4, %"struct.pov::Ray_Struct"** %13, align 8
  store double %5, double* %14, align 8
  store %"struct.pov::istk_entry"* %6, %"struct.pov::istk_entry"** %15, align 8
  store i32 %7, i32* %16, align 4
  %22 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %10, align 8
  %23 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %22, i32 0, i32 9
  %24 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %23, align 8
  store %"struct.pov::Blend_Map_Struct"* %24, %"struct.pov::Blend_Map_Struct"** %19, align 8
  store float 0.000000e+00, float* %21, align 4
  %25 = load float*, float** %9, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %25, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  store i32 0, i32* %17, align 4
  br label %26

; <label>:26:                                     ; preds = %117, %8
  %27 = load i32, i32* @x.81
  %28 = load i32, i32* @y.82
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %26
  %35 = load i32, i32* %17, align 4
  %36 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %19, align 8
  %37 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %36, i32 0, i32 1
  %38 = load i16, i16* %37, align 4
  %39 = sext i16 %38 to i32
  %40 = icmp slt i32 %35, %39
  %41 = load i32, i32* @x.81
  %42 = load i32, i32* @y.82
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %40, label %49, label %120

; <label>:49:                                     ; preds = %originalBBpart2
  %50 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %19, align 8
  %51 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %50, i32 0, i32 4
  %52 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %51, align 8
  %53 = load i32, i32* %17, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %52, i64 %54
  %56 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %55, i32 0, i32 0
  %57 = load float, float* %56, align 8
  store float %57, float* %20, align 4
  %58 = getelementptr inbounds [5 x float], [5 x float]* %18, i32 0, i32 0
  %59 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %19, align 8
  %60 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %59, i32 0, i32 4
  %61 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %60, align 8
  %62 = load i32, i32* %17, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %61, i64 %63
  %65 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %64, i32 0, i32 2
  %66 = bitcast %union.anon* %65 to %"struct.pov::Texture_Struct"**
  %67 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %66, align 8
  %68 = load double*, double** %11, align 8
  %69 = load double*, double** %12, align 8
  %70 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %13, align 8
  %71 = load double, double* %14, align 8
  %72 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %15, align 8
  %73 = load i32, i32* %16, align 4
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %58, %"struct.pov::Texture_Struct"* %67, double* %68, double* %69, %"struct.pov::Ray_Struct"* %70, double %71, %"struct.pov::istk_entry"* %72, i32 %73)
  %74 = getelementptr inbounds [5 x float], [5 x float]* %18, i64 0, i64 0
  %75 = load float, float* %74, align 16
  %76 = load float, float* %20, align 4
  %77 = fmul float %75, %76
  %78 = load float*, float** %9, align 8
  %79 = getelementptr inbounds float, float* %78, i64 0
  %80 = load float, float* %79, align 4
  %81 = fadd float %80, %77
  store float %81, float* %79, align 4
  %82 = getelementptr inbounds [5 x float], [5 x float]* %18, i64 0, i64 1
  %83 = load float, float* %82, align 4
  %84 = load float, float* %20, align 4
  %85 = fmul float %83, %84
  %86 = load float*, float** %9, align 8
  %87 = getelementptr inbounds float, float* %86, i64 1
  %88 = load float, float* %87, align 4
  %89 = fadd float %88, %85
  store float %89, float* %87, align 4
  %90 = getelementptr inbounds [5 x float], [5 x float]* %18, i64 0, i64 2
  %91 = load float, float* %90, align 8
  %92 = load float, float* %20, align 4
  %93 = fmul float %91, %92
  %94 = load float*, float** %9, align 8
  %95 = getelementptr inbounds float, float* %94, i64 2
  %96 = load float, float* %95, align 4
  %97 = fadd float %96, %93
  store float %97, float* %95, align 4
  %98 = getelementptr inbounds [5 x float], [5 x float]* %18, i64 0, i64 3
  %99 = load float, float* %98, align 4
  %100 = load float, float* %20, align 4
  %101 = fmul float %99, %100
  %102 = load float*, float** %9, align 8
  %103 = getelementptr inbounds float, float* %102, i64 3
  %104 = load float, float* %103, align 4
  %105 = fadd float %104, %101
  store float %105, float* %103, align 4
  %106 = getelementptr inbounds [5 x float], [5 x float]* %18, i64 0, i64 4
  %107 = load float, float* %106, align 16
  %108 = load float, float* %20, align 4
  %109 = fmul float %107, %108
  %110 = load float*, float** %9, align 8
  %111 = getelementptr inbounds float, float* %110, i64 4
  %112 = load float, float* %111, align 4
  %113 = fadd float %112, %109
  store float %113, float* %111, align 4
  %114 = load float, float* %20, align 4
  %115 = load float, float* %21, align 4
  %116 = fadd float %115, %114
  store float %116, float* %21, align 4
  br label %117

; <label>:117:                                    ; preds = %49
  %118 = load i32, i32* %17, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %17, align 4
  br label %26

; <label>:120:                                    ; preds = %originalBBpart2
  %121 = load i32, i32* @x.81
  %122 = load i32, i32* @y.82
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %120
  %129 = load float, float* %21, align 4
  %130 = load float*, float** %9, align 8
  %131 = getelementptr inbounds float, float* %130, i64 0
  %132 = load float, float* %131, align 4
  %133 = fdiv float %132, %129
  store float %133, float* %131, align 4
  %134 = load float, float* %21, align 4
  %135 = load float*, float** %9, align 8
  %136 = getelementptr inbounds float, float* %135, i64 1
  %137 = load float, float* %136, align 4
  %138 = fdiv float %137, %134
  store float %138, float* %136, align 4
  %139 = load float, float* %21, align 4
  %140 = load float*, float** %9, align 8
  %141 = getelementptr inbounds float, float* %140, i64 2
  %142 = load float, float* %141, align 4
  %143 = fdiv float %142, %139
  store float %143, float* %141, align 4
  %144 = load float, float* %21, align 4
  %145 = load float*, float** %9, align 8
  %146 = getelementptr inbounds float, float* %145, i64 3
  %147 = load float, float* %146, align 4
  %148 = fdiv float %147, %144
  store float %148, float* %146, align 4
  %149 = load float, float* %21, align 4
  %150 = load float*, float** %9, align 8
  %151 = getelementptr inbounds float, float* %150, i64 4
  %152 = load float, float* %151, align 4
  %153 = fdiv float %152, %149
  store float %153, float* %151, align 4
  %154 = load i32, i32* @x.81
  %155 = load i32, i32* @y.82
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart233, label %originalBB1alteredBB

originalBBpart233:                                ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %26
  %162 = load i32, i32* %17, align 4
  %163 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %19, align 8
  %164 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %163, i32 0, i32 1
  %165 = load i16, i16* %164, align 4
  %166 = sext i16 %165 to i32
  %167 = icmp slt i32 %162, %166
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %120
  %168 = load float, float* %21, align 4
  %169 = load float*, float** %9, align 8
  %170 = getelementptr inbounds float, float* %169, i64 0
  %171 = load float, float* %170, align 4
  %_ = fsub float -0.000000e+00, %171
  %gen = fadd float %_, %168
  %_2 = fsub float %171, %168
  %gen3 = fmul float %_2, %168
  %_4 = fsub float %171, %168
  %gen5 = fmul float %_4, %168
  %_6 = fsub float -0.000000e+00, %171
  %gen7 = fadd float %_6, %168
  %172 = fdiv float %171, %168
  store float %172, float* %170, align 4
  %173 = load float, float* %21, align 4
  %174 = load float*, float** %9, align 8
  %175 = getelementptr inbounds float, float* %174, i64 1
  %176 = load float, float* %175, align 4
  %_8 = fsub float -0.000000e+00, %176
  %gen9 = fadd float %_8, %173
  %_10 = fsub float -0.000000e+00, %176
  %gen11 = fadd float %_10, %173
  %177 = fdiv float %176, %173
  store float %177, float* %175, align 4
  %178 = load float, float* %21, align 4
  %179 = load float*, float** %9, align 8
  %180 = getelementptr inbounds float, float* %179, i64 2
  %181 = load float, float* %180, align 4
  %_12 = fsub float %181, %178
  %gen13 = fmul float %_12, %178
  %182 = fdiv float %181, %178
  store float %182, float* %180, align 4
  %183 = load float, float* %21, align 4
  %184 = load float*, float** %9, align 8
  %185 = getelementptr inbounds float, float* %184, i64 3
  %186 = load float, float* %185, align 4
  %_14 = fsub float %186, %183
  %gen15 = fmul float %_14, %183
  %_16 = fsub float %186, %183
  %gen17 = fmul float %_16, %183
  %187 = fdiv float %186, %183
  store float %187, float* %185, align 4
  %188 = load float, float* %21, align 4
  %189 = load float*, float** %9, align 8
  %190 = getelementptr inbounds float, float* %189, i64 4
  %191 = load float, float* %190, align 4
  %_18 = fsub float %191, %188
  %gen19 = fmul float %_18, %188
  %_20 = fsub float -0.000000e+00, %191
  %gen21 = fadd float %_20, %188
  %_22 = fsub float -0.000000e+00, %191
  %gen23 = fadd float %_22, %188
  %_24 = fsub float %191, %188
  %gen25 = fmul float %_24, %188
  %_26 = fsub float %191, %188
  %gen27 = fmul float %_26, %188
  %_28 = fsub float -0.000000e+00, %191
  %gen29 = fadd float %_28, %188
  %_30 = fsub float %191, %188
  %gen31 = fmul float %_30, %188
  %192 = fdiv float %191, %188
  store float %192, float* %190, align 4
  br label %originalBB1
}

declare %"struct.pov::Texture_Struct"* @_ZN3pov12material_mapEPdPNS_14Texture_StructE(double*, %"struct.pov::Texture_Struct"*) #2

; Function Attrs: noinline uwtable
define internal void @_ZN3povL25compute_backtrace_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryE(float*, %"struct.pov::Texture_Struct"*, double*, double*, %"struct.pov::Ray_Struct"*, double, %"struct.pov::istk_entry"*) #0 {
  %8 = alloca float*, align 8
  %9 = alloca %"struct.pov::Texture_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Ray_Struct"*, align 8
  %13 = alloca double, align 8
  %14 = alloca %"struct.pov::istk_entry"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca [3 x double], align 16
  %26 = alloca [3 x double], align 16
  %27 = alloca [5 x float], align 16
  %28 = alloca [5 x float], align 16
  %29 = alloca [5 x float], align 16
  %30 = alloca [5 x float], align 16
  %31 = alloca [5 x float], align 16
  %32 = alloca [5 x float], align 16
  %33 = alloca %"struct.pov::Interior_Struct"*, align 8
  %34 = alloca %"struct.pov::Texture_Struct"*, align 8
  %35 = alloca %"struct.pov::Ray_Struct", align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca double, align 8
  %40 = alloca double, align 8
  %41 = alloca double, align 8
  %42 = alloca double, align 8
  %43 = alloca double, align 8
  %44 = alloca double, align 8
  %45 = alloca i32, align 4
  %46 = alloca %"struct.pov::Media_Struct"**, align 8
  %47 = alloca %"struct.pov::Media_Struct"**, align 8
  %48 = alloca double, align 8
  %49 = alloca i32, align 4
  %50 = alloca %"struct.pov::ComTexData_Struct"*, align 8
  %51 = alloca double*, align 8
  %52 = alloca [3 x double]*, align 8
  %53 = alloca [5 x float]*, align 8
  %54 = alloca float*, align 8
  %55 = alloca %"struct.pov::Ray_Struct", align 8
  %56 = alloca double, align 8
  %57 = alloca double, align 8
  %58 = alloca double, align 8
  %59 = alloca double, align 8
  %60 = alloca double, align 8
  %61 = alloca double, align 8
  %62 = alloca double, align 8
  %63 = alloca double, align 8
  %64 = alloca double, align 8
  %65 = alloca double, align 8
  %66 = alloca double, align 8
  %67 = alloca double, align 8
  %68 = alloca double, align 8
  %69 = alloca double, align 8
  %70 = alloca double, align 8
  %71 = alloca double, align 8
  %72 = alloca double, align 8
  %73 = alloca double, align 8
  %74 = alloca double, align 8
  %75 = alloca double, align 8
  %76 = alloca double, align 8
  store float* %0, float** %8, align 8
  store %"struct.pov::Texture_Struct"* %1, %"struct.pov::Texture_Struct"** %9, align 8
  store double* %2, double** %10, align 8
  store double* %3, double** %11, align 8
  store %"struct.pov::Ray_Struct"* %4, %"struct.pov::Ray_Struct"** %12, align 8
  store double %5, double* %13, align 8
  store %"struct.pov::istk_entry"* %6, %"struct.pov::istk_entry"** %14, align 8
  %77 = call %"struct.pov::ComTexData_Struct"* @_ZN3pov13NewComTexDataEv()
  store %"struct.pov::ComTexData_Struct"* %77, %"struct.pov::ComTexData_Struct"** %50, align 8
  %78 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %50, align 8
  %79 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %78, i32 0, i32 2
  %80 = getelementptr inbounds [100 x double], [100 x double]* %79, i32 0, i32 0
  store double* %80, double** %51, align 8
  %81 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %50, align 8
  %82 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %81, i32 0, i32 3
  %83 = getelementptr inbounds [100 x [3 x double]], [100 x [3 x double]]* %82, i32 0, i32 0
  store [3 x double]* %83, [3 x double]** %52, align 8
  %84 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %50, align 8
  %85 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %84, i32 0, i32 4
  %86 = getelementptr inbounds [100 x [5 x float]], [100 x [5 x float]]* %85, i32 0, i32 0
  store [5 x float]* %86, [5 x float]** %53, align 8
  %87 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %50, align 8
  %88 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %87, i32 0, i32 5
  %89 = getelementptr inbounds [100 x float], [100 x float]* %88, i32 0, i32 0
  store float* %89, float** %54, align 8
  %90 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  call void @_ZN3pov12Make_ColourAEPffffff(float* %90, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %91 = getelementptr inbounds [5 x float], [5 x float]* %28, i32 0, i32 0
  call void @_ZN3pov12Make_ColourAEPffffff(float* %91, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00)
  store double 1.000000e+00, double* %24, align 8
  %92 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %35, i32 0, i32 0
  %93 = getelementptr inbounds [3 x double], [3 x double]* %92, i32 0, i32 0
  %94 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %95 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %94, i32 0, i32 1
  %96 = getelementptr inbounds [3 x double], [3 x double]* %95, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %93, double* %96)
  %97 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %35, %"struct.pov::Ray_Struct"* %97)
  %98 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %99 = zext i32 %98 to i64
  %100 = and i64 %99, 128
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %321

; <label>:102:                                    ; preds = %7
  %103 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %104 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %103, i32 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp sgt i32 %105, -1
  br i1 %106, label %107, label %321

; <label>:107:                                    ; preds = %102
  %108 = load i32, i32* @x.83
  %109 = load i32, i32* @y.84
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %107
  store i32 1, i32* %45, align 4
  store i32 0, i32* %15, align 4
  %116 = load i32, i32* @x.83
  %117 = load i32, i32* @y.84
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %124

; <label>:124:                                    ; preds = %158, %originalBBpart2
  %125 = load i32, i32* @x.83
  %126 = load i32, i32* @y.84
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %124
  %133 = load i32, i32* %15, align 4
  %134 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %135 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %134, i32 0, i32 2
  %136 = load i32, i32* %135, align 8
  %137 = icmp sle i32 %133, %136
  %138 = load i32, i32* @x.83
  %139 = load i32, i32* @y.84
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %137, label %146, label %161

; <label>:146:                                    ; preds = %originalBBpart24
  %147 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %148 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %147, i32 0, i32 4
  %149 = load i32, i32* %15, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %148, i64 0, i64 %150
  %152 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %151, align 8
  %153 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %157, label %156

; <label>:156:                                    ; preds = %146
  store i32 0, i32* %45, align 4
  br label %161

; <label>:157:                                    ; preds = %146
  br label %158

; <label>:158:                                    ; preds = %157
  %159 = load i32, i32* %15, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %15, align 4
  br label %124

; <label>:161:                                    ; preds = %156, %originalBBpart24
  %162 = load i32, i32* %45, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %320

; <label>:164:                                    ; preds = %161
  %165 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %166 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %165, i32 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = add nsw i32 %167, 2
  %169 = sext i32 %168 to i64
  %170 = mul i64 %169, 8
  %171 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %170, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4629, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %172 = bitcast i8* %171 to %"struct.pov::Media_Struct"**
  store %"struct.pov::Media_Struct"** %172, %"struct.pov::Media_Struct"*** %46, align 8
  %173 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %46, align 8
  store %"struct.pov::Media_Struct"** %173, %"struct.pov::Media_Struct"*** %47, align 8
  store i32 0, i32* %15, align 4
  br label %174

; <label>:174:                                    ; preds = %262, %164
  %175 = load i32, i32* %15, align 4
  %176 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %177 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %176, i32 0, i32 2
  %178 = load i32, i32* %177, align 8
  %179 = icmp sle i32 %175, %178
  br i1 %179, label %180, label %265

; <label>:180:                                    ; preds = %174
  %181 = load i32, i32* @x.83
  %182 = load i32, i32* @y.84
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %180
  %189 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %190 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %189, i32 0, i32 4
  %191 = load i32, i32* %15, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %190, i64 0, i64 %192
  %194 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %193, align 8
  %195 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp ne i32 %196, 0
  %198 = load i32, i32* @x.83
  %199 = load i32, i32* @y.84
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %197, label %206, label %261

; <label>:206:                                    ; preds = %originalBBpart28
  %207 = load i32, i32* @x.83
  %208 = load i32, i32* @y.84
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %206
  %215 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %216 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %215, i32 0, i32 4
  %217 = load i32, i32* %15, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %216, i64 0, i64 %218
  %220 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %219, align 8
  %221 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %220, i32 0, i32 10
  %222 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %221, align 8
  %223 = icmp ne %"struct.pov::Media_Struct"* %222, null
  %224 = load i32, i32* @x.83
  %225 = load i32, i32* @y.84
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %223, label %232, label %244

; <label>:232:                                    ; preds = %originalBBpart212
  %233 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %234 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %233, i32 0, i32 4
  %235 = load i32, i32* %15, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %234, i64 0, i64 %236
  %238 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %237, align 8
  %239 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %238, i32 0, i32 10
  %240 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %239, align 8
  %241 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %47, align 8
  store %"struct.pov::Media_Struct"* %240, %"struct.pov::Media_Struct"** %241, align 8
  %242 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %47, align 8
  %243 = getelementptr inbounds %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %242, i32 1
  store %"struct.pov::Media_Struct"** %243, %"struct.pov::Media_Struct"*** %47, align 8
  br label %244

; <label>:244:                                    ; preds = %232, %originalBBpart212
  %245 = load i32, i32* @x.83
  %246 = load i32, i32* @y.84
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %244
  %253 = load i32, i32* @x.83
  %254 = load i32, i32* @y.84
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %261

; <label>:261:                                    ; preds = %originalBBpart216, %originalBBpart28
  br label %262

; <label>:262:                                    ; preds = %261
  %263 = load i32, i32* %15, align 4
  %264 = add nsw i32 %263, 1
  store i32 %264, i32* %15, align 4
  br label %174

; <label>:265:                                    ; preds = %174
  %266 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %47, align 8
  store %"struct.pov::Media_Struct"* null, %"struct.pov::Media_Struct"** %266, align 8
  %267 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %268 = icmp sgt i32 %267, 1
  br i1 %268, label %269, label %296

; <label>:269:                                    ; preds = %265
  %270 = load i32, i32* @x.83
  %271 = load i32, i32* @y.84
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %269
  %278 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 24), align 4
  %279 = icmp ne i32 %278, 0
  %280 = load i32, i32* @x.83
  %281 = load i32, i32* @y.84
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %279, label %296, label %288

; <label>:288:                                    ; preds = %originalBBpart220
  %289 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 31), align 8
  %290 = icmp sgt i32 %289, 0
  br i1 %290, label %291, label %296

; <label>:291:                                    ; preds = %288
  %292 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %46, align 8
  %293 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %294 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %295 = load float*, float** %8, align 8
  call void @_ZN3pov24Backtrace_Simulate_MediaEPPNS_12Media_StructEPNS_10Ray_StructEPNS_10istk_entryEPf(%"struct.pov::Media_Struct"** %292, %"struct.pov::Ray_Struct"* %293, %"struct.pov::istk_entry"* %294, float* %295)
  br label %317

; <label>:296:                                    ; preds = %288, %originalBBpart220, %265
  %297 = load i32, i32* @x.83
  %298 = load i32, i32* @y.84
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %296
  %305 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %46, align 8
  %306 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %307 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %308 = load float*, float** %8, align 8
  call void @_ZN3pov14Simulate_MediaEPPNS_12Media_StructEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Media_Struct"** %305, %"struct.pov::Ray_Struct"* %306, %"struct.pov::istk_entry"* %307, float* %308, i32 1)
  %309 = load i32, i32* @x.83
  %310 = load i32, i32* @y.84
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %317

; <label>:317:                                    ; preds = %originalBBpart224, %291
  %318 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %46, align 8
  %319 = bitcast %"struct.pov::Media_Struct"** %318 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %319, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4664)
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %46, align 8
  br label %320

; <label>:320:                                    ; preds = %317, %161
  br label %321

; <label>:321:                                    ; preds = %320, %102, %7
  %322 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %323 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %322, i32 0, i32 5
  %324 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %323, align 8
  %325 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %324, i32 0, i32 5
  %326 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %325, align 8
  store %"struct.pov::Interior_Struct"* %326, %"struct.pov::Interior_Struct"** %33, align 8
  %327 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %328 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %327, i32 0, i32 6
  %329 = load float, float* %328, align 8
  %330 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  store float %329, float* %330, align 8
  %331 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  store float %329, float* %331, align 4
  %332 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  store float %329, float* %332, align 16
  %333 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %334 = icmp ne %"struct.pov::Interior_Struct"* %333, null
  br i1 %334, label %335, label %548

; <label>:335:                                    ; preds = %321
  %336 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %337 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %338 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %336, %"struct.pov::Interior_Struct"* %337)
  %339 = icmp sge i32 %338, 0
  br i1 %339, label %340, label %547

; <label>:340:                                    ; preds = %335
  %341 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %342 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %341, i32 0, i32 8
  %343 = load float, float* %342, align 8
  %344 = fpext float %343 to double
  %345 = fcmp ogt double %344, 0.000000e+00
  br i1 %345, label %346, label %530

; <label>:346:                                    ; preds = %340
  %347 = load i32, i32* @x.83
  %348 = load i32, i32* @y.84
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %346
  %355 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %356 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %355, i32 0, i32 7
  %357 = load float, float* %356, align 4
  %358 = call float @_ZSt4fabsf(float %357)
  %359 = fpext float %358 to double
  %360 = fcmp ogt double %359, 1.000000e-07
  %361 = load i32, i32* @x.83
  %362 = load i32, i32* @y.84
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %360, label %369, label %530

; <label>:369:                                    ; preds = %originalBBpart228
  %370 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %371 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %370, i32 0, i32 8
  %372 = load float, float* %371, align 8
  %373 = fcmp oge float %372, 1.000000e+03
  br i1 %373, label %374, label %441

; <label>:374:                                    ; preds = %369
  %375 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %376 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %375, i32 0, i32 9
  %377 = getelementptr inbounds [5 x float], [5 x float]* %376, i64 0, i64 0
  %378 = load float, float* %377, align 4
  %379 = fpext float %378 to double
  %380 = fsub double 1.000000e+00, %379
  %381 = fsub double -0.000000e+00, %380
  %382 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %383 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %382, i32 0, i32 0
  %384 = load double, double* %383, align 8
  %385 = fmul double %381, %384
  %386 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %387 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %386, i32 0, i32 7
  %388 = load float, float* %387, align 4
  %389 = fpext float %388 to double
  %390 = fdiv double %385, %389
  %391 = call double @exp(double %390) #7
  %392 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %393 = load float, float* %392, align 16
  %394 = fpext float %393 to double
  %395 = fmul double %394, %391
  %396 = fptrunc double %395 to float
  store float %396, float* %392, align 16
  %397 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %398 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %397, i32 0, i32 9
  %399 = getelementptr inbounds [5 x float], [5 x float]* %398, i64 0, i64 1
  %400 = load float, float* %399, align 4
  %401 = fpext float %400 to double
  %402 = fsub double 1.000000e+00, %401
  %403 = fsub double -0.000000e+00, %402
  %404 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %405 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %404, i32 0, i32 0
  %406 = load double, double* %405, align 8
  %407 = fmul double %403, %406
  %408 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %409 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %408, i32 0, i32 7
  %410 = load float, float* %409, align 4
  %411 = fpext float %410 to double
  %412 = fdiv double %407, %411
  %413 = call double @exp(double %412) #7
  %414 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %415 = load float, float* %414, align 4
  %416 = fpext float %415 to double
  %417 = fmul double %416, %413
  %418 = fptrunc double %417 to float
  store float %418, float* %414, align 4
  %419 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %420 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %419, i32 0, i32 9
  %421 = getelementptr inbounds [5 x float], [5 x float]* %420, i64 0, i64 2
  %422 = load float, float* %421, align 4
  %423 = fpext float %422 to double
  %424 = fsub double 1.000000e+00, %423
  %425 = fsub double -0.000000e+00, %424
  %426 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %427 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %426, i32 0, i32 0
  %428 = load double, double* %427, align 8
  %429 = fmul double %425, %428
  %430 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %431 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %430, i32 0, i32 7
  %432 = load float, float* %431, align 4
  %433 = fpext float %432 to double
  %434 = fdiv double %429, %433
  %435 = call double @exp(double %434) #7
  %436 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %437 = load float, float* %436, align 8
  %438 = fpext float %437 to double
  %439 = fmul double %438, %435
  %440 = fptrunc double %439 to float
  store float %440, float* %436, align 8
  br label %513

; <label>:441:                                    ; preds = %369
  %442 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %443 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %442, i32 0, i32 0
  %444 = load double, double* %443, align 8
  %445 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %446 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %445, i32 0, i32 7
  %447 = load float, float* %446, align 4
  %448 = fpext float %447 to double
  %449 = fdiv double %444, %448
  %450 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %451 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %450, i32 0, i32 8
  %452 = load float, float* %451, align 8
  %453 = fpext float %452 to double
  %454 = call double @pow(double %449, double %453) #7
  %455 = fadd double 1.000000e+00, %454
  store double %455, double* %23, align 8
  %456 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %457 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %456, i32 0, i32 9
  %458 = getelementptr inbounds [5 x float], [5 x float]* %457, i64 0, i64 0
  %459 = load float, float* %458, align 4
  %460 = fpext float %459 to double
  %461 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %462 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %461, i32 0, i32 9
  %463 = getelementptr inbounds [5 x float], [5 x float]* %462, i64 0, i64 0
  %464 = load float, float* %463, align 4
  %465 = fpext float %464 to double
  %466 = fsub double 1.000000e+00, %465
  %467 = load double, double* %23, align 8
  %468 = fdiv double %466, %467
  %469 = fadd double %460, %468
  %470 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %471 = load float, float* %470, align 16
  %472 = fpext float %471 to double
  %473 = fmul double %472, %469
  %474 = fptrunc double %473 to float
  store float %474, float* %470, align 16
  %475 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %476 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %475, i32 0, i32 9
  %477 = getelementptr inbounds [5 x float], [5 x float]* %476, i64 0, i64 1
  %478 = load float, float* %477, align 4
  %479 = fpext float %478 to double
  %480 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %481 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %480, i32 0, i32 9
  %482 = getelementptr inbounds [5 x float], [5 x float]* %481, i64 0, i64 1
  %483 = load float, float* %482, align 4
  %484 = fpext float %483 to double
  %485 = fsub double 1.000000e+00, %484
  %486 = load double, double* %23, align 8
  %487 = fdiv double %485, %486
  %488 = fadd double %479, %487
  %489 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %490 = load float, float* %489, align 4
  %491 = fpext float %490 to double
  %492 = fmul double %491, %488
  %493 = fptrunc double %492 to float
  store float %493, float* %489, align 4
  %494 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %495 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %494, i32 0, i32 9
  %496 = getelementptr inbounds [5 x float], [5 x float]* %495, i64 0, i64 2
  %497 = load float, float* %496, align 4
  %498 = fpext float %497 to double
  %499 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %500 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %499, i32 0, i32 9
  %501 = getelementptr inbounds [5 x float], [5 x float]* %500, i64 0, i64 2
  %502 = load float, float* %501, align 4
  %503 = fpext float %502 to double
  %504 = fsub double 1.000000e+00, %503
  %505 = load double, double* %23, align 8
  %506 = fdiv double %504, %505
  %507 = fadd double %498, %506
  %508 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %509 = load float, float* %508, align 8
  %510 = fpext float %509 to double
  %511 = fmul double %510, %507
  %512 = fptrunc double %511 to float
  store float %512, float* %508, align 8
  br label %513

; <label>:513:                                    ; preds = %441, %374
  %514 = load i32, i32* @x.83
  %515 = load i32, i32* @y.84
  %516 = sub i32 %514, 1
  %517 = mul i32 %514, %516
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %519, %520
  br i1 %521, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %513
  %522 = load i32, i32* @x.83
  %523 = load i32, i32* @y.84
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %530

; <label>:530:                                    ; preds = %originalBBpart232, %originalBBpart228, %340
  %531 = load i32, i32* @x.83
  %532 = load i32, i32* @y.84
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %530
  %539 = load i32, i32* @x.83
  %540 = load i32, i32* @y.84
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %547

; <label>:547:                                    ; preds = %originalBBpart236, %335
  br label %548

; <label>:548:                                    ; preds = %547, %321
  %549 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %550 = load float, float* %549, align 16
  %551 = load float*, float** %8, align 8
  %552 = getelementptr inbounds float, float* %551, i64 0
  %553 = load float, float* %552, align 4
  %554 = fmul float %553, %550
  store float %554, float* %552, align 4
  %555 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %556 = load float, float* %555, align 4
  %557 = load float*, float** %8, align 8
  %558 = getelementptr inbounds float, float* %557, i64 1
  %559 = load float, float* %558, align 4
  %560 = fmul float %559, %556
  store float %560, float* %558, align 4
  %561 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %562 = load float, float* %561, align 8
  %563 = load float*, float** %8, align 8
  %564 = getelementptr inbounds float, float* %563, i64 2
  %565 = load float, float* %564, align 4
  %566 = fmul float %565, %562
  store float %566, float* %564, align 4
  %567 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %568 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %567, i32 0, i32 0
  %569 = load double, double* %568, align 8
  %570 = load double, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 17), align 8
  %571 = fadd double %570, %569
  store double %571, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 17), align 8
  %572 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %573 = icmp sgt i32 %572, 1
  br i1 %573, label %574, label %600

; <label>:574:                                    ; preds = %548
  %575 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 24), align 4
  %576 = icmp ne i32 %575, 0
  br i1 %576, label %600, label %577

; <label>:577:                                    ; preds = %574
  %578 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %579 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %578, i32 0, i32 5
  %580 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %579, align 8
  %581 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %580, i32 0, i32 13
  %582 = load i32, i32* %581, align 4
  %583 = zext i32 %582 to i64
  %584 = and i64 %583, 33554432
  %585 = icmp ne i64 %584, 0
  br i1 %585, label %600, label %586

; <label>:586:                                    ; preds = %577
  %587 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %588 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %587, i32 0, i32 5
  %589 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %588, align 8
  %590 = call zeroext i1 @_ZN3pov24Check_Photon_Light_GroupEPNS_13Object_StructE(%"struct.pov::Object_Struct"* %589)
  br i1 %590, label %591, label %600

; <label>:591:                                    ; preds = %586
  %592 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %593 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %592, i32 0, i32 1
  %594 = getelementptr inbounds [3 x double], [3 x double]* %593, i32 0, i32 0
  %595 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %596 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %595, i32 0, i32 0
  %597 = getelementptr inbounds [3 x double], [3 x double]* %596, i32 0, i32 0
  %598 = load float*, float** %8, align 8
  %599 = load double*, double** %11, align 8
  call void @_ZN3pov16addSurfacePhotonEPdS0_PfS0_(double* %594, double* %597, float* %598, double* %599)
  br label %600

; <label>:600:                                    ; preds = %591, %586, %577, %574, %548
  %601 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 23), align 8
  %602 = icmp ne i32 %601, 0
  br i1 %602, label %603, label %636

; <label>:603:                                    ; preds = %600
  %604 = load i32, i32* @x.83
  %605 = load i32, i32* @y.84
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %603
  %612 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %55, %"struct.pov::Ray_Struct"* %612)
  %613 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %55, i32 0, i32 0
  %614 = getelementptr inbounds [3 x double], [3 x double]* %613, i32 0, i32 0
  %615 = load double*, double** %10, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %614, double* %615)
  %616 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %55, i32 0, i32 1
  %617 = getelementptr inbounds [3 x double], [3 x double]* %616, i32 0, i32 0
  %618 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %619 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %618, i32 0, i32 1
  %620 = getelementptr inbounds [3 x double], [3 x double]* %619, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %617, double* %620)
  %621 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %622 = add nsw i32 %621, 1
  store i32 %622, i32* @_ZN3pov11Trace_LevelE, align 4
  %623 = load float*, float** %8, align 8
  %624 = load double, double* %13, align 8
  %625 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %55, float* %623, double %624)
  %626 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %627 = add nsw i32 %626, -1
  store i32 %627, i32* @_ZN3pov11Trace_LevelE, align 4
  %628 = load i32, i32* @x.83
  %629 = load i32, i32* @y.84
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBBpart257, label %originalBB38alteredBB

originalBBpart257:                                ; preds = %originalBB38
  br label %636

; <label>:636:                                    ; preds = %originalBBpart257, %600
  %637 = load i32, i32* @x.83
  %638 = load i32, i32* @y.84
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %636
  store i32 0, i32* %17, align 4
  store i32 0, i32* %16, align 4
  %645 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %9, align 8
  store %"struct.pov::Texture_Struct"* %645, %"struct.pov::Texture_Struct"** %34, align 8
  %646 = load i32, i32* @x.83
  %647 = load i32, i32* @y.84
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %654

; <label>:654:                                    ; preds = %1232, %originalBBpart261
  %655 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %656 = icmp ne %"struct.pov::Texture_Struct"* %655, null
  br i1 %656, label %657, label %677

; <label>:657:                                    ; preds = %654
  %658 = load i32, i32* @x.83
  %659 = load i32, i32* @y.84
  %660 = sub i32 %658, 1
  %661 = mul i32 %658, %660
  %662 = urem i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %663, %664
  br i1 %665, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %657
  %666 = load double, double* %24, align 8
  %667 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %668 = fcmp ogt double %666, %667
  %669 = load i32, i32* @x.83
  %670 = load i32, i32* @y.84
  %671 = sub i32 %669, 1
  %672 = mul i32 %669, %671
  %673 = urem i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %670, 10
  %676 = or i1 %674, %675
  br i1 %676, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %677

; <label>:677:                                    ; preds = %originalBBpart265, %654
  %678 = phi i1 [ false, %654 ], [ %668, %originalBBpart265 ]
  br i1 %678, label %679, label %1239

; <label>:679:                                    ; preds = %677
  %680 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %681 = load double*, double** %11, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %680, double* %681)
  %682 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %683 = zext i32 %682 to i64
  %684 = and i64 %683, 64
  %685 = icmp ne i64 %684, 0
  br i1 %685, label %686, label %837

; <label>:686:                                    ; preds = %679
  %687 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %688 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %687, i32 0, i32 13
  %689 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %688, align 8
  %690 = icmp ne %"struct.pov::Tnormal_Struct"* %689, null
  br i1 %690, label %691, label %837

; <label>:691:                                    ; preds = %686
  %692 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 28), align 8
  %693 = icmp sgt i32 %692, 310
  br i1 %693, label %694, label %797

; <label>:694:                                    ; preds = %691
  store i32 0, i32* %15, align 4
  br label %695

; <label>:695:                                    ; preds = %717, %694
  %696 = load i32, i32* %15, align 4
  %697 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %698 = icmp slt i32 %696, %697
  br i1 %698, label %699, label %720

; <label>:699:                                    ; preds = %695
  %700 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %701 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %702 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %703 = load i32, i32* %15, align 4
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %702, i64 %704
  %706 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %705, align 8
  %707 = bitcast %"struct.pov::Texture_Struct"* %706 to %"struct.pov::Pattern_Struct"*
  %708 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %709 = load i32, i32* %15, align 4
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %708, i64 %710
  %712 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %711, align 8
  %713 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %712, i32 0, i32 2
  %714 = load i16, i16* %713, align 4
  %715 = zext i16 %714 to i32
  %716 = and i32 %715, 8
  call void @_ZN3pov11Warp_NormalEPdS0_PNS_14Pattern_StructEi(double* %700, double* %701, %"struct.pov::Pattern_Struct"* %707, i32 %716)
  br label %717

; <label>:717:                                    ; preds = %699
  %718 = load i32, i32* %15, align 4
  %719 = add nsw i32 %718, 1
  store i32 %719, i32* %15, align 4
  br label %695

; <label>:720:                                    ; preds = %695
  %721 = load i32, i32* @x.83
  %722 = load i32, i32* @y.84
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %720
  %729 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %730 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %731 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %730, i32 0, i32 13
  %732 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %731, align 8
  %733 = load double*, double** %10, align 8
  %734 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %729, %"struct.pov::Tnormal_Struct"* %732, double* %733, %"struct.pov::istk_entry"* %734)
  %735 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %736 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %735, i32 0, i32 13
  %737 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %736, align 8
  %738 = getelementptr inbounds %"struct.pov::Tnormal_Struct", %"struct.pov::Tnormal_Struct"* %737, i32 0, i32 2
  %739 = load i16, i16* %738, align 4
  %740 = zext i16 %739 to i32
  %741 = and i32 %740, 8
  %742 = icmp ne i32 %741, 0
  %743 = load i32, i32* @x.83
  %744 = load i32, i32* @y.84
  %745 = sub i32 %743, 1
  %746 = mul i32 %743, %745
  %747 = urem i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = icmp slt i32 %744, 10
  %750 = or i1 %748, %749
  br i1 %750, label %originalBBpart270, label %originalBB67alteredBB

originalBBpart270:                                ; preds = %originalBB67
  br i1 %742, label %751, label %753

; <label>:751:                                    ; preds = %originalBBpart270
  %752 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %752)
  br label %753

; <label>:753:                                    ; preds = %751, %originalBBpart270
  %754 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %755 = sub nsw i32 %754, 1
  store i32 %755, i32* %15, align 4
  br label %756

; <label>:756:                                    ; preds = %793, %753
  %757 = load i32, i32* @x.83
  %758 = load i32, i32* @y.84
  %759 = sub i32 %757, 1
  %760 = mul i32 %757, %759
  %761 = urem i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %762, %763
  br i1 %764, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %756
  %765 = load i32, i32* %15, align 4
  %766 = icmp sge i32 %765, 0
  %767 = load i32, i32* @x.83
  %768 = load i32, i32* @y.84
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %766, label %775, label %796

; <label>:775:                                    ; preds = %originalBBpart274
  %776 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %777 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %778 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %779 = load i32, i32* %15, align 4
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %778, i64 %780
  %782 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %781, align 8
  %783 = bitcast %"struct.pov::Texture_Struct"* %782 to %"struct.pov::Pattern_Struct"*
  %784 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %785 = load i32, i32* %15, align 4
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %784, i64 %786
  %788 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %787, align 8
  %789 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %788, i32 0, i32 2
  %790 = load i16, i16* %789, align 4
  %791 = zext i16 %790 to i32
  %792 = and i32 %791, 8
  call void @_ZN3pov13UnWarp_NormalEPdS0_PNS_14Pattern_StructEi(double* %776, double* %777, %"struct.pov::Pattern_Struct"* %783, i32 %792)
  br label %793

; <label>:793:                                    ; preds = %775
  %794 = load i32, i32* %15, align 4
  %795 = add nsw i32 %794, -1
  store i32 %795, i32* %15, align 4
  br label %756

; <label>:796:                                    ; preds = %originalBBpart274
  br label %820

; <label>:797:                                    ; preds = %691
  %798 = load i32, i32* @x.83
  %799 = load i32, i32* @y.84
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %797
  %806 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %807 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %808 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %807, i32 0, i32 13
  %809 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %808, align 8
  %810 = load double*, double** %10, align 8
  %811 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %806, %"struct.pov::Tnormal_Struct"* %809, double* %810, %"struct.pov::istk_entry"* %811)
  %812 = load i32, i32* @x.83
  %813 = load i32, i32* @y.84
  %814 = sub i32 %812, 1
  %815 = mul i32 %812, %814
  %816 = urem i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = icmp slt i32 %813, 10
  %819 = or i1 %817, %818
  br i1 %819, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %820

; <label>:820:                                    ; preds = %originalBBpart278, %796
  %821 = load i32, i32* @x.83
  %822 = load i32, i32* @y.84
  %823 = sub i32 %821, 1
  %824 = mul i32 %821, %823
  %825 = urem i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = icmp slt i32 %822, 10
  %828 = or i1 %826, %827
  br i1 %828, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %820
  %829 = load i32, i32* @x.83
  %830 = load i32, i32* @y.84
  %831 = sub i32 %829, 1
  %832 = mul i32 %829, %831
  %833 = urem i32 %832, 2
  %834 = icmp eq i32 %833, 0
  %835 = icmp slt i32 %830, 10
  %836 = or i1 %834, %835
  br i1 %836, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %837

; <label>:837:                                    ; preds = %originalBBpart282, %686, %679
  %838 = load i32, i32* %16, align 4
  %839 = icmp ne i32 %838, 0
  br i1 %839, label %843, label %840

; <label>:840:                                    ; preds = %837
  %841 = getelementptr inbounds [3 x double], [3 x double]* %26, i32 0, i32 0
  %842 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %841, double* %842)
  br label %843

; <label>:843:                                    ; preds = %840, %837
  %844 = load i32, i32* @x.83
  %845 = load i32, i32* @y.84
  %846 = sub i32 %844, 1
  %847 = mul i32 %844, %846
  %848 = urem i32 %847, 2
  %849 = icmp eq i32 %848, 0
  %850 = icmp slt i32 %845, 10
  %851 = or i1 %849, %850
  br i1 %851, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %originalBB84alteredBB, %843
  %852 = load double, double* %13, align 8
  %853 = load double, double* %24, align 8
  %854 = fmul double %852, %853
  store double %854, double* %21, align 8
  %855 = getelementptr inbounds [5 x float], [5 x float]* %27, i32 0, i32 0
  %856 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %857 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %856, i32 0, i32 12
  %858 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %857, align 8
  %859 = load double*, double** %10, align 8
  %860 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %861 = call i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float* %855, %"struct.pov::Pigment_Struct"* %858, double* %859, %"struct.pov::istk_entry"* %860)
  store i32 %861, i32* %18, align 4
  %862 = load double, double* %24, align 8
  store double 1.000000e+00, double* %56, align 8
  %863 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 3
  %864 = load float, float* %863, align 4
  %865 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 4
  %866 = load float, float* %865, align 16
  %867 = fadd float %864, %866
  %868 = fpext float %867 to double
  store double %868, double* %57, align 8
  %869 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %56, double* dereferenceable(8) %57)
  %870 = load double, double* %869, align 8
  %871 = fsub double 1.000000e+00, %870
  %872 = fmul double %862, %871
  store double %872, double* %23, align 8
  %873 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %874 = load float, float* %873, align 16
  %875 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 0
  %876 = load float, float* %875, align 16
  %877 = fmul float %876, %874
  store float %877, float* %875, align 16
  %878 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %879 = load float, float* %878, align 4
  %880 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 1
  %881 = load float, float* %880, align 4
  %882 = fmul float %881, %879
  store float %882, float* %880, align 4
  %883 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %884 = load float, float* %883, align 8
  %885 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 2
  %886 = load float, float* %885, align 8
  %887 = fmul float %886, %884
  store float %887, float* %885, align 8
  %888 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %889 = load double, double* %23, align 8
  %890 = fptrunc double %889 to float
  %891 = getelementptr inbounds [5 x float], [5 x float]* %27, i32 0, i32 0
  call void @_ZN3pov15CRGBAddScaledEqEPffPKf(float* %888, float %890, float* %891)
  %892 = load i32, i32* %18, align 4
  %893 = icmp ne i32 %892, 0
  %894 = load i32, i32* @x.83
  %895 = load i32, i32* @y.84
  %896 = sub i32 %894, 1
  %897 = mul i32 %894, %896
  %898 = urem i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = icmp slt i32 %895, 10
  %901 = or i1 %899, %900
  br i1 %901, label %originalBBpart2130, label %originalBB84alteredBB

originalBBpart2130:                               ; preds = %originalBB84
  br i1 %893, label %902, label %903

; <label>:902:                                    ; preds = %originalBBpart2130
  store i32 1, i32* %17, align 4
  br label %903

; <label>:903:                                    ; preds = %902, %originalBBpart2130
  %904 = load i32, i32* @x.83
  %905 = load i32, i32* @y.84
  %906 = sub i32 %904, 1
  %907 = mul i32 %904, %906
  %908 = urem i32 %907, 2
  %909 = icmp eq i32 %908, 0
  %910 = icmp slt i32 %905, 10
  %911 = or i1 %909, %910
  br i1 %911, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %originalBB132alteredBB, %903
  %912 = load i32, i32* %16, align 4
  %913 = icmp eq i32 %912, 100
  %914 = load i32, i32* @x.83
  %915 = load i32, i32* @y.84
  %916 = sub i32 %914, 1
  %917 = mul i32 %914, %916
  %918 = urem i32 %917, 2
  %919 = icmp eq i32 %918, 0
  %920 = icmp slt i32 %915, 10
  %921 = or i1 %919, %920
  br i1 %921, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br i1 %913, label %922, label %940

; <label>:922:                                    ; preds = %originalBBpart2134
  %923 = load i32, i32* @x.83
  %924 = load i32, i32* @y.84
  %925 = sub i32 %923, 1
  %926 = mul i32 %923, %925
  %927 = urem i32 %926, 2
  %928 = icmp eq i32 %927, 0
  %929 = icmp slt i32 %924, 10
  %930 = or i1 %928, %929
  br i1 %930, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %originalBB136alteredBB, %922
  %931 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i32 0, i32 0))
  %932 = load i32, i32* @x.83
  %933 = load i32, i32* @y.84
  %934 = sub i32 %932, 1
  %935 = mul i32 %932, %934
  %936 = urem i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = icmp slt i32 %933, 10
  %939 = or i1 %937, %938
  br i1 %939, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br label %940

; <label>:940:                                    ; preds = %originalBBpart2138, %originalBBpart2134
  %941 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %942 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %941, i32 0, i32 14
  %943 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %942, align 8
  %944 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %943, i32 0, i32 13
  %945 = load float, float* %944, align 4
  %946 = load float*, float** %54, align 8
  %947 = load i32, i32* %16, align 4
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds float, float* %946, i64 %948
  store float %945, float* %949, align 4
  %950 = load double, double* %21, align 8
  %951 = load double*, double** %51, align 8
  %952 = load i32, i32* %16, align 4
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds double, double* %951, i64 %953
  store double %950, double* %954, align 8
  %955 = load [3 x double]*, [3 x double]** %52, align 8
  %956 = load i32, i32* %16, align 4
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds [3 x double], [3 x double]* %955, i64 %957
  %959 = getelementptr inbounds [3 x double], [3 x double]* %958, i32 0, i32 0
  %960 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %959, double* %960)
  %961 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %962 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %961, i32 0, i32 1
  %963 = getelementptr inbounds [3 x double], [3 x double]* %962, i32 0, i32 0
  %964 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %48, double* %963, double* %964)
  %965 = load double, double* %48, align 8
  %966 = fmul double %965, -1.000000e+00
  store double %966, double* %48, align 8
  %967 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %968 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %967, i32 0, i32 5
  %969 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %968, align 8
  %970 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %969, i32 0, i32 5
  %971 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %970, align 8
  %972 = icmp ne %"struct.pov::Interior_Struct"* %971, null
  br i1 %972, label %996, label %973

; <label>:973:                                    ; preds = %940
  %974 = load i32, i32* @x.83
  %975 = load i32, i32* @y.84
  %976 = sub i32 %974, 1
  %977 = mul i32 %974, %976
  %978 = urem i32 %977, 2
  %979 = icmp eq i32 %978, 0
  %980 = icmp slt i32 %975, 10
  %981 = or i1 %979, %980
  br i1 %981, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %973
  %982 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %983 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %982, i32 0, i32 14
  %984 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %983, align 8
  %985 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %984, i32 0, i32 20
  %986 = load i32, i32* %985, align 4
  %987 = icmp ne i32 %986, 1
  %988 = load i32, i32* @x.83
  %989 = load i32, i32* @y.84
  %990 = sub i32 %988, 1
  %991 = mul i32 %988, %990
  %992 = urem i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = icmp slt i32 %989, 10
  %995 = or i1 %993, %994
  br i1 %995, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br i1 %987, label %996, label %1034

; <label>:996:                                    ; preds = %originalBBpart2142, %940
  %997 = load double*, double** %51, align 8
  %998 = load i32, i32* %16, align 4
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds double, double* %997, i64 %999
  %1001 = load [5 x float]*, [5 x float]** %53, align 8
  %1002 = load i32, i32* %16, align 4
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds [5 x float], [5 x float]* %1001, i64 %1003
  %1005 = getelementptr inbounds [5 x float], [5 x float]* %1004, i32 0, i32 0
  %1006 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1007 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1006, i32 0, i32 14
  %1008 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1007, align 8
  %1009 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1008, i32 0, i32 17
  %1010 = getelementptr inbounds [3 x float], [3 x float]* %1009, i32 0, i32 0
  %1011 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1012 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1011, i32 0, i32 14
  %1013 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1012, align 8
  %1014 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1013, i32 0, i32 18
  %1015 = getelementptr inbounds [3 x float], [3 x float]* %1014, i32 0, i32 0
  %1016 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1017 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1016, i32 0, i32 14
  %1018 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1017, align 8
  %1019 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1018, i32 0, i32 20
  %1020 = load i32, i32* %1019, align 4
  %1021 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1022 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1021, i32 0, i32 14
  %1023 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1022, align 8
  %1024 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1023, i32 0, i32 19
  %1025 = load float, float* %1024, align 4
  %1026 = fpext float %1025 to double
  %1027 = load double, double* %48, align 8
  %1028 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1029 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1030 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1029, i32 0, i32 5
  %1031 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %1030, align 8
  %1032 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %1031, i32 0, i32 5
  %1033 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %1032, align 8
  call void @_ZN3povL22determine_reflectivityEPdPfS1_S1_iddPNS_10Ray_StructEPNS_15Interior_StructE(double* %1000, float* %1005, float* %1010, float* %1015, i32 %1020, double %1026, double %1027, %"struct.pov::Ray_Struct"* %1028, %"struct.pov::Interior_Struct"* %1033)
  br label %1036

; <label>:1034:                                   ; preds = %originalBBpart2142
  %1035 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i32 0, i32 0))
  br label %1036

; <label>:1036:                                   ; preds = %1034, %996
  %1037 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1038 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1037, i32 0, i32 14
  %1039 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1038, align 8
  %1040 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1039, i32 0, i32 21
  %1041 = load float, float* %1040, align 4
  %1042 = fpext float %1041 to double
  %1043 = fcmp une double %1042, 0.000000e+00
  br i1 %1043, label %1044, label %1120

; <label>:1044:                                   ; preds = %1036
  %1045 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1046 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1045, i32 0, i32 14
  %1047 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1046, align 8
  %1048 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1047, i32 0, i32 21
  %1049 = load float, float* %1048, align 4
  %1050 = fpext float %1049 to double
  store double %1050, double* %58, align 8
  %1051 = load double, double* %48, align 8
  %1052 = call double @acos(double %1051) #7
  %1053 = call double @fabs(double %1052) #5
  %1054 = fdiv double %1053, 0x3FF921FB54442D18
  store double %1054, double* %59, align 8
  %1055 = load double, double* %59, align 8
  %1056 = fsub double %1055, 1.120000e+00
  %1057 = call double @_ZN3pov3SqrEd(double %1056)
  %1058 = fdiv double 0x3F8DD56BD7BF6F16, %1057
  %1059 = fsub double %1058, 0x3F87C88174C5E0DC
  store double %1059, double* %60, align 8
  store double 1.000000e+00, double* %61, align 8
  store double 0.000000e+00, double* %62, align 8
  %1060 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %62, double* dereferenceable(8) %60)
  %1061 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %61, double* dereferenceable(8) %1060)
  %1062 = load double, double* %1061, align 8
  store double %1062, double* %60, align 8
  %1063 = load double, double* %58, align 8
  %1064 = load double, double* %60, align 8
  %1065 = fsub double 1.000000e+00, %1064
  %1066 = fmul double %1063, %1065
  %1067 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 0
  %1068 = load float, float* %1067, align 16
  %1069 = fpext float %1068 to double
  %1070 = fsub double %1069, 1.000000e+00
  %1071 = fmul double %1066, %1070
  %1072 = fadd double 1.000000e+00, %1071
  %1073 = load [5 x float]*, [5 x float]** %53, align 8
  %1074 = load i32, i32* %16, align 4
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds [5 x float], [5 x float]* %1073, i64 %1075
  %1077 = getelementptr inbounds [5 x float], [5 x float]* %1076, i64 0, i64 0
  %1078 = load float, float* %1077, align 4
  %1079 = fpext float %1078 to double
  %1080 = fmul double %1079, %1072
  %1081 = fptrunc double %1080 to float
  store float %1081, float* %1077, align 4
  %1082 = load double, double* %58, align 8
  %1083 = load double, double* %60, align 8
  %1084 = fsub double 1.000000e+00, %1083
  %1085 = fmul double %1082, %1084
  %1086 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 1
  %1087 = load float, float* %1086, align 4
  %1088 = fpext float %1087 to double
  %1089 = fsub double %1088, 1.000000e+00
  %1090 = fmul double %1085, %1089
  %1091 = fadd double 1.000000e+00, %1090
  %1092 = load [5 x float]*, [5 x float]** %53, align 8
  %1093 = load i32, i32* %16, align 4
  %1094 = sext i32 %1093 to i64
  %1095 = getelementptr inbounds [5 x float], [5 x float]* %1092, i64 %1094
  %1096 = getelementptr inbounds [5 x float], [5 x float]* %1095, i64 0, i64 1
  %1097 = load float, float* %1096, align 4
  %1098 = fpext float %1097 to double
  %1099 = fmul double %1098, %1091
  %1100 = fptrunc double %1099 to float
  store float %1100, float* %1096, align 4
  %1101 = load double, double* %58, align 8
  %1102 = load double, double* %60, align 8
  %1103 = fsub double 1.000000e+00, %1102
  %1104 = fmul double %1101, %1103
  %1105 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 2
  %1106 = load float, float* %1105, align 8
  %1107 = fpext float %1106 to double
  %1108 = fsub double %1107, 1.000000e+00
  %1109 = fmul double %1104, %1108
  %1110 = fadd double 1.000000e+00, %1109
  %1111 = load [5 x float]*, [5 x float]** %53, align 8
  %1112 = load i32, i32* %16, align 4
  %1113 = sext i32 %1112 to i64
  %1114 = getelementptr inbounds [5 x float], [5 x float]* %1111, i64 %1113
  %1115 = getelementptr inbounds [5 x float], [5 x float]* %1114, i64 0, i64 2
  %1116 = load float, float* %1115, align 4
  %1117 = fpext float %1116 to double
  %1118 = fmul double %1117, %1110
  %1119 = fptrunc double %1118 to float
  store float %1119, float* %1115, align 4
  br label %1120

; <label>:1120:                                   ; preds = %1044, %1036
  %1121 = load i32, i32* %18, align 4
  %1122 = icmp ne i32 %1121, 0
  br i1 %1122, label %1123, label %1210

; <label>:1123:                                   ; preds = %1120
  %1124 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 0
  %1125 = load float, float* %1124, align 16
  %1126 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 3
  %1127 = load float, float* %1126, align 4
  %1128 = fmul float %1125, %1127
  %1129 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 4
  %1130 = load float, float* %1129, align 16
  %1131 = fadd float %1128, %1130
  %1132 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %1133 = load float, float* %1132, align 16
  %1134 = fmul float %1133, %1131
  store float %1134, float* %1132, align 16
  %1135 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 1
  %1136 = load float, float* %1135, align 4
  %1137 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 3
  %1138 = load float, float* %1137, align 4
  %1139 = fmul float %1136, %1138
  %1140 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 4
  %1141 = load float, float* %1140, align 16
  %1142 = fadd float %1139, %1141
  %1143 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %1144 = load float, float* %1143, align 4
  %1145 = fmul float %1144, %1142
  store float %1145, float* %1143, align 4
  %1146 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 2
  %1147 = load float, float* %1146, align 8
  %1148 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 3
  %1149 = load float, float* %1148, align 4
  %1150 = fmul float %1147, %1149
  %1151 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 4
  %1152 = load float, float* %1151, align 16
  %1153 = fadd float %1150, %1152
  %1154 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %1155 = load float, float* %1154, align 8
  %1156 = fmul float %1155, %1153
  store float %1156, float* %1154, align 8
  %1157 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1158 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1157, i32 0, i32 14
  %1159 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1158, align 8
  %1160 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1159, i32 0, i32 22
  %1161 = load i32, i32* %1160, align 4
  %1162 = icmp ne i32 %1161, 0
  br i1 %1162, label %1163, label %1209

; <label>:1163:                                   ; preds = %1123
  store double 1.000000e+00, double* %63, align 8
  %1164 = load [5 x float]*, [5 x float]** %53, align 8
  %1165 = load i32, i32* %16, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds [5 x float], [5 x float]* %1164, i64 %1166
  %1168 = getelementptr inbounds [5 x float], [5 x float]* %1167, i64 0, i64 0
  %1169 = load float, float* %1168, align 4
  %1170 = fpext float %1169 to double
  %1171 = fsub double 1.000000e+00, %1170
  store double %1171, double* %64, align 8
  %1172 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %63, double* dereferenceable(8) %64)
  %1173 = load double, double* %1172, align 8
  %1174 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %1175 = load float, float* %1174, align 16
  %1176 = fpext float %1175 to double
  %1177 = fmul double %1176, %1173
  %1178 = fptrunc double %1177 to float
  store float %1178, float* %1174, align 16
  store double 1.000000e+00, double* %65, align 8
  %1179 = load [5 x float]*, [5 x float]** %53, align 8
  %1180 = load i32, i32* %16, align 4
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds [5 x float], [5 x float]* %1179, i64 %1181
  %1183 = getelementptr inbounds [5 x float], [5 x float]* %1182, i64 0, i64 1
  %1184 = load float, float* %1183, align 4
  %1185 = fpext float %1184 to double
  %1186 = fsub double 1.000000e+00, %1185
  store double %1186, double* %66, align 8
  %1187 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %65, double* dereferenceable(8) %66)
  %1188 = load double, double* %1187, align 8
  %1189 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %1190 = load float, float* %1189, align 4
  %1191 = fpext float %1190 to double
  %1192 = fmul double %1191, %1188
  %1193 = fptrunc double %1192 to float
  store float %1193, float* %1189, align 4
  store double 1.000000e+00, double* %67, align 8
  %1194 = load [5 x float]*, [5 x float]** %53, align 8
  %1195 = load i32, i32* %16, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds [5 x float], [5 x float]* %1194, i64 %1196
  %1198 = getelementptr inbounds [5 x float], [5 x float]* %1197, i64 0, i64 2
  %1199 = load float, float* %1198, align 4
  %1200 = fpext float %1199 to double
  %1201 = fsub double 1.000000e+00, %1200
  store double %1201, double* %68, align 8
  %1202 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %67, double* dereferenceable(8) %68)
  %1203 = load double, double* %1202, align 8
  %1204 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %1205 = load float, float* %1204, align 8
  %1206 = fpext float %1205 to double
  %1207 = fmul double %1206, %1203
  %1208 = fptrunc double %1207 to float
  store float %1208, float* %1204, align 8
  br label %1209

; <label>:1209:                                   ; preds = %1163, %1123
  br label %1210

; <label>:1210:                                   ; preds = %1209, %1120
  store double 1.000000e+00, double* %69, align 8
  %1211 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 3
  %1212 = load float, float* %1211, align 4
  %1213 = fpext float %1212 to double
  %1214 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %1215 = load float, float* %1214, align 16
  %1216 = fpext float %1215 to double
  %1217 = fmul double 2.970000e-01, %1216
  %1218 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %1219 = load float, float* %1218, align 4
  %1220 = fpext float %1219 to double
  %1221 = fmul double 5.890000e-01, %1220
  %1222 = fadd double %1217, %1221
  %1223 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %1224 = load float, float* %1223, align 8
  %1225 = fpext float %1224 to double
  %1226 = fmul double 1.140000e-01, %1225
  %1227 = fadd double %1222, %1226
  %1228 = fmul double %1213, %1227
  %1229 = call double @fabs(double %1228) #5
  store double %1229, double* %70, align 8
  %1230 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %69, double* dereferenceable(8) %70)
  %1231 = load double, double* %1230, align 8
  store double %1231, double* %24, align 8
  br label %1232

; <label>:1232:                                   ; preds = %1210
  %1233 = load i32, i32* %16, align 4
  %1234 = add nsw i32 %1233, 1
  store i32 %1234, i32* %16, align 4
  %1235 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %1236 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1235, i32 0, i32 8
  %1237 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %1236, align 8
  %1238 = bitcast %"struct.pov::Pattern_Struct"* %1237 to %"struct.pov::Texture_Struct"*
  store %"struct.pov::Texture_Struct"* %1238, %"struct.pov::Texture_Struct"** %34, align 8
  br label %654

; <label>:1239:                                   ; preds = %677
  %1240 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 18), align 8
  %1241 = icmp ne %"struct.pov::Object_Struct"* %1240, null
  br i1 %1241, label %1242, label %1243

; <label>:1242:                                   ; preds = %1239
  store i32 1, i32* %36, align 4
  store i32 1, i32* %38, align 4
  store i32 0, i32* %37, align 4
  br label %1436

; <label>:1243:                                   ; preds = %1239
  store double 0.000000e+00, double* %71, align 8
  %1244 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 0
  %1245 = load float, float* %1244, align 16
  %1246 = fpext float %1245 to double
  %1247 = fmul double 2.970000e-01, %1246
  %1248 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 1
  %1249 = load float, float* %1248, align 4
  %1250 = fpext float %1249 to double
  %1251 = fmul double 5.890000e-01, %1250
  %1252 = fadd double %1247, %1251
  %1253 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 2
  %1254 = load float, float* %1253, align 8
  %1255 = fpext float %1254 to double
  %1256 = fmul double 1.140000e-01, %1255
  %1257 = fadd double %1252, %1256
  %1258 = call double @fabs(double %1257) #5
  store double %1258, double* %72, align 8
  %1259 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %71, double* dereferenceable(8) %72)
  %1260 = load double, double* %1259, align 8
  store double %1260, double* %41, align 8
  %1261 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %9, align 8
  %1262 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1261, i32 0, i32 14
  %1263 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1262, align 8
  %1264 = icmp ne %"struct.pov::Finish_Struct"* %1263, null
  br i1 %1264, label %1265, label %1290

; <label>:1265:                                   ; preds = %1243
  %1266 = load i32, i32* @x.83
  %1267 = load i32, i32* @y.84
  %1268 = sub i32 %1266, 1
  %1269 = mul i32 %1266, %1268
  %1270 = urem i32 %1269, 2
  %1271 = icmp eq i32 %1270, 0
  %1272 = icmp slt i32 %1267, 10
  %1273 = or i1 %1271, %1272
  br i1 %1273, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %originalBB144alteredBB, %1265
  %1274 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %9, align 8
  %1275 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1274, i32 0, i32 14
  %1276 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %1275, align 8
  %1277 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %1276, i32 0, i32 0
  %1278 = load float, float* %1277, align 4
  %1279 = fpext float %1278 to double
  %1280 = load double, double* %41, align 8
  %1281 = fmul double %1280, %1279
  store double %1281, double* %41, align 8
  %1282 = load i32, i32* @x.83
  %1283 = load i32, i32* @y.84
  %1284 = sub i32 %1282, 1
  %1285 = mul i32 %1282, %1284
  %1286 = urem i32 %1285, 2
  %1287 = icmp eq i32 %1286, 0
  %1288 = icmp slt i32 %1283, 10
  %1289 = or i1 %1287, %1288
  br i1 %1289, label %originalBBpart2154, label %originalBB144alteredBB

originalBBpart2154:                               ; preds = %originalBB144
  br label %1290

; <label>:1290:                                   ; preds = %originalBBpart2154, %1243
  %1291 = load double, double* %24, align 8
  store double %1291, double* %40, align 8
  store double 0.000000e+00, double* %73, align 8
  %1292 = load [5 x float]*, [5 x float]** %53, align 8
  %1293 = getelementptr inbounds [5 x float], [5 x float]* %1292, i64 0
  %1294 = getelementptr inbounds [5 x float], [5 x float]* %1293, i64 0, i64 0
  %1295 = load float, float* %1294, align 4
  %1296 = fpext float %1295 to double
  %1297 = fmul double 2.970000e-01, %1296
  %1298 = load [5 x float]*, [5 x float]** %53, align 8
  %1299 = getelementptr inbounds [5 x float], [5 x float]* %1298, i64 0
  %1300 = getelementptr inbounds [5 x float], [5 x float]* %1299, i64 0, i64 1
  %1301 = load float, float* %1300, align 4
  %1302 = fpext float %1301 to double
  %1303 = fmul double 5.890000e-01, %1302
  %1304 = fadd double %1297, %1303
  %1305 = load [5 x float]*, [5 x float]** %53, align 8
  %1306 = getelementptr inbounds [5 x float], [5 x float]* %1305, i64 0
  %1307 = getelementptr inbounds [5 x float], [5 x float]* %1306, i64 0, i64 2
  %1308 = load float, float* %1307, align 4
  %1309 = fpext float %1308 to double
  %1310 = fmul double 1.140000e-01, %1309
  %1311 = fadd double %1304, %1310
  %1312 = call double @fabs(double %1311) #5
  store double %1312, double* %74, align 8
  %1313 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %73, double* dereferenceable(8) %74)
  %1314 = load double, double* %1313, align 8
  store double %1314, double* %39, align 8
  store double 0.000000e+00, double* %75, align 8
  %1315 = load double, double* %41, align 8
  %1316 = fsub double 1.000000e+00, %1315
  store double %1316, double* %76, align 8
  %1317 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %75, double* dereferenceable(8) %76)
  %1318 = load double, double* %1317, align 8
  store double %1318, double* %42, align 8
  %1319 = load double, double* %39, align 8
  %1320 = load double, double* %40, align 8
  %1321 = fadd double %1319, %1320
  %1322 = load double, double* %41, align 8
  %1323 = fadd double %1321, %1322
  %1324 = load double, double* %42, align 8
  %1325 = fadd double %1323, %1324
  store double %1325, double* %43, align 8
  %1326 = load double, double* %39, align 8
  %1327 = load double, double* %40, align 8
  %1328 = fadd double %1326, %1327
  %1329 = load double, double* %41, align 8
  %1330 = fadd double %1328, %1329
  %1331 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %1332 = fcmp ogt double %1330, %1331
  br i1 %1332, label %1333, label %1434

; <label>:1333:                                   ; preds = %1290
  %1334 = load i32, i32* @x.83
  %1335 = load i32, i32* @y.84
  %1336 = sub i32 %1334, 1
  %1337 = mul i32 %1334, %1336
  %1338 = urem i32 %1337, 2
  %1339 = icmp eq i32 %1338, 0
  %1340 = icmp slt i32 %1335, 10
  %1341 = or i1 %1339, %1340
  br i1 %1341, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %originalBB156alteredBB, %1333
  %1342 = load double, double* %43, align 8
  %1343 = load double, double* %41, align 8
  %1344 = fdiv double %1343, %1342
  store double %1344, double* %41, align 8
  %1345 = load double, double* %43, align 8
  %1346 = load double, double* %40, align 8
  %1347 = fdiv double %1346, %1345
  store double %1347, double* %40, align 8
  %1348 = load double, double* %43, align 8
  %1349 = load double, double* %39, align 8
  %1350 = fdiv double %1349, %1348
  store double %1350, double* %39, align 8
  %1351 = load double, double* %43, align 8
  %1352 = load double, double* %42, align 8
  %1353 = fdiv double %1352, %1351
  store double %1353, double* %42, align 8
  %1354 = call i32 @_ZN3pov8POV_RANDEv()
  %1355 = sitofp i32 %1354 to double
  %1356 = fmul double %1355, 0x3F0000200040021E
  store double %1356, double* %44, align 8
  %1357 = load double, double* %44, align 8
  %1358 = load double, double* %41, align 8
  %1359 = fcmp olt double %1357, %1358
  %1360 = load i32, i32* @x.83
  %1361 = load i32, i32* @y.84
  %1362 = sub i32 %1360, 1
  %1363 = mul i32 %1360, %1362
  %1364 = urem i32 %1363, 2
  %1365 = icmp eq i32 %1364, 0
  %1366 = icmp slt i32 %1361, 10
  %1367 = or i1 %1365, %1366
  br i1 %1367, label %originalBBpart2204, label %originalBB156alteredBB

originalBBpart2204:                               ; preds = %originalBB156
  br i1 %1359, label %1368, label %1373

; <label>:1368:                                   ; preds = %originalBBpart2204
  %1369 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %1370 = load double, double* %41, align 8
  %1371 = fdiv double 1.000000e+00, %1370
  %1372 = fptrunc double %1371 to float
  call void @_ZN3pov8VScaleEqEPff(float* %1369, float %1372)
  store i32 0, i32* %36, align 4
  store i32 0, i32* %38, align 4
  store i32 1, i32* %37, align 4
  store i32 0, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 24), align 4
  br label %1433

; <label>:1373:                                   ; preds = %originalBBpart2204
  %1374 = load double, double* %44, align 8
  %1375 = load double, double* %41, align 8
  %1376 = load double, double* %40, align 8
  %1377 = fadd double %1375, %1376
  %1378 = fcmp olt double %1374, %1377
  br i1 %1378, label %1379, label %1384

; <label>:1379:                                   ; preds = %1373
  %1380 = getelementptr inbounds [5 x float], [5 x float]* %28, i32 0, i32 0
  %1381 = load double, double* %40, align 8
  %1382 = fdiv double 1.000000e+00, %1381
  %1383 = fptrunc double %1382 to float
  call void @_ZN3pov8VScaleEqEPff(float* %1380, float %1383)
  store i32 0, i32* %36, align 4
  store i32 1, i32* %38, align 4
  store i32 0, i32* %37, align 4
  store i32 1, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 24), align 4
  br label %1432

; <label>:1384:                                   ; preds = %1373
  %1385 = load i32, i32* @x.83
  %1386 = load i32, i32* @y.84
  %1387 = sub i32 %1385, 1
  %1388 = mul i32 %1385, %1387
  %1389 = urem i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = icmp slt i32 %1386, 10
  %1392 = or i1 %1390, %1391
  br i1 %1392, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1384
  %1393 = load double, double* %44, align 8
  %1394 = load double, double* %41, align 8
  %1395 = load double, double* %40, align 8
  %1396 = fadd double %1394, %1395
  %1397 = load double, double* %39, align 8
  %1398 = fadd double %1396, %1397
  %1399 = fcmp olt double %1393, %1398
  %1400 = load i32, i32* @x.83
  %1401 = load i32, i32* @y.84
  %1402 = sub i32 %1400, 1
  %1403 = mul i32 %1400, %1402
  %1404 = urem i32 %1403, 2
  %1405 = icmp eq i32 %1404, 0
  %1406 = icmp slt i32 %1401, 10
  %1407 = or i1 %1405, %1406
  br i1 %1407, label %originalBBpart2216, label %originalBB206alteredBB

originalBBpart2216:                               ; preds = %originalBB206
  br i1 %1399, label %1408, label %1415

; <label>:1408:                                   ; preds = %originalBBpart2216
  %1409 = load [5 x float]*, [5 x float]** %53, align 8
  %1410 = getelementptr inbounds [5 x float], [5 x float]* %1409, i64 0
  %1411 = getelementptr inbounds [5 x float], [5 x float]* %1410, i32 0, i32 0
  %1412 = load double, double* %39, align 8
  %1413 = fdiv double 1.000000e+00, %1412
  %1414 = fptrunc double %1413 to float
  call void @_ZN3pov8VScaleEqEPff(float* %1411, float %1414)
  store i32 1, i32* %36, align 4
  store i32 0, i32* %38, align 4
  store i32 0, i32* %37, align 4
  store i32 1, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 24), align 4
  br label %1415

; <label>:1415:                                   ; preds = %1408, %originalBBpart2216
  %1416 = load i32, i32* @x.83
  %1417 = load i32, i32* @y.84
  %1418 = sub i32 %1416, 1
  %1419 = mul i32 %1416, %1418
  %1420 = urem i32 %1419, 2
  %1421 = icmp eq i32 %1420, 0
  %1422 = icmp slt i32 %1417, 10
  %1423 = or i1 %1421, %1422
  br i1 %1423, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1415
  %1424 = load i32, i32* @x.83
  %1425 = load i32, i32* @y.84
  %1426 = sub i32 %1424, 1
  %1427 = mul i32 %1424, %1426
  %1428 = urem i32 %1427, 2
  %1429 = icmp eq i32 %1428, 0
  %1430 = icmp slt i32 %1425, 10
  %1431 = or i1 %1429, %1430
  br i1 %1431, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br label %1432

; <label>:1432:                                   ; preds = %originalBBpart2220, %1379
  br label %1433

; <label>:1433:                                   ; preds = %1432, %1368
  br label %1435

; <label>:1434:                                   ; preds = %1290
  store i32 0, i32* %36, align 4
  store i32 0, i32* %38, align 4
  store i32 0, i32* %37, align 4
  br label %1435

; <label>:1435:                                   ; preds = %1434, %1433
  br label %1436

; <label>:1436:                                   ; preds = %1435, %1242
  %1437 = load i32, i32* @x.83
  %1438 = load i32, i32* @y.84
  %1439 = sub i32 %1437, 1
  %1440 = mul i32 %1437, %1439
  %1441 = urem i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = icmp slt i32 %1438, 10
  %1444 = or i1 %1442, %1443
  br i1 %1444, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %1436
  %1445 = load i32, i32* %37, align 4
  %1446 = icmp ne i32 %1445, 0
  %1447 = load i32, i32* @x.83
  %1448 = load i32, i32* @y.84
  %1449 = sub i32 %1447, 1
  %1450 = mul i32 %1447, %1449
  %1451 = urem i32 %1450, 2
  %1452 = icmp eq i32 %1451, 0
  %1453 = icmp slt i32 %1448, 10
  %1454 = or i1 %1452, %1453
  br i1 %1454, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br i1 %1446, label %1455, label %1506

; <label>:1455:                                   ; preds = %originalBBpart2224
  %1456 = load i32, i32* @x.83
  %1457 = load i32, i32* @y.84
  %1458 = sub i32 %1456, 1
  %1459 = mul i32 %1456, %1458
  %1460 = urem i32 %1459, 2
  %1461 = icmp eq i32 %1460, 0
  %1462 = icmp slt i32 %1457, 10
  %1463 = or i1 %1461, %1462
  br i1 %1463, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %originalBB226alteredBB, %1455
  %1464 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %1465 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1466 = load double*, double** %11, align 8
  %1467 = call double @_ZN3pov9spec_randEv()
  %1468 = fmul double %1467, 0x41DFFFFFFFC00000
  %1469 = fptosi double %1468 to i32
  %1470 = srem i32 %1469, 400
  call void @_ZN3pov9ChooseRayEPNS_10Ray_StructEPdS1_S2_i(%"struct.pov::Ray_Struct"* %35, double* %1464, %"struct.pov::Ray_Struct"* %1465, double* %1466, i32 %1470)
  %1471 = load float*, float** %8, align 8
  %1472 = getelementptr inbounds float, float* %1471, i64 0
  %1473 = load float, float* %1472, align 4
  %1474 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 0
  %1475 = load float, float* %1474, align 16
  %1476 = fmul float %1473, %1475
  %1477 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 0
  store float %1476, float* %1477, align 16
  %1478 = load float*, float** %8, align 8
  %1479 = getelementptr inbounds float, float* %1478, i64 1
  %1480 = load float, float* %1479, align 4
  %1481 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 1
  %1482 = load float, float* %1481, align 4
  %1483 = fmul float %1480, %1482
  %1484 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 1
  store float %1483, float* %1484, align 4
  %1485 = load float*, float** %8, align 8
  %1486 = getelementptr inbounds float, float* %1485, i64 2
  %1487 = load float, float* %1486, align 4
  %1488 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 2
  %1489 = load float, float* %1488, align 8
  %1490 = fmul float %1487, %1489
  %1491 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 2
  store float %1490, float* %1491, align 8
  %1492 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %1493 = add nsw i32 %1492, 1
  store i32 %1493, i32* @_ZN3pov11Trace_LevelE, align 4
  %1494 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %1495 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %35, float* %1494, double 1.000000e+00)
  %1496 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %1497 = add nsw i32 %1496, -1
  store i32 %1497, i32* @_ZN3pov11Trace_LevelE, align 4
  %1498 = load i32, i32* @x.83
  %1499 = load i32, i32* @y.84
  %1500 = sub i32 %1498, 1
  %1501 = mul i32 %1498, %1500
  %1502 = urem i32 %1501, 2
  %1503 = icmp eq i32 %1502, 0
  %1504 = icmp slt i32 %1499, 10
  %1505 = or i1 %1503, %1504
  br i1 %1505, label %originalBBpart2271, label %originalBB226alteredBB

originalBBpart2271:                               ; preds = %originalBB226
  br label %1506

; <label>:1506:                                   ; preds = %originalBBpart2271, %originalBBpart2224
  %1507 = load i32, i32* %38, align 4
  %1508 = icmp ne i32 %1507, 0
  br i1 %1508, label %1509, label %1637

; <label>:1509:                                   ; preds = %1506
  store i32 0, i32* %49, align 4
  %1510 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1511 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1510, i32 0, i32 5
  %1512 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %1511, align 8
  %1513 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %1512, i32 0, i32 13
  %1514 = load i32, i32* %1513, align 4
  %1515 = zext i32 %1514 to i64
  %1516 = and i64 %1515, 8388608
  %1517 = icmp ne i64 %1516, 0
  br i1 %1517, label %1518, label %1523

; <label>:1518:                                   ; preds = %1509
  %1519 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %1520 = zext i32 %1519 to i64
  %1521 = and i64 %1520, 16777216
  %1522 = icmp ne i64 %1521, 0
  br i1 %1522, label %1523, label %1556

; <label>:1523:                                   ; preds = %1518, %1509
  %1524 = load i32, i32* @x.83
  %1525 = load i32, i32* @y.84
  %1526 = sub i32 %1524, 1
  %1527 = mul i32 %1524, %1526
  %1528 = urem i32 %1527, 2
  %1529 = icmp eq i32 %1528, 0
  %1530 = icmp slt i32 %1525, 10
  %1531 = or i1 %1529, %1530
  br i1 %1531, label %originalBB273, label %originalBB273alteredBB

originalBB273:                                    ; preds = %originalBB273alteredBB, %1523
  %1532 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1533 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1532, i32 0, i32 5
  %1534 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %1533, align 8
  %1535 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %1534, i32 0, i32 13
  %1536 = load i32, i32* %1535, align 4
  %1537 = zext i32 %1536 to i64
  %1538 = and i64 %1537, 16777216
  %1539 = icmp ne i64 %1538, 0
  %1540 = load i32, i32* @x.83
  %1541 = load i32, i32* @y.84
  %1542 = sub i32 %1540, 1
  %1543 = mul i32 %1540, %1542
  %1544 = urem i32 %1543, 2
  %1545 = icmp eq i32 %1544, 0
  %1546 = icmp slt i32 %1541, 10
  %1547 = or i1 %1545, %1546
  br i1 %1547, label %originalBBpart2277, label %originalBB273alteredBB

originalBBpart2277:                               ; preds = %originalBB273
  br i1 %1539, label %1553, label %1548

; <label>:1548:                                   ; preds = %originalBBpart2277
  %1549 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %1550 = zext i32 %1549 to i64
  %1551 = and i64 %1550, 8388608
  %1552 = icmp ne i64 %1551, 0
  br i1 %1552, label %1556, label %1553

; <label>:1553:                                   ; preds = %1548, %originalBBpart2277
  %1554 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 23), align 8
  %1555 = icmp ne i32 %1554, 0
  br i1 %1555, label %1556, label %1636

; <label>:1556:                                   ; preds = %1553, %1548, %1518
  %1557 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1558 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1557, i32 0, i32 5
  %1559 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %1558, align 8
  %1560 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %1559, i32 0, i32 5
  %1561 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %1560, align 8
  store %"struct.pov::Interior_Struct"* %1561, %"struct.pov::Interior_Struct"** %33, align 8
  %1562 = icmp ne %"struct.pov::Interior_Struct"* %1561, null
  br i1 %1562, label %1563, label %1619

; <label>:1563:                                   ; preds = %1556
  %1564 = load double, double* %24, align 8
  %1565 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %1566 = fcmp ogt double %1564, %1565
  br i1 %1566, label %1567, label %1619

; <label>:1567:                                   ; preds = %1563
  %1568 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %1569 = zext i32 %1568 to i64
  %1570 = and i64 %1569, 16
  %1571 = icmp ne i64 %1570, 0
  br i1 %1571, label %1572, label %1619

; <label>:1572:                                   ; preds = %1567
  %1573 = load i32, i32* @x.83
  %1574 = load i32, i32* @y.84
  %1575 = sub i32 %1573, 1
  %1576 = mul i32 %1573, %1575
  %1577 = urem i32 %1576, 2
  %1578 = icmp eq i32 %1577, 0
  %1579 = icmp slt i32 %1574, 10
  %1580 = or i1 %1578, %1579
  br i1 %1580, label %originalBB279, label %originalBB279alteredBB

originalBB279:                                    ; preds = %originalBB279alteredBB, %1572
  %1581 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 3
  %1582 = load float, float* %1581, align 4
  %1583 = call float @_ZSt4fabsf(float %1582)
  %1584 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %1585 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %1586 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %1587 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %1585, float* dereferenceable(4) %1586)
  %1588 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %1584, float* dereferenceable(4) %1587)
  %1589 = load float, float* %1588, align 4
  %1590 = fmul float %1583, %1589
  %1591 = fpext float %1590 to double
  store double %1591, double* %19, align 8
  %1592 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 4
  %1593 = load float, float* %1592, align 16
  %1594 = call float @_ZSt4fabsf(float %1593)
  %1595 = fpext float %1594 to double
  store double %1595, double* %20, align 8
  %1596 = load double, double* %13, align 8
  %1597 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %19, double* dereferenceable(8) %20)
  %1598 = load double, double* %1597, align 8
  %1599 = fmul double %1596, %1598
  store double %1599, double* %21, align 8
  %1600 = getelementptr inbounds [5 x float], [5 x float]* %28, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i32 0, i32 0), float* %1600)
  %1601 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %1602 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1603 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1602, i32 0, i32 1
  %1604 = getelementptr inbounds [3 x double], [3 x double]* %1603, i32 0, i32 0
  %1605 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1606 = getelementptr inbounds [3 x double], [3 x double]* %26, i32 0, i32 0
  %1607 = load double*, double** %11, align 8
  %1608 = load float*, float** %8, align 8
  %1609 = load double, double* %21, align 8
  %1610 = call i32 @_ZN3povL16BacktraceRefractEPNS_15Interior_StructEPdPNS_10Ray_StructES2_S2_Pfd(%"struct.pov::Interior_Struct"* %1601, double* %1604, %"struct.pov::Ray_Struct"* %1605, double* %1606, double* %1607, float* %1608, double %1609)
  store i32 %1610, i32* %49, align 4
  %1611 = load i32, i32* @x.83
  %1612 = load i32, i32* @y.84
  %1613 = sub i32 %1611, 1
  %1614 = mul i32 %1611, %1613
  %1615 = urem i32 %1614, 2
  %1616 = icmp eq i32 %1615, 0
  %1617 = icmp slt i32 %1612, 10
  %1618 = or i1 %1616, %1617
  br i1 %1618, label %originalBBpart2295, label %originalBB279alteredBB

originalBBpart2295:                               ; preds = %originalBB279
  br label %1619

; <label>:1619:                                   ; preds = %originalBBpart2295, %1567, %1563, %1556
  %1620 = load i32, i32* @x.83
  %1621 = load i32, i32* @y.84
  %1622 = sub i32 %1620, 1
  %1623 = mul i32 %1620, %1622
  %1624 = urem i32 %1623, 2
  %1625 = icmp eq i32 %1624, 0
  %1626 = icmp slt i32 %1621, 10
  %1627 = or i1 %1625, %1626
  br i1 %1627, label %originalBB297, label %originalBB297alteredBB

originalBB297:                                    ; preds = %originalBB297alteredBB, %1619
  %1628 = load i32, i32* @x.83
  %1629 = load i32, i32* @y.84
  %1630 = sub i32 %1628, 1
  %1631 = mul i32 %1628, %1630
  %1632 = urem i32 %1631, 2
  %1633 = icmp eq i32 %1632, 0
  %1634 = icmp slt i32 %1629, 10
  %1635 = or i1 %1633, %1634
  br i1 %1635, label %originalBBpart2299, label %originalBB297alteredBB

originalBBpart2299:                               ; preds = %originalBB297
  br label %1636

; <label>:1636:                                   ; preds = %originalBBpart2299, %1553
  br label %1637

; <label>:1637:                                   ; preds = %1636, %1506
  %1638 = load i32, i32* %36, align 4
  %1639 = icmp ne i32 %1638, 0
  br i1 %1639, label %1640, label %2051

; <label>:1640:                                   ; preds = %1637
  %1641 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1642 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1641, i32 0, i32 5
  %1643 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %1642, align 8
  %1644 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %1643, i32 0, i32 13
  %1645 = load i32, i32* %1644, align 4
  %1646 = zext i32 %1645 to i64
  %1647 = and i64 %1646, 2097152
  %1648 = icmp ne i64 %1647, 0
  br i1 %1648, label %1649, label %1654

; <label>:1649:                                   ; preds = %1640
  %1650 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %1651 = zext i32 %1650 to i64
  %1652 = and i64 %1651, 4194304
  %1653 = icmp ne i64 %1652, 0
  br i1 %1653, label %1654, label %1684

; <label>:1654:                                   ; preds = %1649, %1640
  %1655 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1656 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1655, i32 0, i32 5
  %1657 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %1656, align 8
  %1658 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %1657, i32 0, i32 13
  %1659 = load i32, i32* %1658, align 4
  %1660 = zext i32 %1659 to i64
  %1661 = and i64 %1660, 4194304
  %1662 = icmp ne i64 %1661, 0
  br i1 %1662, label %2034, label %1663

; <label>:1663:                                   ; preds = %1654
  %1664 = load i32, i32* @x.83
  %1665 = load i32, i32* @y.84
  %1666 = sub i32 %1664, 1
  %1667 = mul i32 %1664, %1666
  %1668 = urem i32 %1667, 2
  %1669 = icmp eq i32 %1668, 0
  %1670 = icmp slt i32 %1665, 10
  %1671 = or i1 %1669, %1670
  br i1 %1671, label %originalBB301, label %originalBB301alteredBB

originalBB301:                                    ; preds = %originalBB301alteredBB, %1663
  %1672 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %1673 = zext i32 %1672 to i64
  %1674 = and i64 %1673, 2097152
  %1675 = icmp ne i64 %1674, 0
  %1676 = load i32, i32* @x.83
  %1677 = load i32, i32* @y.84
  %1678 = sub i32 %1676, 1
  %1679 = mul i32 %1676, %1678
  %1680 = urem i32 %1679, 2
  %1681 = icmp eq i32 %1680, 0
  %1682 = icmp slt i32 %1677, 10
  %1683 = or i1 %1681, %1682
  br i1 %1683, label %originalBBpart2312, label %originalBB301alteredBB

originalBBpart2312:                               ; preds = %originalBB301
  br i1 %1675, label %1684, label %2034

; <label>:1684:                                   ; preds = %originalBBpart2312, %1649
  %1685 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 23), align 8
  %1686 = icmp ne i32 %1685, 0
  br i1 %1686, label %2034, label %1687

; <label>:1687:                                   ; preds = %1684
  %1688 = load i32, i32* @x.83
  %1689 = load i32, i32* @y.84
  %1690 = sub i32 %1688, 1
  %1691 = mul i32 %1688, %1690
  %1692 = urem i32 %1691, 2
  %1693 = icmp eq i32 %1692, 0
  %1694 = icmp slt i32 %1689, 10
  %1695 = or i1 %1693, %1694
  br i1 %1695, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %originalBB314alteredBB, %1687
  %1696 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %1697 = zext i32 %1696 to i64
  %1698 = and i64 %1697, 32
  %1699 = icmp ne i64 %1698, 0
  %1700 = load i32, i32* @x.83
  %1701 = load i32, i32* @y.84
  %1702 = sub i32 %1700, 1
  %1703 = mul i32 %1700, %1702
  %1704 = urem i32 %1703, 2
  %1705 = icmp eq i32 %1704, 0
  %1706 = icmp slt i32 %1701, 10
  %1707 = or i1 %1705, %1706
  br i1 %1707, label %originalBBpart2325, label %originalBB314alteredBB

originalBBpart2325:                               ; preds = %originalBB314
  br i1 %1699, label %1708, label %2033

; <label>:1708:                                   ; preds = %originalBBpart2325
  %1709 = load i32, i32* @x.83
  %1710 = load i32, i32* @y.84
  %1711 = sub i32 %1709, 1
  %1712 = mul i32 %1709, %1711
  %1713 = urem i32 %1712, 2
  %1714 = icmp eq i32 %1713, 0
  %1715 = icmp slt i32 %1710, 10
  %1716 = or i1 %1714, %1715
  br i1 %1716, label %originalBB327, label %originalBB327alteredBB

originalBB327:                                    ; preds = %originalBB327alteredBB, %1708
  store i32 0, i32* %15, align 4
  %1717 = load i32, i32* @x.83
  %1718 = load i32, i32* @y.84
  %1719 = sub i32 %1717, 1
  %1720 = mul i32 %1717, %1719
  %1721 = urem i32 %1720, 2
  %1722 = icmp eq i32 %1721, 0
  %1723 = icmp slt i32 %1718, 10
  %1724 = or i1 %1722, %1723
  br i1 %1724, label %originalBBpart2329, label %originalBB327alteredBB

originalBBpart2329:                               ; preds = %originalBB327
  br label %1725

; <label>:1725:                                   ; preds = %2029, %originalBBpart2329
  %1726 = load i32, i32* %15, align 4
  %1727 = load i32, i32* %16, align 4
  %1728 = icmp slt i32 %1726, %1727
  br i1 %1728, label %1729, label %2032

; <label>:1729:                                   ; preds = %1725
  %1730 = load i32, i32* %49, align 4
  %1731 = icmp ne i32 %1730, 0
  br i1 %1731, label %1732, label %1768

; <label>:1732:                                   ; preds = %1729
  %1733 = getelementptr inbounds [3 x double], [3 x double]* %26, i64 0, i64 0
  %1734 = load double, double* %1733, align 16
  %1735 = load [3 x double]*, [3 x double]** %52, align 8
  %1736 = load i32, i32* %15, align 4
  %1737 = sext i32 %1736 to i64
  %1738 = getelementptr inbounds [3 x double], [3 x double]* %1735, i64 %1737
  %1739 = getelementptr inbounds [3 x double], [3 x double]* %1738, i64 0, i64 0
  %1740 = load double, double* %1739, align 8
  %1741 = fsub double %1734, %1740
  %1742 = call double @fabs(double %1741) #5
  %1743 = fcmp ogt double %1742, 1.000000e-07
  br i1 %1743, label %1768, label %1744

; <label>:1744:                                   ; preds = %1732
  %1745 = getelementptr inbounds [3 x double], [3 x double]* %26, i64 0, i64 1
  %1746 = load double, double* %1745, align 8
  %1747 = load [3 x double]*, [3 x double]** %52, align 8
  %1748 = load i32, i32* %15, align 4
  %1749 = sext i32 %1748 to i64
  %1750 = getelementptr inbounds [3 x double], [3 x double]* %1747, i64 %1749
  %1751 = getelementptr inbounds [3 x double], [3 x double]* %1750, i64 0, i64 1
  %1752 = load double, double* %1751, align 8
  %1753 = fsub double %1746, %1752
  %1754 = call double @fabs(double %1753) #5
  %1755 = fcmp ogt double %1754, 1.000000e-07
  br i1 %1755, label %1768, label %1756

; <label>:1756:                                   ; preds = %1744
  %1757 = getelementptr inbounds [3 x double], [3 x double]* %26, i64 0, i64 2
  %1758 = load double, double* %1757, align 16
  %1759 = load [3 x double]*, [3 x double]** %52, align 8
  %1760 = load i32, i32* %15, align 4
  %1761 = sext i32 %1760 to i64
  %1762 = getelementptr inbounds [3 x double], [3 x double]* %1759, i64 %1761
  %1763 = getelementptr inbounds [3 x double], [3 x double]* %1762, i64 0, i64 2
  %1764 = load double, double* %1763, align 8
  %1765 = fsub double %1758, %1764
  %1766 = call double @fabs(double %1765) #5
  %1767 = fcmp ogt double %1766, 1.000000e-07
  br i1 %1767, label %1768, label %2023

; <label>:1768:                                   ; preds = %1756, %1744, %1732, %1729
  %1769 = load [5 x float]*, [5 x float]** %53, align 8
  %1770 = load i32, i32* %15, align 4
  %1771 = sext i32 %1770 to i64
  %1772 = getelementptr inbounds [5 x float], [5 x float]* %1769, i64 %1771
  %1773 = getelementptr inbounds [5 x float], [5 x float]* %1772, i64 0, i64 0
  %1774 = load float, float* %1773, align 4
  %1775 = fpext float %1774 to double
  %1776 = fcmp une double %1775, 0.000000e+00
  br i1 %1776, label %1811, label %1777

; <label>:1777:                                   ; preds = %1768
  %1778 = load i32, i32* @x.83
  %1779 = load i32, i32* @y.84
  %1780 = sub i32 %1778, 1
  %1781 = mul i32 %1778, %1780
  %1782 = urem i32 %1781, 2
  %1783 = icmp eq i32 %1782, 0
  %1784 = icmp slt i32 %1779, 10
  %1785 = or i1 %1783, %1784
  br i1 %1785, label %originalBB331, label %originalBB331alteredBB

originalBB331:                                    ; preds = %originalBB331alteredBB, %1777
  %1786 = load [5 x float]*, [5 x float]** %53, align 8
  %1787 = load i32, i32* %15, align 4
  %1788 = sext i32 %1787 to i64
  %1789 = getelementptr inbounds [5 x float], [5 x float]* %1786, i64 %1788
  %1790 = getelementptr inbounds [5 x float], [5 x float]* %1789, i64 0, i64 1
  %1791 = load float, float* %1790, align 4
  %1792 = fpext float %1791 to double
  %1793 = fcmp une double %1792, 0.000000e+00
  %1794 = load i32, i32* @x.83
  %1795 = load i32, i32* @y.84
  %1796 = sub i32 %1794, 1
  %1797 = mul i32 %1794, %1796
  %1798 = urem i32 %1797, 2
  %1799 = icmp eq i32 %1798, 0
  %1800 = icmp slt i32 %1795, 10
  %1801 = or i1 %1799, %1800
  br i1 %1801, label %originalBBpart2333, label %originalBB331alteredBB

originalBBpart2333:                               ; preds = %originalBB331
  br i1 %1793, label %1811, label %1802

; <label>:1802:                                   ; preds = %originalBBpart2333
  %1803 = load [5 x float]*, [5 x float]** %53, align 8
  %1804 = load i32, i32* %15, align 4
  %1805 = sext i32 %1804 to i64
  %1806 = getelementptr inbounds [5 x float], [5 x float]* %1803, i64 %1805
  %1807 = getelementptr inbounds [5 x float], [5 x float]* %1806, i64 0, i64 2
  %1808 = load float, float* %1807, align 4
  %1809 = fpext float %1808 to double
  %1810 = fcmp une double %1809, 0.000000e+00
  br i1 %1810, label %1811, label %2022

; <label>:1811:                                   ; preds = %1802, %originalBBpart2333, %1768
  %1812 = load float*, float** %8, align 8
  %1813 = getelementptr inbounds float, float* %1812, i64 0
  %1814 = load float, float* %1813, align 4
  %1815 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  store float %1814, float* %1815, align 16
  %1816 = load float*, float** %8, align 8
  %1817 = getelementptr inbounds float, float* %1816, i64 1
  %1818 = load float, float* %1817, align 4
  %1819 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  store float %1818, float* %1819, align 4
  %1820 = load float*, float** %8, align 8
  %1821 = getelementptr inbounds float, float* %1820, i64 2
  %1822 = load float, float* %1821, align 4
  %1823 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  store float %1822, float* %1823, align 8
  %1824 = load float*, float** %54, align 8
  %1825 = load i32, i32* %15, align 4
  %1826 = sext i32 %1825 to i64
  %1827 = getelementptr inbounds float, float* %1824, i64 %1826
  %1828 = load float, float* %1827, align 4
  %1829 = fpext float %1828 to double
  %1830 = fcmp une double %1829, 1.000000e+00
  br i1 %1830, label %1831, label %1896

; <label>:1831:                                   ; preds = %1811
  %1832 = load i32, i32* @x.83
  %1833 = load i32, i32* @y.84
  %1834 = sub i32 %1832, 1
  %1835 = mul i32 %1832, %1834
  %1836 = urem i32 %1835, 2
  %1837 = icmp eq i32 %1836, 0
  %1838 = icmp slt i32 %1833, 10
  %1839 = or i1 %1837, %1838
  br i1 %1839, label %originalBB335, label %originalBB335alteredBB

originalBB335:                                    ; preds = %originalBB335alteredBB, %1831
  %1840 = load [5 x float]*, [5 x float]** %53, align 8
  %1841 = load i32, i32* %15, align 4
  %1842 = sext i32 %1841 to i64
  %1843 = getelementptr inbounds [5 x float], [5 x float]* %1840, i64 %1842
  %1844 = getelementptr inbounds [5 x float], [5 x float]* %1843, i64 0, i64 0
  %1845 = load float, float* %1844, align 4
  %1846 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %1847 = load float, float* %1846, align 16
  %1848 = load float*, float** %54, align 8
  %1849 = load i32, i32* %15, align 4
  %1850 = sext i32 %1849 to i64
  %1851 = getelementptr inbounds float, float* %1848, i64 %1850
  %1852 = load float, float* %1851, align 4
  %1853 = call float @_ZSt3powff(float %1847, float %1852)
  %1854 = fmul float %1845, %1853
  %1855 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  store float %1854, float* %1855, align 16
  %1856 = load [5 x float]*, [5 x float]** %53, align 8
  %1857 = load i32, i32* %15, align 4
  %1858 = sext i32 %1857 to i64
  %1859 = getelementptr inbounds [5 x float], [5 x float]* %1856, i64 %1858
  %1860 = getelementptr inbounds [5 x float], [5 x float]* %1859, i64 0, i64 1
  %1861 = load float, float* %1860, align 4
  %1862 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %1863 = load float, float* %1862, align 4
  %1864 = load float*, float** %54, align 8
  %1865 = load i32, i32* %15, align 4
  %1866 = sext i32 %1865 to i64
  %1867 = getelementptr inbounds float, float* %1864, i64 %1866
  %1868 = load float, float* %1867, align 4
  %1869 = call float @_ZSt3powff(float %1863, float %1868)
  %1870 = fmul float %1861, %1869
  %1871 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  store float %1870, float* %1871, align 4
  %1872 = load [5 x float]*, [5 x float]** %53, align 8
  %1873 = load i32, i32* %15, align 4
  %1874 = sext i32 %1873 to i64
  %1875 = getelementptr inbounds [5 x float], [5 x float]* %1872, i64 %1874
  %1876 = getelementptr inbounds [5 x float], [5 x float]* %1875, i64 0, i64 2
  %1877 = load float, float* %1876, align 4
  %1878 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %1879 = load float, float* %1878, align 8
  %1880 = load float*, float** %54, align 8
  %1881 = load i32, i32* %15, align 4
  %1882 = sext i32 %1881 to i64
  %1883 = getelementptr inbounds float, float* %1880, i64 %1882
  %1884 = load float, float* %1883, align 4
  %1885 = call float @_ZSt3powff(float %1879, float %1884)
  %1886 = fmul float %1877, %1885
  %1887 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  store float %1886, float* %1887, align 8
  %1888 = load i32, i32* @x.83
  %1889 = load i32, i32* @y.84
  %1890 = sub i32 %1888, 1
  %1891 = mul i32 %1888, %1890
  %1892 = urem i32 %1891, 2
  %1893 = icmp eq i32 %1892, 0
  %1894 = icmp slt i32 %1889, 10
  %1895 = or i1 %1893, %1894
  br i1 %1895, label %originalBBpart2371, label %originalBB335alteredBB

originalBBpart2371:                               ; preds = %originalBB335
  br label %1927

; <label>:1896:                                   ; preds = %1811
  %1897 = load [5 x float]*, [5 x float]** %53, align 8
  %1898 = load i32, i32* %15, align 4
  %1899 = sext i32 %1898 to i64
  %1900 = getelementptr inbounds [5 x float], [5 x float]* %1897, i64 %1899
  %1901 = getelementptr inbounds [5 x float], [5 x float]* %1900, i64 0, i64 0
  %1902 = load float, float* %1901, align 4
  %1903 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %1904 = load float, float* %1903, align 16
  %1905 = fmul float %1902, %1904
  %1906 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  store float %1905, float* %1906, align 16
  %1907 = load [5 x float]*, [5 x float]** %53, align 8
  %1908 = load i32, i32* %15, align 4
  %1909 = sext i32 %1908 to i64
  %1910 = getelementptr inbounds [5 x float], [5 x float]* %1907, i64 %1909
  %1911 = getelementptr inbounds [5 x float], [5 x float]* %1910, i64 0, i64 1
  %1912 = load float, float* %1911, align 4
  %1913 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %1914 = load float, float* %1913, align 4
  %1915 = fmul float %1912, %1914
  %1916 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  store float %1915, float* %1916, align 4
  %1917 = load [5 x float]*, [5 x float]** %53, align 8
  %1918 = load i32, i32* %15, align 4
  %1919 = sext i32 %1918 to i64
  %1920 = getelementptr inbounds [5 x float], [5 x float]* %1917, i64 %1919
  %1921 = getelementptr inbounds [5 x float], [5 x float]* %1920, i64 0, i64 2
  %1922 = load float, float* %1921, align 4
  %1923 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %1924 = load float, float* %1923, align 8
  %1925 = fmul float %1922, %1924
  %1926 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  store float %1925, float* %1926, align 8
  br label %1927

; <label>:1927:                                   ; preds = %1896, %originalBBpart2371
  %1928 = load i32, i32* @x.83
  %1929 = load i32, i32* @y.84
  %1930 = sub i32 %1928, 1
  %1931 = mul i32 %1928, %1930
  %1932 = urem i32 %1931, 2
  %1933 = icmp eq i32 %1932, 0
  %1934 = icmp slt i32 %1929, 10
  %1935 = or i1 %1933, %1934
  br i1 %1935, label %originalBB373, label %originalBB373alteredBB

originalBB373:                                    ; preds = %originalBB373alteredBB, %1927
  %1936 = load double*, double** %51, align 8
  %1937 = load i32, i32* %15, align 4
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds double, double* %1936, i64 %1938
  %1940 = load double, double* %1939, align 8
  %1941 = load [5 x float]*, [5 x float]** %53, align 8
  %1942 = load i32, i32* %15, align 4
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds [5 x float], [5 x float]* %1941, i64 %1943
  %1945 = getelementptr inbounds [5 x float], [5 x float]* %1944, i64 0, i64 0
  %1946 = load [5 x float]*, [5 x float]** %53, align 8
  %1947 = load i32, i32* %15, align 4
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds [5 x float], [5 x float]* %1946, i64 %1948
  %1950 = getelementptr inbounds [5 x float], [5 x float]* %1949, i64 0, i64 1
  %1951 = load [5 x float]*, [5 x float]** %53, align 8
  %1952 = load i32, i32* %15, align 4
  %1953 = sext i32 %1952 to i64
  %1954 = getelementptr inbounds [5 x float], [5 x float]* %1951, i64 %1953
  %1955 = getelementptr inbounds [5 x float], [5 x float]* %1954, i64 0, i64 2
  %1956 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %1950, float* dereferenceable(4) %1955)
  %1957 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %1945, float* dereferenceable(4) %1956)
  %1958 = load float, float* %1957, align 4
  %1959 = fpext float %1958 to double
  %1960 = fmul double %1940, %1959
  store double %1960, double* %22, align 8
  %1961 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 34), align 4
  %1962 = icmp ne i32 %1961, 0
  %1963 = load i32, i32* @x.83
  %1964 = load i32, i32* @y.84
  %1965 = sub i32 %1963, 1
  %1966 = mul i32 %1963, %1965
  %1967 = urem i32 %1966, 2
  %1968 = icmp eq i32 %1967, 0
  %1969 = icmp slt i32 %1964, 10
  %1970 = or i1 %1968, %1969
  br i1 %1970, label %originalBBpart2383, label %originalBB373alteredBB

originalBBpart2383:                               ; preds = %originalBB373
  br i1 %1962, label %1971, label %1996

; <label>:1971:                                   ; preds = %originalBBpart2383
  %1972 = load i32, i32* @x.83
  %1973 = load i32, i32* @y.84
  %1974 = sub i32 %1972, 1
  %1975 = mul i32 %1972, %1974
  %1976 = urem i32 %1975, 2
  %1977 = icmp eq i32 %1976, 0
  %1978 = icmp slt i32 %1973, 10
  %1979 = or i1 %1977, %1978
  br i1 %1979, label %originalBB385, label %originalBB385alteredBB

originalBB385:                                    ; preds = %originalBB385alteredBB, %1971
  %1980 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1981 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1980, i32 0, i32 1
  %1982 = getelementptr inbounds [3 x double], [3 x double]* %1981, i32 0, i32 0
  %1983 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1984 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %1985 = load double*, double** %11, align 8
  %1986 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %1987 = load double, double* %22, align 8
  call void @_ZN3povL7ReflectEPdPNS_10Ray_StructES0_S0_Pfd(double* %1982, %"struct.pov::Ray_Struct"* %1983, double* %1984, double* %1985, float* %1986, double %1987)
  %1988 = load i32, i32* @x.83
  %1989 = load i32, i32* @y.84
  %1990 = sub i32 %1988, 1
  %1991 = mul i32 %1988, %1990
  %1992 = urem i32 %1991, 2
  %1993 = icmp eq i32 %1992, 0
  %1994 = icmp slt i32 %1989, 10
  %1995 = or i1 %1993, %1994
  br i1 %1995, label %originalBBpart2387, label %originalBB385alteredBB

originalBBpart2387:                               ; preds = %originalBB385
  br label %2005

; <label>:1996:                                   ; preds = %originalBBpart2383
  %1997 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1998 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1997, i32 0, i32 1
  %1999 = getelementptr inbounds [3 x double], [3 x double]* %1998, i32 0, i32 0
  %2000 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2001 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %2002 = load double*, double** %11, align 8
  %2003 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %2004 = load double, double* %22, align 8
  call void @_ZN3povL7ReflectEPdPNS_10Ray_StructES0_S0_Pfd(double* %1999, %"struct.pov::Ray_Struct"* %2000, double* %2001, double* %2002, float* %2003, double %2004)
  br label %2005

; <label>:2005:                                   ; preds = %1996, %originalBBpart2387
  %2006 = load i32, i32* @x.83
  %2007 = load i32, i32* @y.84
  %2008 = sub i32 %2006, 1
  %2009 = mul i32 %2006, %2008
  %2010 = urem i32 %2009, 2
  %2011 = icmp eq i32 %2010, 0
  %2012 = icmp slt i32 %2007, 10
  %2013 = or i1 %2011, %2012
  br i1 %2013, label %originalBB389, label %originalBB389alteredBB

originalBB389:                                    ; preds = %originalBB389alteredBB, %2005
  %2014 = load i32, i32* @x.83
  %2015 = load i32, i32* @y.84
  %2016 = sub i32 %2014, 1
  %2017 = mul i32 %2014, %2016
  %2018 = urem i32 %2017, 2
  %2019 = icmp eq i32 %2018, 0
  %2020 = icmp slt i32 %2015, 10
  %2021 = or i1 %2019, %2020
  br i1 %2021, label %originalBBpart2391, label %originalBB389alteredBB

originalBBpart2391:                               ; preds = %originalBB389
  br label %2022

; <label>:2022:                                   ; preds = %originalBBpart2391, %1802
  br label %2023

; <label>:2023:                                   ; preds = %2022, %1756
  %2024 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 18), align 8
  %2025 = icmp eq %"struct.pov::Object_Struct"* %2024, null
  br i1 %2025, label %2026, label %2028

; <label>:2026:                                   ; preds = %2023
  %2027 = load i32, i32* %16, align 4
  store i32 %2027, i32* %15, align 4
  br label %2028

; <label>:2028:                                   ; preds = %2026, %2023
  br label %2029

; <label>:2029:                                   ; preds = %2028
  %2030 = load i32, i32* %15, align 4
  %2031 = add nsw i32 %2030, 1
  store i32 %2031, i32* %15, align 4
  br label %1725

; <label>:2032:                                   ; preds = %1725
  br label %2033

; <label>:2033:                                   ; preds = %2032, %originalBBpart2325
  br label %2034

; <label>:2034:                                   ; preds = %2033, %1684, %originalBBpart2312, %1654
  %2035 = load i32, i32* @x.83
  %2036 = load i32, i32* @y.84
  %2037 = sub i32 %2035, 1
  %2038 = mul i32 %2035, %2037
  %2039 = urem i32 %2038, 2
  %2040 = icmp eq i32 %2039, 0
  %2041 = icmp slt i32 %2036, 10
  %2042 = or i1 %2040, %2041
  br i1 %2042, label %originalBB393, label %originalBB393alteredBB

originalBB393:                                    ; preds = %originalBB393alteredBB, %2034
  %2043 = load i32, i32* @x.83
  %2044 = load i32, i32* @y.84
  %2045 = sub i32 %2043, 1
  %2046 = mul i32 %2043, %2045
  %2047 = urem i32 %2046, 2
  %2048 = icmp eq i32 %2047, 0
  %2049 = icmp slt i32 %2044, 10
  %2050 = or i1 %2048, %2049
  br i1 %2050, label %originalBBpart2395, label %originalBB393alteredBB

originalBBpart2395:                               ; preds = %originalBB393
  br label %2051

; <label>:2051:                                   ; preds = %originalBBpart2395, %1637
  %2052 = load i32, i32* @x.83
  %2053 = load i32, i32* @y.84
  %2054 = sub i32 %2052, 1
  %2055 = mul i32 %2052, %2054
  %2056 = urem i32 %2055, 2
  %2057 = icmp eq i32 %2056, 0
  %2058 = icmp slt i32 %2053, 10
  %2059 = or i1 %2057, %2058
  br i1 %2059, label %originalBB397, label %originalBB397alteredBB

originalBB397:                                    ; preds = %originalBB397alteredBB, %2051
  %2060 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2061 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %2060, i32 0, i32 0
  %2062 = load double, double* %2061, align 8
  %2063 = load double, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 17), align 8
  %2064 = fsub double %2063, %2062
  store double %2064, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 17), align 8
  %2065 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %50, align 8
  call void @_ZN3pov14FreeComTexDataEPNS_17ComTexData_StructE(%"struct.pov::ComTexData_Struct"* %2065)
  %2066 = load i32, i32* @x.83
  %2067 = load i32, i32* @y.84
  %2068 = sub i32 %2066, 1
  %2069 = mul i32 %2066, %2068
  %2070 = urem i32 %2069, 2
  %2071 = icmp eq i32 %2070, 0
  %2072 = icmp slt i32 %2067, 10
  %2073 = or i1 %2071, %2072
  br i1 %2073, label %originalBBpart2409, label %originalBB397alteredBB

originalBBpart2409:                               ; preds = %originalBB397
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %107
  store i32 1, i32* %45, align 4
  store i32 0, i32* %15, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %124
  %2074 = load i32, i32* %15, align 4
  %2075 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2076 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2075, i32 0, i32 2
  %2077 = load i32, i32* %2076, align 8
  %2078 = icmp sle i32 %2074, %2077
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %180
  %2079 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2080 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2079, i32 0, i32 4
  %2081 = load i32, i32* %15, align 4
  %2082 = sext i32 %2081 to i64
  %2083 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %2080, i64 0, i64 %2082
  %2084 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %2083, align 8
  %2085 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2084, i32 0, i32 1
  %2086 = load i32, i32* %2085, align 4
  %2087 = icmp ne i32 %2086, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %206
  %2088 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2089 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2088, i32 0, i32 4
  %2090 = load i32, i32* %15, align 4
  %2091 = sext i32 %2090 to i64
  %2092 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %2089, i64 0, i64 %2091
  %2093 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %2092, align 8
  %2094 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2093, i32 0, i32 10
  %2095 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %2094, align 8
  %2096 = icmp ne %"struct.pov::Media_Struct"* %2095, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %244
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %269
  %2097 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 24), align 4
  %2098 = icmp ne i32 %2097, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %296
  %2099 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %46, align 8
  %2100 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2101 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2102 = load float*, float** %8, align 8
  call void @_ZN3pov14Simulate_MediaEPPNS_12Media_StructEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Media_Struct"** %2099, %"struct.pov::Ray_Struct"* %2100, %"struct.pov::istk_entry"* %2101, float* %2102, i32 1)
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %346
  %2103 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %2104 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2103, i32 0, i32 7
  %2105 = load float, float* %2104, align 4
  %2106 = call float @_ZSt4fabsf(float %2105)
  %2107 = fpext float %2106 to double
  %2108 = fcmp ogt double %2107, 1.000000e-07
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %513
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %530
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %603
  %2109 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %55, %"struct.pov::Ray_Struct"* %2109)
  %2110 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %55, i32 0, i32 0
  %2111 = getelementptr inbounds [3 x double], [3 x double]* %2110, i32 0, i32 0
  %2112 = load double*, double** %10, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %2111, double* %2112)
  %2113 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %55, i32 0, i32 1
  %2114 = getelementptr inbounds [3 x double], [3 x double]* %2113, i32 0, i32 0
  %2115 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2116 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2115, i32 0, i32 1
  %2117 = getelementptr inbounds [3 x double], [3 x double]* %2116, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %2114, double* %2117)
  %2118 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %_ = sub i32 0, %2118
  %gen = add i32 %_, 1
  %_39 = shl i32 %2118, 1
  %_40 = sub i32 0, %2118
  %gen41 = add i32 %_40, 1
  %_42 = sub i32 %2118, 1
  %gen43 = mul i32 %_42, 1
  %_44 = sub i32 %2118, 1
  %gen45 = mul i32 %_44, 1
  %2119 = add nsw i32 %2118, 1
  store i32 %2119, i32* @_ZN3pov11Trace_LevelE, align 4
  %2120 = load float*, float** %8, align 8
  %2121 = load double, double* %13, align 8
  %2122 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %55, float* %2120, double %2121)
  %2123 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %_46 = shl i32 %2123, -1
  %_47 = sub i32 %2123, -1
  %gen48 = mul i32 %_47, -1
  %_49 = sub i32 %2123, -1
  %gen50 = mul i32 %_49, -1
  %_51 = sub i32 %2123, -1
  %gen52 = mul i32 %_51, -1
  %_53 = sub i32 %2123, -1
  %gen54 = mul i32 %_53, -1
  %_55 = shl i32 %2123, -1
  %2124 = add nsw i32 %2123, -1
  store i32 %2124, i32* @_ZN3pov11Trace_LevelE, align 4
  br label %originalBB38

originalBB59alteredBB:                            ; preds = %originalBB59, %636
  store i32 0, i32* %17, align 4
  store i32 0, i32* %16, align 4
  %2125 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %9, align 8
  store %"struct.pov::Texture_Struct"* %2125, %"struct.pov::Texture_Struct"** %34, align 8
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %657
  %2126 = load double, double* %24, align 8
  %2127 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %2128 = fcmp ogt double %2126, %2127
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %720
  %2129 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %2130 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %2131 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2130, i32 0, i32 13
  %2132 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %2131, align 8
  %2133 = load double*, double** %10, align 8
  %2134 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %2129, %"struct.pov::Tnormal_Struct"* %2132, double* %2133, %"struct.pov::istk_entry"* %2134)
  %2135 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %2136 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2135, i32 0, i32 13
  %2137 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %2136, align 8
  %2138 = getelementptr inbounds %"struct.pov::Tnormal_Struct", %"struct.pov::Tnormal_Struct"* %2137, i32 0, i32 2
  %2139 = load i16, i16* %2138, align 4
  %2140 = zext i16 %2139 to i32
  %_68 = shl i32 %2140, 8
  %2141 = and i32 %2140, 8
  %2142 = icmp ne i32 %2141, 0
  br label %originalBB67

originalBB72alteredBB:                            ; preds = %originalBB72, %756
  %2143 = load i32, i32* %15, align 4
  %2144 = icmp sge i32 %2143, 0
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %797
  %2145 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %2146 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %2147 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2146, i32 0, i32 13
  %2148 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %2147, align 8
  %2149 = load double*, double** %10, align 8
  %2150 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %2145, %"struct.pov::Tnormal_Struct"* %2148, double* %2149, %"struct.pov::istk_entry"* %2150)
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %820
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %843
  %2151 = load double, double* %13, align 8
  %2152 = load double, double* %24, align 8
  %_85 = fsub double -0.000000e+00, %2151
  %gen86 = fadd double %_85, %2152
  %_87 = fsub double -0.000000e+00, %2151
  %gen88 = fadd double %_87, %2152
  %_89 = fsub double %2151, %2152
  %gen90 = fmul double %_89, %2152
  %2153 = fmul double %2151, %2152
  store double %2153, double* %21, align 8
  %2154 = getelementptr inbounds [5 x float], [5 x float]* %27, i32 0, i32 0
  %2155 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %2156 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2155, i32 0, i32 12
  %2157 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %2156, align 8
  %2158 = load double*, double** %10, align 8
  %2159 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2160 = call i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float* %2154, %"struct.pov::Pigment_Struct"* %2157, double* %2158, %"struct.pov::istk_entry"* %2159)
  store i32 %2160, i32* %18, align 4
  %2161 = load double, double* %24, align 8
  store double 1.000000e+00, double* %56, align 8
  %2162 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 3
  %2163 = load float, float* %2162, align 4
  %2164 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 4
  %2165 = load float, float* %2164, align 16
  %_91 = fsub float %2163, %2165
  %gen92 = fmul float %_91, %2165
  %2166 = fadd float %2163, %2165
  %2167 = fpext float %2166 to double
  store double %2167, double* %57, align 8
  %2168 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %56, double* dereferenceable(8) %57)
  %2169 = load double, double* %2168, align 8
  %_93 = fsub double -0.000000e+00, 1.000000e+00
  %gen94 = fadd double %_93, %2169
  %_95 = fsub double -0.000000e+00, 1.000000e+00
  %gen96 = fadd double %_95, %2169
  %_97 = fsub double -0.000000e+00, 1.000000e+00
  %gen98 = fadd double %_97, %2169
  %_99 = fsub double -0.000000e+00, 1.000000e+00
  %gen100 = fadd double %_99, %2169
  %2170 = fsub double 1.000000e+00, %2169
  %_101 = fsub double -0.000000e+00, %2161
  %gen102 = fadd double %_101, %2170
  %_103 = fsub double %2161, %2170
  %gen104 = fmul double %_103, %2170
  %_105 = fsub double %2161, %2170
  %gen106 = fmul double %_105, %2170
  %2171 = fmul double %2161, %2170
  store double %2171, double* %23, align 8
  %2172 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %2173 = load float, float* %2172, align 16
  %2174 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 0
  %2175 = load float, float* %2174, align 16
  %_107 = fsub float %2175, %2173
  %gen108 = fmul float %_107, %2173
  %2176 = fmul float %2175, %2173
  store float %2176, float* %2174, align 16
  %2177 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %2178 = load float, float* %2177, align 4
  %2179 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 1
  %2180 = load float, float* %2179, align 4
  %_109 = fsub float %2180, %2178
  %gen110 = fmul float %_109, %2178
  %_111 = fsub float -0.000000e+00, %2180
  %gen112 = fadd float %_111, %2178
  %_113 = fsub float -0.000000e+00, %2180
  %gen114 = fadd float %_113, %2178
  %_115 = fsub float %2180, %2178
  %gen116 = fmul float %_115, %2178
  %2181 = fmul float %2180, %2178
  store float %2181, float* %2179, align 4
  %2182 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %2183 = load float, float* %2182, align 8
  %2184 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 2
  %2185 = load float, float* %2184, align 8
  %_117 = fsub float -0.000000e+00, %2185
  %gen118 = fadd float %_117, %2183
  %_119 = fsub float -0.000000e+00, %2185
  %gen120 = fadd float %_119, %2183
  %_121 = fsub float -0.000000e+00, %2185
  %gen122 = fadd float %_121, %2183
  %_123 = fsub float -0.000000e+00, %2185
  %gen124 = fadd float %_123, %2183
  %_125 = fsub float %2185, %2183
  %gen126 = fmul float %_125, %2183
  %_127 = fsub float -0.000000e+00, %2185
  %gen128 = fadd float %_127, %2183
  %2186 = fmul float %2185, %2183
  store float %2186, float* %2184, align 8
  %2187 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %2188 = load double, double* %23, align 8
  %2189 = fptrunc double %2188 to float
  %2190 = getelementptr inbounds [5 x float], [5 x float]* %27, i32 0, i32 0
  call void @_ZN3pov15CRGBAddScaledEqEPffPKf(float* %2187, float %2189, float* %2190)
  %2191 = load i32, i32* %18, align 4
  %2192 = icmp ne i32 %2191, 0
  br label %originalBB84

originalBB132alteredBB:                           ; preds = %originalBB132, %903
  %2193 = load i32, i32* %16, align 4
  %2194 = icmp eq i32 %2193, 100
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %922
  %2195 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i32 0, i32 0))
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %973
  %2196 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %34, align 8
  %2197 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2196, i32 0, i32 14
  %2198 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %2197, align 8
  %2199 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %2198, i32 0, i32 20
  %2200 = load i32, i32* %2199, align 4
  %2201 = icmp ne i32 %2200, 1
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %1265
  %2202 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %9, align 8
  %2203 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2202, i32 0, i32 14
  %2204 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %2203, align 8
  %2205 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %2204, i32 0, i32 0
  %2206 = load float, float* %2205, align 4
  %2207 = fpext float %2206 to double
  %2208 = load double, double* %41, align 8
  %_145 = fsub double -0.000000e+00, %2208
  %gen146 = fadd double %_145, %2207
  %_147 = fsub double -0.000000e+00, %2208
  %gen148 = fadd double %_147, %2207
  %_149 = fsub double %2208, %2207
  %gen150 = fmul double %_149, %2207
  %_151 = fsub double -0.000000e+00, %2208
  %gen152 = fadd double %_151, %2207
  %2209 = fmul double %2208, %2207
  store double %2209, double* %41, align 8
  br label %originalBB144

originalBB156alteredBB:                           ; preds = %originalBB156, %1333
  %2210 = load double, double* %43, align 8
  %2211 = load double, double* %41, align 8
  %_157 = fsub double -0.000000e+00, %2211
  %gen158 = fadd double %_157, %2210
  %2212 = fdiv double %2211, %2210
  store double %2212, double* %41, align 8
  %2213 = load double, double* %43, align 8
  %2214 = load double, double* %40, align 8
  %_159 = fsub double -0.000000e+00, %2214
  %gen160 = fadd double %_159, %2213
  %_161 = fsub double -0.000000e+00, %2214
  %gen162 = fadd double %_161, %2213
  %_163 = fsub double %2214, %2213
  %gen164 = fmul double %_163, %2213
  %_165 = fsub double %2214, %2213
  %gen166 = fmul double %_165, %2213
  %_167 = fsub double %2214, %2213
  %gen168 = fmul double %_167, %2213
  %_169 = fsub double -0.000000e+00, %2214
  %gen170 = fadd double %_169, %2213
  %_171 = fsub double %2214, %2213
  %gen172 = fmul double %_171, %2213
  %_173 = fsub double -0.000000e+00, %2214
  %gen174 = fadd double %_173, %2213
  %_175 = fsub double %2214, %2213
  %gen176 = fmul double %_175, %2213
  %2215 = fdiv double %2214, %2213
  store double %2215, double* %40, align 8
  %2216 = load double, double* %43, align 8
  %2217 = load double, double* %39, align 8
  %_177 = fsub double -0.000000e+00, %2217
  %gen178 = fadd double %_177, %2216
  %_179 = fsub double -0.000000e+00, %2217
  %gen180 = fadd double %_179, %2216
  %_181 = fsub double -0.000000e+00, %2217
  %gen182 = fadd double %_181, %2216
  %_183 = fsub double %2217, %2216
  %gen184 = fmul double %_183, %2216
  %_185 = fsub double -0.000000e+00, %2217
  %gen186 = fadd double %_185, %2216
  %_187 = fsub double %2217, %2216
  %gen188 = fmul double %_187, %2216
  %_189 = fsub double %2217, %2216
  %gen190 = fmul double %_189, %2216
  %_191 = fsub double %2217, %2216
  %gen192 = fmul double %_191, %2216
  %2218 = fdiv double %2217, %2216
  store double %2218, double* %39, align 8
  %2219 = load double, double* %43, align 8
  %2220 = load double, double* %42, align 8
  %_193 = fsub double %2220, %2219
  %gen194 = fmul double %_193, %2219
  %_195 = fsub double -0.000000e+00, %2220
  %gen196 = fadd double %_195, %2219
  %_197 = fsub double %2220, %2219
  %gen198 = fmul double %_197, %2219
  %2221 = fdiv double %2220, %2219
  store double %2221, double* %42, align 8
  %2222 = call i32 @_ZN3pov8POV_RANDEv()
  %2223 = sitofp i32 %2222 to double
  %_199 = fsub double %2223, 0x3F0000200040021E
  %gen200 = fmul double %_199, 0x3F0000200040021E
  %_201 = fsub double -0.000000e+00, %2223
  %gen202 = fadd double %_201, 0x3F0000200040021E
  %2224 = fmul double %2223, 0x3F0000200040021E
  store double %2224, double* %44, align 8
  %2225 = load double, double* %44, align 8
  %2226 = load double, double* %41, align 8
  %2227 = fcmp olt double %2225, %2226
  br label %originalBB156

originalBB206alteredBB:                           ; preds = %originalBB206, %1384
  %2228 = load double, double* %44, align 8
  %2229 = load double, double* %41, align 8
  %2230 = load double, double* %40, align 8
  %_207 = fsub double -0.000000e+00, %2229
  %gen208 = fadd double %_207, %2230
  %_209 = fsub double %2229, %2230
  %gen210 = fmul double %_209, %2230
  %_211 = fsub double -0.000000e+00, %2229
  %gen212 = fadd double %_211, %2230
  %2231 = fadd double %2229, %2230
  %2232 = load double, double* %39, align 8
  %_213 = fsub double %2231, %2232
  %gen214 = fmul double %_213, %2232
  %2233 = fadd double %2231, %2232
  %2234 = fcmp olt double %2228, %2233
  br label %originalBB206

originalBB218alteredBB:                           ; preds = %originalBB218, %1415
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1436
  %2235 = load i32, i32* %37, align 4
  %2236 = icmp ne i32 %2235, 0
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %1455
  %2237 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %2238 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2239 = load double*, double** %11, align 8
  %2240 = call double @_ZN3pov9spec_randEv()
  %_227 = fsub double -0.000000e+00, %2240
  %gen228 = fadd double %_227, 0x41DFFFFFFFC00000
  %_229 = fsub double -0.000000e+00, %2240
  %gen230 = fadd double %_229, 0x41DFFFFFFFC00000
  %_231 = fsub double -0.000000e+00, %2240
  %gen232 = fadd double %_231, 0x41DFFFFFFFC00000
  %2241 = fmul double %2240, 0x41DFFFFFFFC00000
  %2242 = fptosi double %2241 to i32
  %_233 = sub i32 0, %2242
  %gen234 = add i32 %_233, 400
  %2243 = srem i32 %2242, 400
  call void @_ZN3pov9ChooseRayEPNS_10Ray_StructEPdS1_S2_i(%"struct.pov::Ray_Struct"* %35, double* %2237, %"struct.pov::Ray_Struct"* %2238, double* %2239, i32 %2243)
  %2244 = load float*, float** %8, align 8
  %2245 = getelementptr inbounds float, float* %2244, i64 0
  %2246 = load float, float* %2245, align 4
  %2247 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 0
  %2248 = load float, float* %2247, align 16
  %_235 = fsub float %2246, %2248
  %gen236 = fmul float %_235, %2248
  %_237 = fsub float -0.000000e+00, %2246
  %gen238 = fadd float %_237, %2248
  %_239 = fsub float -0.000000e+00, %2246
  %gen240 = fadd float %_239, %2248
  %2249 = fmul float %2246, %2248
  %2250 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 0
  store float %2249, float* %2250, align 16
  %2251 = load float*, float** %8, align 8
  %2252 = getelementptr inbounds float, float* %2251, i64 1
  %2253 = load float, float* %2252, align 4
  %2254 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 1
  %2255 = load float, float* %2254, align 4
  %_241 = fsub float %2253, %2255
  %gen242 = fmul float %_241, %2255
  %_243 = fsub float -0.000000e+00, %2253
  %gen244 = fadd float %_243, %2255
  %_245 = fsub float %2253, %2255
  %gen246 = fmul float %_245, %2255
  %_247 = fsub float %2253, %2255
  %gen248 = fmul float %_247, %2255
  %_249 = fsub float %2253, %2255
  %gen250 = fmul float %_249, %2255
  %2256 = fmul float %2253, %2255
  %2257 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 1
  store float %2256, float* %2257, align 4
  %2258 = load float*, float** %8, align 8
  %2259 = getelementptr inbounds float, float* %2258, i64 2
  %2260 = load float, float* %2259, align 4
  %2261 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 2
  %2262 = load float, float* %2261, align 8
  %_251 = fsub float -0.000000e+00, %2260
  %gen252 = fadd float %_251, %2262
  %_253 = fsub float -0.000000e+00, %2260
  %gen254 = fadd float %_253, %2262
  %2263 = fmul float %2260, %2262
  %2264 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 2
  store float %2263, float* %2264, align 8
  %2265 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %_255 = sub i32 0, %2265
  %gen256 = add i32 %_255, 1
  %_257 = sub i32 0, %2265
  %gen258 = add i32 %_257, 1
  %_259 = shl i32 %2265, 1
  %_260 = sub i32 0, %2265
  %gen261 = add i32 %_260, 1
  %_262 = shl i32 %2265, 1
  %_263 = sub i32 0, %2265
  %gen264 = add i32 %_263, 1
  %2266 = add nsw i32 %2265, 1
  store i32 %2266, i32* @_ZN3pov11Trace_LevelE, align 4
  %2267 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %2268 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %35, float* %2267, double 1.000000e+00)
  %2269 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %_265 = shl i32 %2269, -1
  %_266 = sub i32 0, %2269
  %gen267 = add i32 %_266, -1
  %_268 = shl i32 %2269, -1
  %_269 = shl i32 %2269, -1
  %2270 = add nsw i32 %2269, -1
  store i32 %2270, i32* @_ZN3pov11Trace_LevelE, align 4
  br label %originalBB226

originalBB273alteredBB:                           ; preds = %originalBB273, %1523
  %2271 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2272 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %2271, i32 0, i32 5
  %2273 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %2272, align 8
  %2274 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %2273, i32 0, i32 13
  %2275 = load i32, i32* %2274, align 4
  %2276 = zext i32 %2275 to i64
  %_274 = sub i64 %2276, 16777216
  %gen275 = mul i64 %_274, 16777216
  %2277 = and i64 %2276, 16777216
  %2278 = icmp ne i64 %2277, 0
  br label %originalBB273

originalBB279alteredBB:                           ; preds = %originalBB279, %1572
  %2279 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 3
  %2280 = load float, float* %2279, align 4
  %2281 = call float @_ZSt4fabsf(float %2280)
  %2282 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %2283 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %2284 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %2285 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %2283, float* dereferenceable(4) %2284)
  %2286 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %2282, float* dereferenceable(4) %2285)
  %2287 = load float, float* %2286, align 4
  %_280 = fsub float -0.000000e+00, %2281
  %gen281 = fadd float %_280, %2287
  %_282 = fsub float %2281, %2287
  %gen283 = fmul float %_282, %2287
  %_284 = fsub float -0.000000e+00, %2281
  %gen285 = fadd float %_284, %2287
  %_286 = fsub float %2281, %2287
  %gen287 = fmul float %_286, %2287
  %2288 = fmul float %2281, %2287
  %2289 = fpext float %2288 to double
  store double %2289, double* %19, align 8
  %2290 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 4
  %2291 = load float, float* %2290, align 16
  %2292 = call float @_ZSt4fabsf(float %2291)
  %2293 = fpext float %2292 to double
  store double %2293, double* %20, align 8
  %2294 = load double, double* %13, align 8
  %2295 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %19, double* dereferenceable(8) %20)
  %2296 = load double, double* %2295, align 8
  %_288 = fsub double -0.000000e+00, %2294
  %gen289 = fadd double %_288, %2296
  %_290 = fsub double %2294, %2296
  %gen291 = fmul double %_290, %2296
  %_292 = fsub double %2294, %2296
  %gen293 = fmul double %_292, %2296
  %2297 = fmul double %2294, %2296
  store double %2297, double* %21, align 8
  %2298 = getelementptr inbounds [5 x float], [5 x float]* %28, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i32 0, i32 0), float* %2298)
  %2299 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %33, align 8
  %2300 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2301 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %2300, i32 0, i32 1
  %2302 = getelementptr inbounds [3 x double], [3 x double]* %2301, i32 0, i32 0
  %2303 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2304 = getelementptr inbounds [3 x double], [3 x double]* %26, i32 0, i32 0
  %2305 = load double*, double** %11, align 8
  %2306 = load float*, float** %8, align 8
  %2307 = load double, double* %21, align 8
  %2308 = call i32 @_ZN3povL16BacktraceRefractEPNS_15Interior_StructEPdPNS_10Ray_StructES2_S2_Pfd(%"struct.pov::Interior_Struct"* %2299, double* %2302, %"struct.pov::Ray_Struct"* %2303, double* %2304, double* %2305, float* %2306, double %2307)
  store i32 %2308, i32* %49, align 4
  br label %originalBB279

originalBB297alteredBB:                           ; preds = %originalBB297, %1619
  br label %originalBB297

originalBB301alteredBB:                           ; preds = %originalBB301, %1663
  %2309 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %2310 = zext i32 %2309 to i64
  %_302 = sub i64 0, %2310
  %gen303 = add i64 %_302, 2097152
  %_304 = sub i64 %2310, 2097152
  %gen305 = mul i64 %_304, 2097152
  %_306 = sub i64 %2310, 2097152
  %gen307 = mul i64 %_306, 2097152
  %_308 = sub i64 0, %2310
  %gen309 = add i64 %_308, 2097152
  %_310 = shl i64 %2310, 2097152
  %2311 = and i64 %2310, 2097152
  %2312 = icmp ne i64 %2311, 0
  br label %originalBB301

originalBB314alteredBB:                           ; preds = %originalBB314, %1687
  %2313 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %2314 = zext i32 %2313 to i64
  %_315 = sub i64 0, %2314
  %gen316 = add i64 %_315, 32
  %_317 = sub i64 %2314, 32
  %gen318 = mul i64 %_317, 32
  %_319 = sub i64 %2314, 32
  %gen320 = mul i64 %_319, 32
  %_321 = shl i64 %2314, 32
  %_322 = sub i64 0, %2314
  %gen323 = add i64 %_322, 32
  %2315 = and i64 %2314, 32
  %2316 = icmp ne i64 %2315, 0
  br label %originalBB314

originalBB327alteredBB:                           ; preds = %originalBB327, %1708
  store i32 0, i32* %15, align 4
  br label %originalBB327

originalBB331alteredBB:                           ; preds = %originalBB331, %1777
  %2317 = load [5 x float]*, [5 x float]** %53, align 8
  %2318 = load i32, i32* %15, align 4
  %2319 = sext i32 %2318 to i64
  %2320 = getelementptr inbounds [5 x float], [5 x float]* %2317, i64 %2319
  %2321 = getelementptr inbounds [5 x float], [5 x float]* %2320, i64 0, i64 1
  %2322 = load float, float* %2321, align 4
  %2323 = fpext float %2322 to double
  %2324 = fcmp une double %2323, 0.000000e+00
  br label %originalBB331

originalBB335alteredBB:                           ; preds = %originalBB335, %1831
  %2325 = load [5 x float]*, [5 x float]** %53, align 8
  %2326 = load i32, i32* %15, align 4
  %2327 = sext i32 %2326 to i64
  %2328 = getelementptr inbounds [5 x float], [5 x float]* %2325, i64 %2327
  %2329 = getelementptr inbounds [5 x float], [5 x float]* %2328, i64 0, i64 0
  %2330 = load float, float* %2329, align 4
  %2331 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %2332 = load float, float* %2331, align 16
  %2333 = load float*, float** %54, align 8
  %2334 = load i32, i32* %15, align 4
  %2335 = sext i32 %2334 to i64
  %2336 = getelementptr inbounds float, float* %2333, i64 %2335
  %2337 = load float, float* %2336, align 4
  %2338 = call float @_ZSt3powff(float %2332, float %2337)
  %_336 = fsub float %2330, %2338
  %gen337 = fmul float %_336, %2338
  %_338 = fsub float -0.000000e+00, %2330
  %gen339 = fadd float %_338, %2338
  %_340 = fsub float %2330, %2338
  %gen341 = fmul float %_340, %2338
  %_342 = fsub float -0.000000e+00, %2330
  %gen343 = fadd float %_342, %2338
  %2339 = fmul float %2330, %2338
  %2340 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  store float %2339, float* %2340, align 16
  %2341 = load [5 x float]*, [5 x float]** %53, align 8
  %2342 = load i32, i32* %15, align 4
  %2343 = sext i32 %2342 to i64
  %2344 = getelementptr inbounds [5 x float], [5 x float]* %2341, i64 %2343
  %2345 = getelementptr inbounds [5 x float], [5 x float]* %2344, i64 0, i64 1
  %2346 = load float, float* %2345, align 4
  %2347 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %2348 = load float, float* %2347, align 4
  %2349 = load float*, float** %54, align 8
  %2350 = load i32, i32* %15, align 4
  %2351 = sext i32 %2350 to i64
  %2352 = getelementptr inbounds float, float* %2349, i64 %2351
  %2353 = load float, float* %2352, align 4
  %2354 = call float @_ZSt3powff(float %2348, float %2353)
  %_344 = fsub float %2346, %2354
  %gen345 = fmul float %_344, %2354
  %_346 = fsub float %2346, %2354
  %gen347 = fmul float %_346, %2354
  %_348 = fsub float %2346, %2354
  %gen349 = fmul float %_348, %2354
  %_350 = fsub float -0.000000e+00, %2346
  %gen351 = fadd float %_350, %2354
  %_352 = fsub float %2346, %2354
  %gen353 = fmul float %_352, %2354
  %_354 = fsub float -0.000000e+00, %2346
  %gen355 = fadd float %_354, %2354
  %_356 = fsub float -0.000000e+00, %2346
  %gen357 = fadd float %_356, %2354
  %_358 = fsub float -0.000000e+00, %2346
  %gen359 = fadd float %_358, %2354
  %_360 = fsub float %2346, %2354
  %gen361 = fmul float %_360, %2354
  %2355 = fmul float %2346, %2354
  %2356 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  store float %2355, float* %2356, align 4
  %2357 = load [5 x float]*, [5 x float]** %53, align 8
  %2358 = load i32, i32* %15, align 4
  %2359 = sext i32 %2358 to i64
  %2360 = getelementptr inbounds [5 x float], [5 x float]* %2357, i64 %2359
  %2361 = getelementptr inbounds [5 x float], [5 x float]* %2360, i64 0, i64 2
  %2362 = load float, float* %2361, align 4
  %2363 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %2364 = load float, float* %2363, align 8
  %2365 = load float*, float** %54, align 8
  %2366 = load i32, i32* %15, align 4
  %2367 = sext i32 %2366 to i64
  %2368 = getelementptr inbounds float, float* %2365, i64 %2367
  %2369 = load float, float* %2368, align 4
  %2370 = call float @_ZSt3powff(float %2364, float %2369)
  %_362 = fsub float -0.000000e+00, %2362
  %gen363 = fadd float %_362, %2370
  %_364 = fsub float -0.000000e+00, %2362
  %gen365 = fadd float %_364, %2370
  %_366 = fsub float -0.000000e+00, %2362
  %gen367 = fadd float %_366, %2370
  %_368 = fsub float -0.000000e+00, %2362
  %gen369 = fadd float %_368, %2370
  %2371 = fmul float %2362, %2370
  %2372 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  store float %2371, float* %2372, align 8
  br label %originalBB335

originalBB373alteredBB:                           ; preds = %originalBB373, %1927
  %2373 = load double*, double** %51, align 8
  %2374 = load i32, i32* %15, align 4
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds double, double* %2373, i64 %2375
  %2377 = load double, double* %2376, align 8
  %2378 = load [5 x float]*, [5 x float]** %53, align 8
  %2379 = load i32, i32* %15, align 4
  %2380 = sext i32 %2379 to i64
  %2381 = getelementptr inbounds [5 x float], [5 x float]* %2378, i64 %2380
  %2382 = getelementptr inbounds [5 x float], [5 x float]* %2381, i64 0, i64 0
  %2383 = load [5 x float]*, [5 x float]** %53, align 8
  %2384 = load i32, i32* %15, align 4
  %2385 = sext i32 %2384 to i64
  %2386 = getelementptr inbounds [5 x float], [5 x float]* %2383, i64 %2385
  %2387 = getelementptr inbounds [5 x float], [5 x float]* %2386, i64 0, i64 1
  %2388 = load [5 x float]*, [5 x float]** %53, align 8
  %2389 = load i32, i32* %15, align 4
  %2390 = sext i32 %2389 to i64
  %2391 = getelementptr inbounds [5 x float], [5 x float]* %2388, i64 %2390
  %2392 = getelementptr inbounds [5 x float], [5 x float]* %2391, i64 0, i64 2
  %2393 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %2387, float* dereferenceable(4) %2392)
  %2394 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %2382, float* dereferenceable(4) %2393)
  %2395 = load float, float* %2394, align 4
  %2396 = fpext float %2395 to double
  %_374 = fsub double -0.000000e+00, %2377
  %gen375 = fadd double %_374, %2396
  %_376 = fsub double %2377, %2396
  %gen377 = fmul double %_376, %2396
  %_378 = fsub double %2377, %2396
  %gen379 = fmul double %_378, %2396
  %_380 = fsub double -0.000000e+00, %2377
  %gen381 = fadd double %_380, %2396
  %2397 = fmul double %2377, %2396
  store double %2397, double* %22, align 8
  %2398 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 34), align 4
  %2399 = icmp ne i32 %2398, 0
  br label %originalBB373

originalBB385alteredBB:                           ; preds = %originalBB385, %1971
  %2400 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2401 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %2400, i32 0, i32 1
  %2402 = getelementptr inbounds [3 x double], [3 x double]* %2401, i32 0, i32 0
  %2403 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2404 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %2405 = load double*, double** %11, align 8
  %2406 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %2407 = load double, double* %22, align 8
  call void @_ZN3povL7ReflectEPdPNS_10Ray_StructES0_S0_Pfd(double* %2402, %"struct.pov::Ray_Struct"* %2403, double* %2404, double* %2405, float* %2406, double %2407)
  br label %originalBB385

originalBB389alteredBB:                           ; preds = %originalBB389, %2005
  br label %originalBB389

originalBB393alteredBB:                           ; preds = %originalBB393, %2034
  br label %originalBB393

originalBB397alteredBB:                           ; preds = %originalBB397, %2051
  %2408 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2409 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %2408, i32 0, i32 0
  %2410 = load double, double* %2409, align 8
  %2411 = load double, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 17), align 8
  %_398 = fsub double %2411, %2410
  %gen399 = fmul double %_398, %2410
  %_400 = fsub double -0.000000e+00, %2411
  %gen401 = fadd double %_400, %2410
  %_402 = fsub double -0.000000e+00, %2411
  %gen403 = fadd double %_402, %2410
  %_404 = fsub double %2411, %2410
  %gen405 = fmul double %_404, %2410
  %_406 = fsub double %2411, %2410
  %gen407 = fmul double %_406, %2410
  %2412 = fsub double %2411, %2410
  store double %2412, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 17), align 8
  %2413 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %50, align 8
  call void @_ZN3pov14FreeComTexDataEPNS_17ComTexData_StructE(%"struct.pov::ComTexData_Struct"* %2413)
  br label %originalBB397
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL22compute_shadow_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEPNS_10istk_entryE(float*, %"struct.pov::Texture_Struct"*, double*, double*, %"struct.pov::Ray_Struct"*, %"struct.pov::istk_entry"*) #0 {
  %7 = alloca float*, align 8
  %8 = alloca %"struct.pov::Texture_Struct"*, align 8
  %9 = alloca double*, align 8
  %10 = alloca double*, align 8
  %11 = alloca %"struct.pov::Ray_Struct"*, align 8
  %12 = alloca %"struct.pov::istk_entry"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca [3 x double], align 16
  %21 = alloca [5 x float], align 16
  %22 = alloca [5 x float], align 16
  %23 = alloca %"struct.pov::Media_Struct"**, align 8
  %24 = alloca %"struct.pov::Media_Struct"**, align 8
  %25 = alloca %"struct.pov::Texture_Struct"*, align 8
  %26 = alloca %"struct.pov::Interior_Struct"*, align 8
  store float* %0, float** %7, align 8
  store %"struct.pov::Texture_Struct"* %1, %"struct.pov::Texture_Struct"** %8, align 8
  store double* %2, double** %9, align 8
  store double* %3, double** %10, align 8
  store %"struct.pov::Ray_Struct"* %4, %"struct.pov::Ray_Struct"** %11, align 8
  store %"struct.pov::istk_entry"* %5, %"struct.pov::istk_entry"** %12, align 8
  %27 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %28 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %27, i32 0, i32 5
  %29 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %28, align 8
  %30 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %29, i32 0, i32 5
  %31 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %30, align 8
  store %"struct.pov::Interior_Struct"* %31, %"struct.pov::Interior_Struct"** %26, align 8
  %32 = load float*, float** %7, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %32, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00)
  store i32 0, i32* %16, align 4
  %33 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %8, align 8
  store %"struct.pov::Texture_Struct"* %33, %"struct.pov::Texture_Struct"** %25, align 8
  br label %34

; <label>:34:                                     ; preds = %originalBBpart243, %6
  %35 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %36 = icmp ne %"struct.pov::Texture_Struct"* %35, null
  br i1 %36, label %37, label %66

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* @x.85
  %39 = load i32, i32* @y.86
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %37
  %46 = load float*, float** %7, align 8
  %47 = getelementptr inbounds float, float* %46, i64 3
  %48 = load float, float* %47, align 4
  %49 = call float @_ZSt4fabsf(float %48)
  %50 = load float*, float** %7, align 8
  %51 = getelementptr inbounds float, float* %50, i64 4
  %52 = load float, float* %51, align 4
  %53 = call float @_ZSt4fabsf(float %52)
  %54 = fadd float %49, %53
  %55 = fpext float %54 to double
  %56 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %57 = fcmp ogt double %55, %56
  %58 = load i32, i32* @x.85
  %59 = load i32, i32* @y.86
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66

; <label>:66:                                     ; preds = %originalBBpart2, %34
  %67 = phi i1 [ false, %34 ], [ %57, %originalBBpart2 ]
  br i1 %67, label %68, label %383

; <label>:68:                                     ; preds = %66
  %69 = load i32, i32* @x.85
  %70 = load i32, i32* @y.86
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %68
  %77 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %78 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %79 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %78, i32 0, i32 12
  %80 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %79, align 8
  %81 = load double*, double** %9, align 8
  %82 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %83 = call i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float* %77, %"struct.pov::Pigment_Struct"* %80, double* %81, %"struct.pov::istk_entry"* %82)
  store i32 %83, i32* %15, align 4
  %84 = load i32, i32* %15, align 4
  %85 = icmp ne i32 %84, 0
  %86 = load i32, i32* @x.85
  %87 = load i32, i32* @y.86
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br i1 %85, label %94, label %131

; <label>:94:                                     ; preds = %originalBBpart25
  store i32 1, i32* %16, align 4
  %95 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 0
  %96 = load float, float* %95, align 16
  %97 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 3
  %98 = load float, float* %97, align 4
  %99 = fmul float %96, %98
  %100 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 4
  %101 = load float, float* %100, align 16
  %102 = fadd float %99, %101
  %103 = load float*, float** %7, align 8
  %104 = getelementptr inbounds float, float* %103, i64 0
  %105 = load float, float* %104, align 4
  %106 = fmul float %105, %102
  store float %106, float* %104, align 4
  %107 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 1
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 3
  %110 = load float, float* %109, align 4
  %111 = fmul float %108, %110
  %112 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 4
  %113 = load float, float* %112, align 16
  %114 = fadd float %111, %113
  %115 = load float*, float** %7, align 8
  %116 = getelementptr inbounds float, float* %115, i64 1
  %117 = load float, float* %116, align 4
  %118 = fmul float %117, %114
  store float %118, float* %116, align 4
  %119 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 2
  %120 = load float, float* %119, align 8
  %121 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 3
  %122 = load float, float* %121, align 4
  %123 = fmul float %120, %122
  %124 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 4
  %125 = load float, float* %124, align 16
  %126 = fadd float %123, %125
  %127 = load float*, float** %7, align 8
  %128 = getelementptr inbounds float, float* %127, i64 2
  %129 = load float, float* %128, align 4
  %130 = fmul float %129, %126
  store float %130, float* %128, align 4
  br label %131

; <label>:131:                                    ; preds = %94, %originalBBpart25
  %132 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %133 = icmp ne %"struct.pov::Interior_Struct"* %132, null
  br i1 %133, label %134, label %361

; <label>:134:                                    ; preds = %131
  %135 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %136 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %135, i32 0, i32 5
  %137 = load float, float* %136, align 4
  %138 = fpext float %137 to double
  store double %138, double* %17, align 8
  %139 = fcmp une double %138, 0.000000e+00
  br i1 %139, label %140, label %361

; <label>:140:                                    ; preds = %134
  %141 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %142 = load double*, double** %10, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %141, double* %142)
  %143 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %144 = zext i32 %143 to i64
  %145 = and i64 %144, 64
  %146 = icmp ne i64 %145, 0
  br i1 %146, label %147, label %330

; <label>:147:                                    ; preds = %140
  %148 = load i32, i32* @x.85
  %149 = load i32, i32* @y.86
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %147
  %156 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %157 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %156, i32 0, i32 13
  %158 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %157, align 8
  %159 = icmp ne %"struct.pov::Tnormal_Struct"* %158, null
  %160 = load i32, i32* @x.85
  %161 = load i32, i32* @y.86
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br i1 %159, label %168, label %330

; <label>:168:                                    ; preds = %originalBBpart29
  %169 = load i32, i32* @x.85
  %170 = load i32, i32* @y.86
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %168
  %177 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 28), align 8
  %178 = icmp sgt i32 %177, 310
  %179 = load i32, i32* @x.85
  %180 = load i32, i32* @y.86
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %178, label %187, label %306

; <label>:187:                                    ; preds = %originalBBpart213
  store i32 0, i32* %13, align 4
  br label %188

; <label>:188:                                    ; preds = %226, %187
  %189 = load i32, i32* @x.85
  %190 = load i32, i32* @y.86
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %188
  %197 = load i32, i32* %13, align 4
  %198 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %199 = icmp slt i32 %197, %198
  %200 = load i32, i32* @x.85
  %201 = load i32, i32* @y.86
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br i1 %199, label %208, label %229

; <label>:208:                                    ; preds = %originalBBpart217
  %209 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %210 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %211 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %212 = load i32, i32* %13, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %211, i64 %213
  %215 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %214, align 8
  %216 = bitcast %"struct.pov::Texture_Struct"* %215 to %"struct.pov::Pattern_Struct"*
  %217 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %218 = load i32, i32* %13, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %217, i64 %219
  %221 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %220, align 8
  %222 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %221, i32 0, i32 2
  %223 = load i16, i16* %222, align 4
  %224 = zext i16 %223 to i32
  %225 = and i32 %224, 8
  call void @_ZN3pov11Warp_NormalEPdS0_PNS_14Pattern_StructEi(double* %209, double* %210, %"struct.pov::Pattern_Struct"* %216, i32 %225)
  br label %226

; <label>:226:                                    ; preds = %208
  %227 = load i32, i32* %13, align 4
  %228 = add nsw i32 %227, 1
  store i32 %228, i32* %13, align 4
  br label %188

; <label>:229:                                    ; preds = %originalBBpart217
  %230 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %231 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %232 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %231, i32 0, i32 13
  %233 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %232, align 8
  %234 = load double*, double** %9, align 8
  %235 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %230, %"struct.pov::Tnormal_Struct"* %233, double* %234, %"struct.pov::istk_entry"* %235)
  %236 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %237 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %236, i32 0, i32 13
  %238 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %237, align 8
  %239 = getelementptr inbounds %"struct.pov::Tnormal_Struct", %"struct.pov::Tnormal_Struct"* %238, i32 0, i32 2
  %240 = load i16, i16* %239, align 4
  %241 = zext i16 %240 to i32
  %242 = and i32 %241, 8
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %244, label %246

; <label>:244:                                    ; preds = %229
  %245 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %245)
  br label %246

; <label>:246:                                    ; preds = %244, %229
  %247 = load i32, i32* @x.85
  %248 = load i32, i32* @y.86
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %246
  %255 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %256 = sub nsw i32 %255, 1
  store i32 %256, i32* %13, align 4
  %257 = load i32, i32* @x.85
  %258 = load i32, i32* @y.86
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart231, label %originalBB19alteredBB

originalBBpart231:                                ; preds = %originalBB19
  br label %265

; <label>:265:                                    ; preds = %302, %originalBBpart231
  %266 = load i32, i32* @x.85
  %267 = load i32, i32* @y.86
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %265
  %274 = load i32, i32* %13, align 4
  %275 = icmp sge i32 %274, 0
  %276 = load i32, i32* @x.85
  %277 = load i32, i32* @y.86
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %275, label %284, label %305

; <label>:284:                                    ; preds = %originalBBpart235
  %285 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %286 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %287 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %288 = load i32, i32* %13, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %287, i64 %289
  %291 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %290, align 8
  %292 = bitcast %"struct.pov::Texture_Struct"* %291 to %"struct.pov::Pattern_Struct"*
  %293 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %294 = load i32, i32* %13, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %293, i64 %295
  %297 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %296, align 8
  %298 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %297, i32 0, i32 2
  %299 = load i16, i16* %298, align 4
  %300 = zext i16 %299 to i32
  %301 = and i32 %300, 8
  call void @_ZN3pov13UnWarp_NormalEPdS0_PNS_14Pattern_StructEi(double* %285, double* %286, %"struct.pov::Pattern_Struct"* %292, i32 %301)
  br label %302

; <label>:302:                                    ; preds = %284
  %303 = load i32, i32* %13, align 4
  %304 = add nsw i32 %303, -1
  store i32 %304, i32* %13, align 4
  br label %265

; <label>:305:                                    ; preds = %originalBBpart235
  br label %313

; <label>:306:                                    ; preds = %originalBBpart213
  %307 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %308 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %309 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %308, i32 0, i32 13
  %310 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %309, align 8
  %311 = load double*, double** %9, align 8
  %312 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %307, %"struct.pov::Tnormal_Struct"* %310, double* %311, %"struct.pov::istk_entry"* %312)
  br label %313

; <label>:313:                                    ; preds = %306, %305
  %314 = load i32, i32* @x.85
  %315 = load i32, i32* @y.86
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %313
  %322 = load i32, i32* @x.85
  %323 = load i32, i32* @y.86
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %330

; <label>:330:                                    ; preds = %originalBBpart239, %originalBBpart29, %140
  %331 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %332 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %333 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %332, i32 0, i32 1
  %334 = getelementptr inbounds [3 x double], [3 x double]* %333, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %18, double* %331, double* %334)
  %335 = load double, double* %18, align 8
  %336 = call double @fabs(double %335) #5
  %337 = load double, double* %17, align 8
  %338 = call double @pow(double %336, double %337) #7
  %339 = fadd double 1.000000e+00, %338
  store double %339, double* %19, align 8
  %340 = load double, double* %19, align 8
  %341 = load float*, float** %7, align 8
  %342 = getelementptr inbounds float, float* %341, i64 0
  %343 = load float, float* %342, align 4
  %344 = fpext float %343 to double
  %345 = fmul double %344, %340
  %346 = fptrunc double %345 to float
  store float %346, float* %342, align 4
  %347 = load double, double* %19, align 8
  %348 = load float*, float** %7, align 8
  %349 = getelementptr inbounds float, float* %348, i64 1
  %350 = load float, float* %349, align 4
  %351 = fpext float %350 to double
  %352 = fmul double %351, %347
  %353 = fptrunc double %352 to float
  store float %353, float* %349, align 4
  %354 = load double, double* %19, align 8
  %355 = load float*, float** %7, align 8
  %356 = getelementptr inbounds float, float* %355, i64 2
  %357 = load float, float* %356, align 4
  %358 = fpext float %357 to double
  %359 = fmul double %358, %354
  %360 = fptrunc double %359 to float
  store float %360, float* %356, align 4
  br label %361

; <label>:361:                                    ; preds = %330, %134, %131
  br label %362

; <label>:362:                                    ; preds = %361
  %363 = load i32, i32* @x.85
  %364 = load i32, i32* @y.86
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %362
  %371 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %372 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %371, i32 0, i32 8
  %373 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %372, align 8
  %374 = bitcast %"struct.pov::Pattern_Struct"* %373 to %"struct.pov::Texture_Struct"*
  store %"struct.pov::Texture_Struct"* %374, %"struct.pov::Texture_Struct"** %25, align 8
  %375 = load i32, i32* @x.85
  %376 = load i32, i32* @y.86
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %34

; <label>:383:                                    ; preds = %66
  %384 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %385 = icmp ne %"struct.pov::Interior_Struct"* %384, null
  br i1 %385, label %386, label %632

; <label>:386:                                    ; preds = %383
  %387 = getelementptr inbounds [5 x float], [5 x float]* %21, i32 0, i32 0
  call void @_ZN3pov11Make_ColourEPffff(float* %387, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00)
  %388 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %389 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %390 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %388, %"struct.pov::Interior_Struct"* %389)
  %391 = icmp sge i32 %390, 0
  br i1 %391, label %392, label %615

; <label>:392:                                    ; preds = %386
  %393 = load i32, i32* @x.85
  %394 = load i32, i32* @y.86
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %392
  %401 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %402 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %401, i32 0, i32 8
  %403 = load float, float* %402, align 8
  %404 = fpext float %403 to double
  %405 = fcmp ogt double %404, 0.000000e+00
  %406 = load i32, i32* @x.85
  %407 = load i32, i32* @y.86
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br i1 %405, label %414, label %598

; <label>:414:                                    ; preds = %originalBBpart247
  %415 = load i32, i32* @x.85
  %416 = load i32, i32* @y.86
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %414
  %423 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %424 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %423, i32 0, i32 7
  %425 = load float, float* %424, align 4
  %426 = call float @_ZSt4fabsf(float %425)
  %427 = fpext float %426 to double
  %428 = fcmp ogt double %427, 1.000000e-07
  %429 = load i32, i32* @x.85
  %430 = load i32, i32* @y.86
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %428, label %437, label %598

; <label>:437:                                    ; preds = %originalBBpart251
  %438 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %439 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %438, i32 0, i32 8
  %440 = load float, float* %439, align 8
  %441 = fcmp oge float %440, 1.000000e+03
  br i1 %441, label %442, label %509

; <label>:442:                                    ; preds = %437
  %443 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %444 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %443, i32 0, i32 9
  %445 = getelementptr inbounds [5 x float], [5 x float]* %444, i64 0, i64 0
  %446 = load float, float* %445, align 4
  %447 = fpext float %446 to double
  %448 = fsub double 1.000000e+00, %447
  %449 = fsub double -0.000000e+00, %448
  %450 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %451 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %450, i32 0, i32 0
  %452 = load double, double* %451, align 8
  %453 = fmul double %449, %452
  %454 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %455 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %454, i32 0, i32 7
  %456 = load float, float* %455, align 4
  %457 = fpext float %456 to double
  %458 = fdiv double %453, %457
  %459 = call double @exp(double %458) #7
  %460 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 0
  %461 = load float, float* %460, align 16
  %462 = fpext float %461 to double
  %463 = fmul double %462, %459
  %464 = fptrunc double %463 to float
  store float %464, float* %460, align 16
  %465 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %466 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %465, i32 0, i32 9
  %467 = getelementptr inbounds [5 x float], [5 x float]* %466, i64 0, i64 1
  %468 = load float, float* %467, align 4
  %469 = fpext float %468 to double
  %470 = fsub double 1.000000e+00, %469
  %471 = fsub double -0.000000e+00, %470
  %472 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %473 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %472, i32 0, i32 0
  %474 = load double, double* %473, align 8
  %475 = fmul double %471, %474
  %476 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %477 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %476, i32 0, i32 7
  %478 = load float, float* %477, align 4
  %479 = fpext float %478 to double
  %480 = fdiv double %475, %479
  %481 = call double @exp(double %480) #7
  %482 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 1
  %483 = load float, float* %482, align 4
  %484 = fpext float %483 to double
  %485 = fmul double %484, %481
  %486 = fptrunc double %485 to float
  store float %486, float* %482, align 4
  %487 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %488 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %487, i32 0, i32 9
  %489 = getelementptr inbounds [5 x float], [5 x float]* %488, i64 0, i64 2
  %490 = load float, float* %489, align 4
  %491 = fpext float %490 to double
  %492 = fsub double 1.000000e+00, %491
  %493 = fsub double -0.000000e+00, %492
  %494 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %495 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %494, i32 0, i32 0
  %496 = load double, double* %495, align 8
  %497 = fmul double %493, %496
  %498 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %499 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %498, i32 0, i32 7
  %500 = load float, float* %499, align 4
  %501 = fpext float %500 to double
  %502 = fdiv double %497, %501
  %503 = call double @exp(double %502) #7
  %504 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 2
  %505 = load float, float* %504, align 8
  %506 = fpext float %505 to double
  %507 = fmul double %506, %503
  %508 = fptrunc double %507 to float
  store float %508, float* %504, align 8
  br label %581

; <label>:509:                                    ; preds = %437
  %510 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %511 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %510, i32 0, i32 0
  %512 = load double, double* %511, align 8
  %513 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %514 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %513, i32 0, i32 7
  %515 = load float, float* %514, align 4
  %516 = fpext float %515 to double
  %517 = fdiv double %512, %516
  %518 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %519 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %518, i32 0, i32 8
  %520 = load float, float* %519, align 8
  %521 = fpext float %520 to double
  %522 = call double @pow(double %517, double %521) #7
  %523 = fadd double 1.000000e+00, %522
  store double %523, double* %19, align 8
  %524 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %525 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %524, i32 0, i32 9
  %526 = getelementptr inbounds [5 x float], [5 x float]* %525, i64 0, i64 0
  %527 = load float, float* %526, align 4
  %528 = fpext float %527 to double
  %529 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %530 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %529, i32 0, i32 9
  %531 = getelementptr inbounds [5 x float], [5 x float]* %530, i64 0, i64 0
  %532 = load float, float* %531, align 4
  %533 = fsub float 1.000000e+00, %532
  %534 = fpext float %533 to double
  %535 = load double, double* %19, align 8
  %536 = fdiv double %534, %535
  %537 = fadd double %528, %536
  %538 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 0
  %539 = load float, float* %538, align 16
  %540 = fpext float %539 to double
  %541 = fmul double %540, %537
  %542 = fptrunc double %541 to float
  store float %542, float* %538, align 16
  %543 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %544 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %543, i32 0, i32 9
  %545 = getelementptr inbounds [5 x float], [5 x float]* %544, i64 0, i64 1
  %546 = load float, float* %545, align 4
  %547 = fpext float %546 to double
  %548 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %549 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %548, i32 0, i32 9
  %550 = getelementptr inbounds [5 x float], [5 x float]* %549, i64 0, i64 1
  %551 = load float, float* %550, align 4
  %552 = fsub float 1.000000e+00, %551
  %553 = fpext float %552 to double
  %554 = load double, double* %19, align 8
  %555 = fdiv double %553, %554
  %556 = fadd double %547, %555
  %557 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 1
  %558 = load float, float* %557, align 4
  %559 = fpext float %558 to double
  %560 = fmul double %559, %556
  %561 = fptrunc double %560 to float
  store float %561, float* %557, align 4
  %562 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %563 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %562, i32 0, i32 9
  %564 = getelementptr inbounds [5 x float], [5 x float]* %563, i64 0, i64 2
  %565 = load float, float* %564, align 4
  %566 = fpext float %565 to double
  %567 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %568 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %567, i32 0, i32 9
  %569 = getelementptr inbounds [5 x float], [5 x float]* %568, i64 0, i64 2
  %570 = load float, float* %569, align 4
  %571 = fsub float 1.000000e+00, %570
  %572 = fpext float %571 to double
  %573 = load double, double* %19, align 8
  %574 = fdiv double %572, %573
  %575 = fadd double %566, %574
  %576 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 2
  %577 = load float, float* %576, align 8
  %578 = fpext float %577 to double
  %579 = fmul double %578, %575
  %580 = fptrunc double %579 to float
  store float %580, float* %576, align 8
  br label %581

; <label>:581:                                    ; preds = %509, %442
  %582 = load i32, i32* @x.85
  %583 = load i32, i32* @y.86
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %581
  %590 = load i32, i32* @x.85
  %591 = load i32, i32* @y.86
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %598

; <label>:598:                                    ; preds = %originalBBpart255, %originalBBpart251, %originalBBpart247
  %599 = load i32, i32* @x.85
  %600 = load i32, i32* @y.86
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %598
  %607 = load i32, i32* @x.85
  %608 = load i32, i32* @y.86
  %609 = sub i32 %607, 1
  %610 = mul i32 %607, %609
  %611 = urem i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = icmp slt i32 %608, 10
  %614 = or i1 %612, %613
  br i1 %614, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %615

; <label>:615:                                    ; preds = %originalBBpart259, %386
  %616 = load i32, i32* @x.85
  %617 = load i32, i32* @y.86
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %615
  %624 = load i32, i32* @x.85
  %625 = load i32, i32* @y.86
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %634

; <label>:632:                                    ; preds = %383
  %633 = getelementptr inbounds [5 x float], [5 x float]* %21, i32 0, i32 0
  call void @_ZN3pov11Make_ColourEPffff(float* %633, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00)
  br label %634

; <label>:634:                                    ; preds = %632, %originalBBpart263
  %635 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 0
  %636 = load float, float* %635, align 16
  %637 = load float*, float** %7, align 8
  %638 = getelementptr inbounds float, float* %637, i64 0
  %639 = load float, float* %638, align 4
  %640 = fmul float %639, %636
  store float %640, float* %638, align 4
  %641 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 1
  %642 = load float, float* %641, align 4
  %643 = load float*, float** %7, align 8
  %644 = getelementptr inbounds float, float* %643, i64 1
  %645 = load float, float* %644, align 4
  %646 = fmul float %645, %642
  store float %646, float* %644, align 4
  %647 = getelementptr inbounds [5 x float], [5 x float]* %21, i64 0, i64 2
  %648 = load float, float* %647, align 8
  %649 = load float*, float** %7, align 8
  %650 = getelementptr inbounds float, float* %649, i64 2
  %651 = load float, float* %650, align 4
  %652 = fmul float %651, %648
  store float %652, float* %650, align 4
  %653 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %654 = zext i32 %653 to i64
  %655 = and i64 %654, 128
  %656 = icmp ne i64 %655, 0
  br i1 %656, label %657, label %830

; <label>:657:                                    ; preds = %634
  %658 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %659 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %658, i32 0, i32 2
  %660 = load i32, i32* %659, align 8
  %661 = icmp sgt i32 %660, -1
  br i1 %661, label %662, label %830

; <label>:662:                                    ; preds = %657
  store i32 1, i32* %14, align 4
  store i32 0, i32* %13, align 4
  br label %663

; <label>:663:                                    ; preds = %697, %662
  %664 = load i32, i32* %13, align 4
  %665 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %666 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %665, i32 0, i32 2
  %667 = load i32, i32* %666, align 8
  %668 = icmp sle i32 %664, %667
  br i1 %668, label %669, label %700

; <label>:669:                                    ; preds = %663
  %670 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %671 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %670, i32 0, i32 4
  %672 = load i32, i32* %13, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %671, i64 0, i64 %673
  %675 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %674, align 8
  %676 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %675, i32 0, i32 1
  %677 = load i32, i32* %676, align 4
  %678 = icmp ne i32 %677, 0
  br i1 %678, label %696, label %679

; <label>:679:                                    ; preds = %669
  %680 = load i32, i32* @x.85
  %681 = load i32, i32* @y.86
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %679
  store i32 0, i32* %14, align 4
  %688 = load i32, i32* @x.85
  %689 = load i32, i32* @y.86
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %700

; <label>:696:                                    ; preds = %669
  br label %697

; <label>:697:                                    ; preds = %696
  %698 = load i32, i32* %13, align 4
  %699 = add nsw i32 %698, 1
  store i32 %699, i32* %13, align 4
  br label %663

; <label>:700:                                    ; preds = %originalBBpart267, %663
  %701 = load i32, i32* %14, align 4
  %702 = icmp ne i32 %701, 0
  br i1 %702, label %703, label %829

; <label>:703:                                    ; preds = %700
  %704 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %705 = add nsw i64 %704, 1
  store i64 %705, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %706 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %707 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %708 = icmp sge i64 %706, %707
  br i1 %708, label %709, label %712

; <label>:709:                                    ; preds = %703
  %710 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %711 = mul nsw i64 %710, 2
  call void @_ZN3pov22ResizeMediaMallocPoolsEl(i64 %711)
  br label %712

; <label>:712:                                    ; preds = %709, %703
  %713 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %714 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %713, i32 0, i32 2
  %715 = load i32, i32* %714, align 8
  %716 = add nsw i32 %715, 2
  %717 = sext i32 %716 to i64
  %718 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %719 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %720 = getelementptr inbounds i64, i64* %718, i64 %719
  %721 = load i64, i64* %720, align 8
  %722 = icmp sge i64 %717, %721
  br i1 %722, label %723, label %751

; <label>:723:                                    ; preds = %712
  %724 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %725 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %726 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %724, i64 %725
  %727 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %726, align 8
  %728 = bitcast %"struct.pov::Media_Struct"** %727 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %728, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4406)
  %729 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %730 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %731 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %729, i64 %730
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %731, align 8
  %732 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %733 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %732, i32 0, i32 2
  %734 = load i32, i32* %733, align 8
  %735 = add nsw i32 %734, 2
  %736 = sext i32 %735 to i64
  %737 = mul i64 %736, 8
  %738 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %737, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4407, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %739 = bitcast i8* %738 to %"struct.pov::Media_Struct"**
  %740 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %741 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %742 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %740, i64 %741
  store %"struct.pov::Media_Struct"** %739, %"struct.pov::Media_Struct"*** %742, align 8
  %743 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %744 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %743, i32 0, i32 2
  %745 = load i32, i32* %744, align 8
  %746 = add nsw i32 %745, 2
  %747 = sext i32 %746 to i64
  %748 = load i64*, i64** @_ZN3pov23ShadowMediaListPoolSizeE, align 8
  %749 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %750 = getelementptr inbounds i64, i64* %748, i64 %749
  store i64 %747, i64* %750, align 8
  br label %751

; <label>:751:                                    ; preds = %723, %712
  %752 = load i32, i32* @x.85
  %753 = load i32, i32* @y.86
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %751
  %760 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %761 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %762 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %760, i64 %761
  %763 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %762, align 8
  store %"struct.pov::Media_Struct"** %763, %"struct.pov::Media_Struct"*** %23, align 8
  %764 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %23, align 8
  store %"struct.pov::Media_Struct"** %764, %"struct.pov::Media_Struct"*** %24, align 8
  store i32 0, i32* %13, align 4
  %765 = load i32, i32* @x.85
  %766 = load i32, i32* @y.86
  %767 = sub i32 %765, 1
  %768 = mul i32 %765, %767
  %769 = urem i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = icmp slt i32 %766, 10
  %772 = or i1 %770, %771
  br i1 %772, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %773

; <label>:773:                                    ; preds = %813, %originalBBpart271
  %774 = load i32, i32* %13, align 4
  %775 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %776 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %775, i32 0, i32 2
  %777 = load i32, i32* %776, align 8
  %778 = icmp sle i32 %774, %777
  br i1 %778, label %779, label %816

; <label>:779:                                    ; preds = %773
  %780 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %781 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %780, i32 0, i32 4
  %782 = load i32, i32* %13, align 4
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %781, i64 0, i64 %783
  %785 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %784, align 8
  %786 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %785, i32 0, i32 1
  %787 = load i32, i32* %786, align 4
  %788 = icmp ne i32 %787, 0
  br i1 %788, label %789, label %812

; <label>:789:                                    ; preds = %779
  %790 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %791 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %790, i32 0, i32 4
  %792 = load i32, i32* %13, align 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %791, i64 0, i64 %793
  %795 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %794, align 8
  %796 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %795, i32 0, i32 10
  %797 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %796, align 8
  %798 = icmp ne %"struct.pov::Media_Struct"* %797, null
  br i1 %798, label %799, label %811

; <label>:799:                                    ; preds = %789
  %800 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %801 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %800, i32 0, i32 4
  %802 = load i32, i32* %13, align 4
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %801, i64 0, i64 %803
  %805 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %804, align 8
  %806 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %805, i32 0, i32 10
  %807 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %806, align 8
  %808 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %24, align 8
  store %"struct.pov::Media_Struct"* %807, %"struct.pov::Media_Struct"** %808, align 8
  %809 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %24, align 8
  %810 = getelementptr inbounds %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %809, i32 1
  store %"struct.pov::Media_Struct"** %810, %"struct.pov::Media_Struct"*** %24, align 8
  br label %811

; <label>:811:                                    ; preds = %799, %789
  br label %812

; <label>:812:                                    ; preds = %811, %779
  br label %813

; <label>:813:                                    ; preds = %812
  %814 = load i32, i32* %13, align 4
  %815 = add nsw i32 %814, 1
  store i32 %815, i32* %13, align 4
  br label %773

; <label>:816:                                    ; preds = %773
  %817 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %24, align 8
  store %"struct.pov::Media_Struct"* null, %"struct.pov::Media_Struct"** %817, align 8
  %818 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %23, align 8
  %819 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %818, align 8
  %820 = icmp ne %"struct.pov::Media_Struct"* %819, null
  br i1 %820, label %821, label %826

; <label>:821:                                    ; preds = %816
  %822 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %23, align 8
  %823 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %824 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %825 = load float*, float** %7, align 8
  call void @_ZN3pov14Simulate_MediaEPPNS_12Media_StructEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Media_Struct"** %822, %"struct.pov::Ray_Struct"* %823, %"struct.pov::istk_entry"* %824, float* %825, i32 1)
  br label %826

; <label>:826:                                    ; preds = %821, %816
  %827 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %828 = add nsw i64 %827, -1
  store i64 %828, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  br label %829

; <label>:829:                                    ; preds = %826, %700
  br label %830

; <label>:830:                                    ; preds = %829, %657, %634
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %37
  %831 = load float*, float** %7, align 8
  %832 = getelementptr inbounds float, float* %831, i64 3
  %833 = load float, float* %832, align 4
  %834 = call float @_ZSt4fabsf(float %833)
  %835 = load float*, float** %7, align 8
  %836 = getelementptr inbounds float, float* %835, i64 4
  %837 = load float, float* %836, align 4
  %838 = call float @_ZSt4fabsf(float %837)
  %_ = fsub float %834, %838
  %gen = fmul float %_, %838
  %_1 = fsub float -0.000000e+00, %834
  %gen2 = fadd float %_1, %838
  %839 = fadd float %834, %838
  %840 = fpext float %839 to double
  %841 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %842 = fcmp ogt double %840, %841
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %68
  %843 = getelementptr inbounds [5 x float], [5 x float]* %22, i32 0, i32 0
  %844 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %845 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %844, i32 0, i32 12
  %846 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %845, align 8
  %847 = load double*, double** %9, align 8
  %848 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %12, align 8
  %849 = call i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float* %843, %"struct.pov::Pigment_Struct"* %846, double* %847, %"struct.pov::istk_entry"* %848)
  store i32 %849, i32* %15, align 4
  %850 = load i32, i32* %15, align 4
  %851 = icmp ne i32 %850, 0
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %147
  %852 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %853 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %852, i32 0, i32 13
  %854 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %853, align 8
  %855 = icmp ne %"struct.pov::Tnormal_Struct"* %854, null
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %168
  %856 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 28), align 8
  %857 = icmp sgt i32 %856, 310
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %188
  %858 = load i32, i32* %13, align 4
  %859 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %860 = icmp slt i32 %858, %859
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %246
  %861 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %_20 = sub i32 0, %861
  %gen21 = add i32 %_20, 1
  %_22 = shl i32 %861, 1
  %_23 = shl i32 %861, 1
  %_24 = shl i32 %861, 1
  %_25 = sub i32 0, %861
  %gen26 = add i32 %_25, 1
  %_27 = shl i32 %861, 1
  %_28 = shl i32 %861, 1
  %_29 = shl i32 %861, 1
  %862 = sub nsw i32 %861, 1
  store i32 %862, i32* %13, align 4
  br label %originalBB19

originalBB33alteredBB:                            ; preds = %originalBB33, %265
  %863 = load i32, i32* %13, align 4
  %864 = icmp sge i32 %863, 0
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %313
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %362
  %865 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %25, align 8
  %866 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %865, i32 0, i32 8
  %867 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %866, align 8
  %868 = bitcast %"struct.pov::Pattern_Struct"* %867 to %"struct.pov::Texture_Struct"*
  store %"struct.pov::Texture_Struct"* %868, %"struct.pov::Texture_Struct"** %25, align 8
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %392
  %869 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %870 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %869, i32 0, i32 8
  %871 = load float, float* %870, align 8
  %872 = fpext float %871 to double
  %873 = fcmp ogt double %872, 0.000000e+00
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %414
  %874 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %875 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %874, i32 0, i32 7
  %876 = load float, float* %875, align 4
  %877 = call float @_ZSt4fabsf(float %876)
  %878 = fpext float %877 to double
  %879 = fcmp ogt double %878, 1.000000e-07
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %581
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %598
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %615
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %679
  store i32 0, i32* %14, align 4
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %751
  %880 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov19ShadowMediaListPoolE, align 8
  %881 = load i64, i64* @_ZN3pov20ShadowMediaListIndexE, align 8
  %882 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %880, i64 %881
  %883 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %882, align 8
  store %"struct.pov::Media_Struct"** %883, %"struct.pov::Media_Struct"*** %23, align 8
  %884 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %23, align 8
  store %"struct.pov::Media_Struct"** %884, %"struct.pov::Media_Struct"*** %24, align 8
  store i32 0, i32* %13, align 4
  br label %originalBB69
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL23compute_lighted_textureEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryE(float*, %"struct.pov::Texture_Struct"*, double*, double*, %"struct.pov::Ray_Struct"*, double, %"struct.pov::istk_entry"*) #0 {
  %8 = alloca float*, align 8
  %9 = alloca %"struct.pov::Texture_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Ray_Struct"*, align 8
  %13 = alloca double, align 8
  %14 = alloca %"struct.pov::istk_entry"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca double, align 8
  %27 = alloca [3 x double], align 16
  %28 = alloca [3 x double], align 16
  %29 = alloca [5 x float], align 16
  %30 = alloca [5 x float], align 16
  %31 = alloca [5 x float], align 16
  %32 = alloca [5 x float], align 16
  %33 = alloca [5 x float], align 16
  %34 = alloca [5 x float], align 16
  %35 = alloca [5 x float], align 16
  %36 = alloca [5 x float], align 16
  %37 = alloca %"struct.pov::Interior_Struct"*, align 8
  %38 = alloca %"struct.pov::Media_Struct"**, align 8
  %39 = alloca %"struct.pov::Media_Struct"**, align 8
  %40 = alloca double, align 8
  %41 = alloca %"struct.pov::Texture_Struct"*, align 8
  %42 = alloca i32, align 4
  %43 = alloca %"struct.pov::ComTexData_Struct"*, align 8
  %44 = alloca double*, align 8
  %45 = alloca [3 x double]*, align 8
  %46 = alloca [5 x float]*, align 8
  %47 = alloca float*, align 8
  %48 = alloca double, align 8
  %49 = alloca double, align 8
  %50 = alloca double, align 8
  %51 = alloca double, align 8
  %52 = alloca double, align 8
  %53 = alloca double, align 8
  %54 = alloca double, align 8
  %55 = alloca double, align 8
  %56 = alloca double, align 8
  %57 = alloca double, align 8
  %58 = alloca double, align 8
  %59 = alloca double, align 8
  %60 = alloca double, align 8
  %61 = alloca float, align 4
  %62 = alloca float, align 4
  %63 = alloca float, align 4
  store float* %0, float** %8, align 8
  store %"struct.pov::Texture_Struct"* %1, %"struct.pov::Texture_Struct"** %9, align 8
  store double* %2, double** %10, align 8
  store double* %3, double** %11, align 8
  store %"struct.pov::Ray_Struct"* %4, %"struct.pov::Ray_Struct"** %12, align 8
  store double %5, double* %13, align 8
  store %"struct.pov::istk_entry"* %6, %"struct.pov::istk_entry"** %14, align 8
  %64 = call %"struct.pov::ComTexData_Struct"* @_ZN3pov13NewComTexDataEv()
  store %"struct.pov::ComTexData_Struct"* %64, %"struct.pov::ComTexData_Struct"** %43, align 8
  %65 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %43, align 8
  %66 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %65, i32 0, i32 2
  %67 = getelementptr inbounds [100 x double], [100 x double]* %66, i32 0, i32 0
  store double* %67, double** %44, align 8
  %68 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %43, align 8
  %69 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %68, i32 0, i32 3
  %70 = getelementptr inbounds [100 x [3 x double]], [100 x [3 x double]]* %69, i32 0, i32 0
  store [3 x double]* %70, [3 x double]** %45, align 8
  %71 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %43, align 8
  %72 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %71, i32 0, i32 4
  %73 = getelementptr inbounds [100 x [5 x float]], [100 x [5 x float]]* %72, i32 0, i32 0
  store [5 x float]* %73, [5 x float]** %46, align 8
  %74 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %43, align 8
  %75 = getelementptr inbounds %"struct.pov::ComTexData_Struct", %"struct.pov::ComTexData_Struct"* %74, i32 0, i32 5
  %76 = getelementptr inbounds [100 x float], [100 x float]* %75, i32 0, i32 0
  store float* %76, float** %47, align 8
  %77 = load float*, float** %8, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %77, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %78 = getelementptr inbounds [5 x float], [5 x float]* %33, i32 0, i32 0
  call void @_ZN3pov12Make_ColourAEPffffff(float* %78, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00)
  store double 1.000000e+00, double* %25, align 8
  store i32 0, i32* %16, align 4
  %79 = getelementptr inbounds [5 x float], [5 x float]* %35, i32 0, i32 0
  call void @_ZN3pov12Make_ColourAEPffffff(float* %79, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %80 = load i8, i8* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 59), align 4
  %81 = trunc i8 %80 to i1
  br i1 %81, label %82, label %103

; <label>:82:                                     ; preds = %7
  %83 = load i32, i32* @_ZN3pov21Radiosity_Trace_LevelE, align 4
  %84 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 43), align 8
  %85 = icmp sle i32 %83, %84
  br i1 %85, label %86, label %103

; <label>:86:                                     ; preds = %82
  %87 = load i32, i32* @x.87
  %88 = load i32, i32* @y.88
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %86
  store i32 1, i32* %17, align 4
  %95 = load i32, i32* @x.87
  %96 = load i32, i32* @y.88
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %120

; <label>:103:                                    ; preds = %82, %7
  %104 = load i32, i32* @x.87
  %105 = load i32, i32* @y.88
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %103
  store i32 0, i32* %17, align 4
  %112 = load i32, i32* @x.87
  %113 = load i32, i32* @y.88
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %120

; <label>:120:                                    ; preds = %originalBBpart24, %originalBBpart2
  store i32 0, i32* %20, align 4
  store i32 0, i32* %18, align 4
  %121 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %9, align 8
  store %"struct.pov::Texture_Struct"* %121, %"struct.pov::Texture_Struct"** %41, align 8
  br label %122

; <label>:122:                                    ; preds = %originalBBpart2219, %120
  %123 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %124 = icmp ne %"struct.pov::Texture_Struct"* %123, null
  br i1 %124, label %125, label %145

; <label>:125:                                    ; preds = %122
  %126 = load i32, i32* @x.87
  %127 = load i32, i32* @y.88
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %125
  %134 = load double, double* %25, align 8
  %135 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %136 = fcmp ogt double %134, %135
  %137 = load i32, i32* @x.87
  %138 = load i32, i32* @y.88
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %145

; <label>:145:                                    ; preds = %originalBBpart28, %122
  %146 = phi i1 [ false, %122 ], [ %136, %originalBBpart28 ]
  br i1 %146, label %147, label %1115

; <label>:147:                                    ; preds = %145
  %148 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %149 = load double*, double** %11, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %148, double* %149)
  %150 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %151 = zext i32 %150 to i64
  %152 = and i64 %151, 64
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %321

; <label>:154:                                    ; preds = %147
  %155 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %156 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %155, i32 0, i32 13
  %157 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %156, align 8
  %158 = icmp ne %"struct.pov::Tnormal_Struct"* %157, null
  br i1 %158, label %159, label %321

; <label>:159:                                    ; preds = %154
  %160 = load i32, i32* @x.87
  %161 = load i32, i32* @y.88
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %159
  %168 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 28), align 8
  %169 = icmp sgt i32 %168, 310
  %170 = load i32, i32* @x.87
  %171 = load i32, i32* @y.88
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %169, label %178, label %297

; <label>:178:                                    ; preds = %originalBBpart212
  store i32 0, i32* %15, align 4
  br label %179

; <label>:179:                                    ; preds = %originalBBpart224, %178
  %180 = load i32, i32* @x.87
  %181 = load i32, i32* @y.88
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %179
  %188 = load i32, i32* %15, align 4
  %189 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %190 = icmp slt i32 %188, %189
  %191 = load i32, i32* @x.87
  %192 = load i32, i32* @y.88
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %190, label %199, label %236

; <label>:199:                                    ; preds = %originalBBpart216
  %200 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %201 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %202 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %203 = load i32, i32* %15, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %202, i64 %204
  %206 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %205, align 8
  %207 = bitcast %"struct.pov::Texture_Struct"* %206 to %"struct.pov::Pattern_Struct"*
  %208 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %209 = load i32, i32* %15, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %208, i64 %210
  %212 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %211, align 8
  %213 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %212, i32 0, i32 2
  %214 = load i16, i16* %213, align 4
  %215 = zext i16 %214 to i32
  %216 = and i32 %215, 8
  call void @_ZN3pov11Warp_NormalEPdS0_PNS_14Pattern_StructEi(double* %200, double* %201, %"struct.pov::Pattern_Struct"* %207, i32 %216)
  br label %217

; <label>:217:                                    ; preds = %199
  %218 = load i32, i32* @x.87
  %219 = load i32, i32* @y.88
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %217
  %226 = load i32, i32* %15, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %15, align 4
  %228 = load i32, i32* @x.87
  %229 = load i32, i32* @y.88
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart224, label %originalBB18alteredBB

originalBBpart224:                                ; preds = %originalBB18
  br label %179

; <label>:236:                                    ; preds = %originalBBpart216
  %237 = load i32, i32* @x.87
  %238 = load i32, i32* @y.88
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %236
  %245 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %246 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %247 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %246, i32 0, i32 13
  %248 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %247, align 8
  %249 = load double*, double** %10, align 8
  %250 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %245, %"struct.pov::Tnormal_Struct"* %248, double* %249, %"struct.pov::istk_entry"* %250)
  %251 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %252 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %251, i32 0, i32 13
  %253 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %252, align 8
  %254 = getelementptr inbounds %"struct.pov::Tnormal_Struct", %"struct.pov::Tnormal_Struct"* %253, i32 0, i32 2
  %255 = load i16, i16* %254, align 4
  %256 = zext i16 %255 to i32
  %257 = and i32 %256, 8
  %258 = icmp ne i32 %257, 0
  %259 = load i32, i32* @x.87
  %260 = load i32, i32* @y.88
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart237, label %originalBB26alteredBB

originalBBpart237:                                ; preds = %originalBB26
  br i1 %258, label %267, label %269

; <label>:267:                                    ; preds = %originalBBpart237
  %268 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %268)
  br label %269

; <label>:269:                                    ; preds = %267, %originalBBpart237
  %270 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %271 = sub nsw i32 %270, 1
  store i32 %271, i32* %15, align 4
  br label %272

; <label>:272:                                    ; preds = %293, %269
  %273 = load i32, i32* %15, align 4
  %274 = icmp sge i32 %273, 0
  br i1 %274, label %275, label %296

; <label>:275:                                    ; preds = %272
  %276 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %277 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %278 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %279 = load i32, i32* %15, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %278, i64 %280
  %282 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %281, align 8
  %283 = bitcast %"struct.pov::Texture_Struct"* %282 to %"struct.pov::Pattern_Struct"*
  %284 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov21warpNormalTextureListE, align 8
  %285 = load i32, i32* %15, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %284, i64 %286
  %288 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %287, align 8
  %289 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %288, i32 0, i32 2
  %290 = load i16, i16* %289, align 4
  %291 = zext i16 %290 to i32
  %292 = and i32 %291, 8
  call void @_ZN3pov13UnWarp_NormalEPdS0_PNS_14Pattern_StructEi(double* %276, double* %277, %"struct.pov::Pattern_Struct"* %283, i32 %292)
  br label %293

; <label>:293:                                    ; preds = %275
  %294 = load i32, i32* %15, align 4
  %295 = add nsw i32 %294, -1
  store i32 %295, i32* %15, align 4
  br label %272

; <label>:296:                                    ; preds = %272
  br label %304

; <label>:297:                                    ; preds = %originalBBpart212
  %298 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %299 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %300 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %299, i32 0, i32 13
  %301 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %300, align 8
  %302 = load double*, double** %10, align 8
  %303 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %298, %"struct.pov::Tnormal_Struct"* %301, double* %302, %"struct.pov::istk_entry"* %303)
  br label %304

; <label>:304:                                    ; preds = %297, %296
  %305 = load i32, i32* @x.87
  %306 = load i32, i32* @y.88
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %304
  %313 = load i32, i32* @x.87
  %314 = load i32, i32* @y.88
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %321

; <label>:321:                                    ; preds = %originalBBpart241, %154, %147
  %322 = load i32, i32* @x.87
  %323 = load i32, i32* @y.88
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %321
  %330 = load i32, i32* %18, align 4
  %331 = icmp ne i32 %330, 0
  %332 = load i32, i32* @x.87
  %333 = load i32, i32* @y.88
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br i1 %331, label %343, label %340

; <label>:340:                                    ; preds = %originalBBpart245
  %341 = getelementptr inbounds [3 x double], [3 x double]* %28, i32 0, i32 0
  %342 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %341, double* %342)
  br label %343

; <label>:343:                                    ; preds = %340, %originalBBpart245
  %344 = load i32, i32* @x.87
  %345 = load i32, i32* @y.88
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %343
  %352 = load double, double* %13, align 8
  %353 = load double, double* %25, align 8
  %354 = fmul double %352, %353
  store double %354, double* %23, align 8
  %355 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %356 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %357 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %356, i32 0, i32 12
  %358 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %357, align 8
  %359 = load double*, double** %10, align 8
  %360 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %361 = call i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float* %355, %"struct.pov::Pigment_Struct"* %358, double* %359, %"struct.pov::istk_entry"* %360)
  store i32 %361, i32* %21, align 4
  %362 = load i32, i32* %21, align 4
  %363 = icmp ne i32 %362, 0
  %364 = load i32, i32* @x.87
  %365 = load i32, i32* @y.88
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBBpart259, label %originalBB47alteredBB

originalBBpart259:                                ; preds = %originalBB47
  br i1 %363, label %372, label %373

; <label>:372:                                    ; preds = %originalBBpart259
  store i32 1, i32* %20, align 4
  br label %373

; <label>:373:                                    ; preds = %372, %originalBBpart259
  %374 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %375 = zext i32 %374 to i64
  %376 = and i64 %375, 1
  %377 = icmp ne i64 %376, 0
  br i1 %377, label %378, label %385

; <label>:378:                                    ; preds = %373
  %379 = load float*, float** %8, align 8
  %380 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %379, float* %380)
  %381 = load float*, float** %8, align 8
  %382 = getelementptr inbounds float, float* %381, i64 4
  store float 0.000000e+00, float* %382, align 4
  %383 = load float*, float** %8, align 8
  %384 = getelementptr inbounds float, float* %383, i64 3
  store float 0.000000e+00, float* %384, align 4
  br label %943

; <label>:385:                                    ; preds = %373
  %386 = load i32, i32* %18, align 4
  %387 = icmp eq i32 %386, 100
  br i1 %387, label %388, label %390

; <label>:388:                                    ; preds = %385
  %389 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i32 0, i32 0))
  br label %390

; <label>:390:                                    ; preds = %388, %385
  %391 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %392 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %391, i32 0, i32 14
  %393 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %392, align 8
  %394 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %393, i32 0, i32 13
  %395 = load float, float* %394, align 4
  %396 = load float*, float** %47, align 8
  %397 = load i32, i32* %18, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds float, float* %396, i64 %398
  store float %395, float* %399, align 4
  %400 = load double, double* %23, align 8
  %401 = load double*, double** %44, align 8
  %402 = load i32, i32* %18, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds double, double* %401, i64 %403
  store double %400, double* %404, align 8
  %405 = load [3 x double]*, [3 x double]** %45, align 8
  %406 = load i32, i32* %18, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [3 x double], [3 x double]* %405, i64 %407
  %409 = getelementptr inbounds [3 x double], [3 x double]* %408, i32 0, i32 0
  %410 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %409, double* %410)
  %411 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %412 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %411, i32 0, i32 1
  %413 = getelementptr inbounds [3 x double], [3 x double]* %412, i32 0, i32 0
  %414 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %40, double* %413, double* %414)
  %415 = load double, double* %40, align 8
  %416 = fmul double %415, -1.000000e+00
  store double %416, double* %40, align 8
  %417 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %418 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %417, i32 0, i32 5
  %419 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %418, align 8
  %420 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %419, i32 0, i32 5
  %421 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %420, align 8
  %422 = icmp ne %"struct.pov::Interior_Struct"* %421, null
  br i1 %422, label %430, label %423

; <label>:423:                                    ; preds = %390
  %424 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %425 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %424, i32 0, i32 14
  %426 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %425, align 8
  %427 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %426, i32 0, i32 20
  %428 = load i32, i32* %427, align 4
  %429 = icmp ne i32 %428, 1
  br i1 %429, label %430, label %468

; <label>:430:                                    ; preds = %423, %390
  %431 = load double*, double** %44, align 8
  %432 = load i32, i32* %18, align 4
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds double, double* %431, i64 %433
  %435 = load [5 x float]*, [5 x float]** %46, align 8
  %436 = load i32, i32* %18, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [5 x float], [5 x float]* %435, i64 %437
  %439 = getelementptr inbounds [5 x float], [5 x float]* %438, i32 0, i32 0
  %440 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %441 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %440, i32 0, i32 14
  %442 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %441, align 8
  %443 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %442, i32 0, i32 17
  %444 = getelementptr inbounds [3 x float], [3 x float]* %443, i32 0, i32 0
  %445 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %446 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %445, i32 0, i32 14
  %447 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %446, align 8
  %448 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %447, i32 0, i32 18
  %449 = getelementptr inbounds [3 x float], [3 x float]* %448, i32 0, i32 0
  %450 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %451 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %450, i32 0, i32 14
  %452 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %451, align 8
  %453 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %452, i32 0, i32 20
  %454 = load i32, i32* %453, align 4
  %455 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %456 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %455, i32 0, i32 14
  %457 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %456, align 8
  %458 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %457, i32 0, i32 19
  %459 = load float, float* %458, align 4
  %460 = fpext float %459 to double
  %461 = load double, double* %40, align 8
  %462 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %463 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %464 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %463, i32 0, i32 5
  %465 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %464, align 8
  %466 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %465, i32 0, i32 5
  %467 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %466, align 8
  call void @_ZN3povL22determine_reflectivityEPdPfS1_S1_iddPNS_10Ray_StructEPNS_15Interior_StructE(double* %434, float* %439, float* %444, float* %449, i32 %454, double %460, double %461, %"struct.pov::Ray_Struct"* %462, %"struct.pov::Interior_Struct"* %467)
  br label %470

; <label>:468:                                    ; preds = %423
  %469 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i32 0, i32 0))
  br label %470

; <label>:470:                                    ; preds = %468, %430
  %471 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %472 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %471, i32 0, i32 14
  %473 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %472, align 8
  %474 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %473, i32 0, i32 21
  %475 = load float, float* %474, align 4
  %476 = fpext float %475 to double
  %477 = fcmp une double %476, 0.000000e+00
  br i1 %477, label %478, label %554

; <label>:478:                                    ; preds = %470
  %479 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %480 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %479, i32 0, i32 14
  %481 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %480, align 8
  %482 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %481, i32 0, i32 21
  %483 = load float, float* %482, align 4
  %484 = fpext float %483 to double
  store double %484, double* %48, align 8
  %485 = load double, double* %40, align 8
  %486 = call double @acos(double %485) #7
  %487 = call double @fabs(double %486) #5
  %488 = fdiv double %487, 0x3FF921FB54442D18
  store double %488, double* %49, align 8
  %489 = load double, double* %49, align 8
  %490 = fsub double %489, 1.120000e+00
  %491 = call double @_ZN3pov3SqrEd(double %490)
  %492 = fdiv double 0x3F8DD56BD7BF6F16, %491
  %493 = fsub double %492, 0x3F87C88174C5E0DC
  store double %493, double* %50, align 8
  store double 1.000000e+00, double* %51, align 8
  store double 0.000000e+00, double* %52, align 8
  %494 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %52, double* dereferenceable(8) %50)
  %495 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %51, double* dereferenceable(8) %494)
  %496 = load double, double* %495, align 8
  store double %496, double* %50, align 8
  %497 = load double, double* %48, align 8
  %498 = load double, double* %50, align 8
  %499 = fsub double 1.000000e+00, %498
  %500 = fmul double %497, %499
  %501 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %502 = load float, float* %501, align 16
  %503 = fpext float %502 to double
  %504 = fsub double %503, 1.000000e+00
  %505 = fmul double %500, %504
  %506 = fadd double 1.000000e+00, %505
  %507 = load [5 x float]*, [5 x float]** %46, align 8
  %508 = load i32, i32* %18, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [5 x float], [5 x float]* %507, i64 %509
  %511 = getelementptr inbounds [5 x float], [5 x float]* %510, i64 0, i64 0
  %512 = load float, float* %511, align 4
  %513 = fpext float %512 to double
  %514 = fmul double %513, %506
  %515 = fptrunc double %514 to float
  store float %515, float* %511, align 4
  %516 = load double, double* %48, align 8
  %517 = load double, double* %50, align 8
  %518 = fsub double 1.000000e+00, %517
  %519 = fmul double %516, %518
  %520 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %521 = load float, float* %520, align 4
  %522 = fpext float %521 to double
  %523 = fsub double %522, 1.000000e+00
  %524 = fmul double %519, %523
  %525 = fadd double 1.000000e+00, %524
  %526 = load [5 x float]*, [5 x float]** %46, align 8
  %527 = load i32, i32* %18, align 4
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds [5 x float], [5 x float]* %526, i64 %528
  %530 = getelementptr inbounds [5 x float], [5 x float]* %529, i64 0, i64 1
  %531 = load float, float* %530, align 4
  %532 = fpext float %531 to double
  %533 = fmul double %532, %525
  %534 = fptrunc double %533 to float
  store float %534, float* %530, align 4
  %535 = load double, double* %48, align 8
  %536 = load double, double* %50, align 8
  %537 = fsub double 1.000000e+00, %536
  %538 = fmul double %535, %537
  %539 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %540 = load float, float* %539, align 8
  %541 = fpext float %540 to double
  %542 = fsub double %541, 1.000000e+00
  %543 = fmul double %538, %542
  %544 = fadd double 1.000000e+00, %543
  %545 = load [5 x float]*, [5 x float]** %46, align 8
  %546 = load i32, i32* %18, align 4
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds [5 x float], [5 x float]* %545, i64 %547
  %549 = getelementptr inbounds [5 x float], [5 x float]* %548, i64 0, i64 2
  %550 = load float, float* %549, align 4
  %551 = fpext float %550 to double
  %552 = fmul double %551, %544
  %553 = fptrunc double %552 to float
  store float %553, float* %549, align 4
  br label %554

; <label>:554:                                    ; preds = %478, %470
  %555 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 3
  %556 = load float, float* %555, align 4
  %557 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %558 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %559 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %560 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %558, float* dereferenceable(4) %559)
  %561 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %557, float* dereferenceable(4) %560)
  %562 = load float, float* %561, align 4
  %563 = fmul float %556, %562
  %564 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 4
  %565 = load float, float* %564, align 16
  %566 = fadd float %563, %565
  %567 = fpext float %566 to double
  %568 = fsub double 1.000000e+00, %567
  store double %568, double* %24, align 8
  %569 = getelementptr inbounds [5 x float], [5 x float]* %34, i32 0, i32 0
  call void @_ZN3pov11Make_ColourEPffff(float* %569, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %570 = load i32, i32* %17, align 4
  %571 = icmp ne i32 %570, 0
  br i1 %571, label %572, label %691

; <label>:572:                                    ; preds = %554
  %573 = load i32, i32* %16, align 4
  %574 = icmp ne i32 %573, 0
  br i1 %574, label %691, label %575

; <label>:575:                                    ; preds = %572
  %576 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %577 = load float, float* %576, align 16
  %578 = fpext float %577 to double
  %579 = load double, double* %24, align 8
  %580 = fmul double %578, %579
  %581 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %582 = load float, float* %581, align 16
  %583 = fpext float %582 to double
  %584 = fmul double %580, %583
  %585 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %586 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %585, i32 0, i32 14
  %587 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %586, align 8
  %588 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %587, i32 0, i32 0
  %589 = load float, float* %588, align 4
  %590 = fpext float %589 to double
  %591 = fmul double %584, %590
  %592 = fptrunc double %591 to float
  %593 = getelementptr inbounds [5 x float], [5 x float]* %36, i64 0, i64 0
  store float %592, float* %593, align 16
  %594 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %595 = load float, float* %594, align 4
  %596 = fpext float %595 to double
  %597 = load double, double* %24, align 8
  %598 = fmul double %596, %597
  %599 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %600 = load float, float* %599, align 4
  %601 = fpext float %600 to double
  %602 = fmul double %598, %601
  %603 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %604 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %603, i32 0, i32 14
  %605 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %604, align 8
  %606 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %605, i32 0, i32 0
  %607 = load float, float* %606, align 4
  %608 = fpext float %607 to double
  %609 = fmul double %602, %608
  %610 = fptrunc double %609 to float
  %611 = getelementptr inbounds [5 x float], [5 x float]* %36, i64 0, i64 1
  store float %610, float* %611, align 4
  %612 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %613 = load float, float* %612, align 8
  %614 = fpext float %613 to double
  %615 = load double, double* %24, align 8
  %616 = fmul double %614, %615
  %617 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %618 = load float, float* %617, align 8
  %619 = fpext float %618 to double
  %620 = fmul double %616, %619
  %621 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %622 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %621, i32 0, i32 14
  %623 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %622, align 8
  %624 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %623, i32 0, i32 0
  %625 = load float, float* %624, align 4
  %626 = fpext float %625 to double
  %627 = fmul double %620, %626
  %628 = fptrunc double %627 to float
  %629 = getelementptr inbounds [5 x float], [5 x float]* %36, i64 0, i64 2
  store float %628, float* %629, align 8
  %630 = getelementptr inbounds [5 x float], [5 x float]* %36, i64 0, i64 0
  %631 = load float, float* %630, align 16
  %632 = fpext float %631 to double
  %633 = fmul double 2.970000e-01, %632
  %634 = getelementptr inbounds [5 x float], [5 x float]* %36, i64 0, i64 1
  %635 = load float, float* %634, align 4
  %636 = fpext float %635 to double
  %637 = fmul double 5.890000e-01, %636
  %638 = fadd double %633, %637
  %639 = getelementptr inbounds [5 x float], [5 x float]* %36, i64 0, i64 2
  %640 = load float, float* %639, align 8
  %641 = fpext float %640 to double
  %642 = fmul double 1.140000e-01, %641
  %643 = fadd double %638, %642
  store double %643, double* %26, align 8
  %644 = load double, double* %26, align 8
  %645 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %646 = fmul double %645, 3.000000e+00
  %647 = fcmp ogt double %644, %646
  br i1 %647, label %648, label %690

; <label>:648:                                    ; preds = %575
  %649 = load i32, i32* @x.87
  %650 = load i32, i32* @y.88
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %648
  %657 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 54), align 8
  %658 = icmp ne i32 %657, 0
  %659 = load i32, i32* @x.87
  %660 = load i32, i32* @y.88
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %658, label %667, label %678

; <label>:667:                                    ; preds = %originalBBpart263
  %668 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %669 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %668, i32 0, i32 1
  %670 = getelementptr inbounds [3 x double], [3 x double]* %669, i32 0, i32 0
  %671 = load double*, double** %11, align 8
  %672 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %673 = getelementptr inbounds [5 x float], [5 x float]* %35, i32 0, i32 0
  %674 = load double, double* %13, align 8
  %675 = load double, double* %26, align 8
  %676 = fmul double %674, %675
  %677 = call i32 @_ZN3pov15Compute_AmbientEPdS0_S0_Pfd(double* %670, double* %671, double* %672, float* %673, double %676)
  br label %689

; <label>:678:                                    ; preds = %originalBBpart263
  %679 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %680 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %679, i32 0, i32 1
  %681 = getelementptr inbounds [3 x double], [3 x double]* %680, i32 0, i32 0
  %682 = load double*, double** %11, align 8
  %683 = load double*, double** %11, align 8
  %684 = getelementptr inbounds [5 x float], [5 x float]* %35, i32 0, i32 0
  %685 = load double, double* %13, align 8
  %686 = load double, double* %26, align 8
  %687 = fmul double %685, %686
  %688 = call i32 @_ZN3pov15Compute_AmbientEPdS0_S0_Pfd(double* %681, double* %682, double* %683, float* %684, double %687)
  br label %689

; <label>:689:                                    ; preds = %678, %667
  store i32 1, i32* %16, align 4
  br label %690

; <label>:690:                                    ; preds = %689, %575
  br label %691

; <label>:691:                                    ; preds = %690, %572, %554
  %692 = load i32, i32* @x.87
  %693 = load i32, i32* @y.88
  %694 = sub i32 %692, 1
  %695 = mul i32 %692, %694
  %696 = urem i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = icmp slt i32 %693, 10
  %699 = or i1 %697, %698
  br i1 %699, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %691
  %700 = load i32, i32* %17, align 4
  %701 = icmp ne i32 %700, 0
  %702 = load i32, i32* @x.87
  %703 = load i32, i32* @y.88
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br i1 %701, label %710, label %786

; <label>:710:                                    ; preds = %originalBBpart267
  %711 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %712 = load float, float* %711, align 16
  %713 = fpext float %712 to double
  %714 = load double, double* %24, align 8
  %715 = fmul double %713, %714
  %716 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %717 = load float, float* %716, align 16
  %718 = fpext float %717 to double
  %719 = fmul double %715, %718
  %720 = getelementptr inbounds [5 x float], [5 x float]* %35, i64 0, i64 0
  %721 = load float, float* %720, align 16
  %722 = fpext float %721 to double
  %723 = fmul double %719, %722
  %724 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %725 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %724, i32 0, i32 14
  %726 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %725, align 8
  %727 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %726, i32 0, i32 0
  %728 = load float, float* %727, align 4
  %729 = fpext float %728 to double
  %730 = fmul double %723, %729
  %731 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 0
  %732 = load float, float* %731, align 16
  %733 = fpext float %732 to double
  %734 = fadd double %733, %730
  %735 = fptrunc double %734 to float
  store float %735, float* %731, align 16
  %736 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %737 = load float, float* %736, align 4
  %738 = fpext float %737 to double
  %739 = load double, double* %24, align 8
  %740 = fmul double %738, %739
  %741 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %742 = load float, float* %741, align 4
  %743 = fpext float %742 to double
  %744 = fmul double %740, %743
  %745 = getelementptr inbounds [5 x float], [5 x float]* %35, i64 0, i64 1
  %746 = load float, float* %745, align 4
  %747 = fpext float %746 to double
  %748 = fmul double %744, %747
  %749 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %750 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %749, i32 0, i32 14
  %751 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %750, align 8
  %752 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %751, i32 0, i32 0
  %753 = load float, float* %752, align 4
  %754 = fpext float %753 to double
  %755 = fmul double %748, %754
  %756 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 1
  %757 = load float, float* %756, align 4
  %758 = fpext float %757 to double
  %759 = fadd double %758, %755
  %760 = fptrunc double %759 to float
  store float %760, float* %756, align 4
  %761 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %762 = load float, float* %761, align 8
  %763 = fpext float %762 to double
  %764 = load double, double* %24, align 8
  %765 = fmul double %763, %764
  %766 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %767 = load float, float* %766, align 8
  %768 = fpext float %767 to double
  %769 = fmul double %765, %768
  %770 = getelementptr inbounds [5 x float], [5 x float]* %35, i64 0, i64 2
  %771 = load float, float* %770, align 8
  %772 = fpext float %771 to double
  %773 = fmul double %769, %772
  %774 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %775 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %774, i32 0, i32 14
  %776 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %775, align 8
  %777 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %776, i32 0, i32 0
  %778 = load float, float* %777, align 4
  %779 = fpext float %778 to double
  %780 = fmul double %773, %779
  %781 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 2
  %782 = load float, float* %781, align 8
  %783 = fpext float %782 to double
  %784 = fadd double %783, %780
  %785 = fptrunc double %784 to float
  store float %785, float* %781, align 8
  br label %786

; <label>:786:                                    ; preds = %710, %originalBBpart267
  %787 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %788 = load float, float* %787, align 16
  %789 = fpext float %788 to double
  %790 = load double, double* %24, align 8
  %791 = fmul double %789, %790
  %792 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %793 = load float, float* %792, align 16
  %794 = fpext float %793 to double
  %795 = fmul double %791, %794
  %796 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %797 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %796, i32 0, i32 14
  %798 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %797, align 8
  %799 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %798, i32 0, i32 16
  %800 = getelementptr inbounds [3 x float], [3 x float]* %799, i64 0, i64 0
  %801 = load float, float* %800, align 4
  %802 = fpext float %801 to double
  %803 = fmul double %795, %802
  %804 = load float, float* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 10, i64 0), align 4
  %805 = fpext float %804 to double
  %806 = fmul double %803, %805
  %807 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 0
  %808 = load float, float* %807, align 16
  %809 = fpext float %808 to double
  %810 = fadd double %809, %806
  %811 = fptrunc double %810 to float
  store float %811, float* %807, align 16
  %812 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %813 = load float, float* %812, align 4
  %814 = fpext float %813 to double
  %815 = load double, double* %24, align 8
  %816 = fmul double %814, %815
  %817 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %818 = load float, float* %817, align 4
  %819 = fpext float %818 to double
  %820 = fmul double %816, %819
  %821 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %822 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %821, i32 0, i32 14
  %823 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %822, align 8
  %824 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %823, i32 0, i32 16
  %825 = getelementptr inbounds [3 x float], [3 x float]* %824, i64 0, i64 1
  %826 = load float, float* %825, align 4
  %827 = fpext float %826 to double
  %828 = fmul double %820, %827
  %829 = load float, float* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 10, i64 1), align 4
  %830 = fpext float %829 to double
  %831 = fmul double %828, %830
  %832 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 1
  %833 = load float, float* %832, align 4
  %834 = fpext float %833 to double
  %835 = fadd double %834, %831
  %836 = fptrunc double %835 to float
  store float %836, float* %832, align 4
  %837 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %838 = load float, float* %837, align 8
  %839 = fpext float %838 to double
  %840 = load double, double* %24, align 8
  %841 = fmul double %839, %840
  %842 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %843 = load float, float* %842, align 8
  %844 = fpext float %843 to double
  %845 = fmul double %841, %844
  %846 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %847 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %846, i32 0, i32 14
  %848 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %847, align 8
  %849 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %848, i32 0, i32 16
  %850 = getelementptr inbounds [3 x float], [3 x float]* %849, i64 0, i64 2
  %851 = load float, float* %850, align 4
  %852 = fpext float %851 to double
  %853 = fmul double %845, %852
  %854 = load float, float* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 10, i64 2), align 4
  %855 = fpext float %854 to double
  %856 = fmul double %853, %855
  %857 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 2
  %858 = load float, float* %857, align 8
  %859 = fpext float %858 to double
  %860 = fadd double %859, %856
  %861 = fptrunc double %860 to float
  store float %861, float* %857, align 8
  %862 = load float*, float** %8, align 8
  %863 = getelementptr inbounds [5 x float], [5 x float]* %34, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPfPKf(float* %862, float* %863)
  %864 = getelementptr inbounds [5 x float], [5 x float]* %34, i32 0, i32 0
  call void @_ZN3pov11Make_ColourEPffff(float* %864, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %865 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %866 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %865, i32 0, i32 5
  %867 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %866, align 8
  %868 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %867, i32 0, i32 13
  %869 = load i32, i32* %868, align 4
  store i32 %869, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 26), align 4
  %870 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %871 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %870, i32 0, i32 14
  %872 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %871, align 8
  %873 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %874 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %873, i32 0, i32 1
  %875 = getelementptr inbounds [3 x double], [3 x double]* %874, i32 0, i32 0
  %876 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %877 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %878 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %879 = getelementptr inbounds [5 x float], [5 x float]* %34, i32 0, i32 0
  %880 = load double, double* %24, align 8
  %881 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %882 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %881, i32 0, i32 5
  %883 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %882, align 8
  call void @_ZN3povL7DiffuseEPNS_13Finish_StructEPdPNS_10Ray_StructES2_PfS5_dPNS_13Object_StructE(%"struct.pov::Finish_Struct"* %872, double* %875, %"struct.pov::Ray_Struct"* %876, double* %877, float* %878, float* %879, double %880, %"struct.pov::Object_Struct"* %883)
  %884 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %885 = load float, float* %884, align 16
  %886 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 0
  %887 = load float, float* %886, align 16
  %888 = fmul float %887, %885
  store float %888, float* %886, align 16
  %889 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %890 = load float, float* %889, align 4
  %891 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 1
  %892 = load float, float* %891, align 4
  %893 = fmul float %892, %890
  store float %893, float* %891, align 4
  %894 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %895 = load float, float* %894, align 8
  %896 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 2
  %897 = load float, float* %896, align 8
  %898 = fmul float %897, %895
  store float %898, float* %896, align 8
  %899 = load float*, float** %8, align 8
  %900 = getelementptr inbounds [5 x float], [5 x float]* %34, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPfPKf(float* %899, float* %900)
  %901 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %902 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %901, i32 0, i32 5
  %903 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %902, align 8
  %904 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %903, i32 0, i32 13
  %905 = load i32, i32* %904, align 4
  %906 = zext i32 %905 to i64
  %907 = and i64 %906, 33554432
  %908 = icmp ne i64 %907, 0
  br i1 %908, label %942, label %909

; <label>:909:                                    ; preds = %786
  %910 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %911 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %910, i32 0, i32 14
  %912 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %911, align 8
  %913 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %914 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %913, i32 0, i32 1
  %915 = getelementptr inbounds [3 x double], [3 x double]* %914, i32 0, i32 0
  %916 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %917 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %918 = load double*, double** %11, align 8
  %919 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %920 = getelementptr inbounds [5 x float], [5 x float]* %34, i32 0, i32 0
  %921 = load double, double* %24, align 8
  %922 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %923 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %922, i32 0, i32 5
  %924 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %923, align 8
  call void @_ZN3povL13PhotonDiffuseEPNS_13Finish_StructEPdPNS_10Ray_StructES2_S2_PfS5_dPNS_13Object_StructE(%"struct.pov::Finish_Struct"* %912, double* %915, %"struct.pov::Ray_Struct"* %916, double* %917, double* %918, float* %919, float* %920, double %921, %"struct.pov::Object_Struct"* %924)
  %925 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %926 = load float, float* %925, align 16
  %927 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 0
  %928 = load float, float* %927, align 16
  %929 = fmul float %928, %926
  store float %929, float* %927, align 16
  %930 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %931 = load float, float* %930, align 4
  %932 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 1
  %933 = load float, float* %932, align 4
  %934 = fmul float %933, %931
  store float %934, float* %932, align 4
  %935 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %936 = load float, float* %935, align 8
  %937 = getelementptr inbounds [5 x float], [5 x float]* %34, i64 0, i64 2
  %938 = load float, float* %937, align 8
  %939 = fmul float %938, %936
  store float %939, float* %937, align 8
  %940 = load float*, float** %8, align 8
  %941 = getelementptr inbounds [5 x float], [5 x float]* %34, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPfPKf(float* %940, float* %941)
  br label %942

; <label>:942:                                    ; preds = %909, %786
  br label %943

; <label>:943:                                    ; preds = %942, %378
  %944 = load i32, i32* %21, align 4
  %945 = icmp ne i32 %944, 0
  br i1 %945, label %946, label %1049

; <label>:946:                                    ; preds = %943
  %947 = load i32, i32* @x.87
  %948 = load i32, i32* @y.88
  %949 = sub i32 %947, 1
  %950 = mul i32 %947, %949
  %951 = urem i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = icmp slt i32 %948, 10
  %954 = or i1 %952, %953
  br i1 %954, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %946
  %955 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %956 = load float, float* %955, align 16
  %957 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 3
  %958 = load float, float* %957, align 4
  %959 = fmul float %956, %958
  %960 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 4
  %961 = load float, float* %960, align 16
  %962 = fadd float %959, %961
  %963 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %964 = load float, float* %963, align 16
  %965 = fmul float %964, %962
  store float %965, float* %963, align 16
  %966 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %967 = load float, float* %966, align 4
  %968 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 3
  %969 = load float, float* %968, align 4
  %970 = fmul float %967, %969
  %971 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 4
  %972 = load float, float* %971, align 16
  %973 = fadd float %970, %972
  %974 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %975 = load float, float* %974, align 4
  %976 = fmul float %975, %973
  store float %976, float* %974, align 4
  %977 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %978 = load float, float* %977, align 8
  %979 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 3
  %980 = load float, float* %979, align 4
  %981 = fmul float %978, %980
  %982 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 4
  %983 = load float, float* %982, align 16
  %984 = fadd float %981, %983
  %985 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %986 = load float, float* %985, align 8
  %987 = fmul float %986, %984
  store float %987, float* %985, align 8
  %988 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %989 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %988, i32 0, i32 14
  %990 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %989, align 8
  %991 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %990, i32 0, i32 22
  %992 = load i32, i32* %991, align 4
  %993 = icmp ne i32 %992, 0
  %994 = load i32, i32* @x.87
  %995 = load i32, i32* @y.88
  %996 = sub i32 %994, 1
  %997 = mul i32 %994, %996
  %998 = urem i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = icmp slt i32 %995, 10
  %1001 = or i1 %999, %1000
  br i1 %1001, label %originalBBpart2145, label %originalBB69alteredBB

originalBBpart2145:                               ; preds = %originalBB69
  br i1 %993, label %1002, label %1048

; <label>:1002:                                   ; preds = %originalBBpart2145
  store double 1.000000e+00, double* %53, align 8
  %1003 = load [5 x float]*, [5 x float]** %46, align 8
  %1004 = load i32, i32* %18, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds [5 x float], [5 x float]* %1003, i64 %1005
  %1007 = getelementptr inbounds [5 x float], [5 x float]* %1006, i64 0, i64 0
  %1008 = load float, float* %1007, align 4
  %1009 = fpext float %1008 to double
  %1010 = fsub double 1.000000e+00, %1009
  store double %1010, double* %54, align 8
  %1011 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %53, double* dereferenceable(8) %54)
  %1012 = load double, double* %1011, align 8
  %1013 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %1014 = load float, float* %1013, align 16
  %1015 = fpext float %1014 to double
  %1016 = fmul double %1015, %1012
  %1017 = fptrunc double %1016 to float
  store float %1017, float* %1013, align 16
  store double 1.000000e+00, double* %55, align 8
  %1018 = load [5 x float]*, [5 x float]** %46, align 8
  %1019 = load i32, i32* %18, align 4
  %1020 = sext i32 %1019 to i64
  %1021 = getelementptr inbounds [5 x float], [5 x float]* %1018, i64 %1020
  %1022 = getelementptr inbounds [5 x float], [5 x float]* %1021, i64 0, i64 1
  %1023 = load float, float* %1022, align 4
  %1024 = fpext float %1023 to double
  %1025 = fsub double 1.000000e+00, %1024
  store double %1025, double* %56, align 8
  %1026 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %55, double* dereferenceable(8) %56)
  %1027 = load double, double* %1026, align 8
  %1028 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %1029 = load float, float* %1028, align 4
  %1030 = fpext float %1029 to double
  %1031 = fmul double %1030, %1027
  %1032 = fptrunc double %1031 to float
  store float %1032, float* %1028, align 4
  store double 1.000000e+00, double* %57, align 8
  %1033 = load [5 x float]*, [5 x float]** %46, align 8
  %1034 = load i32, i32* %18, align 4
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds [5 x float], [5 x float]* %1033, i64 %1035
  %1037 = getelementptr inbounds [5 x float], [5 x float]* %1036, i64 0, i64 2
  %1038 = load float, float* %1037, align 4
  %1039 = fpext float %1038 to double
  %1040 = fsub double 1.000000e+00, %1039
  store double %1040, double* %58, align 8
  %1041 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %57, double* dereferenceable(8) %58)
  %1042 = load double, double* %1041, align 8
  %1043 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %1044 = load float, float* %1043, align 8
  %1045 = fpext float %1044 to double
  %1046 = fmul double %1045, %1042
  %1047 = fptrunc double %1046 to float
  store float %1047, float* %1043, align 8
  br label %1048

; <label>:1048:                                   ; preds = %1002, %originalBBpart2145
  br label %1049

; <label>:1049:                                   ; preds = %1048, %943
  %1050 = load i32, i32* @x.87
  %1051 = load i32, i32* @y.88
  %1052 = sub i32 %1050, 1
  %1053 = mul i32 %1050, %1052
  %1054 = urem i32 %1053, 2
  %1055 = icmp eq i32 %1054, 0
  %1056 = icmp slt i32 %1051, 10
  %1057 = or i1 %1055, %1056
  br i1 %1057, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %originalBB147alteredBB, %1049
  store double 1.000000e+00, double* %59, align 8
  %1058 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %1059 = load float, float* %1058, align 4
  %1060 = fpext float %1059 to double
  %1061 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %1062 = load float, float* %1061, align 16
  %1063 = fpext float %1062 to double
  %1064 = fmul double 2.970000e-01, %1063
  %1065 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %1066 = load float, float* %1065, align 4
  %1067 = fpext float %1066 to double
  %1068 = fmul double 5.890000e-01, %1067
  %1069 = fadd double %1064, %1068
  %1070 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %1071 = load float, float* %1070, align 8
  %1072 = fpext float %1071 to double
  %1073 = fmul double 1.140000e-01, %1072
  %1074 = fadd double %1069, %1073
  %1075 = fmul double %1060, %1074
  %1076 = call double @fabs(double %1075) #5
  %1077 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %1078 = load float, float* %1077, align 16
  %1079 = call float @_ZSt4fabsf(float %1078)
  %1080 = fpext float %1079 to double
  %1081 = fadd double %1076, %1080
  store double %1081, double* %60, align 8
  %1082 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %59, double* dereferenceable(8) %60)
  %1083 = load double, double* %1082, align 8
  store double %1083, double* %25, align 8
  %1084 = load i32, i32* @x.87
  %1085 = load i32, i32* @y.88
  %1086 = sub i32 %1084, 1
  %1087 = mul i32 %1084, %1086
  %1088 = urem i32 %1087, 2
  %1089 = icmp eq i32 %1088, 0
  %1090 = icmp slt i32 %1085, 10
  %1091 = or i1 %1089, %1090
  br i1 %1091, label %originalBBpart2207, label %originalBB147alteredBB

originalBBpart2207:                               ; preds = %originalBB147
  br label %1092

; <label>:1092:                                   ; preds = %originalBBpart2207
  %1093 = load i32, i32* @x.87
  %1094 = load i32, i32* @y.88
  %1095 = sub i32 %1093, 1
  %1096 = mul i32 %1093, %1095
  %1097 = urem i32 %1096, 2
  %1098 = icmp eq i32 %1097, 0
  %1099 = icmp slt i32 %1094, 10
  %1100 = or i1 %1098, %1099
  br i1 %1100, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %originalBB209alteredBB, %1092
  %1101 = load i32, i32* %18, align 4
  %1102 = add nsw i32 %1101, 1
  store i32 %1102, i32* %18, align 4
  %1103 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %1104 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %1103, i32 0, i32 8
  %1105 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %1104, align 8
  %1106 = bitcast %"struct.pov::Pattern_Struct"* %1105 to %"struct.pov::Texture_Struct"*
  store %"struct.pov::Texture_Struct"* %1106, %"struct.pov::Texture_Struct"** %41, align 8
  %1107 = load i32, i32* @x.87
  %1108 = load i32, i32* @y.88
  %1109 = sub i32 %1107, 1
  %1110 = mul i32 %1107, %1109
  %1111 = urem i32 %1110, 2
  %1112 = icmp eq i32 %1111, 0
  %1113 = icmp slt i32 %1108, 10
  %1114 = or i1 %1112, %1113
  br i1 %1114, label %originalBBpart2219, label %originalBB209alteredBB

originalBBpart2219:                               ; preds = %originalBB209
  br label %122

; <label>:1115:                                   ; preds = %145
  store i32 0, i32* %42, align 4
  %1116 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1117 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1116, i32 0, i32 5
  %1118 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %1117, align 8
  %1119 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %1118, i32 0, i32 5
  %1120 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %1119, align 8
  store %"struct.pov::Interior_Struct"* %1120, %"struct.pov::Interior_Struct"** %37, align 8
  %1121 = icmp ne %"struct.pov::Interior_Struct"* %1120, null
  br i1 %1121, label %1122, label %1587

; <label>:1122:                                   ; preds = %1115
  %1123 = load double, double* %25, align 8
  %1124 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %1125 = fcmp ogt double %1123, %1124
  br i1 %1125, label %1126, label %1587

; <label>:1126:                                   ; preds = %1122
  %1127 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %1128 = zext i32 %1127 to i64
  %1129 = and i64 %1128, 16
  %1130 = icmp ne i64 %1129, 0
  br i1 %1130, label %1131, label %1587

; <label>:1131:                                   ; preds = %1126
  %1132 = load i32, i32* @x.87
  %1133 = load i32, i32* @y.88
  %1134 = sub i32 %1132, 1
  %1135 = mul i32 %1132, %1134
  %1136 = urem i32 %1135, 2
  %1137 = icmp eq i32 %1136, 0
  %1138 = icmp slt i32 %1133, 10
  %1139 = or i1 %1137, %1138
  br i1 %1139, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %originalBB221alteredBB, %1131
  %1140 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %1141 = load float, float* %1140, align 4
  %1142 = call float @_ZSt4fabsf(float %1141)
  %1143 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %1144 = load float, float* %1143, align 16
  %1145 = call float @_ZSt4fabsf(float %1144)
  store float %1145, float* %61, align 4
  %1146 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %1147 = load float, float* %1146, align 4
  %1148 = call float @_ZSt4fabsf(float %1147)
  store float %1148, float* %62, align 4
  %1149 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %1150 = load float, float* %1149, align 8
  %1151 = call float @_ZSt4fabsf(float %1150)
  store float %1151, float* %63, align 4
  %1152 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %62, float* dereferenceable(4) %63)
  %1153 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %61, float* dereferenceable(4) %1152)
  %1154 = load float, float* %1153, align 4
  %1155 = fmul float %1142, %1154
  %1156 = fpext float %1155 to double
  store double %1156, double* %22, align 8
  %1157 = load double, double* %13, align 8
  %1158 = load double, double* %22, align 8
  %1159 = fmul double %1157, %1158
  store double %1159, double* %23, align 8
  %1160 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1161 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1162 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1161, i32 0, i32 1
  %1163 = getelementptr inbounds [3 x double], [3 x double]* %1162, i32 0, i32 0
  %1164 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1165 = getelementptr inbounds [3 x double], [3 x double]* %28, i32 0, i32 0
  %1166 = load double*, double** %11, align 8
  %1167 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %1168 = load double, double* %23, align 8
  %1169 = call i32 @_ZN3povL7RefractEPNS_15Interior_StructEPdPNS_10Ray_StructES2_S2_Pfd(%"struct.pov::Interior_Struct"* %1160, double* %1163, %"struct.pov::Ray_Struct"* %1164, double* %1165, double* %1166, float* %1167, double %1168)
  store i32 %1169, i32* %42, align 4
  store i32 -1, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %1170 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1171 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1170, i32 0, i32 6
  %1172 = load float, float* %1171, align 8
  %1173 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  store float %1172, float* %1173, align 8
  %1174 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  store float %1172, float* %1174, align 4
  %1175 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  store float %1172, float* %1175, align 16
  %1176 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1177 = icmp ne %"struct.pov::Interior_Struct"* %1176, null
  %1178 = load i32, i32* @x.87
  %1179 = load i32, i32* @y.88
  %1180 = sub i32 %1178, 1
  %1181 = mul i32 %1178, %1180
  %1182 = urem i32 %1181, 2
  %1183 = icmp eq i32 %1182, 0
  %1184 = icmp slt i32 %1179, 10
  %1185 = or i1 %1183, %1184
  br i1 %1185, label %originalBBpart2249, label %originalBB221alteredBB

originalBBpart2249:                               ; preds = %originalBB221
  br i1 %1177, label %1186, label %1392

; <label>:1186:                                   ; preds = %originalBBpart2249
  %1187 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1188 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1189 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %1187, %"struct.pov::Interior_Struct"* %1188)
  %1190 = icmp sge i32 %1189, 0
  br i1 %1190, label %1191, label %1392

; <label>:1191:                                   ; preds = %1186
  %1192 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1193 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1192, i32 0, i32 7
  %1194 = load float, float* %1193, align 4
  %1195 = call float @_ZSt4fabsf(float %1194)
  %1196 = fpext float %1195 to double
  %1197 = fcmp ogt double %1196, 1.000000e-07
  br i1 %1197, label %1198, label %1391

; <label>:1198:                                   ; preds = %1191
  %1199 = load i32, i32* @x.87
  %1200 = load i32, i32* @y.88
  %1201 = sub i32 %1199, 1
  %1202 = mul i32 %1199, %1201
  %1203 = urem i32 %1202, 2
  %1204 = icmp eq i32 %1203, 0
  %1205 = icmp slt i32 %1200, 10
  %1206 = or i1 %1204, %1205
  br i1 %1206, label %originalBB251, label %originalBB251alteredBB

originalBB251:                                    ; preds = %originalBB251alteredBB, %1198
  %1207 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1208 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1207, i32 0, i32 8
  %1209 = load float, float* %1208, align 8
  %1210 = fcmp oge float %1209, 1.000000e+03
  %1211 = load i32, i32* @x.87
  %1212 = load i32, i32* @y.88
  %1213 = sub i32 %1211, 1
  %1214 = mul i32 %1211, %1213
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1212, 10
  %1218 = or i1 %1216, %1217
  br i1 %1218, label %originalBBpart2253, label %originalBB251alteredBB

originalBBpart2253:                               ; preds = %originalBB251
  br i1 %1210, label %1219, label %1286

; <label>:1219:                                   ; preds = %originalBBpart2253
  %1220 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1221 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1220, i32 0, i32 9
  %1222 = getelementptr inbounds [5 x float], [5 x float]* %1221, i64 0, i64 0
  %1223 = load float, float* %1222, align 4
  %1224 = fpext float %1223 to double
  %1225 = fsub double 1.000000e+00, %1224
  %1226 = fsub double -0.000000e+00, %1225
  %1227 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1228 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1227, i32 0, i32 0
  %1229 = load double, double* %1228, align 8
  %1230 = fmul double %1226, %1229
  %1231 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1232 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1231, i32 0, i32 7
  %1233 = load float, float* %1232, align 4
  %1234 = fpext float %1233 to double
  %1235 = fdiv double %1230, %1234
  %1236 = call double @exp(double %1235) #7
  %1237 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %1238 = load float, float* %1237, align 16
  %1239 = fpext float %1238 to double
  %1240 = fmul double %1239, %1236
  %1241 = fptrunc double %1240 to float
  store float %1241, float* %1237, align 16
  %1242 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1243 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1242, i32 0, i32 9
  %1244 = getelementptr inbounds [5 x float], [5 x float]* %1243, i64 0, i64 1
  %1245 = load float, float* %1244, align 4
  %1246 = fpext float %1245 to double
  %1247 = fsub double 1.000000e+00, %1246
  %1248 = fsub double -0.000000e+00, %1247
  %1249 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1250 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1249, i32 0, i32 0
  %1251 = load double, double* %1250, align 8
  %1252 = fmul double %1248, %1251
  %1253 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1254 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1253, i32 0, i32 7
  %1255 = load float, float* %1254, align 4
  %1256 = fpext float %1255 to double
  %1257 = fdiv double %1252, %1256
  %1258 = call double @exp(double %1257) #7
  %1259 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %1260 = load float, float* %1259, align 4
  %1261 = fpext float %1260 to double
  %1262 = fmul double %1261, %1258
  %1263 = fptrunc double %1262 to float
  store float %1263, float* %1259, align 4
  %1264 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1265 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1264, i32 0, i32 9
  %1266 = getelementptr inbounds [5 x float], [5 x float]* %1265, i64 0, i64 2
  %1267 = load float, float* %1266, align 4
  %1268 = fpext float %1267 to double
  %1269 = fsub double 1.000000e+00, %1268
  %1270 = fsub double -0.000000e+00, %1269
  %1271 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1272 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1271, i32 0, i32 0
  %1273 = load double, double* %1272, align 8
  %1274 = fmul double %1270, %1273
  %1275 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1276 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1275, i32 0, i32 7
  %1277 = load float, float* %1276, align 4
  %1278 = fpext float %1277 to double
  %1279 = fdiv double %1274, %1278
  %1280 = call double @exp(double %1279) #7
  %1281 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %1282 = load float, float* %1281, align 8
  %1283 = fpext float %1282 to double
  %1284 = fmul double %1283, %1280
  %1285 = fptrunc double %1284 to float
  store float %1285, float* %1281, align 8
  br label %1374

; <label>:1286:                                   ; preds = %originalBBpart2253
  %1287 = load i32, i32* @x.87
  %1288 = load i32, i32* @y.88
  %1289 = sub i32 %1287, 1
  %1290 = mul i32 %1287, %1289
  %1291 = urem i32 %1290, 2
  %1292 = icmp eq i32 %1291, 0
  %1293 = icmp slt i32 %1288, 10
  %1294 = or i1 %1292, %1293
  br i1 %1294, label %originalBB255, label %originalBB255alteredBB

originalBB255:                                    ; preds = %originalBB255alteredBB, %1286
  %1295 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1296 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1295, i32 0, i32 0
  %1297 = load double, double* %1296, align 8
  %1298 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1299 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1298, i32 0, i32 7
  %1300 = load float, float* %1299, align 4
  %1301 = fpext float %1300 to double
  %1302 = fdiv double %1297, %1301
  %1303 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1304 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1303, i32 0, i32 8
  %1305 = load float, float* %1304, align 8
  %1306 = fpext float %1305 to double
  %1307 = call double @pow(double %1302, double %1306) #7
  %1308 = fadd double 1.000000e+00, %1307
  store double %1308, double* %24, align 8
  %1309 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1310 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1309, i32 0, i32 9
  %1311 = getelementptr inbounds [5 x float], [5 x float]* %1310, i64 0, i64 0
  %1312 = load float, float* %1311, align 4
  %1313 = fpext float %1312 to double
  %1314 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1315 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1314, i32 0, i32 9
  %1316 = getelementptr inbounds [5 x float], [5 x float]* %1315, i64 0, i64 0
  %1317 = load float, float* %1316, align 4
  %1318 = fpext float %1317 to double
  %1319 = fsub double 1.000000e+00, %1318
  %1320 = load double, double* %24, align 8
  %1321 = fdiv double %1319, %1320
  %1322 = fadd double %1313, %1321
  %1323 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %1324 = load float, float* %1323, align 16
  %1325 = fpext float %1324 to double
  %1326 = fmul double %1325, %1322
  %1327 = fptrunc double %1326 to float
  store float %1327, float* %1323, align 16
  %1328 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1329 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1328, i32 0, i32 9
  %1330 = getelementptr inbounds [5 x float], [5 x float]* %1329, i64 0, i64 1
  %1331 = load float, float* %1330, align 4
  %1332 = fpext float %1331 to double
  %1333 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1334 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1333, i32 0, i32 9
  %1335 = getelementptr inbounds [5 x float], [5 x float]* %1334, i64 0, i64 1
  %1336 = load float, float* %1335, align 4
  %1337 = fpext float %1336 to double
  %1338 = fsub double 1.000000e+00, %1337
  %1339 = load double, double* %24, align 8
  %1340 = fdiv double %1338, %1339
  %1341 = fadd double %1332, %1340
  %1342 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %1343 = load float, float* %1342, align 4
  %1344 = fpext float %1343 to double
  %1345 = fmul double %1344, %1341
  %1346 = fptrunc double %1345 to float
  store float %1346, float* %1342, align 4
  %1347 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1348 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1347, i32 0, i32 9
  %1349 = getelementptr inbounds [5 x float], [5 x float]* %1348, i64 0, i64 2
  %1350 = load float, float* %1349, align 4
  %1351 = fpext float %1350 to double
  %1352 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %1353 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1352, i32 0, i32 9
  %1354 = getelementptr inbounds [5 x float], [5 x float]* %1353, i64 0, i64 2
  %1355 = load float, float* %1354, align 4
  %1356 = fpext float %1355 to double
  %1357 = fsub double 1.000000e+00, %1356
  %1358 = load double, double* %24, align 8
  %1359 = fdiv double %1357, %1358
  %1360 = fadd double %1351, %1359
  %1361 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %1362 = load float, float* %1361, align 8
  %1363 = fpext float %1362 to double
  %1364 = fmul double %1363, %1360
  %1365 = fptrunc double %1364 to float
  store float %1365, float* %1361, align 8
  %1366 = load i32, i32* @x.87
  %1367 = load i32, i32* @y.88
  %1368 = sub i32 %1366, 1
  %1369 = mul i32 %1366, %1368
  %1370 = urem i32 %1369, 2
  %1371 = icmp eq i32 %1370, 0
  %1372 = icmp slt i32 %1367, 10
  %1373 = or i1 %1371, %1372
  br i1 %1373, label %originalBBpart2377, label %originalBB255alteredBB

originalBBpart2377:                               ; preds = %originalBB255
  br label %1374

; <label>:1374:                                   ; preds = %originalBBpart2377, %1219
  %1375 = load i32, i32* @x.87
  %1376 = load i32, i32* @y.88
  %1377 = sub i32 %1375, 1
  %1378 = mul i32 %1375, %1377
  %1379 = urem i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = icmp slt i32 %1376, 10
  %1382 = or i1 %1380, %1381
  br i1 %1382, label %originalBB379, label %originalBB379alteredBB

originalBB379:                                    ; preds = %originalBB379alteredBB, %1374
  %1383 = load i32, i32* @x.87
  %1384 = load i32, i32* @y.88
  %1385 = sub i32 %1383, 1
  %1386 = mul i32 %1383, %1385
  %1387 = urem i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = icmp slt i32 %1384, 10
  %1390 = or i1 %1388, %1389
  br i1 %1390, label %originalBBpart2381, label %originalBB379alteredBB

originalBBpart2381:                               ; preds = %originalBB379
  br label %1391

; <label>:1391:                                   ; preds = %originalBBpart2381, %1191
  br label %1392

; <label>:1392:                                   ; preds = %1391, %1186, %originalBBpart2249
  %1393 = load i32, i32* %42, align 4
  %1394 = icmp ne i32 %1393, 0
  br i1 %1394, label %1395, label %1439

; <label>:1395:                                   ; preds = %1392
  %1396 = load i32, i32* @x.87
  %1397 = load i32, i32* @y.88
  %1398 = sub i32 %1396, 1
  %1399 = mul i32 %1396, %1398
  %1400 = urem i32 %1399, 2
  %1401 = icmp eq i32 %1400, 0
  %1402 = icmp slt i32 %1397, 10
  %1403 = or i1 %1401, %1402
  br i1 %1403, label %originalBB383, label %originalBB383alteredBB

originalBB383:                                    ; preds = %originalBB383alteredBB, %1395
  %1404 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %1405 = load float, float* %1404, align 16
  %1406 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 0
  %1407 = load float, float* %1406, align 16
  %1408 = fmul float %1405, %1407
  %1409 = load float*, float** %8, align 8
  %1410 = getelementptr inbounds float, float* %1409, i64 0
  %1411 = load float, float* %1410, align 4
  %1412 = fadd float %1411, %1408
  store float %1412, float* %1410, align 4
  %1413 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %1414 = load float, float* %1413, align 4
  %1415 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 1
  %1416 = load float, float* %1415, align 4
  %1417 = fmul float %1414, %1416
  %1418 = load float*, float** %8, align 8
  %1419 = getelementptr inbounds float, float* %1418, i64 1
  %1420 = load float, float* %1419, align 4
  %1421 = fadd float %1420, %1417
  store float %1421, float* %1419, align 4
  %1422 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %1423 = load float, float* %1422, align 8
  %1424 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 2
  %1425 = load float, float* %1424, align 8
  %1426 = fmul float %1423, %1425
  %1427 = load float*, float** %8, align 8
  %1428 = getelementptr inbounds float, float* %1427, i64 2
  %1429 = load float, float* %1428, align 4
  %1430 = fadd float %1429, %1426
  store float %1430, float* %1428, align 4
  %1431 = load i32, i32* @x.87
  %1432 = load i32, i32* @y.88
  %1433 = sub i32 %1431, 1
  %1434 = mul i32 %1431, %1433
  %1435 = urem i32 %1434, 2
  %1436 = icmp eq i32 %1435, 0
  %1437 = icmp slt i32 %1432, 10
  %1438 = or i1 %1436, %1437
  br i1 %1438, label %originalBBpart2423, label %originalBB383alteredBB

originalBBpart2423:                               ; preds = %originalBB383
  br label %1586

; <label>:1439:                                   ; preds = %1392
  %1440 = load i32, i32* %20, align 4
  %1441 = icmp ne i32 %1440, 0
  br i1 %1441, label %1442, label %1536

; <label>:1442:                                   ; preds = %1439
  %1443 = load i32, i32* @x.87
  %1444 = load i32, i32* @y.88
  %1445 = sub i32 %1443, 1
  %1446 = mul i32 %1443, %1445
  %1447 = urem i32 %1446, 2
  %1448 = icmp eq i32 %1447, 0
  %1449 = icmp slt i32 %1444, 10
  %1450 = or i1 %1448, %1449
  br i1 %1450, label %originalBB425, label %originalBB425alteredBB

originalBB425:                                    ; preds = %originalBB425alteredBB, %1442
  %1451 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %1452 = load float, float* %1451, align 16
  %1453 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 0
  %1454 = load float, float* %1453, align 16
  %1455 = fmul float %1452, %1454
  %1456 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %1457 = load float, float* %1456, align 16
  %1458 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %1459 = load float, float* %1458, align 4
  %1460 = fmul float %1457, %1459
  %1461 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %1462 = load float, float* %1461, align 16
  %1463 = fadd float %1460, %1462
  %1464 = fmul float %1455, %1463
  %1465 = load float*, float** %8, align 8
  %1466 = getelementptr inbounds float, float* %1465, i64 0
  %1467 = load float, float* %1466, align 4
  %1468 = fadd float %1467, %1464
  store float %1468, float* %1466, align 4
  %1469 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %1470 = load float, float* %1469, align 4
  %1471 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 1
  %1472 = load float, float* %1471, align 4
  %1473 = fmul float %1470, %1472
  %1474 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %1475 = load float, float* %1474, align 4
  %1476 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %1477 = load float, float* %1476, align 4
  %1478 = fmul float %1475, %1477
  %1479 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %1480 = load float, float* %1479, align 16
  %1481 = fadd float %1478, %1480
  %1482 = fmul float %1473, %1481
  %1483 = load float*, float** %8, align 8
  %1484 = getelementptr inbounds float, float* %1483, i64 1
  %1485 = load float, float* %1484, align 4
  %1486 = fadd float %1485, %1482
  store float %1486, float* %1484, align 4
  %1487 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %1488 = load float, float* %1487, align 8
  %1489 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 2
  %1490 = load float, float* %1489, align 8
  %1491 = fmul float %1488, %1490
  %1492 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %1493 = load float, float* %1492, align 8
  %1494 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %1495 = load float, float* %1494, align 4
  %1496 = fmul float %1493, %1495
  %1497 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %1498 = load float, float* %1497, align 16
  %1499 = fadd float %1496, %1498
  %1500 = fmul float %1491, %1499
  %1501 = load float*, float** %8, align 8
  %1502 = getelementptr inbounds float, float* %1501, i64 2
  %1503 = load float, float* %1502, align 4
  %1504 = fadd float %1503, %1500
  store float %1504, float* %1502, align 4
  %1505 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %1506 = load float, float* %1505, align 16
  %1507 = fpext float %1506 to double
  %1508 = fmul double 2.970000e-01, %1507
  %1509 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %1510 = load float, float* %1509, align 4
  %1511 = fpext float %1510 to double
  %1512 = fmul double 5.890000e-01, %1511
  %1513 = fadd double %1508, %1512
  %1514 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %1515 = load float, float* %1514, align 8
  %1516 = fpext float %1515 to double
  %1517 = fmul double 1.140000e-01, %1516
  %1518 = fadd double %1513, %1517
  %1519 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 4
  %1520 = load float, float* %1519, align 16
  %1521 = fpext float %1520 to double
  %1522 = fmul double %1518, %1521
  %1523 = load double, double* %25, align 8
  %1524 = fmul double %1522, %1523
  %1525 = fptrunc double %1524 to float
  %1526 = load float*, float** %8, align 8
  %1527 = getelementptr inbounds float, float* %1526, i64 4
  store float %1525, float* %1527, align 4
  %1528 = load i32, i32* @x.87
  %1529 = load i32, i32* @y.88
  %1530 = sub i32 %1528, 1
  %1531 = mul i32 %1528, %1530
  %1532 = urem i32 %1531, 2
  %1533 = icmp eq i32 %1532, 0
  %1534 = icmp slt i32 %1529, 10
  %1535 = or i1 %1533, %1534
  br i1 %1535, label %originalBBpart2601, label %originalBB425alteredBB

originalBBpart2601:                               ; preds = %originalBB425
  br label %1585

; <label>:1536:                                   ; preds = %1439
  %1537 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %1538 = load float, float* %1537, align 16
  %1539 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 0
  %1540 = load float, float* %1539, align 16
  %1541 = fmul float %1538, %1540
  %1542 = load float*, float** %8, align 8
  %1543 = getelementptr inbounds float, float* %1542, i64 0
  %1544 = load float, float* %1543, align 4
  %1545 = fadd float %1544, %1541
  store float %1545, float* %1543, align 4
  %1546 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %1547 = load float, float* %1546, align 4
  %1548 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 1
  %1549 = load float, float* %1548, align 4
  %1550 = fmul float %1547, %1549
  %1551 = load float*, float** %8, align 8
  %1552 = getelementptr inbounds float, float* %1551, i64 1
  %1553 = load float, float* %1552, align 4
  %1554 = fadd float %1553, %1550
  store float %1554, float* %1552, align 4
  %1555 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %1556 = load float, float* %1555, align 8
  %1557 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 2
  %1558 = load float, float* %1557, align 8
  %1559 = fmul float %1556, %1558
  %1560 = load float*, float** %8, align 8
  %1561 = getelementptr inbounds float, float* %1560, i64 2
  %1562 = load float, float* %1561, align 4
  %1563 = fadd float %1562, %1559
  store float %1563, float* %1561, align 4
  %1564 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %1565 = load float, float* %1564, align 16
  %1566 = fpext float %1565 to double
  %1567 = fmul double 2.970000e-01, %1566
  %1568 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %1569 = load float, float* %1568, align 4
  %1570 = fpext float %1569 to double
  %1571 = fmul double 5.890000e-01, %1570
  %1572 = fadd double %1567, %1571
  %1573 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %1574 = load float, float* %1573, align 8
  %1575 = fpext float %1574 to double
  %1576 = fmul double 1.140000e-01, %1575
  %1577 = fadd double %1572, %1576
  %1578 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 4
  %1579 = load float, float* %1578, align 16
  %1580 = fpext float %1579 to double
  %1581 = fmul double %1577, %1580
  %1582 = fptrunc double %1581 to float
  %1583 = load float*, float** %8, align 8
  %1584 = getelementptr inbounds float, float* %1583, i64 4
  store float %1582, float* %1584, align 4
  br label %1585

; <label>:1585:                                   ; preds = %1536, %originalBBpart2601
  br label %1586

; <label>:1586:                                   ; preds = %1585, %originalBBpart2423
  br label %1587

; <label>:1587:                                   ; preds = %1586, %1126, %1122, %1115
  %1588 = load i32, i32* @x.87
  %1589 = load i32, i32* @y.88
  %1590 = sub i32 %1588, 1
  %1591 = mul i32 %1588, %1590
  %1592 = urem i32 %1591, 2
  %1593 = icmp eq i32 %1592, 0
  %1594 = icmp slt i32 %1589, 10
  %1595 = or i1 %1593, %1594
  br i1 %1595, label %originalBB603, label %originalBB603alteredBB

originalBB603:                                    ; preds = %originalBB603alteredBB, %1587
  %1596 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %1597 = zext i32 %1596 to i64
  %1598 = and i64 %1597, 32
  %1599 = icmp ne i64 %1598, 0
  %1600 = load i32, i32* @x.87
  %1601 = load i32, i32* @y.88
  %1602 = sub i32 %1600, 1
  %1603 = mul i32 %1600, %1602
  %1604 = urem i32 %1603, 2
  %1605 = icmp eq i32 %1604, 0
  %1606 = icmp slt i32 %1601, 10
  %1607 = or i1 %1605, %1606
  br i1 %1607, label %originalBBpart2606, label %originalBB603alteredBB

originalBBpart2606:                               ; preds = %originalBB603
  br i1 %1599, label %1608, label %1872

; <label>:1608:                                   ; preds = %originalBBpart2606
  %1609 = load i32, i32* @x.87
  %1610 = load i32, i32* @y.88
  %1611 = sub i32 %1609, 1
  %1612 = mul i32 %1609, %1611
  %1613 = urem i32 %1612, 2
  %1614 = icmp eq i32 %1613, 0
  %1615 = icmp slt i32 %1610, 10
  %1616 = or i1 %1614, %1615
  br i1 %1616, label %originalBB608, label %originalBB608alteredBB

originalBB608:                                    ; preds = %originalBB608alteredBB, %1608
  store i32 0, i32* %15, align 4
  %1617 = load i32, i32* @x.87
  %1618 = load i32, i32* @y.88
  %1619 = sub i32 %1617, 1
  %1620 = mul i32 %1617, %1619
  %1621 = urem i32 %1620, 2
  %1622 = icmp eq i32 %1621, 0
  %1623 = icmp slt i32 %1618, 10
  %1624 = or i1 %1622, %1623
  br i1 %1624, label %originalBBpart2610, label %originalBB608alteredBB

originalBBpart2610:                               ; preds = %originalBB608
  br label %1625

; <label>:1625:                                   ; preds = %1868, %originalBBpart2610
  %1626 = load i32, i32* %15, align 4
  %1627 = load i32, i32* %18, align 4
  %1628 = icmp slt i32 %1626, %1627
  br i1 %1628, label %1629, label %1871

; <label>:1629:                                   ; preds = %1625
  %1630 = load i32, i32* %42, align 4
  %1631 = icmp ne i32 %1630, 0
  br i1 %1631, label %1632, label %1668

; <label>:1632:                                   ; preds = %1629
  %1633 = getelementptr inbounds [3 x double], [3 x double]* %28, i64 0, i64 0
  %1634 = load double, double* %1633, align 16
  %1635 = load [3 x double]*, [3 x double]** %45, align 8
  %1636 = load i32, i32* %15, align 4
  %1637 = sext i32 %1636 to i64
  %1638 = getelementptr inbounds [3 x double], [3 x double]* %1635, i64 %1637
  %1639 = getelementptr inbounds [3 x double], [3 x double]* %1638, i64 0, i64 0
  %1640 = load double, double* %1639, align 8
  %1641 = fsub double %1634, %1640
  %1642 = call double @fabs(double %1641) #5
  %1643 = fcmp ogt double %1642, 1.000000e-07
  br i1 %1643, label %1668, label %1644

; <label>:1644:                                   ; preds = %1632
  %1645 = getelementptr inbounds [3 x double], [3 x double]* %28, i64 0, i64 1
  %1646 = load double, double* %1645, align 8
  %1647 = load [3 x double]*, [3 x double]** %45, align 8
  %1648 = load i32, i32* %15, align 4
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds [3 x double], [3 x double]* %1647, i64 %1649
  %1651 = getelementptr inbounds [3 x double], [3 x double]* %1650, i64 0, i64 1
  %1652 = load double, double* %1651, align 8
  %1653 = fsub double %1646, %1652
  %1654 = call double @fabs(double %1653) #5
  %1655 = fcmp ogt double %1654, 1.000000e-07
  br i1 %1655, label %1668, label %1656

; <label>:1656:                                   ; preds = %1644
  %1657 = getelementptr inbounds [3 x double], [3 x double]* %28, i64 0, i64 2
  %1658 = load double, double* %1657, align 16
  %1659 = load [3 x double]*, [3 x double]** %45, align 8
  %1660 = load i32, i32* %15, align 4
  %1661 = sext i32 %1660 to i64
  %1662 = getelementptr inbounds [3 x double], [3 x double]* %1659, i64 %1661
  %1663 = getelementptr inbounds [3 x double], [3 x double]* %1662, i64 0, i64 2
  %1664 = load double, double* %1663, align 8
  %1665 = fsub double %1658, %1664
  %1666 = call double @fabs(double %1665) #5
  %1667 = fcmp ogt double %1666, 1.000000e-07
  br i1 %1667, label %1668, label %1867

; <label>:1668:                                   ; preds = %1656, %1644, %1632, %1629
  %1669 = load i32, i32* @x.87
  %1670 = load i32, i32* @y.88
  %1671 = sub i32 %1669, 1
  %1672 = mul i32 %1669, %1671
  %1673 = urem i32 %1672, 2
  %1674 = icmp eq i32 %1673, 0
  %1675 = icmp slt i32 %1670, 10
  %1676 = or i1 %1674, %1675
  br i1 %1676, label %originalBB612, label %originalBB612alteredBB

originalBB612:                                    ; preds = %originalBB612alteredBB, %1668
  %1677 = load [5 x float]*, [5 x float]** %46, align 8
  %1678 = load i32, i32* %15, align 4
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds [5 x float], [5 x float]* %1677, i64 %1679
  %1681 = getelementptr inbounds [5 x float], [5 x float]* %1680, i64 0, i64 0
  %1682 = load float, float* %1681, align 4
  %1683 = fpext float %1682 to double
  %1684 = fcmp une double %1683, 0.000000e+00
  %1685 = load i32, i32* @x.87
  %1686 = load i32, i32* @y.88
  %1687 = sub i32 %1685, 1
  %1688 = mul i32 %1685, %1687
  %1689 = urem i32 %1688, 2
  %1690 = icmp eq i32 %1689, 0
  %1691 = icmp slt i32 %1686, 10
  %1692 = or i1 %1690, %1691
  br i1 %1692, label %originalBBpart2614, label %originalBB612alteredBB

originalBBpart2614:                               ; preds = %originalBB612
  br i1 %1684, label %1727, label %1693

; <label>:1693:                                   ; preds = %originalBBpart2614
  %1694 = load i32, i32* @x.87
  %1695 = load i32, i32* @y.88
  %1696 = sub i32 %1694, 1
  %1697 = mul i32 %1694, %1696
  %1698 = urem i32 %1697, 2
  %1699 = icmp eq i32 %1698, 0
  %1700 = icmp slt i32 %1695, 10
  %1701 = or i1 %1699, %1700
  br i1 %1701, label %originalBB616, label %originalBB616alteredBB

originalBB616:                                    ; preds = %originalBB616alteredBB, %1693
  %1702 = load [5 x float]*, [5 x float]** %46, align 8
  %1703 = load i32, i32* %15, align 4
  %1704 = sext i32 %1703 to i64
  %1705 = getelementptr inbounds [5 x float], [5 x float]* %1702, i64 %1704
  %1706 = getelementptr inbounds [5 x float], [5 x float]* %1705, i64 0, i64 1
  %1707 = load float, float* %1706, align 4
  %1708 = fpext float %1707 to double
  %1709 = fcmp une double %1708, 0.000000e+00
  %1710 = load i32, i32* @x.87
  %1711 = load i32, i32* @y.88
  %1712 = sub i32 %1710, 1
  %1713 = mul i32 %1710, %1712
  %1714 = urem i32 %1713, 2
  %1715 = icmp eq i32 %1714, 0
  %1716 = icmp slt i32 %1711, 10
  %1717 = or i1 %1715, %1716
  br i1 %1717, label %originalBBpart2618, label %originalBB616alteredBB

originalBBpart2618:                               ; preds = %originalBB616
  br i1 %1709, label %1727, label %1718

; <label>:1718:                                   ; preds = %originalBBpart2618
  %1719 = load [5 x float]*, [5 x float]** %46, align 8
  %1720 = load i32, i32* %15, align 4
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds [5 x float], [5 x float]* %1719, i64 %1721
  %1723 = getelementptr inbounds [5 x float], [5 x float]* %1722, i64 0, i64 2
  %1724 = load float, float* %1723, align 4
  %1725 = fpext float %1724 to double
  %1726 = fcmp une double %1725, 0.000000e+00
  br i1 %1726, label %1727, label %1850

; <label>:1727:                                   ; preds = %1718, %originalBBpart2618, %originalBBpart2614
  %1728 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %1729 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %1728, i32 0, i32 1
  %1730 = getelementptr inbounds [3 x double], [3 x double]* %1729, i32 0, i32 0
  %1731 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1732 = load [3 x double]*, [3 x double]** %45, align 8
  %1733 = load i32, i32* %15, align 4
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds [3 x double], [3 x double]* %1732, i64 %1734
  %1736 = getelementptr inbounds [3 x double], [3 x double]* %1735, i32 0, i32 0
  %1737 = load double*, double** %11, align 8
  %1738 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %1739 = load double*, double** %44, align 8
  %1740 = load i32, i32* %15, align 4
  %1741 = sext i32 %1740 to i64
  %1742 = getelementptr inbounds double, double* %1739, i64 %1741
  %1743 = load double, double* %1742, align 8
  call void @_ZN3povL7ReflectEPdPNS_10Ray_StructES0_S0_Pfd(double* %1730, %"struct.pov::Ray_Struct"* %1731, double* %1736, double* %1737, float* %1738, double %1743)
  store i32 -1, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %1744 = load float*, float** %47, align 8
  %1745 = load i32, i32* %15, align 4
  %1746 = sext i32 %1745 to i64
  %1747 = getelementptr inbounds float, float* %1744, i64 %1746
  %1748 = load float, float* %1747, align 4
  %1749 = fpext float %1748 to double
  %1750 = fcmp une double %1749, 1.000000e+00
  br i1 %1750, label %1751, label %1809

; <label>:1751:                                   ; preds = %1727
  %1752 = load [5 x float]*, [5 x float]** %46, align 8
  %1753 = load i32, i32* %15, align 4
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds [5 x float], [5 x float]* %1752, i64 %1754
  %1756 = getelementptr inbounds [5 x float], [5 x float]* %1755, i64 0, i64 0
  %1757 = load float, float* %1756, align 4
  %1758 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 0
  %1759 = load float, float* %1758, align 16
  %1760 = load float*, float** %47, align 8
  %1761 = load i32, i32* %15, align 4
  %1762 = sext i32 %1761 to i64
  %1763 = getelementptr inbounds float, float* %1760, i64 %1762
  %1764 = load float, float* %1763, align 4
  %1765 = call float @_ZSt3powff(float %1759, float %1764)
  %1766 = fmul float %1757, %1765
  %1767 = load float*, float** %8, align 8
  %1768 = getelementptr inbounds float, float* %1767, i64 0
  %1769 = load float, float* %1768, align 4
  %1770 = fadd float %1769, %1766
  store float %1770, float* %1768, align 4
  %1771 = load [5 x float]*, [5 x float]** %46, align 8
  %1772 = load i32, i32* %15, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = getelementptr inbounds [5 x float], [5 x float]* %1771, i64 %1773
  %1775 = getelementptr inbounds [5 x float], [5 x float]* %1774, i64 0, i64 1
  %1776 = load float, float* %1775, align 4
  %1777 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 1
  %1778 = load float, float* %1777, align 4
  %1779 = load float*, float** %47, align 8
  %1780 = load i32, i32* %15, align 4
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds float, float* %1779, i64 %1781
  %1783 = load float, float* %1782, align 4
  %1784 = call float @_ZSt3powff(float %1778, float %1783)
  %1785 = fmul float %1776, %1784
  %1786 = load float*, float** %8, align 8
  %1787 = getelementptr inbounds float, float* %1786, i64 1
  %1788 = load float, float* %1787, align 4
  %1789 = fadd float %1788, %1785
  store float %1789, float* %1787, align 4
  %1790 = load [5 x float]*, [5 x float]** %46, align 8
  %1791 = load i32, i32* %15, align 4
  %1792 = sext i32 %1791 to i64
  %1793 = getelementptr inbounds [5 x float], [5 x float]* %1790, i64 %1792
  %1794 = getelementptr inbounds [5 x float], [5 x float]* %1793, i64 0, i64 2
  %1795 = load float, float* %1794, align 4
  %1796 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 2
  %1797 = load float, float* %1796, align 8
  %1798 = load float*, float** %47, align 8
  %1799 = load i32, i32* %15, align 4
  %1800 = sext i32 %1799 to i64
  %1801 = getelementptr inbounds float, float* %1798, i64 %1800
  %1802 = load float, float* %1801, align 4
  %1803 = call float @_ZSt3powff(float %1797, float %1802)
  %1804 = fmul float %1795, %1803
  %1805 = load float*, float** %8, align 8
  %1806 = getelementptr inbounds float, float* %1805, i64 2
  %1807 = load float, float* %1806, align 4
  %1808 = fadd float %1807, %1804
  store float %1808, float* %1806, align 4
  br label %1849

; <label>:1809:                                   ; preds = %1727
  %1810 = load [5 x float]*, [5 x float]** %46, align 8
  %1811 = load i32, i32* %15, align 4
  %1812 = sext i32 %1811 to i64
  %1813 = getelementptr inbounds [5 x float], [5 x float]* %1810, i64 %1812
  %1814 = getelementptr inbounds [5 x float], [5 x float]* %1813, i64 0, i64 0
  %1815 = load float, float* %1814, align 4
  %1816 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 0
  %1817 = load float, float* %1816, align 16
  %1818 = fmul float %1815, %1817
  %1819 = load float*, float** %8, align 8
  %1820 = getelementptr inbounds float, float* %1819, i64 0
  %1821 = load float, float* %1820, align 4
  %1822 = fadd float %1821, %1818
  store float %1822, float* %1820, align 4
  %1823 = load [5 x float]*, [5 x float]** %46, align 8
  %1824 = load i32, i32* %15, align 4
  %1825 = sext i32 %1824 to i64
  %1826 = getelementptr inbounds [5 x float], [5 x float]* %1823, i64 %1825
  %1827 = getelementptr inbounds [5 x float], [5 x float]* %1826, i64 0, i64 1
  %1828 = load float, float* %1827, align 4
  %1829 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 1
  %1830 = load float, float* %1829, align 4
  %1831 = fmul float %1828, %1830
  %1832 = load float*, float** %8, align 8
  %1833 = getelementptr inbounds float, float* %1832, i64 1
  %1834 = load float, float* %1833, align 4
  %1835 = fadd float %1834, %1831
  store float %1835, float* %1833, align 4
  %1836 = load [5 x float]*, [5 x float]** %46, align 8
  %1837 = load i32, i32* %15, align 4
  %1838 = sext i32 %1837 to i64
  %1839 = getelementptr inbounds [5 x float], [5 x float]* %1836, i64 %1838
  %1840 = getelementptr inbounds [5 x float], [5 x float]* %1839, i64 0, i64 2
  %1841 = load float, float* %1840, align 4
  %1842 = getelementptr inbounds [5 x float], [5 x float]* %31, i64 0, i64 2
  %1843 = load float, float* %1842, align 8
  %1844 = fmul float %1841, %1843
  %1845 = load float*, float** %8, align 8
  %1846 = getelementptr inbounds float, float* %1845, i64 2
  %1847 = load float, float* %1846, align 4
  %1848 = fadd float %1847, %1844
  store float %1848, float* %1846, align 4
  br label %1849

; <label>:1849:                                   ; preds = %1809, %1751
  br label %1850

; <label>:1850:                                   ; preds = %1849, %1718
  %1851 = load i32, i32* @x.87
  %1852 = load i32, i32* @y.88
  %1853 = sub i32 %1851, 1
  %1854 = mul i32 %1851, %1853
  %1855 = urem i32 %1854, 2
  %1856 = icmp eq i32 %1855, 0
  %1857 = icmp slt i32 %1852, 10
  %1858 = or i1 %1856, %1857
  br i1 %1858, label %originalBB620, label %originalBB620alteredBB

originalBB620:                                    ; preds = %originalBB620alteredBB, %1850
  %1859 = load i32, i32* @x.87
  %1860 = load i32, i32* @y.88
  %1861 = sub i32 %1859, 1
  %1862 = mul i32 %1859, %1861
  %1863 = urem i32 %1862, 2
  %1864 = icmp eq i32 %1863, 0
  %1865 = icmp slt i32 %1860, 10
  %1866 = or i1 %1864, %1865
  br i1 %1866, label %originalBBpart2622, label %originalBB620alteredBB

originalBBpart2622:                               ; preds = %originalBB620
  br label %1867

; <label>:1867:                                   ; preds = %originalBBpart2622, %1656
  br label %1868

; <label>:1868:                                   ; preds = %1867
  %1869 = load i32, i32* %15, align 4
  %1870 = add nsw i32 %1869, 1
  store i32 %1870, i32* %15, align 4
  br label %1625

; <label>:1871:                                   ; preds = %1625
  br label %1872

; <label>:1872:                                   ; preds = %1871, %originalBBpart2606
  %1873 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %1874 = zext i32 %1873 to i64
  %1875 = and i64 %1874, 128
  %1876 = icmp ne i64 %1875, 0
  br i1 %1876, label %1877, label %2130

; <label>:1877:                                   ; preds = %1872
  %1878 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1879 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1878, i32 0, i32 2
  %1880 = load i32, i32* %1879, align 8
  %1881 = icmp sgt i32 %1880, -1
  br i1 %1881, label %1882, label %2130

; <label>:1882:                                   ; preds = %1877
  store i32 1, i32* %19, align 4
  store i32 0, i32* %15, align 4
  br label %1883

; <label>:1883:                                   ; preds = %1949, %1882
  %1884 = load i32, i32* @x.87
  %1885 = load i32, i32* @y.88
  %1886 = sub i32 %1884, 1
  %1887 = mul i32 %1884, %1886
  %1888 = urem i32 %1887, 2
  %1889 = icmp eq i32 %1888, 0
  %1890 = icmp slt i32 %1885, 10
  %1891 = or i1 %1889, %1890
  br i1 %1891, label %originalBB624, label %originalBB624alteredBB

originalBB624:                                    ; preds = %originalBB624alteredBB, %1883
  %1892 = load i32, i32* %15, align 4
  %1893 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1894 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1893, i32 0, i32 2
  %1895 = load i32, i32* %1894, align 8
  %1896 = icmp sle i32 %1892, %1895
  %1897 = load i32, i32* @x.87
  %1898 = load i32, i32* @y.88
  %1899 = sub i32 %1897, 1
  %1900 = mul i32 %1897, %1899
  %1901 = urem i32 %1900, 2
  %1902 = icmp eq i32 %1901, 0
  %1903 = icmp slt i32 %1898, 10
  %1904 = or i1 %1902, %1903
  br i1 %1904, label %originalBBpart2626, label %originalBB624alteredBB

originalBBpart2626:                               ; preds = %originalBB624
  br i1 %1896, label %1905, label %1952

; <label>:1905:                                   ; preds = %originalBBpart2626
  %1906 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1907 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1906, i32 0, i32 4
  %1908 = load i32, i32* %15, align 4
  %1909 = sext i32 %1908 to i64
  %1910 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %1907, i64 0, i64 %1909
  %1911 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %1910, align 8
  %1912 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %1911, i32 0, i32 1
  %1913 = load i32, i32* %1912, align 4
  %1914 = icmp ne i32 %1913, 0
  br i1 %1914, label %1932, label %1915

; <label>:1915:                                   ; preds = %1905
  %1916 = load i32, i32* @x.87
  %1917 = load i32, i32* @y.88
  %1918 = sub i32 %1916, 1
  %1919 = mul i32 %1916, %1918
  %1920 = urem i32 %1919, 2
  %1921 = icmp eq i32 %1920, 0
  %1922 = icmp slt i32 %1917, 10
  %1923 = or i1 %1921, %1922
  br i1 %1923, label %originalBB628, label %originalBB628alteredBB

originalBB628:                                    ; preds = %originalBB628alteredBB, %1915
  store i32 0, i32* %19, align 4
  %1924 = load i32, i32* @x.87
  %1925 = load i32, i32* @y.88
  %1926 = sub i32 %1924, 1
  %1927 = mul i32 %1924, %1926
  %1928 = urem i32 %1927, 2
  %1929 = icmp eq i32 %1928, 0
  %1930 = icmp slt i32 %1925, 10
  %1931 = or i1 %1929, %1930
  br i1 %1931, label %originalBBpart2630, label %originalBB628alteredBB

originalBBpart2630:                               ; preds = %originalBB628
  br label %1952

; <label>:1932:                                   ; preds = %1905
  %1933 = load i32, i32* @x.87
  %1934 = load i32, i32* @y.88
  %1935 = sub i32 %1933, 1
  %1936 = mul i32 %1933, %1935
  %1937 = urem i32 %1936, 2
  %1938 = icmp eq i32 %1937, 0
  %1939 = icmp slt i32 %1934, 10
  %1940 = or i1 %1938, %1939
  br i1 %1940, label %originalBB632, label %originalBB632alteredBB

originalBB632:                                    ; preds = %originalBB632alteredBB, %1932
  %1941 = load i32, i32* @x.87
  %1942 = load i32, i32* @y.88
  %1943 = sub i32 %1941, 1
  %1944 = mul i32 %1941, %1943
  %1945 = urem i32 %1944, 2
  %1946 = icmp eq i32 %1945, 0
  %1947 = icmp slt i32 %1942, 10
  %1948 = or i1 %1946, %1947
  br i1 %1948, label %originalBBpart2634, label %originalBB632alteredBB

originalBBpart2634:                               ; preds = %originalBB632
  br label %1949

; <label>:1949:                                   ; preds = %originalBBpart2634
  %1950 = load i32, i32* %15, align 4
  %1951 = add nsw i32 %1950, 1
  store i32 %1951, i32* %15, align 4
  br label %1883

; <label>:1952:                                   ; preds = %originalBBpart2630, %originalBBpart2626
  %1953 = load i32, i32* %19, align 4
  %1954 = icmp ne i32 %1953, 0
  br i1 %1954, label %1955, label %2129

; <label>:1955:                                   ; preds = %1952
  %1956 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %1957 = add nsw i64 %1956, 1
  store i64 %1957, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %1958 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %1959 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %1960 = icmp sge i64 %1958, %1959
  br i1 %1960, label %1961, label %1964

; <label>:1961:                                   ; preds = %1955
  %1962 = load i64, i64* @_ZN3pov17MaxMediaPoolDepthE, align 8
  %1963 = mul nsw i64 %1962, 2
  call void @_ZN3pov22ResizeMediaMallocPoolsEl(i64 %1963)
  br label %1964

; <label>:1964:                                   ; preds = %1961, %1955
  %1965 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1966 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1965, i32 0, i32 2
  %1967 = load i32, i32* %1966, align 8
  %1968 = add nsw i32 %1967, 2
  %1969 = sext i32 %1968 to i64
  %1970 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %1971 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %1972 = getelementptr inbounds i64, i64* %1970, i64 %1971
  %1973 = load i64, i64* %1972, align 8
  %1974 = icmp sge i64 %1969, %1973
  br i1 %1974, label %1975, label %2019

; <label>:1975:                                   ; preds = %1964
  %1976 = load i32, i32* @x.87
  %1977 = load i32, i32* @y.88
  %1978 = sub i32 %1976, 1
  %1979 = mul i32 %1976, %1978
  %1980 = urem i32 %1979, 2
  %1981 = icmp eq i32 %1980, 0
  %1982 = icmp slt i32 %1977, 10
  %1983 = or i1 %1981, %1982
  br i1 %1983, label %originalBB636, label %originalBB636alteredBB

originalBB636:                                    ; preds = %originalBB636alteredBB, %1975
  %1984 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %1985 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %1986 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %1984, i64 %1985
  %1987 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %1986, align 8
  %1988 = bitcast %"struct.pov::Media_Struct"** %1987 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %1988, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4190)
  %1989 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %1990 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %1991 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %1989, i64 %1990
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %1991, align 8
  %1992 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %1993 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1992, i32 0, i32 2
  %1994 = load i32, i32* %1993, align 8
  %1995 = add nsw i32 %1994, 2
  %1996 = sext i32 %1995 to i64
  %1997 = mul i64 %1996, 8
  %1998 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %1997, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4191, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %1999 = bitcast i8* %1998 to %"struct.pov::Media_Struct"**
  %2000 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %2001 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2002 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2000, i64 %2001
  store %"struct.pov::Media_Struct"** %1999, %"struct.pov::Media_Struct"*** %2002, align 8
  %2003 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2004 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2003, i32 0, i32 2
  %2005 = load i32, i32* %2004, align 8
  %2006 = add nsw i32 %2005, 2
  %2007 = sext i32 %2006 to i64
  %2008 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %2009 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2010 = getelementptr inbounds i64, i64* %2008, i64 %2009
  store i64 %2007, i64* %2010, align 8
  %2011 = load i32, i32* @x.87
  %2012 = load i32, i32* @y.88
  %2013 = sub i32 %2011, 1
  %2014 = mul i32 %2011, %2013
  %2015 = urem i32 %2014, 2
  %2016 = icmp eq i32 %2015, 0
  %2017 = icmp slt i32 %2012, 10
  %2018 = or i1 %2016, %2017
  br i1 %2018, label %originalBBpart2650, label %originalBB636alteredBB

originalBBpart2650:                               ; preds = %originalBB636
  br label %2019

; <label>:2019:                                   ; preds = %originalBBpart2650, %1964
  %2020 = load i32, i32* @x.87
  %2021 = load i32, i32* @y.88
  %2022 = sub i32 %2020, 1
  %2023 = mul i32 %2020, %2022
  %2024 = urem i32 %2023, 2
  %2025 = icmp eq i32 %2024, 0
  %2026 = icmp slt i32 %2021, 10
  %2027 = or i1 %2025, %2026
  br i1 %2027, label %originalBB652, label %originalBB652alteredBB

originalBB652:                                    ; preds = %originalBB652alteredBB, %2019
  %2028 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %2029 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2030 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2028, i64 %2029
  %2031 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2030, align 8
  store %"struct.pov::Media_Struct"** %2031, %"struct.pov::Media_Struct"*** %39, align 8
  %2032 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %39, align 8
  store %"struct.pov::Media_Struct"** %2032, %"struct.pov::Media_Struct"*** %38, align 8
  store i32 0, i32* %15, align 4
  %2033 = load i32, i32* @x.87
  %2034 = load i32, i32* @y.88
  %2035 = sub i32 %2033, 1
  %2036 = mul i32 %2033, %2035
  %2037 = urem i32 %2036, 2
  %2038 = icmp eq i32 %2037, 0
  %2039 = icmp slt i32 %2034, 10
  %2040 = or i1 %2038, %2039
  br i1 %2040, label %originalBBpart2654, label %originalBB652alteredBB

originalBBpart2654:                               ; preds = %originalBB652
  br label %2041

; <label>:2041:                                   ; preds = %2113, %originalBBpart2654
  %2042 = load i32, i32* %15, align 4
  %2043 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2044 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2043, i32 0, i32 2
  %2045 = load i32, i32* %2044, align 8
  %2046 = icmp sle i32 %2042, %2045
  br i1 %2046, label %2047, label %2116

; <label>:2047:                                   ; preds = %2041
  %2048 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2049 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2048, i32 0, i32 4
  %2050 = load i32, i32* %15, align 4
  %2051 = sext i32 %2050 to i64
  %2052 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %2049, i64 0, i64 %2051
  %2053 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %2052, align 8
  %2054 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2053, i32 0, i32 1
  %2055 = load i32, i32* %2054, align 4
  %2056 = icmp ne i32 %2055, 0
  br i1 %2056, label %2057, label %2096

; <label>:2057:                                   ; preds = %2047
  %2058 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2059 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2058, i32 0, i32 4
  %2060 = load i32, i32* %15, align 4
  %2061 = sext i32 %2060 to i64
  %2062 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %2059, i64 0, i64 %2061
  %2063 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %2062, align 8
  %2064 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2063, i32 0, i32 10
  %2065 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %2064, align 8
  %2066 = icmp ne %"struct.pov::Media_Struct"* %2065, null
  br i1 %2066, label %2067, label %2095

; <label>:2067:                                   ; preds = %2057
  %2068 = load i32, i32* @x.87
  %2069 = load i32, i32* @y.88
  %2070 = sub i32 %2068, 1
  %2071 = mul i32 %2068, %2070
  %2072 = urem i32 %2071, 2
  %2073 = icmp eq i32 %2072, 0
  %2074 = icmp slt i32 %2069, 10
  %2075 = or i1 %2073, %2074
  br i1 %2075, label %originalBB656, label %originalBB656alteredBB

originalBB656:                                    ; preds = %originalBB656alteredBB, %2067
  %2076 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2077 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2076, i32 0, i32 4
  %2078 = load i32, i32* %15, align 4
  %2079 = sext i32 %2078 to i64
  %2080 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %2077, i64 0, i64 %2079
  %2081 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %2080, align 8
  %2082 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2081, i32 0, i32 10
  %2083 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %2082, align 8
  %2084 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %38, align 8
  store %"struct.pov::Media_Struct"* %2083, %"struct.pov::Media_Struct"** %2084, align 8
  %2085 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %38, align 8
  %2086 = getelementptr inbounds %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %2085, i32 1
  store %"struct.pov::Media_Struct"** %2086, %"struct.pov::Media_Struct"*** %38, align 8
  %2087 = load i32, i32* @x.87
  %2088 = load i32, i32* @y.88
  %2089 = sub i32 %2087, 1
  %2090 = mul i32 %2087, %2089
  %2091 = urem i32 %2090, 2
  %2092 = icmp eq i32 %2091, 0
  %2093 = icmp slt i32 %2088, 10
  %2094 = or i1 %2092, %2093
  br i1 %2094, label %originalBBpart2658, label %originalBB656alteredBB

originalBBpart2658:                               ; preds = %originalBB656
  br label %2095

; <label>:2095:                                   ; preds = %originalBBpart2658, %2057
  br label %2096

; <label>:2096:                                   ; preds = %2095, %2047
  %2097 = load i32, i32* @x.87
  %2098 = load i32, i32* @y.88
  %2099 = sub i32 %2097, 1
  %2100 = mul i32 %2097, %2099
  %2101 = urem i32 %2100, 2
  %2102 = icmp eq i32 %2101, 0
  %2103 = icmp slt i32 %2098, 10
  %2104 = or i1 %2102, %2103
  br i1 %2104, label %originalBB660, label %originalBB660alteredBB

originalBB660:                                    ; preds = %originalBB660alteredBB, %2096
  %2105 = load i32, i32* @x.87
  %2106 = load i32, i32* @y.88
  %2107 = sub i32 %2105, 1
  %2108 = mul i32 %2105, %2107
  %2109 = urem i32 %2108, 2
  %2110 = icmp eq i32 %2109, 0
  %2111 = icmp slt i32 %2106, 10
  %2112 = or i1 %2110, %2111
  br i1 %2112, label %originalBBpart2662, label %originalBB660alteredBB

originalBBpart2662:                               ; preds = %originalBB660
  br label %2113

; <label>:2113:                                   ; preds = %originalBBpart2662
  %2114 = load i32, i32* %15, align 4
  %2115 = add nsw i32 %2114, 1
  store i32 %2115, i32* %15, align 4
  br label %2041

; <label>:2116:                                   ; preds = %2041
  %2117 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %38, align 8
  store %"struct.pov::Media_Struct"* null, %"struct.pov::Media_Struct"** %2117, align 8
  %2118 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %39, align 8
  %2119 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %2118, align 8
  %2120 = icmp ne %"struct.pov::Media_Struct"* %2119, null
  br i1 %2120, label %2121, label %2126

; <label>:2121:                                   ; preds = %2116
  %2122 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %39, align 8
  %2123 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2124 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2125 = load float*, float** %8, align 8
  call void @_ZN3pov14Simulate_MediaEPPNS_12Media_StructEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Media_Struct"** %2122, %"struct.pov::Ray_Struct"* %2123, %"struct.pov::istk_entry"* %2124, float* %2125, i32 0)
  br label %2126

; <label>:2126:                                   ; preds = %2121, %2116
  store i32 -1, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %2127 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2128 = add nsw i64 %2127, -1
  store i64 %2128, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  br label %2129

; <label>:2129:                                   ; preds = %2126, %1952
  br label %2130

; <label>:2130:                                   ; preds = %2129, %1877, %1872
  %2131 = load %"struct.pov::ComTexData_Struct"*, %"struct.pov::ComTexData_Struct"** %43, align 8
  call void @_ZN3pov14FreeComTexDataEPNS_17ComTexData_StructE(%"struct.pov::ComTexData_Struct"* %2131)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %86
  store i32 1, i32* %17, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %103
  store i32 0, i32* %17, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %125
  %2132 = load double, double* %25, align 8
  %2133 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %2134 = fcmp ogt double %2132, %2133
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %159
  %2135 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 28), align 8
  %2136 = icmp sgt i32 %2135, 310
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %179
  %2137 = load i32, i32* %15, align 4
  %2138 = load i32, i32* @_ZN3pov18warpNormalTexturesE, align 4
  %2139 = icmp slt i32 %2137, %2138
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %217
  %2140 = load i32, i32* %15, align 4
  %_ = sub i32 0, %2140
  %gen = add i32 %_, 1
  %_19 = sub i32 0, %2140
  %gen20 = add i32 %_19, 1
  %_21 = shl i32 %2140, 1
  %_22 = shl i32 %2140, 1
  %2141 = add nsw i32 %2140, 1
  store i32 %2141, i32* %15, align 4
  br label %originalBB18

originalBB26alteredBB:                            ; preds = %originalBB26, %236
  %2142 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %2143 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %2144 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2143, i32 0, i32 13
  %2145 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %2144, align 8
  %2146 = load double*, double** %10, align 8
  %2147 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  call void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double* %2142, %"struct.pov::Tnormal_Struct"* %2145, double* %2146, %"struct.pov::istk_entry"* %2147)
  %2148 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %2149 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2148, i32 0, i32 13
  %2150 = load %"struct.pov::Tnormal_Struct"*, %"struct.pov::Tnormal_Struct"** %2149, align 8
  %2151 = getelementptr inbounds %"struct.pov::Tnormal_Struct", %"struct.pov::Tnormal_Struct"* %2150, i32 0, i32 2
  %2152 = load i16, i16* %2151, align 4
  %2153 = zext i16 %2152 to i32
  %_27 = sub i32 0, %2153
  %gen28 = add i32 %_27, 8
  %_29 = sub i32 %2153, 8
  %gen30 = mul i32 %_29, 8
  %_31 = shl i32 %2153, 8
  %_32 = sub i32 0, %2153
  %gen33 = add i32 %_32, 8
  %_34 = sub i32 %2153, 8
  %gen35 = mul i32 %_34, 8
  %2154 = and i32 %2153, 8
  %2155 = icmp ne i32 %2154, 0
  br label %originalBB26

originalBB39alteredBB:                            ; preds = %originalBB39, %304
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %321
  %2156 = load i32, i32* %18, align 4
  %2157 = icmp ne i32 %2156, 0
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %343
  %2158 = load double, double* %13, align 8
  %2159 = load double, double* %25, align 8
  %_48 = fsub double %2158, %2159
  %gen49 = fmul double %_48, %2159
  %_50 = fsub double -0.000000e+00, %2158
  %gen51 = fadd double %_50, %2159
  %_52 = fsub double %2158, %2159
  %gen53 = fmul double %_52, %2159
  %_54 = fsub double %2158, %2159
  %gen55 = fmul double %_54, %2159
  %_56 = fsub double -0.000000e+00, %2158
  %gen57 = fadd double %_56, %2159
  %2160 = fmul double %2158, %2159
  store double %2160, double* %23, align 8
  %2161 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %2162 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %2163 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2162, i32 0, i32 12
  %2164 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %2163, align 8
  %2165 = load double*, double** %10, align 8
  %2166 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2167 = call i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float* %2161, %"struct.pov::Pigment_Struct"* %2164, double* %2165, %"struct.pov::istk_entry"* %2166)
  store i32 %2167, i32* %21, align 4
  %2168 = load i32, i32* %21, align 4
  %2169 = icmp ne i32 %2168, 0
  br label %originalBB47

originalBB61alteredBB:                            ; preds = %originalBB61, %648
  %2170 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 54), align 8
  %2171 = icmp ne i32 %2170, 0
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %691
  %2172 = load i32, i32* %17, align 4
  %2173 = icmp ne i32 %2172, 0
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %946
  %2174 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 0
  %2175 = load float, float* %2174, align 16
  %2176 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 3
  %2177 = load float, float* %2176, align 4
  %_70 = fsub float -0.000000e+00, %2175
  %gen71 = fadd float %_70, %2177
  %_72 = fsub float -0.000000e+00, %2175
  %gen73 = fadd float %_72, %2177
  %_74 = fsub float %2175, %2177
  %gen75 = fmul float %_74, %2177
  %_76 = fsub float %2175, %2177
  %gen77 = fmul float %_76, %2177
  %_78 = fsub float %2175, %2177
  %gen79 = fmul float %_78, %2177
  %_80 = fsub float -0.000000e+00, %2175
  %gen81 = fadd float %_80, %2177
  %2178 = fmul float %2175, %2177
  %2179 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 4
  %2180 = load float, float* %2179, align 16
  %_82 = fsub float %2178, %2180
  %gen83 = fmul float %_82, %2180
  %2181 = fadd float %2178, %2180
  %2182 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %2183 = load float, float* %2182, align 16
  %_84 = fsub float %2183, %2181
  %gen85 = fmul float %_84, %2181
  %_86 = fsub float %2183, %2181
  %gen87 = fmul float %_86, %2181
  %2184 = fmul float %2183, %2181
  store float %2184, float* %2182, align 16
  %2185 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 1
  %2186 = load float, float* %2185, align 4
  %2187 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 3
  %2188 = load float, float* %2187, align 4
  %_88 = fsub float -0.000000e+00, %2186
  %gen89 = fadd float %_88, %2188
  %_90 = fsub float %2186, %2188
  %gen91 = fmul float %_90, %2188
  %_92 = fsub float %2186, %2188
  %gen93 = fmul float %_92, %2188
  %_94 = fsub float %2186, %2188
  %gen95 = fmul float %_94, %2188
  %_96 = fsub float -0.000000e+00, %2186
  %gen97 = fadd float %_96, %2188
  %_98 = fsub float %2186, %2188
  %gen99 = fmul float %_98, %2188
  %_100 = fsub float %2186, %2188
  %gen101 = fmul float %_100, %2188
  %_102 = fsub float -0.000000e+00, %2186
  %gen103 = fadd float %_102, %2188
  %2189 = fmul float %2186, %2188
  %2190 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 4
  %2191 = load float, float* %2190, align 16
  %_104 = fsub float -0.000000e+00, %2189
  %gen105 = fadd float %_104, %2191
  %_106 = fsub float %2189, %2191
  %gen107 = fmul float %_106, %2191
  %_108 = fsub float -0.000000e+00, %2189
  %gen109 = fadd float %_108, %2191
  %_110 = fsub float %2189, %2191
  %gen111 = fmul float %_110, %2191
  %_112 = fsub float -0.000000e+00, %2189
  %gen113 = fadd float %_112, %2191
  %_114 = fsub float %2189, %2191
  %gen115 = fmul float %_114, %2191
  %_116 = fsub float -0.000000e+00, %2189
  %gen117 = fadd float %_116, %2191
  %2192 = fadd float %2189, %2191
  %2193 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %2194 = load float, float* %2193, align 4
  %_118 = fsub float -0.000000e+00, %2194
  %gen119 = fadd float %_118, %2192
  %2195 = fmul float %2194, %2192
  store float %2195, float* %2193, align 4
  %2196 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 2
  %2197 = load float, float* %2196, align 8
  %2198 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 3
  %2199 = load float, float* %2198, align 4
  %_120 = fsub float -0.000000e+00, %2197
  %gen121 = fadd float %_120, %2199
  %_122 = fsub float -0.000000e+00, %2197
  %gen123 = fadd float %_122, %2199
  %_124 = fsub float %2197, %2199
  %gen125 = fmul float %_124, %2199
  %_126 = fsub float %2197, %2199
  %gen127 = fmul float %_126, %2199
  %_128 = fsub float -0.000000e+00, %2197
  %gen129 = fadd float %_128, %2199
  %_130 = fsub float -0.000000e+00, %2197
  %gen131 = fadd float %_130, %2199
  %2200 = fmul float %2197, %2199
  %2201 = getelementptr inbounds [5 x float], [5 x float]* %30, i64 0, i64 4
  %2202 = load float, float* %2201, align 16
  %_132 = fsub float -0.000000e+00, %2200
  %gen133 = fadd float %_132, %2202
  %_134 = fsub float %2200, %2202
  %gen135 = fmul float %_134, %2202
  %2203 = fadd float %2200, %2202
  %2204 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %2205 = load float, float* %2204, align 8
  %_136 = fsub float -0.000000e+00, %2205
  %gen137 = fadd float %_136, %2203
  %_138 = fsub float %2205, %2203
  %gen139 = fmul float %_138, %2203
  %_140 = fsub float %2205, %2203
  %gen141 = fmul float %_140, %2203
  %_142 = fsub float %2205, %2203
  %gen143 = fmul float %_142, %2203
  %2206 = fmul float %2205, %2203
  store float %2206, float* %2204, align 8
  %2207 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %2208 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2207, i32 0, i32 14
  %2209 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %2208, align 8
  %2210 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %2209, i32 0, i32 22
  %2211 = load i32, i32* %2210, align 4
  %2212 = icmp ne i32 %2211, 0
  br label %originalBB69

originalBB147alteredBB:                           ; preds = %originalBB147, %1049
  store double 1.000000e+00, double* %59, align 8
  %2213 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %2214 = load float, float* %2213, align 4
  %2215 = fpext float %2214 to double
  %2216 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %2217 = load float, float* %2216, align 16
  %2218 = fpext float %2217 to double
  %_148 = fsub double 2.970000e-01, %2218
  %gen149 = fmul double %_148, %2218
  %2219 = fmul double 2.970000e-01, %2218
  %2220 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %2221 = load float, float* %2220, align 4
  %2222 = fpext float %2221 to double
  %_150 = fsub double 5.890000e-01, %2222
  %gen151 = fmul double %_150, %2222
  %_152 = fsub double 5.890000e-01, %2222
  %gen153 = fmul double %_152, %2222
  %_154 = fsub double 5.890000e-01, %2222
  %gen155 = fmul double %_154, %2222
  %_156 = fsub double -0.000000e+00, 5.890000e-01
  %gen157 = fadd double %_156, %2222
  %_158 = fsub double 5.890000e-01, %2222
  %gen159 = fmul double %_158, %2222
  %_160 = fsub double 5.890000e-01, %2222
  %gen161 = fmul double %_160, %2222
  %2223 = fmul double 5.890000e-01, %2222
  %_162 = fsub double %2219, %2223
  %gen163 = fmul double %_162, %2223
  %_164 = fsub double -0.000000e+00, %2219
  %gen165 = fadd double %_164, %2223
  %_166 = fsub double -0.000000e+00, %2219
  %gen167 = fadd double %_166, %2223
  %2224 = fadd double %2219, %2223
  %2225 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %2226 = load float, float* %2225, align 8
  %2227 = fpext float %2226 to double
  %_168 = fsub double -0.000000e+00, 1.140000e-01
  %gen169 = fadd double %_168, %2227
  %_170 = fsub double -0.000000e+00, 1.140000e-01
  %gen171 = fadd double %_170, %2227
  %_172 = fsub double 1.140000e-01, %2227
  %gen173 = fmul double %_172, %2227
  %_174 = fsub double 1.140000e-01, %2227
  %gen175 = fmul double %_174, %2227
  %_176 = fsub double 1.140000e-01, %2227
  %gen177 = fmul double %_176, %2227
  %_178 = fsub double -0.000000e+00, 1.140000e-01
  %gen179 = fadd double %_178, %2227
  %2228 = fmul double 1.140000e-01, %2227
  %_180 = fsub double %2224, %2228
  %gen181 = fmul double %_180, %2228
  %_182 = fsub double -0.000000e+00, %2224
  %gen183 = fadd double %_182, %2228
  %_184 = fsub double -0.000000e+00, %2224
  %gen185 = fadd double %_184, %2228
  %_186 = fsub double -0.000000e+00, %2224
  %gen187 = fadd double %_186, %2228
  %_188 = fsub double -0.000000e+00, %2224
  %gen189 = fadd double %_188, %2228
  %_190 = fsub double %2224, %2228
  %gen191 = fmul double %_190, %2228
  %_192 = fsub double %2224, %2228
  %gen193 = fmul double %_192, %2228
  %2229 = fadd double %2224, %2228
  %_194 = fsub double -0.000000e+00, %2215
  %gen195 = fadd double %_194, %2229
  %_196 = fsub double -0.000000e+00, %2215
  %gen197 = fadd double %_196, %2229
  %_198 = fsub double -0.000000e+00, %2215
  %gen199 = fadd double %_198, %2229
  %_200 = fsub double -0.000000e+00, %2215
  %gen201 = fadd double %_200, %2229
  %2230 = fmul double %2215, %2229
  %2231 = call double @fabs(double %2230) #5
  %2232 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %2233 = load float, float* %2232, align 16
  %2234 = call float @_ZSt4fabsf(float %2233)
  %2235 = fpext float %2234 to double
  %_202 = fsub double %2231, %2235
  %gen203 = fmul double %_202, %2235
  %_204 = fsub double %2231, %2235
  %gen205 = fmul double %_204, %2235
  %2236 = fadd double %2231, %2235
  store double %2236, double* %60, align 8
  %2237 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %59, double* dereferenceable(8) %60)
  %2238 = load double, double* %2237, align 8
  store double %2238, double* %25, align 8
  br label %originalBB147

originalBB209alteredBB:                           ; preds = %originalBB209, %1092
  %2239 = load i32, i32* %18, align 4
  %_210 = shl i32 %2239, 1
  %_211 = sub i32 0, %2239
  %gen212 = add i32 %_211, 1
  %_213 = sub i32 0, %2239
  %gen214 = add i32 %_213, 1
  %_215 = sub i32 %2239, 1
  %gen216 = mul i32 %_215, 1
  %2240 = add nsw i32 %2239, 1
  store i32 %2240, i32* %18, align 4
  %2241 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %41, align 8
  %2242 = getelementptr inbounds %"struct.pov::Texture_Struct", %"struct.pov::Texture_Struct"* %2241, i32 0, i32 8
  %2243 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2242, align 8
  %2244 = bitcast %"struct.pov::Pattern_Struct"* %2243 to %"struct.pov::Texture_Struct"*
  store %"struct.pov::Texture_Struct"* %2244, %"struct.pov::Texture_Struct"** %41, align 8
  br label %originalBB209

originalBB221alteredBB:                           ; preds = %originalBB221, %1131
  %2245 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %2246 = load float, float* %2245, align 4
  %2247 = call float @_ZSt4fabsf(float %2246)
  %2248 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %2249 = load float, float* %2248, align 16
  %2250 = call float @_ZSt4fabsf(float %2249)
  store float %2250, float* %61, align 4
  %2251 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %2252 = load float, float* %2251, align 4
  %2253 = call float @_ZSt4fabsf(float %2252)
  store float %2253, float* %62, align 4
  %2254 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %2255 = load float, float* %2254, align 8
  %2256 = call float @_ZSt4fabsf(float %2255)
  store float %2256, float* %63, align 4
  %2257 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %62, float* dereferenceable(4) %63)
  %2258 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %61, float* dereferenceable(4) %2257)
  %2259 = load float, float* %2258, align 4
  %_222 = fsub float -0.000000e+00, %2247
  %gen223 = fadd float %_222, %2259
  %_224 = fsub float %2247, %2259
  %gen225 = fmul float %_224, %2259
  %_226 = fsub float -0.000000e+00, %2247
  %gen227 = fadd float %_226, %2259
  %_228 = fsub float %2247, %2259
  %gen229 = fmul float %_228, %2259
  %2260 = fmul float %2247, %2259
  %2261 = fpext float %2260 to double
  store double %2261, double* %22, align 8
  %2262 = load double, double* %13, align 8
  %2263 = load double, double* %22, align 8
  %_230 = fsub double -0.000000e+00, %2262
  %gen231 = fadd double %_230, %2263
  %_232 = fsub double -0.000000e+00, %2262
  %gen233 = fadd double %_232, %2263
  %_234 = fsub double -0.000000e+00, %2262
  %gen235 = fadd double %_234, %2263
  %_236 = fsub double -0.000000e+00, %2262
  %gen237 = fadd double %_236, %2263
  %_238 = fsub double -0.000000e+00, %2262
  %gen239 = fadd double %_238, %2263
  %_240 = fsub double %2262, %2263
  %gen241 = fmul double %_240, %2263
  %_242 = fsub double %2262, %2263
  %gen243 = fmul double %_242, %2263
  %_244 = fsub double %2262, %2263
  %gen245 = fmul double %_244, %2263
  %_246 = fsub double -0.000000e+00, %2262
  %gen247 = fadd double %_246, %2263
  %2264 = fmul double %2262, %2263
  store double %2264, double* %23, align 8
  %2265 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2266 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2267 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %2266, i32 0, i32 1
  %2268 = getelementptr inbounds [3 x double], [3 x double]* %2267, i32 0, i32 0
  %2269 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2270 = getelementptr inbounds [3 x double], [3 x double]* %28, i32 0, i32 0
  %2271 = load double*, double** %11, align 8
  %2272 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %2273 = load double, double* %23, align 8
  %2274 = call i32 @_ZN3povL7RefractEPNS_15Interior_StructEPdPNS_10Ray_StructES2_S2_Pfd(%"struct.pov::Interior_Struct"* %2265, double* %2268, %"struct.pov::Ray_Struct"* %2269, double* %2270, double* %2271, float* %2272, double %2273)
  store i32 %2274, i32* %42, align 4
  store i32 -1, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %2275 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2276 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2275, i32 0, i32 6
  %2277 = load float, float* %2276, align 8
  %2278 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  store float %2277, float* %2278, align 8
  %2279 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  store float %2277, float* %2279, align 4
  %2280 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  store float %2277, float* %2280, align 16
  %2281 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2282 = icmp ne %"struct.pov::Interior_Struct"* %2281, null
  br label %originalBB221

originalBB251alteredBB:                           ; preds = %originalBB251, %1198
  %2283 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2284 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2283, i32 0, i32 8
  %2285 = load float, float* %2284, align 8
  %2286 = fcmp oge float %2285, 1.000000e+03
  br label %originalBB251

originalBB255alteredBB:                           ; preds = %originalBB255, %1286
  %2287 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %2288 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %2287, i32 0, i32 0
  %2289 = load double, double* %2288, align 8
  %2290 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2291 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2290, i32 0, i32 7
  %2292 = load float, float* %2291, align 4
  %2293 = fpext float %2292 to double
  %_256 = fsub double -0.000000e+00, %2289
  %gen257 = fadd double %_256, %2293
  %_258 = fsub double -0.000000e+00, %2289
  %gen259 = fadd double %_258, %2293
  %_260 = fsub double -0.000000e+00, %2289
  %gen261 = fadd double %_260, %2293
  %_262 = fsub double %2289, %2293
  %gen263 = fmul double %_262, %2293
  %_264 = fsub double -0.000000e+00, %2289
  %gen265 = fadd double %_264, %2293
  %2294 = fdiv double %2289, %2293
  %2295 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2296 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2295, i32 0, i32 8
  %2297 = load float, float* %2296, align 8
  %2298 = fpext float %2297 to double
  %2299 = call double @pow(double %2294, double %2298) #7
  %_266 = fsub double 1.000000e+00, %2299
  %gen267 = fmul double %_266, %2299
  %_268 = fsub double -0.000000e+00, 1.000000e+00
  %gen269 = fadd double %_268, %2299
  %2300 = fadd double 1.000000e+00, %2299
  store double %2300, double* %24, align 8
  %2301 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2302 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2301, i32 0, i32 9
  %2303 = getelementptr inbounds [5 x float], [5 x float]* %2302, i64 0, i64 0
  %2304 = load float, float* %2303, align 4
  %2305 = fpext float %2304 to double
  %2306 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2307 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2306, i32 0, i32 9
  %2308 = getelementptr inbounds [5 x float], [5 x float]* %2307, i64 0, i64 0
  %2309 = load float, float* %2308, align 4
  %2310 = fpext float %2309 to double
  %_270 = fsub double -0.000000e+00, 1.000000e+00
  %gen271 = fadd double %_270, %2310
  %_272 = fsub double -0.000000e+00, 1.000000e+00
  %gen273 = fadd double %_272, %2310
  %_274 = fsub double 1.000000e+00, %2310
  %gen275 = fmul double %_274, %2310
  %_276 = fsub double 1.000000e+00, %2310
  %gen277 = fmul double %_276, %2310
  %_278 = fsub double -0.000000e+00, 1.000000e+00
  %gen279 = fadd double %_278, %2310
  %_280 = fsub double 1.000000e+00, %2310
  %gen281 = fmul double %_280, %2310
  %_282 = fsub double 1.000000e+00, %2310
  %gen283 = fmul double %_282, %2310
  %2311 = fsub double 1.000000e+00, %2310
  %2312 = load double, double* %24, align 8
  %_284 = fsub double -0.000000e+00, %2311
  %gen285 = fadd double %_284, %2312
  %_286 = fsub double %2311, %2312
  %gen287 = fmul double %_286, %2312
  %_288 = fsub double %2311, %2312
  %gen289 = fmul double %_288, %2312
  %_290 = fsub double %2311, %2312
  %gen291 = fmul double %_290, %2312
  %_292 = fsub double -0.000000e+00, %2311
  %gen293 = fadd double %_292, %2312
  %_294 = fsub double -0.000000e+00, %2311
  %gen295 = fadd double %_294, %2312
  %2313 = fdiv double %2311, %2312
  %_296 = fsub double %2305, %2313
  %gen297 = fmul double %_296, %2313
  %_298 = fsub double %2305, %2313
  %gen299 = fmul double %_298, %2313
  %_300 = fsub double -0.000000e+00, %2305
  %gen301 = fadd double %_300, %2313
  %_302 = fsub double %2305, %2313
  %gen303 = fmul double %_302, %2313
  %_304 = fsub double -0.000000e+00, %2305
  %gen305 = fadd double %_304, %2313
  %2314 = fadd double %2305, %2313
  %2315 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %2316 = load float, float* %2315, align 16
  %2317 = fpext float %2316 to double
  %_306 = fsub double -0.000000e+00, %2317
  %gen307 = fadd double %_306, %2314
  %_308 = fsub double %2317, %2314
  %gen309 = fmul double %_308, %2314
  %_310 = fsub double %2317, %2314
  %gen311 = fmul double %_310, %2314
  %2318 = fmul double %2317, %2314
  %2319 = fptrunc double %2318 to float
  store float %2319, float* %2315, align 16
  %2320 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2321 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2320, i32 0, i32 9
  %2322 = getelementptr inbounds [5 x float], [5 x float]* %2321, i64 0, i64 1
  %2323 = load float, float* %2322, align 4
  %2324 = fpext float %2323 to double
  %2325 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2326 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2325, i32 0, i32 9
  %2327 = getelementptr inbounds [5 x float], [5 x float]* %2326, i64 0, i64 1
  %2328 = load float, float* %2327, align 4
  %2329 = fpext float %2328 to double
  %_312 = fsub double -0.000000e+00, 1.000000e+00
  %gen313 = fadd double %_312, %2329
  %2330 = fsub double 1.000000e+00, %2329
  %2331 = load double, double* %24, align 8
  %_314 = fsub double %2330, %2331
  %gen315 = fmul double %_314, %2331
  %_316 = fsub double %2330, %2331
  %gen317 = fmul double %_316, %2331
  %_318 = fsub double %2330, %2331
  %gen319 = fmul double %_318, %2331
  %2332 = fdiv double %2330, %2331
  %_320 = fsub double %2324, %2332
  %gen321 = fmul double %_320, %2332
  %_322 = fsub double %2324, %2332
  %gen323 = fmul double %_322, %2332
  %_324 = fsub double %2324, %2332
  %gen325 = fmul double %_324, %2332
  %_326 = fsub double %2324, %2332
  %gen327 = fmul double %_326, %2332
  %_328 = fsub double %2324, %2332
  %gen329 = fmul double %_328, %2332
  %2333 = fadd double %2324, %2332
  %2334 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %2335 = load float, float* %2334, align 4
  %2336 = fpext float %2335 to double
  %_330 = fsub double %2336, %2333
  %gen331 = fmul double %_330, %2333
  %_332 = fsub double %2336, %2333
  %gen333 = fmul double %_332, %2333
  %_334 = fsub double -0.000000e+00, %2336
  %gen335 = fadd double %_334, %2333
  %_336 = fsub double -0.000000e+00, %2336
  %gen337 = fadd double %_336, %2333
  %_338 = fsub double %2336, %2333
  %gen339 = fmul double %_338, %2333
  %_340 = fsub double -0.000000e+00, %2336
  %gen341 = fadd double %_340, %2333
  %_342 = fsub double -0.000000e+00, %2336
  %gen343 = fadd double %_342, %2333
  %2337 = fmul double %2336, %2333
  %2338 = fptrunc double %2337 to float
  store float %2338, float* %2334, align 4
  %2339 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2340 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2339, i32 0, i32 9
  %2341 = getelementptr inbounds [5 x float], [5 x float]* %2340, i64 0, i64 2
  %2342 = load float, float* %2341, align 4
  %2343 = fpext float %2342 to double
  %2344 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %37, align 8
  %2345 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2344, i32 0, i32 9
  %2346 = getelementptr inbounds [5 x float], [5 x float]* %2345, i64 0, i64 2
  %2347 = load float, float* %2346, align 4
  %2348 = fpext float %2347 to double
  %_344 = fsub double -0.000000e+00, 1.000000e+00
  %gen345 = fadd double %_344, %2348
  %_346 = fsub double -0.000000e+00, 1.000000e+00
  %gen347 = fadd double %_346, %2348
  %_348 = fsub double 1.000000e+00, %2348
  %gen349 = fmul double %_348, %2348
  %_350 = fsub double 1.000000e+00, %2348
  %gen351 = fmul double %_350, %2348
  %_352 = fsub double -0.000000e+00, 1.000000e+00
  %gen353 = fadd double %_352, %2348
  %2349 = fsub double 1.000000e+00, %2348
  %2350 = load double, double* %24, align 8
  %_354 = fsub double -0.000000e+00, %2349
  %gen355 = fadd double %_354, %2350
  %_356 = fsub double %2349, %2350
  %gen357 = fmul double %_356, %2350
  %2351 = fdiv double %2349, %2350
  %_358 = fsub double -0.000000e+00, %2343
  %gen359 = fadd double %_358, %2351
  %_360 = fsub double -0.000000e+00, %2343
  %gen361 = fadd double %_360, %2351
  %_362 = fsub double %2343, %2351
  %gen363 = fmul double %_362, %2351
  %_364 = fsub double %2343, %2351
  %gen365 = fmul double %_364, %2351
  %_366 = fsub double %2343, %2351
  %gen367 = fmul double %_366, %2351
  %_368 = fsub double %2343, %2351
  %gen369 = fmul double %_368, %2351
  %2352 = fadd double %2343, %2351
  %2353 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %2354 = load float, float* %2353, align 8
  %2355 = fpext float %2354 to double
  %_370 = fsub double -0.000000e+00, %2355
  %gen371 = fadd double %_370, %2352
  %_372 = fsub double -0.000000e+00, %2355
  %gen373 = fadd double %_372, %2352
  %_374 = fsub double -0.000000e+00, %2355
  %gen375 = fadd double %_374, %2352
  %2356 = fmul double %2355, %2352
  %2357 = fptrunc double %2356 to float
  store float %2357, float* %2353, align 8
  br label %originalBB255

originalBB379alteredBB:                           ; preds = %originalBB379, %1374
  br label %originalBB379

originalBB383alteredBB:                           ; preds = %originalBB383, %1395
  %2358 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %2359 = load float, float* %2358, align 16
  %2360 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 0
  %2361 = load float, float* %2360, align 16
  %_384 = fsub float -0.000000e+00, %2359
  %gen385 = fadd float %_384, %2361
  %_386 = fsub float %2359, %2361
  %gen387 = fmul float %_386, %2361
  %_388 = fsub float %2359, %2361
  %gen389 = fmul float %_388, %2361
  %2362 = fmul float %2359, %2361
  %2363 = load float*, float** %8, align 8
  %2364 = getelementptr inbounds float, float* %2363, i64 0
  %2365 = load float, float* %2364, align 4
  %2366 = fadd float %2365, %2362
  store float %2366, float* %2364, align 4
  %2367 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %2368 = load float, float* %2367, align 4
  %2369 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 1
  %2370 = load float, float* %2369, align 4
  %_390 = fsub float -0.000000e+00, %2368
  %gen391 = fadd float %_390, %2370
  %_392 = fsub float -0.000000e+00, %2368
  %gen393 = fadd float %_392, %2370
  %_394 = fsub float %2368, %2370
  %gen395 = fmul float %_394, %2370
  %_396 = fsub float %2368, %2370
  %gen397 = fmul float %_396, %2370
  %_398 = fsub float -0.000000e+00, %2368
  %gen399 = fadd float %_398, %2370
  %2371 = fmul float %2368, %2370
  %2372 = load float*, float** %8, align 8
  %2373 = getelementptr inbounds float, float* %2372, i64 1
  %2374 = load float, float* %2373, align 4
  %_400 = fsub float -0.000000e+00, %2374
  %gen401 = fadd float %_400, %2371
  %2375 = fadd float %2374, %2371
  store float %2375, float* %2373, align 4
  %2376 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %2377 = load float, float* %2376, align 8
  %2378 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 2
  %2379 = load float, float* %2378, align 8
  %_402 = fsub float %2377, %2379
  %gen403 = fmul float %_402, %2379
  %_404 = fsub float %2377, %2379
  %gen405 = fmul float %_404, %2379
  %_406 = fsub float -0.000000e+00, %2377
  %gen407 = fadd float %_406, %2379
  %_408 = fsub float -0.000000e+00, %2377
  %gen409 = fadd float %_408, %2379
  %_410 = fsub float %2377, %2379
  %gen411 = fmul float %_410, %2379
  %_412 = fsub float -0.000000e+00, %2377
  %gen413 = fadd float %_412, %2379
  %_414 = fsub float %2377, %2379
  %gen415 = fmul float %_414, %2379
  %2380 = fmul float %2377, %2379
  %2381 = load float*, float** %8, align 8
  %2382 = getelementptr inbounds float, float* %2381, i64 2
  %2383 = load float, float* %2382, align 4
  %_416 = fsub float -0.000000e+00, %2383
  %gen417 = fadd float %_416, %2380
  %_418 = fsub float -0.000000e+00, %2383
  %gen419 = fadd float %_418, %2380
  %_420 = fsub float %2383, %2380
  %gen421 = fmul float %_420, %2380
  %2384 = fadd float %2383, %2380
  store float %2384, float* %2382, align 4
  br label %originalBB383

originalBB425alteredBB:                           ; preds = %originalBB425, %1442
  %2385 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %2386 = load float, float* %2385, align 16
  %2387 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 0
  %2388 = load float, float* %2387, align 16
  %_426 = fsub float %2386, %2388
  %gen427 = fmul float %_426, %2388
  %_428 = fsub float %2386, %2388
  %gen429 = fmul float %_428, %2388
  %_430 = fsub float %2386, %2388
  %gen431 = fmul float %_430, %2388
  %_432 = fsub float %2386, %2388
  %gen433 = fmul float %_432, %2388
  %_434 = fsub float -0.000000e+00, %2386
  %gen435 = fadd float %_434, %2388
  %_436 = fsub float -0.000000e+00, %2386
  %gen437 = fadd float %_436, %2388
  %2389 = fmul float %2386, %2388
  %2390 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 0
  %2391 = load float, float* %2390, align 16
  %2392 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %2393 = load float, float* %2392, align 4
  %_438 = fsub float %2391, %2393
  %gen439 = fmul float %_438, %2393
  %_440 = fsub float -0.000000e+00, %2391
  %gen441 = fadd float %_440, %2393
  %_442 = fsub float -0.000000e+00, %2391
  %gen443 = fadd float %_442, %2393
  %_444 = fsub float %2391, %2393
  %gen445 = fmul float %_444, %2393
  %2394 = fmul float %2391, %2393
  %2395 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %2396 = load float, float* %2395, align 16
  %2397 = fadd float %2394, %2396
  %_446 = fsub float -0.000000e+00, %2389
  %gen447 = fadd float %_446, %2397
  %_448 = fsub float -0.000000e+00, %2389
  %gen449 = fadd float %_448, %2397
  %_450 = fsub float -0.000000e+00, %2389
  %gen451 = fadd float %_450, %2397
  %_452 = fsub float %2389, %2397
  %gen453 = fmul float %_452, %2397
  %_454 = fsub float %2389, %2397
  %gen455 = fmul float %_454, %2397
  %2398 = fmul float %2389, %2397
  %2399 = load float*, float** %8, align 8
  %2400 = getelementptr inbounds float, float* %2399, i64 0
  %2401 = load float, float* %2400, align 4
  %_456 = fsub float %2401, %2398
  %gen457 = fmul float %_456, %2398
  %_458 = fsub float -0.000000e+00, %2401
  %gen459 = fadd float %_458, %2398
  %_460 = fsub float %2401, %2398
  %gen461 = fmul float %_460, %2398
  %_462 = fsub float -0.000000e+00, %2401
  %gen463 = fadd float %_462, %2398
  %_464 = fsub float -0.000000e+00, %2401
  %gen465 = fadd float %_464, %2398
  %2402 = fadd float %2401, %2398
  store float %2402, float* %2400, align 4
  %2403 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %2404 = load float, float* %2403, align 4
  %2405 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 1
  %2406 = load float, float* %2405, align 4
  %_466 = fsub float %2404, %2406
  %gen467 = fmul float %_466, %2406
  %_468 = fsub float -0.000000e+00, %2404
  %gen469 = fadd float %_468, %2406
  %_470 = fsub float -0.000000e+00, %2404
  %gen471 = fadd float %_470, %2406
  %_472 = fsub float -0.000000e+00, %2404
  %gen473 = fadd float %_472, %2406
  %_474 = fsub float -0.000000e+00, %2404
  %gen475 = fadd float %_474, %2406
  %_476 = fsub float -0.000000e+00, %2404
  %gen477 = fadd float %_476, %2406
  %_478 = fsub float %2404, %2406
  %gen479 = fmul float %_478, %2406
  %2407 = fmul float %2404, %2406
  %2408 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 1
  %2409 = load float, float* %2408, align 4
  %2410 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %2411 = load float, float* %2410, align 4
  %_480 = fsub float %2409, %2411
  %gen481 = fmul float %_480, %2411
  %_482 = fsub float %2409, %2411
  %gen483 = fmul float %_482, %2411
  %_484 = fsub float %2409, %2411
  %gen485 = fmul float %_484, %2411
  %_486 = fsub float -0.000000e+00, %2409
  %gen487 = fadd float %_486, %2411
  %2412 = fmul float %2409, %2411
  %2413 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %2414 = load float, float* %2413, align 16
  %_488 = fsub float -0.000000e+00, %2412
  %gen489 = fadd float %_488, %2414
  %_490 = fsub float %2412, %2414
  %gen491 = fmul float %_490, %2414
  %_492 = fsub float %2412, %2414
  %gen493 = fmul float %_492, %2414
  %_494 = fsub float %2412, %2414
  %gen495 = fmul float %_494, %2414
  %_496 = fsub float %2412, %2414
  %gen497 = fmul float %_496, %2414
  %_498 = fsub float -0.000000e+00, %2412
  %gen499 = fadd float %_498, %2414
  %_500 = fsub float -0.000000e+00, %2412
  %gen501 = fadd float %_500, %2414
  %2415 = fadd float %2412, %2414
  %_502 = fsub float %2407, %2415
  %gen503 = fmul float %_502, %2415
  %_504 = fsub float %2407, %2415
  %gen505 = fmul float %_504, %2415
  %_506 = fsub float %2407, %2415
  %gen507 = fmul float %_506, %2415
  %_508 = fsub float %2407, %2415
  %gen509 = fmul float %_508, %2415
  %2416 = fmul float %2407, %2415
  %2417 = load float*, float** %8, align 8
  %2418 = getelementptr inbounds float, float* %2417, i64 1
  %2419 = load float, float* %2418, align 4
  %_510 = fsub float %2419, %2416
  %gen511 = fmul float %_510, %2416
  %_512 = fsub float -0.000000e+00, %2419
  %gen513 = fadd float %_512, %2416
  %_514 = fsub float %2419, %2416
  %gen515 = fmul float %_514, %2416
  %_516 = fsub float %2419, %2416
  %gen517 = fmul float %_516, %2416
  %2420 = fadd float %2419, %2416
  store float %2420, float* %2418, align 4
  %2421 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %2422 = load float, float* %2421, align 8
  %2423 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 2
  %2424 = load float, float* %2423, align 8
  %_518 = fsub float -0.000000e+00, %2422
  %gen519 = fadd float %_518, %2424
  %2425 = fmul float %2422, %2424
  %2426 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 2
  %2427 = load float, float* %2426, align 8
  %2428 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 3
  %2429 = load float, float* %2428, align 4
  %_520 = fsub float %2427, %2429
  %gen521 = fmul float %_520, %2429
  %_522 = fsub float -0.000000e+00, %2427
  %gen523 = fadd float %_522, %2429
  %_524 = fsub float %2427, %2429
  %gen525 = fmul float %_524, %2429
  %_526 = fsub float %2427, %2429
  %gen527 = fmul float %_526, %2429
  %2430 = fmul float %2427, %2429
  %2431 = getelementptr inbounds [5 x float], [5 x float]* %33, i64 0, i64 4
  %2432 = load float, float* %2431, align 16
  %2433 = fadd float %2430, %2432
  %_528 = fsub float %2425, %2433
  %gen529 = fmul float %_528, %2433
  %2434 = fmul float %2425, %2433
  %2435 = load float*, float** %8, align 8
  %2436 = getelementptr inbounds float, float* %2435, i64 2
  %2437 = load float, float* %2436, align 4
  %_530 = fsub float -0.000000e+00, %2437
  %gen531 = fadd float %_530, %2434
  %_532 = fsub float -0.000000e+00, %2437
  %gen533 = fadd float %_532, %2434
  %_534 = fsub float -0.000000e+00, %2437
  %gen535 = fadd float %_534, %2434
  %_536 = fsub float -0.000000e+00, %2437
  %gen537 = fadd float %_536, %2434
  %_538 = fsub float %2437, %2434
  %gen539 = fmul float %_538, %2434
  %2438 = fadd float %2437, %2434
  store float %2438, float* %2436, align 4
  %2439 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 0
  %2440 = load float, float* %2439, align 16
  %2441 = fpext float %2440 to double
  %_540 = fsub double -0.000000e+00, 2.970000e-01
  %gen541 = fadd double %_540, %2441
  %_542 = fsub double 2.970000e-01, %2441
  %gen543 = fmul double %_542, %2441
  %_544 = fsub double 2.970000e-01, %2441
  %gen545 = fmul double %_544, %2441
  %_546 = fsub double 2.970000e-01, %2441
  %gen547 = fmul double %_546, %2441
  %2442 = fmul double 2.970000e-01, %2441
  %2443 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 1
  %2444 = load float, float* %2443, align 4
  %2445 = fpext float %2444 to double
  %_548 = fsub double -0.000000e+00, 5.890000e-01
  %gen549 = fadd double %_548, %2445
  %_550 = fsub double -0.000000e+00, 5.890000e-01
  %gen551 = fadd double %_550, %2445
  %2446 = fmul double 5.890000e-01, %2445
  %_552 = fsub double %2442, %2446
  %gen553 = fmul double %_552, %2446
  %_554 = fsub double %2442, %2446
  %gen555 = fmul double %_554, %2446
  %_556 = fsub double -0.000000e+00, %2442
  %gen557 = fadd double %_556, %2446
  %_558 = fsub double %2442, %2446
  %gen559 = fmul double %_558, %2446
  %_560 = fsub double -0.000000e+00, %2442
  %gen561 = fadd double %_560, %2446
  %2447 = fadd double %2442, %2446
  %2448 = getelementptr inbounds [5 x float], [5 x float]* %29, i64 0, i64 2
  %2449 = load float, float* %2448, align 8
  %2450 = fpext float %2449 to double
  %_562 = fsub double -0.000000e+00, 1.140000e-01
  %gen563 = fadd double %_562, %2450
  %_564 = fsub double -0.000000e+00, 1.140000e-01
  %gen565 = fadd double %_564, %2450
  %_566 = fsub double -0.000000e+00, 1.140000e-01
  %gen567 = fadd double %_566, %2450
  %_568 = fsub double 1.140000e-01, %2450
  %gen569 = fmul double %_568, %2450
  %_570 = fsub double 1.140000e-01, %2450
  %gen571 = fmul double %_570, %2450
  %_572 = fsub double -0.000000e+00, 1.140000e-01
  %gen573 = fadd double %_572, %2450
  %2451 = fmul double 1.140000e-01, %2450
  %_574 = fsub double %2447, %2451
  %gen575 = fmul double %_574, %2451
  %_576 = fsub double -0.000000e+00, %2447
  %gen577 = fadd double %_576, %2451
  %2452 = fadd double %2447, %2451
  %2453 = getelementptr inbounds [5 x float], [5 x float]* %32, i64 0, i64 4
  %2454 = load float, float* %2453, align 16
  %2455 = fpext float %2454 to double
  %_578 = fsub double -0.000000e+00, %2452
  %gen579 = fadd double %_578, %2455
  %_580 = fsub double -0.000000e+00, %2452
  %gen581 = fadd double %_580, %2455
  %_582 = fsub double -0.000000e+00, %2452
  %gen583 = fadd double %_582, %2455
  %_584 = fsub double -0.000000e+00, %2452
  %gen585 = fadd double %_584, %2455
  %2456 = fmul double %2452, %2455
  %2457 = load double, double* %25, align 8
  %_586 = fsub double %2456, %2457
  %gen587 = fmul double %_586, %2457
  %_588 = fsub double -0.000000e+00, %2456
  %gen589 = fadd double %_588, %2457
  %_590 = fsub double %2456, %2457
  %gen591 = fmul double %_590, %2457
  %_592 = fsub double -0.000000e+00, %2456
  %gen593 = fadd double %_592, %2457
  %_594 = fsub double -0.000000e+00, %2456
  %gen595 = fadd double %_594, %2457
  %_596 = fsub double -0.000000e+00, %2456
  %gen597 = fadd double %_596, %2457
  %_598 = fsub double -0.000000e+00, %2456
  %gen599 = fadd double %_598, %2457
  %2458 = fmul double %2456, %2457
  %2459 = fptrunc double %2458 to float
  %2460 = load float*, float** %8, align 8
  %2461 = getelementptr inbounds float, float* %2460, i64 4
  store float %2459, float* %2461, align 4
  br label %originalBB425

originalBB603alteredBB:                           ; preds = %originalBB603, %1587
  %2462 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %2463 = zext i32 %2462 to i64
  %_604 = shl i64 %2463, 32
  %2464 = and i64 %2463, 32
  %2465 = icmp ne i64 %2464, 0
  br label %originalBB603

originalBB608alteredBB:                           ; preds = %originalBB608, %1608
  store i32 0, i32* %15, align 4
  br label %originalBB608

originalBB612alteredBB:                           ; preds = %originalBB612, %1668
  %2466 = load [5 x float]*, [5 x float]** %46, align 8
  %2467 = load i32, i32* %15, align 4
  %2468 = sext i32 %2467 to i64
  %2469 = getelementptr inbounds [5 x float], [5 x float]* %2466, i64 %2468
  %2470 = getelementptr inbounds [5 x float], [5 x float]* %2469, i64 0, i64 0
  %2471 = load float, float* %2470, align 4
  %2472 = fpext float %2471 to double
  %2473 = fcmp une double %2472, 0.000000e+00
  br label %originalBB612

originalBB616alteredBB:                           ; preds = %originalBB616, %1693
  %2474 = load [5 x float]*, [5 x float]** %46, align 8
  %2475 = load i32, i32* %15, align 4
  %2476 = sext i32 %2475 to i64
  %2477 = getelementptr inbounds [5 x float], [5 x float]* %2474, i64 %2476
  %2478 = getelementptr inbounds [5 x float], [5 x float]* %2477, i64 0, i64 1
  %2479 = load float, float* %2478, align 4
  %2480 = fpext float %2479 to double
  %2481 = fcmp une double %2480, 0.000000e+00
  br label %originalBB616

originalBB620alteredBB:                           ; preds = %originalBB620, %1850
  br label %originalBB620

originalBB624alteredBB:                           ; preds = %originalBB624, %1883
  %2482 = load i32, i32* %15, align 4
  %2483 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2484 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2483, i32 0, i32 2
  %2485 = load i32, i32* %2484, align 8
  %2486 = icmp sle i32 %2482, %2485
  br label %originalBB624

originalBB628alteredBB:                           ; preds = %originalBB628, %1915
  store i32 0, i32* %19, align 4
  br label %originalBB628

originalBB632alteredBB:                           ; preds = %originalBB632, %1932
  br label %originalBB632

originalBB636alteredBB:                           ; preds = %originalBB636, %1975
  %2487 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %2488 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2489 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2487, i64 %2488
  %2490 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2489, align 8
  %2491 = bitcast %"struct.pov::Media_Struct"** %2490 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %2491, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4190)
  %2492 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %2493 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2494 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2492, i64 %2493
  store %"struct.pov::Media_Struct"** null, %"struct.pov::Media_Struct"*** %2494, align 8
  %2495 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2496 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2495, i32 0, i32 2
  %2497 = load i32, i32* %2496, align 8
  %_637 = shl i32 %2497, 2
  %_638 = sub i32 %2497, 2
  %gen639 = mul i32 %_638, 2
  %2498 = add nsw i32 %2497, 2
  %2499 = sext i32 %2498 to i64
  %_640 = sub i64 %2499, 8
  %gen641 = mul i64 %_640, 8
  %_642 = shl i64 %2499, 8
  %_643 = shl i64 %2499, 8
  %_644 = sub i64 0, %2499
  %gen645 = add i64 %_644, 8
  %_646 = sub i64 %2499, 8
  %gen647 = mul i64 %_646, 8
  %2500 = mul i64 %2499, 8
  %2501 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %2500, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 4191, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0))
  %2502 = bitcast i8* %2501 to %"struct.pov::Media_Struct"**
  %2503 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %2504 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2505 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2503, i64 %2504
  store %"struct.pov::Media_Struct"** %2502, %"struct.pov::Media_Struct"*** %2505, align 8
  %2506 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2507 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2506, i32 0, i32 2
  %2508 = load i32, i32* %2507, align 8
  %_648 = shl i32 %2508, 2
  %2509 = add nsw i32 %2508, 2
  %2510 = sext i32 %2509 to i64
  %2511 = load i64*, i64** @_ZN3pov25LightingMediaListPoolSizeE, align 8
  %2512 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2513 = getelementptr inbounds i64, i64* %2511, i64 %2512
  store i64 %2510, i64* %2513, align 8
  br label %originalBB636

originalBB652alteredBB:                           ; preds = %originalBB652, %2019
  %2514 = load %"struct.pov::Media_Struct"***, %"struct.pov::Media_Struct"**** @_ZN3pov21LightingMediaListPoolE, align 8
  %2515 = load i64, i64* @_ZN3pov22LightingMediaListIndexE, align 8
  %2516 = getelementptr inbounds %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2514, i64 %2515
  %2517 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %2516, align 8
  store %"struct.pov::Media_Struct"** %2517, %"struct.pov::Media_Struct"*** %39, align 8
  %2518 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %39, align 8
  store %"struct.pov::Media_Struct"** %2518, %"struct.pov::Media_Struct"*** %38, align 8
  store i32 0, i32* %15, align 4
  br label %originalBB652

originalBB656alteredBB:                           ; preds = %originalBB656, %2067
  %2519 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %12, align 8
  %2520 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %2519, i32 0, i32 4
  %2521 = load i32, i32* %15, align 4
  %2522 = sext i32 %2521 to i64
  %2523 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %2520, i64 0, i64 %2522
  %2524 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %2523, align 8
  %2525 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %2524, i32 0, i32 10
  %2526 = load %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %2525, align 8
  %2527 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %38, align 8
  store %"struct.pov::Media_Struct"* %2526, %"struct.pov::Media_Struct"** %2527, align 8
  %2528 = load %"struct.pov::Media_Struct"**, %"struct.pov::Media_Struct"*** %38, align 8
  %2529 = getelementptr inbounds %"struct.pov::Media_Struct"*, %"struct.pov::Media_Struct"** %2528, i32 1
  store %"struct.pov::Media_Struct"** %2529, %"struct.pov::Media_Struct"*** %38, align 8
  br label %originalBB656

originalBB660alteredBB:                           ; preds = %originalBB660, %2096
  br label %originalBB660
}

declare double @_ZN3pov13Evaluate_TPatEPNS_14Pattern_StructEPdPNS_10istk_entryE(%"struct.pov::Pattern_Struct"*, double*, %"struct.pov::istk_entry"*) #2

declare void @_ZN3pov16Search_Blend_MapEdPNS_16Blend_Map_StructEPPNS_15Blend_Map_EntryES4_(double, %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Entry"**, %"struct.pov::Blend_Map_Entry"**) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov6VScaleEPfPKff(float*, float*, float) #1 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float, align 4
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float %2, float* %6, align 4
  %7 = load float*, float** %5, align 8
  %8 = getelementptr inbounds float, float* %7, i64 0
  %9 = load float, float* %8, align 4
  %10 = load float, float* %6, align 4
  %11 = fmul float %9, %10
  %12 = load float*, float** %4, align 8
  %13 = getelementptr inbounds float, float* %12, i64 0
  store float %11, float* %13, align 4
  %14 = load float*, float** %5, align 8
  %15 = getelementptr inbounds float, float* %14, i64 1
  %16 = load float, float* %15, align 4
  %17 = load float, float* %6, align 4
  %18 = fmul float %16, %17
  %19 = load float*, float** %4, align 8
  %20 = getelementptr inbounds float, float* %19, i64 1
  store float %18, float* %20, align 4
  %21 = load float*, float** %5, align 8
  %22 = getelementptr inbounds float, float* %21, i64 2
  %23 = load float, float* %22, align 4
  %24 = load float, float* %6, align 4
  %25 = fmul float %23, %24
  %26 = load float*, float** %4, align 8
  %27 = getelementptr inbounds float, float* %26, i64 2
  store float %25, float* %27, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov9CLinComb2EPffPKffS2_(float*, float, float*, float, float*) #1 comdat {
  %6 = alloca float*, align 8
  %7 = alloca float, align 4
  %8 = alloca float*, align 8
  %9 = alloca float, align 4
  %10 = alloca float*, align 8
  store float* %0, float** %6, align 8
  store float %1, float* %7, align 4
  store float* %2, float** %8, align 8
  store float %3, float* %9, align 4
  store float* %4, float** %10, align 8
  %11 = load float, float* %7, align 4
  %12 = load float*, float** %8, align 8
  %13 = getelementptr inbounds float, float* %12, i64 0
  %14 = load float, float* %13, align 4
  %15 = fmul float %11, %14
  %16 = load float, float* %9, align 4
  %17 = load float*, float** %10, align 8
  %18 = getelementptr inbounds float, float* %17, i64 0
  %19 = load float, float* %18, align 4
  %20 = fmul float %16, %19
  %21 = fadd float %15, %20
  %22 = load float*, float** %6, align 8
  %23 = getelementptr inbounds float, float* %22, i64 0
  store float %21, float* %23, align 4
  %24 = load float, float* %7, align 4
  %25 = load float*, float** %8, align 8
  %26 = getelementptr inbounds float, float* %25, i64 1
  %27 = load float, float* %26, align 4
  %28 = fmul float %24, %27
  %29 = load float, float* %9, align 4
  %30 = load float*, float** %10, align 8
  %31 = getelementptr inbounds float, float* %30, i64 1
  %32 = load float, float* %31, align 4
  %33 = fmul float %29, %32
  %34 = fadd float %28, %33
  %35 = load float*, float** %6, align 8
  %36 = getelementptr inbounds float, float* %35, i64 1
  store float %34, float* %36, align 4
  %37 = load float, float* %7, align 4
  %38 = load float*, float** %8, align 8
  %39 = getelementptr inbounds float, float* %38, i64 2
  %40 = load float, float* %39, align 4
  %41 = fmul float %37, %40
  %42 = load float, float* %9, align 4
  %43 = load float*, float** %10, align 8
  %44 = getelementptr inbounds float, float* %43, i64 2
  %45 = load float, float* %44, align 4
  %46 = fmul float %42, %45
  %47 = fadd float %41, %46
  %48 = load float*, float** %6, align 8
  %49 = getelementptr inbounds float, float* %48, i64 2
  store float %47, float* %49, align 4
  %50 = load float, float* %7, align 4
  %51 = load float*, float** %8, align 8
  %52 = getelementptr inbounds float, float* %51, i64 3
  %53 = load float, float* %52, align 4
  %54 = fmul float %50, %53
  %55 = load float, float* %9, align 4
  %56 = load float*, float** %10, align 8
  %57 = getelementptr inbounds float, float* %56, i64 3
  %58 = load float, float* %57, align 4
  %59 = fmul float %55, %58
  %60 = fadd float %54, %59
  %61 = load float*, float** %6, align 8
  %62 = getelementptr inbounds float, float* %61, i64 3
  store float %60, float* %62, align 4
  %63 = load float, float* %7, align 4
  %64 = load float*, float** %8, align 8
  %65 = getelementptr inbounds float, float* %64, i64 4
  %66 = load float, float* %65, align 4
  %67 = fmul float %63, %66
  %68 = load float, float* %9, align 4
  %69 = load float*, float** %10, align 8
  %70 = getelementptr inbounds float, float* %69, i64 4
  %71 = load float, float* %70, align 4
  %72 = fmul float %68, %71
  %73 = fadd float %67, %72
  %74 = load float*, float** %6, align 8
  %75 = getelementptr inbounds float, float* %74, i64 4
  store float %73, float* %75, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov11Make_ColourEPffff(float*, float, float, float) #1 comdat {
  %5 = alloca float*, align 8
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  store float* %0, float** %5, align 8
  store float %1, float* %6, align 4
  store float %2, float* %7, align 4
  store float %3, float* %8, align 4
  %9 = load float, float* %6, align 4
  %10 = load float*, float** %5, align 8
  %11 = getelementptr inbounds float, float* %10, i64 0
  store float %9, float* %11, align 4
  %12 = load float, float* %7, align 4
  %13 = load float*, float** %5, align 8
  %14 = getelementptr inbounds float, float* %13, i64 1
  store float %12, float* %14, align 4
  %15 = load float, float* %8, align 4
  %16 = load float*, float** %5, align 8
  %17 = getelementptr inbounds float, float* %16, i64 2
  store float %15, float* %17, align 4
  %18 = load float*, float** %5, align 8
  %19 = getelementptr inbounds float, float* %18, i64 3
  store float 0.000000e+00, float* %19, align 4
  %20 = load float*, float** %5, align 8
  %21 = getelementptr inbounds float, float* %20, i64 4
  store float 0.000000e+00, float* %21, align 4
  ret void
}

declare void @_ZN3pov24Backtrace_Simulate_MediaEPPNS_12Media_StructEPNS_10Ray_StructEPNS_10istk_entryEPf(%"struct.pov::Media_Struct"**, %"struct.pov::Ray_Struct"*, %"struct.pov::istk_entry"*, float*) #2

declare void @_ZN3pov14Simulate_MediaEPPNS_12Media_StructEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Media_Struct"**, %"struct.pov::Ray_Struct"*, %"struct.pov::istk_entry"*, float*, i32) #2

declare i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"*, %"struct.pov::Interior_Struct"*) #2

; Function Attrs: nounwind
declare double @exp(double) #3

declare zeroext i1 @_ZN3pov24Check_Photon_Light_GroupEPNS_13Object_StructE(%"struct.pov::Object_Struct"*) #2

declare void @_ZN3pov16addSurfacePhotonEPdS0_PfS0_(double*, double*, float*, double*) #2

declare double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"*, float*, double) #2

declare void @_ZN3pov11Warp_NormalEPdS0_PNS_14Pattern_StructEi(double*, double*, %"struct.pov::Pattern_Struct"*, i32) #2

declare void @_ZN3pov14Perturb_NormalEPdPNS_14Tnormal_StructES0_PNS_10istk_entryE(double*, %"struct.pov::Tnormal_Struct"*, double*, %"struct.pov::istk_entry"*) #2

declare void @_ZN3pov13UnWarp_NormalEPdS0_PNS_14Pattern_StructEi(double*, double*, %"struct.pov::Pattern_Struct"*, i32) #2

declare i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float*, %"struct.pov::Pigment_Struct"*, double*, %"struct.pov::istk_entry"*) #2

; Function Attrs: noinline uwtable
define internal void @_ZN3povL22determine_reflectivityEPdPfS1_S1_iddPNS_10Ray_StructEPNS_15Interior_StructE(double*, float*, float*, float*, i32, double, double, %"struct.pov::Ray_Struct"*, %"struct.pov::Interior_Struct"*) #0 {
  %10 = load i32, i32* @x.95
  %11 = load i32, i32* @y.96
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %9
  %18 = alloca double*, align 8
  %19 = alloca float*, align 8
  %20 = alloca float*, align 8
  %21 = alloca float*, align 8
  %22 = alloca i32, align 4
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca %"struct.pov::Ray_Struct"*, align 8
  %26 = alloca %"struct.pov::Interior_Struct"*, align 8
  %27 = alloca double, align 8
  %28 = alloca double, align 8
  %29 = alloca double, align 8
  %30 = alloca double, align 8
  %31 = alloca double, align 8
  %32 = alloca double, align 8
  %33 = alloca double, align 8
  %34 = alloca double, align 8
  %35 = alloca double, align 8
  %36 = alloca double, align 8
  store double* %0, double** %18, align 8
  store float* %1, float** %19, align 8
  store float* %2, float** %20, align 8
  store float* %3, float** %21, align 8
  store i32 %4, i32* %22, align 4
  store double %5, double* %23, align 8
  store double %6, double* %24, align 8
  store %"struct.pov::Ray_Struct"* %7, %"struct.pov::Ray_Struct"** %25, align 8
  store %"struct.pov::Interior_Struct"* %8, %"struct.pov::Interior_Struct"** %26, align 8
  %37 = load i32, i32* %22, align 4
  %38 = icmp eq i32 %37, 1
  %39 = load i32, i32* @x.95
  %40 = load i32, i32* @y.96
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %47, label %237

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %49 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %81

; <label>:52:                                     ; preds = %47
  %53 = load i32, i32* @x.95
  %54 = load i32, i32* @y.96
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %52
  %61 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %62 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %63 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %62, i32 0, i32 3
  %64 = load float, float* %63, align 4
  %65 = fpext float %64 to double
  %66 = fdiv double %61, %65
  store double %66, double* %32, align 8
  %67 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %68 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %69 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %68, i32 0, i32 4
  %70 = load float, float* %69, align 8
  %71 = fpext float %70 to double
  %72 = fdiv double %67, %71
  store double %72, double* %33, align 8
  %73 = load i32, i32* @x.95
  %74 = load i32, i32* @y.96
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart219, label %originalBB1alteredBB

originalBBpart219:                                ; preds = %originalBB1
  br label %232

; <label>:81:                                     ; preds = %47
  %82 = load i32, i32* @x.95
  %83 = load i32, i32* @y.96
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %81
  %90 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %91 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %92 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %90, %"struct.pov::Interior_Struct"* %91)
  %93 = icmp sge i32 %92, 0
  %94 = load i32, i32* @x.95
  %95 = load i32, i32* @y.96
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %93, label %102, label %184

; <label>:102:                                    ; preds = %originalBBpart223
  %103 = load i32, i32* @x.95
  %104 = load i32, i32* @y.96
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %102
  %111 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %112 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %111, i32 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 0
  %115 = load i32, i32* @x.95
  %116 = load i32, i32* @y.96
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %114, label %123, label %152

; <label>:123:                                    ; preds = %originalBBpart227
  %124 = load i32, i32* @x.95
  %125 = load i32, i32* @y.96
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %123
  %132 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %133 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %132, i32 0, i32 3
  %134 = load float, float* %133, align 4
  %135 = fpext float %134 to double
  %136 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %137 = fdiv double %135, %136
  store double %137, double* %32, align 8
  %138 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %139 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %138, i32 0, i32 4
  %140 = load float, float* %139, align 8
  %141 = fpext float %140 to double
  %142 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %143 = fdiv double %141, %142
  store double %143, double* %33, align 8
  %144 = load i32, i32* @x.95
  %145 = load i32, i32* @y.96
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart249, label %originalBB29alteredBB

originalBBpart249:                                ; preds = %originalBB29
  br label %183

; <label>:152:                                    ; preds = %originalBBpart227
  %153 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %154 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %153, i32 0, i32 3
  %155 = load float, float* %154, align 4
  %156 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %157 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %156, i32 0, i32 4
  %158 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %159 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %158, i32 0, i32 2
  %160 = load i32, i32* %159, align 8
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %157, i64 0, i64 %161
  %163 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %162, align 8
  %164 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %163, i32 0, i32 3
  %165 = load float, float* %164, align 4
  %166 = fdiv float %155, %165
  %167 = fpext float %166 to double
  store double %167, double* %32, align 8
  %168 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %169 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %168, i32 0, i32 4
  %170 = load float, float* %169, align 8
  %171 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %172 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %171, i32 0, i32 4
  %173 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %174 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %173, i32 0, i32 2
  %175 = load i32, i32* %174, align 8
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %172, i64 0, i64 %176
  %178 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %177, align 8
  %179 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %178, i32 0, i32 4
  %180 = load float, float* %179, align 8
  %181 = fdiv float %170, %180
  %182 = fpext float %181 to double
  store double %182, double* %33, align 8
  br label %183

; <label>:183:                                    ; preds = %152, %originalBBpart249
  br label %231

; <label>:184:                                    ; preds = %originalBBpart223
  %185 = load i32, i32* @x.95
  %186 = load i32, i32* @y.96
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %184
  %193 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %194 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %193, i32 0, i32 4
  %195 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %196 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %195, i32 0, i32 2
  %197 = load i32, i32* %196, align 8
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %194, i64 0, i64 %198
  %200 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %199, align 8
  %201 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %200, i32 0, i32 3
  %202 = load float, float* %201, align 4
  %203 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %204 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %203, i32 0, i32 3
  %205 = load float, float* %204, align 4
  %206 = fdiv float %202, %205
  %207 = fpext float %206 to double
  store double %207, double* %32, align 8
  %208 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %209 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %208, i32 0, i32 4
  %210 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %211 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %210, i32 0, i32 2
  %212 = load i32, i32* %211, align 8
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %209, i64 0, i64 %213
  %215 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %214, align 8
  %216 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %215, i32 0, i32 4
  %217 = load float, float* %216, align 8
  %218 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %219 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %218, i32 0, i32 4
  %220 = load float, float* %219, align 8
  %221 = fdiv float %217, %220
  %222 = fpext float %221 to double
  store double %222, double* %33, align 8
  %223 = load i32, i32* @x.95
  %224 = load i32, i32* @y.96
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart263, label %originalBB51alteredBB

originalBBpart263:                                ; preds = %originalBB51
  br label %231

; <label>:231:                                    ; preds = %originalBBpart263, %183
  br label %232

; <label>:232:                                    ; preds = %231, %originalBBpart219
  %233 = load double, double* %32, align 8
  %234 = fdiv double 1.000000e+00, %233
  store double %234, double* %32, align 8
  %235 = load double, double* %33, align 8
  %236 = fdiv double 1.000000e+00, %235
  store double %236, double* %33, align 8
  br label %237

; <label>:237:                                    ; preds = %232, %originalBBpart2
  %238 = load i32, i32* %22, align 4
  switch i32 %238, label %469 [
    i32 0, label %239
    i32 1, label %368
  ]

; <label>:239:                                    ; preds = %237
  %240 = load float*, float** %20, align 8
  %241 = getelementptr inbounds float, float* %240, i64 0
  %242 = load float*, float** %20, align 8
  %243 = getelementptr inbounds float, float* %242, i64 1
  %244 = load float*, float** %20, align 8
  %245 = getelementptr inbounds float, float* %244, i64 2
  %246 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %243, float* dereferenceable(4) %245)
  %247 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %241, float* dereferenceable(4) %246)
  %248 = load float, float* %247, align 4
  %249 = fpext float %248 to double
  store double %249, double* %28, align 8
  %250 = load float*, float** %21, align 8
  %251 = getelementptr inbounds float, float* %250, i64 0
  %252 = load float*, float** %21, align 8
  %253 = getelementptr inbounds float, float* %252, i64 1
  %254 = load float*, float** %21, align 8
  %255 = getelementptr inbounds float, float* %254, i64 2
  %256 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %253, float* dereferenceable(4) %255)
  %257 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %251, float* dereferenceable(4) %256)
  %258 = load float, float* %257, align 4
  %259 = fpext float %258 to double
  store double %259, double* %27, align 8
  %260 = load double*, double** %18, align 8
  %261 = load double, double* %260, align 8
  %262 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %28, double* dereferenceable(8) %27)
  %263 = load double, double* %262, align 8
  %264 = fmul double %261, %263
  %265 = load double*, double** %18, align 8
  store double %264, double* %265, align 8
  %266 = load double, double* %23, align 8
  %267 = fsub double %266, 1.000000e+00
  %268 = call double @fabs(double %267) #5
  %269 = fcmp ogt double %268, 1.000000e-07
  br i1 %269, label %270, label %275

; <label>:270:                                    ; preds = %239
  %271 = load double, double* %24, align 8
  %272 = fsub double 1.000000e+00, %271
  %273 = load double, double* %23, align 8
  %274 = call double @pow(double %272, double %273) #7
  store double %274, double* %29, align 8
  br label %278

; <label>:275:                                    ; preds = %239
  %276 = load double, double* %24, align 8
  %277 = fsub double 1.000000e+00, %276
  store double %277, double* %29, align 8
  br label %278

; <label>:278:                                    ; preds = %275, %270
  %279 = load i32, i32* @x.95
  %280 = load i32, i32* @y.96
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %278
  %287 = load double, double* %29, align 8
  %288 = call double @fabs(double %287) #5
  %289 = fcmp olt double %288, 1.000000e-07
  %290 = load i32, i32* @x.95
  %291 = load i32, i32* @y.96
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br i1 %289, label %298, label %301

; <label>:298:                                    ; preds = %originalBBpart267
  %299 = load float*, float** %19, align 8
  %300 = load float*, float** %21, align 8
  call void @_ZN3pov10Assign_RGBEPfS0_(float* %299, float* %300)
  br label %367

; <label>:301:                                    ; preds = %originalBBpart267
  %302 = load double, double* %29, align 8
  %303 = fsub double %302, 1.000000e+00
  %304 = call double @fabs(double %303) #5
  %305 = fcmp olt double %304, 1.000000e-07
  br i1 %305, label %306, label %325

; <label>:306:                                    ; preds = %301
  %307 = load i32, i32* @x.95
  %308 = load i32, i32* @y.96
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %306
  %315 = load float*, float** %19, align 8
  %316 = load float*, float** %20, align 8
  call void @_ZN3pov10Assign_RGBEPfS0_(float* %315, float* %316)
  %317 = load i32, i32* @x.95
  %318 = load i32, i32* @y.96
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %350

; <label>:325:                                    ; preds = %301
  %326 = load i32, i32* @x.95
  %327 = load i32, i32* @y.96
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %originalBB73alteredBB, %325
  %334 = load float*, float** %19, align 8
  %335 = load double, double* %29, align 8
  %336 = fptrunc double %335 to float
  %337 = load float*, float** %20, align 8
  %338 = load double, double* %29, align 8
  %339 = fsub double 1.000000e+00, %338
  %340 = fptrunc double %339 to float
  %341 = load float*, float** %21, align 8
  call void @_ZN3pov12CRGBLinComb2EPffPKffS2_(float* %334, float %336, float* %337, float %340, float* %341)
  %342 = load i32, i32* @x.95
  %343 = load i32, i32* @y.96
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart285, label %originalBB73alteredBB

originalBBpart285:                                ; preds = %originalBB73
  br label %350

; <label>:350:                                    ; preds = %originalBBpart285, %originalBBpart271
  %351 = load i32, i32* @x.95
  %352 = load i32, i32* @y.96
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %350
  %359 = load i32, i32* @x.95
  %360 = load i32, i32* @y.96
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %367

; <label>:367:                                    ; preds = %originalBBpart289, %298
  br label %471

; <label>:368:                                    ; preds = %237
  %369 = load i32, i32* @x.95
  %370 = load i32, i32* @y.96
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %368
  %377 = load double, double* %32, align 8
  %378 = call double @_ZN3pov3SqrEd(double %377)
  %379 = load double, double* %24, align 8
  %380 = call double @_ZN3pov3SqrEd(double %379)
  %381 = fadd double %378, %380
  %382 = fsub double %381, 1.000000e+00
  store double %382, double* %34, align 8
  %383 = load double, double* %34, align 8
  %384 = fcmp ogt double %383, 0.000000e+00
  %385 = load i32, i32* @x.95
  %386 = load i32, i32* @y.96
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBBpart2103, label %originalBB91alteredBB

originalBBpart2103:                               ; preds = %originalBB91
  br i1 %384, label %393, label %451

; <label>:393:                                    ; preds = %originalBBpart2103
  %394 = load i32, i32* @x.95
  %395 = load i32, i32* @y.96
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %393
  %402 = load double, double* %34, align 8
  %403 = call double @sqrt(double %402) #7
  store double %403, double* %30, align 8
  %404 = load double, double* %30, align 8
  %405 = load double, double* %24, align 8
  %406 = fsub double %404, %405
  %407 = call double @_ZN3pov3SqrEd(double %406)
  %408 = load double, double* %30, align 8
  %409 = load double, double* %24, align 8
  %410 = fadd double %408, %409
  %411 = call double @_ZN3pov3SqrEd(double %410)
  %412 = fdiv double %407, %411
  %413 = fmul double 5.000000e-01, %412
  store double %413, double* %31, align 8
  %414 = load double, double* %31, align 8
  %415 = load double, double* %24, align 8
  %416 = load double, double* %30, align 8
  %417 = load double, double* %24, align 8
  %418 = fadd double %416, %417
  %419 = fmul double %415, %418
  %420 = fsub double %419, 1.000000e+00
  %421 = call double @_ZN3pov3SqrEd(double %420)
  %422 = load double, double* %24, align 8
  %423 = load double, double* %30, align 8
  %424 = load double, double* %24, align 8
  %425 = fsub double %423, %424
  %426 = fmul double %422, %425
  %427 = fadd double %426, 1.000000e+00
  %428 = call double @_ZN3pov3SqrEd(double %427)
  %429 = fdiv double %421, %428
  %430 = fadd double 1.000000e+00, %429
  %431 = fmul double %414, %430
  store double %431, double* %31, align 8
  store double 1.000000e+00, double* %35, align 8
  store double 0.000000e+00, double* %36, align 8
  %432 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %36, double* dereferenceable(8) %31)
  %433 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %35, double* dereferenceable(8) %432)
  %434 = load double, double* %433, align 8
  store double %434, double* %31, align 8
  %435 = load float*, float** %19, align 8
  %436 = load double, double* %31, align 8
  %437 = fptrunc double %436 to float
  %438 = load float*, float** %20, align 8
  %439 = load double, double* %31, align 8
  %440 = fsub double 1.000000e+00, %439
  %441 = fptrunc double %440 to float
  %442 = load float*, float** %21, align 8
  call void @_ZN3pov12CRGBLinComb2EPffPKffS2_(float* %435, float %437, float* %438, float %441, float* %442)
  %443 = load i32, i32* @x.95
  %444 = load i32, i32* @y.96
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart2223, label %originalBB105alteredBB

originalBBpart2223:                               ; preds = %originalBB105
  br label %454

; <label>:451:                                    ; preds = %originalBBpart2103
  %452 = load float*, float** %19, align 8
  %453 = load float*, float** %20, align 8
  call void @_ZN3pov10Assign_RGBEPfS0_(float* %452, float* %453)
  br label %454

; <label>:454:                                    ; preds = %451, %originalBBpart2223
  %455 = load double*, double** %18, align 8
  %456 = load double, double* %455, align 8
  %457 = load float*, float** %19, align 8
  %458 = getelementptr inbounds float, float* %457, i64 0
  %459 = load float*, float** %19, align 8
  %460 = getelementptr inbounds float, float* %459, i64 1
  %461 = load float*, float** %19, align 8
  %462 = getelementptr inbounds float, float* %461, i64 2
  %463 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %460, float* dereferenceable(4) %462)
  %464 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %458, float* dereferenceable(4) %463)
  %465 = load float, float* %464, align 4
  %466 = fpext float %465 to double
  %467 = fmul double %456, %466
  %468 = load double*, double** %18, align 8
  store double %467, double* %468, align 8
  br label %471

; <label>:469:                                    ; preds = %237
  %470 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i32 0, i32 0))
  br label %471

; <label>:471:                                    ; preds = %469, %454, %367
  %472 = load i32, i32* @x.95
  %473 = load i32, i32* @y.96
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %originalBB225alteredBB, %471
  %480 = load i32, i32* @x.95
  %481 = load i32, i32* @y.96
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %9
  %488 = alloca double*, align 8
  %489 = alloca float*, align 8
  %490 = alloca float*, align 8
  %491 = alloca float*, align 8
  %492 = alloca i32, align 4
  %493 = alloca double, align 8
  %494 = alloca double, align 8
  %495 = alloca %"struct.pov::Ray_Struct"*, align 8
  %496 = alloca %"struct.pov::Interior_Struct"*, align 8
  %497 = alloca double, align 8
  %498 = alloca double, align 8
  %499 = alloca double, align 8
  %500 = alloca double, align 8
  %501 = alloca double, align 8
  %502 = alloca double, align 8
  %503 = alloca double, align 8
  %504 = alloca double, align 8
  %505 = alloca double, align 8
  %506 = alloca double, align 8
  store double* %0, double** %488, align 8
  store float* %1, float** %489, align 8
  store float* %2, float** %490, align 8
  store float* %3, float** %491, align 8
  store i32 %4, i32* %492, align 4
  store double %5, double* %493, align 8
  store double %6, double* %494, align 8
  store %"struct.pov::Ray_Struct"* %7, %"struct.pov::Ray_Struct"** %495, align 8
  store %"struct.pov::Interior_Struct"* %8, %"struct.pov::Interior_Struct"** %496, align 8
  %507 = load i32, i32* %492, align 4
  %508 = icmp eq i32 %507, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  %509 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %510 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %511 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %510, i32 0, i32 3
  %512 = load float, float* %511, align 4
  %513 = fpext float %512 to double
  %_ = fsub double %509, %513
  %gen = fmul double %_, %513
  %_2 = fsub double %509, %513
  %gen3 = fmul double %_2, %513
  %_4 = fsub double -0.000000e+00, %509
  %gen5 = fadd double %_4, %513
  %_6 = fsub double %509, %513
  %gen7 = fmul double %_6, %513
  %_8 = fsub double %509, %513
  %gen9 = fmul double %_8, %513
  %_10 = fsub double -0.000000e+00, %509
  %gen11 = fadd double %_10, %513
  %_12 = fsub double %509, %513
  %gen13 = fmul double %_12, %513
  %_14 = fsub double -0.000000e+00, %509
  %gen15 = fadd double %_14, %513
  %514 = fdiv double %509, %513
  store double %514, double* %32, align 8
  %515 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %516 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %517 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %516, i32 0, i32 4
  %518 = load float, float* %517, align 8
  %519 = fpext float %518 to double
  %_16 = fsub double %515, %519
  %gen17 = fmul double %_16, %519
  %520 = fdiv double %515, %519
  store double %520, double* %33, align 8
  br label %originalBB1

originalBB21alteredBB:                            ; preds = %originalBB21, %81
  %521 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %522 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %523 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %521, %"struct.pov::Interior_Struct"* %522)
  %524 = icmp sge i32 %523, 0
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %102
  %525 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %526 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %525, i32 0, i32 2
  %527 = load i32, i32* %526, align 8
  %528 = icmp eq i32 %527, 0
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %123
  %529 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %530 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %529, i32 0, i32 3
  %531 = load float, float* %530, align 4
  %532 = fpext float %531 to double
  %533 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %_30 = fsub double -0.000000e+00, %532
  %gen31 = fadd double %_30, %533
  %_32 = fsub double -0.000000e+00, %532
  %gen33 = fadd double %_32, %533
  %_34 = fsub double %532, %533
  %gen35 = fmul double %_34, %533
  %_36 = fsub double -0.000000e+00, %532
  %gen37 = fadd double %_36, %533
  %534 = fdiv double %532, %533
  store double %534, double* %32, align 8
  %535 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %536 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %535, i32 0, i32 4
  %537 = load float, float* %536, align 8
  %538 = fpext float %537 to double
  %539 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %_38 = fsub double -0.000000e+00, %538
  %gen39 = fadd double %_38, %539
  %_40 = fsub double -0.000000e+00, %538
  %gen41 = fadd double %_40, %539
  %_42 = fsub double -0.000000e+00, %538
  %gen43 = fadd double %_42, %539
  %_44 = fsub double %538, %539
  %gen45 = fmul double %_44, %539
  %_46 = fsub double %538, %539
  %gen47 = fmul double %_46, %539
  %540 = fdiv double %538, %539
  store double %540, double* %33, align 8
  br label %originalBB29

originalBB51alteredBB:                            ; preds = %originalBB51, %184
  %541 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %542 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %541, i32 0, i32 4
  %543 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %544 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %543, i32 0, i32 2
  %545 = load i32, i32* %544, align 8
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %542, i64 0, i64 %546
  %548 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %547, align 8
  %549 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %548, i32 0, i32 3
  %550 = load float, float* %549, align 4
  %551 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %552 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %551, i32 0, i32 3
  %553 = load float, float* %552, align 4
  %_52 = fsub float -0.000000e+00, %550
  %gen53 = fadd float %_52, %553
  %_54 = fsub float %550, %553
  %gen55 = fmul float %_54, %553
  %554 = fdiv float %550, %553
  %555 = fpext float %554 to double
  store double %555, double* %32, align 8
  %556 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %557 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %556, i32 0, i32 4
  %558 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %25, align 8
  %559 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %558, i32 0, i32 2
  %560 = load i32, i32* %559, align 8
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %557, i64 0, i64 %561
  %563 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %562, align 8
  %564 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %563, i32 0, i32 4
  %565 = load float, float* %564, align 8
  %566 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %26, align 8
  %567 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %566, i32 0, i32 4
  %568 = load float, float* %567, align 8
  %_56 = fsub float -0.000000e+00, %565
  %gen57 = fadd float %_56, %568
  %_58 = fsub float %565, %568
  %gen59 = fmul float %_58, %568
  %_60 = fsub float -0.000000e+00, %565
  %gen61 = fadd float %_60, %568
  %569 = fdiv float %565, %568
  %570 = fpext float %569 to double
  store double %570, double* %33, align 8
  br label %originalBB51

originalBB65alteredBB:                            ; preds = %originalBB65, %278
  %571 = load double, double* %29, align 8
  %572 = call double @fabs(double %571) #5
  %573 = fcmp olt double %572, 1.000000e-07
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %306
  %574 = load float*, float** %19, align 8
  %575 = load float*, float** %20, align 8
  call void @_ZN3pov10Assign_RGBEPfS0_(float* %574, float* %575)
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %325
  %576 = load float*, float** %19, align 8
  %577 = load double, double* %29, align 8
  %578 = fptrunc double %577 to float
  %579 = load float*, float** %20, align 8
  %580 = load double, double* %29, align 8
  %_74 = fsub double 1.000000e+00, %580
  %gen75 = fmul double %_74, %580
  %_76 = fsub double -0.000000e+00, 1.000000e+00
  %gen77 = fadd double %_76, %580
  %_78 = fsub double -0.000000e+00, 1.000000e+00
  %gen79 = fadd double %_78, %580
  %_80 = fsub double 1.000000e+00, %580
  %gen81 = fmul double %_80, %580
  %_82 = fsub double 1.000000e+00, %580
  %gen83 = fmul double %_82, %580
  %581 = fsub double 1.000000e+00, %580
  %582 = fptrunc double %581 to float
  %583 = load float*, float** %21, align 8
  call void @_ZN3pov12CRGBLinComb2EPffPKffS2_(float* %576, float %578, float* %579, float %582, float* %583)
  br label %originalBB73

originalBB87alteredBB:                            ; preds = %originalBB87, %350
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %368
  %584 = load double, double* %32, align 8
  %585 = call double @_ZN3pov3SqrEd(double %584)
  %586 = load double, double* %24, align 8
  %587 = call double @_ZN3pov3SqrEd(double %586)
  %_92 = fsub double -0.000000e+00, %585
  %gen93 = fadd double %_92, %587
  %_94 = fsub double -0.000000e+00, %585
  %gen95 = fadd double %_94, %587
  %_96 = fsub double %585, %587
  %gen97 = fmul double %_96, %587
  %_98 = fsub double -0.000000e+00, %585
  %gen99 = fadd double %_98, %587
  %588 = fadd double %585, %587
  %_100 = fsub double -0.000000e+00, %588
  %gen101 = fadd double %_100, 1.000000e+00
  %589 = fsub double %588, 1.000000e+00
  store double %589, double* %34, align 8
  %590 = load double, double* %34, align 8
  %591 = fcmp ogt double %590, 0.000000e+00
  br label %originalBB91

originalBB105alteredBB:                           ; preds = %originalBB105, %393
  %592 = load double, double* %34, align 8
  %593 = call double @sqrt(double %592) #7
  store double %593, double* %30, align 8
  %594 = load double, double* %30, align 8
  %595 = load double, double* %24, align 8
  %_106 = fsub double %594, %595
  %gen107 = fmul double %_106, %595
  %_108 = fsub double -0.000000e+00, %594
  %gen109 = fadd double %_108, %595
  %_110 = fsub double -0.000000e+00, %594
  %gen111 = fadd double %_110, %595
  %_112 = fsub double -0.000000e+00, %594
  %gen113 = fadd double %_112, %595
  %_114 = fsub double %594, %595
  %gen115 = fmul double %_114, %595
  %_116 = fsub double -0.000000e+00, %594
  %gen117 = fadd double %_116, %595
  %_118 = fsub double -0.000000e+00, %594
  %gen119 = fadd double %_118, %595
  %596 = fsub double %594, %595
  %597 = call double @_ZN3pov3SqrEd(double %596)
  %598 = load double, double* %30, align 8
  %599 = load double, double* %24, align 8
  %_120 = fsub double %598, %599
  %gen121 = fmul double %_120, %599
  %_122 = fsub double %598, %599
  %gen123 = fmul double %_122, %599
  %_124 = fsub double -0.000000e+00, %598
  %gen125 = fadd double %_124, %599
  %600 = fadd double %598, %599
  %601 = call double @_ZN3pov3SqrEd(double %600)
  %_126 = fsub double %597, %601
  %gen127 = fmul double %_126, %601
  %_128 = fsub double -0.000000e+00, %597
  %gen129 = fadd double %_128, %601
  %602 = fdiv double %597, %601
  %_130 = fsub double -0.000000e+00, 5.000000e-01
  %gen131 = fadd double %_130, %602
  %_132 = fsub double -0.000000e+00, 5.000000e-01
  %gen133 = fadd double %_132, %602
  %603 = fmul double 5.000000e-01, %602
  store double %603, double* %31, align 8
  %604 = load double, double* %31, align 8
  %605 = load double, double* %24, align 8
  %606 = load double, double* %30, align 8
  %607 = load double, double* %24, align 8
  %_134 = fsub double -0.000000e+00, %606
  %gen135 = fadd double %_134, %607
  %_136 = fsub double %606, %607
  %gen137 = fmul double %_136, %607
  %_138 = fsub double -0.000000e+00, %606
  %gen139 = fadd double %_138, %607
  %_140 = fsub double -0.000000e+00, %606
  %gen141 = fadd double %_140, %607
  %608 = fadd double %606, %607
  %_142 = fsub double %605, %608
  %gen143 = fmul double %_142, %608
  %_144 = fsub double -0.000000e+00, %605
  %gen145 = fadd double %_144, %608
  %_146 = fsub double -0.000000e+00, %605
  %gen147 = fadd double %_146, %608
  %609 = fmul double %605, %608
  %_148 = fsub double %609, 1.000000e+00
  %gen149 = fmul double %_148, 1.000000e+00
  %_150 = fsub double -0.000000e+00, %609
  %gen151 = fadd double %_150, 1.000000e+00
  %_152 = fsub double -0.000000e+00, %609
  %gen153 = fadd double %_152, 1.000000e+00
  %_154 = fsub double %609, 1.000000e+00
  %gen155 = fmul double %_154, 1.000000e+00
  %_156 = fsub double %609, 1.000000e+00
  %gen157 = fmul double %_156, 1.000000e+00
  %610 = fsub double %609, 1.000000e+00
  %611 = call double @_ZN3pov3SqrEd(double %610)
  %612 = load double, double* %24, align 8
  %613 = load double, double* %30, align 8
  %614 = load double, double* %24, align 8
  %_158 = fsub double %613, %614
  %gen159 = fmul double %_158, %614
  %_160 = fsub double -0.000000e+00, %613
  %gen161 = fadd double %_160, %614
  %_162 = fsub double %613, %614
  %gen163 = fmul double %_162, %614
  %_164 = fsub double %613, %614
  %gen165 = fmul double %_164, %614
  %_166 = fsub double -0.000000e+00, %613
  %gen167 = fadd double %_166, %614
  %615 = fsub double %613, %614
  %_168 = fsub double %612, %615
  %gen169 = fmul double %_168, %615
  %_170 = fsub double -0.000000e+00, %612
  %gen171 = fadd double %_170, %615
  %_172 = fsub double %612, %615
  %gen173 = fmul double %_172, %615
  %616 = fmul double %612, %615
  %_174 = fsub double -0.000000e+00, %616
  %gen175 = fadd double %_174, 1.000000e+00
  %_176 = fsub double -0.000000e+00, %616
  %gen177 = fadd double %_176, 1.000000e+00
  %_178 = fsub double -0.000000e+00, %616
  %gen179 = fadd double %_178, 1.000000e+00
  %617 = fadd double %616, 1.000000e+00
  %618 = call double @_ZN3pov3SqrEd(double %617)
  %_180 = fsub double %611, %618
  %gen181 = fmul double %_180, %618
  %_182 = fsub double %611, %618
  %gen183 = fmul double %_182, %618
  %_184 = fsub double %611, %618
  %gen185 = fmul double %_184, %618
  %_186 = fsub double -0.000000e+00, %611
  %gen187 = fadd double %_186, %618
  %_188 = fsub double %611, %618
  %gen189 = fmul double %_188, %618
  %_190 = fsub double %611, %618
  %gen191 = fmul double %_190, %618
  %_192 = fsub double -0.000000e+00, %611
  %gen193 = fadd double %_192, %618
  %619 = fdiv double %611, %618
  %_194 = fsub double -0.000000e+00, 1.000000e+00
  %gen195 = fadd double %_194, %619
  %_196 = fsub double -0.000000e+00, 1.000000e+00
  %gen197 = fadd double %_196, %619
  %_198 = fsub double 1.000000e+00, %619
  %gen199 = fmul double %_198, %619
  %620 = fadd double 1.000000e+00, %619
  %_200 = fsub double %604, %620
  %gen201 = fmul double %_200, %620
  %_202 = fsub double %604, %620
  %gen203 = fmul double %_202, %620
  %_204 = fsub double %604, %620
  %gen205 = fmul double %_204, %620
  %_206 = fsub double %604, %620
  %gen207 = fmul double %_206, %620
  %_208 = fsub double %604, %620
  %gen209 = fmul double %_208, %620
  %_210 = fsub double %604, %620
  %gen211 = fmul double %_210, %620
  %621 = fmul double %604, %620
  store double %621, double* %31, align 8
  store double 1.000000e+00, double* %35, align 8
  store double 0.000000e+00, double* %36, align 8
  %622 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %36, double* dereferenceable(8) %31)
  %623 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %35, double* dereferenceable(8) %622)
  %624 = load double, double* %623, align 8
  store double %624, double* %31, align 8
  %625 = load float*, float** %19, align 8
  %626 = load double, double* %31, align 8
  %627 = fptrunc double %626 to float
  %628 = load float*, float** %20, align 8
  %629 = load double, double* %31, align 8
  %_212 = fsub double -0.000000e+00, 1.000000e+00
  %gen213 = fadd double %_212, %629
  %_214 = fsub double 1.000000e+00, %629
  %gen215 = fmul double %_214, %629
  %_216 = fsub double 1.000000e+00, %629
  %gen217 = fmul double %_216, %629
  %_218 = fsub double 1.000000e+00, %629
  %gen219 = fmul double %_218, %629
  %_220 = fsub double 1.000000e+00, %629
  %gen221 = fmul double %_220, %629
  %630 = fsub double 1.000000e+00, %629
  %631 = fptrunc double %630 to float
  %632 = load float*, float** %21, align 8
  call void @_ZN3pov12CRGBLinComb2EPffPKffS2_(float* %625, float %627, float* %628, float %631, float* %632)
  br label %originalBB105

originalBB225alteredBB:                           ; preds = %originalBB225, %471
  br label %originalBB225
}

declare void @_ZN3pov9ChooseRayEPNS_10Ray_StructEPdS1_S2_i(%"struct.pov::Ray_Struct"*, double*, %"struct.pov::Ray_Struct"*, double*, i32) #2

declare double @_ZN3pov9spec_randEv() #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4), float* dereferenceable(4)) #1 comdat {
  %3 = alloca float*, align 8
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  %6 = load float*, float** %4, align 8
  %7 = load float, float* %6, align 4
  %8 = load float*, float** %5, align 8
  %9 = load float, float* %8, align 4
  %10 = fcmp olt float %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.97
  %13 = load i32, i32* @y.98
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = load float*, float** %5, align 8
  store float* %20, float** %3, align 8
  %21 = load i32, i32* @x.97
  %22 = load i32, i32* @y.98
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %47

; <label>:29:                                     ; preds = %2
  %30 = load i32, i32* @x.97
  %31 = load i32, i32* @y.98
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %29
  %38 = load float*, float** %4, align 8
  store float* %38, float** %3, align 8
  %39 = load i32, i32* @x.97
  %40 = load i32, i32* @y.98
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  %48 = load float*, float** %3, align 8
  ret float* %48

originalBBalteredBB:                              ; preds = %originalBB, %11
  %49 = load float*, float** %5, align 8
  store float* %49, float** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %50 = load float*, float** %4, align 8
  store float* %50, float** %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define internal i32 @_ZN3povL16BacktraceRefractEPNS_15Interior_StructEPdPNS_10Ray_StructES2_S2_Pfd(%"struct.pov::Interior_Struct"*, double*, %"struct.pov::Ray_Struct"*, double*, double*, float*, double) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %"struct.pov::Interior_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca %"struct.pov::Ray_Struct"*, align 8
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca float*, align 8
  %15 = alloca double, align 8
  %16 = alloca i32, align 4
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca [3 x double], align 16
  %22 = alloca %"struct.pov::Ray_Struct", align 8
  %23 = alloca [5 x float], align 16
  %24 = alloca [5 x float], align 16
  %25 = alloca [5 x float], align 16
  %26 = alloca double, align 8
  %27 = alloca [5 x float], align 16
  %28 = alloca [5 x float], align 16
  %29 = alloca double, align 8
  store %"struct.pov::Interior_Struct"* %0, %"struct.pov::Interior_Struct"** %9, align 8
  store double* %1, double** %10, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %11, align 8
  store double* %3, double** %12, align 8
  store double* %4, double** %13, align 8
  store float* %5, float** %14, align 8
  store double %6, double* %15, align 8
  %30 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Ray_Struct"* %30)
  %31 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 0
  %32 = getelementptr inbounds [3 x double], [3 x double]* %31, i32 0, i32 0
  %33 = load double*, double** %10, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %32, double* %33)
  %34 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %56

; <label>:36:                                     ; preds = %7
  %37 = load i32, i32* @x.99
  %38 = load i32, i32* @y.100
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %46 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %45, i32 0, i32 2
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* @_ZN3pov11disp_nelemsE, align 4
  %48 = load i32, i32* @x.99
  %49 = load i32, i32* @y.100
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:56:                                     ; preds = %originalBBpart2, %7
  %57 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %58 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %91

; <label>:61:                                     ; preds = %56
  %62 = load i32, i32* @x.99
  %63 = load i32, i32* @y.100
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %61
  %70 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %70)
  %71 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %72 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %73 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %72, i32 0, i32 3
  %74 = load float, float* %73, align 4
  %75 = fpext float %74 to double
  %76 = fdiv double %71, %75
  store double %76, double* %18, align 8
  %77 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %78 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %79 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %78, i32 0, i32 4
  %80 = load float, float* %79, align 8
  %81 = fpext float %80 to double
  %82 = fdiv double %77, %81
  store double %82, double* %19, align 8
  %83 = load i32, i32* @x.99
  %84 = load i32, i32* @y.100
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %226

; <label>:91:                                     ; preds = %56
  %92 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %93 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %92)
  store i32 %93, i32* %16, align 4
  %94 = icmp sge i32 %93, 0
  br i1 %94, label %95, label %197

; <label>:95:                                     ; preds = %91
  %96 = load i32, i32* @x.99
  %97 = load i32, i32* @y.100
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %95
  %104 = load i32, i32* %16, align 4
  call void @_ZN3pov8Ray_ExitEPNS_10Ray_StructEi(%"struct.pov::Ray_Struct"* %22, i32 %104)
  %105 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, -1
  %108 = load i32, i32* @x.99
  %109 = load i32, i32* @y.100
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br i1 %107, label %116, label %129

; <label>:116:                                    ; preds = %originalBBpart215
  %117 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %118 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %117, i32 0, i32 3
  %119 = load float, float* %118, align 4
  %120 = fpext float %119 to double
  %121 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %122 = fdiv double %120, %121
  store double %122, double* %18, align 8
  %123 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %124 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %123, i32 0, i32 4
  %125 = load float, float* %124, align 8
  %126 = fpext float %125 to double
  %127 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %128 = fdiv double %126, %127
  store double %128, double* %19, align 8
  br label %180

; <label>:129:                                    ; preds = %originalBBpart215
  %130 = load i32, i32* %16, align 4
  %131 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %132 = load i32, i32* %131, align 8
  %133 = add nsw i32 %132, 1
  %134 = icmp eq i32 %130, %133
  br i1 %134, label %135, label %162

; <label>:135:                                    ; preds = %129
  %136 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %137 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %136, i32 0, i32 3
  %138 = load float, float* %137, align 4
  %139 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %140 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %139, i64 0, i64 %142
  %144 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %143, align 8
  %145 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %144, i32 0, i32 3
  %146 = load float, float* %145, align 4
  %147 = fdiv float %138, %146
  %148 = fpext float %147 to double
  store double %148, double* %18, align 8
  %149 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %150 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %149, i32 0, i32 4
  %151 = load float, float* %150, align 8
  %152 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %153 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %154 = load i32, i32* %153, align 8
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %152, i64 0, i64 %155
  %157 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %156, align 8
  %158 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %157, i32 0, i32 4
  %159 = load float, float* %158, align 8
  %160 = fdiv float %151, %159
  %161 = fpext float %160 to double
  store double %161, double* %19, align 8
  br label %163

; <label>:162:                                    ; preds = %129
  store double 1.000000e+00, double* %18, align 8
  store double 1.000000e+00, double* %19, align 8
  br label %163

; <label>:163:                                    ; preds = %162, %135
  %164 = load i32, i32* @x.99
  %165 = load i32, i32* @y.100
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %163
  %172 = load i32, i32* @x.99
  %173 = load i32, i32* @y.100
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %180

; <label>:180:                                    ; preds = %originalBBpart219, %116
  %181 = load i32, i32* @x.99
  %182 = load i32, i32* @y.100
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %180
  %189 = load i32, i32* @x.99
  %190 = load i32, i32* @y.100
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %225

; <label>:197:                                    ; preds = %91
  %198 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %199 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %200 = load i32, i32* %199, align 8
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %198, i64 0, i64 %201
  %203 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %202, align 8
  %204 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %203, i32 0, i32 3
  %205 = load float, float* %204, align 4
  %206 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %207 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %206, i32 0, i32 3
  %208 = load float, float* %207, align 4
  %209 = fdiv float %205, %208
  %210 = fpext float %209 to double
  store double %210, double* %18, align 8
  %211 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %212 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %213 = load i32, i32* %212, align 8
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %211, i64 0, i64 %214
  %216 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %215, align 8
  %217 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %216, i32 0, i32 4
  %218 = load float, float* %217, align 8
  %219 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %220 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %219, i32 0, i32 4
  %221 = load float, float* %220, align 8
  %222 = fdiv float %218, %221
  %223 = fpext float %222 to double
  store double %223, double* %19, align 8
  %224 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %224)
  br label %225

; <label>:225:                                    ; preds = %197, %originalBBpart223
  br label %226

; <label>:226:                                    ; preds = %225, %originalBBpart211
  %227 = load double, double* %18, align 8
  %228 = fsub double %227, 1.000000e+00
  %229 = call double @fabs(double %228) #5
  %230 = fcmp olt double %229, 1.000000e-07
  br i1 %230, label %231, label %279

; <label>:231:                                    ; preds = %226
  %232 = load double, double* %19, align 8
  %233 = fsub double %232, 1.000000e+00
  %234 = call double @fabs(double %233) #5
  %235 = fcmp olt double %234, 1.000000e-07
  br i1 %235, label %236, label %279

; <label>:236:                                    ; preds = %231
  %237 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 1
  %238 = getelementptr inbounds [3 x double], [3 x double]* %237, i32 0, i32 0
  %239 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %240 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %239, i32 0, i32 1
  %241 = getelementptr inbounds [3 x double], [3 x double]* %240, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %238, double* %241)
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 103))
  %242 = load float*, float** %14, align 8
  %243 = getelementptr inbounds float, float* %242, i64 0
  %244 = load float, float* %243, align 4
  %245 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 0), align 16
  %246 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %247 = fmul float %245, %246
  %248 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %249 = fadd float %247, %248
  %250 = fmul float %244, %249
  %251 = getelementptr inbounds [5 x float], [5 x float]* %25, i64 0, i64 0
  store float %250, float* %251, align 16
  %252 = load float*, float** %14, align 8
  %253 = getelementptr inbounds float, float* %252, i64 1
  %254 = load float, float* %253, align 4
  %255 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 1), align 4
  %256 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %257 = fmul float %255, %256
  %258 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %259 = fadd float %257, %258
  %260 = fmul float %254, %259
  %261 = getelementptr inbounds [5 x float], [5 x float]* %25, i64 0, i64 1
  store float %260, float* %261, align 4
  %262 = load float*, float** %14, align 8
  %263 = getelementptr inbounds float, float* %262, i64 2
  %264 = load float, float* %263, align 4
  %265 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 2), align 8
  %266 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %267 = fmul float %265, %266
  %268 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %269 = fadd float %267, %268
  %270 = fmul float %264, %269
  %271 = getelementptr inbounds [5 x float], [5 x float]* %25, i64 0, i64 2
  store float %270, float* %271, align 8
  %272 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %273 = add nsw i32 %272, 1
  store i32 %273, i32* @_ZN3pov11Trace_LevelE, align 4
  %274 = getelementptr inbounds [5 x float], [5 x float]* %25, i32 0, i32 0
  %275 = load double, double* %15, align 8
  %276 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %22, float* %274, double %275)
  %277 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %278 = add nsw i32 %277, -1
  store i32 %278, i32* @_ZN3pov11Trace_LevelE, align 4
  br label %658

; <label>:279:                                    ; preds = %231, %226
  %280 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %281 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %280, i32 0, i32 1
  %282 = getelementptr inbounds [3 x double], [3 x double]* %281, i32 0, i32 0
  %283 = load double*, double** %12, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %17, double* %282, double* %283)
  %284 = load double, double* %17, align 8
  %285 = fcmp ole double %284, 0.000000e+00
  br i1 %285, label %286, label %291

; <label>:286:                                    ; preds = %279
  %287 = getelementptr inbounds [3 x double], [3 x double]* %21, i32 0, i32 0
  %288 = load double*, double** %12, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %287, double* %288)
  %289 = load double, double* %17, align 8
  %290 = fsub double -0.000000e+00, %289
  store double %290, double* %17, align 8
  br label %307

; <label>:291:                                    ; preds = %279
  %292 = load double*, double** %12, align 8
  %293 = getelementptr inbounds double, double* %292, i64 0
  %294 = load double, double* %293, align 8
  %295 = fsub double -0.000000e+00, %294
  %296 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 0
  store double %295, double* %296, align 16
  %297 = load double*, double** %12, align 8
  %298 = getelementptr inbounds double, double* %297, i64 1
  %299 = load double, double* %298, align 8
  %300 = fsub double -0.000000e+00, %299
  %301 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 1
  store double %300, double* %301, align 8
  %302 = load double*, double** %12, align 8
  %303 = getelementptr inbounds double, double* %302, i64 2
  %304 = load double, double* %303, align 8
  %305 = fsub double -0.000000e+00, %304
  %306 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 2
  store double %305, double* %306, align 16
  br label %307

; <label>:307:                                    ; preds = %291, %286
  %308 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %309 = icmp sgt i32 %308, 0
  br i1 %309, label %353, label %310

; <label>:310:                                    ; preds = %307
  %311 = load i32, i32* @x.99
  %312 = load i32, i32* @y.100
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %310
  %319 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %320 = icmp sle i32 %319, 1
  %321 = load i32, i32* @x.99
  %322 = load i32, i32* @y.100
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %320, label %353, label %329

; <label>:329:                                    ; preds = %originalBBpart227
  %330 = load i32, i32* @x.99
  %331 = load i32, i32* @y.100
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %329
  %338 = load double, double* %19, align 8
  %339 = fsub double %338, 1.000000e+00
  %340 = call double @fabs(double %339) #5
  %341 = fcmp olt double %340, 1.000000e-07
  %342 = load i32, i32* @x.99
  %343 = load i32, i32* @y.100
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart251, label %originalBB29alteredBB

originalBBpart251:                                ; preds = %originalBB29
  br i1 %341, label %353, label %350

; <label>:350:                                    ; preds = %originalBBpart251
  %351 = load i32, i32* @_ZN3pov18firstRadiosityPassE, align 4
  %352 = icmp ne i32 %351, 0
  br i1 %352, label %353, label %440

; <label>:353:                                    ; preds = %350, %originalBBpart251, %originalBBpart227, %307
  %354 = load i32, i32* @x.99
  %355 = load i32, i32* @y.100
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %353
  %362 = load float*, float** %14, align 8
  %363 = getelementptr inbounds float, float* %362, i64 0
  %364 = load float, float* %363, align 4
  %365 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 0), align 16
  %366 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %367 = fmul float %365, %366
  %368 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %369 = fadd float %367, %368
  %370 = fmul float %364, %369
  %371 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 0
  store float %370, float* %371, align 16
  %372 = load float*, float** %14, align 8
  %373 = getelementptr inbounds float, float* %372, i64 1
  %374 = load float, float* %373, align 4
  %375 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 1), align 4
  %376 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %377 = fmul float %375, %376
  %378 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %379 = fadd float %377, %378
  %380 = fmul float %374, %379
  %381 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 1
  store float %380, float* %381, align 4
  %382 = load float*, float** %14, align 8
  %383 = getelementptr inbounds float, float* %382, i64 2
  %384 = load float, float* %383, align 4
  %385 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 2), align 8
  %386 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %387 = fmul float %385, %386
  %388 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %389 = fadd float %387, %388
  %390 = fmul float %384, %389
  %391 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 2
  store float %390, float* %391, align 8
  %392 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %393 = icmp sgt i32 %392, 1
  %394 = load i32, i32* @x.99
  %395 = load i32, i32* @y.100
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart2117, label %originalBB53alteredBB

originalBBpart2117:                               ; preds = %originalBB53
  br i1 %393, label %402, label %427

; <label>:402:                                    ; preds = %originalBBpart2117
  %403 = load i32, i32* @x.99
  %404 = load i32, i32* @y.100
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %402
  %411 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %412 = icmp sgt i32 %411, 0
  %413 = load i32, i32* @x.99
  %414 = load i32, i32* @y.100
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br i1 %412, label %421, label %427

; <label>:421:                                    ; preds = %originalBBpart2121
  %422 = load double, double* %18, align 8
  %423 = load double, double* %19, align 8
  %424 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %425 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %426 = call double @_ZN3povL11Element_IOREddii(double %422, double %423, i32 %424, i32 %425)
  store double %426, double* %26, align 8
  br label %429

; <label>:427:                                    ; preds = %originalBBpart2121, %originalBBpart2117
  %428 = load double, double* %18, align 8
  store double %428, double* %26, align 8
  br label %429

; <label>:429:                                    ; preds = %427, %421
  %430 = getelementptr inbounds [5 x float], [5 x float]* %27, i32 0, i32 0
  %431 = load double, double* %26, align 8
  %432 = load double*, double** %10, align 8
  %433 = load double*, double** %12, align 8
  %434 = getelementptr inbounds [3 x double], [3 x double]* %21, i32 0, i32 0
  %435 = load double, double* %17, align 8
  %436 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %437 = load double, double* %15, align 8
  %438 = load double*, double** %13, align 8
  %439 = call i32 @_ZN3povL12Refract_GutsEPfdPdS1_S1_dPNS_10Ray_StructES3_dS1_(float* %430, double %431, double* %432, double* %433, double* %434, double %435, %"struct.pov::Ray_Struct"* %436, %"struct.pov::Ray_Struct"* %22, double %437, double* %438)
  store i32 %439, i32* %8, align 4
  br label %675

; <label>:440:                                    ; preds = %350
  %441 = load i32, i32* @x.99
  %442 = load i32, i32* @y.100
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %originalBB123alteredBB, %440
  %449 = load float*, float** %14, align 8
  %450 = getelementptr inbounds float, float* %449, i64 0
  %451 = load float, float* %450, align 4
  %452 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %453 = sitofp i32 %452 to float
  %454 = fdiv float %451, %453
  %455 = fpext float %454 to double
  %456 = fmul double %455, 3.000000e+00
  %457 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 0), align 16
  %458 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %459 = fmul float %457, %458
  %460 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %461 = fadd float %459, %460
  %462 = fpext float %461 to double
  %463 = fmul double %456, %462
  %464 = fptrunc double %463 to float
  %465 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  store float %464, float* %465, align 16
  %466 = load float*, float** %14, align 8
  %467 = getelementptr inbounds float, float* %466, i64 1
  %468 = load float, float* %467, align 4
  %469 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %470 = sitofp i32 %469 to float
  %471 = fdiv float %468, %470
  %472 = fpext float %471 to double
  %473 = fmul double %472, 3.000000e+00
  %474 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 1), align 4
  %475 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %476 = fmul float %474, %475
  %477 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %478 = fadd float %476, %477
  %479 = fpext float %478 to double
  %480 = fmul double %473, %479
  %481 = fptrunc double %480 to float
  %482 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  store float %481, float* %482, align 4
  %483 = load float*, float** %14, align 8
  %484 = getelementptr inbounds float, float* %483, i64 2
  %485 = load float, float* %484, align 4
  %486 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %487 = sitofp i32 %486 to float
  %488 = fdiv float %485, %487
  %489 = fpext float %488 to double
  %490 = fmul double %489, 3.000000e+00
  %491 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 2), align 8
  %492 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %493 = fmul float %491, %492
  %494 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %495 = fadd float %493, %494
  %496 = fpext float %495 to double
  %497 = fmul double %490, %496
  %498 = fptrunc double %497 to float
  %499 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  store float %498, float* %499, align 8
  %500 = load double, double* %18, align 8
  %501 = load double, double* %19, align 8
  %502 = call double @sqrt(double %501) #7
  %503 = fdiv double %500, %502
  store double %503, double* %29, align 8
  %504 = load double, double* %19, align 8
  %505 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %506 = sub nsw i32 %505, 1
  %507 = sitofp i32 %506 to double
  %508 = fdiv double 1.000000e+00, %507
  %509 = call double @pow(double %504, double %508) #7
  store double %509, double* %20, align 8
  store i32 1, i32* @_ZN3pov9disp_elemE, align 4
  %510 = load i32, i32* @x.99
  %511 = load i32, i32* @y.100
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart2263, label %originalBB123alteredBB

originalBBpart2263:                               ; preds = %originalBB123
  br label %518

; <label>:518:                                    ; preds = %originalBBpart2286, %originalBBpart2263
  %519 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %520 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %521 = icmp sle i32 %519, %520
  br i1 %521, label %522, label %624

; <label>:522:                                    ; preds = %518
  %523 = load i32, i32* @x.99
  %524 = load i32, i32* @y.100
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBB265, label %originalBB265alteredBB

originalBB265:                                    ; preds = %originalBB265alteredBB, %522
  %531 = getelementptr inbounds [5 x float], [5 x float]* %23, i32 0, i32 0
  %532 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %533 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  call void @_ZN3povL22Dispersion_Element_HueEPfii(float* %531, i32 %532, i32 %533)
  %534 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %535 = load float, float* %534, align 16
  %536 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 0
  %537 = load float, float* %536, align 16
  %538 = fmul float %535, %537
  %539 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  store float %538, float* %539, align 16
  %540 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 1
  %543 = load float, float* %542, align 4
  %544 = fmul float %541, %543
  %545 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  store float %544, float* %545, align 4
  %546 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %547 = load float, float* %546, align 8
  %548 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 2
  %549 = load float, float* %548, align 8
  %550 = fmul float %547, %549
  %551 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 2
  store float %550, float* %551, align 8
  %552 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  %553 = load float, float* %552, align 16
  %554 = fpext float %553 to double
  %555 = fcmp ogt double %554, 1.000000e-07
  %556 = load i32, i32* @x.99
  %557 = load i32, i32* @y.100
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBBpart2275, label %originalBB265alteredBB

originalBBpart2275:                               ; preds = %originalBB265
  br i1 %555, label %590, label %564

; <label>:564:                                    ; preds = %originalBBpart2275
  %565 = load i32, i32* @x.99
  %566 = load i32, i32* @y.100
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB277, label %originalBB277alteredBB

originalBB277:                                    ; preds = %originalBB277alteredBB, %564
  %573 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  %574 = load float, float* %573, align 4
  %575 = fpext float %574 to double
  %576 = fcmp ogt double %575, 1.000000e-07
  %577 = load i32, i32* @x.99
  %578 = load i32, i32* @y.100
  %579 = sub i32 %577, 1
  %580 = mul i32 %577, %579
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %578, 10
  %584 = or i1 %582, %583
  br i1 %584, label %originalBBpart2279, label %originalBB277alteredBB

originalBBpart2279:                               ; preds = %originalBB277
  br i1 %576, label %590, label %585

; <label>:585:                                    ; preds = %originalBBpart2279
  %586 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 2
  %587 = load float, float* %586, align 8
  %588 = fpext float %587 to double
  %589 = fcmp ogt double %588, 1.000000e-07
  br i1 %589, label %590, label %601

; <label>:590:                                    ; preds = %585, %originalBBpart2279, %originalBBpart2275
  %591 = getelementptr inbounds [5 x float], [5 x float]* %24, i32 0, i32 0
  %592 = load double, double* %29, align 8
  %593 = load double*, double** %10, align 8
  %594 = load double*, double** %12, align 8
  %595 = getelementptr inbounds [3 x double], [3 x double]* %21, i32 0, i32 0
  %596 = load double, double* %17, align 8
  %597 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %598 = load double, double* %15, align 8
  %599 = load double*, double** %13, align 8
  %600 = call i32 @_ZN3povL12Refract_GutsEPfdPdS1_S1_dPNS_10Ray_StructES3_dS1_(float* %591, double %592, double* %593, double* %594, double* %595, double %596, %"struct.pov::Ray_Struct"* %597, %"struct.pov::Ray_Struct"* %22, double %598, double* %599)
  br label %601

; <label>:601:                                    ; preds = %590, %585
  %602 = load double, double* %20, align 8
  %603 = load double, double* %29, align 8
  %604 = fmul double %603, %602
  store double %604, double* %29, align 8
  br label %605

; <label>:605:                                    ; preds = %601
  %606 = load i32, i32* @x.99
  %607 = load i32, i32* @y.100
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBB281, label %originalBB281alteredBB

originalBB281:                                    ; preds = %originalBB281alteredBB, %605
  %614 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %615 = add nsw i32 %614, 1
  store i32 %615, i32* @_ZN3pov9disp_elemE, align 4
  %616 = load i32, i32* @x.99
  %617 = load i32, i32* @y.100
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBBpart2286, label %originalBB281alteredBB

originalBBpart2286:                               ; preds = %originalBB281
  br label %518

; <label>:624:                                    ; preds = %518
  %625 = load i32, i32* @x.99
  %626 = load i32, i32* @y.100
  %627 = sub i32 %625, 1
  %628 = mul i32 %625, %627
  %629 = urem i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %630, %631
  br i1 %632, label %originalBB288, label %originalBB288alteredBB

originalBB288:                                    ; preds = %originalBB288alteredBB, %624
  store i32 0, i32* @_ZN3pov9disp_elemE, align 4
  store i32 0, i32* @_ZN3pov11disp_nelemsE, align 4
  %633 = load i32, i32* @x.99
  %634 = load i32, i32* @y.100
  %635 = sub i32 %633, 1
  %636 = mul i32 %633, %635
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %634, 10
  %640 = or i1 %638, %639
  br i1 %640, label %originalBBpart2290, label %originalBB288alteredBB

originalBBpart2290:                               ; preds = %originalBB288
  br label %641

; <label>:641:                                    ; preds = %originalBBpart2290
  %642 = load i32, i32* @x.99
  %643 = load i32, i32* @y.100
  %644 = sub i32 %642, 1
  %645 = mul i32 %642, %644
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %647, %648
  br i1 %649, label %originalBB292, label %originalBB292alteredBB

originalBB292:                                    ; preds = %originalBB292alteredBB, %641
  %650 = load i32, i32* @x.99
  %651 = load i32, i32* @y.100
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBBpart2294, label %originalBB292alteredBB

originalBBpart2294:                               ; preds = %originalBB292
  br label %658

; <label>:658:                                    ; preds = %originalBBpart2294, %236
  %659 = load i32, i32* @x.99
  %660 = load i32, i32* @y.100
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBB296, label %originalBB296alteredBB

originalBB296:                                    ; preds = %originalBB296alteredBB, %658
  store i32 0, i32* %8, align 4
  %667 = load i32, i32* @x.99
  %668 = load i32, i32* @y.100
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBBpart2298, label %originalBB296alteredBB

originalBBpart2298:                               ; preds = %originalBB296
  br label %675

; <label>:675:                                    ; preds = %originalBBpart2298, %429
  %676 = load i32, i32* @x.99
  %677 = load i32, i32* @y.100
  %678 = sub i32 %676, 1
  %679 = mul i32 %676, %678
  %680 = urem i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = icmp slt i32 %677, 10
  %683 = or i1 %681, %682
  br i1 %683, label %originalBB300, label %originalBB300alteredBB

originalBB300:                                    ; preds = %originalBB300alteredBB, %675
  %684 = load i32, i32* %8, align 4
  %685 = load i32, i32* @x.99
  %686 = load i32, i32* @y.100
  %687 = sub i32 %685, 1
  %688 = mul i32 %685, %687
  %689 = urem i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = icmp slt i32 %686, 10
  %692 = or i1 %690, %691
  br i1 %692, label %originalBBpart2302, label %originalBB300alteredBB

originalBBpart2302:                               ; preds = %originalBB300
  ret i32 %684

originalBBalteredBB:                              ; preds = %originalBB, %36
  %693 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %694 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %693, i32 0, i32 2
  %695 = load i32, i32* %694, align 8
  store i32 %695, i32* @_ZN3pov11disp_nelemsE, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  %696 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %696)
  %697 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %698 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %699 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %698, i32 0, i32 3
  %700 = load float, float* %699, align 4
  %701 = fpext float %700 to double
  %_ = fsub double %697, %701
  %gen = fmul double %_, %701
  %702 = fdiv double %697, %701
  store double %702, double* %18, align 8
  %703 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %704 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %705 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %704, i32 0, i32 4
  %706 = load float, float* %705, align 8
  %707 = fpext float %706 to double
  %_2 = fsub double -0.000000e+00, %703
  %gen3 = fadd double %_2, %707
  %_4 = fsub double %703, %707
  %gen5 = fmul double %_4, %707
  %_6 = fsub double %703, %707
  %gen7 = fmul double %_6, %707
  %_8 = fsub double %703, %707
  %gen9 = fmul double %_8, %707
  %708 = fdiv double %703, %707
  store double %708, double* %19, align 8
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %95
  %709 = load i32, i32* %16, align 4
  call void @_ZN3pov8Ray_ExitEPNS_10Ray_StructEi(%"struct.pov::Ray_Struct"* %22, i32 %709)
  %710 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %711 = load i32, i32* %710, align 8
  %712 = icmp eq i32 %711, -1
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %163
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %180
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %310
  %713 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %714 = icmp sle i32 %713, 1
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %329
  %715 = load double, double* %19, align 8
  %_30 = fsub double -0.000000e+00, %715
  %gen31 = fadd double %_30, 1.000000e+00
  %_32 = fsub double -0.000000e+00, %715
  %gen33 = fadd double %_32, 1.000000e+00
  %_34 = fsub double -0.000000e+00, %715
  %gen35 = fadd double %_34, 1.000000e+00
  %_36 = fsub double %715, 1.000000e+00
  %gen37 = fmul double %_36, 1.000000e+00
  %_38 = fsub double -0.000000e+00, %715
  %gen39 = fadd double %_38, 1.000000e+00
  %_40 = fsub double -0.000000e+00, %715
  %gen41 = fadd double %_40, 1.000000e+00
  %_42 = fsub double %715, 1.000000e+00
  %gen43 = fmul double %_42, 1.000000e+00
  %_44 = fsub double %715, 1.000000e+00
  %gen45 = fmul double %_44, 1.000000e+00
  %_46 = fsub double -0.000000e+00, %715
  %gen47 = fadd double %_46, 1.000000e+00
  %_48 = fsub double -0.000000e+00, %715
  %gen49 = fadd double %_48, 1.000000e+00
  %716 = fsub double %715, 1.000000e+00
  %717 = call double @fabs(double %716) #5
  %718 = fcmp olt double %717, 1.000000e-07
  br label %originalBB29

originalBB53alteredBB:                            ; preds = %originalBB53, %353
  %719 = load float*, float** %14, align 8
  %720 = getelementptr inbounds float, float* %719, i64 0
  %721 = load float, float* %720, align 4
  %722 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 0), align 16
  %723 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %_54 = fsub float -0.000000e+00, %722
  %gen55 = fadd float %_54, %723
  %_56 = fsub float -0.000000e+00, %722
  %gen57 = fadd float %_56, %723
  %_58 = fsub float %722, %723
  %gen59 = fmul float %_58, %723
  %_60 = fsub float %722, %723
  %gen61 = fmul float %_60, %723
  %_62 = fsub float %722, %723
  %gen63 = fmul float %_62, %723
  %_64 = fsub float -0.000000e+00, %722
  %gen65 = fadd float %_64, %723
  %_66 = fsub float %722, %723
  %gen67 = fmul float %_66, %723
  %724 = fmul float %722, %723
  %725 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %_68 = fsub float -0.000000e+00, %724
  %gen69 = fadd float %_68, %725
  %_70 = fsub float -0.000000e+00, %724
  %gen71 = fadd float %_70, %725
  %_72 = fsub float -0.000000e+00, %724
  %gen73 = fadd float %_72, %725
  %726 = fadd float %724, %725
  %_74 = fsub float %721, %726
  %gen75 = fmul float %_74, %726
  %_76 = fsub float %721, %726
  %gen77 = fmul float %_76, %726
  %_78 = fsub float -0.000000e+00, %721
  %gen79 = fadd float %_78, %726
  %_80 = fsub float -0.000000e+00, %721
  %gen81 = fadd float %_80, %726
  %_82 = fsub float %721, %726
  %gen83 = fmul float %_82, %726
  %727 = fmul float %721, %726
  %728 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 0
  store float %727, float* %728, align 16
  %729 = load float*, float** %14, align 8
  %730 = getelementptr inbounds float, float* %729, i64 1
  %731 = load float, float* %730, align 4
  %732 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 1), align 4
  %733 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %_84 = fsub float -0.000000e+00, %732
  %gen85 = fadd float %_84, %733
  %_86 = fsub float -0.000000e+00, %732
  %gen87 = fadd float %_86, %733
  %_88 = fsub float %732, %733
  %gen89 = fmul float %_88, %733
  %_90 = fsub float %732, %733
  %gen91 = fmul float %_90, %733
  %_92 = fsub float -0.000000e+00, %732
  %gen93 = fadd float %_92, %733
  %_94 = fsub float -0.000000e+00, %732
  %gen95 = fadd float %_94, %733
  %734 = fmul float %732, %733
  %735 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %_96 = fsub float %734, %735
  %gen97 = fmul float %_96, %735
  %736 = fadd float %734, %735
  %_98 = fsub float %731, %736
  %gen99 = fmul float %_98, %736
  %737 = fmul float %731, %736
  %738 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 1
  store float %737, float* %738, align 4
  %739 = load float*, float** %14, align 8
  %740 = getelementptr inbounds float, float* %739, i64 2
  %741 = load float, float* %740, align 4
  %742 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 2), align 8
  %743 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %_100 = fsub float -0.000000e+00, %742
  %gen101 = fadd float %_100, %743
  %_102 = fsub float %742, %743
  %gen103 = fmul float %_102, %743
  %_104 = fsub float %742, %743
  %gen105 = fmul float %_104, %743
  %_106 = fsub float %742, %743
  %gen107 = fmul float %_106, %743
  %_108 = fsub float -0.000000e+00, %742
  %gen109 = fadd float %_108, %743
  %744 = fmul float %742, %743
  %745 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %746 = fadd float %744, %745
  %_110 = fsub float -0.000000e+00, %741
  %gen111 = fadd float %_110, %746
  %_112 = fsub float -0.000000e+00, %741
  %gen113 = fadd float %_112, %746
  %_114 = fsub float -0.000000e+00, %741
  %gen115 = fadd float %_114, %746
  %747 = fmul float %741, %746
  %748 = getelementptr inbounds [5 x float], [5 x float]* %27, i64 0, i64 2
  store float %747, float* %748, align 8
  %749 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %750 = icmp sgt i32 %749, 1
  br label %originalBB53

originalBB119alteredBB:                           ; preds = %originalBB119, %402
  %751 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %752 = icmp sgt i32 %751, 0
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %440
  %753 = load float*, float** %14, align 8
  %754 = getelementptr inbounds float, float* %753, i64 0
  %755 = load float, float* %754, align 4
  %756 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %757 = sitofp i32 %756 to float
  %_124 = fsub float -0.000000e+00, %755
  %gen125 = fadd float %_124, %757
  %_126 = fsub float -0.000000e+00, %755
  %gen127 = fadd float %_126, %757
  %_128 = fsub float %755, %757
  %gen129 = fmul float %_128, %757
  %_130 = fsub float -0.000000e+00, %755
  %gen131 = fadd float %_130, %757
  %_132 = fsub float -0.000000e+00, %755
  %gen133 = fadd float %_132, %757
  %_134 = fsub float %755, %757
  %gen135 = fmul float %_134, %757
  %_136 = fsub float %755, %757
  %gen137 = fmul float %_136, %757
  %758 = fdiv float %755, %757
  %759 = fpext float %758 to double
  %_138 = fsub double %759, 3.000000e+00
  %gen139 = fmul double %_138, 3.000000e+00
  %_140 = fsub double %759, 3.000000e+00
  %gen141 = fmul double %_140, 3.000000e+00
  %_142 = fsub double -0.000000e+00, %759
  %gen143 = fadd double %_142, 3.000000e+00
  %_144 = fsub double %759, 3.000000e+00
  %gen145 = fmul double %_144, 3.000000e+00
  %760 = fmul double %759, 3.000000e+00
  %761 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 0), align 16
  %762 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %_146 = fsub float -0.000000e+00, %761
  %gen147 = fadd float %_146, %762
  %_148 = fsub float -0.000000e+00, %761
  %gen149 = fadd float %_148, %762
  %763 = fmul float %761, %762
  %764 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %_150 = fsub float -0.000000e+00, %763
  %gen151 = fadd float %_150, %764
  %_152 = fsub float %763, %764
  %gen153 = fmul float %_152, %764
  %_154 = fsub float %763, %764
  %gen155 = fmul float %_154, %764
  %765 = fadd float %763, %764
  %766 = fpext float %765 to double
  %_156 = fsub double -0.000000e+00, %760
  %gen157 = fadd double %_156, %766
  %_158 = fsub double %760, %766
  %gen159 = fmul double %_158, %766
  %_160 = fsub double -0.000000e+00, %760
  %gen161 = fadd double %_160, %766
  %_162 = fsub double %760, %766
  %gen163 = fmul double %_162, %766
  %767 = fmul double %760, %766
  %768 = fptrunc double %767 to float
  %769 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  store float %768, float* %769, align 16
  %770 = load float*, float** %14, align 8
  %771 = getelementptr inbounds float, float* %770, i64 1
  %772 = load float, float* %771, align 4
  %773 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %774 = sitofp i32 %773 to float
  %_164 = fsub float -0.000000e+00, %772
  %gen165 = fadd float %_164, %774
  %775 = fdiv float %772, %774
  %776 = fpext float %775 to double
  %_166 = fsub double %776, 3.000000e+00
  %gen167 = fmul double %_166, 3.000000e+00
  %_168 = fsub double %776, 3.000000e+00
  %gen169 = fmul double %_168, 3.000000e+00
  %_170 = fsub double -0.000000e+00, %776
  %gen171 = fadd double %_170, 3.000000e+00
  %777 = fmul double %776, 3.000000e+00
  %778 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 1), align 4
  %779 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %_172 = fsub float -0.000000e+00, %778
  %gen173 = fadd float %_172, %779
  %_174 = fsub float -0.000000e+00, %778
  %gen175 = fadd float %_174, %779
  %_176 = fsub float %778, %779
  %gen177 = fmul float %_176, %779
  %_178 = fsub float %778, %779
  %gen179 = fmul float %_178, %779
  %_180 = fsub float -0.000000e+00, %778
  %gen181 = fadd float %_180, %779
  %_182 = fsub float %778, %779
  %gen183 = fmul float %_182, %779
  %_184 = fsub float -0.000000e+00, %778
  %gen185 = fadd float %_184, %779
  %_186 = fsub float -0.000000e+00, %778
  %gen187 = fadd float %_186, %779
  %780 = fmul float %778, %779
  %781 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %_188 = fsub float %780, %781
  %gen189 = fmul float %_188, %781
  %_190 = fsub float %780, %781
  %gen191 = fmul float %_190, %781
  %_192 = fsub float %780, %781
  %gen193 = fmul float %_192, %781
  %_194 = fsub float -0.000000e+00, %780
  %gen195 = fadd float %_194, %781
  %_196 = fsub float -0.000000e+00, %780
  %gen197 = fadd float %_196, %781
  %782 = fadd float %780, %781
  %783 = fpext float %782 to double
  %_198 = fsub double %777, %783
  %gen199 = fmul double %_198, %783
  %_200 = fsub double %777, %783
  %gen201 = fmul double %_200, %783
  %_202 = fsub double -0.000000e+00, %777
  %gen203 = fadd double %_202, %783
  %784 = fmul double %777, %783
  %785 = fptrunc double %784 to float
  %786 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  store float %785, float* %786, align 4
  %787 = load float*, float** %14, align 8
  %788 = getelementptr inbounds float, float* %787, i64 2
  %789 = load float, float* %788, align 4
  %790 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %791 = sitofp i32 %790 to float
  %_204 = fsub float -0.000000e+00, %789
  %gen205 = fadd float %_204, %791
  %_206 = fsub float -0.000000e+00, %789
  %gen207 = fadd float %_206, %791
  %_208 = fsub float %789, %791
  %gen209 = fmul float %_208, %791
  %792 = fdiv float %789, %791
  %793 = fpext float %792 to double
  %_210 = fsub double -0.000000e+00, %793
  %gen211 = fadd double %_210, 3.000000e+00
  %794 = fmul double %793, 3.000000e+00
  %795 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 2), align 8
  %796 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 3), align 4
  %_212 = fsub float %795, %796
  %gen213 = fmul float %_212, %796
  %_214 = fsub float -0.000000e+00, %795
  %gen215 = fadd float %_214, %796
  %_216 = fsub float -0.000000e+00, %795
  %gen217 = fadd float %_216, %796
  %797 = fmul float %795, %796
  %798 = load float, float* getelementptr inbounds ([5 x float], [5 x float]* @_ZN3pov7GFilColE, i64 0, i64 4), align 16
  %_218 = fsub float %797, %798
  %gen219 = fmul float %_218, %798
  %_220 = fsub float %797, %798
  %gen221 = fmul float %_220, %798
  %_222 = fsub float %797, %798
  %gen223 = fmul float %_222, %798
  %_224 = fsub float %797, %798
  %gen225 = fmul float %_224, %798
  %_226 = fsub float -0.000000e+00, %797
  %gen227 = fadd float %_226, %798
  %_228 = fsub float -0.000000e+00, %797
  %gen229 = fadd float %_228, %798
  %799 = fadd float %797, %798
  %800 = fpext float %799 to double
  %_230 = fsub double %794, %800
  %gen231 = fmul double %_230, %800
  %_232 = fsub double -0.000000e+00, %794
  %gen233 = fadd double %_232, %800
  %801 = fmul double %794, %800
  %802 = fptrunc double %801 to float
  %803 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  store float %802, float* %803, align 8
  %804 = load double, double* %18, align 8
  %805 = load double, double* %19, align 8
  %806 = call double @sqrt(double %805) #7
  %_234 = fsub double -0.000000e+00, %804
  %gen235 = fadd double %_234, %806
  %_236 = fsub double -0.000000e+00, %804
  %gen237 = fadd double %_236, %806
  %807 = fdiv double %804, %806
  store double %807, double* %29, align 8
  %808 = load double, double* %19, align 8
  %809 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %_238 = shl i32 %809, 1
  %_239 = sub i32 %809, 1
  %gen240 = mul i32 %_239, 1
  %_241 = sub i32 %809, 1
  %gen242 = mul i32 %_241, 1
  %_243 = sub i32 %809, 1
  %gen244 = mul i32 %_243, 1
  %_245 = sub i32 %809, 1
  %gen246 = mul i32 %_245, 1
  %_247 = shl i32 %809, 1
  %810 = sub nsw i32 %809, 1
  %811 = sitofp i32 %810 to double
  %_248 = fsub double -0.000000e+00, 1.000000e+00
  %gen249 = fadd double %_248, %811
  %_250 = fsub double 1.000000e+00, %811
  %gen251 = fmul double %_250, %811
  %_252 = fsub double -0.000000e+00, 1.000000e+00
  %gen253 = fadd double %_252, %811
  %_254 = fsub double -0.000000e+00, 1.000000e+00
  %gen255 = fadd double %_254, %811
  %_256 = fsub double -0.000000e+00, 1.000000e+00
  %gen257 = fadd double %_256, %811
  %_258 = fsub double -0.000000e+00, 1.000000e+00
  %gen259 = fadd double %_258, %811
  %_260 = fsub double -0.000000e+00, 1.000000e+00
  %gen261 = fadd double %_260, %811
  %812 = fdiv double 1.000000e+00, %811
  %813 = call double @pow(double %808, double %812) #7
  store double %813, double* %20, align 8
  store i32 1, i32* @_ZN3pov9disp_elemE, align 4
  br label %originalBB123

originalBB265alteredBB:                           ; preds = %originalBB265, %522
  %814 = getelementptr inbounds [5 x float], [5 x float]* %23, i32 0, i32 0
  %815 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %816 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  call void @_ZN3povL22Dispersion_Element_HueEPfii(float* %814, i32 %815, i32 %816)
  %817 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 0
  %818 = load float, float* %817, align 16
  %819 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 0
  %820 = load float, float* %819, align 16
  %_266 = fsub float -0.000000e+00, %818
  %gen267 = fadd float %_266, %820
  %821 = fmul float %818, %820
  %822 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  store float %821, float* %822, align 16
  %823 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 1
  %824 = load float, float* %823, align 4
  %825 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 1
  %826 = load float, float* %825, align 4
  %_268 = fsub float %824, %826
  %gen269 = fmul float %_268, %826
  %_270 = fsub float %824, %826
  %gen271 = fmul float %_270, %826
  %827 = fmul float %824, %826
  %828 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  store float %827, float* %828, align 4
  %829 = getelementptr inbounds [5 x float], [5 x float]* %28, i64 0, i64 2
  %830 = load float, float* %829, align 8
  %831 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 2
  %832 = load float, float* %831, align 8
  %_272 = fsub float %830, %832
  %gen273 = fmul float %_272, %832
  %833 = fmul float %830, %832
  %834 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 2
  store float %833, float* %834, align 8
  %835 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  %836 = load float, float* %835, align 16
  %837 = fpext float %836 to double
  %838 = fcmp ogt double %837, 1.000000e-07
  br label %originalBB265

originalBB277alteredBB:                           ; preds = %originalBB277, %564
  %839 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  %840 = load float, float* %839, align 4
  %841 = fpext float %840 to double
  %842 = fcmp ogt double %841, 1.000000e-07
  br label %originalBB277

originalBB281alteredBB:                           ; preds = %originalBB281, %605
  %843 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %_282 = shl i32 %843, 1
  %_283 = sub i32 0, %843
  %gen284 = add i32 %_283, 1
  %844 = add nsw i32 %843, 1
  store i32 %844, i32* @_ZN3pov9disp_elemE, align 4
  br label %originalBB281

originalBB288alteredBB:                           ; preds = %originalBB288, %624
  store i32 0, i32* @_ZN3pov9disp_elemE, align 4
  store i32 0, i32* @_ZN3pov11disp_nelemsE, align 4
  br label %originalBB288

originalBB292alteredBB:                           ; preds = %originalBB292, %641
  br label %originalBB292

originalBB296alteredBB:                           ; preds = %originalBB296, %658
  store i32 0, i32* %8, align 4
  br label %originalBB296

originalBB300alteredBB:                           ; preds = %originalBB300, %675
  %845 = load i32, i32* %8, align 4
  br label %originalBB300
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float @_ZSt3powff(float, float) #1 comdat {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  store float %0, float* %3, align 4
  store float %1, float* %4, align 4
  %5 = load float, float* %3, align 4
  %6 = load float, float* %4, align 4
  %7 = call float @llvm.pow.f32(float %5, float %6)
  ret float %7
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL7ReflectEPdPNS_10Ray_StructES0_S0_Pfd(double*, %"struct.pov::Ray_Struct"*, double*, double*, float*, double) #0 {
  %7 = alloca double*, align 8
  %8 = alloca %"struct.pov::Ray_Struct"*, align 8
  %9 = alloca double*, align 8
  %10 = alloca double*, align 8
  %11 = alloca float*, align 8
  %12 = alloca double, align 8
  %13 = alloca %"struct.pov::Ray_Struct", align 8
  %14 = alloca [5 x float], align 16
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  store double* %0, double** %7, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %8, align 8
  store double* %2, double** %9, align 8
  store double* %3, double** %10, align 8
  store float* %4, float** %11, align 8
  store double %5, double* %12, align 8
  store i8 1, i8* @_ZN3pov17In_Reflection_RayE, align 1
  %17 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* @_ZN3pov11Trace_LevelE, align 4
  %19 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %23, label %21

; <label>:21:                                     ; preds = %6
  %22 = load float*, float** %11, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %22, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  br label %23

; <label>:23:                                     ; preds = %21, %6
  %24 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %8, align 8
  %25 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %24, i32 0, i32 1
  %26 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %27 = load double*, double** %9, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %15, double* %26, double* %27)
  %28 = load double, double* %15, align 8
  %29 = fmul double %28, -2.000000e+00
  store double %29, double* %15, align 8
  %30 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %13, i32 0, i32 1
  %31 = getelementptr inbounds [3 x double], [3 x double]* %30, i32 0, i32 0
  %32 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %8, align 8
  %33 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %32, i32 0, i32 1
  %34 = getelementptr inbounds [3 x double], [3 x double]* %33, i32 0, i32 0
  %35 = load double, double* %15, align 8
  %36 = load double*, double** %9, align 8
  call void @_ZN3pov10VAddScaledEPdPKddS2_(double* %31, double* %34, double %35, double* %36)
  %37 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %13, i32 0, i32 1
  %38 = getelementptr inbounds [3 x double], [3 x double]* %37, i32 0, i32 0
  %39 = load double*, double** %10, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %15, double* %38, double* %39)
  %40 = load double, double* %15, align 8
  %41 = fcmp olt double %40, 0.000000e+00
  br i1 %41, label %42, label %70

; <label>:42:                                     ; preds = %23
  %43 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %13, i32 0, i32 1
  %44 = getelementptr inbounds [3 x double], [3 x double]* %43, i32 0, i32 0
  %45 = load double*, double** %9, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %16, double* %44, double* %45)
  %46 = load double, double* %16, align 8
  %47 = fcmp olt double %46, 0.000000e+00
  br i1 %47, label %48, label %62

; <label>:48:                                     ; preds = %42
  %49 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %8, align 8
  %50 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %49, i32 0, i32 1
  %51 = getelementptr inbounds [3 x double], [3 x double]* %50, i32 0, i32 0
  %52 = load double*, double** %10, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %15, double* %51, double* %52)
  %53 = load double, double* %15, align 8
  %54 = fmul double %53, -2.000000e+00
  store double %54, double* %15, align 8
  %55 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %13, i32 0, i32 1
  %56 = getelementptr inbounds [3 x double], [3 x double]* %55, i32 0, i32 0
  %57 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %8, align 8
  %58 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %57, i32 0, i32 1
  %59 = getelementptr inbounds [3 x double], [3 x double]* %58, i32 0, i32 0
  %60 = load double, double* %15, align 8
  %61 = load double*, double** %10, align 8
  call void @_ZN3pov10VAddScaledEPdPKddS2_(double* %56, double* %59, double %60, double* %61)
  br label %69

; <label>:62:                                     ; preds = %42
  %63 = load double, double* %15, align 8
  %64 = fmul double %63, -2.000000e+00
  store double %64, double* %15, align 8
  %65 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %13, i32 0, i32 1
  %66 = getelementptr inbounds [3 x double], [3 x double]* %65, i32 0, i32 0
  %67 = load double, double* %15, align 8
  %68 = load double*, double** %10, align 8
  call void @_ZN3pov12VAddScaledEqEPddPKd(double* %66, double %67, double* %68)
  br label %69

; <label>:69:                                     ; preds = %62, %48
  br label %70

; <label>:70:                                     ; preds = %69, %23
  %71 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %13, i32 0, i32 1
  %72 = getelementptr inbounds [3 x double], [3 x double]* %71, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %72)
  %73 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %13, i32 0, i32 0
  %74 = getelementptr inbounds [3 x double], [3 x double]* %73, i32 0, i32 0
  %75 = load double*, double** %7, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %74, double* %75)
  %76 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %8, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %13, %"struct.pov::Ray_Struct"* %76)
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 101))
  %77 = load i32, i32* @_ZN3pov13backtraceFlagE, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %85, label %79

; <label>:79:                                     ; preds = %70
  %80 = getelementptr inbounds [5 x float], [5 x float]* %14, i32 0, i32 0
  %81 = load double, double* %12, align 8
  %82 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %13, float* %80, double %81)
  %83 = load float*, float** %11, align 8
  %84 = getelementptr inbounds [5 x float], [5 x float]* %14, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPfPKf(float* %83, float* %84)
  br label %89

; <label>:85:                                     ; preds = %70
  %86 = load float*, float** %11, align 8
  %87 = load double, double* %12, align 8
  %88 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %13, float* %86, double %87)
  br label %89

; <label>:89:                                     ; preds = %85, %79
  %90 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %91 = add nsw i32 %90, -1
  store i32 %91, i32* @_ZN3pov11Trace_LevelE, align 4
  store i8 0, i8* @_ZN3pov17In_Reflection_RayE, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov10Assign_RGBEPfS0_(float*, float*) #1 comdat {
  %3 = alloca float*, align 8
  %4 = alloca float*, align 8
  store float* %0, float** %3, align 8
  store float* %1, float** %4, align 8
  %5 = load float*, float** %4, align 8
  %6 = getelementptr inbounds float, float* %5, i64 0
  %7 = load float, float* %6, align 4
  %8 = load float*, float** %3, align 8
  %9 = getelementptr inbounds float, float* %8, i64 0
  store float %7, float* %9, align 4
  %10 = load float*, float** %4, align 8
  %11 = getelementptr inbounds float, float* %10, i64 1
  %12 = load float, float* %11, align 4
  %13 = load float*, float** %3, align 8
  %14 = getelementptr inbounds float, float* %13, i64 1
  store float %12, float* %14, align 4
  %15 = load float*, float** %4, align 8
  %16 = getelementptr inbounds float, float* %15, i64 2
  %17 = load float, float* %16, align 4
  %18 = load float*, float** %3, align 8
  %19 = getelementptr inbounds float, float* %18, i64 2
  store float %17, float* %19, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov12CRGBLinComb2EPffPKffS2_(float*, float, float*, float, float*) #1 comdat {
  %6 = alloca float*, align 8
  %7 = alloca float, align 4
  %8 = alloca float*, align 8
  %9 = alloca float, align 4
  %10 = alloca float*, align 8
  store float* %0, float** %6, align 8
  store float %1, float* %7, align 4
  store float* %2, float** %8, align 8
  store float %3, float* %9, align 4
  store float* %4, float** %10, align 8
  %11 = load float, float* %7, align 4
  %12 = load float*, float** %8, align 8
  %13 = getelementptr inbounds float, float* %12, i64 0
  %14 = load float, float* %13, align 4
  %15 = fmul float %11, %14
  %16 = load float, float* %9, align 4
  %17 = load float*, float** %10, align 8
  %18 = getelementptr inbounds float, float* %17, i64 0
  %19 = load float, float* %18, align 4
  %20 = fmul float %16, %19
  %21 = fadd float %15, %20
  %22 = load float*, float** %6, align 8
  %23 = getelementptr inbounds float, float* %22, i64 0
  store float %21, float* %23, align 4
  %24 = load float, float* %7, align 4
  %25 = load float*, float** %8, align 8
  %26 = getelementptr inbounds float, float* %25, i64 1
  %27 = load float, float* %26, align 4
  %28 = fmul float %24, %27
  %29 = load float, float* %9, align 4
  %30 = load float*, float** %10, align 8
  %31 = getelementptr inbounds float, float* %30, i64 1
  %32 = load float, float* %31, align 4
  %33 = fmul float %29, %32
  %34 = fadd float %28, %33
  %35 = load float*, float** %6, align 8
  %36 = getelementptr inbounds float, float* %35, i64 1
  store float %34, float* %36, align 4
  %37 = load float, float* %7, align 4
  %38 = load float*, float** %8, align 8
  %39 = getelementptr inbounds float, float* %38, i64 2
  %40 = load float, float* %39, align 4
  %41 = fmul float %37, %40
  %42 = load float, float* %9, align 4
  %43 = load float*, float** %10, align 8
  %44 = getelementptr inbounds float, float* %43, i64 2
  %45 = load float, float* %44, align 4
  %46 = fmul float %42, %45
  %47 = fadd float %41, %46
  %48 = load float*, float** %6, align 8
  %49 = getelementptr inbounds float, float* %48, i64 2
  store float %47, float* %49, align 4
  ret void
}

declare void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"*, %"struct.pov::Interior_Struct"*) #2

declare void @_ZN3pov8Ray_ExitEPNS_10Ray_StructEi(%"struct.pov::Ray_Struct"*, i32) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8)) #1 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, 1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL11Element_IOREddii(double, double, i32, i32) #1 {
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store double %0, double* %5, align 8
  store double %1, double* %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load double, double* %5, align 8
  %10 = load double, double* %6, align 8
  %11 = load i32, i32* %7, align 4
  %12 = sub nsw i32 %11, 1
  %13 = sitofp i32 %12 to double
  %14 = fmul double %13, 1.000000e+00
  %15 = load i32, i32* %8, align 4
  %16 = sub nsw i32 %15, 1
  %17 = sitofp i32 %16 to double
  %18 = fdiv double %14, %17
  %19 = fsub double %18, 5.000000e-01
  %20 = call double @pow(double %10, double %19) #7
  %21 = fmul double %9, %20
  ret double %21
}

; Function Attrs: noinline uwtable
define internal i32 @_ZN3povL12Refract_GutsEPfdPdS1_S1_dPNS_10Ray_StructES3_dS1_(float*, double, double*, double*, double*, double, %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"*, double, double*) #0 {
  %11 = alloca i32, align 4
  %12 = alloca float*, align 8
  %13 = alloca double, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca double*, align 8
  %17 = alloca double, align 8
  %18 = alloca %"struct.pov::Ray_Struct"*, align 8
  %19 = alloca %"struct.pov::Ray_Struct"*, align 8
  %20 = alloca double, align 8
  %21 = alloca double*, align 8
  %22 = alloca double, align 8
  store float* %0, float** %12, align 8
  store double %1, double* %13, align 8
  store double* %2, double** %14, align 8
  store double* %3, double** %15, align 8
  store double* %4, double** %16, align 8
  store double %5, double* %17, align 8
  store %"struct.pov::Ray_Struct"* %6, %"struct.pov::Ray_Struct"** %18, align 8
  store %"struct.pov::Ray_Struct"* %7, %"struct.pov::Ray_Struct"** %19, align 8
  store double %8, double* %20, align 8
  store double* %9, double** %21, align 8
  %23 = load double, double* %13, align 8
  %24 = call double @_ZN3pov3SqrEd(double %23)
  %25 = load double, double* %17, align 8
  %26 = call double @_ZN3pov3SqrEd(double %25)
  %27 = fsub double %26, 1.000000e+00
  %28 = fmul double %24, %27
  %29 = fadd double 1.000000e+00, %28
  store double %29, double* %22, align 8
  %30 = load double, double* %22, align 8
  %31 = fcmp olt double %30, 0.000000e+00
  br i1 %31, label %32, label %39

; <label>:32:                                     ; preds = %10
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 104))
  %33 = load double*, double** %14, align 8
  %34 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %18, align 8
  %35 = load double*, double** %15, align 8
  %36 = load double*, double** %21, align 8
  %37 = load float*, float** %12, align 8
  %38 = load double, double* %20, align 8
  call void @_ZN3povL7ReflectEPdPNS_10Ray_StructES0_S0_Pfd(double* %33, %"struct.pov::Ray_Struct"* %34, double* %35, double* %36, float* %37, double %38)
  store i32 1, i32* %11, align 4
  br label %63

; <label>:39:                                     ; preds = %10
  %40 = load double, double* %13, align 8
  %41 = load double, double* %17, align 8
  %42 = fmul double %40, %41
  %43 = load double, double* %22, align 8
  %44 = call double @sqrt(double %43) #7
  %45 = fsub double %42, %44
  store double %45, double* %22, align 8
  %46 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %19, align 8
  %47 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %46, i32 0, i32 1
  %48 = getelementptr inbounds [3 x double], [3 x double]* %47, i32 0, i32 0
  %49 = load double, double* %13, align 8
  %50 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %18, align 8
  %51 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %50, i32 0, i32 1
  %52 = getelementptr inbounds [3 x double], [3 x double]* %51, i32 0, i32 0
  %53 = load double, double* %22, align 8
  %54 = load double*, double** %16, align 8
  call void @_ZN3pov9VLinComb2EPddPKddS2_(double* %48, double %49, double* %52, double %53, double* %54)
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 102))
  %55 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* @_ZN3pov11Trace_LevelE, align 4
  %57 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %19, align 8
  %58 = load float*, float** %12, align 8
  %59 = load double, double* %20, align 8
  %60 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %57, float* %58, double %59)
  %61 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %62 = add nsw i32 %61, -1
  store i32 %62, i32* @_ZN3pov11Trace_LevelE, align 4
  store i32 0, i32* %11, align 4
  br label %63

; <label>:63:                                     ; preds = %39, %32
  %64 = load i32, i32* %11, align 4
  ret i32 %64
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN3povL22Dispersion_Element_HueEPfii(float*, i32, i32) #1 {
  %4 = alloca float*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  store float* %0, float** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %11 = load i32, i32* %5, align 4
  %12 = sub nsw i32 %11, 1
  %13 = sitofp i32 %12 to float
  %14 = load i32, i32* %6, align 4
  %15 = sub nsw i32 %14, 1
  %16 = sitofp i32 %15 to float
  %17 = fdiv float %13, %16
  %18 = fpext float %17 to double
  %19 = fmul double 9.340000e-01, %18
  %20 = fsub double 9.640000e-01, %19
  %21 = fptrunc double %20 to float
  store float %21, float* %7, align 4
  %22 = load float, float* %7, align 4
  %23 = fpext float %22 to double
  %24 = fsub double %23, 2.800000e-01
  %25 = fmul double 4.000000e+00, %24
  %26 = call double @_ZN3pov3SqrEd(double %25)
  %27 = fsub double 1.000000e+00, %26
  %28 = fmul double 9.800000e-01, %27
  %29 = fptrunc double %28 to float
  store float %29, float* %10, align 4
  %30 = load float, float* %10, align 4
  %31 = fcmp olt float %30, 0.000000e+00
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %3
  store float 0.000000e+00, float* %10, align 4
  br label %33

; <label>:33:                                     ; preds = %32, %3
  %34 = load float, float* %10, align 4
  %35 = load float*, float** %4, align 8
  %36 = getelementptr inbounds float, float* %35, i64 2
  store float %34, float* %36, align 4
  %37 = load float, float* %7, align 4
  %38 = fpext float %37 to double
  %39 = fsub double %38, 5.700000e-01
  %40 = fmul double 4.500000e+00, %39
  %41 = call double @_ZN3pov3SqrEd(double %40)
  %42 = fsub double 1.100000e+00, %41
  %43 = fmul double 9.700000e-01, %42
  %44 = fptrunc double %43 to float
  store float %44, float* %9, align 4
  %45 = load float, float* %9, align 4
  %46 = fcmp olt float %45, 0.000000e+00
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %33
  store float 0.000000e+00, float* %9, align 4
  br label %48

; <label>:48:                                     ; preds = %47, %33
  %49 = load float, float* %9, align 4
  %50 = load float*, float** %4, align 8
  %51 = getelementptr inbounds float, float* %50, i64 1
  store float %49, float* %51, align 4
  %52 = load float, float* %7, align 4
  %53 = fpext float %52 to double
  %54 = fsub double %53, 7.500000e-01
  %55 = fmul double 5.000000e+00, %54
  %56 = call double @_ZN3pov3SqrEd(double %55)
  %57 = fsub double 1.150000e+00, %56
  %58 = fptrunc double %57 to float
  store float %58, float* %8, align 4
  %59 = load float, float* %8, align 4
  %60 = fcmp olt float %59, 0.000000e+00
  br i1 %60, label %61, label %69

; <label>:61:                                     ; preds = %48
  %62 = load float, float* %7, align 4
  %63 = fpext float %62 to double
  %64 = fsub double %63, 1.200000e-01
  %65 = fmul double 4.000000e+00, %64
  %66 = call double @_ZN3pov3SqrEd(double %65)
  %67 = fsub double 1.200000e-01, %66
  %68 = fptrunc double %67 to float
  store float %68, float* %8, align 4
  br label %69

; <label>:69:                                     ; preds = %61, %48
  %70 = load float, float* %8, align 4
  %71 = fcmp olt float %70, 0.000000e+00
  br i1 %71, label %72, label %73

; <label>:72:                                     ; preds = %69
  store float 0.000000e+00, float* %8, align 4
  br label %73

; <label>:73:                                     ; preds = %72, %69
  %74 = load float, float* %8, align 4
  %75 = load float*, float** %4, align 8
  %76 = getelementptr inbounds float, float* %75, i64 0
  store float %74, float* %76, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.pow.f32(float, float) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov10VAddScaledEPdPKddS2_(double*, double*, double, double*) #1 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  %8 = alloca double*, align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double %2, double* %7, align 8
  store double* %3, double** %8, align 8
  %9 = load double*, double** %6, align 8
  %10 = getelementptr inbounds double, double* %9, i64 0
  %11 = load double, double* %10, align 8
  %12 = load double, double* %7, align 8
  %13 = load double*, double** %8, align 8
  %14 = getelementptr inbounds double, double* %13, i64 0
  %15 = load double, double* %14, align 8
  %16 = fmul double %12, %15
  %17 = fadd double %11, %16
  %18 = load double*, double** %5, align 8
  %19 = getelementptr inbounds double, double* %18, i64 0
  store double %17, double* %19, align 8
  %20 = load double*, double** %6, align 8
  %21 = getelementptr inbounds double, double* %20, i64 1
  %22 = load double, double* %21, align 8
  %23 = load double, double* %7, align 8
  %24 = load double*, double** %8, align 8
  %25 = getelementptr inbounds double, double* %24, i64 1
  %26 = load double, double* %25, align 8
  %27 = fmul double %23, %26
  %28 = fadd double %22, %27
  %29 = load double*, double** %5, align 8
  %30 = getelementptr inbounds double, double* %29, i64 1
  store double %28, double* %30, align 8
  %31 = load double*, double** %6, align 8
  %32 = getelementptr inbounds double, double* %31, i64 2
  %33 = load double, double* %32, align 8
  %34 = load double, double* %7, align 8
  %35 = load double*, double** %8, align 8
  %36 = getelementptr inbounds double, double* %35, i64 2
  %37 = load double, double* %36, align 8
  %38 = fmul double %34, %37
  %39 = fadd double %33, %38
  %40 = load double*, double** %5, align 8
  %41 = getelementptr inbounds double, double* %40, i64 2
  store double %39, double* %41, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov12VAddScaledEqEPddPKd(double*, double, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double %1, double* %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double, double* %5, align 8
  %8 = load double*, double** %6, align 8
  %9 = getelementptr inbounds double, double* %8, i64 0
  %10 = load double, double* %9, align 8
  %11 = fmul double %7, %10
  %12 = load double*, double** %4, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  %14 = load double, double* %13, align 8
  %15 = fadd double %14, %11
  store double %15, double* %13, align 8
  %16 = load double, double* %5, align 8
  %17 = load double*, double** %6, align 8
  %18 = getelementptr inbounds double, double* %17, i64 1
  %19 = load double, double* %18, align 8
  %20 = fmul double %16, %19
  %21 = load double*, double** %4, align 8
  %22 = getelementptr inbounds double, double* %21, i64 1
  %23 = load double, double* %22, align 8
  %24 = fadd double %23, %20
  store double %24, double* %22, align 8
  %25 = load double, double* %5, align 8
  %26 = load double*, double** %6, align 8
  %27 = getelementptr inbounds double, double* %26, i64 2
  %28 = load double, double* %27, align 8
  %29 = fmul double %25, %28
  %30 = load double*, double** %4, align 8
  %31 = getelementptr inbounds double, double* %30, i64 2
  %32 = load double, double* %31, align 8
  %33 = fadd double %32, %29
  store double %33, double* %31, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov6VAddEqEPfPKf(float*, float*) #1 comdat {
  %3 = alloca float*, align 8
  %4 = alloca float*, align 8
  store float* %0, float** %3, align 8
  store float* %1, float** %4, align 8
  %5 = load float*, float** %4, align 8
  %6 = getelementptr inbounds float, float* %5, i64 0
  %7 = load float, float* %6, align 4
  %8 = load float*, float** %3, align 8
  %9 = getelementptr inbounds float, float* %8, i64 0
  %10 = load float, float* %9, align 4
  %11 = fadd float %10, %7
  store float %11, float* %9, align 4
  %12 = load float*, float** %4, align 8
  %13 = getelementptr inbounds float, float* %12, i64 1
  %14 = load float, float* %13, align 4
  %15 = load float*, float** %3, align 8
  %16 = getelementptr inbounds float, float* %15, i64 1
  %17 = load float, float* %16, align 4
  %18 = fadd float %17, %14
  store float %18, float* %16, align 4
  %19 = load float*, float** %4, align 8
  %20 = getelementptr inbounds float, float* %19, i64 2
  %21 = load float, float* %20, align 4
  %22 = load float*, float** %3, align 8
  %23 = getelementptr inbounds float, float* %22, i64 2
  %24 = load float, float* %23, align 4
  %25 = fadd float %24, %21
  store float %25, float* %23, align 4
  ret void
}

declare i32 @_ZN3pov15Compute_AmbientEPdS0_S0_Pfd(double*, double*, double*, float*, double) #2

; Function Attrs: noinline uwtable
define internal void @_ZN3povL7DiffuseEPNS_13Finish_StructEPdPNS_10Ray_StructES2_PfS5_dPNS_13Object_StructE(%"struct.pov::Finish_Struct"*, double*, %"struct.pov::Ray_Struct"*, double*, float*, float*, double, %"struct.pov::Object_Struct"*) #0 {
  %9 = alloca %"struct.pov::Finish_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca %"struct.pov::Ray_Struct"*, align 8
  %12 = alloca double*, align 8
  %13 = alloca float*, align 8
  %14 = alloca float*, align 8
  %15 = alloca double, align 8
  %16 = alloca %"struct.pov::Object_Struct"*, align 8
  %17 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %18 = alloca [3 x double], align 16
  %19 = alloca i32, align 4
  store %"struct.pov::Finish_Struct"* %0, %"struct.pov::Finish_Struct"** %9, align 8
  store double* %1, double** %10, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %11, align 8
  store double* %3, double** %12, align 8
  store float* %4, float** %13, align 8
  store float* %5, float** %14, align 8
  store double %6, double* %15, align 8
  store %"struct.pov::Object_Struct"* %7, %"struct.pov::Object_Struct"** %16, align 8
  %20 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %21 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %20, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = fcmp oeq double %23, 0.000000e+00
  br i1 %24, label %25, label %38

; <label>:25:                                     ; preds = %8
  %26 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %27 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %26, i32 0, i32 2
  %28 = load float, float* %27, align 4
  %29 = fpext float %28 to double
  %30 = fcmp oeq double %29, 0.000000e+00
  br i1 %30, label %31, label %38

; <label>:31:                                     ; preds = %25
  %32 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %33 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %32, i32 0, i32 4
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  %36 = fcmp oeq double %35, 0.000000e+00
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %31
  br label %202

; <label>:38:                                     ; preds = %31, %25, %8
  %39 = load i32, i32* @x.123
  %40 = load i32, i32* @y.124
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %38
  %47 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %48 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %47, i32 0, i32 2
  %49 = load float, float* %48, align 4
  %50 = fpext float %49 to double
  %51 = fcmp une double %50, 0.000000e+00
  %52 = load i32, i32* @x.123
  %53 = load i32, i32* @y.124
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %51, label %60, label %79

; <label>:60:                                     ; preds = %originalBBpart2
  %61 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %62 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %61, i32 0, i32 1
  %63 = getelementptr inbounds [3 x double], [3 x double]* %62, i64 0, i64 0
  %64 = load double, double* %63, align 8
  %65 = fsub double -0.000000e+00, %64
  %66 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 0
  store double %65, double* %66, align 16
  %67 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %68 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %67, i32 0, i32 1
  %69 = getelementptr inbounds [3 x double], [3 x double]* %68, i64 0, i64 1
  %70 = load double, double* %69, align 8
  %71 = fsub double -0.000000e+00, %70
  %72 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 1
  store double %71, double* %72, align 8
  %73 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %74 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %73, i32 0, i32 1
  %75 = getelementptr inbounds [3 x double], [3 x double]* %74, i64 0, i64 2
  %76 = load double, double* %75, align 8
  %77 = fsub double -0.000000e+00, %76
  %78 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  store double %77, double* %78, align 16
  br label %79

; <label>:79:                                     ; preds = %60, %originalBBpart2
  %80 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %16, align 8
  %81 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %80, i32 0, i32 13
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = and i64 %83, 131072
  %85 = icmp ne i64 %84, 131072
  br i1 %85, label %86, label %142

; <label>:86:                                     ; preds = %79
  store i32 0, i32* %19, align 4
  %87 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 4), align 8
  store %"struct.pov::Light_Source_Struct"* %87, %"struct.pov::Light_Source_Struct"** %17, align 8
  br label %88

; <label>:88:                                     ; preds = %originalBBpart214, %86
  %89 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %90 = icmp ne %"struct.pov::Light_Source_Struct"* %89, null
  br i1 %90, label %91, label %141

; <label>:91:                                     ; preds = %88
  %92 = load i32, i32* @x.123
  %93 = load i32, i32* @y.124
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %91
  %100 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %101 = load i32, i32* %19, align 4
  %102 = getelementptr inbounds [3 x double], [3 x double]* %18, i32 0, i32 0
  %103 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %104 = load double*, double** %10, align 8
  %105 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %106 = load double*, double** %12, align 8
  %107 = load float*, float** %13, align 8
  %108 = load float*, float** %14, align 8
  %109 = load double, double* %15, align 8
  %110 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %16, align 8
  call void @_ZN3povL17Diffuse_One_LightEPNS_19Light_Source_StructEiPdPNS_13Finish_StructES2_PNS_10Ray_StructES2_PfS7_dPNS_13Object_StructE(%"struct.pov::Light_Source_Struct"* %100, i32 %101, double* %102, %"struct.pov::Finish_Struct"* %103, double* %104, %"struct.pov::Ray_Struct"* %105, double* %106, float* %107, float* %108, double %109, %"struct.pov::Object_Struct"* %110)
  %111 = load i32, i32* @x.123
  %112 = load i32, i32* @y.124
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %119

; <label>:119:                                    ; preds = %originalBBpart24
  %120 = load i32, i32* @x.123
  %121 = load i32, i32* @y.124
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %119
  %128 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %129 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %128, i32 0, i32 26
  %130 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %129, align 8
  store %"struct.pov::Light_Source_Struct"* %130, %"struct.pov::Light_Source_Struct"** %17, align 8
  %131 = load i32, i32* %19, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %19, align 4
  %133 = load i32, i32* @x.123
  %134 = load i32, i32* @y.124
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart214, label %originalBB6alteredBB

originalBBpart214:                                ; preds = %originalBB6
  br label %88

; <label>:141:                                    ; preds = %88
  br label %142

; <label>:142:                                    ; preds = %141, %79
  %143 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %16, align 8
  %144 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %143, i32 0, i32 8
  %145 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %144, align 8
  %146 = icmp ne %"struct.pov::Light_Source_Struct"* %145, null
  br i1 %146, label %147, label %202

; <label>:147:                                    ; preds = %142
  %148 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %16, align 8
  %149 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %148, i32 0, i32 8
  %150 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %149, align 8
  store %"struct.pov::Light_Source_Struct"* %150, %"struct.pov::Light_Source_Struct"** %17, align 8
  br label %151

; <label>:151:                                    ; preds = %originalBBpart222, %147
  %152 = load i32, i32* @x.123
  %153 = load i32, i32* @y.124
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %151
  %160 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %161 = icmp ne %"struct.pov::Light_Source_Struct"* %160, null
  %162 = load i32, i32* @x.123
  %163 = load i32, i32* @y.124
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br i1 %161, label %170, label %201

; <label>:170:                                    ; preds = %originalBBpart218
  %171 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %172 = getelementptr inbounds [3 x double], [3 x double]* %18, i32 0, i32 0
  %173 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %174 = load double*, double** %10, align 8
  %175 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %176 = load double*, double** %12, align 8
  %177 = load float*, float** %13, align 8
  %178 = load float*, float** %14, align 8
  %179 = load double, double* %15, align 8
  %180 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %16, align 8
  call void @_ZN3povL17Diffuse_One_LightEPNS_19Light_Source_StructEiPdPNS_13Finish_StructES2_PNS_10Ray_StructES2_PfS7_dPNS_13Object_StructE(%"struct.pov::Light_Source_Struct"* %171, i32 -1, double* %172, %"struct.pov::Finish_Struct"* %173, double* %174, %"struct.pov::Ray_Struct"* %175, double* %176, float* %177, float* %178, double %179, %"struct.pov::Object_Struct"* %180)
  br label %181

; <label>:181:                                    ; preds = %170
  %182 = load i32, i32* @x.123
  %183 = load i32, i32* @y.124
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %181
  %190 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %191 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %190, i32 0, i32 26
  %192 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %191, align 8
  store %"struct.pov::Light_Source_Struct"* %192, %"struct.pov::Light_Source_Struct"** %17, align 8
  %193 = load i32, i32* @x.123
  %194 = load i32, i32* @y.124
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %151

; <label>:201:                                    ; preds = %originalBBpart218
  br label %202

; <label>:202:                                    ; preds = %201, %142, %37
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %38
  %203 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %204 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %203, i32 0, i32 2
  %205 = load float, float* %204, align 4
  %206 = fpext float %205 to double
  %207 = fcmp une double %206, 0.000000e+00
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %91
  %208 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %209 = load i32, i32* %19, align 4
  %210 = getelementptr inbounds [3 x double], [3 x double]* %18, i32 0, i32 0
  %211 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %9, align 8
  %212 = load double*, double** %10, align 8
  %213 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %214 = load double*, double** %12, align 8
  %215 = load float*, float** %13, align 8
  %216 = load float*, float** %14, align 8
  %217 = load double, double* %15, align 8
  %218 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %16, align 8
  call void @_ZN3povL17Diffuse_One_LightEPNS_19Light_Source_StructEiPdPNS_13Finish_StructES2_PNS_10Ray_StructES2_PfS7_dPNS_13Object_StructE(%"struct.pov::Light_Source_Struct"* %208, i32 %209, double* %210, %"struct.pov::Finish_Struct"* %211, double* %212, %"struct.pov::Ray_Struct"* %213, double* %214, float* %215, float* %216, double %217, %"struct.pov::Object_Struct"* %218)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %119
  %219 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %220 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %219, i32 0, i32 26
  %221 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %220, align 8
  store %"struct.pov::Light_Source_Struct"* %221, %"struct.pov::Light_Source_Struct"** %17, align 8
  %222 = load i32, i32* %19, align 4
  %_ = sub i32 0, %222
  %gen = add i32 %_, 1
  %_7 = sub i32 0, %222
  %gen8 = add i32 %_7, 1
  %_9 = sub i32 %222, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 %222, 1
  %gen12 = mul i32 %_11, 1
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %19, align 4
  br label %originalBB6

originalBB16alteredBB:                            ; preds = %originalBB16, %151
  %224 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %225 = icmp ne %"struct.pov::Light_Source_Struct"* %224, null
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %181
  %226 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %17, align 8
  %227 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %226, i32 0, i32 26
  %228 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %227, align 8
  store %"struct.pov::Light_Source_Struct"* %228, %"struct.pov::Light_Source_Struct"** %17, align 8
  br label %originalBB20
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL13PhotonDiffuseEPNS_13Finish_StructEPdPNS_10Ray_StructES2_S2_PfS5_dPNS_13Object_StructE(%"struct.pov::Finish_Struct"*, double*, %"struct.pov::Ray_Struct"*, double*, double*, float*, float*, double, %"struct.pov::Object_Struct"*) #0 {
  %10 = load i32, i32* @x.125
  %11 = load i32, i32* @y.126
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %9
  %18 = alloca %"struct.pov::Finish_Struct"*, align 8
  %19 = alloca double*, align 8
  %20 = alloca %"struct.pov::Ray_Struct"*, align 8
  %21 = alloca double*, align 8
  %22 = alloca double*, align 8
  %23 = alloca float*, align 8
  %24 = alloca float*, align 8
  %25 = alloca double, align 8
  %26 = alloca %"struct.pov::Object_Struct"*, align 8
  %27 = alloca double, align 8
  %28 = alloca %"struct.pov::Ray_Struct", align 8
  %29 = alloca [3 x double], align 16
  %30 = alloca [5 x float], align 16
  %31 = alloca [5 x float], align 16
  %32 = alloca [5 x float], align 16
  %33 = alloca double, align 8
  %34 = alloca double, align 8
  %35 = alloca double, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca double, align 8
  %41 = alloca double, align 8
  %42 = alloca i32, align 4
  %43 = alloca double, align 8
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  store %"struct.pov::Finish_Struct"* %0, %"struct.pov::Finish_Struct"** %18, align 8
  store double* %1, double** %19, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %20, align 8
  store double* %3, double** %21, align 8
  store double* %4, double** %22, align 8
  store float* %5, float** %23, align 8
  store float* %6, float** %24, align 8
  store double %7, double* %25, align 8
  store %"struct.pov::Object_Struct"* %8, %"struct.pov::Object_Struct"** %26, align 8
  store double 0.000000e+00, double* %40, align 8
  store double 1.000000e-16, double* %41, align 8
  store i32 0, i32* %42, align 4
  %46 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 0), align 8
  %47 = icmp ne i32 %46, 0
  %48 = load i32, i32* @x.125
  %49 = load i32, i32* @y.126
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %47, label %56, label %59

; <label>:56:                                     ; preds = %originalBBpart2
  %57 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 14, i32 2), align 4
  %58 = icmp slt i32 %57, 1
  br i1 %58, label %59, label %77

; <label>:59:                                     ; preds = %56, %originalBBpart2
  %60 = load i32, i32* @x.125
  %61 = load i32, i32* @y.126
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %59
  %68 = load float*, float** %24, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %68, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %69 = load i32, i32* @x.125
  %70 = load i32, i32* @y.126
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %688

; <label>:77:                                     ; preds = %56
  %78 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %79 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %78, i32 0, i32 0
  %80 = load float, float* %79, align 4
  %81 = fpext float %80 to double
  %82 = fcmp oeq double %81, 0.000000e+00
  br i1 %82, label %83, label %113

; <label>:83:                                     ; preds = %77
  %84 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %85 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %84, i32 0, i32 2
  %86 = load float, float* %85, align 4
  %87 = fpext float %86 to double
  %88 = fcmp oeq double %87, 0.000000e+00
  br i1 %88, label %89, label %113

; <label>:89:                                     ; preds = %83
  %90 = load i32, i32* @x.125
  %91 = load i32, i32* @y.126
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %89
  %98 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %99 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %98, i32 0, i32 4
  %100 = load float, float* %99, align 4
  %101 = fpext float %100 to double
  %102 = fcmp oeq double %101, 0.000000e+00
  %103 = load i32, i32* @x.125
  %104 = load i32, i32* @y.126
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %102, label %111, label %113

; <label>:111:                                    ; preds = %originalBBpart28
  %112 = load float*, float** %24, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %112, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  br label %688

; <label>:113:                                    ; preds = %originalBBpart28, %83, %77
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 124))
  %114 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %115 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %114, i32 0, i32 2
  %116 = load float, float* %115, align 4
  %117 = fpext float %116 to double
  %118 = fcmp une double %117, 0.000000e+00
  br i1 %118, label %119, label %138

; <label>:119:                                    ; preds = %113
  %120 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %20, align 8
  %121 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %120, i32 0, i32 1
  %122 = getelementptr inbounds [3 x double], [3 x double]* %121, i64 0, i64 0
  %123 = load double, double* %122, align 8
  %124 = fsub double -0.000000e+00, %123
  %125 = getelementptr inbounds [3 x double], [3 x double]* %29, i64 0, i64 0
  store double %124, double* %125, align 16
  %126 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %20, align 8
  %127 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %126, i32 0, i32 1
  %128 = getelementptr inbounds [3 x double], [3 x double]* %127, i64 0, i64 1
  %129 = load double, double* %128, align 8
  %130 = fsub double -0.000000e+00, %129
  %131 = getelementptr inbounds [3 x double], [3 x double]* %29, i64 0, i64 1
  store double %130, double* %131, align 8
  %132 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %20, align 8
  %133 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %132, i32 0, i32 1
  %134 = getelementptr inbounds [3 x double], [3 x double]* %133, i64 0, i64 2
  %135 = load double, double* %134, align 8
  %136 = fsub double -0.000000e+00, %135
  %137 = getelementptr inbounds [3 x double], [3 x double]* %29, i64 0, i64 2
  store double %136, double* %137, align 16
  br label %138

; <label>:138:                                    ; preds = %119, %113
  %139 = load i32, i32* @x.125
  %140 = load i32, i32* @y.126
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %138
  %147 = load float*, float** %24, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %147, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %148 = load double, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 14, i32 3), align 8
  store double %148, double* %33, align 8
  %149 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  call void @_ZN3pov11Make_ColourEPffff(float* %149, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  store i32 -1, i32* %36, align 4
  store i32 0, i32* %39, align 4
  %150 = load i32, i32* @x.125
  %151 = load i32, i32* @y.126
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %158

; <label>:158:                                    ; preds = %639, %originalBBpart212
  %159 = load i32, i32* %36, align 4
  %160 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 9), align 8
  %161 = icmp slt i32 %159, %160
  br i1 %161, label %162, label %166

; <label>:162:                                    ; preds = %158
  %163 = load i32, i32* %39, align 4
  %164 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 14, i32 6), align 8
  %165 = icmp slt i32 %163, %164
  br label %166

; <label>:166:                                    ; preds = %162, %158
  %167 = phi i1 [ false, %158 ], [ %165, %162 ]
  br i1 %167, label %168, label %640

; <label>:168:                                    ; preds = %166
  %169 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  call void @_ZN3pov11Make_ColourEPffff(float* %169, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  store double 0.000000e+00, double* %35, align 8
  %170 = load i32, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %171 = icmp sle i32 %170, 0
  br i1 %171, label %172, label %177

; <label>:172:                                    ; preds = %168
  %173 = load double*, double** %19, align 8
  %174 = load double, double* %33, align 8
  %175 = load double*, double** %21, align 8
  %176 = call i32 @_ZN3pov13gatherPhotonsEPddS0_S0_iPNS_17photon_map_structE(double* %173, double %174, double* %35, double* %175, i32 1, %"struct.pov::photon_map_struct"* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 14))
  store i32 %176, i32* %37, align 4
  br label %196

; <label>:177:                                    ; preds = %168
  %178 = load i32, i32* @x.125
  %179 = load i32, i32* @y.126
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %177
  %186 = load i32, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  store i32 %186, i32* %37, align 4
  %187 = load double, double* @_ZN3pov11previousRadE, align 8
  store double %187, double* %35, align 8
  %188 = load i32, i32* @x.125
  %189 = load i32, i32* @y.126
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %196

; <label>:196:                                    ; preds = %originalBBpart216, %172
  store i32 0, i32* %38, align 4
  br label %197

; <label>:197:                                    ; preds = %507, %196
  %198 = load i32, i32* %38, align 4
  %199 = load i32, i32* %37, align 4
  %200 = icmp slt i32 %198, %199
  br i1 %200, label %201, label %510

; <label>:201:                                    ; preds = %197
  %202 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %203 = load %"struct.pov::photon_struct"**, %"struct.pov::photon_struct"*** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 21), align 8
  %204 = load i32, i32* %38, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %203, i64 %205
  %207 = load %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %206, align 8
  %208 = getelementptr inbounds %"struct.pov::photon_struct", %"struct.pov::photon_struct"* %207, i32 0, i32 1
  %209 = getelementptr inbounds [4 x i8], [4 x i8]* %208, i32 0, i32 0
  call void @_ZN3pov17photonRgbe2colourEPfPh(float* %202, i8* %209)
  %210 = load %"struct.pov::photon_struct"**, %"struct.pov::photon_struct"*** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 21), align 8
  %211 = load i32, i32* %38, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %210, i64 %212
  %214 = load %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %213, align 8
  %215 = getelementptr inbounds %"struct.pov::photon_struct", %"struct.pov::photon_struct"* %214, i32 0, i32 3
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = add nsw i32 %217, 127
  store i32 %218, i32* %44, align 4
  %219 = load %"struct.pov::photon_struct"**, %"struct.pov::photon_struct"*** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 21), align 8
  %220 = load i32, i32* %38, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %219, i64 %221
  %223 = load %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %222, align 8
  %224 = getelementptr inbounds %"struct.pov::photon_struct", %"struct.pov::photon_struct"* %223, i32 0, i32 4
  %225 = load i8, i8* %224, align 2
  %226 = sext i8 %225 to i32
  %227 = add nsw i32 %226, 127
  store i32 %227, i32* %45, align 4
  %228 = load double*, double** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 20), align 8
  %229 = load i32, i32* %44, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds double, double* %228, i64 %230
  %232 = load double, double* %231, align 8
  %233 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %234 = getelementptr inbounds [3 x double], [3 x double]* %233, i64 0, i64 1
  store double %232, double* %234, align 8
  %235 = load double*, double** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 19), align 8
  %236 = load i32, i32* %44, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds double, double* %235, i64 %237
  %239 = load double, double* %238, align 8
  %240 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %241 = getelementptr inbounds [3 x double], [3 x double]* %240, i64 0, i64 0
  store double %239, double* %241, align 8
  %242 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %243 = getelementptr inbounds [3 x double], [3 x double]* %242, i64 0, i64 0
  %244 = load double, double* %243, align 8
  %245 = load double*, double** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 20), align 8
  %246 = load i32, i32* %45, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds double, double* %245, i64 %247
  %249 = load double, double* %248, align 8
  %250 = fmul double %244, %249
  %251 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %252 = getelementptr inbounds [3 x double], [3 x double]* %251, i64 0, i64 2
  store double %250, double* %252, align 8
  %253 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %254 = getelementptr inbounds [3 x double], [3 x double]* %253, i64 0, i64 0
  %255 = load double, double* %254, align 8
  %256 = load double*, double** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 19), align 8
  %257 = load i32, i32* %45, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds double, double* %256, i64 %258
  %260 = load double, double* %259, align 8
  %261 = fmul double %255, %260
  %262 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %263 = getelementptr inbounds [3 x double], [3 x double]* %262, i64 0, i64 0
  store double %261, double* %263, align 8
  %264 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 0
  %265 = getelementptr inbounds [3 x double], [3 x double]* %264, i32 0, i32 0
  %266 = load %"struct.pov::photon_struct"**, %"struct.pov::photon_struct"*** getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 21), align 8
  %267 = load i32, i32* %38, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %266, i64 %268
  %270 = load %"struct.pov::photon_struct"*, %"struct.pov::photon_struct"** %269, align 8
  %271 = getelementptr inbounds %"struct.pov::photon_struct", %"struct.pov::photon_struct"* %270, i32 0, i32 0
  %272 = getelementptr inbounds [3 x float], [3 x float]* %271, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %274 = getelementptr inbounds [3 x double], [3 x double]* %273, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKfPKd(double* %265, float* %272, double* %274)
  %275 = load double*, double** %22, align 8
  %276 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %277 = getelementptr inbounds [3 x double], [3 x double]* %276, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %43, double* %275, double* %277)
  %278 = load double, double* %43, align 8
  %279 = fcmp ogt double %278, 1.000000e+00
  br i1 %279, label %280, label %281

; <label>:280:                                    ; preds = %201
  store double 1.000000e+00, double* %43, align 8
  br label %281

; <label>:281:                                    ; preds = %280, %201
  %282 = load i32, i32* @x.125
  %283 = load i32, i32* @y.126
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %281
  %290 = load double, double* %43, align 8
  %291 = fcmp olt double %290, 1.000000e-01
  %292 = load i32, i32* @x.125
  %293 = load i32, i32* @y.126
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %291, label %300, label %317

; <label>:300:                                    ; preds = %originalBBpart220
  %301 = load i32, i32* @x.125
  %302 = load i32, i32* @y.126
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %300
  store double 1.000000e-01, double* %43, align 8
  %309 = load i32, i32* @x.125
  %310 = load i32, i32* @y.126
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %317

; <label>:317:                                    ; preds = %originalBBpart224, %originalBBpart220
  %318 = load i32, i32* @x.125
  %319 = load i32, i32* @y.126
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %317
  %326 = load double, double* %43, align 8
  %327 = call double @fabs(double %326) #5
  %328 = fdiv double 1.000000e+00, %327
  store double %328, double* %43, align 8
  %329 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %330 = load double, double* %43, align 8
  %331 = fptrunc double %330 to float
  call void @_ZN3pov8VScaleEqEPff(float* %329, float %331)
  %332 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %26, align 8
  %333 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %332, i32 0, i32 13
  %334 = load i32, i32* %333, align 4
  %335 = zext i32 %334 to i64
  %336 = and i64 %335, 16384
  %337 = icmp ne i64 %336, 0
  %338 = load i32, i32* @x.125
  %339 = load i32, i32* @y.126
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart240, label %originalBB26alteredBB

originalBBpart240:                                ; preds = %originalBB26
  br i1 %337, label %370, label %346

; <label>:346:                                    ; preds = %originalBBpart240
  %347 = load double*, double** %21, align 8
  %348 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %28, i32 0, i32 1
  %349 = getelementptr inbounds [3 x double], [3 x double]* %348, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %27, double* %347, double* %349)
  %350 = load double, double* %27, align 8
  %351 = fcmp olt double %350, 1.000000e-07
  br i1 %351, label %352, label %369

; <label>:352:                                    ; preds = %346
  %353 = load i32, i32* @x.125
  %354 = load i32, i32* @y.126
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %352
  %361 = load i32, i32* @x.125
  %362 = load i32, i32* @y.126
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %507

; <label>:369:                                    ; preds = %346
  br label %370

; <label>:370:                                    ; preds = %369, %originalBBpart240
  %371 = load i32, i32* @x.125
  %372 = load i32, i32* @y.126
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %370
  %379 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %380 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %379, i32 0, i32 0
  %381 = load float, float* %380, align 4
  %382 = fpext float %381 to double
  %383 = fcmp ogt double %382, 0.000000e+00
  %384 = load i32, i32* @x.125
  %385 = load i32, i32* @y.126
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %383, label %392, label %399

; <label>:392:                                    ; preds = %originalBBpart248
  %393 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %394 = load double*, double** %21, align 8
  %395 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %396 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %397 = load float*, float** %23, align 8
  %398 = load double, double* %25, align 8
  call void @_ZN3pov10do_diffuseEPNS_13Finish_StructEPNS_10Ray_StructEPdPfS5_S5_d(%"struct.pov::Finish_Struct"* %393, %"struct.pov::Ray_Struct"* %28, double* %394, float* %395, float* %396, float* %397, double %398)
  br label %399

; <label>:399:                                    ; preds = %392, %originalBBpart248
  %400 = load i32, i32* @x.125
  %401 = load i32, i32* @y.126
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %399
  %408 = load i32, i32* @_ZN3pov21Radiosity_Trace_LevelE, align 4
  %409 = icmp sle i32 %408, 1
  %410 = load i32, i32* @x.125
  %411 = load i32, i32* @y.126
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %409, label %418, label %479

; <label>:418:                                    ; preds = %originalBBpart252
  %419 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %420 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %419, i32 0, i32 4
  %421 = load float, float* %420, align 4
  %422 = fpext float %421 to double
  %423 = fcmp ogt double %422, 0.000000e+00
  br i1 %423, label %424, label %449

; <label>:424:                                    ; preds = %418
  %425 = load i32, i32* @x.125
  %426 = load i32, i32* @y.126
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %424
  %433 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %434 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %20, align 8
  %435 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %434, i32 0, i32 1
  %436 = getelementptr inbounds [3 x double], [3 x double]* %435, i32 0, i32 0
  %437 = load double*, double** %21, align 8
  %438 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %439 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %440 = load float*, float** %23, align 8
  call void @_ZN3pov8do_phongEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_PfS5_S5_(%"struct.pov::Finish_Struct"* %433, %"struct.pov::Ray_Struct"* %28, double* %436, double* %437, float* %438, float* %439, float* %440)
  %441 = load i32, i32* @x.125
  %442 = load i32, i32* @y.126
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %449

; <label>:449:                                    ; preds = %originalBBpart256, %418
  %450 = load i32, i32* @x.125
  %451 = load i32, i32* @y.126
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %449
  %458 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %459 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %458, i32 0, i32 2
  %460 = load float, float* %459, align 4
  %461 = fpext float %460 to double
  %462 = fcmp ogt double %461, 0.000000e+00
  %463 = load i32, i32* @x.125
  %464 = load i32, i32* @y.126
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %462, label %471, label %478

; <label>:471:                                    ; preds = %originalBBpart260
  %472 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %473 = getelementptr inbounds [3 x double], [3 x double]* %29, i32 0, i32 0
  %474 = load double*, double** %21, align 8
  %475 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %476 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %477 = load float*, float** %23, align 8
  call void @_ZN3pov11do_specularEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_PfS5_S5_(%"struct.pov::Finish_Struct"* %472, %"struct.pov::Ray_Struct"* %28, double* %473, double* %474, float* %475, float* %476, float* %477)
  br label %478

; <label>:478:                                    ; preds = %471, %originalBBpart260
  br label %479

; <label>:479:                                    ; preds = %478, %originalBBpart252
  %480 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %481 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %480, i32 0, i32 6
  %482 = load float, float* %481, align 4
  %483 = fpext float %482 to double
  %484 = fcmp ogt double %483, 0.000000e+00
  br i1 %484, label %485, label %490

; <label>:485:                                    ; preds = %479
  %486 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %487 = load double*, double** %21, align 8
  %488 = load double*, double** %19, align 8
  %489 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  call void @_ZN3povL7do_iridEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_Pf(%"struct.pov::Finish_Struct"* %486, %"struct.pov::Ray_Struct"* %28, double* %487, double* %488, float* %489)
  br label %490

; <label>:490:                                    ; preds = %485, %479
  %491 = load i32, i32* @x.125
  %492 = load i32, i32* @y.126
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %490
  %499 = load i32, i32* @x.125
  %500 = load i32, i32* @y.126
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %507

; <label>:507:                                    ; preds = %originalBBpart264, %originalBBpart244
  %508 = load i32, i32* %38, align 4
  %509 = add nsw i32 %508, 1
  store i32 %509, i32* %38, align 4
  br label %197

; <label>:510:                                    ; preds = %197
  %511 = load i32, i32* %37, align 4
  %512 = sitofp i32 %511 to double
  %513 = load double, double* %35, align 8
  %514 = load double, double* %35, align 8
  %515 = fmul double %513, %514
  %516 = fdiv double %512, %515
  store double %516, double* %40, align 8
  %517 = load double, double* %40, align 8
  %518 = load double, double* %41, align 8
  %519 = fsub double %517, %518
  %520 = load double, double* %41, align 8
  %521 = fdiv double %519, %520
  %522 = load double, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 3), align 8
  %523 = fcmp olt double %521, %522
  br i1 %523, label %550, label %524

; <label>:524:                                    ; preds = %510
  %525 = load i32, i32* @x.125
  %526 = load i32, i32* @y.126
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %524
  %533 = load i32, i32* %39, align 4
  %534 = icmp eq i32 %533, 0
  %535 = load i32, i32* @x.125
  %536 = load i32, i32* @y.126
  %537 = sub i32 %535, 1
  %538 = mul i32 %535, %537
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %540, %541
  br i1 %542, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %534, label %550, label %543

; <label>:543:                                    ; preds = %originalBBpart268
  %544 = load i32, i32* %37, align 4
  %545 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 4), align 8
  %546 = icmp slt i32 %544, %545
  br i1 %546, label %547, label %612

; <label>:547:                                    ; preds = %543
  %548 = load i32, i32* %37, align 4
  %549 = icmp sgt i32 %548, 0
  br i1 %549, label %550, label %612

; <label>:550:                                    ; preds = %547, %originalBBpart268, %510
  %551 = load i32, i32* %39, align 4
  %552 = icmp sgt i32 %551, 0
  br i1 %552, label %553, label %554

; <label>:553:                                    ; preds = %550
  store i32 1, i32* %42, align 4
  br label %554

; <label>:554:                                    ; preds = %553, %550
  %555 = load i32, i32* @x.125
  %556 = load i32, i32* @y.126
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %554
  %563 = load double, double* %40, align 8
  store double %563, double* %41, align 8
  %564 = load double, double* %41, align 8
  %565 = fcmp oeq double %564, 0.000000e+00
  %566 = load i32, i32* @x.125
  %567 = load i32, i32* @y.126
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %565, label %574, label %591

; <label>:574:                                    ; preds = %originalBBpart272
  %575 = load i32, i32* @x.125
  %576 = load i32, i32* @y.126
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %574
  store double 1.000000e-16, double* %41, align 8
  %583 = load i32, i32* @x.125
  %584 = load i32, i32* @y.126
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %591

; <label>:591:                                    ; preds = %originalBBpart276, %originalBBpart272
  %592 = load i32, i32* @x.125
  %593 = load i32, i32* @y.126
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %591
  %600 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %601 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %600, float* %601)
  %602 = load double, double* %35, align 8
  store double %602, double* %34, align 8
  %603 = load i32, i32* %37, align 4
  store i32 %603, i32* %36, align 4
  %604 = load i32, i32* @x.125
  %605 = load i32, i32* @y.126
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %612

; <label>:612:                                    ; preds = %originalBBpart280, %547, %543
  %613 = load i32, i32* @x.125
  %614 = load i32, i32* @y.126
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %612
  %621 = load i32, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %622 = icmp ne i32 %621, 0
  %623 = load i32, i32* @x.125
  %624 = load i32, i32* @y.126
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %622, label %631, label %633

; <label>:631:                                    ; preds = %originalBBpart284
  %632 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 14, i32 6), align 8
  store i32 %632, i32* %39, align 4
  br label %639

; <label>:633:                                    ; preds = %originalBBpart284
  %634 = load double, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 14, i32 5), align 8
  %635 = load double, double* %33, align 8
  %636 = fadd double %635, %634
  store double %636, double* %33, align 8
  %637 = load i32, i32* %39, align 4
  %638 = add nsw i32 %637, 1
  store i32 %638, i32* %39, align 4
  br label %639

; <label>:639:                                    ; preds = %633, %631
  br label %158

; <label>:640:                                    ; preds = %166
  %641 = load i32, i32* %42, align 4
  %642 = icmp ne i32 %641, 0
  br i1 %642, label %643, label %660

; <label>:643:                                    ; preds = %640
  %644 = load i32, i32* @x.125
  %645 = load i32, i32* @y.126
  %646 = sub i32 %644, 1
  %647 = mul i32 %644, %646
  %648 = urem i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = icmp slt i32 %645, 10
  %651 = or i1 %649, %650
  br i1 %651, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %643
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 125))
  %652 = load i32, i32* @x.125
  %653 = load i32, i32* @y.126
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %660

; <label>:660:                                    ; preds = %originalBBpart288, %640
  %661 = load i32, i32* @x.125
  %662 = load i32, i32* @y.126
  %663 = sub i32 %661, 1
  %664 = mul i32 %661, %663
  %665 = urem i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %662, 10
  %668 = or i1 %666, %667
  br i1 %668, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %660
  %669 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %670 = load double, double* %34, align 8
  %671 = fmul double 0x400921FB54442D18, %670
  %672 = load double, double* %34, align 8
  %673 = fmul double %671, %672
  %674 = fdiv double 1.000000e+00, %673
  %675 = fptrunc double %674 to float
  call void @_ZN3pov8VScaleEqEPff(float* %669, float %675)
  %676 = load float*, float** %24, align 8
  %677 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPfPKf(float* %676, float* %677)
  %678 = load double, double* %34, align 8
  store double %678, double* @_ZN3pov11previousRadE, align 8
  %679 = load i32, i32* %36, align 4
  store i32 %679, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %680 = load i32, i32* @x.125
  %681 = load i32, i32* @y.126
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBBpart2124, label %originalBB90alteredBB

originalBBpart2124:                               ; preds = %originalBB90
  br label %688

; <label>:688:                                    ; preds = %originalBBpart2124, %111, %originalBBpart24
  %689 = load i32, i32* @x.125
  %690 = load i32, i32* @y.126
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %688
  %697 = load i32, i32* @x.125
  %698 = load i32, i32* @y.126
  %699 = sub i32 %697, 1
  %700 = mul i32 %697, %699
  %701 = urem i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = icmp slt i32 %698, 10
  %704 = or i1 %702, %703
  br i1 %704, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %9
  %705 = alloca %"struct.pov::Finish_Struct"*, align 8
  %706 = alloca double*, align 8
  %707 = alloca %"struct.pov::Ray_Struct"*, align 8
  %708 = alloca double*, align 8
  %709 = alloca double*, align 8
  %710 = alloca float*, align 8
  %711 = alloca float*, align 8
  %712 = alloca double, align 8
  %713 = alloca %"struct.pov::Object_Struct"*, align 8
  %714 = alloca double, align 8
  %715 = alloca %"struct.pov::Ray_Struct", align 8
  %716 = alloca [3 x double], align 16
  %717 = alloca [5 x float], align 16
  %718 = alloca [5 x float], align 16
  %719 = alloca [5 x float], align 16
  %720 = alloca double, align 8
  %721 = alloca double, align 8
  %722 = alloca double, align 8
  %723 = alloca i32, align 4
  %724 = alloca i32, align 4
  %725 = alloca i32, align 4
  %726 = alloca i32, align 4
  %727 = alloca double, align 8
  %728 = alloca double, align 8
  %729 = alloca i32, align 4
  %730 = alloca double, align 8
  %731 = alloca i32, align 4
  %732 = alloca i32, align 4
  store %"struct.pov::Finish_Struct"* %0, %"struct.pov::Finish_Struct"** %705, align 8
  store double* %1, double** %706, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %707, align 8
  store double* %3, double** %708, align 8
  store double* %4, double** %709, align 8
  store float* %5, float** %710, align 8
  store float* %6, float** %711, align 8
  store double %7, double* %712, align 8
  store %"struct.pov::Object_Struct"* %8, %"struct.pov::Object_Struct"** %713, align 8
  store double 0.000000e+00, double* %727, align 8
  store double 1.000000e-16, double* %728, align 8
  store i32 0, i32* %729, align 4
  %733 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 0), align 8
  %734 = icmp ne i32 %733, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %59
  %735 = load float*, float** %24, align 8
  call void @_ZN3pov12Make_ColourAEPffffff(float* %735, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %89
  %736 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %737 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %736, i32 0, i32 4
  %738 = load float, float* %737, align 4
  %739 = fpext float %738 to double
  %740 = fcmp oeq double %739, 0.000000e+00
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %138
  %741 = load float*, float** %24, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %741, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %742 = load double, double* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 14, i32 3), align 8
  store double %742, double* %33, align 8
  %743 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  call void @_ZN3pov11Make_ColourEPffff(float* %743, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  store i32 -1, i32* %36, align 4
  store i32 0, i32* %39, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %177
  %744 = load i32, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  store i32 %744, i32* %37, align 4
  %745 = load double, double* @_ZN3pov11previousRadE, align 8
  store double %745, double* %35, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %281
  %746 = load double, double* %43, align 8
  %747 = fcmp olt double %746, 1.000000e-01
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %300
  store double 1.000000e-01, double* %43, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %317
  %748 = load double, double* %43, align 8
  %749 = call double @fabs(double %748) #5
  %_ = fsub double -0.000000e+00, 1.000000e+00
  %gen = fadd double %_, %749
  %_27 = fsub double -0.000000e+00, 1.000000e+00
  %gen28 = fadd double %_27, %749
  %_29 = fsub double 1.000000e+00, %749
  %gen30 = fmul double %_29, %749
  %_31 = fsub double 1.000000e+00, %749
  %gen32 = fmul double %_31, %749
  %_33 = fsub double -0.000000e+00, 1.000000e+00
  %gen34 = fadd double %_33, %749
  %750 = fdiv double 1.000000e+00, %749
  store double %750, double* %43, align 8
  %751 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %752 = load double, double* %43, align 8
  %753 = fptrunc double %752 to float
  call void @_ZN3pov8VScaleEqEPff(float* %751, float %753)
  %754 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %26, align 8
  %755 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %754, i32 0, i32 13
  %756 = load i32, i32* %755, align 4
  %757 = zext i32 %756 to i64
  %_35 = sub i64 %757, 16384
  %gen36 = mul i64 %_35, 16384
  %_37 = sub i64 %757, 16384
  %gen38 = mul i64 %_37, 16384
  %758 = and i64 %757, 16384
  %759 = icmp ne i64 %758, 0
  br label %originalBB26

originalBB42alteredBB:                            ; preds = %originalBB42, %352
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %370
  %760 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %761 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %760, i32 0, i32 0
  %762 = load float, float* %761, align 4
  %763 = fpext float %762 to double
  %764 = fcmp ogt double %763, 0.000000e+00
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %399
  %765 = load i32, i32* @_ZN3pov21Radiosity_Trace_LevelE, align 4
  %766 = icmp sle i32 %765, 1
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %424
  %767 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %768 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %20, align 8
  %769 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %768, i32 0, i32 1
  %770 = getelementptr inbounds [3 x double], [3 x double]* %769, i32 0, i32 0
  %771 = load double*, double** %21, align 8
  %772 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  %773 = getelementptr inbounds [5 x float], [5 x float]* %30, i32 0, i32 0
  %774 = load float*, float** %23, align 8
  call void @_ZN3pov8do_phongEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_PfS5_S5_(%"struct.pov::Finish_Struct"* %767, %"struct.pov::Ray_Struct"* %28, double* %770, double* %771, float* %772, float* %773, float* %774)
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %449
  %775 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %18, align 8
  %776 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %775, i32 0, i32 2
  %777 = load float, float* %776, align 4
  %778 = fpext float %777 to double
  %779 = fcmp ogt double %778, 0.000000e+00
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %490
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %524
  %780 = load i32, i32* %39, align 4
  %781 = icmp eq i32 %780, 0
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %554
  %782 = load double, double* %40, align 8
  store double %782, double* %41, align 8
  %783 = load double, double* %41, align 8
  %784 = fcmp oeq double %783, 0.000000e+00
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %574
  store double 1.000000e-16, double* %41, align 8
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %591
  %785 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %786 = getelementptr inbounds [5 x float], [5 x float]* %31, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %785, float* %786)
  %787 = load double, double* %35, align 8
  store double %787, double* %34, align 8
  %788 = load i32, i32* %37, align 4
  store i32 %788, i32* %36, align 4
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %612
  %789 = load i32, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  %790 = icmp ne i32 %789, 0
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %643
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 125))
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %660
  %791 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  %792 = load double, double* %34, align 8
  %_91 = fsub double -0.000000e+00, 0x400921FB54442D18
  %gen92 = fadd double %_91, %792
  %_93 = fsub double 0x400921FB54442D18, %792
  %gen94 = fmul double %_93, %792
  %_95 = fsub double 0x400921FB54442D18, %792
  %gen96 = fmul double %_95, %792
  %_97 = fsub double -0.000000e+00, 0x400921FB54442D18
  %gen98 = fadd double %_97, %792
  %793 = fmul double 0x400921FB54442D18, %792
  %794 = load double, double* %34, align 8
  %_99 = fsub double -0.000000e+00, %793
  %gen100 = fadd double %_99, %794
  %_101 = fsub double -0.000000e+00, %793
  %gen102 = fadd double %_101, %794
  %_103 = fsub double -0.000000e+00, %793
  %gen104 = fadd double %_103, %794
  %_105 = fsub double -0.000000e+00, %793
  %gen106 = fadd double %_105, %794
  %_107 = fsub double -0.000000e+00, %793
  %gen108 = fadd double %_107, %794
  %_109 = fsub double -0.000000e+00, %793
  %gen110 = fadd double %_109, %794
  %_111 = fsub double %793, %794
  %gen112 = fmul double %_111, %794
  %_113 = fsub double %793, %794
  %gen114 = fmul double %_113, %794
  %795 = fmul double %793, %794
  %_115 = fsub double 1.000000e+00, %795
  %gen116 = fmul double %_115, %795
  %_117 = fsub double -0.000000e+00, 1.000000e+00
  %gen118 = fadd double %_117, %795
  %_119 = fsub double 1.000000e+00, %795
  %gen120 = fmul double %_119, %795
  %_121 = fsub double -0.000000e+00, 1.000000e+00
  %gen122 = fadd double %_121, %795
  %796 = fdiv double 1.000000e+00, %795
  %797 = fptrunc double %796 to float
  call void @_ZN3pov8VScaleEqEPff(float* %791, float %797)
  %798 = load float*, float** %24, align 8
  %799 = getelementptr inbounds [5 x float], [5 x float]* %32, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPfPKf(float* %798, float* %799)
  %800 = load double, double* %34, align 8
  store double %800, double* @_ZN3pov11previousRadE, align 8
  %801 = load i32, i32* %36, align 4
  store i32 %801, i32* @_ZN3pov22photonsAlreadyGatheredE, align 4
  br label %originalBB90

originalBB126alteredBB:                           ; preds = %originalBB126, %688
  br label %originalBB126
}

; Function Attrs: noinline uwtable
define internal i32 @_ZN3povL7RefractEPNS_15Interior_StructEPdPNS_10Ray_StructES2_S2_Pfd(%"struct.pov::Interior_Struct"*, double*, %"struct.pov::Ray_Struct"*, double*, double*, float*, double) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %"struct.pov::Interior_Struct"*, align 8
  %10 = alloca double*, align 8
  %11 = alloca %"struct.pov::Ray_Struct"*, align 8
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca float*, align 8
  %15 = alloca double, align 8
  %16 = alloca i32, align 4
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca [3 x double], align 16
  %22 = alloca %"struct.pov::Ray_Struct", align 8
  %23 = alloca [5 x float], align 16
  %24 = alloca [5 x float], align 16
  %25 = alloca [5 x float], align 16
  store %"struct.pov::Interior_Struct"* %0, %"struct.pov::Interior_Struct"** %9, align 8
  store double* %1, double** %10, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %11, align 8
  store double* %3, double** %12, align 8
  store double* %4, double** %13, align 8
  store float* %5, float** %14, align 8
  store double %6, double* %15, align 8
  %26 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  call void @_ZN3pov19Copy_Ray_ContainersEPNS_10Ray_StructES1_(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Ray_Struct"* %26)
  %27 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 0
  %28 = getelementptr inbounds [3 x double], [3 x double]* %27, i32 0, i32 0
  %29 = load double*, double** %10, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %28, double* %29)
  %30 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

; <label>:32:                                     ; preds = %7
  %33 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %34 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* @_ZN3pov11disp_nelemsE, align 4
  br label %36

; <label>:36:                                     ; preds = %32, %7
  store double 1.000000e+00, double* %19, align 8
  %37 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %38 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %37, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %75

; <label>:41:                                     ; preds = %36
  %42 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %42)
  %43 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %44 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %45 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %44, i32 0, i32 3
  %46 = load float, float* %45, align 4
  %47 = fpext float %46 to double
  %48 = fdiv double %43, %47
  store double %48, double* %18, align 8
  %49 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %50 = icmp sgt i32 %49, 1
  br i1 %50, label %51, label %74

; <label>:51:                                     ; preds = %41
  %52 = load i32, i32* @x.127
  %53 = load i32, i32* @y.128
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %51
  %60 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %61 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %62 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %61, i32 0, i32 4
  %63 = load float, float* %62, align 8
  %64 = fpext float %63 to double
  %65 = fdiv double %60, %64
  store double %65, double* %19, align 8
  %66 = load i32, i32* @x.127
  %67 = load i32, i32* @y.128
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %74

; <label>:74:                                     ; preds = %originalBBpart2, %41
  br label %316

; <label>:75:                                     ; preds = %36
  %76 = load i32, i32* @x.127
  %77 = load i32, i32* @y.128
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %75
  %84 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %85 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %84)
  store i32 %85, i32* %16, align 4
  %86 = icmp sge i32 %85, 0
  %87 = load i32, i32* @x.127
  %88 = load i32, i32* @y.128
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br i1 %86, label %95, label %212

; <label>:95:                                     ; preds = %originalBBpart215
  %96 = load i32, i32* %16, align 4
  call void @_ZN3pov8Ray_ExitEPNS_10Ray_StructEi(%"struct.pov::Ray_Struct"* %22, i32 %96)
  %97 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, -1
  br i1 %99, label %100, label %117

; <label>:100:                                    ; preds = %95
  %101 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %102 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %101, i32 0, i32 3
  %103 = load float, float* %102, align 4
  %104 = fpext float %103 to double
  %105 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 6), align 8
  %106 = fdiv double %104, %105
  store double %106, double* %18, align 8
  %107 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %108 = icmp sgt i32 %107, 1
  br i1 %108, label %109, label %116

; <label>:109:                                    ; preds = %100
  %110 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %111 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %110, i32 0, i32 4
  %112 = load float, float* %111, align 8
  %113 = fpext float %112 to double
  %114 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %115 = fdiv double %113, %114
  store double %115, double* %19, align 8
  br label %116

; <label>:116:                                    ; preds = %109, %100
  br label %211

; <label>:117:                                    ; preds = %95
  %118 = load i32, i32* %16, align 4
  %119 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = add nsw i32 %120, 1
  %122 = icmp eq i32 %118, %121
  br i1 %122, label %123, label %193

; <label>:123:                                    ; preds = %117
  %124 = load i32, i32* @x.127
  %125 = load i32, i32* @y.128
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %123
  %132 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %133 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %132, i32 0, i32 3
  %134 = load float, float* %133, align 4
  %135 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %136 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %137 = load i32, i32* %136, align 8
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %135, i64 0, i64 %138
  %140 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %139, align 8
  %141 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %140, i32 0, i32 3
  %142 = load float, float* %141, align 4
  %143 = fdiv float %134, %142
  %144 = fpext float %143 to double
  store double %144, double* %18, align 8
  %145 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %146 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %145, i64 0, i64 %148
  %150 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %149, align 8
  %151 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %150, i32 0, i32 2
  %152 = load i32, i32* %151, align 8
  %153 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %154 = icmp sgt i32 %152, %153
  %155 = load i32, i32* @x.127
  %156 = load i32, i32* @y.128
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart221, label %originalBB17alteredBB

originalBBpart221:                                ; preds = %originalBB17
  br i1 %154, label %163, label %175

; <label>:163:                                    ; preds = %originalBBpart221
  %164 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %175

; <label>:166:                                    ; preds = %163
  %167 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %168 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %169 = load i32, i32* %168, align 8
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %167, i64 0, i64 %170
  %172 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %171, align 8
  %173 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %172, i32 0, i32 2
  %174 = load i32, i32* %173, align 8
  store i32 %174, i32* @_ZN3pov11disp_nelemsE, align 4
  br label %175

; <label>:175:                                    ; preds = %166, %163, %originalBBpart221
  %176 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %177 = icmp sgt i32 %176, 1
  br i1 %177, label %178, label %192

; <label>:178:                                    ; preds = %175
  %179 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %180 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %179, i32 0, i32 4
  %181 = load float, float* %180, align 8
  %182 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %183 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %184 = load i32, i32* %183, align 8
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %182, i64 0, i64 %185
  %187 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %186, align 8
  %188 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %187, i32 0, i32 4
  %189 = load float, float* %188, align 8
  %190 = fdiv float %181, %189
  %191 = fpext float %190 to double
  store double %191, double* %19, align 8
  br label %192

; <label>:192:                                    ; preds = %178, %175
  br label %210

; <label>:193:                                    ; preds = %117
  %194 = load i32, i32* @x.127
  %195 = load i32, i32* @y.128
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %193
  store double 1.000000e+00, double* %18, align 8
  %202 = load i32, i32* @x.127
  %203 = load i32, i32* @y.128
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %210

; <label>:210:                                    ; preds = %originalBBpart225, %192
  br label %211

; <label>:211:                                    ; preds = %210, %116
  br label %299

; <label>:212:                                    ; preds = %originalBBpart215
  %213 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %214 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %215 = load i32, i32* %214, align 8
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %213, i64 0, i64 %216
  %218 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %217, align 8
  %219 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %218, i32 0, i32 3
  %220 = load float, float* %219, align 4
  %221 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %222 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %221, i32 0, i32 3
  %223 = load float, float* %222, align 4
  %224 = fdiv float %220, %223
  %225 = fpext float %224 to double
  store double %225, double* %18, align 8
  %226 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %227 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %228 = load i32, i32* %227, align 8
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %226, i64 0, i64 %229
  %231 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %230, align 8
  %232 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %231, i32 0, i32 2
  %233 = load i32, i32* %232, align 8
  %234 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %235 = icmp sgt i32 %233, %234
  br i1 %235, label %236, label %264

; <label>:236:                                    ; preds = %212
  %237 = load i32, i32* @x.127
  %238 = load i32, i32* @y.128
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %236
  %245 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %246 = icmp eq i32 %245, 0
  %247 = load i32, i32* @x.127
  %248 = load i32, i32* @y.128
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %246, label %255, label %264

; <label>:255:                                    ; preds = %originalBBpart229
  %256 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %257 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %258 = load i32, i32* %257, align 8
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %256, i64 0, i64 %259
  %261 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %260, align 8
  %262 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %261, i32 0, i32 2
  %263 = load i32, i32* %262, align 8
  store i32 %263, i32* @_ZN3pov11disp_nelemsE, align 4
  br label %264

; <label>:264:                                    ; preds = %255, %originalBBpart229, %212
  %265 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %266 = icmp sgt i32 %265, 1
  br i1 %266, label %267, label %281

; <label>:267:                                    ; preds = %264
  %268 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %269 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %270 = load i32, i32* %269, align 8
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %268, i64 0, i64 %271
  %273 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %272, align 8
  %274 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %273, i32 0, i32 4
  %275 = load float, float* %274, align 8
  %276 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %277 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %276, i32 0, i32 4
  %278 = load float, float* %277, align 8
  %279 = fdiv float %275, %278
  %280 = fpext float %279 to double
  store double %280, double* %19, align 8
  br label %281

; <label>:281:                                    ; preds = %267, %264
  %282 = load i32, i32* @x.127
  %283 = load i32, i32* @y.128
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %281
  %290 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %290)
  %291 = load i32, i32* @x.127
  %292 = load i32, i32* @y.128
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %299

; <label>:299:                                    ; preds = %originalBBpart233, %211
  %300 = load i32, i32* @x.127
  %301 = load i32, i32* @y.128
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %299
  %308 = load i32, i32* @x.127
  %309 = load i32, i32* @y.128
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %316

; <label>:316:                                    ; preds = %originalBBpart237, %74
  %317 = load i32, i32* @x.127
  %318 = load i32, i32* @y.128
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %316
  %325 = load double, double* %18, align 8
  %326 = fsub double %325, 1.000000e+00
  %327 = call double @fabs(double %326) #5
  %328 = fcmp olt double %327, 1.000000e-07
  %329 = load i32, i32* @x.127
  %330 = load i32, i32* @y.128
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart253, label %originalBB39alteredBB

originalBBpart253:                                ; preds = %originalBB39
  br i1 %328, label %337, label %355

; <label>:337:                                    ; preds = %originalBBpart253
  %338 = load double, double* %19, align 8
  %339 = fsub double %338, 1.000000e+00
  %340 = call double @fabs(double %339) #5
  %341 = fcmp olt double %340, 1.000000e-07
  br i1 %341, label %342, label %355

; <label>:342:                                    ; preds = %337
  %343 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 1
  %344 = getelementptr inbounds [3 x double], [3 x double]* %343, i32 0, i32 0
  %345 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %346 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %345, i32 0, i32 1
  %347 = getelementptr inbounds [3 x double], [3 x double]* %346, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %344, double* %347)
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 103))
  %348 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %349 = add nsw i32 %348, 1
  store i32 %349, i32* @_ZN3pov11Trace_LevelE, align 4
  %350 = load float*, float** %14, align 8
  %351 = load double, double* %15, align 8
  %352 = call double @_ZN3pov5TraceEPNS_10Ray_StructEPfd(%"struct.pov::Ray_Struct"* %22, float* %350, double %351)
  %353 = load i32, i32* @_ZN3pov11Trace_LevelE, align 4
  %354 = add nsw i32 %353, -1
  store i32 %354, i32* @_ZN3pov11Trace_LevelE, align 4
  br label %626

; <label>:355:                                    ; preds = %337, %originalBBpart253
  %356 = load i32, i32* @x.127
  %357 = load i32, i32* @y.128
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %355
  %364 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %365 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %364, i32 0, i32 1
  %366 = getelementptr inbounds [3 x double], [3 x double]* %365, i32 0, i32 0
  %367 = load double*, double** %12, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %17, double* %366, double* %367)
  %368 = load double, double* %17, align 8
  %369 = fcmp ole double %368, 0.000000e+00
  %370 = load i32, i32* @x.127
  %371 = load i32, i32* @y.128
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %369, label %378, label %383

; <label>:378:                                    ; preds = %originalBBpart257
  %379 = getelementptr inbounds [3 x double], [3 x double]* %21, i32 0, i32 0
  %380 = load double*, double** %12, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %379, double* %380)
  %381 = load double, double* %17, align 8
  %382 = fsub double -0.000000e+00, %381
  store double %382, double* %17, align 8
  br label %399

; <label>:383:                                    ; preds = %originalBBpart257
  %384 = load double*, double** %12, align 8
  %385 = getelementptr inbounds double, double* %384, i64 0
  %386 = load double, double* %385, align 8
  %387 = fsub double -0.000000e+00, %386
  %388 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 0
  store double %387, double* %388, align 16
  %389 = load double*, double** %12, align 8
  %390 = getelementptr inbounds double, double* %389, i64 1
  %391 = load double, double* %390, align 8
  %392 = fsub double -0.000000e+00, %391
  %393 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 1
  store double %392, double* %393, align 8
  %394 = load double*, double** %12, align 8
  %395 = getelementptr inbounds double, double* %394, i64 2
  %396 = load double, double* %395, align 8
  %397 = fsub double -0.000000e+00, %396
  %398 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 2
  store double %397, double* %398, align 16
  br label %399

; <label>:399:                                    ; preds = %383, %378
  %400 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %401 = icmp sgt i32 %400, 0
  br i1 %401, label %445, label %402

; <label>:402:                                    ; preds = %399
  %403 = load i32, i32* @x.127
  %404 = load i32, i32* @y.128
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %402
  %411 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %412 = icmp sle i32 %411, 1
  %413 = load i32, i32* @x.127
  %414 = load i32, i32* @y.128
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %412, label %445, label %421

; <label>:421:                                    ; preds = %originalBBpart261
  %422 = load double, double* %19, align 8
  %423 = fsub double %422, 1.000000e+00
  %424 = call double @fabs(double %423) #5
  %425 = fcmp olt double %424, 1.000000e-07
  br i1 %425, label %445, label %426

; <label>:426:                                    ; preds = %421
  %427 = load i32, i32* @x.127
  %428 = load i32, i32* @y.128
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %426
  %435 = load i32, i32* @_ZN3pov18firstRadiosityPassE, align 4
  %436 = icmp ne i32 %435, 0
  %437 = load i32, i32* @x.127
  %438 = load i32, i32* @y.128
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br i1 %436, label %445, label %500

; <label>:445:                                    ; preds = %originalBBpart265, %421, %originalBBpart261, %399
  %446 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %447 = icmp sgt i32 %446, 1
  br i1 %447, label %448, label %473

; <label>:448:                                    ; preds = %445
  %449 = load i32, i32* @x.127
  %450 = load i32, i32* @y.128
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %448
  %457 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %458 = icmp sgt i32 %457, 0
  %459 = load i32, i32* @x.127
  %460 = load i32, i32* @y.128
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %458, label %467, label %473

; <label>:467:                                    ; preds = %originalBBpart269
  %468 = load double, double* %18, align 8
  %469 = load double, double* %19, align 8
  %470 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %471 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %472 = call double @_ZN3povL11Element_IOREddii(double %468, double %469, i32 %470, i32 %471)
  store double %472, double* %18, align 8
  br label %473

; <label>:473:                                    ; preds = %467, %originalBBpart269, %445
  %474 = load i32, i32* @x.127
  %475 = load i32, i32* @y.128
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %473
  %482 = load float*, float** %14, align 8
  %483 = load double, double* %18, align 8
  %484 = load double*, double** %10, align 8
  %485 = load double*, double** %12, align 8
  %486 = getelementptr inbounds [3 x double], [3 x double]* %21, i32 0, i32 0
  %487 = load double, double* %17, align 8
  %488 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %489 = load double, double* %15, align 8
  %490 = load double*, double** %13, align 8
  %491 = call i32 @_ZN3povL12Refract_GutsEPfdPdS1_S1_dPNS_10Ray_StructES3_dS1_(float* %482, double %483, double* %484, double* %485, double* %486, double %487, %"struct.pov::Ray_Struct"* %488, %"struct.pov::Ray_Struct"* %22, double %489, double* %490)
  store i32 %491, i32* %8, align 4
  %492 = load i32, i32* @x.127
  %493 = load i32, i32* @y.128
  %494 = sub i32 %492, 1
  %495 = mul i32 %492, %494
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %497, %498
  br i1 %499, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %627

; <label>:500:                                    ; preds = %originalBBpart265
  %501 = load i32, i32* @x.127
  %502 = load i32, i32* @y.128
  %503 = sub i32 %501, 1
  %504 = mul i32 %501, %503
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %506, %507
  br i1 %508, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %500
  %509 = load double, double* %18, align 8
  %510 = load double, double* %19, align 8
  %511 = call double @sqrt(double %510) #7
  %512 = fdiv double %509, %511
  store double %512, double* %18, align 8
  %513 = load double, double* %19, align 8
  %514 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %515 = sub nsw i32 %514, 1
  %516 = sitofp i32 %515 to double
  %517 = fdiv double 1.000000e+00, %516
  %518 = call double @pow(double %513, double %517) #7
  store double %518, double* %20, align 8
  %519 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  store float 0.000000e+00, float* %519, align 16
  %520 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  store float 0.000000e+00, float* %520, align 4
  %521 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 2
  store float 0.000000e+00, float* %521, align 8
  store i32 1, i32* @_ZN3pov9disp_elemE, align 4
  %522 = load i32, i32* @x.127
  %523 = load i32, i32* @y.128
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBBpart2107, label %originalBB75alteredBB

originalBBpart2107:                               ; preds = %originalBB75
  br label %530

; <label>:530:                                    ; preds = %originalBBpart2119, %originalBBpart2107
  %531 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %532 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %533 = icmp sle i32 %531, %532
  br i1 %533, label %534, label %594

; <label>:534:                                    ; preds = %530
  %535 = getelementptr inbounds [5 x float], [5 x float]* %25, i32 0, i32 0
  %536 = load double, double* %18, align 8
  %537 = load double*, double** %10, align 8
  %538 = load double*, double** %12, align 8
  %539 = getelementptr inbounds [3 x double], [3 x double]* %21, i32 0, i32 0
  %540 = load double, double* %17, align 8
  %541 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %542 = load double, double* %15, align 8
  %543 = load double*, double** %13, align 8
  %544 = call i32 @_ZN3povL12Refract_GutsEPfdPdS1_S1_dPNS_10Ray_StructES3_dS1_(float* %535, double %536, double* %537, double* %538, double* %539, double %540, %"struct.pov::Ray_Struct"* %541, %"struct.pov::Ray_Struct"* %22, double %542, double* %543)
  %545 = getelementptr inbounds [5 x float], [5 x float]* %23, i32 0, i32 0
  %546 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %547 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  call void @_ZN3povL22Dispersion_Element_HueEPfii(float* %545, i32 %546, i32 %547)
  %548 = getelementptr inbounds [5 x float], [5 x float]* %25, i64 0, i64 0
  %549 = load float, float* %548, align 16
  %550 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 0
  %551 = load float, float* %550, align 16
  %552 = fmul float %549, %551
  %553 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  %554 = load float, float* %553, align 16
  %555 = fadd float %554, %552
  store float %555, float* %553, align 16
  %556 = getelementptr inbounds [5 x float], [5 x float]* %25, i64 0, i64 1
  %557 = load float, float* %556, align 4
  %558 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 1
  %559 = load float, float* %558, align 4
  %560 = fmul float %557, %559
  %561 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  %562 = load float, float* %561, align 4
  %563 = fadd float %562, %560
  store float %563, float* %561, align 4
  %564 = getelementptr inbounds [5 x float], [5 x float]* %25, i64 0, i64 2
  %565 = load float, float* %564, align 8
  %566 = getelementptr inbounds [5 x float], [5 x float]* %23, i64 0, i64 2
  %567 = load float, float* %566, align 8
  %568 = fmul float %565, %567
  %569 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 2
  %570 = load float, float* %569, align 8
  %571 = fadd float %570, %568
  store float %571, float* %569, align 8
  %572 = load double, double* %20, align 8
  %573 = load double, double* %18, align 8
  %574 = fmul double %573, %572
  store double %574, double* %18, align 8
  br label %575

; <label>:575:                                    ; preds = %534
  %576 = load i32, i32* @x.127
  %577 = load i32, i32* @y.128
  %578 = sub i32 %576, 1
  %579 = mul i32 %576, %578
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %581, %582
  br i1 %583, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %575
  %584 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %585 = add nsw i32 %584, 1
  store i32 %585, i32* @_ZN3pov9disp_elemE, align 4
  %586 = load i32, i32* @x.127
  %587 = load i32, i32* @y.128
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBBpart2119, label %originalBB109alteredBB

originalBBpart2119:                               ; preds = %originalBB109
  br label %530

; <label>:594:                                    ; preds = %530
  %595 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  %596 = load float, float* %595, align 16
  %597 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %598 = sitofp i32 %597 to float
  %599 = fdiv float %596, %598
  %600 = fpext float %599 to double
  %601 = fmul double %600, 3.000000e+00
  %602 = fptrunc double %601 to float
  %603 = load float*, float** %14, align 8
  %604 = getelementptr inbounds float, float* %603, i64 0
  store float %602, float* %604, align 4
  %605 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  %606 = load float, float* %605, align 4
  %607 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %608 = sitofp i32 %607 to float
  %609 = fdiv float %606, %608
  %610 = fpext float %609 to double
  %611 = fmul double %610, 3.000000e+00
  %612 = fptrunc double %611 to float
  %613 = load float*, float** %14, align 8
  %614 = getelementptr inbounds float, float* %613, i64 1
  store float %612, float* %614, align 4
  %615 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 2
  %616 = load float, float* %615, align 8
  %617 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %618 = sitofp i32 %617 to float
  %619 = fdiv float %616, %618
  %620 = fpext float %619 to double
  %621 = fmul double %620, 3.000000e+00
  %622 = fptrunc double %621 to float
  %623 = load float*, float** %14, align 8
  %624 = getelementptr inbounds float, float* %623, i64 2
  store float %622, float* %624, align 4
  store i32 0, i32* @_ZN3pov9disp_elemE, align 4
  store i32 0, i32* @_ZN3pov11disp_nelemsE, align 4
  br label %625

; <label>:625:                                    ; preds = %594
  br label %626

; <label>:626:                                    ; preds = %625, %342
  store i32 0, i32* %8, align 4
  br label %627

; <label>:627:                                    ; preds = %626, %originalBBpart273
  %628 = load i32, i32* @x.127
  %629 = load i32, i32* @y.128
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %originalBB121alteredBB, %627
  %636 = load i32, i32* %8, align 4
  %637 = load i32, i32* @x.127
  %638 = load i32, i32* @y.128
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  ret i32 %636

originalBBalteredBB:                              ; preds = %originalBB, %51
  %645 = load double, double* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 7), align 8
  %646 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %647 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %646, i32 0, i32 4
  %648 = load float, float* %647, align 8
  %649 = fpext float %648 to double
  %_ = fsub double %645, %649
  %gen = fmul double %_, %649
  %_1 = fsub double %645, %649
  %gen2 = fmul double %_1, %649
  %_3 = fsub double %645, %649
  %gen4 = fmul double %_3, %649
  %_5 = fsub double %645, %649
  %gen6 = fmul double %_5, %649
  %_7 = fsub double %645, %649
  %gen8 = fmul double %_7, %649
  %_9 = fsub double -0.000000e+00, %645
  %gen10 = fadd double %_9, %649
  %_11 = fsub double %645, %649
  %gen12 = fmul double %_11, %649
  %650 = fdiv double %645, %649
  store double %650, double* %19, align 8
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %75
  %651 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %652 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %651)
  store i32 %652, i32* %16, align 4
  %653 = icmp sge i32 %652, 0
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %123
  %654 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  %655 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %654, i32 0, i32 3
  %656 = load float, float* %655, align 4
  %657 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %658 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %659 = load i32, i32* %658, align 8
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %657, i64 0, i64 %660
  %662 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %661, align 8
  %663 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %662, i32 0, i32 3
  %664 = load float, float* %663, align 4
  %_18 = fsub float %656, %664
  %gen19 = fmul float %_18, %664
  %665 = fdiv float %656, %664
  %666 = fpext float %665 to double
  store double %666, double* %18, align 8
  %667 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 4
  %668 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %22, i32 0, i32 2
  %669 = load i32, i32* %668, align 8
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %667, i64 0, i64 %670
  %672 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %671, align 8
  %673 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %672, i32 0, i32 2
  %674 = load i32, i32* %673, align 8
  %675 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %676 = icmp sgt i32 %674, %675
  br label %originalBB17

originalBB23alteredBB:                            ; preds = %originalBB23, %193
  store double 1.000000e+00, double* %18, align 8
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %236
  %677 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %678 = icmp eq i32 %677, 0
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %281
  %679 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %9, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %22, %"struct.pov::Interior_Struct"* %679)
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %299
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %316
  %680 = load double, double* %18, align 8
  %_40 = fsub double -0.000000e+00, %680
  %gen41 = fadd double %_40, 1.000000e+00
  %_42 = fsub double -0.000000e+00, %680
  %gen43 = fadd double %_42, 1.000000e+00
  %_44 = fsub double %680, 1.000000e+00
  %gen45 = fmul double %_44, 1.000000e+00
  %_46 = fsub double %680, 1.000000e+00
  %gen47 = fmul double %_46, 1.000000e+00
  %_48 = fsub double %680, 1.000000e+00
  %gen49 = fmul double %_48, 1.000000e+00
  %_50 = fsub double %680, 1.000000e+00
  %gen51 = fmul double %_50, 1.000000e+00
  %681 = fsub double %680, 1.000000e+00
  %682 = call double @fabs(double %681) #5
  %683 = fcmp olt double %682, 1.000000e-07
  br label %originalBB39

originalBB55alteredBB:                            ; preds = %originalBB55, %355
  %684 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %685 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %684, i32 0, i32 1
  %686 = getelementptr inbounds [3 x double], [3 x double]* %685, i32 0, i32 0
  %687 = load double*, double** %12, align 8
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %17, double* %686, double* %687)
  %688 = load double, double* %17, align 8
  %689 = fcmp ole double %688, 0.000000e+00
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %402
  %690 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %691 = icmp sle i32 %690, 1
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %426
  %692 = load i32, i32* @_ZN3pov18firstRadiosityPassE, align 4
  %693 = icmp ne i32 %692, 0
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %448
  %694 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %695 = icmp sgt i32 %694, 0
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %473
  %696 = load float*, float** %14, align 8
  %697 = load double, double* %18, align 8
  %698 = load double*, double** %10, align 8
  %699 = load double*, double** %12, align 8
  %700 = getelementptr inbounds [3 x double], [3 x double]* %21, i32 0, i32 0
  %701 = load double, double* %17, align 8
  %702 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %11, align 8
  %703 = load double, double* %15, align 8
  %704 = load double*, double** %13, align 8
  %705 = call i32 @_ZN3povL12Refract_GutsEPfdPdS1_S1_dPNS_10Ray_StructES3_dS1_(float* %696, double %697, double* %698, double* %699, double* %700, double %701, %"struct.pov::Ray_Struct"* %702, %"struct.pov::Ray_Struct"* %22, double %703, double* %704)
  store i32 %705, i32* %8, align 4
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %500
  %706 = load double, double* %18, align 8
  %707 = load double, double* %19, align 8
  %708 = call double @sqrt(double %707) #7
  %_76 = fsub double -0.000000e+00, %706
  %gen77 = fadd double %_76, %708
  %_78 = fsub double -0.000000e+00, %706
  %gen79 = fadd double %_78, %708
  %_80 = fsub double %706, %708
  %gen81 = fmul double %_80, %708
  %_82 = fsub double %706, %708
  %gen83 = fmul double %_82, %708
  %709 = fdiv double %706, %708
  store double %709, double* %18, align 8
  %710 = load double, double* %19, align 8
  %711 = load i32, i32* @_ZN3pov11disp_nelemsE, align 4
  %_84 = shl i32 %711, 1
  %_85 = sub i32 %711, 1
  %gen86 = mul i32 %_85, 1
  %_87 = sub i32 %711, 1
  %gen88 = mul i32 %_87, 1
  %_89 = sub i32 0, %711
  %gen90 = add i32 %_89, 1
  %_91 = sub i32 %711, 1
  %gen92 = mul i32 %_91, 1
  %_93 = sub i32 0, %711
  %gen94 = add i32 %_93, 1
  %_95 = shl i32 %711, 1
  %_96 = sub i32 0, %711
  %gen97 = add i32 %_96, 1
  %_98 = sub i32 0, %711
  %gen99 = add i32 %_98, 1
  %712 = sub nsw i32 %711, 1
  %713 = sitofp i32 %712 to double
  %_100 = fsub double -0.000000e+00, 1.000000e+00
  %gen101 = fadd double %_100, %713
  %_102 = fsub double -0.000000e+00, 1.000000e+00
  %gen103 = fadd double %_102, %713
  %_104 = fsub double 1.000000e+00, %713
  %gen105 = fmul double %_104, %713
  %714 = fdiv double 1.000000e+00, %713
  %715 = call double @pow(double %710, double %714) #7
  store double %715, double* %20, align 8
  %716 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 0
  store float 0.000000e+00, float* %716, align 16
  %717 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 1
  store float 0.000000e+00, float* %717, align 4
  %718 = getelementptr inbounds [5 x float], [5 x float]* %24, i64 0, i64 2
  store float 0.000000e+00, float* %718, align 8
  store i32 1, i32* @_ZN3pov9disp_elemE, align 4
  br label %originalBB75

originalBB109alteredBB:                           ; preds = %originalBB109, %575
  %719 = load i32, i32* @_ZN3pov9disp_elemE, align 4
  %_110 = sub i32 0, %719
  %gen111 = add i32 %_110, 1
  %_112 = sub i32 0, %719
  %gen113 = add i32 %_112, 1
  %_114 = sub i32 0, %719
  %gen115 = add i32 %_114, 1
  %_116 = sub i32 0, %719
  %gen117 = add i32 %_116, 1
  %720 = add nsw i32 %719, 1
  store i32 %720, i32* @_ZN3pov9disp_elemE, align 4
  br label %originalBB109

originalBB121alteredBB:                           ; preds = %originalBB121, %627
  %721 = load i32, i32* %8, align 4
  br label %originalBB121
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL17Diffuse_One_LightEPNS_19Light_Source_StructEiPdPNS_13Finish_StructES2_PNS_10Ray_StructES2_PfS7_dPNS_13Object_StructE(%"struct.pov::Light_Source_Struct"*, i32, double*, %"struct.pov::Finish_Struct"*, double*, %"struct.pov::Ray_Struct"*, double*, float*, float*, double, %"struct.pov::Object_Struct"*) #0 {
  %12 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca double*, align 8
  %15 = alloca %"struct.pov::Finish_Struct"*, align 8
  %16 = alloca double*, align 8
  %17 = alloca %"struct.pov::Ray_Struct"*, align 8
  %18 = alloca double*, align 8
  %19 = alloca float*, align 8
  %20 = alloca float*, align 8
  %21 = alloca double, align 8
  %22 = alloca %"struct.pov::Object_Struct"*, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca %"struct.pov::Ray_Struct", align 8
  %26 = alloca [5 x float], align 16
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %12, align 8
  store i32 %1, i32* %13, align 4
  store double* %2, double** %14, align 8
  store %"struct.pov::Finish_Struct"* %3, %"struct.pov::Finish_Struct"** %15, align 8
  store double* %4, double** %16, align 8
  store %"struct.pov::Ray_Struct"* %5, %"struct.pov::Ray_Struct"** %17, align 8
  store double* %6, double** %18, align 8
  store float* %7, float** %19, align 8
  store float* %8, float** %20, align 8
  store double %9, double* %21, align 8
  store %"struct.pov::Object_Struct"* %10, %"struct.pov::Object_Struct"** %22, align 8
  %27 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %12, align 8
  %28 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %17, align 8
  %29 = load double*, double** %16, align 8
  %30 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  call void @_ZN3povL8do_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pf(%"struct.pov::Light_Source_Struct"* %27, double* %23, %"struct.pov::Ray_Struct"* %25, %"struct.pov::Ray_Struct"* %28, double* %29, float* %30)
  %31 = getelementptr inbounds [5 x float], [5 x float]* %26, i64 0, i64 0
  %32 = load float, float* %31, align 16
  %33 = call float @_ZSt4fabsf(float %32)
  %34 = fpext float %33 to double
  %35 = fcmp olt double %34, 1.000000e-07
  br i1 %35, label %36, label %49

; <label>:36:                                     ; preds = %11
  %37 = getelementptr inbounds [5 x float], [5 x float]* %26, i64 0, i64 1
  %38 = load float, float* %37, align 4
  %39 = call float @_ZSt4fabsf(float %38)
  %40 = fpext float %39 to double
  %41 = fcmp olt double %40, 1.000000e-07
  br i1 %41, label %42, label %49

; <label>:42:                                     ; preds = %36
  %43 = getelementptr inbounds [5 x float], [5 x float]* %26, i64 0, i64 2
  %44 = load float, float* %43, align 8
  %45 = call float @_ZSt4fabsf(float %44)
  %46 = fpext float %45 to double
  %47 = fcmp olt double %46, 1.000000e-07
  br i1 %47, label %48, label %49

; <label>:48:                                     ; preds = %42
  br label %405

; <label>:49:                                     ; preds = %42, %36, %11
  %50 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %22, align 8
  %51 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %50, i32 0, i32 13
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = and i64 %53, 16384
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %80, label %56

; <label>:56:                                     ; preds = %49
  %57 = load double*, double** %18, align 8
  %58 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %25, i32 0, i32 1
  %59 = getelementptr inbounds [3 x double], [3 x double]* %58, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %24, double* %57, double* %59)
  %60 = load double, double* %24, align 8
  %61 = fcmp olt double %60, 1.000000e-07
  br i1 %61, label %62, label %79

; <label>:62:                                     ; preds = %56
  %63 = load i32, i32* @x.129
  %64 = load i32, i32* @y.130
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %62
  %71 = load i32, i32* @x.129
  %72 = load i32, i32* @y.130
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %405

; <label>:79:                                     ; preds = %56
  br label %80

; <label>:80:                                     ; preds = %79, %49
  %81 = load i32, i32* @x.129
  %82 = load i32, i32* @y.130
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %80
  %89 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %90 = zext i32 %89 to i64
  %91 = and i64 %90, 4
  %92 = icmp ne i64 %91, 0
  %93 = load i32, i32* @x.129
  %94 = load i32, i32* @y.130
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart27, label %originalBB1alteredBB

originalBBpart27:                                 ; preds = %originalBB1
  br i1 %92, label %101, label %212

; <label>:101:                                    ; preds = %originalBBpart27
  %102 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %12, align 8
  %103 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %102, i32 0, i32 42
  %104 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %103, align 8
  %105 = icmp ne %"struct.pov::Object_Struct"* %104, null
  br i1 %105, label %112, label %106

; <label>:106:                                    ; preds = %101
  %107 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %12, align 8
  %108 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %107, i32 0, i32 27
  %109 = load i8, i8* %108, align 8
  %110 = zext i8 %109 to i32
  %111 = icmp ne i32 %110, 3
  br i1 %111, label %112, label %212

; <label>:112:                                    ; preds = %106, %101
  %113 = load i32, i32* @x.129
  %114 = load i32, i32* @y.130
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %originalBB9alteredBB, %112
  %121 = load i32, i32* %13, align 4
  %122 = icmp sge i32 %121, 0
  %123 = load i32, i32* @x.129
  %124 = load i32, i32* @y.130
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br i1 %122, label %131, label %205

; <label>:131:                                    ; preds = %originalBBpart211
  %132 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %133 = load i32, i32* %13, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %132, i64 %134
  %136 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %135, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %163

; <label>:139:                                    ; preds = %131
  %140 = load i32, i32* @x.129
  %141 = load i32, i32* @y.130
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %139
  %148 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  %149 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %150 = load i32, i32* %13, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %149, i64 %151
  %153 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %152, i32 0, i32 1
  %154 = getelementptr inbounds [5 x float], [5 x float]* %153, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %148, float* %154)
  %155 = load i32, i32* @x.129
  %156 = load i32, i32* @y.130
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %204

; <label>:163:                                    ; preds = %131
  %164 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %12, align 8
  %165 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %164, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 4096
  %168 = icmp ne i32 %167, 4096
  br i1 %168, label %169, label %187

; <label>:169:                                    ; preds = %163
  %170 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %12, align 8
  %171 = load double, double* %23, align 8
  %172 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %17, align 8
  %173 = load double*, double** %16, align 8
  %174 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  call void @_ZN3povL18block_light_sourceEPNS_19Light_Source_StructEdPNS_10Ray_StructES3_PdPf(%"struct.pov::Light_Source_Struct"* %170, double %171, %"struct.pov::Ray_Struct"* %25, %"struct.pov::Ray_Struct"* %172, double* %173, float* %174)
  %175 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %176 = load i32, i32* %13, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %175, i64 %177
  %179 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %178, i32 0, i32 0
  store i32 1, i32* %179, align 4
  %180 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %181 = load i32, i32* %13, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %180, i64 %182
  %184 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %183, i32 0, i32 1
  %185 = getelementptr inbounds [5 x float], [5 x float]* %184, i32 0, i32 0
  %186 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %185, float* %186)
  br label %187

; <label>:187:                                    ; preds = %169, %163
  %188 = load i32, i32* @x.129
  %189 = load i32, i32* @y.130
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %187
  %196 = load i32, i32* @x.129
  %197 = load i32, i32* @y.130
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %204

; <label>:204:                                    ; preds = %originalBBpart219, %originalBBpart215
  br label %211

; <label>:205:                                    ; preds = %originalBBpart211
  %206 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %12, align 8
  %207 = load double, double* %23, align 8
  %208 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %17, align 8
  %209 = load double*, double** %16, align 8
  %210 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  call void @_ZN3povL18block_light_sourceEPNS_19Light_Source_StructEdPNS_10Ray_StructES3_PdPf(%"struct.pov::Light_Source_Struct"* %206, double %207, %"struct.pov::Ray_Struct"* %25, %"struct.pov::Ray_Struct"* %208, double* %209, float* %210)
  br label %211

; <label>:211:                                    ; preds = %205, %204
  br label %212

; <label>:212:                                    ; preds = %211, %106, %originalBBpart27
  %213 = getelementptr inbounds [5 x float], [5 x float]* %26, i64 0, i64 0
  %214 = load float, float* %213, align 16
  %215 = call float @_ZSt4fabsf(float %214)
  %216 = fpext float %215 to double
  %217 = fcmp ogt double %216, 1.000000e-07
  br i1 %217, label %246, label %218

; <label>:218:                                    ; preds = %212
  %219 = load i32, i32* @x.129
  %220 = load i32, i32* @y.130
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %218
  %227 = getelementptr inbounds [5 x float], [5 x float]* %26, i64 0, i64 1
  %228 = load float, float* %227, align 4
  %229 = call float @_ZSt4fabsf(float %228)
  %230 = fpext float %229 to double
  %231 = fcmp ogt double %230, 1.000000e-07
  %232 = load i32, i32* @x.129
  %233 = load i32, i32* @y.130
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %231, label %246, label %240

; <label>:240:                                    ; preds = %originalBBpart223
  %241 = getelementptr inbounds [5 x float], [5 x float]* %26, i64 0, i64 2
  %242 = load float, float* %241, align 8
  %243 = call float @_ZSt4fabsf(float %242)
  %244 = fpext float %243 to double
  %245 = fcmp ogt double %244, 1.000000e-07
  br i1 %245, label %246, label %405

; <label>:246:                                    ; preds = %240, %originalBBpart223, %212
  %247 = load i32, i32* @x.129
  %248 = load i32, i32* @y.130
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %246
  %255 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %256 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %255, i32 0, i32 0
  %257 = load float, float* %256, align 4
  %258 = fpext float %257 to double
  %259 = fcmp ogt double %258, 0.000000e+00
  %260 = load i32, i32* @x.129
  %261 = load i32, i32* @y.130
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %259, label %268, label %275

; <label>:268:                                    ; preds = %originalBBpart227
  %269 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %270 = load double*, double** %18, align 8
  %271 = load float*, float** %20, align 8
  %272 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  %273 = load float*, float** %19, align 8
  %274 = load double, double* %21, align 8
  call void @_ZN3pov10do_diffuseEPNS_13Finish_StructEPNS_10Ray_StructEPdPfS5_S5_d(%"struct.pov::Finish_Struct"* %269, %"struct.pov::Ray_Struct"* %25, double* %270, float* %271, float* %272, float* %273, double %274)
  br label %275

; <label>:275:                                    ; preds = %268, %originalBBpart227
  %276 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %12, align 8
  %277 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %276, i32 0, i32 27
  %278 = load i8, i8* %277, align 8
  %279 = zext i8 %278 to i32
  %280 = icmp ne i32 %279, 3
  br i1 %280, label %281, label %345

; <label>:281:                                    ; preds = %275
  %282 = load i32, i32* @x.129
  %283 = load i32, i32* @y.130
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %281
  %290 = load i32, i32* @_ZN3pov21Radiosity_Trace_LevelE, align 4
  %291 = icmp sle i32 %290, 1
  %292 = load i32, i32* @x.129
  %293 = load i32, i32* @y.130
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %291, label %300, label %345

; <label>:300:                                    ; preds = %originalBBpart231
  %301 = load i32, i32* @x.129
  %302 = load i32, i32* @y.130
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %300
  %309 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %310 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %309, i32 0, i32 4
  %311 = load float, float* %310, align 4
  %312 = fpext float %311 to double
  %313 = fcmp ogt double %312, 0.000000e+00
  %314 = load i32, i32* @x.129
  %315 = load i32, i32* @y.130
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %313, label %322, label %331

; <label>:322:                                    ; preds = %originalBBpart235
  %323 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %324 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %17, align 8
  %325 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %324, i32 0, i32 1
  %326 = getelementptr inbounds [3 x double], [3 x double]* %325, i32 0, i32 0
  %327 = load double*, double** %18, align 8
  %328 = load float*, float** %20, align 8
  %329 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  %330 = load float*, float** %19, align 8
  call void @_ZN3pov8do_phongEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_PfS5_S5_(%"struct.pov::Finish_Struct"* %323, %"struct.pov::Ray_Struct"* %25, double* %326, double* %327, float* %328, float* %329, float* %330)
  br label %331

; <label>:331:                                    ; preds = %322, %originalBBpart235
  %332 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %333 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %332, i32 0, i32 2
  %334 = load float, float* %333, align 4
  %335 = fpext float %334 to double
  %336 = fcmp ogt double %335, 0.000000e+00
  br i1 %336, label %337, label %344

; <label>:337:                                    ; preds = %331
  %338 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %339 = load double*, double** %14, align 8
  %340 = load double*, double** %18, align 8
  %341 = load float*, float** %20, align 8
  %342 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  %343 = load float*, float** %19, align 8
  call void @_ZN3pov11do_specularEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_PfS5_S5_(%"struct.pov::Finish_Struct"* %338, %"struct.pov::Ray_Struct"* %25, double* %339, double* %340, float* %341, float* %342, float* %343)
  br label %344

; <label>:344:                                    ; preds = %337, %331
  br label %345

; <label>:345:                                    ; preds = %344, %originalBBpart231, %275
  %346 = load i32, i32* @x.129
  %347 = load i32, i32* @y.130
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %345
  %354 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %355 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %354, i32 0, i32 6
  %356 = load float, float* %355, align 4
  %357 = fpext float %356 to double
  %358 = fcmp ogt double %357, 0.000000e+00
  %359 = load i32, i32* @x.129
  %360 = load i32, i32* @y.130
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %358, label %367, label %388

; <label>:367:                                    ; preds = %originalBBpart239
  %368 = load i32, i32* @x.129
  %369 = load i32, i32* @y.130
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %367
  %376 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %377 = load double*, double** %18, align 8
  %378 = load double*, double** %16, align 8
  %379 = load float*, float** %20, align 8
  call void @_ZN3povL7do_iridEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_Pf(%"struct.pov::Finish_Struct"* %376, %"struct.pov::Ray_Struct"* %25, double* %377, double* %378, float* %379)
  %380 = load i32, i32* @x.129
  %381 = load i32, i32* @y.130
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %388

; <label>:388:                                    ; preds = %originalBBpart243, %originalBBpart239
  %389 = load i32, i32* @x.129
  %390 = load i32, i32* @y.130
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %388
  %397 = load i32, i32* @x.129
  %398 = load i32, i32* @y.130
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %405

; <label>:405:                                    ; preds = %originalBBpart247, %240, %originalBBpart2, %48
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %62
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %80
  %406 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %407 = zext i32 %406 to i64
  %_ = shl i64 %407, 4
  %_2 = sub i64 %407, 4
  %gen = mul i64 %_2, 4
  %_3 = sub i64 %407, 4
  %gen4 = mul i64 %_3, 4
  %_5 = shl i64 %407, 4
  %408 = and i64 %407, 4
  %409 = icmp ne i64 %408, 0
  br label %originalBB1

originalBB9alteredBB:                             ; preds = %originalBB9, %112
  %410 = load i32, i32* %13, align 4
  %411 = icmp sge i32 %410, 0
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %139
  %412 = getelementptr inbounds [5 x float], [5 x float]* %26, i32 0, i32 0
  %413 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %414 = load i32, i32* %13, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %413, i64 %415
  %417 = getelementptr inbounds %"struct.pov::Light_Tested_Struct", %"struct.pov::Light_Tested_Struct"* %416, i32 0, i32 1
  %418 = getelementptr inbounds [5 x float], [5 x float]* %417, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %412, float* %418)
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %187
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %218
  %419 = getelementptr inbounds [5 x float], [5 x float]* %26, i64 0, i64 1
  %420 = load float, float* %419, align 4
  %421 = call float @_ZSt4fabsf(float %420)
  %422 = fpext float %421 to double
  %423 = fcmp ogt double %422, 1.000000e-07
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %246
  %424 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %425 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %424, i32 0, i32 0
  %426 = load float, float* %425, align 4
  %427 = fpext float %426 to double
  %428 = fcmp ogt double %427, 0.000000e+00
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %281
  %429 = load i32, i32* @_ZN3pov21Radiosity_Trace_LevelE, align 4
  %430 = icmp sle i32 %429, 1
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %300
  %431 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %432 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %431, i32 0, i32 4
  %433 = load float, float* %432, align 4
  %434 = fpext float %433 to double
  %435 = fcmp ogt double %434, 0.000000e+00
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %345
  %436 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %437 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %436, i32 0, i32 6
  %438 = load float, float* %437, align 4
  %439 = fpext float %438 to double
  %440 = fcmp ogt double %439, 0.000000e+00
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %367
  %441 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %15, align 8
  %442 = load double*, double** %18, align 8
  %443 = load double*, double** %16, align 8
  %444 = load float*, float** %20, align 8
  call void @_ZN3povL7do_iridEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_Pf(%"struct.pov::Finish_Struct"* %441, %"struct.pov::Ray_Struct"* %25, double* %442, double* %443, float* %444)
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %388
  br label %originalBB45
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL7do_iridEPNS_13Finish_StructEPNS_10Ray_StructEPdS4_Pf(%"struct.pov::Finish_Struct"*, %"struct.pov::Ray_Struct"*, double*, double*, float*) #0 {
  %6 = alloca %"struct.pov::Finish_Struct"*, align 8
  %7 = alloca %"struct.pov::Ray_Struct"*, align 8
  %8 = alloca double*, align 8
  %9 = alloca double*, align 8
  %10 = alloca float*, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca %"struct.pov::Turb_Struct", align 8
  store %"struct.pov::Finish_Struct"* %0, %"struct.pov::Finish_Struct"** %6, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %7, align 8
  store double* %2, double** %8, align 8
  store double* %3, double** %9, align 8
  store float* %4, float** %10, align 8
  %20 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %21 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %20, i32 0, i32 7
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  store double %23, double* %16, align 8
  %24 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %25 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %24, i32 0, i32 8
  %26 = load float, float* %25, align 4
  %27 = fcmp une float %26, 0.000000e+00
  br i1 %27, label %28, label %58

; <label>:28:                                     ; preds = %5
  %29 = load i32, i32* @x.131
  %30 = load i32, i32* @y.132
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %28
  %37 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %19, i32 0, i32 6
  store float 5.000000e-01, float* %37, align 8
  %38 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %19, i32 0, i32 5
  store float 2.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %19, i32 0, i32 4
  store i32 5, i32* %39, align 8
  %40 = load double*, double** %9, align 8
  %41 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %40, %"struct.pov::Turb_Struct"* %19, %"struct.pov::Pattern_Struct"* null)
  %42 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %43 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %42, i32 0, i32 8
  %44 = load float, float* %43, align 4
  %45 = fpext float %44 to double
  %46 = fmul double %41, %45
  store double %46, double* %17, align 8
  %47 = load double, double* %17, align 8
  %48 = load double, double* %16, align 8
  %49 = fmul double %48, %47
  store double %49, double* %16, align 8
  %50 = load i32, i32* @x.131
  %51 = load i32, i32* @y.132
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %58

; <label>:58:                                     ; preds = %originalBBpart2, %5
  %59 = load float, float* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 11, i64 0), align 8
  %60 = fpext float %59 to double
  store double %60, double* %11, align 8
  %61 = load float, float* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 11, i64 1), align 4
  %62 = fpext float %61 to double
  store double %62, double* %12, align 8
  %63 = load float, float* getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 11, i64 2), align 8
  %64 = fpext float %63 to double
  store double %64, double* %13, align 8
  %65 = load double*, double** %8, align 8
  %66 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %67 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %66, i32 0, i32 1
  %68 = getelementptr inbounds [3 x double], [3 x double]* %67, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %14, double* %65, double* %68)
  %69 = load double, double* %16, align 8
  %70 = fmul double 0x402921FB54442D18, %69
  %71 = load double, double* %14, align 8
  %72 = fmul double %70, %71
  store double %72, double* %15, align 8
  %73 = load double, double* %14, align 8
  %74 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %75 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %74, i32 0, i32 6
  %76 = load float, float* %75, align 4
  %77 = fpext float %76 to double
  %78 = fmul double %73, %77
  store double %78, double* %18, align 8
  %79 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %80 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %79, i32 0, i32 6
  %81 = load float, float* %80, align 4
  %82 = fpext float %81 to double
  %83 = load double, double* %18, align 8
  %84 = load double, double* %15, align 8
  %85 = load double, double* %11, align 8
  %86 = fdiv double %84, %85
  %87 = call double @cos(double %86) #7
  %88 = fmul double 5.000000e-01, %87
  %89 = fsub double 1.000000e+00, %88
  %90 = fmul double %83, %89
  %91 = fmul double %82, %90
  %92 = load float*, float** %10, align 8
  %93 = getelementptr inbounds float, float* %92, i64 0
  %94 = load float, float* %93, align 4
  %95 = fpext float %94 to double
  %96 = fadd double %95, %91
  %97 = fptrunc double %96 to float
  store float %97, float* %93, align 4
  %98 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %99 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %98, i32 0, i32 6
  %100 = load float, float* %99, align 4
  %101 = fpext float %100 to double
  %102 = load double, double* %18, align 8
  %103 = load double, double* %15, align 8
  %104 = load double, double* %12, align 8
  %105 = fdiv double %103, %104
  %106 = call double @cos(double %105) #7
  %107 = fmul double 5.000000e-01, %106
  %108 = fsub double 1.000000e+00, %107
  %109 = fmul double %102, %108
  %110 = fmul double %101, %109
  %111 = load float*, float** %10, align 8
  %112 = getelementptr inbounds float, float* %111, i64 1
  %113 = load float, float* %112, align 4
  %114 = fpext float %113 to double
  %115 = fadd double %114, %110
  %116 = fptrunc double %115 to float
  store float %116, float* %112, align 4
  %117 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %118 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %117, i32 0, i32 6
  %119 = load float, float* %118, align 4
  %120 = fpext float %119 to double
  %121 = load double, double* %18, align 8
  %122 = load double, double* %15, align 8
  %123 = load double, double* %13, align 8
  %124 = fdiv double %122, %123
  %125 = call double @cos(double %124) #7
  %126 = fmul double 5.000000e-01, %125
  %127 = fsub double 1.000000e+00, %126
  %128 = fmul double %121, %127
  %129 = fmul double %120, %128
  %130 = load float*, float** %10, align 8
  %131 = getelementptr inbounds float, float* %130, i64 2
  %132 = load float, float* %131, align 4
  %133 = fpext float %132 to double
  %134 = fadd double %133, %129
  %135 = fptrunc double %134 to float
  store float %135, float* %131, align 4
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %28
  %136 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %19, i32 0, i32 6
  store float 5.000000e-01, float* %136, align 8
  %137 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %19, i32 0, i32 5
  store float 2.000000e+00, float* %137, align 4
  %138 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %19, i32 0, i32 4
  store i32 5, i32* %138, align 8
  %139 = load double*, double** %9, align 8
  %140 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %139, %"struct.pov::Turb_Struct"* %19, %"struct.pov::Pattern_Struct"* null)
  %141 = load %"struct.pov::Finish_Struct"*, %"struct.pov::Finish_Struct"** %6, align 8
  %142 = getelementptr inbounds %"struct.pov::Finish_Struct", %"struct.pov::Finish_Struct"* %141, i32 0, i32 8
  %143 = load float, float* %142, align 4
  %144 = fpext float %143 to double
  %_ = fsub double %140, %144
  %gen = fmul double %_, %144
  %_1 = fsub double %140, %144
  %gen2 = fmul double %_1, %144
  %_3 = fsub double %140, %144
  %gen4 = fmul double %_3, %144
  %_5 = fsub double -0.000000e+00, %140
  %gen6 = fadd double %_5, %144
  %_7 = fsub double %140, %144
  %gen8 = fmul double %_7, %144
  %_9 = fsub double %140, %144
  %gen10 = fmul double %_9, %144
  %145 = fmul double %140, %144
  store double %145, double* %17, align 8
  %146 = load double, double* %17, align 8
  %147 = load double, double* %16, align 8
  %_11 = fsub double %147, %146
  %gen12 = fmul double %_11, %146
  %_13 = fsub double -0.000000e+00, %147
  %gen14 = fadd double %_13, %146
  %_15 = fsub double %147, %146
  %gen16 = fmul double %_15, %146
  %_17 = fsub double -0.000000e+00, %147
  %gen18 = fadd double %_17, %146
  %_19 = fsub double %147, %146
  %gen20 = fmul double %_19, %146
  %148 = fmul double %147, %146
  store double %148, double* %16, align 8
  br label %originalBB
}

declare double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double*, %"struct.pov::Turb_Struct"*, %"struct.pov::Pattern_Struct"*) #2

; Function Attrs: nounwind
declare double @cos(double) #3

declare i32 @_ZN3pov13gatherPhotonsEPddS0_S0_iPNS_17photon_map_structE(double*, double, double*, double*, i32, %"struct.pov::photon_map_struct"*) #2

declare void @_ZN3pov17photonRgbe2colourEPfPh(float*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov4VSubEPdPKfPKd(double*, float*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca float*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store float* %1, float** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load float*, float** %5, align 8
  %8 = getelementptr inbounds float, float* %7, i64 0
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  %11 = load double*, double** %6, align 8
  %12 = getelementptr inbounds double, double* %11, i64 0
  %13 = load double, double* %12, align 8
  %14 = fsub double %10, %13
  %15 = load double*, double** %4, align 8
  %16 = getelementptr inbounds double, double* %15, i64 0
  store double %14, double* %16, align 8
  %17 = load float*, float** %5, align 8
  %18 = getelementptr inbounds float, float* %17, i64 1
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  %21 = load double*, double** %6, align 8
  %22 = getelementptr inbounds double, double* %21, i64 1
  %23 = load double, double* %22, align 8
  %24 = fsub double %20, %23
  %25 = load double*, double** %4, align 8
  %26 = getelementptr inbounds double, double* %25, i64 1
  store double %24, double* %26, align 8
  %27 = load float*, float** %5, align 8
  %28 = getelementptr inbounds float, float* %27, i64 2
  %29 = load float, float* %28, align 4
  %30 = fpext float %29 to double
  %31 = load double*, double** %6, align 8
  %32 = getelementptr inbounds double, double* %31, i64 2
  %33 = load double, double* %32, align 8
  %34 = fsub double %30, %33
  %35 = load double*, double** %4, align 8
  %36 = getelementptr inbounds double, double* %35, i64 2
  store double %34, double* %36, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define internal void @_ZN3povL16block_area_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pfiiiii(%"struct.pov::Light_Source_Struct"*, double*, %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"*, double*, float*, i32, i32, i32, i32, i32) #0 {
  %12 = load i32, i32* @x.135
  %13 = load i32, i32* @y.136
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %21 = alloca double*, align 8
  %22 = alloca %"struct.pov::Ray_Struct"*, align 8
  %23 = alloca %"struct.pov::Ray_Struct"*, align 8
  %24 = alloca double*, align 8
  %25 = alloca float*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca [4 x [5 x float]], align 16
  %32 = alloca [3 x double], align 16
  %33 = alloca [3 x double], align 16
  %34 = alloca [3 x double], align 16
  %35 = alloca [3 x double], align 16
  %36 = alloca [3 x double], align 16
  %37 = alloca [3 x double], align 16
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca double, align 8
  %47 = alloca i8, align 1
  %48 = alloca double, align 8
  %49 = alloca double, align 8
  %50 = alloca double, align 8
  %51 = alloca double, align 8
  %52 = alloca [3 x double], align 16
  %53 = alloca double, align 8
  %54 = alloca [3 x double], align 16
  %55 = alloca i32, align 4
  %56 = alloca double, align 8
  %57 = alloca [3 x double], align 16
  %58 = alloca double, align 8
  %59 = alloca [3 x double], align 16
  %60 = alloca i32, align 4
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %20, align 8
  store double* %1, double** %21, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %22, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %23, align 8
  store double* %4, double** %24, align 8
  store float* %5, float** %25, align 8
  store i32 %6, i32* %26, align 4
  store i32 %7, i32* %27, align 4
  store i32 %8, i32* %28, align 4
  store i32 %9, i32* %29, align 4
  store i32 %10, i32* %30, align 4
  store i8 0, i8* %47, align 1
  %61 = load i32, i32* %26, align 4
  %62 = icmp eq i32 %61, 0
  %63 = load i32, i32* @x.135
  %64 = load i32, i32* @y.136
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %62, label %71, label %327

; <label>:71:                                     ; preds = %originalBBpart2
  %72 = load i32, i32* @x.135
  %73 = load i32, i32* @y.136
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %71
  %80 = load i32, i32* %27, align 4
  %81 = icmp eq i32 %80, 0
  %82 = load i32, i32* @x.135
  %83 = load i32, i32* @y.136
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %81, label %90, label %327

; <label>:90:                                     ; preds = %originalBBpart24
  %91 = load i32, i32* @x.135
  %92 = load i32, i32* @y.136
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %90
  %99 = load i32, i32* %28, align 4
  %100 = icmp eq i32 %99, 0
  %101 = load i32, i32* @x.135
  %102 = load i32, i32* @y.136
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %100, label %109, label %327

; <label>:109:                                    ; preds = %originalBBpart28
  %110 = load i32, i32* %29, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %327

; <label>:112:                                    ; preds = %109
  %113 = load i32, i32* @x.135
  %114 = load i32, i32* @y.136
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %112
  store i8 1, i8* %47, align 1
  store i32 0, i32* %38, align 4
  %121 = load i32, i32* @x.135
  %122 = load i32, i32* @y.136
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %129

; <label>:129:                                    ; preds = %190, %originalBBpart212
  %130 = load i32, i32* %38, align 4
  %131 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %132 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %131, i32 0, i32 35
  %133 = load i32, i32* %132, align 8
  %134 = icmp slt i32 %130, %133
  br i1 %134, label %135, label %193

; <label>:135:                                    ; preds = %129
  store i32 0, i32* %39, align 4
  br label %136

; <label>:136:                                    ; preds = %originalBBpart218, %135
  %137 = load i32, i32* %39, align 4
  %138 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %139 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %138, i32 0, i32 36
  %140 = load i32, i32* %139, align 4
  %141 = icmp slt i32 %137, %140
  br i1 %141, label %142, label %173

; <label>:142:                                    ; preds = %136
  %143 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %144 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %143, i32 0, i32 40
  %145 = load [5 x float]**, [5 x float]*** %144, align 8
  %146 = load i32, i32* %38, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [5 x float]*, [5 x float]** %145, i64 %147
  %149 = load [5 x float]*, [5 x float]** %148, align 8
  %150 = load i32, i32* %39, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [5 x float], [5 x float]* %149, i64 %151
  %153 = getelementptr inbounds [5 x float], [5 x float]* %152, i64 0, i64 0
  store float -1.000000e+00, float* %153, align 4
  br label %154

; <label>:154:                                    ; preds = %142
  %155 = load i32, i32* @x.135
  %156 = load i32, i32* @y.136
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %154
  %163 = load i32, i32* %39, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %39, align 4
  %165 = load i32, i32* @x.135
  %166 = load i32, i32* @y.136
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart218, label %originalBB14alteredBB

originalBBpart218:                                ; preds = %originalBB14
  br label %136

; <label>:173:                                    ; preds = %136
  %174 = load i32, i32* @x.135
  %175 = load i32, i32* @y.136
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %173
  %182 = load i32, i32* @x.135
  %183 = load i32, i32* @y.136
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %190

; <label>:190:                                    ; preds = %originalBBpart222
  %191 = load i32, i32* %38, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %38, align 4
  br label %129

; <label>:193:                                    ; preds = %129
  store i32 0, i32* %26, align 4
  store i32 0, i32* %27, align 4
  %194 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %195 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %194, i32 0, i32 35
  %196 = load i32, i32* %195, align 8
  %197 = sub nsw i32 %196, 1
  store i32 %197, i32* %28, align 4
  %198 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %199 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %198, i32 0, i32 36
  %200 = load i32, i32* %199, align 4
  %201 = sub nsw i32 %200, 1
  store i32 %201, i32* %29, align 4
  %202 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %203 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %202, i32 0, i32 30
  %204 = load i8, i8* %203, align 1
  %205 = trunc i8 %204 to i1
  %206 = zext i1 %205 to i32
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %326

; <label>:208:                                    ; preds = %193
  %209 = load i32, i32* @x.135
  %210 = load i32, i32* @y.136
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %208
  %217 = getelementptr inbounds [3 x double], [3 x double]* %35, i32 0, i32 0
  %218 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %219 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %218, i32 0, i32 19
  %220 = getelementptr inbounds [3 x double], [3 x double]* %219, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %217, double* %220)
  %221 = getelementptr inbounds [3 x double], [3 x double]* %36, i32 0, i32 0
  %222 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %223 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %222, i32 0, i32 20
  %224 = getelementptr inbounds [3 x double], [3 x double]* %223, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %221, double* %224)
  %225 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %226 = load double*, double** %21, align 8
  %227 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %228 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %229 = load double*, double** %24, align 8
  call void @_ZN3povL19do_light_area_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_(%"struct.pov::Light_Source_Struct"* %225, double* %226, %"struct.pov::Ray_Struct"* %227, %"struct.pov::Ray_Struct"* %228, double* %229)
  %230 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %231 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %230, i32 0, i32 1
  %232 = getelementptr inbounds [3 x double], [3 x double]* %231, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %232, double -1.000000e+00)
  %233 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %234 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %233, i32 0, i32 19
  %235 = getelementptr inbounds [3 x double], [3 x double]* %234, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %46, double* %235)
  %236 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %237 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %236, i32 0, i32 1
  %238 = getelementptr inbounds [3 x double], [3 x double]* %237, i64 0, i64 2
  %239 = load double, double* %238, align 8
  %240 = call double @fabs(double %239) #5
  %241 = fsub double %240, 1.000000e+00
  %242 = call double @fabs(double %241) #5
  %243 = fcmp olt double %242, 1.000000e-02
  %244 = load i32, i32* @x.135
  %245 = load i32, i32* @y.136
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart236, label %originalBB24alteredBB

originalBBpart236:                                ; preds = %originalBB24
  br i1 %243, label %252, label %272

; <label>:252:                                    ; preds = %originalBBpart236
  %253 = load i32, i32* @x.135
  %254 = load i32, i32* @y.136
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %252
  %261 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 0
  store double 0.000000e+00, double* %261, align 16
  %262 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 1
  store double 1.000000e+00, double* %262, align 8
  %263 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 2
  store double 0.000000e+00, double* %263, align 16
  %264 = load i32, i32* @x.135
  %265 = load i32, i32* @y.136
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %292

; <label>:272:                                    ; preds = %originalBBpart236
  %273 = load i32, i32* @x.135
  %274 = load i32, i32* @y.136
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %272
  %281 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 0
  store double 0.000000e+00, double* %281, align 16
  %282 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 1
  store double 0.000000e+00, double* %282, align 8
  %283 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 2
  store double 1.000000e+00, double* %283, align 16
  %284 = load i32, i32* @x.135
  %285 = load i32, i32* @y.136
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %292

; <label>:292:                                    ; preds = %originalBBpart244, %originalBBpart240
  %293 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %294 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %293, i32 0, i32 19
  %295 = getelementptr inbounds [3 x double], [3 x double]* %294, i32 0, i32 0
  %296 = getelementptr inbounds [3 x double], [3 x double]* %37, i32 0, i32 0
  %297 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %298 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %297, i32 0, i32 1
  %299 = getelementptr inbounds [3 x double], [3 x double]* %298, i32 0, i32 0
  call void @_ZN3pov6VCrossEPdPKdS2_(double* %295, double* %296, double* %299)
  %300 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %301 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %300, i32 0, i32 19
  %302 = getelementptr inbounds [3 x double], [3 x double]* %301, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %302)
  %303 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %304 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %303, i32 0, i32 20
  %305 = getelementptr inbounds [3 x double], [3 x double]* %304, i32 0, i32 0
  %306 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %307 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %306, i32 0, i32 19
  %308 = getelementptr inbounds [3 x double], [3 x double]* %307, i32 0, i32 0
  %309 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %310 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %309, i32 0, i32 1
  %311 = getelementptr inbounds [3 x double], [3 x double]* %310, i32 0, i32 0
  call void @_ZN3pov6VCrossEPdPKdS2_(double* %305, double* %308, double* %311)
  %312 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %313 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %312, i32 0, i32 20
  %314 = getelementptr inbounds [3 x double], [3 x double]* %313, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %314)
  %315 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %316 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %315, i32 0, i32 19
  %317 = getelementptr inbounds [3 x double], [3 x double]* %316, i32 0, i32 0
  %318 = load double, double* %46, align 8
  call void @_ZN3pov8VScaleEqEPdd(double* %317, double %318)
  %319 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %320 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %319, i32 0, i32 20
  %321 = getelementptr inbounds [3 x double], [3 x double]* %320, i32 0, i32 0
  %322 = load double, double* %46, align 8
  call void @_ZN3pov8VScaleEqEPdd(double* %321, double %322)
  %323 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %324 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %323, i32 0, i32 1
  %325 = getelementptr inbounds [3 x double], [3 x double]* %324, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %325, double -1.000000e+00)
  br label %326

; <label>:326:                                    ; preds = %292, %193
  br label %327

; <label>:327:                                    ; preds = %326, %109, %originalBBpart28, %originalBBpart24, %originalBBpart2
  %328 = getelementptr inbounds [3 x double], [3 x double]* %32, i32 0, i32 0
  %329 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %330 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %329, i32 0, i32 17
  %331 = getelementptr inbounds [3 x double], [3 x double]* %330, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %328, double* %331)
  store i32 0, i32* %38, align 4
  br label %332

; <label>:332:                                    ; preds = %807, %327
  %333 = load i32, i32* %38, align 4
  %334 = icmp slt i32 %333, 4
  br i1 %334, label %335, label %810

; <label>:335:                                    ; preds = %332
  %336 = load i32, i32* %38, align 4
  switch i32 %336, label %381 [
    i32 0, label %337
    i32 1, label %356
    i32 2, label %359
    i32 3, label %378
  ]

; <label>:337:                                    ; preds = %335
  %338 = load i32, i32* @x.135
  %339 = load i32, i32* @y.136
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %337
  %346 = load i32, i32* %26, align 4
  store i32 %346, i32* %40, align 4
  %347 = load i32, i32* %27, align 4
  store i32 %347, i32* %41, align 4
  %348 = load i32, i32* @x.135
  %349 = load i32, i32* @y.136
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %382

; <label>:356:                                    ; preds = %335
  %357 = load i32, i32* %28, align 4
  store i32 %357, i32* %40, align 4
  %358 = load i32, i32* %27, align 4
  store i32 %358, i32* %41, align 4
  br label %382

; <label>:359:                                    ; preds = %335
  %360 = load i32, i32* @x.135
  %361 = load i32, i32* @y.136
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %359
  %368 = load i32, i32* %26, align 4
  store i32 %368, i32* %40, align 4
  %369 = load i32, i32* %29, align 4
  store i32 %369, i32* %41, align 4
  %370 = load i32, i32* @x.135
  %371 = load i32, i32* @y.136
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %382

; <label>:378:                                    ; preds = %335
  %379 = load i32, i32* %28, align 4
  store i32 %379, i32* %40, align 4
  %380 = load i32, i32* %29, align 4
  store i32 %380, i32* %41, align 4
  br label %382

; <label>:381:                                    ; preds = %335
  store i32 0, i32* %41, align 4
  store i32 0, i32* %40, align 4
  br label %382

; <label>:382:                                    ; preds = %381, %378, %originalBBpart252, %356, %originalBBpart248
  %383 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %384 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %383, i32 0, i32 40
  %385 = load [5 x float]**, [5 x float]*** %384, align 8
  %386 = load i32, i32* %40, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [5 x float]*, [5 x float]** %385, i64 %387
  %389 = load [5 x float]*, [5 x float]** %388, align 8
  %390 = load i32, i32* %41, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [5 x float], [5 x float]* %389, i64 %391
  %393 = getelementptr inbounds [5 x float], [5 x float]* %392, i64 0, i64 0
  %394 = load float, float* %393, align 4
  %395 = fpext float %394 to double
  %396 = fcmp oge double %395, 0.000000e+00
  br i1 %396, label %397, label %413

; <label>:397:                                    ; preds = %382
  %398 = load i32, i32* %38, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %399
  %401 = getelementptr inbounds [5 x float], [5 x float]* %400, i32 0, i32 0
  %402 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %403 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %402, i32 0, i32 40
  %404 = load [5 x float]**, [5 x float]*** %403, align 8
  %405 = load i32, i32* %40, align 4
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds [5 x float]*, [5 x float]** %404, i64 %406
  %408 = load [5 x float]*, [5 x float]** %407, align 8
  %409 = load i32, i32* %41, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [5 x float], [5 x float]* %408, i64 %410
  %412 = getelementptr inbounds [5 x float], [5 x float]* %411, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %401, float* %412)
  br label %806

; <label>:413:                                    ; preds = %382
  %414 = load i32, i32* %40, align 4
  %415 = sitofp i32 %414 to double
  store double %415, double* %48, align 8
  %416 = load i32, i32* %41, align 4
  %417 = sitofp i32 %416 to double
  store double %417, double* %49, align 8
  %418 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %419 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %418, i32 0, i32 29
  %420 = load i8, i8* %419, align 2
  %421 = icmp ne i8 %420, 0
  br i1 %421, label %422, label %435

; <label>:422:                                    ; preds = %413
  %423 = call i32 @_ZN3pov8POV_RANDEv()
  %424 = sitofp i32 %423 to double
  %425 = fmul double %424, 0x3F0000200040021E
  %426 = fsub double %425, 5.000000e-01
  %427 = load double, double* %48, align 8
  %428 = fadd double %427, %426
  store double %428, double* %48, align 8
  %429 = call i32 @_ZN3pov8POV_RANDEv()
  %430 = sitofp i32 %429 to double
  %431 = fmul double %430, 0x3F0000200040021E
  %432 = fsub double %431, 5.000000e-01
  %433 = load double, double* %49, align 8
  %434 = fadd double %433, %432
  store double %434, double* %49, align 8
  br label %435

; <label>:435:                                    ; preds = %422, %413
  %436 = load i32, i32* @x.135
  %437 = load i32, i32* @y.136
  %438 = sub i32 %436, 1
  %439 = mul i32 %436, %438
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %441, %442
  br i1 %443, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %435
  %444 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %445 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %444, i32 0, i32 31
  %446 = load i8, i8* %445, align 4
  %447 = trunc i8 %446 to i1
  %448 = zext i1 %447 to i32
  %449 = icmp eq i32 %448, 1
  %450 = load i32, i32* @x.135
  %451 = load i32, i32* @y.136
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %449, label %458, label %532

; <label>:458:                                    ; preds = %originalBBpart256
  %459 = load i32, i32* @x.135
  %460 = load i32, i32* @y.136
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %458
  %467 = load double, double* %48, align 8
  %468 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %469 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %468, i32 0, i32 35
  %470 = load i32, i32* %469, align 8
  %471 = sub nsw i32 %470, 1
  %472 = sitofp i32 %471 to double
  %473 = fdiv double %467, %472
  %474 = fsub double %473, 5.000000e-01
  %475 = fadd double %474, 1.000000e-03
  store double %475, double* %48, align 8
  %476 = load double, double* %49, align 8
  %477 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %478 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %477, i32 0, i32 36
  %479 = load i32, i32* %478, align 4
  %480 = sub nsw i32 %479, 1
  %481 = sitofp i32 %480 to double
  %482 = fdiv double %476, %481
  %483 = fsub double %482, 5.000000e-01
  %484 = fadd double %483, 1.000000e-03
  store double %484, double* %49, align 8
  %485 = load double, double* %48, align 8
  %486 = call double @fabs(double %485) #5
  %487 = load double, double* %49, align 8
  %488 = call double @fabs(double %487) #5
  %489 = fcmp ogt double %486, %488
  %490 = load i32, i32* @x.135
  %491 = load i32, i32* @y.136
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBBpart2141, label %originalBB58alteredBB

originalBBpart2141:                               ; preds = %originalBB58
  br i1 %489, label %498, label %501

; <label>:498:                                    ; preds = %originalBBpart2141
  %499 = load double, double* %48, align 8
  %500 = call double @fabs(double %499) #5
  br label %504

; <label>:501:                                    ; preds = %originalBBpart2141
  %502 = load double, double* %49, align 8
  %503 = call double @fabs(double %502) #5
  br label %504

; <label>:504:                                    ; preds = %501, %498
  %505 = phi double [ %500, %498 ], [ %503, %501 ]
  store double %505, double* %50, align 8
  %506 = load double, double* %48, align 8
  %507 = load double, double* %48, align 8
  %508 = fmul double %506, %507
  %509 = load double, double* %49, align 8
  %510 = load double, double* %49, align 8
  %511 = fmul double %509, %510
  %512 = fadd double %508, %511
  %513 = call double @sqrt(double %512) #7
  %514 = load double, double* %50, align 8
  %515 = fdiv double %514, %513
  store double %515, double* %50, align 8
  %516 = load double, double* %50, align 8
  %517 = load double, double* %48, align 8
  %518 = fmul double %517, %516
  store double %518, double* %48, align 8
  %519 = load double, double* %50, align 8
  %520 = load double, double* %49, align 8
  %521 = fmul double %520, %519
  store double %521, double* %49, align 8
  %522 = getelementptr inbounds [3 x double], [3 x double]* %33, i32 0, i32 0
  %523 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %524 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %523, i32 0, i32 19
  %525 = getelementptr inbounds [3 x double], [3 x double]* %524, i32 0, i32 0
  %526 = load double, double* %48, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %522, double* %525, double %526)
  %527 = getelementptr inbounds [3 x double], [3 x double]* %34, i32 0, i32 0
  %528 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %529 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %528, i32 0, i32 20
  %530 = getelementptr inbounds [3 x double], [3 x double]* %529, i32 0, i32 0
  %531 = load double, double* %49, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %527, double* %530, double %531)
  br label %575

; <label>:532:                                    ; preds = %originalBBpart256
  %533 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %534 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %533, i32 0, i32 35
  %535 = load i32, i32* %534, align 8
  %536 = icmp sgt i32 %535, 1
  br i1 %536, label %537, label %551

; <label>:537:                                    ; preds = %532
  %538 = load double, double* %48, align 8
  %539 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %540 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %539, i32 0, i32 35
  %541 = load i32, i32* %540, align 8
  %542 = sub nsw i32 %541, 1
  %543 = sitofp i32 %542 to double
  %544 = fdiv double %538, %543
  %545 = fsub double %544, 5.000000e-01
  store double %545, double* %50, align 8
  %546 = getelementptr inbounds [3 x double], [3 x double]* %33, i32 0, i32 0
  %547 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %548 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %547, i32 0, i32 19
  %549 = getelementptr inbounds [3 x double], [3 x double]* %548, i32 0, i32 0
  %550 = load double, double* %50, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %546, double* %549, double %550)
  br label %553

; <label>:551:                                    ; preds = %532
  %552 = getelementptr inbounds [3 x double], [3 x double]* %33, i32 0, i32 0
  call void @_ZN3pov11Make_VectorEPdddd(double* %552, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  br label %553

; <label>:553:                                    ; preds = %551, %537
  %554 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %555 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %554, i32 0, i32 36
  %556 = load i32, i32* %555, align 4
  %557 = icmp sgt i32 %556, 1
  br i1 %557, label %558, label %572

; <label>:558:                                    ; preds = %553
  %559 = load double, double* %49, align 8
  %560 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %561 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %560, i32 0, i32 36
  %562 = load i32, i32* %561, align 4
  %563 = sub nsw i32 %562, 1
  %564 = sitofp i32 %563 to double
  %565 = fdiv double %559, %564
  %566 = fsub double %565, 5.000000e-01
  store double %566, double* %50, align 8
  %567 = getelementptr inbounds [3 x double], [3 x double]* %34, i32 0, i32 0
  %568 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %569 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %568, i32 0, i32 20
  %570 = getelementptr inbounds [3 x double], [3 x double]* %569, i32 0, i32 0
  %571 = load double, double* %50, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %567, double* %570, double %571)
  br label %574

; <label>:572:                                    ; preds = %553
  %573 = getelementptr inbounds [3 x double], [3 x double]* %34, i32 0, i32 0
  call void @_ZN3pov11Make_VectorEPdddd(double* %573, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  br label %574

; <label>:574:                                    ; preds = %572, %558
  br label %575

; <label>:575:                                    ; preds = %574, %504
  %576 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %577 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %576, i32 0, i32 17
  %578 = getelementptr inbounds [3 x double], [3 x double]* %577, i32 0, i32 0
  %579 = getelementptr inbounds [3 x double], [3 x double]* %32, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %578, double* %579)
  %580 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %581 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %580, i32 0, i32 17
  %582 = getelementptr inbounds [3 x double], [3 x double]* %581, i32 0, i32 0
  %583 = getelementptr inbounds [3 x double], [3 x double]* %33, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPdPKd(double* %582, double* %583)
  %584 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %585 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %584, i32 0, i32 17
  %586 = getelementptr inbounds [3 x double], [3 x double]* %585, i32 0, i32 0
  %587 = getelementptr inbounds [3 x double], [3 x double]* %34, i32 0, i32 0
  call void @_ZN3pov6VAddEqEPdPKd(double* %586, double* %587)
  %588 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %589 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %588, i32 0, i32 0
  %590 = getelementptr inbounds [3 x double], [3 x double]* %589, i32 0, i32 0
  %591 = load double*, double** %24, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %590, double* %591)
  %592 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %593 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %592, i32 0, i32 27
  %594 = load i8, i8* %593, align 8
  %595 = zext i8 %594 to i32
  %596 = icmp eq i32 %595, 4
  br i1 %596, label %597, label %643

; <label>:597:                                    ; preds = %575
  %598 = load i32, i32* @x.135
  %599 = load i32, i32* @y.136
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %originalBB143alteredBB, %597
  %606 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %607 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %606, i32 0, i32 1
  %608 = getelementptr inbounds [3 x double], [3 x double]* %607, i32 0, i32 0
  %609 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %610 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %609, i32 0, i32 17
  %611 = getelementptr inbounds [3 x double], [3 x double]* %610, i32 0, i32 0
  %612 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %613 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %612, i32 0, i32 18
  %614 = getelementptr inbounds [3 x double], [3 x double]* %613, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %608, double* %611, double* %614)
  %615 = getelementptr inbounds [3 x double], [3 x double]* %54, i32 0, i32 0
  %616 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %617 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %616, i32 0, i32 17
  %618 = getelementptr inbounds [3 x double], [3 x double]* %617, i32 0, i32 0
  %619 = load double*, double** %24, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %615, double* %618, double* %619)
  %620 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %621 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %620, i32 0, i32 1
  %622 = getelementptr inbounds [3 x double], [3 x double]* %621, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %53, double* %622)
  %623 = load double*, double** %21, align 8
  %624 = getelementptr inbounds [3 x double], [3 x double]* %54, i32 0, i32 0
  %625 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %626 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %625, i32 0, i32 1
  %627 = getelementptr inbounds [3 x double], [3 x double]* %626, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %623, double* %624, double* %627)
  %628 = load double, double* %53, align 8
  %629 = load double*, double** %21, align 8
  %630 = load double, double* %629, align 8
  %631 = fdiv double %630, %628
  store double %631, double* %629, align 8
  %632 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %633 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %632, i32 0, i32 1
  %634 = getelementptr inbounds [3 x double], [3 x double]* %633, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %634)
  %635 = load i32, i32* @x.135
  %636 = load i32, i32* @y.136
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBBpart2147, label %originalBB143alteredBB

originalBBpart2147:                               ; preds = %originalBB143
  br label %660

; <label>:643:                                    ; preds = %575
  %644 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %645 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %644, i32 0, i32 1
  %646 = getelementptr inbounds [3 x double], [3 x double]* %645, i32 0, i32 0
  %647 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %648 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %647, i32 0, i32 17
  %649 = getelementptr inbounds [3 x double], [3 x double]* %648, i32 0, i32 0
  %650 = load double*, double** %24, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %646, double* %649, double* %650)
  %651 = load double*, double** %21, align 8
  %652 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %653 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %652, i32 0, i32 1
  %654 = getelementptr inbounds [3 x double], [3 x double]* %653, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %651, double* %654)
  %655 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %656 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %655, i32 0, i32 1
  %657 = getelementptr inbounds [3 x double], [3 x double]* %656, i32 0, i32 0
  %658 = load double*, double** %21, align 8
  %659 = load double, double* %658, align 8
  call void @_ZN3pov15VInverseScaleEqEPdd(double* %657, double %659)
  br label %660

; <label>:660:                                    ; preds = %643, %originalBBpart2147
  %661 = load i32, i32* @x.135
  %662 = load i32, i32* @y.136
  %663 = sub i32 %661, 1
  %664 = mul i32 %661, %663
  %665 = urem i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %662, 10
  %668 = or i1 %666, %667
  br i1 %668, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %660
  %669 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %670 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %669, i32 0, i32 33
  %671 = load i8, i8* %670, align 2
  %672 = icmp ne i8 %671, 0
  %673 = load i32, i32* @x.135
  %674 = load i32, i32* @y.136
  %675 = sub i32 %673, 1
  %676 = mul i32 %673, %675
  %677 = urem i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %674, 10
  %680 = or i1 %678, %679
  br i1 %680, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br i1 %672, label %681, label %745

; <label>:681:                                    ; preds = %originalBBpart2151
  %682 = load i32, i32* @x.135
  %683 = load i32, i32* @y.136
  %684 = sub i32 %682, 1
  %685 = mul i32 %682, %684
  %686 = urem i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = icmp slt i32 %683, 10
  %689 = or i1 %687, %688
  br i1 %689, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %originalBB153alteredBB, %681
  %690 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %691 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %690, i32 0, i32 28
  %692 = load i8, i8* %691, align 1
  %693 = icmp ne i8 %692, 0
  %694 = load i32, i32* @x.135
  %695 = load i32, i32* @y.136
  %696 = sub i32 %694, 1
  %697 = mul i32 %694, %696
  %698 = urem i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = icmp slt i32 %695, 10
  %701 = or i1 %699, %700
  br i1 %701, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br i1 %693, label %702, label %723

; <label>:702:                                    ; preds = %originalBBpart2155
  %703 = getelementptr inbounds [3 x double], [3 x double]* %52, i32 0, i32 0
  %704 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %705 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %704, i32 0, i32 17
  %706 = getelementptr inbounds [3 x double], [3 x double]* %705, i32 0, i32 0
  %707 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %708 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %707, i32 0, i32 18
  %709 = getelementptr inbounds [3 x double], [3 x double]* %708, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %703, double* %706, double* %709)
  %710 = getelementptr inbounds [3 x double], [3 x double]* %52, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %710)
  %711 = getelementptr inbounds [3 x double], [3 x double]* %52, i32 0, i32 0
  %712 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %713 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %712, i32 0, i32 1
  %714 = getelementptr inbounds [3 x double], [3 x double]* %713, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %51, double* %711, double* %714)
  %715 = load double, double* %51, align 8
  %716 = load double*, double** %21, align 8
  %717 = load double, double* %716, align 8
  %718 = fmul double %717, %715
  store double %718, double* %716, align 8
  %719 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %720 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %719, i32 0, i32 1
  %721 = getelementptr inbounds [3 x double], [3 x double]* %720, i32 0, i32 0
  %722 = getelementptr inbounds [3 x double], [3 x double]* %52, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %721, double* %722)
  br label %744

; <label>:723:                                    ; preds = %originalBBpart2155
  %724 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %725 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %724, i32 0, i32 16
  %726 = getelementptr inbounds [3 x double], [3 x double]* %725, i32 0, i32 0
  %727 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %728 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %727, i32 0, i32 1
  %729 = getelementptr inbounds [3 x double], [3 x double]* %728, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %51, double* %726, double* %729)
  %730 = load double, double* %51, align 8
  %731 = fsub double -0.000000e+00, %730
  %732 = load double*, double** %21, align 8
  %733 = load double, double* %732, align 8
  %734 = fmul double %733, %731
  store double %734, double* %732, align 8
  %735 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %736 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %735, i32 0, i32 1
  %737 = getelementptr inbounds [3 x double], [3 x double]* %736, i32 0, i32 0
  %738 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %739 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %738, i32 0, i32 16
  %740 = getelementptr inbounds [3 x double], [3 x double]* %739, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %737, double* %740)
  %741 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %742 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %741, i32 0, i32 1
  %743 = getelementptr inbounds [3 x double], [3 x double]* %742, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %743, double -1.000000e+00)
  br label %744

; <label>:744:                                    ; preds = %723, %702
  br label %745

; <label>:745:                                    ; preds = %744, %originalBBpart2151
  %746 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %747 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %746, i32 0, i32 2
  store i32 -1, i32* %747, align 8
  %748 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %749 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %748, i32 0, i32 2
  %750 = load i32, i32* %749, align 8
  %751 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %752 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %751, i32 0, i32 2
  store i32 %750, i32* %752, align 8
  %753 = icmp sge i32 %750, 100
  br i1 %753, label %754, label %756

; <label>:754:                                    ; preds = %745
  %755 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i32 0, i32 0))
  br label %756

; <label>:756:                                    ; preds = %754, %745
  store i32 0, i32* %55, align 4
  br label %757

; <label>:757:                                    ; preds = %775, %756
  %758 = load i32, i32* %55, align 4
  %759 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %760 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %759, i32 0, i32 2
  %761 = load i32, i32* %760, align 8
  %762 = icmp sle i32 %758, %761
  br i1 %762, label %763, label %778

; <label>:763:                                    ; preds = %757
  %764 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %765 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %764, i32 0, i32 4
  %766 = load i32, i32* %55, align 4
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %765, i64 0, i64 %767
  %769 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %768, align 8
  %770 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %771 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %770, i32 0, i32 4
  %772 = load i32, i32* %55, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %771, i64 0, i64 %773
  store %"struct.pov::Interior_Struct"* %769, %"struct.pov::Interior_Struct"** %774, align 8
  br label %775

; <label>:775:                                    ; preds = %763
  %776 = load i32, i32* %55, align 4
  %777 = add nsw i32 %776, 1
  store i32 %777, i32* %55, align 4
  br label %757

; <label>:778:                                    ; preds = %757
  %779 = load i32, i32* %38, align 4
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %780
  %782 = getelementptr inbounds [5 x float], [5 x float]* %781, i32 0, i32 0
  %783 = load float*, float** %25, align 8
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %782, float* %783)
  %784 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %785 = load double*, double** %21, align 8
  %786 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %787 = load i32, i32* %38, align 4
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %788
  %790 = getelementptr inbounds [5 x float], [5 x float]* %789, i32 0, i32 0
  call void @_ZN3povL17block_point_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructEPf(%"struct.pov::Light_Source_Struct"* %784, double* %785, %"struct.pov::Ray_Struct"* %786, float* %790)
  %791 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %792 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %791, i32 0, i32 40
  %793 = load [5 x float]**, [5 x float]*** %792, align 8
  %794 = load i32, i32* %40, align 4
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds [5 x float]*, [5 x float]** %793, i64 %795
  %797 = load [5 x float]*, [5 x float]** %796, align 8
  %798 = load i32, i32* %41, align 4
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds [5 x float], [5 x float]* %797, i64 %799
  %801 = getelementptr inbounds [5 x float], [5 x float]* %800, i32 0, i32 0
  %802 = load i32, i32* %38, align 4
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %803
  %805 = getelementptr inbounds [5 x float], [5 x float]* %804, i32 0, i32 0
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %801, float* %805)
  br label %806

; <label>:806:                                    ; preds = %778, %397
  br label %807

; <label>:807:                                    ; preds = %806
  %808 = load i32, i32* %38, align 4
  %809 = add nsw i32 %808, 1
  store i32 %809, i32* %38, align 4
  br label %332

; <label>:810:                                    ; preds = %332
  %811 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %812 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %811, i32 0, i32 17
  %813 = getelementptr inbounds [3 x double], [3 x double]* %812, i32 0, i32 0
  %814 = getelementptr inbounds [3 x double], [3 x double]* %32, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %813, double* %814)
  %815 = load i32, i32* %28, align 4
  %816 = load i32, i32* %26, align 4
  %817 = sub nsw i32 %815, %816
  %818 = icmp sgt i32 %817, 1
  br i1 %818, label %824, label %819

; <label>:819:                                    ; preds = %810
  %820 = load i32, i32* %29, align 4
  %821 = load i32, i32* %27, align 4
  %822 = sub nsw i32 %820, %821
  %823 = icmp sgt i32 %822, 1
  br i1 %823, label %824, label %1294

; <label>:824:                                    ; preds = %819, %810
  %825 = load i32, i32* %30, align 4
  %826 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %827 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %826, i32 0, i32 37
  %828 = load i32, i32* %827, align 8
  %829 = icmp slt i32 %825, %828
  br i1 %829, label %874, label %830

; <label>:830:                                    ; preds = %824
  %831 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %832 = getelementptr inbounds [5 x float], [5 x float]* %831, i32 0, i32 0
  %833 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 1
  %834 = getelementptr inbounds [5 x float], [5 x float]* %833, i32 0, i32 0
  %835 = call double @_ZN3pov15Colour_DistanceEPfS0_(float* %832, float* %834)
  %836 = fcmp ogt double %835, 1.000000e-01
  br i1 %836, label %874, label %837

; <label>:837:                                    ; preds = %830
  %838 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 1
  %839 = getelementptr inbounds [5 x float], [5 x float]* %838, i32 0, i32 0
  %840 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 3
  %841 = getelementptr inbounds [5 x float], [5 x float]* %840, i32 0, i32 0
  %842 = call double @_ZN3pov15Colour_DistanceEPfS0_(float* %839, float* %841)
  %843 = fcmp ogt double %842, 1.000000e-01
  br i1 %843, label %874, label %844

; <label>:844:                                    ; preds = %837
  %845 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 3
  %846 = getelementptr inbounds [5 x float], [5 x float]* %845, i32 0, i32 0
  %847 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 2
  %848 = getelementptr inbounds [5 x float], [5 x float]* %847, i32 0, i32 0
  %849 = call double @_ZN3pov15Colour_DistanceEPfS0_(float* %846, float* %848)
  %850 = fcmp ogt double %849, 1.000000e-01
  br i1 %850, label %874, label %851

; <label>:851:                                    ; preds = %844
  %852 = load i32, i32* @x.135
  %853 = load i32, i32* @y.136
  %854 = sub i32 %852, 1
  %855 = mul i32 %852, %854
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %853, 10
  %859 = or i1 %857, %858
  br i1 %859, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %originalBB157alteredBB, %851
  %860 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 2
  %861 = getelementptr inbounds [5 x float], [5 x float]* %860, i32 0, i32 0
  %862 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %863 = getelementptr inbounds [5 x float], [5 x float]* %862, i32 0, i32 0
  %864 = call double @_ZN3pov15Colour_DistanceEPfS0_(float* %861, float* %863)
  %865 = fcmp ogt double %864, 1.000000e-01
  %866 = load i32, i32* @x.135
  %867 = load i32, i32* @y.136
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br i1 %865, label %874, label %1293

; <label>:874:                                    ; preds = %originalBBpart2159, %844, %837, %830, %824
  %875 = load i32, i32* @x.135
  %876 = load i32, i32* @y.136
  %877 = sub i32 %875, 1
  %878 = mul i32 %875, %877
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %876, 10
  %882 = or i1 %880, %881
  br i1 %882, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %originalBB161alteredBB, %874
  store i32 0, i32* %38, align 4
  %883 = load i32, i32* @x.135
  %884 = load i32, i32* @y.136
  %885 = sub i32 %883, 1
  %886 = mul i32 %883, %885
  %887 = urem i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = icmp slt i32 %884, 10
  %890 = or i1 %888, %889
  br i1 %890, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %891

; <label>:891:                                    ; preds = %1289, %originalBBpart2163
  %892 = load i32, i32* %38, align 4
  %893 = icmp slt i32 %892, 4
  br i1 %893, label %894, label %1292

; <label>:894:                                    ; preds = %891
  %895 = load i32, i32* %38, align 4
  switch i32 %895, label %1012 [
    i32 0, label %896
    i32 1, label %929
    i32 2, label %946
    i32 3, label %979
  ]

; <label>:896:                                    ; preds = %894
  %897 = load i32, i32* @x.135
  %898 = load i32, i32* @y.136
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %originalBB165alteredBB, %896
  %905 = load i32, i32* %26, align 4
  store i32 %905, i32* %42, align 4
  %906 = load i32, i32* %27, align 4
  store i32 %906, i32* %43, align 4
  %907 = load i32, i32* %26, align 4
  %908 = load i32, i32* %28, align 4
  %909 = add nsw i32 %907, %908
  %910 = sitofp i32 %909 to double
  %911 = fdiv double %910, 2.000000e+00
  %912 = call double @floor(double %911) #5
  %913 = fptosi double %912 to i32
  store i32 %913, i32* %44, align 4
  %914 = load i32, i32* %27, align 4
  %915 = load i32, i32* %29, align 4
  %916 = add nsw i32 %914, %915
  %917 = sitofp i32 %916 to double
  %918 = fdiv double %917, 2.000000e+00
  %919 = call double @floor(double %918) #5
  %920 = fptosi double %919 to i32
  store i32 %920, i32* %45, align 4
  %921 = load i32, i32* @x.135
  %922 = load i32, i32* @y.136
  %923 = sub i32 %921, 1
  %924 = mul i32 %921, %923
  %925 = urem i32 %924, 2
  %926 = icmp eq i32 %925, 0
  %927 = icmp slt i32 %922, 10
  %928 = or i1 %926, %927
  br i1 %928, label %originalBBpart2182, label %originalBB165alteredBB

originalBBpart2182:                               ; preds = %originalBB165
  br label %1013

; <label>:929:                                    ; preds = %894
  %930 = load i32, i32* %26, align 4
  %931 = load i32, i32* %28, align 4
  %932 = add nsw i32 %930, %931
  %933 = sitofp i32 %932 to double
  %934 = fdiv double %933, 2.000000e+00
  %935 = call double @ceil(double %934) #5
  %936 = fptosi double %935 to i32
  store i32 %936, i32* %42, align 4
  %937 = load i32, i32* %27, align 4
  store i32 %937, i32* %43, align 4
  %938 = load i32, i32* %28, align 4
  store i32 %938, i32* %44, align 4
  %939 = load i32, i32* %27, align 4
  %940 = load i32, i32* %29, align 4
  %941 = add nsw i32 %939, %940
  %942 = sitofp i32 %941 to double
  %943 = fdiv double %942, 2.000000e+00
  %944 = call double @floor(double %943) #5
  %945 = fptosi double %944 to i32
  store i32 %945, i32* %45, align 4
  br label %1013

; <label>:946:                                    ; preds = %894
  %947 = load i32, i32* @x.135
  %948 = load i32, i32* @y.136
  %949 = sub i32 %947, 1
  %950 = mul i32 %947, %949
  %951 = urem i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = icmp slt i32 %948, 10
  %954 = or i1 %952, %953
  br i1 %954, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %originalBB184alteredBB, %946
  %955 = load i32, i32* %26, align 4
  store i32 %955, i32* %42, align 4
  %956 = load i32, i32* %27, align 4
  %957 = load i32, i32* %29, align 4
  %958 = add nsw i32 %956, %957
  %959 = sitofp i32 %958 to double
  %960 = fdiv double %959, 2.000000e+00
  %961 = call double @ceil(double %960) #5
  %962 = fptosi double %961 to i32
  store i32 %962, i32* %43, align 4
  %963 = load i32, i32* %26, align 4
  %964 = load i32, i32* %28, align 4
  %965 = add nsw i32 %963, %964
  %966 = sitofp i32 %965 to double
  %967 = fdiv double %966, 2.000000e+00
  %968 = call double @floor(double %967) #5
  %969 = fptosi double %968 to i32
  store i32 %969, i32* %44, align 4
  %970 = load i32, i32* %29, align 4
  store i32 %970, i32* %45, align 4
  %971 = load i32, i32* @x.135
  %972 = load i32, i32* @y.136
  %973 = sub i32 %971, 1
  %974 = mul i32 %971, %973
  %975 = urem i32 %974, 2
  %976 = icmp eq i32 %975, 0
  %977 = icmp slt i32 %972, 10
  %978 = or i1 %976, %977
  br i1 %978, label %originalBBpart2208, label %originalBB184alteredBB

originalBBpart2208:                               ; preds = %originalBB184
  br label %1013

; <label>:979:                                    ; preds = %894
  %980 = load i32, i32* @x.135
  %981 = load i32, i32* @y.136
  %982 = sub i32 %980, 1
  %983 = mul i32 %980, %982
  %984 = urem i32 %983, 2
  %985 = icmp eq i32 %984, 0
  %986 = icmp slt i32 %981, 10
  %987 = or i1 %985, %986
  br i1 %987, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %979
  %988 = load i32, i32* %26, align 4
  %989 = load i32, i32* %28, align 4
  %990 = add nsw i32 %988, %989
  %991 = sitofp i32 %990 to double
  %992 = fdiv double %991, 2.000000e+00
  %993 = call double @ceil(double %992) #5
  %994 = fptosi double %993 to i32
  store i32 %994, i32* %42, align 4
  %995 = load i32, i32* %27, align 4
  %996 = load i32, i32* %29, align 4
  %997 = add nsw i32 %995, %996
  %998 = sitofp i32 %997 to double
  %999 = fdiv double %998, 2.000000e+00
  %1000 = call double @ceil(double %999) #5
  %1001 = fptosi double %1000 to i32
  store i32 %1001, i32* %43, align 4
  %1002 = load i32, i32* %28, align 4
  store i32 %1002, i32* %44, align 4
  %1003 = load i32, i32* %29, align 4
  store i32 %1003, i32* %45, align 4
  %1004 = load i32, i32* @x.135
  %1005 = load i32, i32* @y.136
  %1006 = sub i32 %1004, 1
  %1007 = mul i32 %1004, %1006
  %1008 = urem i32 %1007, 2
  %1009 = icmp eq i32 %1008, 0
  %1010 = icmp slt i32 %1005, 10
  %1011 = or i1 %1009, %1010
  br i1 %1011, label %originalBBpart2247, label %originalBB210alteredBB

originalBBpart2247:                               ; preds = %originalBB210
  br label %1013

; <label>:1012:                                   ; preds = %894
  store i32 0, i32* %45, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %42, align 4
  br label %1013

; <label>:1013:                                   ; preds = %1012, %originalBBpart2247, %originalBBpart2208, %929, %originalBBpart2182
  %1014 = load i32, i32* @x.135
  %1015 = load i32, i32* @y.136
  %1016 = sub i32 %1014, 1
  %1017 = mul i32 %1014, %1016
  %1018 = urem i32 %1017, 2
  %1019 = icmp eq i32 %1018, 0
  %1020 = icmp slt i32 %1015, 10
  %1021 = or i1 %1019, %1020
  br i1 %1021, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %originalBB249alteredBB, %1013
  %1022 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1023 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1022, i32 0, i32 0
  %1024 = getelementptr inbounds [3 x double], [3 x double]* %1023, i32 0, i32 0
  %1025 = load double*, double** %24, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1024, double* %1025)
  %1026 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1027 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1026, i32 0, i32 27
  %1028 = load i8, i8* %1027, align 8
  %1029 = zext i8 %1028 to i32
  %1030 = icmp eq i32 %1029, 4
  %1031 = load i32, i32* @x.135
  %1032 = load i32, i32* @y.136
  %1033 = sub i32 %1031, 1
  %1034 = mul i32 %1031, %1033
  %1035 = urem i32 %1034, 2
  %1036 = icmp eq i32 %1035, 0
  %1037 = icmp slt i32 %1032, 10
  %1038 = or i1 %1036, %1037
  br i1 %1038, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br i1 %1030, label %1039, label %1085

; <label>:1039:                                   ; preds = %originalBBpart2251
  %1040 = load i32, i32* @x.135
  %1041 = load i32, i32* @y.136
  %1042 = sub i32 %1040, 1
  %1043 = mul i32 %1040, %1042
  %1044 = urem i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = icmp slt i32 %1041, 10
  %1047 = or i1 %1045, %1046
  br i1 %1047, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %originalBB253alteredBB, %1039
  %1048 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1049 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1048, i32 0, i32 1
  %1050 = getelementptr inbounds [3 x double], [3 x double]* %1049, i32 0, i32 0
  %1051 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1052 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1051, i32 0, i32 17
  %1053 = getelementptr inbounds [3 x double], [3 x double]* %1052, i32 0, i32 0
  %1054 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1055 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1054, i32 0, i32 18
  %1056 = getelementptr inbounds [3 x double], [3 x double]* %1055, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1050, double* %1053, double* %1056)
  %1057 = getelementptr inbounds [3 x double], [3 x double]* %59, i32 0, i32 0
  %1058 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1059 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1058, i32 0, i32 17
  %1060 = getelementptr inbounds [3 x double], [3 x double]* %1059, i32 0, i32 0
  %1061 = load double*, double** %24, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1057, double* %1060, double* %1061)
  %1062 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1063 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1062, i32 0, i32 1
  %1064 = getelementptr inbounds [3 x double], [3 x double]* %1063, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %58, double* %1064)
  %1065 = load double*, double** %21, align 8
  %1066 = getelementptr inbounds [3 x double], [3 x double]* %59, i32 0, i32 0
  %1067 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1068 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1067, i32 0, i32 1
  %1069 = getelementptr inbounds [3 x double], [3 x double]* %1068, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %1065, double* %1066, double* %1069)
  %1070 = load double, double* %58, align 8
  %1071 = load double*, double** %21, align 8
  %1072 = load double, double* %1071, align 8
  %1073 = fdiv double %1072, %1070
  store double %1073, double* %1071, align 8
  %1074 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1075 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1074, i32 0, i32 1
  %1076 = getelementptr inbounds [3 x double], [3 x double]* %1075, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %1076)
  %1077 = load i32, i32* @x.135
  %1078 = load i32, i32* @y.136
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBBpart2263, label %originalBB253alteredBB

originalBBpart2263:                               ; preds = %originalBB253
  br label %1102

; <label>:1085:                                   ; preds = %originalBBpart2251
  %1086 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1087 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1086, i32 0, i32 1
  %1088 = getelementptr inbounds [3 x double], [3 x double]* %1087, i32 0, i32 0
  %1089 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1090 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1089, i32 0, i32 17
  %1091 = getelementptr inbounds [3 x double], [3 x double]* %1090, i32 0, i32 0
  %1092 = load double*, double** %24, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1088, double* %1091, double* %1092)
  %1093 = load double*, double** %21, align 8
  %1094 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1095 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1094, i32 0, i32 1
  %1096 = getelementptr inbounds [3 x double], [3 x double]* %1095, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %1093, double* %1096)
  %1097 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1098 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1097, i32 0, i32 1
  %1099 = getelementptr inbounds [3 x double], [3 x double]* %1098, i32 0, i32 0
  %1100 = load double*, double** %21, align 8
  %1101 = load double, double* %1100, align 8
  call void @_ZN3pov15VInverseScaleEqEPdd(double* %1099, double %1101)
  br label %1102

; <label>:1102:                                   ; preds = %1085, %originalBBpart2263
  %1103 = load i32, i32* @x.135
  %1104 = load i32, i32* @y.136
  %1105 = sub i32 %1103, 1
  %1106 = mul i32 %1103, %1105
  %1107 = urem i32 %1106, 2
  %1108 = icmp eq i32 %1107, 0
  %1109 = icmp slt i32 %1104, 10
  %1110 = or i1 %1108, %1109
  br i1 %1110, label %originalBB265, label %originalBB265alteredBB

originalBB265:                                    ; preds = %originalBB265alteredBB, %1102
  %1111 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1112 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1111, i32 0, i32 33
  %1113 = load i8, i8* %1112, align 2
  %1114 = icmp ne i8 %1113, 0
  %1115 = load i32, i32* @x.135
  %1116 = load i32, i32* @y.136
  %1117 = sub i32 %1115, 1
  %1118 = mul i32 %1115, %1117
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1116, 10
  %1122 = or i1 %1120, %1121
  br i1 %1122, label %originalBBpart2267, label %originalBB265alteredBB

originalBBpart2267:                               ; preds = %originalBB265
  br i1 %1114, label %1123, label %1219

; <label>:1123:                                   ; preds = %originalBBpart2267
  %1124 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1125 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1124, i32 0, i32 28
  %1126 = load i8, i8* %1125, align 1
  %1127 = icmp ne i8 %1126, 0
  br i1 %1127, label %1128, label %1165

; <label>:1128:                                   ; preds = %1123
  %1129 = load i32, i32* @x.135
  %1130 = load i32, i32* @y.136
  %1131 = sub i32 %1129, 1
  %1132 = mul i32 %1129, %1131
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1130, 10
  %1136 = or i1 %1134, %1135
  br i1 %1136, label %originalBB269, label %originalBB269alteredBB

originalBB269:                                    ; preds = %originalBB269alteredBB, %1128
  %1137 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  %1138 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1139 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1138, i32 0, i32 17
  %1140 = getelementptr inbounds [3 x double], [3 x double]* %1139, i32 0, i32 0
  %1141 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1142 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1141, i32 0, i32 18
  %1143 = getelementptr inbounds [3 x double], [3 x double]* %1142, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1137, double* %1140, double* %1143)
  %1144 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %1144)
  %1145 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  %1146 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1147 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1146, i32 0, i32 1
  %1148 = getelementptr inbounds [3 x double], [3 x double]* %1147, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %56, double* %1145, double* %1148)
  %1149 = load double, double* %56, align 8
  %1150 = load double*, double** %21, align 8
  %1151 = load double, double* %1150, align 8
  %1152 = fmul double %1151, %1149
  store double %1152, double* %1150, align 8
  %1153 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1154 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1153, i32 0, i32 1
  %1155 = getelementptr inbounds [3 x double], [3 x double]* %1154, i32 0, i32 0
  %1156 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1155, double* %1156)
  %1157 = load i32, i32* @x.135
  %1158 = load i32, i32* @y.136
  %1159 = sub i32 %1157, 1
  %1160 = mul i32 %1157, %1159
  %1161 = urem i32 %1160, 2
  %1162 = icmp eq i32 %1161, 0
  %1163 = icmp slt i32 %1158, 10
  %1164 = or i1 %1162, %1163
  br i1 %1164, label %originalBBpart2279, label %originalBB269alteredBB

originalBBpart2279:                               ; preds = %originalBB269
  br label %1202

; <label>:1165:                                   ; preds = %1123
  %1166 = load i32, i32* @x.135
  %1167 = load i32, i32* @y.136
  %1168 = sub i32 %1166, 1
  %1169 = mul i32 %1166, %1168
  %1170 = urem i32 %1169, 2
  %1171 = icmp eq i32 %1170, 0
  %1172 = icmp slt i32 %1167, 10
  %1173 = or i1 %1171, %1172
  br i1 %1173, label %originalBB281, label %originalBB281alteredBB

originalBB281:                                    ; preds = %originalBB281alteredBB, %1165
  %1174 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1175 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1174, i32 0, i32 16
  %1176 = getelementptr inbounds [3 x double], [3 x double]* %1175, i32 0, i32 0
  %1177 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1178 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1177, i32 0, i32 1
  %1179 = getelementptr inbounds [3 x double], [3 x double]* %1178, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %56, double* %1176, double* %1179)
  %1180 = load double, double* %56, align 8
  %1181 = fsub double -0.000000e+00, %1180
  %1182 = load double*, double** %21, align 8
  %1183 = load double, double* %1182, align 8
  %1184 = fmul double %1183, %1181
  store double %1184, double* %1182, align 8
  %1185 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1186 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1185, i32 0, i32 1
  %1187 = getelementptr inbounds [3 x double], [3 x double]* %1186, i32 0, i32 0
  %1188 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1189 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1188, i32 0, i32 16
  %1190 = getelementptr inbounds [3 x double], [3 x double]* %1189, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1187, double* %1190)
  %1191 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1192 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1191, i32 0, i32 1
  %1193 = getelementptr inbounds [3 x double], [3 x double]* %1192, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %1193, double -1.000000e+00)
  %1194 = load i32, i32* @x.135
  %1195 = load i32, i32* @y.136
  %1196 = sub i32 %1194, 1
  %1197 = mul i32 %1194, %1196
  %1198 = urem i32 %1197, 2
  %1199 = icmp eq i32 %1198, 0
  %1200 = icmp slt i32 %1195, 10
  %1201 = or i1 %1199, %1200
  br i1 %1201, label %originalBBpart2295, label %originalBB281alteredBB

originalBBpart2295:                               ; preds = %originalBB281
  br label %1202

; <label>:1202:                                   ; preds = %originalBBpart2295, %originalBBpart2279
  %1203 = load i32, i32* @x.135
  %1204 = load i32, i32* @y.136
  %1205 = sub i32 %1203, 1
  %1206 = mul i32 %1203, %1205
  %1207 = urem i32 %1206, 2
  %1208 = icmp eq i32 %1207, 0
  %1209 = icmp slt i32 %1204, 10
  %1210 = or i1 %1208, %1209
  br i1 %1210, label %originalBB297, label %originalBB297alteredBB

originalBB297:                                    ; preds = %originalBB297alteredBB, %1202
  %1211 = load i32, i32* @x.135
  %1212 = load i32, i32* @y.136
  %1213 = sub i32 %1211, 1
  %1214 = mul i32 %1211, %1213
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1212, 10
  %1218 = or i1 %1216, %1217
  br i1 %1218, label %originalBBpart2299, label %originalBB297alteredBB

originalBBpart2299:                               ; preds = %originalBB297
  br label %1219

; <label>:1219:                                   ; preds = %originalBBpart2299, %originalBBpart2267
  %1220 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1221 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1220, i32 0, i32 2
  store i32 -1, i32* %1221, align 8
  %1222 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %1223 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1222, i32 0, i32 2
  %1224 = load i32, i32* %1223, align 8
  %1225 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1226 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1225, i32 0, i32 2
  store i32 %1224, i32* %1226, align 8
  %1227 = icmp sge i32 %1224, 100
  br i1 %1227, label %1228, label %1230

; <label>:1228:                                   ; preds = %1219
  %1229 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i32 0, i32 0))
  br label %1230

; <label>:1230:                                   ; preds = %1228, %1219
  store i32 0, i32* %60, align 4
  br label %1231

; <label>:1231:                                   ; preds = %1249, %1230
  %1232 = load i32, i32* %60, align 4
  %1233 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %1234 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1233, i32 0, i32 2
  %1235 = load i32, i32* %1234, align 8
  %1236 = icmp sle i32 %1232, %1235
  br i1 %1236, label %1237, label %1252

; <label>:1237:                                   ; preds = %1231
  %1238 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %1239 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1238, i32 0, i32 4
  %1240 = load i32, i32* %60, align 4
  %1241 = sext i32 %1240 to i64
  %1242 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %1239, i64 0, i64 %1241
  %1243 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %1242, align 8
  %1244 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1245 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1244, i32 0, i32 4
  %1246 = load i32, i32* %60, align 4
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %1245, i64 0, i64 %1247
  store %"struct.pov::Interior_Struct"* %1243, %"struct.pov::Interior_Struct"** %1248, align 8
  br label %1249

; <label>:1249:                                   ; preds = %1237
  %1250 = load i32, i32* %60, align 4
  %1251 = add nsw i32 %1250, 1
  store i32 %1251, i32* %60, align 4
  br label %1231

; <label>:1252:                                   ; preds = %1231
  %1253 = load i32, i32* @x.135
  %1254 = load i32, i32* @y.136
  %1255 = sub i32 %1253, 1
  %1256 = mul i32 %1253, %1255
  %1257 = urem i32 %1256, 2
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp slt i32 %1254, 10
  %1260 = or i1 %1258, %1259
  br i1 %1260, label %originalBB301, label %originalBB301alteredBB

originalBB301:                                    ; preds = %originalBB301alteredBB, %1252
  %1261 = load i32, i32* %38, align 4
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1262
  %1264 = getelementptr inbounds [5 x float], [5 x float]* %1263, i32 0, i32 0
  %1265 = load float*, float** %25, align 8
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %1264, float* %1265)
  %1266 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1267 = load double*, double** %21, align 8
  %1268 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1269 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %1270 = load double*, double** %24, align 8
  %1271 = load i32, i32* %38, align 4
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1272
  %1274 = getelementptr inbounds [5 x float], [5 x float]* %1273, i32 0, i32 0
  %1275 = load i32, i32* %42, align 4
  %1276 = load i32, i32* %43, align 4
  %1277 = load i32, i32* %44, align 4
  %1278 = load i32, i32* %45, align 4
  %1279 = load i32, i32* %30, align 4
  %1280 = add nsw i32 %1279, 1
  call void @_ZN3povL16block_area_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pfiiiii(%"struct.pov::Light_Source_Struct"* %1266, double* %1267, %"struct.pov::Ray_Struct"* %1268, %"struct.pov::Ray_Struct"* %1269, double* %1270, float* %1274, i32 %1275, i32 %1276, i32 %1277, i32 %1278, i32 %1280)
  %1281 = load i32, i32* @x.135
  %1282 = load i32, i32* @y.136
  %1283 = sub i32 %1281, 1
  %1284 = mul i32 %1281, %1283
  %1285 = urem i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp slt i32 %1282, 10
  %1288 = or i1 %1286, %1287
  br i1 %1288, label %originalBBpart2307, label %originalBB301alteredBB

originalBBpart2307:                               ; preds = %originalBB301
  br label %1289

; <label>:1289:                                   ; preds = %originalBBpart2307
  %1290 = load i32, i32* %38, align 4
  %1291 = add nsw i32 %1290, 1
  store i32 %1291, i32* %38, align 4
  br label %891

; <label>:1292:                                   ; preds = %891
  br label %1293

; <label>:1293:                                   ; preds = %1292, %originalBBpart2159
  br label %1294

; <label>:1294:                                   ; preds = %1293, %819
  %1295 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %1296 = getelementptr inbounds [5 x float], [5 x float]* %1295, i64 0, i64 0
  %1297 = load float, float* %1296, align 16
  %1298 = fpext float %1297 to double
  %1299 = fmul double %1298, 2.500000e-01
  %1300 = fptrunc double %1299 to float
  %1301 = load float*, float** %25, align 8
  %1302 = getelementptr inbounds float, float* %1301, i64 0
  store float %1300, float* %1302, align 4
  %1303 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %1304 = getelementptr inbounds [5 x float], [5 x float]* %1303, i64 0, i64 1
  %1305 = load float, float* %1304, align 4
  %1306 = fpext float %1305 to double
  %1307 = fmul double %1306, 2.500000e-01
  %1308 = fptrunc double %1307 to float
  %1309 = load float*, float** %25, align 8
  %1310 = getelementptr inbounds float, float* %1309, i64 1
  store float %1308, float* %1310, align 4
  %1311 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %1312 = getelementptr inbounds [5 x float], [5 x float]* %1311, i64 0, i64 2
  %1313 = load float, float* %1312, align 8
  %1314 = fpext float %1313 to double
  %1315 = fmul double %1314, 2.500000e-01
  %1316 = fptrunc double %1315 to float
  %1317 = load float*, float** %25, align 8
  %1318 = getelementptr inbounds float, float* %1317, i64 2
  store float %1316, float* %1318, align 4
  %1319 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %1320 = getelementptr inbounds [5 x float], [5 x float]* %1319, i64 0, i64 3
  %1321 = load float, float* %1320, align 4
  %1322 = fpext float %1321 to double
  %1323 = fmul double %1322, 2.500000e-01
  %1324 = load float*, float** %25, align 8
  %1325 = getelementptr inbounds float, float* %1324, i64 3
  %1326 = load float, float* %1325, align 4
  %1327 = fpext float %1326 to double
  %1328 = fadd double %1327, %1323
  %1329 = fptrunc double %1328 to float
  store float %1329, float* %1325, align 4
  %1330 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %1331 = getelementptr inbounds [5 x float], [5 x float]* %1330, i64 0, i64 4
  %1332 = load float, float* %1331, align 16
  %1333 = fpext float %1332 to double
  %1334 = fmul double %1333, 2.500000e-01
  %1335 = load float*, float** %25, align 8
  %1336 = getelementptr inbounds float, float* %1335, i64 4
  %1337 = load float, float* %1336, align 4
  %1338 = fpext float %1337 to double
  %1339 = fadd double %1338, %1334
  %1340 = fptrunc double %1339 to float
  store float %1340, float* %1336, align 4
  store i32 1, i32* %38, align 4
  br label %1341

; <label>:1341:                                   ; preds = %originalBBpart2408, %1294
  %1342 = load i32, i32* %38, align 4
  %1343 = icmp slt i32 %1342, 4
  br i1 %1343, label %1344, label %1445

; <label>:1344:                                   ; preds = %1341
  %1345 = load i32, i32* @x.135
  %1346 = load i32, i32* @y.136
  %1347 = sub i32 %1345, 1
  %1348 = mul i32 %1345, %1347
  %1349 = urem i32 %1348, 2
  %1350 = icmp eq i32 %1349, 0
  %1351 = icmp slt i32 %1346, 10
  %1352 = or i1 %1350, %1351
  br i1 %1352, label %originalBB309, label %originalBB309alteredBB

originalBB309:                                    ; preds = %originalBB309alteredBB, %1344
  %1353 = load i32, i32* %38, align 4
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1354
  %1356 = getelementptr inbounds [5 x float], [5 x float]* %1355, i64 0, i64 0
  %1357 = load float, float* %1356, align 4
  %1358 = fpext float %1357 to double
  %1359 = fmul double %1358, 2.500000e-01
  %1360 = load float*, float** %25, align 8
  %1361 = getelementptr inbounds float, float* %1360, i64 0
  %1362 = load float, float* %1361, align 4
  %1363 = fpext float %1362 to double
  %1364 = fadd double %1363, %1359
  %1365 = fptrunc double %1364 to float
  store float %1365, float* %1361, align 4
  %1366 = load i32, i32* %38, align 4
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1367
  %1369 = getelementptr inbounds [5 x float], [5 x float]* %1368, i64 0, i64 1
  %1370 = load float, float* %1369, align 4
  %1371 = fpext float %1370 to double
  %1372 = fmul double %1371, 2.500000e-01
  %1373 = load float*, float** %25, align 8
  %1374 = getelementptr inbounds float, float* %1373, i64 1
  %1375 = load float, float* %1374, align 4
  %1376 = fpext float %1375 to double
  %1377 = fadd double %1376, %1372
  %1378 = fptrunc double %1377 to float
  store float %1378, float* %1374, align 4
  %1379 = load i32, i32* %38, align 4
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1380
  %1382 = getelementptr inbounds [5 x float], [5 x float]* %1381, i64 0, i64 2
  %1383 = load float, float* %1382, align 4
  %1384 = fpext float %1383 to double
  %1385 = fmul double %1384, 2.500000e-01
  %1386 = load float*, float** %25, align 8
  %1387 = getelementptr inbounds float, float* %1386, i64 2
  %1388 = load float, float* %1387, align 4
  %1389 = fpext float %1388 to double
  %1390 = fadd double %1389, %1385
  %1391 = fptrunc double %1390 to float
  store float %1391, float* %1387, align 4
  %1392 = load i32, i32* %38, align 4
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1393
  %1395 = getelementptr inbounds [5 x float], [5 x float]* %1394, i64 0, i64 3
  %1396 = load float, float* %1395, align 4
  %1397 = fpext float %1396 to double
  %1398 = fmul double %1397, 2.500000e-01
  %1399 = load float*, float** %25, align 8
  %1400 = getelementptr inbounds float, float* %1399, i64 3
  %1401 = load float, float* %1400, align 4
  %1402 = fpext float %1401 to double
  %1403 = fadd double %1402, %1398
  %1404 = fptrunc double %1403 to float
  store float %1404, float* %1400, align 4
  %1405 = load i32, i32* %38, align 4
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1406
  %1408 = getelementptr inbounds [5 x float], [5 x float]* %1407, i64 0, i64 4
  %1409 = load float, float* %1408, align 4
  %1410 = fpext float %1409 to double
  %1411 = fmul double %1410, 2.500000e-01
  %1412 = load float*, float** %25, align 8
  %1413 = getelementptr inbounds float, float* %1412, i64 4
  %1414 = load float, float* %1413, align 4
  %1415 = fpext float %1414 to double
  %1416 = fadd double %1415, %1411
  %1417 = fptrunc double %1416 to float
  store float %1417, float* %1413, align 4
  %1418 = load i32, i32* @x.135
  %1419 = load i32, i32* @y.136
  %1420 = sub i32 %1418, 1
  %1421 = mul i32 %1418, %1420
  %1422 = urem i32 %1421, 2
  %1423 = icmp eq i32 %1422, 0
  %1424 = icmp slt i32 %1419, 10
  %1425 = or i1 %1423, %1424
  br i1 %1425, label %originalBBpart2393, label %originalBB309alteredBB

originalBBpart2393:                               ; preds = %originalBB309
  br label %1426

; <label>:1426:                                   ; preds = %originalBBpart2393
  %1427 = load i32, i32* @x.135
  %1428 = load i32, i32* @y.136
  %1429 = sub i32 %1427, 1
  %1430 = mul i32 %1427, %1429
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1428, 10
  %1434 = or i1 %1432, %1433
  br i1 %1434, label %originalBB395, label %originalBB395alteredBB

originalBB395:                                    ; preds = %originalBB395alteredBB, %1426
  %1435 = load i32, i32* %38, align 4
  %1436 = add nsw i32 %1435, 1
  store i32 %1436, i32* %38, align 4
  %1437 = load i32, i32* @x.135
  %1438 = load i32, i32* @y.136
  %1439 = sub i32 %1437, 1
  %1440 = mul i32 %1437, %1439
  %1441 = urem i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = icmp slt i32 %1438, 10
  %1444 = or i1 %1442, %1443
  br i1 %1444, label %originalBBpart2408, label %originalBB395alteredBB

originalBBpart2408:                               ; preds = %originalBB395
  br label %1341

; <label>:1445:                                   ; preds = %1341
  %1446 = load i8, i8* %47, align 1
  %1447 = trunc i8 %1446 to i1
  %1448 = zext i1 %1447 to i32
  %1449 = icmp eq i32 %1448, 1
  br i1 %1449, label %1450, label %1483

; <label>:1450:                                   ; preds = %1445
  %1451 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1452 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1451, i32 0, i32 30
  %1453 = load i8, i8* %1452, align 1
  %1454 = trunc i8 %1453 to i1
  %1455 = zext i1 %1454 to i32
  %1456 = icmp eq i32 %1455, 1
  br i1 %1456, label %1457, label %1482

; <label>:1457:                                   ; preds = %1450
  %1458 = load i32, i32* @x.135
  %1459 = load i32, i32* @y.136
  %1460 = sub i32 %1458, 1
  %1461 = mul i32 %1458, %1460
  %1462 = urem i32 %1461, 2
  %1463 = icmp eq i32 %1462, 0
  %1464 = icmp slt i32 %1459, 10
  %1465 = or i1 %1463, %1464
  br i1 %1465, label %originalBB410, label %originalBB410alteredBB

originalBB410:                                    ; preds = %originalBB410alteredBB, %1457
  %1466 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1467 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1466, i32 0, i32 19
  %1468 = getelementptr inbounds [3 x double], [3 x double]* %1467, i32 0, i32 0
  %1469 = getelementptr inbounds [3 x double], [3 x double]* %35, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1468, double* %1469)
  %1470 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1471 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1470, i32 0, i32 20
  %1472 = getelementptr inbounds [3 x double], [3 x double]* %1471, i32 0, i32 0
  %1473 = getelementptr inbounds [3 x double], [3 x double]* %36, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1472, double* %1473)
  %1474 = load i32, i32* @x.135
  %1475 = load i32, i32* @y.136
  %1476 = sub i32 %1474, 1
  %1477 = mul i32 %1474, %1476
  %1478 = urem i32 %1477, 2
  %1479 = icmp eq i32 %1478, 0
  %1480 = icmp slt i32 %1475, 10
  %1481 = or i1 %1479, %1480
  br i1 %1481, label %originalBBpart2412, label %originalBB410alteredBB

originalBBpart2412:                               ; preds = %originalBB410
  br label %1482

; <label>:1482:                                   ; preds = %originalBBpart2412, %1450
  br label %1483

; <label>:1483:                                   ; preds = %1482, %1445
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %1484 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %1485 = alloca double*, align 8
  %1486 = alloca %"struct.pov::Ray_Struct"*, align 8
  %1487 = alloca %"struct.pov::Ray_Struct"*, align 8
  %1488 = alloca double*, align 8
  %1489 = alloca float*, align 8
  %1490 = alloca i32, align 4
  %1491 = alloca i32, align 4
  %1492 = alloca i32, align 4
  %1493 = alloca i32, align 4
  %1494 = alloca i32, align 4
  %1495 = alloca [4 x [5 x float]], align 16
  %1496 = alloca [3 x double], align 16
  %1497 = alloca [3 x double], align 16
  %1498 = alloca [3 x double], align 16
  %1499 = alloca [3 x double], align 16
  %1500 = alloca [3 x double], align 16
  %1501 = alloca [3 x double], align 16
  %1502 = alloca i32, align 4
  %1503 = alloca i32, align 4
  %1504 = alloca i32, align 4
  %1505 = alloca i32, align 4
  %1506 = alloca i32, align 4
  %1507 = alloca i32, align 4
  %1508 = alloca i32, align 4
  %1509 = alloca i32, align 4
  %1510 = alloca double, align 8
  %1511 = alloca i8, align 1
  %1512 = alloca double, align 8
  %1513 = alloca double, align 8
  %1514 = alloca double, align 8
  %1515 = alloca double, align 8
  %1516 = alloca [3 x double], align 16
  %1517 = alloca double, align 8
  %1518 = alloca [3 x double], align 16
  %1519 = alloca i32, align 4
  %1520 = alloca double, align 8
  %1521 = alloca [3 x double], align 16
  %1522 = alloca double, align 8
  %1523 = alloca [3 x double], align 16
  %1524 = alloca i32, align 4
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %1484, align 8
  store double* %1, double** %1485, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %1486, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %1487, align 8
  store double* %4, double** %1488, align 8
  store float* %5, float** %1489, align 8
  store i32 %6, i32* %1490, align 4
  store i32 %7, i32* %1491, align 4
  store i32 %8, i32* %1492, align 4
  store i32 %9, i32* %1493, align 4
  store i32 %10, i32* %1494, align 4
  store i8 0, i8* %1511, align 1
  %1525 = load i32, i32* %1490, align 4
  %1526 = icmp eq i32 %1525, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %71
  %1527 = load i32, i32* %27, align 4
  %1528 = icmp eq i32 %1527, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  %1529 = load i32, i32* %28, align 4
  %1530 = icmp eq i32 %1529, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %112
  store i8 1, i8* %47, align 1
  store i32 0, i32* %38, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %154
  %1531 = load i32, i32* %39, align 4
  %_ = sub i32 %1531, 1
  %gen = mul i32 %_, 1
  %_15 = sub i32 %1531, 1
  %gen16 = mul i32 %_15, 1
  %1532 = add nsw i32 %1531, 1
  store i32 %1532, i32* %39, align 4
  br label %originalBB14

originalBB20alteredBB:                            ; preds = %originalBB20, %173
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %208
  %1533 = getelementptr inbounds [3 x double], [3 x double]* %35, i32 0, i32 0
  %1534 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1535 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1534, i32 0, i32 19
  %1536 = getelementptr inbounds [3 x double], [3 x double]* %1535, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1533, double* %1536)
  %1537 = getelementptr inbounds [3 x double], [3 x double]* %36, i32 0, i32 0
  %1538 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1539 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1538, i32 0, i32 20
  %1540 = getelementptr inbounds [3 x double], [3 x double]* %1539, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1537, double* %1540)
  %1541 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1542 = load double*, double** %21, align 8
  %1543 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1544 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %1545 = load double*, double** %24, align 8
  call void @_ZN3povL19do_light_area_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_(%"struct.pov::Light_Source_Struct"* %1541, double* %1542, %"struct.pov::Ray_Struct"* %1543, %"struct.pov::Ray_Struct"* %1544, double* %1545)
  %1546 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1547 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1546, i32 0, i32 1
  %1548 = getelementptr inbounds [3 x double], [3 x double]* %1547, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %1548, double -1.000000e+00)
  %1549 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1550 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1549, i32 0, i32 19
  %1551 = getelementptr inbounds [3 x double], [3 x double]* %1550, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %46, double* %1551)
  %1552 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1553 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1552, i32 0, i32 1
  %1554 = getelementptr inbounds [3 x double], [3 x double]* %1553, i64 0, i64 2
  %1555 = load double, double* %1554, align 8
  %1556 = call double @fabs(double %1555) #5
  %_25 = fsub double %1556, 1.000000e+00
  %gen26 = fmul double %_25, 1.000000e+00
  %_27 = fsub double -0.000000e+00, %1556
  %gen28 = fadd double %_27, 1.000000e+00
  %_29 = fsub double -0.000000e+00, %1556
  %gen30 = fadd double %_29, 1.000000e+00
  %_31 = fsub double -0.000000e+00, %1556
  %gen32 = fadd double %_31, 1.000000e+00
  %_33 = fsub double -0.000000e+00, %1556
  %gen34 = fadd double %_33, 1.000000e+00
  %1557 = fsub double %1556, 1.000000e+00
  %1558 = call double @fabs(double %1557) #5
  %1559 = fcmp olt double %1558, 1.000000e-02
  br label %originalBB24

originalBB38alteredBB:                            ; preds = %originalBB38, %252
  %1560 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 0
  store double 0.000000e+00, double* %1560, align 16
  %1561 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 1
  store double 1.000000e+00, double* %1561, align 8
  %1562 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 2
  store double 0.000000e+00, double* %1562, align 16
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %272
  %1563 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 0
  store double 0.000000e+00, double* %1563, align 16
  %1564 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 1
  store double 0.000000e+00, double* %1564, align 8
  %1565 = getelementptr inbounds [3 x double], [3 x double]* %37, i64 0, i64 2
  store double 1.000000e+00, double* %1565, align 16
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %337
  %1566 = load i32, i32* %26, align 4
  store i32 %1566, i32* %40, align 4
  %1567 = load i32, i32* %27, align 4
  store i32 %1567, i32* %41, align 4
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %359
  %1568 = load i32, i32* %26, align 4
  store i32 %1568, i32* %40, align 4
  %1569 = load i32, i32* %29, align 4
  store i32 %1569, i32* %41, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %435
  %1570 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1571 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1570, i32 0, i32 31
  %1572 = load i8, i8* %1571, align 4
  %1573 = trunc i8 %1572 to i1
  %1574 = zext i1 %1573 to i32
  %1575 = icmp eq i32 %1574, 1
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %458
  %1576 = load double, double* %48, align 8
  %1577 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1578 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1577, i32 0, i32 35
  %1579 = load i32, i32* %1578, align 8
  %_59 = sub i32 %1579, 1
  %gen60 = mul i32 %_59, 1
  %_61 = sub i32 %1579, 1
  %gen62 = mul i32 %_61, 1
  %_63 = sub i32 %1579, 1
  %gen64 = mul i32 %_63, 1
  %_65 = sub i32 %1579, 1
  %gen66 = mul i32 %_65, 1
  %_67 = sub i32 0, %1579
  %gen68 = add i32 %_67, 1
  %_69 = sub i32 0, %1579
  %gen70 = add i32 %_69, 1
  %_71 = sub i32 %1579, 1
  %gen72 = mul i32 %_71, 1
  %_73 = sub i32 %1579, 1
  %gen74 = mul i32 %_73, 1
  %1580 = sub nsw i32 %1579, 1
  %1581 = sitofp i32 %1580 to double
  %_75 = fsub double -0.000000e+00, %1576
  %gen76 = fadd double %_75, %1581
  %_77 = fsub double -0.000000e+00, %1576
  %gen78 = fadd double %_77, %1581
  %_79 = fsub double %1576, %1581
  %gen80 = fmul double %_79, %1581
  %_81 = fsub double -0.000000e+00, %1576
  %gen82 = fadd double %_81, %1581
  %_83 = fsub double -0.000000e+00, %1576
  %gen84 = fadd double %_83, %1581
  %_85 = fsub double %1576, %1581
  %gen86 = fmul double %_85, %1581
  %_87 = fsub double %1576, %1581
  %gen88 = fmul double %_87, %1581
  %1582 = fdiv double %1576, %1581
  %_89 = fsub double %1582, 5.000000e-01
  %gen90 = fmul double %_89, 5.000000e-01
  %_91 = fsub double -0.000000e+00, %1582
  %gen92 = fadd double %_91, 5.000000e-01
  %_93 = fsub double -0.000000e+00, %1582
  %gen94 = fadd double %_93, 5.000000e-01
  %1583 = fsub double %1582, 5.000000e-01
  %_95 = fsub double %1583, 1.000000e-03
  %gen96 = fmul double %_95, 1.000000e-03
  %_97 = fsub double %1583, 1.000000e-03
  %gen98 = fmul double %_97, 1.000000e-03
  %_99 = fsub double %1583, 1.000000e-03
  %gen100 = fmul double %_99, 1.000000e-03
  %_101 = fsub double -0.000000e+00, %1583
  %gen102 = fadd double %_101, 1.000000e-03
  %_103 = fsub double -0.000000e+00, %1583
  %gen104 = fadd double %_103, 1.000000e-03
  %_105 = fsub double %1583, 1.000000e-03
  %gen106 = fmul double %_105, 1.000000e-03
  %_107 = fsub double -0.000000e+00, %1583
  %gen108 = fadd double %_107, 1.000000e-03
  %1584 = fadd double %1583, 1.000000e-03
  store double %1584, double* %48, align 8
  %1585 = load double, double* %49, align 8
  %1586 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1587 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1586, i32 0, i32 36
  %1588 = load i32, i32* %1587, align 4
  %_109 = sub i32 %1588, 1
  %gen110 = mul i32 %_109, 1
  %_111 = shl i32 %1588, 1
  %_112 = sub i32 0, %1588
  %gen113 = add i32 %_112, 1
  %_114 = sub i32 0, %1588
  %gen115 = add i32 %_114, 1
  %_116 = sub i32 %1588, 1
  %gen117 = mul i32 %_116, 1
  %_118 = sub i32 %1588, 1
  %gen119 = mul i32 %_118, 1
  %1589 = sub nsw i32 %1588, 1
  %1590 = sitofp i32 %1589 to double
  %_120 = fsub double -0.000000e+00, %1585
  %gen121 = fadd double %_120, %1590
  %_122 = fsub double %1585, %1590
  %gen123 = fmul double %_122, %1590
  %_124 = fsub double -0.000000e+00, %1585
  %gen125 = fadd double %_124, %1590
  %1591 = fdiv double %1585, %1590
  %_126 = fsub double -0.000000e+00, %1591
  %gen127 = fadd double %_126, 5.000000e-01
  %_128 = fsub double %1591, 5.000000e-01
  %gen129 = fmul double %_128, 5.000000e-01
  %_130 = fsub double %1591, 5.000000e-01
  %gen131 = fmul double %_130, 5.000000e-01
  %1592 = fsub double %1591, 5.000000e-01
  %_132 = fsub double -0.000000e+00, %1592
  %gen133 = fadd double %_132, 1.000000e-03
  %_134 = fsub double %1592, 1.000000e-03
  %gen135 = fmul double %_134, 1.000000e-03
  %_136 = fsub double %1592, 1.000000e-03
  %gen137 = fmul double %_136, 1.000000e-03
  %_138 = fsub double -0.000000e+00, %1592
  %gen139 = fadd double %_138, 1.000000e-03
  %1593 = fadd double %1592, 1.000000e-03
  store double %1593, double* %49, align 8
  %1594 = load double, double* %48, align 8
  %1595 = call double @fabs(double %1594) #5
  %1596 = load double, double* %49, align 8
  %1597 = call double @fabs(double %1596) #5
  %1598 = fcmp ogt double %1595, %1597
  br label %originalBB58

originalBB143alteredBB:                           ; preds = %originalBB143, %597
  %1599 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1600 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1599, i32 0, i32 1
  %1601 = getelementptr inbounds [3 x double], [3 x double]* %1600, i32 0, i32 0
  %1602 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1603 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1602, i32 0, i32 17
  %1604 = getelementptr inbounds [3 x double], [3 x double]* %1603, i32 0, i32 0
  %1605 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1606 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1605, i32 0, i32 18
  %1607 = getelementptr inbounds [3 x double], [3 x double]* %1606, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1601, double* %1604, double* %1607)
  %1608 = getelementptr inbounds [3 x double], [3 x double]* %54, i32 0, i32 0
  %1609 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1610 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1609, i32 0, i32 17
  %1611 = getelementptr inbounds [3 x double], [3 x double]* %1610, i32 0, i32 0
  %1612 = load double*, double** %24, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1608, double* %1611, double* %1612)
  %1613 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1614 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1613, i32 0, i32 1
  %1615 = getelementptr inbounds [3 x double], [3 x double]* %1614, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %53, double* %1615)
  %1616 = load double*, double** %21, align 8
  %1617 = getelementptr inbounds [3 x double], [3 x double]* %54, i32 0, i32 0
  %1618 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1619 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1618, i32 0, i32 1
  %1620 = getelementptr inbounds [3 x double], [3 x double]* %1619, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %1616, double* %1617, double* %1620)
  %1621 = load double, double* %53, align 8
  %1622 = load double*, double** %21, align 8
  %1623 = load double, double* %1622, align 8
  %_144 = fsub double -0.000000e+00, %1623
  %gen145 = fadd double %_144, %1621
  %1624 = fdiv double %1623, %1621
  store double %1624, double* %1622, align 8
  %1625 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1626 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1625, i32 0, i32 1
  %1627 = getelementptr inbounds [3 x double], [3 x double]* %1626, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %1627)
  br label %originalBB143

originalBB149alteredBB:                           ; preds = %originalBB149, %660
  %1628 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1629 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1628, i32 0, i32 33
  %1630 = load i8, i8* %1629, align 2
  %1631 = icmp ne i8 %1630, 0
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %681
  %1632 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1633 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1632, i32 0, i32 28
  %1634 = load i8, i8* %1633, align 1
  %1635 = icmp ne i8 %1634, 0
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %851
  %1636 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 2
  %1637 = getelementptr inbounds [5 x float], [5 x float]* %1636, i32 0, i32 0
  %1638 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 0
  %1639 = getelementptr inbounds [5 x float], [5 x float]* %1638, i32 0, i32 0
  %1640 = call double @_ZN3pov15Colour_DistanceEPfS0_(float* %1637, float* %1639)
  %1641 = fcmp ogt double %1640, 1.000000e-01
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %874
  store i32 0, i32* %38, align 4
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %896
  %1642 = load i32, i32* %26, align 4
  store i32 %1642, i32* %42, align 4
  %1643 = load i32, i32* %27, align 4
  store i32 %1643, i32* %43, align 4
  %1644 = load i32, i32* %26, align 4
  %1645 = load i32, i32* %28, align 4
  %_166 = sub i32 %1644, %1645
  %gen167 = mul i32 %_166, %1645
  %1646 = add nsw i32 %1644, %1645
  %1647 = sitofp i32 %1646 to double
  %_168 = fsub double %1647, 2.000000e+00
  %gen169 = fmul double %_168, 2.000000e+00
  %_170 = fsub double -0.000000e+00, %1647
  %gen171 = fadd double %_170, 2.000000e+00
  %1648 = fdiv double %1647, 2.000000e+00
  %1649 = call double @floor(double %1648) #5
  %1650 = fptosi double %1649 to i32
  store i32 %1650, i32* %44, align 4
  %1651 = load i32, i32* %27, align 4
  %1652 = load i32, i32* %29, align 4
  %_172 = sub i32 0, %1651
  %gen173 = add i32 %_172, %1652
  %_174 = sub i32 %1651, %1652
  %gen175 = mul i32 %_174, %1652
  %_176 = sub i32 0, %1651
  %gen177 = add i32 %_176, %1652
  %_178 = shl i32 %1651, %1652
  %1653 = add nsw i32 %1651, %1652
  %1654 = sitofp i32 %1653 to double
  %_179 = fsub double %1654, 2.000000e+00
  %gen180 = fmul double %_179, 2.000000e+00
  %1655 = fdiv double %1654, 2.000000e+00
  %1656 = call double @floor(double %1655) #5
  %1657 = fptosi double %1656 to i32
  store i32 %1657, i32* %45, align 4
  br label %originalBB165

originalBB184alteredBB:                           ; preds = %originalBB184, %946
  %1658 = load i32, i32* %26, align 4
  store i32 %1658, i32* %42, align 4
  %1659 = load i32, i32* %27, align 4
  %1660 = load i32, i32* %29, align 4
  %_185 = sub i32 0, %1659
  %gen186 = add i32 %_185, %1660
  %_187 = sub i32 %1659, %1660
  %gen188 = mul i32 %_187, %1660
  %_189 = sub i32 0, %1659
  %gen190 = add i32 %_189, %1660
  %_191 = sub i32 %1659, %1660
  %gen192 = mul i32 %_191, %1660
  %_193 = shl i32 %1659, %1660
  %_194 = shl i32 %1659, %1660
  %1661 = add nsw i32 %1659, %1660
  %1662 = sitofp i32 %1661 to double
  %_195 = fsub double %1662, 2.000000e+00
  %gen196 = fmul double %_195, 2.000000e+00
  %_197 = fsub double %1662, 2.000000e+00
  %gen198 = fmul double %_197, 2.000000e+00
  %_199 = fsub double -0.000000e+00, %1662
  %gen200 = fadd double %_199, 2.000000e+00
  %_201 = fsub double %1662, 2.000000e+00
  %gen202 = fmul double %_201, 2.000000e+00
  %_203 = fsub double -0.000000e+00, %1662
  %gen204 = fadd double %_203, 2.000000e+00
  %1663 = fdiv double %1662, 2.000000e+00
  %1664 = call double @ceil(double %1663) #5
  %1665 = fptosi double %1664 to i32
  store i32 %1665, i32* %43, align 4
  %1666 = load i32, i32* %26, align 4
  %1667 = load i32, i32* %28, align 4
  %_205 = sub i32 %1666, %1667
  %gen206 = mul i32 %_205, %1667
  %1668 = add nsw i32 %1666, %1667
  %1669 = sitofp i32 %1668 to double
  %1670 = fdiv double %1669, 2.000000e+00
  %1671 = call double @floor(double %1670) #5
  %1672 = fptosi double %1671 to i32
  store i32 %1672, i32* %44, align 4
  %1673 = load i32, i32* %29, align 4
  store i32 %1673, i32* %45, align 4
  br label %originalBB184

originalBB210alteredBB:                           ; preds = %originalBB210, %979
  %1674 = load i32, i32* %26, align 4
  %1675 = load i32, i32* %28, align 4
  %_211 = sub i32 %1674, %1675
  %gen212 = mul i32 %_211, %1675
  %_213 = sub i32 0, %1674
  %gen214 = add i32 %_213, %1675
  %_215 = shl i32 %1674, %1675
  %_216 = sub i32 %1674, %1675
  %gen217 = mul i32 %_216, %1675
  %_218 = sub i32 %1674, %1675
  %gen219 = mul i32 %_218, %1675
  %_220 = sub i32 %1674, %1675
  %gen221 = mul i32 %_220, %1675
  %_222 = sub i32 0, %1674
  %gen223 = add i32 %_222, %1675
  %1676 = add nsw i32 %1674, %1675
  %1677 = sitofp i32 %1676 to double
  %_224 = fsub double %1677, 2.000000e+00
  %gen225 = fmul double %_224, 2.000000e+00
  %1678 = fdiv double %1677, 2.000000e+00
  %1679 = call double @ceil(double %1678) #5
  %1680 = fptosi double %1679 to i32
  store i32 %1680, i32* %42, align 4
  %1681 = load i32, i32* %27, align 4
  %1682 = load i32, i32* %29, align 4
  %_226 = sub i32 0, %1681
  %gen227 = add i32 %_226, %1682
  %_228 = sub i32 0, %1681
  %gen229 = add i32 %_228, %1682
  %_230 = sub i32 0, %1681
  %gen231 = add i32 %_230, %1682
  %1683 = add nsw i32 %1681, %1682
  %1684 = sitofp i32 %1683 to double
  %_232 = fsub double %1684, 2.000000e+00
  %gen233 = fmul double %_232, 2.000000e+00
  %_234 = fsub double -0.000000e+00, %1684
  %gen235 = fadd double %_234, 2.000000e+00
  %_236 = fsub double %1684, 2.000000e+00
  %gen237 = fmul double %_236, 2.000000e+00
  %_238 = fsub double -0.000000e+00, %1684
  %gen239 = fadd double %_238, 2.000000e+00
  %_240 = fsub double %1684, 2.000000e+00
  %gen241 = fmul double %_240, 2.000000e+00
  %_242 = fsub double %1684, 2.000000e+00
  %gen243 = fmul double %_242, 2.000000e+00
  %_244 = fsub double %1684, 2.000000e+00
  %gen245 = fmul double %_244, 2.000000e+00
  %1685 = fdiv double %1684, 2.000000e+00
  %1686 = call double @ceil(double %1685) #5
  %1687 = fptosi double %1686 to i32
  store i32 %1687, i32* %43, align 4
  %1688 = load i32, i32* %28, align 4
  store i32 %1688, i32* %44, align 4
  %1689 = load i32, i32* %29, align 4
  store i32 %1689, i32* %45, align 4
  br label %originalBB210

originalBB249alteredBB:                           ; preds = %originalBB249, %1013
  %1690 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1691 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1690, i32 0, i32 0
  %1692 = getelementptr inbounds [3 x double], [3 x double]* %1691, i32 0, i32 0
  %1693 = load double*, double** %24, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1692, double* %1693)
  %1694 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1695 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1694, i32 0, i32 27
  %1696 = load i8, i8* %1695, align 8
  %1697 = zext i8 %1696 to i32
  %1698 = icmp eq i32 %1697, 4
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %1039
  %1699 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1700 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1699, i32 0, i32 1
  %1701 = getelementptr inbounds [3 x double], [3 x double]* %1700, i32 0, i32 0
  %1702 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1703 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1702, i32 0, i32 17
  %1704 = getelementptr inbounds [3 x double], [3 x double]* %1703, i32 0, i32 0
  %1705 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1706 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1705, i32 0, i32 18
  %1707 = getelementptr inbounds [3 x double], [3 x double]* %1706, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1701, double* %1704, double* %1707)
  %1708 = getelementptr inbounds [3 x double], [3 x double]* %59, i32 0, i32 0
  %1709 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1710 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1709, i32 0, i32 17
  %1711 = getelementptr inbounds [3 x double], [3 x double]* %1710, i32 0, i32 0
  %1712 = load double*, double** %24, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1708, double* %1711, double* %1712)
  %1713 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1714 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1713, i32 0, i32 1
  %1715 = getelementptr inbounds [3 x double], [3 x double]* %1714, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %58, double* %1715)
  %1716 = load double*, double** %21, align 8
  %1717 = getelementptr inbounds [3 x double], [3 x double]* %59, i32 0, i32 0
  %1718 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1719 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1718, i32 0, i32 1
  %1720 = getelementptr inbounds [3 x double], [3 x double]* %1719, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %1716, double* %1717, double* %1720)
  %1721 = load double, double* %58, align 8
  %1722 = load double*, double** %21, align 8
  %1723 = load double, double* %1722, align 8
  %_254 = fsub double %1723, %1721
  %gen255 = fmul double %_254, %1721
  %_256 = fsub double -0.000000e+00, %1723
  %gen257 = fadd double %_256, %1721
  %_258 = fsub double -0.000000e+00, %1723
  %gen259 = fadd double %_258, %1721
  %_260 = fsub double -0.000000e+00, %1723
  %gen261 = fadd double %_260, %1721
  %1724 = fdiv double %1723, %1721
  store double %1724, double* %1722, align 8
  %1725 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1726 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1725, i32 0, i32 1
  %1727 = getelementptr inbounds [3 x double], [3 x double]* %1726, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %1727)
  br label %originalBB253

originalBB265alteredBB:                           ; preds = %originalBB265, %1102
  %1728 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1729 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1728, i32 0, i32 33
  %1730 = load i8, i8* %1729, align 2
  %1731 = icmp ne i8 %1730, 0
  br label %originalBB265

originalBB269alteredBB:                           ; preds = %originalBB269, %1128
  %1732 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  %1733 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1734 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1733, i32 0, i32 17
  %1735 = getelementptr inbounds [3 x double], [3 x double]* %1734, i32 0, i32 0
  %1736 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1737 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1736, i32 0, i32 18
  %1738 = getelementptr inbounds [3 x double], [3 x double]* %1737, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %1732, double* %1735, double* %1738)
  %1739 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %1739)
  %1740 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  %1741 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1742 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1741, i32 0, i32 1
  %1743 = getelementptr inbounds [3 x double], [3 x double]* %1742, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %56, double* %1740, double* %1743)
  %1744 = load double, double* %56, align 8
  %1745 = load double*, double** %21, align 8
  %1746 = load double, double* %1745, align 8
  %_270 = fsub double %1746, %1744
  %gen271 = fmul double %_270, %1744
  %_272 = fsub double -0.000000e+00, %1746
  %gen273 = fadd double %_272, %1744
  %_274 = fsub double %1746, %1744
  %gen275 = fmul double %_274, %1744
  %_276 = fsub double -0.000000e+00, %1746
  %gen277 = fadd double %_276, %1744
  %1747 = fmul double %1746, %1744
  store double %1747, double* %1745, align 8
  %1748 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1749 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1748, i32 0, i32 1
  %1750 = getelementptr inbounds [3 x double], [3 x double]* %1749, i32 0, i32 0
  %1751 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1750, double* %1751)
  br label %originalBB269

originalBB281alteredBB:                           ; preds = %originalBB281, %1165
  %1752 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1753 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1752, i32 0, i32 16
  %1754 = getelementptr inbounds [3 x double], [3 x double]* %1753, i32 0, i32 0
  %1755 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1756 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1755, i32 0, i32 1
  %1757 = getelementptr inbounds [3 x double], [3 x double]* %1756, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %56, double* %1754, double* %1757)
  %1758 = load double, double* %56, align 8
  %_282 = fsub double -0.000000e+00, %1758
  %gen283 = fmul double %_282, %1758
  %_284 = fsub double -0.000000e+00, -0.000000e+00
  %gen285 = fadd double %_284, %1758
  %_286 = fsub double -0.000000e+00, %1758
  %gen287 = fmul double %_286, %1758
  %1759 = fsub double -0.000000e+00, %1758
  %1760 = load double*, double** %21, align 8
  %1761 = load double, double* %1760, align 8
  %_288 = fsub double %1761, %1759
  %gen289 = fmul double %_288, %1759
  %_290 = fsub double -0.000000e+00, %1761
  %gen291 = fadd double %_290, %1759
  %_292 = fsub double -0.000000e+00, %1761
  %gen293 = fadd double %_292, %1759
  %1762 = fmul double %1761, %1759
  store double %1762, double* %1760, align 8
  %1763 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1764 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1763, i32 0, i32 1
  %1765 = getelementptr inbounds [3 x double], [3 x double]* %1764, i32 0, i32 0
  %1766 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1767 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1766, i32 0, i32 16
  %1768 = getelementptr inbounds [3 x double], [3 x double]* %1767, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1765, double* %1768)
  %1769 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1770 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %1769, i32 0, i32 1
  %1771 = getelementptr inbounds [3 x double], [3 x double]* %1770, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %1771, double -1.000000e+00)
  br label %originalBB281

originalBB297alteredBB:                           ; preds = %originalBB297, %1202
  br label %originalBB297

originalBB301alteredBB:                           ; preds = %originalBB301, %1252
  %1772 = load i32, i32* %38, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1773
  %1775 = getelementptr inbounds [5 x float], [5 x float]* %1774, i32 0, i32 0
  %1776 = load float*, float** %25, align 8
  call void @_ZN3pov13Assign_ColourEPfS0_(float* %1775, float* %1776)
  %1777 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1778 = load double*, double** %21, align 8
  %1779 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %22, align 8
  %1780 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %23, align 8
  %1781 = load double*, double** %24, align 8
  %1782 = load i32, i32* %38, align 4
  %1783 = sext i32 %1782 to i64
  %1784 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1783
  %1785 = getelementptr inbounds [5 x float], [5 x float]* %1784, i32 0, i32 0
  %1786 = load i32, i32* %42, align 4
  %1787 = load i32, i32* %43, align 4
  %1788 = load i32, i32* %44, align 4
  %1789 = load i32, i32* %45, align 4
  %1790 = load i32, i32* %30, align 4
  %_302 = sub i32 0, %1790
  %gen303 = add i32 %_302, 1
  %_304 = sub i32 0, %1790
  %gen305 = add i32 %_304, 1
  %1791 = add nsw i32 %1790, 1
  call void @_ZN3povL16block_area_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_Pfiiiii(%"struct.pov::Light_Source_Struct"* %1777, double* %1778, %"struct.pov::Ray_Struct"* %1779, %"struct.pov::Ray_Struct"* %1780, double* %1781, float* %1785, i32 %1786, i32 %1787, i32 %1788, i32 %1789, i32 %1791)
  br label %originalBB301

originalBB309alteredBB:                           ; preds = %originalBB309, %1344
  %1792 = load i32, i32* %38, align 4
  %1793 = sext i32 %1792 to i64
  %1794 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1793
  %1795 = getelementptr inbounds [5 x float], [5 x float]* %1794, i64 0, i64 0
  %1796 = load float, float* %1795, align 4
  %1797 = fpext float %1796 to double
  %_310 = fsub double %1797, 2.500000e-01
  %gen311 = fmul double %_310, 2.500000e-01
  %_312 = fsub double %1797, 2.500000e-01
  %gen313 = fmul double %_312, 2.500000e-01
  %_314 = fsub double -0.000000e+00, %1797
  %gen315 = fadd double %_314, 2.500000e-01
  %_316 = fsub double %1797, 2.500000e-01
  %gen317 = fmul double %_316, 2.500000e-01
  %_318 = fsub double %1797, 2.500000e-01
  %gen319 = fmul double %_318, 2.500000e-01
  %1798 = fmul double %1797, 2.500000e-01
  %1799 = load float*, float** %25, align 8
  %1800 = getelementptr inbounds float, float* %1799, i64 0
  %1801 = load float, float* %1800, align 4
  %1802 = fpext float %1801 to double
  %_320 = fsub double %1802, %1798
  %gen321 = fmul double %_320, %1798
  %_322 = fsub double %1802, %1798
  %gen323 = fmul double %_322, %1798
  %1803 = fadd double %1802, %1798
  %1804 = fptrunc double %1803 to float
  store float %1804, float* %1800, align 4
  %1805 = load i32, i32* %38, align 4
  %1806 = sext i32 %1805 to i64
  %1807 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1806
  %1808 = getelementptr inbounds [5 x float], [5 x float]* %1807, i64 0, i64 1
  %1809 = load float, float* %1808, align 4
  %1810 = fpext float %1809 to double
  %_324 = fsub double -0.000000e+00, %1810
  %gen325 = fadd double %_324, 2.500000e-01
  %_326 = fsub double -0.000000e+00, %1810
  %gen327 = fadd double %_326, 2.500000e-01
  %_328 = fsub double -0.000000e+00, %1810
  %gen329 = fadd double %_328, 2.500000e-01
  %_330 = fsub double -0.000000e+00, %1810
  %gen331 = fadd double %_330, 2.500000e-01
  %_332 = fsub double %1810, 2.500000e-01
  %gen333 = fmul double %_332, 2.500000e-01
  %1811 = fmul double %1810, 2.500000e-01
  %1812 = load float*, float** %25, align 8
  %1813 = getelementptr inbounds float, float* %1812, i64 1
  %1814 = load float, float* %1813, align 4
  %1815 = fpext float %1814 to double
  %_334 = fsub double -0.000000e+00, %1815
  %gen335 = fadd double %_334, %1811
  %_336 = fsub double %1815, %1811
  %gen337 = fmul double %_336, %1811
  %_338 = fsub double -0.000000e+00, %1815
  %gen339 = fadd double %_338, %1811
  %_340 = fsub double -0.000000e+00, %1815
  %gen341 = fadd double %_340, %1811
  %_342 = fsub double %1815, %1811
  %gen343 = fmul double %_342, %1811
  %_344 = fsub double -0.000000e+00, %1815
  %gen345 = fadd double %_344, %1811
  %_346 = fsub double %1815, %1811
  %gen347 = fmul double %_346, %1811
  %_348 = fsub double -0.000000e+00, %1815
  %gen349 = fadd double %_348, %1811
  %_350 = fsub double -0.000000e+00, %1815
  %gen351 = fadd double %_350, %1811
  %1816 = fadd double %1815, %1811
  %1817 = fptrunc double %1816 to float
  store float %1817, float* %1813, align 4
  %1818 = load i32, i32* %38, align 4
  %1819 = sext i32 %1818 to i64
  %1820 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1819
  %1821 = getelementptr inbounds [5 x float], [5 x float]* %1820, i64 0, i64 2
  %1822 = load float, float* %1821, align 4
  %1823 = fpext float %1822 to double
  %1824 = fmul double %1823, 2.500000e-01
  %1825 = load float*, float** %25, align 8
  %1826 = getelementptr inbounds float, float* %1825, i64 2
  %1827 = load float, float* %1826, align 4
  %1828 = fpext float %1827 to double
  %_352 = fsub double -0.000000e+00, %1828
  %gen353 = fadd double %_352, %1824
  %_354 = fsub double -0.000000e+00, %1828
  %gen355 = fadd double %_354, %1824
  %_356 = fsub double -0.000000e+00, %1828
  %gen357 = fadd double %_356, %1824
  %_358 = fsub double -0.000000e+00, %1828
  %gen359 = fadd double %_358, %1824
  %_360 = fsub double -0.000000e+00, %1828
  %gen361 = fadd double %_360, %1824
  %_362 = fsub double -0.000000e+00, %1828
  %gen363 = fadd double %_362, %1824
  %_364 = fsub double -0.000000e+00, %1828
  %gen365 = fadd double %_364, %1824
  %1829 = fadd double %1828, %1824
  %1830 = fptrunc double %1829 to float
  store float %1830, float* %1826, align 4
  %1831 = load i32, i32* %38, align 4
  %1832 = sext i32 %1831 to i64
  %1833 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1832
  %1834 = getelementptr inbounds [5 x float], [5 x float]* %1833, i64 0, i64 3
  %1835 = load float, float* %1834, align 4
  %1836 = fpext float %1835 to double
  %_366 = fsub double %1836, 2.500000e-01
  %gen367 = fmul double %_366, 2.500000e-01
  %_368 = fsub double %1836, 2.500000e-01
  %gen369 = fmul double %_368, 2.500000e-01
  %_370 = fsub double -0.000000e+00, %1836
  %gen371 = fadd double %_370, 2.500000e-01
  %_372 = fsub double %1836, 2.500000e-01
  %gen373 = fmul double %_372, 2.500000e-01
  %_374 = fsub double -0.000000e+00, %1836
  %gen375 = fadd double %_374, 2.500000e-01
  %_376 = fsub double %1836, 2.500000e-01
  %gen377 = fmul double %_376, 2.500000e-01
  %1837 = fmul double %1836, 2.500000e-01
  %1838 = load float*, float** %25, align 8
  %1839 = getelementptr inbounds float, float* %1838, i64 3
  %1840 = load float, float* %1839, align 4
  %1841 = fpext float %1840 to double
  %_378 = fsub double -0.000000e+00, %1841
  %gen379 = fadd double %_378, %1837
  %1842 = fadd double %1841, %1837
  %1843 = fptrunc double %1842 to float
  store float %1843, float* %1839, align 4
  %1844 = load i32, i32* %38, align 4
  %1845 = sext i32 %1844 to i64
  %1846 = getelementptr inbounds [4 x [5 x float]], [4 x [5 x float]]* %31, i64 0, i64 %1845
  %1847 = getelementptr inbounds [5 x float], [5 x float]* %1846, i64 0, i64 4
  %1848 = load float, float* %1847, align 4
  %1849 = fpext float %1848 to double
  %_380 = fsub double %1849, 2.500000e-01
  %gen381 = fmul double %_380, 2.500000e-01
  %_382 = fsub double -0.000000e+00, %1849
  %gen383 = fadd double %_382, 2.500000e-01
  %_384 = fsub double -0.000000e+00, %1849
  %gen385 = fadd double %_384, 2.500000e-01
  %_386 = fsub double %1849, 2.500000e-01
  %gen387 = fmul double %_386, 2.500000e-01
  %_388 = fsub double -0.000000e+00, %1849
  %gen389 = fadd double %_388, 2.500000e-01
  %1850 = fmul double %1849, 2.500000e-01
  %1851 = load float*, float** %25, align 8
  %1852 = getelementptr inbounds float, float* %1851, i64 4
  %1853 = load float, float* %1852, align 4
  %1854 = fpext float %1853 to double
  %_390 = fsub double %1854, %1850
  %gen391 = fmul double %_390, %1850
  %1855 = fadd double %1854, %1850
  %1856 = fptrunc double %1855 to float
  store float %1856, float* %1852, align 4
  br label %originalBB309

originalBB395alteredBB:                           ; preds = %originalBB395, %1426
  %1857 = load i32, i32* %38, align 4
  %_396 = sub i32 %1857, 1
  %gen397 = mul i32 %_396, 1
  %_398 = sub i32 %1857, 1
  %gen399 = mul i32 %_398, 1
  %_400 = sub i32 0, %1857
  %gen401 = add i32 %_400, 1
  %_402 = sub i32 %1857, 1
  %gen403 = mul i32 %_402, 1
  %_404 = sub i32 %1857, 1
  %gen405 = mul i32 %_404, 1
  %_406 = shl i32 %1857, 1
  %1858 = add nsw i32 %1857, 1
  store i32 %1858, i32* %38, align 4
  br label %originalBB395

originalBB410alteredBB:                           ; preds = %originalBB410, %1457
  %1859 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1860 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1859, i32 0, i32 19
  %1861 = getelementptr inbounds [3 x double], [3 x double]* %1860, i32 0, i32 0
  %1862 = getelementptr inbounds [3 x double], [3 x double]* %35, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1861, double* %1862)
  %1863 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %20, align 8
  %1864 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %1863, i32 0, i32 20
  %1865 = getelementptr inbounds [3 x double], [3 x double]* %1864, i32 0, i32 0
  %1866 = getelementptr inbounds [3 x double], [3 x double]* %36, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1865, double* %1866)
  br label %originalBB410
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL25block_point_light_LBufferEPNS_19Light_Source_StructEPdPNS_10Ray_StructEPf(%"struct.pov::Light_Source_Struct"*, double*, %"struct.pov::Ray_Struct"*, float*) #0 {
  %5 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %6 = alloca double*, align 8
  %7 = alloca %"struct.pov::Ray_Struct"*, align 8
  %8 = alloca float*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca [3 x double], align 16
  %19 = alloca %"struct.pov::Object_Struct"*, align 8
  %20 = alloca %"struct.pov::istack_struct"*, align 8
  %21 = alloca %"struct.pov::istk_entry"*, align 8
  %22 = alloca %"struct.pov::istk_entry", align 8
  %23 = alloca %"struct.pov::istk_entry", align 8
  %24 = alloca double, align 8
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %5, align 8
  store double* %1, double** %6, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %7, align 8
  store float* %3, float** %8, align 8
  store double 0.000000e+00, double* %24, align 8
  %25 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %26 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %25, i32 0, i32 42
  %27 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %26, align 8
  %28 = icmp ne %"struct.pov::Object_Struct"* %27, null
  br i1 %28, label %29, label %105

; <label>:29:                                     ; preds = %4
  %30 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %31 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %30, i32 0, i32 42
  %32 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %31, align 8
  %33 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %34 = call zeroext i1 @_ZN3pov12IntersectionEPNS_10istk_entryEPNS_13Object_StructEPNS_10Ray_StructE(%"struct.pov::istk_entry"* %23, %"struct.pov::Object_Struct"* %32, %"struct.pov::Ray_Struct"* %33)
  br i1 %34, label %35, label %74

; <label>:35:                                     ; preds = %29
  %36 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  %37 = load double, double* %36, align 8
  %38 = load double*, double** %6, align 8
  %39 = load double, double* %38, align 8
  %40 = fsub double %37, %39
  %41 = fcmp olt double %40, 0.000000e+00
  br i1 %41, label %42, label %50

; <label>:42:                                     ; preds = %35
  %43 = load double*, double** %6, align 8
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  %46 = load double, double* %45, align 8
  %47 = call double @fabs(double %46) #5
  %48 = fsub double %44, %47
  %49 = fadd double %48, 1.000000e-03
  store double %49, double* %24, align 8
  br label %73

; <label>:50:                                     ; preds = %35
  %51 = load i32, i32* @x.137
  %52 = load i32, i32* @y.138
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %50
  %59 = load float*, float** %8, align 8
  %60 = getelementptr inbounds float, float* %59, i64 2
  store float 0.000000e+00, float* %60, align 4
  %61 = load float*, float** %8, align 8
  %62 = getelementptr inbounds float, float* %61, i64 1
  store float 0.000000e+00, float* %62, align 4
  %63 = load float*, float** %8, align 8
  %64 = getelementptr inbounds float, float* %63, i64 0
  store float 0.000000e+00, float* %64, align 4
  %65 = load i32, i32* @x.137
  %66 = load i32, i32* @y.138
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %659

; <label>:73:                                     ; preds = %42
  br label %81

; <label>:74:                                     ; preds = %29
  %75 = load float*, float** %8, align 8
  %76 = getelementptr inbounds float, float* %75, i64 2
  store float 0.000000e+00, float* %76, align 4
  %77 = load float*, float** %8, align 8
  %78 = getelementptr inbounds float, float* %77, i64 1
  store float 0.000000e+00, float* %78, align 4
  %79 = load float*, float** %8, align 8
  %80 = getelementptr inbounds float, float* %79, i64 0
  store float 0.000000e+00, float* %80, align 4
  br label %659

; <label>:81:                                     ; preds = %73
  %82 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %83 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %82, i32 0, i32 27
  %84 = load i8, i8* %83, align 8
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, 3
  br i1 %86, label %87, label %88

; <label>:87:                                     ; preds = %81
  br label %659

; <label>:88:                                     ; preds = %81
  %89 = load i32, i32* @x.137
  %90 = load i32, i32* @y.138
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %88
  %97 = load i32, i32* @x.137
  %98 = load i32, i32* @y.138
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %105

; <label>:105:                                    ; preds = %originalBBpart24, %4
  %106 = load i32, i32* @x.137
  %107 = load i32, i32* @y.138
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %105
  %114 = call %"struct.pov::istack_struct"* @_ZN3pov11open_istackEv()
  store %"struct.pov::istack_struct"* %114, %"struct.pov::istack_struct"** %20, align 8
  store i32 0, i32* %9, align 4
  %115 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %116 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %115, i32 0, i32 41
  %117 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %116, align 8
  %118 = icmp ne %"struct.pov::Object_Struct"* %117, null
  %119 = load i32, i32* @x.137
  %120 = load i32, i32* @y.138
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %118, label %127, label %236

; <label>:127:                                    ; preds = %originalBBpart28
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 107))
  %128 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %129 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %130 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %129, i32 0, i32 41
  %131 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %130, align 8
  %132 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %131, i32 0, i32 6
  %133 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %132, align 8
  %134 = call zeroext i1 @_ZN3pov12Ray_In_BoundEPNS_10Ray_StructEPNS_13Object_StructE(%"struct.pov::Ray_Struct"* %128, %"struct.pov::Object_Struct"* %133)
  br i1 %134, label %135, label %230

; <label>:135:                                    ; preds = %127
  %136 = load i32, i32* @x.137
  %137 = load i32, i32* @y.138
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %135
  %144 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %145 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %144, i32 0, i32 41
  %146 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %145, align 8
  %147 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %146, i32 0, i32 0
  %148 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %147, align 8
  %149 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %148, i32 0, i32 0
  %150 = load i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)*, i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)** %149, align 8
  %151 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %152 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %151, i32 0, i32 41
  %153 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %152, align 8
  %154 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %155 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %20, align 8
  %156 = call i32 %150(%"struct.pov::Object_Struct"* %153, %"struct.pov::Ray_Struct"* %154, %"struct.pov::istack_struct"* %155)
  %157 = icmp ne i32 %156, 0
  %158 = load i32, i32* @x.137
  %159 = load i32, i32* @y.138
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %157, label %166, label %229

; <label>:166:                                    ; preds = %originalBBpart212
  br label %167

; <label>:167:                                    ; preds = %211, %166
  %168 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %20, align 8
  %169 = call %"struct.pov::istk_entry"* @_ZN3pov9pop_entryEPNS_13istack_structE(%"struct.pov::istack_struct"* %168)
  store %"struct.pov::istk_entry"* %169, %"struct.pov::istk_entry"** %21, align 8
  %170 = icmp ne %"struct.pov::istk_entry"* %169, null
  br i1 %170, label %171, label %212

; <label>:171:                                    ; preds = %167
  %172 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %21, align 8
  %173 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %172, i32 0, i32 5
  %174 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %173, align 8
  %175 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %174, i32 0, i32 13
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i64
  %178 = and i64 %177, 1
  %179 = icmp ne i64 %178, 0
  br i1 %179, label %211, label %180

; <label>:180:                                    ; preds = %171
  %181 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %21, align 8
  %182 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %181, i32 0, i32 0
  %183 = load double, double* %182, align 8
  %184 = load double*, double** %6, align 8
  %185 = load double, double* %184, align 8
  %186 = fsub double %185, 1.000000e-03
  %187 = fcmp olt double %183, %186
  br i1 %187, label %188, label %211

; <label>:188:                                    ; preds = %180
  %189 = load double*, double** %6, align 8
  %190 = load double, double* %189, align 8
  %191 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %21, align 8
  %192 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %191, i32 0, i32 0
  %193 = load double, double* %192, align 8
  %194 = fsub double %190, %193
  %195 = load double, double* %24, align 8
  %196 = fcmp ogt double %194, %195
  br i1 %196, label %197, label %211

; <label>:197:                                    ; preds = %188
  %198 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %21, align 8
  %199 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %198, i32 0, i32 0
  %200 = load double, double* %199, align 8
  %201 = fcmp ogt double %200, 1.000000e-03
  br i1 %201, label %202, label %211

; <label>:202:                                    ; preds = %197
  %203 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %21, align 8
  %204 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %205 = load float*, float** %8, align 8
  %206 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %20, align 8
  %207 = call i32 @_ZN3povL11do_blockingEPNS_10istk_entryEPNS_10Ray_StructEPfPNS_13istack_structE(%"struct.pov::istk_entry"* %203, %"struct.pov::Ray_Struct"* %204, float* %205, %"struct.pov::istack_struct"* %206)
  %208 = icmp ne i32 %207, 0
  br i1 %208, label %209, label %210

; <label>:209:                                    ; preds = %202
  store i32 1, i32* %9, align 4
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 105))
  br label %212

; <label>:210:                                    ; preds = %202
  br label %211

; <label>:211:                                    ; preds = %210, %197, %188, %180, %171
  br label %167

; <label>:212:                                    ; preds = %209, %167
  %213 = load i32, i32* @x.137
  %214 = load i32, i32* @y.138
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %212
  %221 = load i32, i32* @x.137
  %222 = load i32, i32* @y.138
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %229

; <label>:229:                                    ; preds = %originalBBpart216, %originalBBpart212
  br label %230

; <label>:230:                                    ; preds = %229, %127
  %231 = load i32, i32* %9, align 4
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %233, label %235

; <label>:233:                                    ; preds = %230
  %234 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %20, align 8
  call void @_ZN3pov12close_istackEPNS_13istack_structE(%"struct.pov::istack_struct"* %234)
  br label %659

; <label>:235:                                    ; preds = %230
  br label %236

; <label>:236:                                    ; preds = %235, %originalBBpart28
  %237 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %238 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %237, i32 0, i32 1
  %239 = getelementptr inbounds [3 x double], [3 x double]* %238, i64 0, i64 0
  %240 = load double, double* %239, align 8
  %241 = fsub double -0.000000e+00, %240
  %242 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 0
  store double %241, double* %242, align 16
  %243 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %244 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %243, i32 0, i32 1
  %245 = getelementptr inbounds [3 x double], [3 x double]* %244, i64 0, i64 1
  %246 = load double, double* %245, align 8
  %247 = fsub double -0.000000e+00, %246
  %248 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 1
  store double %247, double* %248, align 8
  %249 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %250 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %249, i32 0, i32 1
  %251 = getelementptr inbounds [3 x double], [3 x double]* %250, i64 0, i64 2
  %252 = load double, double* %251, align 8
  %253 = fsub double -0.000000e+00, %252
  %254 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  store double %253, double* %254, align 16
  %255 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 0
  %256 = load double, double* %255, align 16
  %257 = call double @fabs(double %256) #5
  store double %257, double* %15, align 8
  %258 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 1
  %259 = load double, double* %258, align 8
  %260 = call double @fabs(double %259) #5
  store double %260, double* %16, align 8
  %261 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  %262 = load double, double* %261, align 16
  %263 = call double @fabs(double %262) #5
  store double %263, double* %17, align 8
  %264 = load double, double* %15, align 8
  %265 = load double, double* %16, align 8
  %266 = fcmp ogt double %264, %265
  br i1 %266, label %267, label %338

; <label>:267:                                    ; preds = %236
  %268 = load double, double* %15, align 8
  %269 = load double, double* %17, align 8
  %270 = fcmp ogt double %268, %269
  br i1 %270, label %271, label %338

; <label>:271:                                    ; preds = %267
  %272 = load i32, i32* @x.137
  %273 = load i32, i32* @y.138
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %271
  %280 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 0
  %281 = load double, double* %280, align 16
  %282 = fcmp ogt double %281, 0.000000e+00
  %283 = load i32, i32* @x.137
  %284 = load i32, i32* @y.138
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %282, label %291, label %292

; <label>:291:                                    ; preds = %originalBBpart220
  store i32 0, i32* %14, align 4
  br label %309

; <label>:292:                                    ; preds = %originalBBpart220
  %293 = load i32, i32* @x.137
  %294 = load i32, i32* @y.138
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %292
  store i32 1, i32* %14, align 4
  %301 = load i32, i32* @x.137
  %302 = load i32, i32* @y.138
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %309

; <label>:309:                                    ; preds = %originalBBpart224, %291
  %310 = load i32, i32* @x.137
  %311 = load i32, i32* @y.138
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %309
  %318 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 1
  %319 = load double, double* %318, align 8
  %320 = fmul double 3.200000e+04, %319
  %321 = load double, double* %15, align 8
  %322 = fdiv double %320, %321
  %323 = fptosi double %322 to i32
  store i32 %323, i32* %12, align 4
  %324 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  %325 = load double, double* %324, align 16
  %326 = fmul double 3.200000e+04, %325
  %327 = load double, double* %15, align 8
  %328 = fdiv double %326, %327
  %329 = fptosi double %328 to i32
  store i32 %329, i32* %13, align 4
  %330 = load i32, i32* @x.137
  %331 = load i32, i32* @y.138
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart244, label %originalBB26alteredBB

originalBBpart244:                                ; preds = %originalBB26
  br label %461

; <label>:338:                                    ; preds = %267, %236
  %339 = load double, double* %16, align 8
  %340 = load double, double* %17, align 8
  %341 = fcmp ogt double %339, %340
  br i1 %341, label %342, label %377

; <label>:342:                                    ; preds = %338
  %343 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 1
  %344 = load double, double* %343, align 8
  %345 = fcmp ogt double %344, 0.000000e+00
  br i1 %345, label %346, label %347

; <label>:346:                                    ; preds = %342
  store i32 2, i32* %14, align 4
  br label %364

; <label>:347:                                    ; preds = %342
  %348 = load i32, i32* @x.137
  %349 = load i32, i32* @y.138
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %347
  store i32 3, i32* %14, align 4
  %356 = load i32, i32* @x.137
  %357 = load i32, i32* @y.138
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %364

; <label>:364:                                    ; preds = %originalBBpart248, %346
  %365 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 0
  %366 = load double, double* %365, align 16
  %367 = fmul double 3.200000e+04, %366
  %368 = load double, double* %16, align 8
  %369 = fdiv double %367, %368
  %370 = fptosi double %369 to i32
  store i32 %370, i32* %12, align 4
  %371 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  %372 = load double, double* %371, align 16
  %373 = fmul double 3.200000e+04, %372
  %374 = load double, double* %16, align 8
  %375 = fdiv double %373, %374
  %376 = fptosi double %375 to i32
  store i32 %376, i32* %13, align 4
  br label %444

; <label>:377:                                    ; preds = %338
  %378 = load i32, i32* @x.137
  %379 = load i32, i32* @y.138
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %377
  %386 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  %387 = load double, double* %386, align 16
  %388 = fcmp ogt double %387, 0.000000e+00
  %389 = load i32, i32* @x.137
  %390 = load i32, i32* @y.138
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %388, label %397, label %414

; <label>:397:                                    ; preds = %originalBBpart252
  %398 = load i32, i32* @x.137
  %399 = load i32, i32* @y.138
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %397
  store i32 4, i32* %14, align 4
  %406 = load i32, i32* @x.137
  %407 = load i32, i32* @y.138
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %431

; <label>:414:                                    ; preds = %originalBBpart252
  %415 = load i32, i32* @x.137
  %416 = load i32, i32* @y.138
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %414
  store i32 5, i32* %14, align 4
  %423 = load i32, i32* @x.137
  %424 = load i32, i32* @y.138
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %431

; <label>:431:                                    ; preds = %originalBBpart260, %originalBBpart256
  %432 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 0
  %433 = load double, double* %432, align 16
  %434 = fmul double 3.200000e+04, %433
  %435 = load double, double* %17, align 8
  %436 = fdiv double %434, %435
  %437 = fptosi double %436 to i32
  store i32 %437, i32* %12, align 4
  %438 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 1
  %439 = load double, double* %438, align 8
  %440 = fmul double 3.200000e+04, %439
  %441 = load double, double* %17, align 8
  %442 = fdiv double %440, %441
  %443 = fptosi double %442 to i32
  store i32 %443, i32* %13, align 4
  br label %444

; <label>:444:                                    ; preds = %431, %364
  %445 = load i32, i32* @x.137
  %446 = load i32, i32* @y.138
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %444
  %453 = load i32, i32* @x.137
  %454 = load i32, i32* @y.138
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %461

; <label>:461:                                    ; preds = %originalBBpart264, %originalBBpart244
  %462 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %463 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %462, i32 0, i32 44
  %464 = load i32, i32* %14, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [6 x %"struct.pov::Project_Tree_Node_Struct"*], [6 x %"struct.pov::Project_Tree_Node_Struct"*]* %463, i64 0, i64 %465
  %467 = load %"struct.pov::Project_Tree_Node_Struct"*, %"struct.pov::Project_Tree_Node_Struct"** %466, align 8
  %468 = icmp eq %"struct.pov::Project_Tree_Node_Struct"* %467, null
  br i1 %468, label %469, label %471

; <label>:469:                                    ; preds = %461
  %470 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %20, align 8
  call void @_ZN3pov12close_istackEPNS_13istack_structE(%"struct.pov::istack_struct"* %470)
  br label %659

; <label>:471:                                    ; preds = %461
  store i32 1, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %472

; <label>:472:                                    ; preds = %633, %471
  %473 = load i32, i32* %9, align 4
  %474 = icmp ne i32 %473, 0
  %475 = xor i1 %474, true
  br i1 %475, label %476, label %634

; <label>:476:                                    ; preds = %472
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 107))
  %477 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 5
  store %"struct.pov::Object_Struct"* null, %"struct.pov::Object_Struct"** %477, align 8
  %478 = load double*, double** %6, align 8
  %479 = load double, double* %478, align 8
  %480 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 0
  store double %479, double* %480, align 8
  %481 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %482 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %483 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %482, i32 0, i32 44
  %484 = load i32, i32* %14, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [6 x %"struct.pov::Project_Tree_Node_Struct"*], [6 x %"struct.pov::Project_Tree_Node_Struct"*]* %483, i64 0, i64 %485
  %487 = load %"struct.pov::Project_Tree_Node_Struct"*, %"struct.pov::Project_Tree_Node_Struct"** %486, align 8
  %488 = load i32, i32* %12, align 4
  %489 = load i32, i32* %13, align 4
  %490 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %491 = call i32 @_ZN3pov20Intersect_Light_TreeEPNS_10Ray_StructEPNS_24Project_Tree_Node_StructEiiPNS_10istk_entryEPPNS_13Object_StructEPNS_19Light_Source_StructE(%"struct.pov::Ray_Struct"* %481, %"struct.pov::Project_Tree_Node_Struct"* %487, i32 %488, i32 %489, %"struct.pov::istk_entry"* %22, %"struct.pov::Object_Struct"** %19, %"struct.pov::Light_Source_Struct"* %490)
  %492 = icmp ne i32 %491, 0
  br i1 %492, label %493, label %616

; <label>:493:                                    ; preds = %476
  %494 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 0
  %495 = load double, double* %494, align 8
  %496 = load double*, double** %6, align 8
  %497 = load double, double* %496, align 8
  %498 = load double, double* %24, align 8
  %499 = fsub double %497, %498
  %500 = fcmp ogt double %495, %499
  br i1 %500, label %501, label %518

; <label>:501:                                    ; preds = %493
  %502 = load i32, i32* @x.137
  %503 = load i32, i32* @y.138
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %501
  %510 = load i32, i32* @x.137
  %511 = load i32, i32* @y.138
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %634

; <label>:518:                                    ; preds = %493
  %519 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %19, align 8
  %520 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %521 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %520, i32 0, i32 41
  %522 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %521, align 8
  %523 = icmp ne %"struct.pov::Object_Struct"* %519, %522
  br i1 %523, label %524, label %589

; <label>:524:                                    ; preds = %518
  %525 = load i32, i32* @x.137
  %526 = load i32, i32* @y.138
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %524
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 106))
  %533 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %534 = load float*, float** %8, align 8
  call void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"* %22, %"struct.pov::Ray_Struct"* %533, float* %534)
  %535 = load float*, float** %8, align 8
  %536 = getelementptr inbounds float, float* %535, i64 0
  %537 = load float, float* %536, align 4
  %538 = call float @_ZSt4fabsf(float %537)
  %539 = fpext float %538 to double
  %540 = fcmp olt double %539, 1.000000e-07
  %541 = load i32, i32* @x.137
  %542 = load i32, i32* @y.138
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %540, label %549, label %588

; <label>:549:                                    ; preds = %originalBBpart272
  %550 = load float*, float** %8, align 8
  %551 = getelementptr inbounds float, float* %550, i64 1
  %552 = load float, float* %551, align 4
  %553 = call float @_ZSt4fabsf(float %552)
  %554 = fpext float %553 to double
  %555 = fcmp olt double %554, 1.000000e-07
  br i1 %555, label %556, label %588

; <label>:556:                                    ; preds = %549
  %557 = load float*, float** %8, align 8
  %558 = getelementptr inbounds float, float* %557, i64 2
  %559 = load float, float* %558, align 4
  %560 = call float @_ZSt4fabsf(float %559)
  %561 = fpext float %560 to double
  %562 = fcmp olt double %561, 1.000000e-07
  br i1 %562, label %563, label %588

; <label>:563:                                    ; preds = %556
  %564 = load i32, i32* @x.137
  %565 = load i32, i32* @y.138
  %566 = sub i32 %564, 1
  %567 = mul i32 %564, %566
  %568 = urem i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %569, %570
  br i1 %571, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %563
  %572 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %19, align 8
  %573 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %572, i32 0, i32 13
  %574 = load i32, i32* %573, align 4
  %575 = zext i32 %574 to i64
  %576 = and i64 %575, 128
  %577 = icmp ne i64 %576, 0
  %578 = load i32, i32* @x.137
  %579 = load i32, i32* @y.138
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBBpart278, label %originalBB74alteredBB

originalBBpart278:                                ; preds = %originalBB74
  br i1 %577, label %586, label %588

; <label>:586:                                    ; preds = %originalBBpart278
  %587 = load i32, i32* %10, align 4
  store i32 %587, i32* %11, align 4
  br label %634

; <label>:588:                                    ; preds = %originalBBpart278, %556, %549, %originalBBpart272
  br label %589

; <label>:589:                                    ; preds = %588, %518
  %590 = load i32, i32* @x.137
  %591 = load i32, i32* @y.138
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %589
  %598 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 0
  %599 = load double, double* %598, align 8
  %600 = load double*, double** %6, align 8
  %601 = load double, double* %600, align 8
  %602 = fsub double %601, %599
  store double %602, double* %600, align 8
  %603 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %604 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %603, i32 0, i32 0
  %605 = getelementptr inbounds [3 x double], [3 x double]* %604, i32 0, i32 0
  %606 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 1
  %607 = getelementptr inbounds [3 x double], [3 x double]* %606, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %605, double* %607)
  store i32 0, i32* %10, align 4
  %608 = load i32, i32* @x.137
  %609 = load i32, i32* @y.138
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBBpart288, label %originalBB80alteredBB

originalBBpart288:                                ; preds = %originalBB80
  br label %633

; <label>:616:                                    ; preds = %476
  %617 = load i32, i32* @x.137
  %618 = load i32, i32* @y.138
  %619 = sub i32 %617, 1
  %620 = mul i32 %617, %619
  %621 = urem i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %618, 10
  %624 = or i1 %622, %623
  br i1 %624, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %616
  %625 = load i32, i32* @x.137
  %626 = load i32, i32* @y.138
  %627 = sub i32 %625, 1
  %628 = mul i32 %625, %627
  %629 = urem i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %630, %631
  br i1 %632, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %634

; <label>:633:                                    ; preds = %originalBBpart288
  br label %472

; <label>:634:                                    ; preds = %originalBBpart292, %586, %originalBBpart268, %472
  %635 = load i32, i32* %11, align 4
  %636 = icmp ne i32 %635, 0
  br i1 %636, label %637, label %657

; <label>:637:                                    ; preds = %634
  %638 = load i32, i32* @x.137
  %639 = load i32, i32* @y.138
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %637
  %646 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %19, align 8
  %647 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %648 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %647, i32 0, i32 41
  store %"struct.pov::Object_Struct"* %646, %"struct.pov::Object_Struct"** %648, align 8
  %649 = load i32, i32* @x.137
  %650 = load i32, i32* @y.138
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %657

; <label>:657:                                    ; preds = %originalBBpart296, %634
  %658 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %20, align 8
  call void @_ZN3pov12close_istackEPNS_13istack_structE(%"struct.pov::istack_struct"* %658)
  br label %659

; <label>:659:                                    ; preds = %657, %469, %233, %87, %74, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %50
  %660 = load float*, float** %8, align 8
  %661 = getelementptr inbounds float, float* %660, i64 2
  store float 0.000000e+00, float* %661, align 4
  %662 = load float*, float** %8, align 8
  %663 = getelementptr inbounds float, float* %662, i64 1
  store float 0.000000e+00, float* %663, align 4
  %664 = load float*, float** %8, align 8
  %665 = getelementptr inbounds float, float* %664, i64 0
  store float 0.000000e+00, float* %665, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %88
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %105
  %666 = call %"struct.pov::istack_struct"* @_ZN3pov11open_istackEv()
  store %"struct.pov::istack_struct"* %666, %"struct.pov::istack_struct"** %20, align 8
  store i32 0, i32* %9, align 4
  %667 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %668 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %667, i32 0, i32 41
  %669 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %668, align 8
  %670 = icmp ne %"struct.pov::Object_Struct"* %669, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %135
  %671 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %672 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %671, i32 0, i32 41
  %673 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %672, align 8
  %674 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %673, i32 0, i32 0
  %675 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %674, align 8
  %676 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %675, i32 0, i32 0
  %677 = load i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)*, i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)** %676, align 8
  %678 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %679 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %678, i32 0, i32 41
  %680 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %679, align 8
  %681 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %682 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %20, align 8
  %683 = call i32 %677(%"struct.pov::Object_Struct"* %680, %"struct.pov::Ray_Struct"* %681, %"struct.pov::istack_struct"* %682)
  %684 = icmp ne i32 %683, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %212
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %271
  %685 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 0
  %686 = load double, double* %685, align 16
  %687 = fcmp ogt double %686, 0.000000e+00
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %292
  store i32 1, i32* %14, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %309
  %688 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 1
  %689 = load double, double* %688, align 8
  %_ = fsub double -0.000000e+00, 3.200000e+04
  %gen = fadd double %_, %689
  %_27 = fsub double 3.200000e+04, %689
  %gen28 = fmul double %_27, %689
  %690 = fmul double 3.200000e+04, %689
  %691 = load double, double* %15, align 8
  %_29 = fsub double %690, %691
  %gen30 = fmul double %_29, %691
  %692 = fdiv double %690, %691
  %693 = fptosi double %692 to i32
  store i32 %693, i32* %12, align 4
  %694 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  %695 = load double, double* %694, align 16
  %696 = fmul double 3.200000e+04, %695
  %697 = load double, double* %15, align 8
  %_31 = fsub double %696, %697
  %gen32 = fmul double %_31, %697
  %_33 = fsub double -0.000000e+00, %696
  %gen34 = fadd double %_33, %697
  %_35 = fsub double -0.000000e+00, %696
  %gen36 = fadd double %_35, %697
  %_37 = fsub double %696, %697
  %gen38 = fmul double %_37, %697
  %_39 = fsub double -0.000000e+00, %696
  %gen40 = fadd double %_39, %697
  %_41 = fsub double -0.000000e+00, %696
  %gen42 = fadd double %_41, %697
  %698 = fdiv double %696, %697
  %699 = fptosi double %698 to i32
  store i32 %699, i32* %13, align 4
  br label %originalBB26

originalBB46alteredBB:                            ; preds = %originalBB46, %347
  store i32 3, i32* %14, align 4
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %377
  %700 = getelementptr inbounds [3 x double], [3 x double]* %18, i64 0, i64 2
  %701 = load double, double* %700, align 16
  %702 = fcmp ogt double %701, 0.000000e+00
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %397
  store i32 4, i32* %14, align 4
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %414
  store i32 5, i32* %14, align 4
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %444
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %501
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %524
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 106))
  %703 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %704 = load float*, float** %8, align 8
  call void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"* %22, %"struct.pov::Ray_Struct"* %703, float* %704)
  %705 = load float*, float** %8, align 8
  %706 = getelementptr inbounds float, float* %705, i64 0
  %707 = load float, float* %706, align 4
  %708 = call float @_ZSt4fabsf(float %707)
  %709 = fpext float %708 to double
  %710 = fcmp olt double %709, 1.000000e-07
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %563
  %711 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %19, align 8
  %712 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %711, i32 0, i32 13
  %713 = load i32, i32* %712, align 4
  %714 = zext i32 %713 to i64
  %_75 = shl i64 %714, 128
  %_76 = shl i64 %714, 128
  %715 = and i64 %714, 128
  %716 = icmp ne i64 %715, 0
  br label %originalBB74

originalBB80alteredBB:                            ; preds = %originalBB80, %589
  %717 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 0
  %718 = load double, double* %717, align 8
  %719 = load double*, double** %6, align 8
  %720 = load double, double* %719, align 8
  %_81 = fsub double %720, %718
  %gen82 = fmul double %_81, %718
  %_83 = fsub double %720, %718
  %gen84 = fmul double %_83, %718
  %_85 = fsub double -0.000000e+00, %720
  %gen86 = fadd double %_85, %718
  %721 = fsub double %720, %718
  store double %721, double* %719, align 8
  %722 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %7, align 8
  %723 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %722, i32 0, i32 0
  %724 = getelementptr inbounds [3 x double], [3 x double]* %723, i32 0, i32 0
  %725 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 1
  %726 = getelementptr inbounds [3 x double], [3 x double]* %725, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %724, double* %726)
  store i32 0, i32* %10, align 4
  br label %originalBB80

originalBB90alteredBB:                            ; preds = %originalBB90, %616
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %637
  %727 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %19, align 8
  %728 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %5, align 8
  %729 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %728, i32 0, i32 41
  store %"struct.pov::Object_Struct"* %727, %"struct.pov::Object_Struct"** %729, align 8
  br label %originalBB94
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL17block_point_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructEPf(%"struct.pov::Light_Source_Struct"*, double*, %"struct.pov::Ray_Struct"*, float*) #0 {
  %5 = load i32, i32* @x.139
  %6 = load i32, i32* @y.140
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %14 = alloca double*, align 8
  %15 = alloca %"struct.pov::Ray_Struct"*, align 8
  %16 = alloca float*, align 8
  %17 = alloca %"struct.pov::Object_Struct"*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"struct.pov::istk_entry"*, align 8
  %23 = alloca %"struct.pov::istk_entry", align 8
  %24 = alloca %"struct.pov::istk_entry", align 8
  %25 = alloca %"struct.pov::istack_struct"*, align 8
  %26 = alloca double, align 8
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %13, align 8
  store double* %1, double** %14, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %15, align 8
  store float* %3, float** %16, align 8
  store double 0.000000e+00, double* %26, align 8
  %27 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %28 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %27, i32 0, i32 42
  %29 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %28, align 8
  %30 = icmp ne %"struct.pov::Object_Struct"* %29, null
  %31 = load i32, i32* @x.139
  %32 = load i32, i32* @y.140
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %131

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %41 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %40, i32 0, i32 42
  %42 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %41, align 8
  %43 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %44 = call zeroext i1 @_ZN3pov12IntersectionEPNS_10istk_entryEPNS_13Object_StructEPNS_10Ray_StructE(%"struct.pov::istk_entry"* %24, %"struct.pov::Object_Struct"* %42, %"struct.pov::Ray_Struct"* %43)
  br i1 %44, label %45, label %100

; <label>:45:                                     ; preds = %39
  %46 = load i32, i32* @x.139
  %47 = load i32, i32* @y.140
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %45
  %54 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %24, i32 0, i32 0
  %55 = load double, double* %54, align 8
  %56 = load double*, double** %14, align 8
  %57 = load double, double* %56, align 8
  %58 = fsub double %55, %57
  %59 = fcmp olt double %58, 0.000000e+00
  %60 = load i32, i32* @x.139
  %61 = load i32, i32* @y.140
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br i1 %59, label %68, label %92

; <label>:68:                                     ; preds = %originalBBpart213
  %69 = load i32, i32* @x.139
  %70 = load i32, i32* @y.140
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %68
  %77 = load double*, double** %14, align 8
  %78 = load double, double* %77, align 8
  %79 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %24, i32 0, i32 0
  %80 = load double, double* %79, align 8
  %81 = call double @fabs(double %80) #5
  %82 = fsub double %78, %81
  %83 = fadd double %82, 1.000000e-03
  store double %83, double* %26, align 8
  %84 = load i32, i32* @x.139
  %85 = load i32, i32* @y.140
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart225, label %originalBB15alteredBB

originalBBpart225:                                ; preds = %originalBB15
  br label %99

; <label>:92:                                     ; preds = %originalBBpart213
  %93 = load float*, float** %16, align 8
  %94 = getelementptr inbounds float, float* %93, i64 2
  store float 0.000000e+00, float* %94, align 4
  %95 = load float*, float** %16, align 8
  %96 = getelementptr inbounds float, float* %95, i64 1
  store float 0.000000e+00, float* %96, align 4
  %97 = load float*, float** %16, align 8
  %98 = getelementptr inbounds float, float* %97, i64 0
  store float 0.000000e+00, float* %98, align 4
  br label %713

; <label>:99:                                     ; preds = %originalBBpart225
  br label %107

; <label>:100:                                    ; preds = %39
  %101 = load float*, float** %16, align 8
  %102 = getelementptr inbounds float, float* %101, i64 2
  store float 0.000000e+00, float* %102, align 4
  %103 = load float*, float** %16, align 8
  %104 = getelementptr inbounds float, float* %103, i64 1
  store float 0.000000e+00, float* %104, align 4
  %105 = load float*, float** %16, align 8
  %106 = getelementptr inbounds float, float* %105, i64 0
  store float 0.000000e+00, float* %106, align 4
  br label %713

; <label>:107:                                    ; preds = %99
  %108 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %109 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %108, i32 0, i32 27
  %110 = load i8, i8* %109, align 8
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 3
  br i1 %112, label %113, label %130

; <label>:113:                                    ; preds = %107
  %114 = load i32, i32* @x.139
  %115 = load i32, i32* @y.140
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %113
  %122 = load i32, i32* @x.139
  %123 = load i32, i32* @y.140
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %713

; <label>:130:                                    ; preds = %107
  br label %131

; <label>:131:                                    ; preds = %130, %originalBBpart2
  %132 = call %"struct.pov::istack_struct"* @_ZN3pov11open_istackEv()
  store %"struct.pov::istack_struct"* %132, %"struct.pov::istack_struct"** %25, align 8
  store i32 0, i32* %18, align 4
  %133 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %134 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %133, i32 0, i32 41
  %135 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %134, align 8
  %136 = icmp ne %"struct.pov::Object_Struct"* %135, null
  br i1 %136, label %137, label %294

; <label>:137:                                    ; preds = %131
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 107))
  %138 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %139 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %140 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %139, i32 0, i32 41
  %141 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %140, align 8
  %142 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %141, i32 0, i32 6
  %143 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %142, align 8
  %144 = call zeroext i1 @_ZN3pov12Ray_In_BoundEPNS_10Ray_StructEPNS_13Object_StructE(%"struct.pov::Ray_Struct"* %138, %"struct.pov::Object_Struct"* %143)
  br i1 %144, label %145, label %272

; <label>:145:                                    ; preds = %137
  %146 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %147 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %146, i32 0, i32 41
  %148 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %147, align 8
  %149 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %148, i32 0, i32 0
  %150 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %149, align 8
  %151 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %150, i32 0, i32 0
  %152 = load i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)*, i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)** %151, align 8
  %153 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %154 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %153, i32 0, i32 41
  %155 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %154, align 8
  %156 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %157 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %25, align 8
  %158 = call i32 %152(%"struct.pov::Object_Struct"* %155, %"struct.pov::Ray_Struct"* %156, %"struct.pov::istack_struct"* %157)
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %271

; <label>:160:                                    ; preds = %145
  br label %161

; <label>:161:                                    ; preds = %253, %160
  %162 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %25, align 8
  %163 = call %"struct.pov::istk_entry"* @_ZN3pov9pop_entryEPNS_13istack_structE(%"struct.pov::istack_struct"* %162)
  store %"struct.pov::istk_entry"* %163, %"struct.pov::istk_entry"** %22, align 8
  %164 = icmp ne %"struct.pov::istk_entry"* %163, null
  br i1 %164, label %165, label %254

; <label>:165:                                    ; preds = %161
  %166 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %22, align 8
  %167 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %166, i32 0, i32 5
  %168 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %167, align 8
  %169 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %168, i32 0, i32 13
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  %172 = and i64 %171, 1
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %253, label %174

; <label>:174:                                    ; preds = %165
  %175 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %22, align 8
  %176 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %175, i32 0, i32 0
  %177 = load double, double* %176, align 8
  %178 = load double*, double** %14, align 8
  %179 = load double, double* %178, align 8
  %180 = fsub double %179, 1.000000e-03
  %181 = fcmp olt double %177, %180
  br i1 %181, label %182, label %253

; <label>:182:                                    ; preds = %174
  %183 = load double*, double** %14, align 8
  %184 = load double, double* %183, align 8
  %185 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %22, align 8
  %186 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %185, i32 0, i32 0
  %187 = load double, double* %186, align 8
  %188 = fsub double %184, %187
  %189 = load double, double* %26, align 8
  %190 = fcmp ogt double %188, %189
  br i1 %190, label %191, label %253

; <label>:191:                                    ; preds = %182
  %192 = load i32, i32* @x.139
  %193 = load i32, i32* @y.140
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %191
  %200 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %22, align 8
  %201 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %200, i32 0, i32 0
  %202 = load double, double* %201, align 8
  %203 = fcmp ogt double %202, 1.000000e-03
  %204 = load i32, i32* @x.139
  %205 = load i32, i32* @y.140
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %203, label %212, label %253

; <label>:212:                                    ; preds = %originalBBpart233
  %213 = load i32, i32* @x.139
  %214 = load i32, i32* @y.140
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %212
  %221 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %22, align 8
  %222 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %223 = load float*, float** %16, align 8
  %224 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %25, align 8
  %225 = call i32 @_ZN3povL11do_blockingEPNS_10istk_entryEPNS_10Ray_StructEPfPNS_13istack_structE(%"struct.pov::istk_entry"* %221, %"struct.pov::Ray_Struct"* %222, float* %223, %"struct.pov::istack_struct"* %224)
  %226 = icmp ne i32 %225, 0
  %227 = load i32, i32* @x.139
  %228 = load i32, i32* @y.140
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %226, label %235, label %236

; <label>:235:                                    ; preds = %originalBBpart237
  store i32 1, i32* %18, align 4
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 105))
  br label %254

; <label>:236:                                    ; preds = %originalBBpart237
  %237 = load i32, i32* @x.139
  %238 = load i32, i32* @y.140
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %236
  %245 = load i32, i32* @x.139
  %246 = load i32, i32* @y.140
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %253

; <label>:253:                                    ; preds = %originalBBpart241, %originalBBpart233, %182, %174, %165
  br label %161

; <label>:254:                                    ; preds = %235, %161
  %255 = load i32, i32* @x.139
  %256 = load i32, i32* @y.140
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %254
  %263 = load i32, i32* @x.139
  %264 = load i32, i32* @y.140
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %271

; <label>:271:                                    ; preds = %originalBBpart245, %145
  br label %272

; <label>:272:                                    ; preds = %271, %137
  %273 = load i32, i32* @x.139
  %274 = load i32, i32* @y.140
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %272
  %281 = load i32, i32* %18, align 4
  %282 = icmp ne i32 %281, 0
  %283 = load i32, i32* @x.139
  %284 = load i32, i32* @y.140
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br i1 %282, label %291, label %293

; <label>:291:                                    ; preds = %originalBBpart249
  %292 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %25, align 8
  call void @_ZN3pov12close_istackEPNS_13istack_structE(%"struct.pov::istack_struct"* %292)
  br label %713

; <label>:293:                                    ; preds = %originalBBpart249
  br label %294

; <label>:294:                                    ; preds = %293, %131
  store i32 1, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %295 = load i8, i8* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 29), align 4
  %296 = trunc i8 %295 to i1
  br i1 %296, label %541, label %297

; <label>:297:                                    ; preds = %294
  br label %298

; <label>:298:                                    ; preds = %523, %297
  %299 = load i32, i32* %18, align 4
  %300 = icmp ne i32 %299, 0
  %301 = xor i1 %300, true
  br i1 %301, label %302, label %524

; <label>:302:                                    ; preds = %298
  %303 = load i32, i32* @x.139
  %304 = load i32, i32* @y.140
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %302
  store i32 0, i32* %21, align 4
  %311 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 5
  store %"struct.pov::Object_Struct"* null, %"struct.pov::Object_Struct"** %311, align 8
  %312 = load double*, double** %14, align 8
  %313 = load double, double* %312, align 8
  %314 = load double, double* %26, align 8
  %315 = fsub double %313, %314
  %316 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  store double %315, double* %316, align 8
  %317 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 5), align 8
  store %"struct.pov::Object_Struct"* %317, %"struct.pov::Object_Struct"** %17, align 8
  %318 = load i32, i32* @x.139
  %319 = load i32, i32* @y.140
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart269, label %originalBB51alteredBB

originalBBpart269:                                ; preds = %originalBB51
  br label %326

; <label>:326:                                    ; preds = %391, %originalBBpart269
  %327 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %328 = icmp ne %"struct.pov::Object_Struct"* %327, null
  br i1 %328, label %329, label %395

; <label>:329:                                    ; preds = %326
  %330 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %331 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %332 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %331, i32 0, i32 41
  %333 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %332, align 8
  %334 = icmp ne %"struct.pov::Object_Struct"* %330, %333
  br i1 %334, label %335, label %390

; <label>:335:                                    ; preds = %329
  %336 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %337 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %336, i32 0, i32 13
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i64
  %340 = and i64 %339, 1
  %341 = icmp ne i64 %340, 0
  br i1 %341, label %389, label %342

; <label>:342:                                    ; preds = %335
  %343 = load i32, i32* @x.139
  %344 = load i32, i32* @y.140
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %342
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 107))
  %351 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %352 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %353 = call zeroext i1 @_ZN3pov12IntersectionEPNS_10istk_entryEPNS_13Object_StructEPNS_10Ray_StructE(%"struct.pov::istk_entry"* %24, %"struct.pov::Object_Struct"* %351, %"struct.pov::Ray_Struct"* %352)
  %354 = load i32, i32* @x.139
  %355 = load i32, i32* @y.140
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br i1 %353, label %362, label %388

; <label>:362:                                    ; preds = %originalBBpart273
  %363 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %24, i32 0, i32 0
  %364 = load double, double* %363, align 8
  %365 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  %366 = load double, double* %365, align 8
  %367 = fcmp olt double %364, %366
  br i1 %367, label %368, label %371

; <label>:368:                                    ; preds = %362
  store i32 1, i32* %21, align 4
  %369 = bitcast %"struct.pov::istk_entry"* %23 to i8*
  %370 = bitcast %"struct.pov::istk_entry"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %369, i8* %370, i64 200, i32 8, i1 false)
  br label %371

; <label>:371:                                    ; preds = %368, %362
  %372 = load i32, i32* @x.139
  %373 = load i32, i32* @y.140
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %371
  %380 = load i32, i32* @x.139
  %381 = load i32, i32* @y.140
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %388

; <label>:388:                                    ; preds = %originalBBpart277, %originalBBpart273
  br label %389

; <label>:389:                                    ; preds = %388, %335
  br label %390

; <label>:390:                                    ; preds = %389, %329
  br label %391

; <label>:391:                                    ; preds = %390
  %392 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %393 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %392, i32 0, i32 2
  %394 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %393, align 8
  store %"struct.pov::Object_Struct"* %394, %"struct.pov::Object_Struct"** %17, align 8
  br label %326

; <label>:395:                                    ; preds = %326
  %396 = load i32, i32* %21, align 4
  %397 = icmp ne i32 %396, 0
  br i1 %397, label %398, label %506

; <label>:398:                                    ; preds = %395
  %399 = load i32, i32* @x.139
  %400 = load i32, i32* @y.140
  %401 = sub i32 %399, 1
  %402 = mul i32 %399, %401
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %404, %405
  br i1 %406, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %398
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 106))
  %407 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %408 = load float*, float** %16, align 8
  call void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"* %23, %"struct.pov::Ray_Struct"* %407, float* %408)
  %409 = load float*, float** %16, align 8
  %410 = getelementptr inbounds float, float* %409, i64 0
  %411 = load float, float* %410, align 4
  %412 = call float @_ZSt4fabsf(float %411)
  %413 = fpext float %412 to double
  %414 = fcmp olt double %413, 1.000000e-07
  %415 = load i32, i32* @x.139
  %416 = load i32, i32* @y.140
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br i1 %414, label %423, label %495

; <label>:423:                                    ; preds = %originalBBpart281
  %424 = load i32, i32* @x.139
  %425 = load i32, i32* @y.140
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %423
  %432 = load float*, float** %16, align 8
  %433 = getelementptr inbounds float, float* %432, i64 1
  %434 = load float, float* %433, align 4
  %435 = call float @_ZSt4fabsf(float %434)
  %436 = fpext float %435 to double
  %437 = fcmp olt double %436, 1.000000e-07
  %438 = load i32, i32* @x.139
  %439 = load i32, i32* @y.140
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %437, label %446, label %495

; <label>:446:                                    ; preds = %originalBBpart285
  %447 = load i32, i32* @x.139
  %448 = load i32, i32* @y.140
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %446
  %455 = load float*, float** %16, align 8
  %456 = getelementptr inbounds float, float* %455, i64 2
  %457 = load float, float* %456, align 4
  %458 = call float @_ZSt4fabsf(float %457)
  %459 = fpext float %458 to double
  %460 = fcmp olt double %459, 1.000000e-07
  %461 = load i32, i32* @x.139
  %462 = load i32, i32* @y.140
  %463 = sub i32 %461, 1
  %464 = mul i32 %461, %463
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %466, %467
  br i1 %468, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br i1 %460, label %469, label %495

; <label>:469:                                    ; preds = %originalBBpart289
  %470 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 5
  %471 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %470, align 8
  %472 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %471, i32 0, i32 13
  %473 = load i32, i32* %472, align 4
  %474 = zext i32 %473 to i64
  %475 = and i64 %474, 128
  %476 = icmp ne i64 %475, 0
  br i1 %476, label %477, label %495

; <label>:477:                                    ; preds = %469
  %478 = load i32, i32* @x.139
  %479 = load i32, i32* @y.140
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %477
  %486 = load i32, i32* %19, align 4
  store i32 %486, i32* %20, align 4
  %487 = load i32, i32* @x.139
  %488 = load i32, i32* @y.140
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %524

; <label>:495:                                    ; preds = %469, %originalBBpart289, %originalBBpart285, %originalBBpart281
  %496 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  %497 = load double, double* %496, align 8
  %498 = load double*, double** %14, align 8
  %499 = load double, double* %498, align 8
  %500 = fsub double %499, %497
  store double %500, double* %498, align 8
  %501 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %502 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %501, i32 0, i32 0
  %503 = getelementptr inbounds [3 x double], [3 x double]* %502, i32 0, i32 0
  %504 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 1
  %505 = getelementptr inbounds [3 x double], [3 x double]* %504, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %503, double* %505)
  store i32 0, i32* %19, align 4
  br label %523

; <label>:506:                                    ; preds = %395
  %507 = load i32, i32* @x.139
  %508 = load i32, i32* @y.140
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %506
  %515 = load i32, i32* @x.139
  %516 = load i32, i32* @y.140
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %524

; <label>:523:                                    ; preds = %495
  br label %298

; <label>:524:                                    ; preds = %originalBBpart297, %originalBBpart293, %298
  %525 = load i32, i32* @x.139
  %526 = load i32, i32* @y.140
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %524
  %533 = load i32, i32* @x.139
  %534 = load i32, i32* @y.140
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %704

; <label>:541:                                    ; preds = %294
  store i8 1, i8* @_ZN3pov13In_Shadow_RayE, align 1
  br label %542

; <label>:542:                                    ; preds = %702, %541
  %543 = load i32, i32* @x.139
  %544 = load i32, i32* @y.140
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %542
  %551 = load i32, i32* %18, align 4
  %552 = icmp ne i32 %551, 0
  %553 = xor i1 %552, true
  %554 = load i32, i32* @x.139
  %555 = load i32, i32* @y.140
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBBpart2115, label %originalBB103alteredBB

originalBBpart2115:                               ; preds = %originalBB103
  br i1 %553, label %562, label %703

; <label>:562:                                    ; preds = %originalBBpart2115
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 107))
  %563 = load double*, double** %14, align 8
  %564 = load double, double* %563, align 8
  %565 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  store double %564, double* %565, align 8
  %566 = load %"struct.pov::BBox_Tree_Struct"*, %"struct.pov::BBox_Tree_Struct"** @_ZN3pov11Root_ObjectE, align 8
  %567 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %568 = call zeroext i1 @_ZN3pov19Intersect_BBox_TreeEPNS_16BBox_Tree_StructEPNS_10Ray_StructEPNS_10istk_entryEPPNS_13Object_StructEb(%"struct.pov::BBox_Tree_Struct"* %566, %"struct.pov::Ray_Struct"* %567, %"struct.pov::istk_entry"* %23, %"struct.pov::Object_Struct"** %17, i1 zeroext true)
  br i1 %568, label %569, label %701

; <label>:569:                                    ; preds = %562
  %570 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  %571 = load double, double* %570, align 8
  %572 = load double*, double** %14, align 8
  %573 = load double, double* %572, align 8
  %574 = load double, double* %26, align 8
  %575 = fsub double %573, %574
  %576 = fcmp ogt double %571, %575
  br i1 %576, label %577, label %594

; <label>:577:                                    ; preds = %569
  %578 = load i32, i32* @x.139
  %579 = load i32, i32* @y.140
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %577
  %586 = load i32, i32* @x.139
  %587 = load i32, i32* @y.140
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %703

; <label>:594:                                    ; preds = %569
  %595 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 5
  %596 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %595, align 8
  %597 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %596, i32 0, i32 13
  %598 = load i32, i32* %597, align 4
  %599 = zext i32 %598 to i64
  %600 = and i64 %599, 1
  %601 = icmp ne i64 %600, 0
  br i1 %601, label %674, label %602

; <label>:602:                                    ; preds = %594
  %603 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %604 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %605 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %604, i32 0, i32 41
  %606 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %605, align 8
  %607 = icmp ne %"struct.pov::Object_Struct"* %603, %606
  br i1 %607, label %608, label %657

; <label>:608:                                    ; preds = %602
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 106))
  %609 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %610 = load float*, float** %16, align 8
  call void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"* %23, %"struct.pov::Ray_Struct"* %609, float* %610)
  %611 = load float*, float** %16, align 8
  %612 = getelementptr inbounds float, float* %611, i64 0
  %613 = load float, float* %612, align 4
  %614 = call float @_ZSt4fabsf(float %613)
  %615 = fpext float %614 to double
  %616 = fcmp olt double %615, 1.000000e-07
  br i1 %616, label %617, label %656

; <label>:617:                                    ; preds = %608
  %618 = load float*, float** %16, align 8
  %619 = getelementptr inbounds float, float* %618, i64 1
  %620 = load float, float* %619, align 4
  %621 = call float @_ZSt4fabsf(float %620)
  %622 = fpext float %621 to double
  %623 = fcmp olt double %622, 1.000000e-07
  br i1 %623, label %624, label %656

; <label>:624:                                    ; preds = %617
  %625 = load i32, i32* @x.139
  %626 = load i32, i32* @y.140
  %627 = sub i32 %625, 1
  %628 = mul i32 %625, %627
  %629 = urem i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %630, %631
  br i1 %632, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %originalBB121alteredBB, %624
  %633 = load float*, float** %16, align 8
  %634 = getelementptr inbounds float, float* %633, i64 2
  %635 = load float, float* %634, align 4
  %636 = call float @_ZSt4fabsf(float %635)
  %637 = fpext float %636 to double
  %638 = fcmp olt double %637, 1.000000e-07
  %639 = load i32, i32* @x.139
  %640 = load i32, i32* @y.140
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br i1 %638, label %647, label %656

; <label>:647:                                    ; preds = %originalBBpart2123
  %648 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %649 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %648, i32 0, i32 13
  %650 = load i32, i32* %649, align 4
  %651 = zext i32 %650 to i64
  %652 = and i64 %651, 128
  %653 = icmp ne i64 %652, 0
  br i1 %653, label %654, label %656

; <label>:654:                                    ; preds = %647
  %655 = load i32, i32* %19, align 4
  store i32 %655, i32* %20, align 4
  br label %703

; <label>:656:                                    ; preds = %647, %originalBBpart2123, %617, %608
  br label %657

; <label>:657:                                    ; preds = %656, %602
  %658 = load i32, i32* @x.139
  %659 = load i32, i32* @y.140
  %660 = sub i32 %658, 1
  %661 = mul i32 %658, %660
  %662 = urem i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %663, %664
  br i1 %665, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %originalBB125alteredBB, %657
  %666 = load i32, i32* @x.139
  %667 = load i32, i32* @y.140
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %674

; <label>:674:                                    ; preds = %originalBBpart2127, %594
  %675 = load i32, i32* @x.139
  %676 = load i32, i32* @y.140
  %677 = sub i32 %675, 1
  %678 = mul i32 %675, %677
  %679 = urem i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = icmp slt i32 %676, 10
  %682 = or i1 %680, %681
  br i1 %682, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %originalBB129alteredBB, %674
  %683 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  %684 = load double, double* %683, align 8
  %685 = load double*, double** %14, align 8
  %686 = load double, double* %685, align 8
  %687 = fsub double %686, %684
  store double %687, double* %685, align 8
  %688 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %689 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %688, i32 0, i32 0
  %690 = getelementptr inbounds [3 x double], [3 x double]* %689, i32 0, i32 0
  %691 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 1
  %692 = getelementptr inbounds [3 x double], [3 x double]* %691, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %690, double* %692)
  store i32 0, i32* %19, align 4
  %693 = load i32, i32* @x.139
  %694 = load i32, i32* @y.140
  %695 = sub i32 %693, 1
  %696 = mul i32 %693, %695
  %697 = urem i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %698, %699
  br i1 %700, label %originalBBpart2139, label %originalBB129alteredBB

originalBBpart2139:                               ; preds = %originalBB129
  br label %702

; <label>:701:                                    ; preds = %562
  br label %703

; <label>:702:                                    ; preds = %originalBBpart2139
  br label %542

; <label>:703:                                    ; preds = %701, %654, %originalBBpart2119, %originalBBpart2115
  store i8 0, i8* @_ZN3pov13In_Shadow_RayE, align 1
  br label %704

; <label>:704:                                    ; preds = %703, %originalBBpart2101
  %705 = load i32, i32* %20, align 4
  %706 = icmp ne i32 %705, 0
  br i1 %706, label %707, label %711

; <label>:707:                                    ; preds = %704
  %708 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %709 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %13, align 8
  %710 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %709, i32 0, i32 41
  store %"struct.pov::Object_Struct"* %708, %"struct.pov::Object_Struct"** %710, align 8
  br label %711

; <label>:711:                                    ; preds = %707, %704
  %712 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %25, align 8
  call void @_ZN3pov12close_istackEPNS_13istack_structE(%"struct.pov::istack_struct"* %712)
  br label %713

; <label>:713:                                    ; preds = %711, %291, %originalBBpart229, %100, %92
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %714 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %715 = alloca double*, align 8
  %716 = alloca %"struct.pov::Ray_Struct"*, align 8
  %717 = alloca float*, align 8
  %718 = alloca %"struct.pov::Object_Struct"*, align 8
  %719 = alloca i32, align 4
  %720 = alloca i32, align 4
  %721 = alloca i32, align 4
  %722 = alloca i32, align 4
  %723 = alloca %"struct.pov::istk_entry"*, align 8
  %724 = alloca %"struct.pov::istk_entry", align 8
  %725 = alloca %"struct.pov::istk_entry", align 8
  %726 = alloca %"struct.pov::istack_struct"*, align 8
  %727 = alloca double, align 8
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %714, align 8
  store double* %1, double** %715, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %716, align 8
  store float* %3, float** %717, align 8
  store double 0.000000e+00, double* %727, align 8
  %728 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %714, align 8
  %729 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %728, i32 0, i32 42
  %730 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %729, align 8
  %731 = icmp ne %"struct.pov::Object_Struct"* %730, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %732 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %24, i32 0, i32 0
  %733 = load double, double* %732, align 8
  %734 = load double*, double** %14, align 8
  %735 = load double, double* %734, align 8
  %_ = fsub double %733, %735
  %gen = fmul double %_, %735
  %_2 = fsub double -0.000000e+00, %733
  %gen3 = fadd double %_2, %735
  %_4 = fsub double %733, %735
  %gen5 = fmul double %_4, %735
  %_6 = fsub double %733, %735
  %gen7 = fmul double %_6, %735
  %_8 = fsub double %733, %735
  %gen9 = fmul double %_8, %735
  %_10 = fsub double -0.000000e+00, %733
  %gen11 = fadd double %_10, %735
  %736 = fsub double %733, %735
  %737 = fcmp olt double %736, 0.000000e+00
  br label %originalBB1

originalBB15alteredBB:                            ; preds = %originalBB15, %68
  %738 = load double*, double** %14, align 8
  %739 = load double, double* %738, align 8
  %740 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %24, i32 0, i32 0
  %741 = load double, double* %740, align 8
  %742 = call double @fabs(double %741) #5
  %_16 = fsub double -0.000000e+00, %739
  %gen17 = fadd double %_16, %742
  %743 = fsub double %739, %742
  %_18 = fsub double %743, 1.000000e-03
  %gen19 = fmul double %_18, 1.000000e-03
  %_20 = fsub double %743, 1.000000e-03
  %gen21 = fmul double %_20, 1.000000e-03
  %_22 = fsub double -0.000000e+00, %743
  %gen23 = fadd double %_22, 1.000000e-03
  %744 = fadd double %743, 1.000000e-03
  store double %744, double* %26, align 8
  br label %originalBB15

originalBB27alteredBB:                            ; preds = %originalBB27, %113
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %191
  %745 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %22, align 8
  %746 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %745, i32 0, i32 0
  %747 = load double, double* %746, align 8
  %748 = fcmp ogt double %747, 1.000000e-03
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %212
  %749 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %22, align 8
  %750 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %751 = load float*, float** %16, align 8
  %752 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %25, align 8
  %753 = call i32 @_ZN3povL11do_blockingEPNS_10istk_entryEPNS_10Ray_StructEPfPNS_13istack_structE(%"struct.pov::istk_entry"* %749, %"struct.pov::Ray_Struct"* %750, float* %751, %"struct.pov::istack_struct"* %752)
  %754 = icmp ne i32 %753, 0
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %236
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %254
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %272
  %755 = load i32, i32* %18, align 4
  %756 = icmp ne i32 %755, 0
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %302
  store i32 0, i32* %21, align 4
  %757 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 5
  store %"struct.pov::Object_Struct"* null, %"struct.pov::Object_Struct"** %757, align 8
  %758 = load double*, double** %14, align 8
  %759 = load double, double* %758, align 8
  %760 = load double, double* %26, align 8
  %_52 = fsub double %759, %760
  %gen53 = fmul double %_52, %760
  %_54 = fsub double -0.000000e+00, %759
  %gen55 = fadd double %_54, %760
  %_56 = fsub double %759, %760
  %gen57 = fmul double %_56, %760
  %_58 = fsub double -0.000000e+00, %759
  %gen59 = fadd double %_58, %760
  %_60 = fsub double -0.000000e+00, %759
  %gen61 = fadd double %_60, %760
  %_62 = fsub double -0.000000e+00, %759
  %gen63 = fadd double %_62, %760
  %_64 = fsub double -0.000000e+00, %759
  %gen65 = fadd double %_64, %760
  %_66 = fsub double %759, %760
  %gen67 = fmul double %_66, %760
  %761 = fsub double %759, %760
  %762 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  store double %761, double* %762, align 8
  %763 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** getelementptr inbounds (%"struct.pov::Frame_Struct", %"struct.pov::Frame_Struct"* @_ZN3pov5FrameE, i32 0, i32 5), align 8
  store %"struct.pov::Object_Struct"* %763, %"struct.pov::Object_Struct"** %17, align 8
  br label %originalBB51

originalBB71alteredBB:                            ; preds = %originalBB71, %342
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 107))
  %764 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %17, align 8
  %765 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %766 = call zeroext i1 @_ZN3pov12IntersectionEPNS_10istk_entryEPNS_13Object_StructEPNS_10Ray_StructE(%"struct.pov::istk_entry"* %24, %"struct.pov::Object_Struct"* %764, %"struct.pov::Ray_Struct"* %765)
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %371
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %398
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 106))
  %767 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %768 = load float*, float** %16, align 8
  call void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"* %23, %"struct.pov::Ray_Struct"* %767, float* %768)
  %769 = load float*, float** %16, align 8
  %770 = getelementptr inbounds float, float* %769, i64 0
  %771 = load float, float* %770, align 4
  %772 = call float @_ZSt4fabsf(float %771)
  %773 = fpext float %772 to double
  %774 = fcmp olt double %773, 1.000000e-07
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %423
  %775 = load float*, float** %16, align 8
  %776 = getelementptr inbounds float, float* %775, i64 1
  %777 = load float, float* %776, align 4
  %778 = call float @_ZSt4fabsf(float %777)
  %779 = fpext float %778 to double
  %780 = fcmp olt double %779, 1.000000e-07
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %446
  %781 = load float*, float** %16, align 8
  %782 = getelementptr inbounds float, float* %781, i64 2
  %783 = load float, float* %782, align 4
  %784 = call float @_ZSt4fabsf(float %783)
  %785 = fpext float %784 to double
  %786 = fcmp olt double %785, 1.000000e-07
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %477
  %787 = load i32, i32* %19, align 4
  store i32 %787, i32* %20, align 4
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %506
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %524
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %542
  %788 = load i32, i32* %18, align 4
  %789 = icmp ne i32 %788, 0
  %_104 = shl i1 %789, true
  %_105 = sub i1 %789, true
  %gen106 = mul i1 %_105, true
  %_107 = sub i1 false, %789
  %gen108 = add i1 %_107, true
  %_109 = sub i1 false, %789
  %gen110 = add i1 %_109, true
  %_111 = shl i1 %789, true
  %_112 = sub i1 %789, true
  %gen113 = mul i1 %_112, true
  %790 = xor i1 %789, true
  br label %originalBB103

originalBB117alteredBB:                           ; preds = %originalBB117, %577
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %624
  %791 = load float*, float** %16, align 8
  %792 = getelementptr inbounds float, float* %791, i64 2
  %793 = load float, float* %792, align 4
  %794 = call float @_ZSt4fabsf(float %793)
  %795 = fpext float %794 to double
  %796 = fcmp olt double %795, 1.000000e-07
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %657
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %674
  %797 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 0
  %798 = load double, double* %797, align 8
  %799 = load double*, double** %14, align 8
  %800 = load double, double* %799, align 8
  %_130 = fsub double -0.000000e+00, %800
  %gen131 = fadd double %_130, %798
  %_132 = fsub double %800, %798
  %gen133 = fmul double %_132, %798
  %_134 = fsub double %800, %798
  %gen135 = fmul double %_134, %798
  %_136 = fsub double %800, %798
  %gen137 = fmul double %_136, %798
  %801 = fsub double %800, %798
  store double %801, double* %799, align 8
  %802 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %803 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %802, i32 0, i32 0
  %804 = getelementptr inbounds [3 x double], [3 x double]* %803, i32 0, i32 0
  %805 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 1
  %806 = getelementptr inbounds [3 x double], [3 x double]* %805, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %804, double* %806)
  store i32 0, i32* %19, align 4
  br label %originalBB129
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL23do_light_ray_atmosphereEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Ray_Struct"*, %"struct.pov::istk_entry"*, float*, i32) #0 {
  %5 = alloca %"struct.pov::Ray_Struct"*, align 8
  %6 = alloca %"struct.pov::istk_entry"*, align 8
  %7 = alloca float*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %"struct.pov::Ray_Struct"* %0, %"struct.pov::Ray_Struct"** %5, align 8
  store %"struct.pov::istk_entry"* %1, %"struct.pov::istk_entry"** %6, align 8
  store float* %2, float** %7, align 8
  store i32 %3, i32* %8, align 4
  %12 = load float*, float** %7, align 8
  %13 = getelementptr inbounds float, float* %12, i64 0
  %14 = load float, float* %13, align 4
  %15 = fpext float %14 to double
  %16 = fcmp olt double %15, 1.000000e-07
  br i1 %16, label %17, label %46

; <label>:17:                                     ; preds = %4
  %18 = load float*, float** %7, align 8
  %19 = getelementptr inbounds float, float* %18, i64 1
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  %22 = fcmp olt double %21, 1.000000e-07
  br i1 %22, label %23, label %46

; <label>:23:                                     ; preds = %17
  %24 = load i32, i32* @x.141
  %25 = load i32, i32* @y.142
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %23
  %32 = load float*, float** %7, align 8
  %33 = getelementptr inbounds float, float* %32, i64 2
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  %36 = fcmp olt double %35, 1.000000e-07
  %37 = load i32, i32* @x.141
  %38 = load i32, i32* @y.142
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %206

; <label>:46:                                     ; preds = %originalBBpart2, %17, %4
  store i32 1, i32* %11, align 4
  store i32 0, i32* %10, align 4
  br label %47

; <label>:47:                                     ; preds = %113, %46
  %48 = load i32, i32* @x.141
  %49 = load i32, i32* @y.142
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %47
  %56 = load i32, i32* %10, align 4
  %57 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %58 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = icmp sle i32 %56, %59
  %61 = load i32, i32* @x.141
  %62 = load i32, i32* @y.142
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %69, label %116

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %71 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %70, i32 0, i32 4
  %72 = load i32, i32* %10, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %71, i64 0, i64 %73
  %75 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %74, align 8
  %76 = getelementptr inbounds %"struct.pov::Interior_Struct", %"struct.pov::Interior_Struct"* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %96, label %79

; <label>:79:                                     ; preds = %69
  %80 = load i32, i32* @x.141
  %81 = load i32, i32* @y.142
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %79
  store i32 0, i32* %11, align 4
  %88 = load i32, i32* @x.141
  %89 = load i32, i32* @y.142
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %116

; <label>:96:                                     ; preds = %69
  %97 = load i32, i32* @x.141
  %98 = load i32, i32* @y.142
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %96
  %105 = load i32, i32* @x.141
  %106 = load i32, i32* @y.142
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %113

; <label>:113:                                    ; preds = %originalBBpart212
  %114 = load i32, i32* %10, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %10, align 4
  br label %47

; <label>:116:                                    ; preds = %originalBBpart28, %originalBBpart24
  %117 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %118 = zext i32 %117 to i64
  %119 = and i64 %118, 128
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %121, label %170

; <label>:121:                                    ; preds = %116
  %122 = load i32, i32* @x.141
  %123 = load i32, i32* @y.142
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %121
  %130 = load i32, i32* %11, align 4
  %131 = icmp ne i32 %130, 0
  %132 = load i32, i32* @x.141
  %133 = load i32, i32* @y.142
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %131, label %166, label %140

; <label>:140:                                    ; preds = %originalBBpart216
  %141 = load i32, i32* @x.141
  %142 = load i32, i32* @y.142
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %140
  %149 = load i32, i32* %8, align 4
  %150 = icmp ne i32 %149, 0
  %151 = load i32, i32* @x.141
  %152 = load i32, i32* @y.142
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %150, label %159, label %170

; <label>:159:                                    ; preds = %originalBBpart220
  %160 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %6, align 8
  %161 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %160, i32 0, i32 5
  %162 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %161, align 8
  %163 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %162, i32 0, i32 5
  %164 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %163, align 8
  %165 = icmp ne %"struct.pov::Interior_Struct"* %164, null
  br i1 %165, label %166, label %170

; <label>:166:                                    ; preds = %159, %originalBBpart216
  %167 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %168 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %6, align 8
  %169 = load float*, float** %7, align 8
  call void @_ZN3pov20Do_Finite_AtmosphereEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Ray_Struct"* %167, %"struct.pov::istk_entry"* %168, float* %169, i32 1)
  br label %170

; <label>:170:                                    ; preds = %166, %159, %originalBBpart220, %116
  %171 = load i32, i32* %8, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %206

; <label>:173:                                    ; preds = %170
  %174 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %175 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %174, i32 0, i32 2
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, -1
  br i1 %177, label %178, label %185

; <label>:178:                                    ; preds = %173
  %179 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %180 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %6, align 8
  %181 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %180, i32 0, i32 5
  %182 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %181, align 8
  %183 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %182, i32 0, i32 5
  %184 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %183, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %179, %"struct.pov::Interior_Struct"* %184)
  br label %205

; <label>:185:                                    ; preds = %173
  %186 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %187 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %6, align 8
  %188 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %187, i32 0, i32 5
  %189 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %188, align 8
  %190 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %189, i32 0, i32 5
  %191 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %190, align 8
  %192 = call i32 @_ZN3pov25Interior_In_Ray_ContainerEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %186, %"struct.pov::Interior_Struct"* %191)
  store i32 %192, i32* %9, align 4
  %193 = icmp sge i32 %192, 0
  br i1 %193, label %194, label %197

; <label>:194:                                    ; preds = %185
  %195 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %196 = load i32, i32* %9, align 4
  call void @_ZN3pov8Ray_ExitEPNS_10Ray_StructEi(%"struct.pov::Ray_Struct"* %195, i32 %196)
  br label %204

; <label>:197:                                    ; preds = %185
  %198 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %199 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %6, align 8
  %200 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %199, i32 0, i32 5
  %201 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %200, align 8
  %202 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %201, i32 0, i32 5
  %203 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %202, align 8
  call void @_ZN3pov9Ray_EnterEPNS_10Ray_StructEPNS_15Interior_StructE(%"struct.pov::Ray_Struct"* %198, %"struct.pov::Interior_Struct"* %203)
  br label %204

; <label>:204:                                    ; preds = %197, %194
  br label %205

; <label>:205:                                    ; preds = %204, %178
  br label %206

; <label>:206:                                    ; preds = %205, %170, %45
  %207 = load i32, i32* @x.141
  %208 = load i32, i32* @y.142
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %206
  %215 = load i32, i32* @x.141
  %216 = load i32, i32* @y.142
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %23
  %223 = load float*, float** %7, align 8
  %224 = getelementptr inbounds float, float* %223, i64 2
  %225 = load float, float* %224, align 4
  %226 = fpext float %225 to double
  %227 = fcmp olt double %226, 1.000000e-07
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %228 = load i32, i32* %10, align 4
  %229 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %230 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %229, i32 0, i32 2
  %231 = load i32, i32* %230, align 8
  %232 = icmp sle i32 %228, %231
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %79
  store i32 0, i32* %11, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %96
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %121
  %233 = load i32, i32* %11, align 4
  %234 = icmp ne i32 %233, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %140
  %235 = load i32, i32* %8, align 4
  %236 = icmp ne i32 %235, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %206
  br label %originalBB22
}

; Function Attrs: noinline uwtable
define internal void @_ZN3povL19do_light_area_lightEPNS_19Light_Source_StructEPdPNS_10Ray_StructES4_S2_(%"struct.pov::Light_Source_Struct"*, double*, %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"*, double*) #0 {
  %6 = load i32, i32* @x.143
  %7 = load i32, i32* @y.144
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"struct.pov::Ray_Struct"*, align 8
  %17 = alloca %"struct.pov::Ray_Struct"*, align 8
  %18 = alloca double*, align 8
  %19 = alloca double, align 8
  %20 = alloca [3 x double], align 16
  %21 = alloca double, align 8
  %22 = alloca [3 x double], align 16
  %23 = alloca i32, align 4
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %14, align 8
  store double* %1, double** %15, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %16, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %17, align 8
  store double* %4, double** %18, align 8
  %24 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %25 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %24, i32 0, i32 0
  %26 = getelementptr inbounds [3 x double], [3 x double]* %25, i32 0, i32 0
  %27 = load double*, double** %18, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %26, double* %27)
  %28 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %29 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %28, i32 0, i32 27
  %30 = load i8, i8* %29, align 8
  %31 = zext i8 %30 to i32
  %32 = icmp eq i32 %31, 4
  %33 = load i32, i32* @x.143
  %34 = load i32, i32* @y.144
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %87

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* @x.143
  %43 = load i32, i32* @y.144
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %41
  %50 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %51 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %50, i32 0, i32 1
  %52 = getelementptr inbounds [3 x double], [3 x double]* %51, i32 0, i32 0
  %53 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %54 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %53, i32 0, i32 17
  %55 = getelementptr inbounds [3 x double], [3 x double]* %54, i32 0, i32 0
  %56 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %57 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %56, i32 0, i32 18
  %58 = getelementptr inbounds [3 x double], [3 x double]* %57, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %52, double* %55, double* %58)
  %59 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %60 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %61 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %60, i32 0, i32 17
  %62 = getelementptr inbounds [3 x double], [3 x double]* %61, i32 0, i32 0
  %63 = load double*, double** %18, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %59, double* %62, double* %63)
  %64 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %65 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %64, i32 0, i32 1
  %66 = getelementptr inbounds [3 x double], [3 x double]* %65, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %21, double* %66)
  %67 = load double*, double** %15, align 8
  %68 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %69 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %70 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %69, i32 0, i32 1
  %71 = getelementptr inbounds [3 x double], [3 x double]* %70, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %67, double* %68, double* %71)
  %72 = load double, double* %21, align 8
  %73 = load double*, double** %15, align 8
  %74 = load double, double* %73, align 8
  %75 = fdiv double %74, %72
  store double %75, double* %73, align 8
  %76 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %77 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %76, i32 0, i32 1
  %78 = getelementptr inbounds [3 x double], [3 x double]* %77, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %78)
  %79 = load i32, i32* @x.143
  %80 = load i32, i32* @y.144
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %104

; <label>:87:                                     ; preds = %originalBBpart2
  %88 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %89 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %88, i32 0, i32 1
  %90 = getelementptr inbounds [3 x double], [3 x double]* %89, i32 0, i32 0
  %91 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %92 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %91, i32 0, i32 17
  %93 = getelementptr inbounds [3 x double], [3 x double]* %92, i32 0, i32 0
  %94 = load double*, double** %18, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %90, double* %93, double* %94)
  %95 = load double*, double** %15, align 8
  %96 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %97 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %96, i32 0, i32 1
  %98 = getelementptr inbounds [3 x double], [3 x double]* %97, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %95, double* %98)
  %99 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %100 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %99, i32 0, i32 1
  %101 = getelementptr inbounds [3 x double], [3 x double]* %100, i32 0, i32 0
  %102 = load double*, double** %15, align 8
  %103 = load double, double* %102, align 8
  call void @_ZN3pov15VInverseScaleEqEPdd(double* %101, double %103)
  br label %104

; <label>:104:                                    ; preds = %87, %originalBBpart24
  %105 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %106 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %105, i32 0, i32 33
  %107 = load i8, i8* %106, align 2
  %108 = icmp ne i8 %107, 0
  br i1 %108, label %109, label %157

; <label>:109:                                    ; preds = %104
  %110 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %111 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %110, i32 0, i32 28
  %112 = load i8, i8* %111, align 1
  %113 = icmp ne i8 %112, 0
  br i1 %113, label %114, label %135

; <label>:114:                                    ; preds = %109
  %115 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %116 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %117 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %116, i32 0, i32 17
  %118 = getelementptr inbounds [3 x double], [3 x double]* %117, i32 0, i32 0
  %119 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %120 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %119, i32 0, i32 18
  %121 = getelementptr inbounds [3 x double], [3 x double]* %120, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %115, double* %118, double* %121)
  %122 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %122)
  %123 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  %124 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %125 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %124, i32 0, i32 1
  %126 = getelementptr inbounds [3 x double], [3 x double]* %125, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %19, double* %123, double* %126)
  %127 = load double, double* %19, align 8
  %128 = load double*, double** %15, align 8
  %129 = load double, double* %128, align 8
  %130 = fmul double %129, %127
  store double %130, double* %128, align 8
  %131 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %132 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %131, i32 0, i32 1
  %133 = getelementptr inbounds [3 x double], [3 x double]* %132, i32 0, i32 0
  %134 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %133, double* %134)
  br label %156

; <label>:135:                                    ; preds = %109
  %136 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %137 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %136, i32 0, i32 16
  %138 = getelementptr inbounds [3 x double], [3 x double]* %137, i32 0, i32 0
  %139 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %140 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %139, i32 0, i32 1
  %141 = getelementptr inbounds [3 x double], [3 x double]* %140, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %19, double* %138, double* %141)
  %142 = load double, double* %19, align 8
  %143 = fsub double -0.000000e+00, %142
  %144 = load double*, double** %15, align 8
  %145 = load double, double* %144, align 8
  %146 = fmul double %145, %143
  store double %146, double* %144, align 8
  %147 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %148 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %147, i32 0, i32 1
  %149 = getelementptr inbounds [3 x double], [3 x double]* %148, i32 0, i32 0
  %150 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %151 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %150, i32 0, i32 16
  %152 = getelementptr inbounds [3 x double], [3 x double]* %151, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %149, double* %152)
  %153 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %154 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %153, i32 0, i32 1
  %155 = getelementptr inbounds [3 x double], [3 x double]* %154, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %155, double -1.000000e+00)
  br label %156

; <label>:156:                                    ; preds = %135, %114
  br label %157

; <label>:157:                                    ; preds = %156, %104
  %158 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %159 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %158, i32 0, i32 2
  store i32 -1, i32* %159, align 8
  %160 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %17, align 8
  %161 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %160, i32 0, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %164 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %163, i32 0, i32 2
  store i32 %162, i32* %164, align 8
  %165 = icmp sge i32 %162, 100
  br i1 %165, label %166, label %168

; <label>:166:                                    ; preds = %157
  %167 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i32 0, i32 0))
  br label %168

; <label>:168:                                    ; preds = %166, %157
  store i32 0, i32* %23, align 4
  br label %169

; <label>:169:                                    ; preds = %187, %168
  %170 = load i32, i32* %23, align 4
  %171 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %17, align 8
  %172 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %171, i32 0, i32 2
  %173 = load i32, i32* %172, align 8
  %174 = icmp sle i32 %170, %173
  br i1 %174, label %175, label %190

; <label>:175:                                    ; preds = %169
  %176 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %17, align 8
  %177 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %176, i32 0, i32 4
  %178 = load i32, i32* %23, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %177, i64 0, i64 %179
  %181 = load %"struct.pov::Interior_Struct"*, %"struct.pov::Interior_Struct"** %180, align 8
  %182 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %183 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %182, i32 0, i32 4
  %184 = load i32, i32* %23, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [100 x %"struct.pov::Interior_Struct"*], [100 x %"struct.pov::Interior_Struct"*]* %183, i64 0, i64 %185
  store %"struct.pov::Interior_Struct"* %181, %"struct.pov::Interior_Struct"** %186, align 8
  br label %187

; <label>:187:                                    ; preds = %175
  %188 = load i32, i32* %23, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %23, align 4
  br label %169

; <label>:190:                                    ; preds = %169
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %191 = alloca %"struct.pov::Light_Source_Struct"*, align 8
  %192 = alloca double*, align 8
  %193 = alloca %"struct.pov::Ray_Struct"*, align 8
  %194 = alloca %"struct.pov::Ray_Struct"*, align 8
  %195 = alloca double*, align 8
  %196 = alloca double, align 8
  %197 = alloca [3 x double], align 16
  %198 = alloca double, align 8
  %199 = alloca [3 x double], align 16
  %200 = alloca i32, align 4
  store %"struct.pov::Light_Source_Struct"* %0, %"struct.pov::Light_Source_Struct"** %191, align 8
  store double* %1, double** %192, align 8
  store %"struct.pov::Ray_Struct"* %2, %"struct.pov::Ray_Struct"** %193, align 8
  store %"struct.pov::Ray_Struct"* %3, %"struct.pov::Ray_Struct"** %194, align 8
  store double* %4, double** %195, align 8
  %201 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %193, align 8
  %202 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %201, i32 0, i32 0
  %203 = getelementptr inbounds [3 x double], [3 x double]* %202, i32 0, i32 0
  %204 = load double*, double** %195, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %203, double* %204)
  %205 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %191, align 8
  %206 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %205, i32 0, i32 27
  %207 = load i8, i8* %206, align 8
  %208 = zext i8 %207 to i32
  %209 = icmp eq i32 %208, 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %210 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %211 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %210, i32 0, i32 1
  %212 = getelementptr inbounds [3 x double], [3 x double]* %211, i32 0, i32 0
  %213 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %214 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %213, i32 0, i32 17
  %215 = getelementptr inbounds [3 x double], [3 x double]* %214, i32 0, i32 0
  %216 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %217 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %216, i32 0, i32 18
  %218 = getelementptr inbounds [3 x double], [3 x double]* %217, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %212, double* %215, double* %218)
  %219 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %220 = load %"struct.pov::Light_Source_Struct"*, %"struct.pov::Light_Source_Struct"** %14, align 8
  %221 = getelementptr inbounds %"struct.pov::Light_Source_Struct", %"struct.pov::Light_Source_Struct"* %220, i32 0, i32 17
  %222 = getelementptr inbounds [3 x double], [3 x double]* %221, i32 0, i32 0
  %223 = load double*, double** %18, align 8
  call void @_ZN3pov4VSubEPdPKdS2_(double* %219, double* %222, double* %223)
  %224 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %225 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %224, i32 0, i32 1
  %226 = getelementptr inbounds [3 x double], [3 x double]* %225, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %21, double* %226)
  %227 = load double*, double** %15, align 8
  %228 = getelementptr inbounds [3 x double], [3 x double]* %22, i32 0, i32 0
  %229 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %230 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %229, i32 0, i32 1
  %231 = getelementptr inbounds [3 x double], [3 x double]* %230, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %227, double* %228, double* %231)
  %232 = load double, double* %21, align 8
  %233 = load double*, double** %15, align 8
  %234 = load double, double* %233, align 8
  %235 = fdiv double %234, %232
  store double %235, double* %233, align 8
  %236 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %16, align 8
  %237 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %236, i32 0, i32 1
  %238 = getelementptr inbounds [3 x double], [3 x double]* %237, i32 0, i32 0
  call void @_ZN3pov12VNormalizeEqEPd(double* %238)
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov6VCrossEPdPKdS2_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca [3 x double], align 16
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = getelementptr inbounds double, double* %8, i64 1
  %10 = load double, double* %9, align 8
  %11 = load double*, double** %6, align 8
  %12 = getelementptr inbounds double, double* %11, i64 2
  %13 = load double, double* %12, align 8
  %14 = fmul double %10, %13
  %15 = load double*, double** %5, align 8
  %16 = getelementptr inbounds double, double* %15, i64 2
  %17 = load double, double* %16, align 8
  %18 = load double*, double** %6, align 8
  %19 = getelementptr inbounds double, double* %18, i64 1
  %20 = load double, double* %19, align 8
  %21 = fmul double %17, %20
  %22 = fsub double %14, %21
  %23 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0
  store double %22, double* %23, align 16
  %24 = load double*, double** %5, align 8
  %25 = getelementptr inbounds double, double* %24, i64 2
  %26 = load double, double* %25, align 8
  %27 = load double*, double** %6, align 8
  %28 = getelementptr inbounds double, double* %27, i64 0
  %29 = load double, double* %28, align 8
  %30 = fmul double %26, %29
  %31 = load double*, double** %5, align 8
  %32 = getelementptr inbounds double, double* %31, i64 0
  %33 = load double, double* %32, align 8
  %34 = load double*, double** %6, align 8
  %35 = getelementptr inbounds double, double* %34, i64 2
  %36 = load double, double* %35, align 8
  %37 = fmul double %33, %36
  %38 = fsub double %30, %37
  %39 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 1
  store double %38, double* %39, align 8
  %40 = load double*, double** %5, align 8
  %41 = getelementptr inbounds double, double* %40, i64 0
  %42 = load double, double* %41, align 8
  %43 = load double*, double** %6, align 8
  %44 = getelementptr inbounds double, double* %43, i64 1
  %45 = load double, double* %44, align 8
  %46 = fmul double %42, %45
  %47 = load double*, double** %5, align 8
  %48 = getelementptr inbounds double, double* %47, i64 1
  %49 = load double, double* %48, align 8
  %50 = load double*, double** %6, align 8
  %51 = getelementptr inbounds double, double* %50, i64 0
  %52 = load double, double* %51, align 8
  %53 = fmul double %49, %52
  %54 = fsub double %46, %53
  %55 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 2
  store double %54, double* %55, align 16
  %56 = load double*, double** %4, align 8
  %57 = getelementptr inbounds [3 x double], [3 x double]* %7, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %56, double* %57)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov6VScaleEPdPKdd(double*, double*, double) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double %2, double* %6, align 8
  %7 = load double*, double** %5, align 8
  %8 = getelementptr inbounds double, double* %7, i64 0
  %9 = load double, double* %8, align 8
  %10 = load double, double* %6, align 8
  %11 = fmul double %9, %10
  %12 = load double*, double** %4, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  store double %11, double* %13, align 8
  %14 = load double*, double** %5, align 8
  %15 = getelementptr inbounds double, double* %14, i64 1
  %16 = load double, double* %15, align 8
  %17 = load double, double* %6, align 8
  %18 = fmul double %16, %17
  %19 = load double*, double** %4, align 8
  %20 = getelementptr inbounds double, double* %19, i64 1
  store double %18, double* %20, align 8
  %21 = load double*, double** %5, align 8
  %22 = getelementptr inbounds double, double* %21, i64 2
  %23 = load double, double* %22, align 8
  %24 = load double, double* %6, align 8
  %25 = fmul double %23, %24
  %26 = load double*, double** %4, align 8
  %27 = getelementptr inbounds double, double* %26, i64 2
  store double %25, double* %27, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov11Make_VectorEPdddd(double*, double, double, double) #1 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  store double* %0, double** %5, align 8
  store double %1, double* %6, align 8
  store double %2, double* %7, align 8
  store double %3, double* %8, align 8
  %9 = load double, double* %6, align 8
  %10 = load double*, double** %5, align 8
  %11 = getelementptr inbounds double, double* %10, i64 0
  store double %9, double* %11, align 8
  %12 = load double, double* %7, align 8
  %13 = load double*, double** %5, align 8
  %14 = getelementptr inbounds double, double* %13, i64 1
  store double %12, double* %14, align 8
  %15 = load double, double* %8, align 8
  %16 = load double*, double** %5, align 8
  %17 = getelementptr inbounds double, double* %16, i64 2
  store double %15, double* %17, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov6VAddEqEPdPKd(double*, double*) #1 comdat {
  %3 = load i32, i32* @x.151
  %4 = load i32, i32* @y.152
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  store double* %0, double** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds double, double* %13, i64 0
  %15 = load double, double* %14, align 8
  %16 = load double*, double** %11, align 8
  %17 = getelementptr inbounds double, double* %16, i64 0
  %18 = load double, double* %17, align 8
  %19 = fadd double %18, %15
  store double %19, double* %17, align 8
  %20 = load double*, double** %12, align 8
  %21 = getelementptr inbounds double, double* %20, i64 1
  %22 = load double, double* %21, align 8
  %23 = load double*, double** %11, align 8
  %24 = getelementptr inbounds double, double* %23, i64 1
  %25 = load double, double* %24, align 8
  %26 = fadd double %25, %22
  store double %26, double* %24, align 8
  %27 = load double*, double** %12, align 8
  %28 = getelementptr inbounds double, double* %27, i64 2
  %29 = load double, double* %28, align 8
  %30 = load double*, double** %11, align 8
  %31 = getelementptr inbounds double, double* %30, i64 2
  %32 = load double, double* %31, align 8
  %33 = fadd double %32, %29
  store double %33, double* %31, align 8
  %34 = load i32, i32* @x.151
  %35 = load i32, i32* @y.152
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %42 = alloca double*, align 8
  %43 = alloca double*, align 8
  store double* %0, double** %42, align 8
  store double* %1, double** %43, align 8
  %44 = load double*, double** %43, align 8
  %45 = getelementptr inbounds double, double* %44, i64 0
  %46 = load double, double* %45, align 8
  %47 = load double*, double** %42, align 8
  %48 = getelementptr inbounds double, double* %47, i64 0
  %49 = load double, double* %48, align 8
  %_ = fsub double %49, %46
  %gen = fmul double %_, %46
  %_1 = fsub double %49, %46
  %gen2 = fmul double %_1, %46
  %_3 = fsub double %49, %46
  %gen4 = fmul double %_3, %46
  %50 = fadd double %49, %46
  store double %50, double* %48, align 8
  %51 = load double*, double** %43, align 8
  %52 = getelementptr inbounds double, double* %51, i64 1
  %53 = load double, double* %52, align 8
  %54 = load double*, double** %42, align 8
  %55 = getelementptr inbounds double, double* %54, i64 1
  %56 = load double, double* %55, align 8
  %_5 = fsub double -0.000000e+00, %56
  %gen6 = fadd double %_5, %53
  %_7 = fsub double %56, %53
  %gen8 = fmul double %_7, %53
  %_9 = fsub double %56, %53
  %gen10 = fmul double %_9, %53
  %_11 = fsub double -0.000000e+00, %56
  %gen12 = fadd double %_11, %53
  %_13 = fsub double %56, %53
  %gen14 = fmul double %_13, %53
  %_15 = fsub double %56, %53
  %gen16 = fmul double %_15, %53
  %57 = fadd double %56, %53
  store double %57, double* %55, align 8
  %58 = load double*, double** %43, align 8
  %59 = getelementptr inbounds double, double* %58, i64 2
  %60 = load double, double* %59, align 8
  %61 = load double*, double** %42, align 8
  %62 = getelementptr inbounds double, double* %61, i64 2
  %63 = load double, double* %62, align 8
  %_17 = fsub double %63, %60
  %gen18 = fmul double %_17, %60
  %_19 = fsub double -0.000000e+00, %63
  %gen20 = fadd double %_19, %60
  %_21 = fsub double -0.000000e+00, %63
  %gen22 = fadd double %_21, %60
  %_23 = fsub double -0.000000e+00, %63
  %gen24 = fadd double %_23, %60
  %_25 = fsub double -0.000000e+00, %63
  %gen26 = fadd double %_25, %60
  %_27 = fsub double %63, %60
  %gen28 = fmul double %_27, %60
  %64 = fadd double %63, %60
  store double %64, double* %62, align 8
  br label %originalBB
}

declare double @_ZN3pov15Colour_DistanceEPfS0_(float*, float*) #2

; Function Attrs: nounwind readnone
declare double @floor(double) #4

; Function Attrs: nounwind readnone
declare double @ceil(double) #4

declare zeroext i1 @_ZN3pov12IntersectionEPNS_10istk_entryEPNS_13Object_StructEPNS_10Ray_StructE(%"struct.pov::istk_entry"*, %"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*) #2

declare %"struct.pov::istack_struct"* @_ZN3pov11open_istackEv() #2

declare zeroext i1 @_ZN3pov12Ray_In_BoundEPNS_10Ray_StructEPNS_13Object_StructE(%"struct.pov::Ray_Struct"*, %"struct.pov::Object_Struct"*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.pov::istk_entry"* @_ZN3pov9pop_entryEPNS_13istack_structE(%"struct.pov::istack_struct"*) #1 comdat {
  %2 = alloca %"struct.pov::istack_struct"*, align 8
  store %"struct.pov::istack_struct"* %0, %"struct.pov::istack_struct"** %2, align 8
  %3 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %2, align 8
  %4 = getelementptr inbounds %"struct.pov::istack_struct", %"struct.pov::istack_struct"* %3, i32 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, 0
  br i1 %6, label %7, label %17

; <label>:7:                                      ; preds = %1
  %8 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %2, align 8
  %9 = getelementptr inbounds %"struct.pov::istack_struct", %"struct.pov::istack_struct"* %8, i32 0, i32 1
  %10 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %9, align 8
  %11 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %2, align 8
  %12 = getelementptr inbounds %"struct.pov::istack_struct", %"struct.pov::istack_struct"* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %10, i64 %15
  br label %18

; <label>:17:                                     ; preds = %1
  br label %18

; <label>:18:                                     ; preds = %17, %7
  %19 = phi %"struct.pov::istk_entry"* [ %16, %7 ], [ null, %17 ]
  %20 = load i32, i32* @x.153
  %21 = load i32, i32* @y.154
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  %28 = load i32, i32* @x.153
  %29 = load i32, i32* @y.154
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.pov::istk_entry"* %19

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal i32 @_ZN3povL11do_blockingEPNS_10istk_entryEPNS_10Ray_StructEPfPNS_13istack_structE(%"struct.pov::istk_entry"*, %"struct.pov::Ray_Struct"*, float*, %"struct.pov::istack_struct"*) #0 {
  %5 = load i32, i32* @x.155
  %6 = load i32, i32* @y.156
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i32, align 4
  %14 = alloca %"struct.pov::istk_entry"*, align 8
  %15 = alloca %"struct.pov::Ray_Struct"*, align 8
  %16 = alloca float*, align 8
  %17 = alloca %"struct.pov::istack_struct"*, align 8
  store %"struct.pov::istk_entry"* %0, %"struct.pov::istk_entry"** %14, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %15, align 8
  store float* %2, float** %16, align 8
  store %"struct.pov::istack_struct"* %3, %"struct.pov::istack_struct"** %17, align 8
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 106))
  %18 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %19 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %15, align 8
  %20 = load float*, float** %16, align 8
  call void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"* %18, %"struct.pov::Ray_Struct"* %19, float* %20)
  %21 = load float*, float** %16, align 8
  %22 = getelementptr inbounds float, float* %21, i64 0
  %23 = load float, float* %22, align 4
  %24 = call float @_ZSt4fabsf(float %23)
  %25 = fpext float %24 to double
  %26 = fcmp olt double %25, 1.000000e-07
  %27 = load i32, i32* @x.155
  %28 = load i32, i32* @y.156
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %72

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load float*, float** %16, align 8
  %37 = getelementptr inbounds float, float* %36, i64 1
  %38 = load float, float* %37, align 4
  %39 = call float @_ZSt4fabsf(float %38)
  %40 = fpext float %39 to double
  %41 = fcmp olt double %40, 1.000000e-07
  br i1 %41, label %42, label %72

; <label>:42:                                     ; preds = %35
  %43 = load float*, float** %16, align 8
  %44 = getelementptr inbounds float, float* %43, i64 2
  %45 = load float, float* %44, align 4
  %46 = call float @_ZSt4fabsf(float %45)
  %47 = fpext float %46 to double
  %48 = fcmp olt double %47, 1.000000e-07
  br i1 %48, label %49, label %72

; <label>:49:                                     ; preds = %42
  br label %50

; <label>:50:                                     ; preds = %70, %49
  %51 = load i32, i32* @x.155
  %52 = load i32, i32* @y.156
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %50
  %59 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %17, align 8
  %60 = call %"struct.pov::istk_entry"* @_ZN3pov9pop_entryEPNS_13istack_structE(%"struct.pov::istack_struct"* %59)
  store %"struct.pov::istk_entry"* %60, %"struct.pov::istk_entry"** %14, align 8
  %61 = icmp ne %"struct.pov::istk_entry"* %60, null
  %62 = load i32, i32* @x.155
  %63 = load i32, i32* @y.156
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %61, label %70, label %71

; <label>:70:                                     ; preds = %originalBBpart24
  br label %50

; <label>:71:                                     ; preds = %originalBBpart24
  store i32 1, i32* %13, align 4
  br label %89

; <label>:72:                                     ; preds = %42, %35, %originalBBpart2
  %73 = load i32, i32* @x.155
  %74 = load i32, i32* @y.156
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %72
  store i32 0, i32* %13, align 4
  %81 = load i32, i32* @x.155
  %82 = load i32, i32* @y.156
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %89

; <label>:89:                                     ; preds = %originalBBpart28, %71
  %90 = load i32, i32* @x.155
  %91 = load i32, i32* @y.156
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %89
  %98 = load i32, i32* %13, align 4
  %99 = load i32, i32* @x.155
  %100 = load i32, i32* @y.156
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 %98

originalBBalteredBB:                              ; preds = %originalBB, %4
  %107 = alloca i32, align 4
  %108 = alloca %"struct.pov::istk_entry"*, align 8
  %109 = alloca %"struct.pov::Ray_Struct"*, align 8
  %110 = alloca float*, align 8
  %111 = alloca %"struct.pov::istack_struct"*, align 8
  store %"struct.pov::istk_entry"* %0, %"struct.pov::istk_entry"** %108, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %109, align 8
  store float* %2, float** %110, align 8
  store %"struct.pov::istack_struct"* %3, %"struct.pov::istack_struct"** %111, align 8
  call void @_ZN3pov16Increase_CounterERx(i64* dereferenceable(8) getelementptr inbounds ([126 x i64], [126 x i64]* @_ZN3pov5statsE, i64 0, i64 106))
  %112 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %108, align 8
  %113 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %109, align 8
  %114 = load float*, float** %110, align 8
  call void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"* %112, %"struct.pov::Ray_Struct"* %113, float* %114)
  %115 = load float*, float** %110, align 8
  %116 = getelementptr inbounds float, float* %115, i64 0
  %117 = load float, float* %116, align 4
  %118 = call float @_ZSt4fabsf(float %117)
  %119 = fpext float %118 to double
  %120 = fcmp olt double %119, 1.000000e-07
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %121 = load %"struct.pov::istack_struct"*, %"struct.pov::istack_struct"** %17, align 8
  %122 = call %"struct.pov::istk_entry"* @_ZN3pov9pop_entryEPNS_13istack_structE(%"struct.pov::istack_struct"* %121)
  store %"struct.pov::istk_entry"* %122, %"struct.pov::istk_entry"** %14, align 8
  %123 = icmp ne %"struct.pov::istk_entry"* %122, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  store i32 0, i32* %13, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  %124 = load i32, i32* %13, align 4
  br label %originalBB10
}

declare void @_ZN3pov12close_istackEPNS_13istack_structE(%"struct.pov::istack_struct"*) #2

declare i32 @_ZN3pov20Intersect_Light_TreeEPNS_10Ray_StructEPNS_24Project_Tree_Node_StructEiiPNS_10istk_entryEPPNS_13Object_StructEPNS_19Light_Source_StructE(%"struct.pov::Ray_Struct"*, %"struct.pov::Project_Tree_Node_Struct"*, i32, i32, %"struct.pov::istk_entry"*, %"struct.pov::Object_Struct"**, %"struct.pov::Light_Source_Struct"*) #2

; Function Attrs: noinline uwtable
define internal void @_ZN3povL17filter_shadow_rayEPNS_10istk_entryEPNS_10Ray_StructEPf(%"struct.pov::istk_entry"*, %"struct.pov::Ray_Struct"*, float*) #0 {
  %4 = alloca %"struct.pov::istk_entry"*, align 8
  %5 = alloca %"struct.pov::Ray_Struct"*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [3 x double], align 16
  %10 = alloca [3 x double], align 16
  %11 = alloca [5 x float], align 16
  %12 = alloca [5 x float], align 16
  %13 = alloca %"struct.pov::Texture_Struct"*, align 8
  %14 = alloca i32, align 4
  %15 = alloca double*, align 8
  %16 = alloca %"struct.pov::Texture_Struct"**, align 8
  %17 = alloca [2 x double], align 16
  %18 = alloca double, align 8
  store %"struct.pov::istk_entry"* %0, %"struct.pov::istk_entry"** %4, align 8
  store %"struct.pov::Ray_Struct"* %1, %"struct.pov::Ray_Struct"** %5, align 8
  store float* %2, float** %6, align 8
  store %"struct.pov::Texture_Struct"* null, %"struct.pov::Texture_Struct"** %13, align 8
  store double* null, double** %15, align 8
  store %"struct.pov::Texture_Struct"** null, %"struct.pov::Texture_Struct"*** %16, align 8
  %19 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 0), align 8
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %82

; <label>:21:                                     ; preds = %3
  %22 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %23 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %22, i32 0, i32 5
  %24 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %23, align 8
  %25 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %24, i32 0, i32 13
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = and i64 %27, 524288
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %30, label %82

; <label>:30:                                     ; preds = %21
  %31 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 26), align 4
  %32 = zext i32 %31 to i64
  %33 = and i64 %32, 33554432
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %82, label %35

; <label>:35:                                     ; preds = %30
  %36 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %37 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %36, i32 0, i32 5
  %38 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %37, align 8
  %39 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %38, i32 0, i32 13
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = and i64 %41, 8388608
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %35
  %45 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %46 = zext i32 %45 to i64
  %47 = and i64 %46, 16777216
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %63

; <label>:49:                                     ; preds = %44, %35
  %50 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %51 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %50, i32 0, i32 5
  %52 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %51, align 8
  %53 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %52, i32 0, i32 13
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = and i64 %55, 16777216
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %81, label %58

; <label>:58:                                     ; preds = %49
  %59 = load i32, i32* getelementptr inbounds (%"struct.pov::photon_options_struct", %"struct.pov::photon_options_struct"* @_ZN3pov13photonOptionsE, i32 0, i32 25), align 8
  %60 = zext i32 %59 to i64
  %61 = and i64 %60, 8388608
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %81

; <label>:63:                                     ; preds = %58, %44
  %64 = load i32, i32* @x.157
  %65 = load i32, i32* @y.158
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %63
  %72 = load float*, float** %6, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %72, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %73 = load i32, i32* @x.157
  %74 = load i32, i32* @y.158
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %486

; <label>:81:                                     ; preds = %58, %49
  br label %82

; <label>:82:                                     ; preds = %81, %30, %21, %3
  %83 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %84 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %85 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %84, i32 0, i32 1
  %86 = getelementptr inbounds [3 x double], [3 x double]* %85, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %83, double* %86)
  %87 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 13), align 8
  %88 = zext i32 %87 to i64
  %89 = and i64 %88, 4
  %90 = icmp ne i64 %89, 0
  br i1 %90, label %92, label %91

; <label>:91:                                     ; preds = %82
  br label %486

; <label>:92:                                     ; preds = %82
  %93 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %94 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %93, i32 0, i32 5
  %95 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %94, align 8
  %96 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %95, i32 0, i32 13
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = and i64 %98, 128
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %119

; <label>:101:                                    ; preds = %92
  %102 = load i32, i32* @x.157
  %103 = load i32, i32* @y.158
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %101
  %110 = load float*, float** %6, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %110, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %111 = load i32, i32* @x.157
  %112 = load i32, i32* @y.158
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %486

; <label>:119:                                    ; preds = %92
  %120 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %121 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %120, i32 0, i32 5
  %122 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %121, align 8
  %123 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %122, i32 0, i32 0
  %124 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %123, align 8
  %125 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %124, i32 0, i32 2
  %126 = load void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)** %125, align 8
  %127 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  %128 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %129 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %128, i32 0, i32 5
  %130 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %129, align 8
  %131 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  call void %126(double* %127, %"struct.pov::Object_Struct"* %130, %"struct.pov::istk_entry"* %131)
  %132 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %133 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %132, i32 0, i32 5
  %134 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %133, align 8
  %135 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %134, i32 0, i32 13
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = and i64 %137, 4
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %153

; <label>:140:                                    ; preds = %119
  %141 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0
  %142 = load double, double* %141, align 16
  %143 = fsub double -0.000000e+00, %142
  %144 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0
  store double %143, double* %144, align 16
  %145 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 1
  %146 = load double, double* %145, align 8
  %147 = fsub double -0.000000e+00, %146
  %148 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 1
  store double %147, double* %148, align 8
  %149 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 2
  %150 = load double, double* %149, align 16
  %151 = fsub double -0.000000e+00, %150
  %152 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 2
  store double %151, double* %152, align 16
  br label %153

; <label>:153:                                    ; preds = %140, %119
  %154 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  %155 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %156 = getelementptr inbounds %"struct.pov::Ray_Struct", %"struct.pov::Ray_Struct"* %155, i32 0, i32 1
  %157 = getelementptr inbounds [3 x double], [3 x double]* %156, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %18, double* %154, double* %157)
  %158 = load double, double* %18, align 8
  %159 = fcmp ogt double %158, 0.000000e+00
  br i1 %159, label %160, label %178

; <label>:160:                                    ; preds = %153
  %161 = load i32, i32* @x.157
  %162 = load i32, i32* @y.158
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %160
  %169 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %169, double -1.000000e+00)
  %170 = load i32, i32* @x.157
  %171 = load i32, i32* @y.158
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %178

; <label>:178:                                    ; preds = %originalBBpart28, %153
  %179 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %180 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %179, i32 0, i32 2
  %181 = getelementptr inbounds [3 x double], [3 x double]* %180, i32 0, i32 0
  %182 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %181, double* %182)
  %183 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %184 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %183, i32 0, i32 3
  %185 = getelementptr inbounds [3 x double], [3 x double]* %184, i32 0, i32 0
  %186 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %185, double* %186)
  %187 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %188 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %187, i32 0, i32 5
  %189 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %188, align 8
  %190 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %189, i32 0, i32 13
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = and i64 %192, 8192
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %212

; <label>:195:                                    ; preds = %178
  %196 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %197 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %196, i32 0, i32 5
  %198 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %197, align 8
  %199 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %198, i32 0, i32 0
  %200 = load %"struct.pov::Method_Struct"*, %"struct.pov::Method_Struct"** %199, align 8
  %201 = getelementptr inbounds %"struct.pov::Method_Struct", %"struct.pov::Method_Struct"* %200, i32 0, i32 3
  %202 = load void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)** %201, align 8
  %203 = getelementptr inbounds [2 x double], [2 x double]* %17, i32 0, i32 0
  %204 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %205 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %204, i32 0, i32 5
  %206 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %205, align 8
  %207 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  call void %202(double* %203, %"struct.pov::Object_Struct"* %206, %"struct.pov::istk_entry"* %207)
  %208 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %209 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %208, i32 0, i32 4
  %210 = getelementptr inbounds [2 x double], [2 x double]* %209, i32 0, i32 0
  %211 = getelementptr inbounds [2 x double], [2 x double]* %17, i32 0, i32 0
  call void @_ZN3pov14Assign_UV_VectEPdS0_(double* %210, double* %211)
  br label %212

; <label>:212:                                    ; preds = %195, %178
  %213 = load i32, i32* @x.157
  %214 = load i32, i32* @y.158
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %212
  %221 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %222 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %221, i32 0, i32 5
  %223 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %222, align 8
  %224 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %223, i32 0, i32 13
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  %227 = and i64 %226, 8192
  %228 = icmp ne i64 %227, 0
  %229 = load i32, i32* @x.157
  %230 = load i32, i32* @y.158
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart216, label %originalBB10alteredBB

originalBBpart216:                                ; preds = %originalBB10
  br i1 %228, label %237, label %261

; <label>:237:                                    ; preds = %originalBBpart216
  %238 = load i32, i32* @x.157
  %239 = load i32, i32* @y.158
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %237
  %246 = getelementptr inbounds [2 x double], [2 x double]* %17, i64 0, i64 0
  %247 = load double, double* %246, align 16
  %248 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0
  store double %247, double* %248, align 16
  %249 = getelementptr inbounds [2 x double], [2 x double]* %17, i64 0, i64 1
  %250 = load double, double* %249, align 8
  %251 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 1
  store double %250, double* %251, align 8
  %252 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 2
  store double 0.000000e+00, double* %252, align 16
  %253 = load i32, i32* @x.157
  %254 = load i32, i32* @y.158
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %261

; <label>:261:                                    ; preds = %originalBBpart220, %originalBBpart216
  %262 = load i32, i32* @x.157
  %263 = load i32, i32* @y.158
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %261
  %270 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  store i32 %270, i32* %14, align 4
  %271 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %272 = add nsw i64 %271, 1
  store i64 %272, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %273 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %274 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %275 = icmp sge i64 %273, %274
  %276 = load i32, i32* @x.157
  %277 = load i32, i32* @y.158
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBBpart235, label %originalBB22alteredBB

originalBBpart235:                                ; preds = %originalBB22
  br i1 %275, label %284, label %287

; <label>:284:                                    ; preds = %originalBBpart235
  %285 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %286 = mul nsw i64 %285, 2
  call void @_ZN3pov22ResizeLightMallocPoolsEl(i64 %286)
  br label %287

; <label>:287:                                    ; preds = %284, %originalBBpart235
  %288 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %289 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %290 = getelementptr inbounds double*, double** %288, i64 %289
  %291 = load double*, double** %290, align 8
  store double* %291, double** @_ZN3pov11Weight_ListE, align 8
  %292 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %293 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %294 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %292, i64 %293
  %295 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %294, align 8
  store %"struct.pov::Light_Tested_Struct"* %295, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %296 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %297 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %298 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %296, i64 %297
  %299 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %298, align 8
  store %"struct.pov::Texture_Struct"** %299, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %300 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %301 = load double, double* %18, align 8
  %302 = call i32 @_ZN3povL19create_texture_listEPNS_10istk_entryEd(%"struct.pov::istk_entry"* %300, double %301)
  store i32 %302, i32* %8, align 4
  %303 = getelementptr inbounds [5 x float], [5 x float]* %12, i32 0, i32 0
  call void @_ZN3pov12Make_ColourAEPffffff(float* %303, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  store i32 0, i32* %7, align 4
  br label %304

; <label>:304:                                    ; preds = %399, %287
  %305 = load i32, i32* %7, align 4
  %306 = load i32, i32* %8, align 4
  %307 = icmp slt i32 %305, %306
  br i1 %307, label %308, label %402

; <label>:308:                                    ; preds = %304
  %309 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %310 = load i32, i32* %7, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds double, double* %309, i64 %311
  %313 = load double, double* %312, align 8
  %314 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %315 = fcmp olt double %313, %314
  br i1 %315, label %316, label %317

; <label>:316:                                    ; preds = %308
  br label %399

; <label>:317:                                    ; preds = %308
  %318 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %319 = load i32, i32* %7, align 4
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %318, i64 %320
  %322 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %321, align 8
  store %"struct.pov::Texture_Struct"* %322, %"struct.pov::Texture_Struct"** %13, align 8
  %323 = getelementptr inbounds [5 x float], [5 x float]* %11, i32 0, i32 0
  %324 = load %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"** %13, align 8
  %325 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %326 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  %327 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %328 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  call void @_ZN3povL14do_texture_mapEPfPNS_14Texture_StructEPdS3_PNS_10Ray_StructEdPNS_10istk_entryEi(float* %323, %"struct.pov::Texture_Struct"* %324, double* %325, double* %326, %"struct.pov::Ray_Struct"* %327, double 0.000000e+00, %"struct.pov::istk_entry"* %328, i32 1)
  %329 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %330 = load i32, i32* %7, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds double, double* %329, i64 %331
  %333 = load double, double* %332, align 8
  %334 = getelementptr inbounds [5 x float], [5 x float]* %11, i64 0, i64 0
  %335 = load float, float* %334, align 16
  %336 = fpext float %335 to double
  %337 = fmul double %333, %336
  %338 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 0
  %339 = load float, float* %338, align 16
  %340 = fpext float %339 to double
  %341 = fadd double %340, %337
  %342 = fptrunc double %341 to float
  store float %342, float* %338, align 16
  %343 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %344 = load i32, i32* %7, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds double, double* %343, i64 %345
  %347 = load double, double* %346, align 8
  %348 = getelementptr inbounds [5 x float], [5 x float]* %11, i64 0, i64 1
  %349 = load float, float* %348, align 4
  %350 = fpext float %349 to double
  %351 = fmul double %347, %350
  %352 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 1
  %353 = load float, float* %352, align 4
  %354 = fpext float %353 to double
  %355 = fadd double %354, %351
  %356 = fptrunc double %355 to float
  store float %356, float* %352, align 4
  %357 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %358 = load i32, i32* %7, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds double, double* %357, i64 %359
  %361 = load double, double* %360, align 8
  %362 = getelementptr inbounds [5 x float], [5 x float]* %11, i64 0, i64 2
  %363 = load float, float* %362, align 8
  %364 = fpext float %363 to double
  %365 = fmul double %361, %364
  %366 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 2
  %367 = load float, float* %366, align 8
  %368 = fpext float %367 to double
  %369 = fadd double %368, %365
  %370 = fptrunc double %369 to float
  store float %370, float* %366, align 8
  %371 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %372 = load i32, i32* %7, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds double, double* %371, i64 %373
  %375 = load double, double* %374, align 8
  %376 = getelementptr inbounds [5 x float], [5 x float]* %11, i64 0, i64 3
  %377 = load float, float* %376, align 4
  %378 = fpext float %377 to double
  %379 = fmul double %375, %378
  %380 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 3
  %381 = load float, float* %380, align 4
  %382 = fpext float %381 to double
  %383 = fadd double %382, %379
  %384 = fptrunc double %383 to float
  store float %384, float* %380, align 4
  %385 = load double*, double** @_ZN3pov11Weight_ListE, align 8
  %386 = load i32, i32* %7, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds double, double* %385, i64 %387
  %389 = load double, double* %388, align 8
  %390 = getelementptr inbounds [5 x float], [5 x float]* %11, i64 0, i64 4
  %391 = load float, float* %390, align 16
  %392 = fpext float %391 to double
  %393 = fmul double %389, %392
  %394 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 4
  %395 = load float, float* %394, align 16
  %396 = fpext float %395 to double
  %397 = fadd double %396, %393
  %398 = fptrunc double %397 to float
  store float %398, float* %394, align 16
  br label %399

; <label>:399:                                    ; preds = %317, %316
  %400 = load i32, i32* %7, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %7, align 4
  br label %304

; <label>:402:                                    ; preds = %304
  %403 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %404 = add nsw i64 %403, -1
  store i64 %404, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %405 = load double**, double*** @_ZN3pov14WeightListPoolE, align 8
  %406 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %407 = getelementptr inbounds double*, double** %405, i64 %406
  %408 = load double*, double** %407, align 8
  store double* %408, double** @_ZN3pov11Weight_ListE, align 8
  %409 = load %"struct.pov::Light_Tested_Struct"**, %"struct.pov::Light_Tested_Struct"*** @_ZN3pov13LightListPoolE, align 8
  %410 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %411 = getelementptr inbounds %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %409, i64 %410
  %412 = load %"struct.pov::Light_Tested_Struct"*, %"struct.pov::Light_Tested_Struct"** %411, align 8
  store %"struct.pov::Light_Tested_Struct"* %412, %"struct.pov::Light_Tested_Struct"** @_ZN3pov10Light_ListE, align 8
  %413 = load %"struct.pov::Texture_Struct"***, %"struct.pov::Texture_Struct"**** @_ZN3pov15TextureListPoolE, align 8
  %414 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %415 = getelementptr inbounds %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %413, i64 %414
  %416 = load %"struct.pov::Texture_Struct"**, %"struct.pov::Texture_Struct"*** %415, align 8
  store %"struct.pov::Texture_Struct"** %416, %"struct.pov::Texture_Struct"*** @_ZN3pov12Texture_ListE, align 8
  %417 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 3
  %418 = load float, float* %417, align 4
  %419 = call float @_ZSt4fabsf(float %418)
  %420 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 4
  %421 = load float, float* %420, align 16
  %422 = call float @_ZSt4fabsf(float %421)
  %423 = fadd float %419, %422
  %424 = fpext float %423 to double
  %425 = load double, double* @_ZN3pov11ADC_BailoutE, align 8
  %426 = fcmp olt double %424, %425
  br i1 %426, label %427, label %429

; <label>:427:                                    ; preds = %402
  %428 = load float*, float** %6, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %428, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  br label %466

; <label>:429:                                    ; preds = %402
  %430 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 3
  %431 = load float, float* %430, align 4
  %432 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 0
  %433 = load float, float* %432, align 16
  %434 = fmul float %431, %433
  %435 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 4
  %436 = load float, float* %435, align 16
  %437 = fadd float %434, %436
  %438 = load float*, float** %6, align 8
  %439 = getelementptr inbounds float, float* %438, i64 0
  %440 = load float, float* %439, align 4
  %441 = fmul float %440, %437
  store float %441, float* %439, align 4
  %442 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 3
  %443 = load float, float* %442, align 4
  %444 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 1
  %445 = load float, float* %444, align 4
  %446 = fmul float %443, %445
  %447 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 4
  %448 = load float, float* %447, align 16
  %449 = fadd float %446, %448
  %450 = load float*, float** %6, align 8
  %451 = getelementptr inbounds float, float* %450, i64 1
  %452 = load float, float* %451, align 4
  %453 = fmul float %452, %449
  store float %453, float* %451, align 4
  %454 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 3
  %455 = load float, float* %454, align 4
  %456 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 2
  %457 = load float, float* %456, align 8
  %458 = fmul float %455, %457
  %459 = getelementptr inbounds [5 x float], [5 x float]* %12, i64 0, i64 4
  %460 = load float, float* %459, align 16
  %461 = fadd float %458, %460
  %462 = load float*, float** %6, align 8
  %463 = getelementptr inbounds float, float* %462, i64 2
  %464 = load float, float* %463, align 4
  %465 = fmul float %464, %461
  store float %465, float* %463, align 4
  br label %466

; <label>:466:                                    ; preds = %429, %427
  %467 = load i32, i32* @x.157
  %468 = load i32, i32* @y.158
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %466
  %475 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %476 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %477 = load float*, float** %6, align 8
  call void @_ZN3povL23do_light_ray_atmosphereEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Ray_Struct"* %475, %"struct.pov::istk_entry"* %476, float* %477, i32 1)
  %478 = load i32, i32* @x.157
  %479 = load i32, i32* @y.158
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %486

; <label>:486:                                    ; preds = %originalBBpart239, %originalBBpart24, %91, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %63
  %487 = load float*, float** %6, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %487, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %101
  %488 = load float*, float** %6, align 8
  call void @_ZN3pov11Make_ColourEPffff(float* %488, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %160
  %489 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  call void @_ZN3pov8VScaleEqEPdd(double* %489, double -1.000000e+00)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %212
  %490 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %491 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %490, i32 0, i32 5
  %492 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %491, align 8
  %493 = getelementptr inbounds %"struct.pov::Object_Struct", %"struct.pov::Object_Struct"* %492, i32 0, i32 13
  %494 = load i32, i32* %493, align 4
  %495 = zext i32 %494 to i64
  %_ = shl i64 %495, 8192
  %_11 = shl i64 %495, 8192
  %_12 = sub i64 0, %495
  %gen = add i64 %_12, 8192
  %_13 = sub i64 0, %495
  %gen14 = add i64 %_13, 8192
  %496 = and i64 %495, 8192
  %497 = icmp ne i64 %496, 0
  br label %originalBB10

originalBB18alteredBB:                            ; preds = %originalBB18, %237
  %498 = getelementptr inbounds [2 x double], [2 x double]* %17, i64 0, i64 0
  %499 = load double, double* %498, align 16
  %500 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0
  store double %499, double* %500, align 16
  %501 = getelementptr inbounds [2 x double], [2 x double]* %17, i64 0, i64 1
  %502 = load double, double* %501, align 8
  %503 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 1
  store double %502, double* %503, align 8
  %504 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 2
  store double 0.000000e+00, double* %504, align 16
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %261
  %505 = load i32, i32* @_ZN3pov30Number_Of_Textures_And_WeightsE, align 4
  store i32 %505, i32* %14, align 4
  %506 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %_23 = sub i64 0, %506
  %gen24 = add i64 %_23, 1
  %_25 = sub i64 %506, 1
  %gen26 = mul i64 %_25, 1
  %_27 = sub i64 0, %506
  %gen28 = add i64 %_27, 1
  %_29 = sub i64 %506, 1
  %gen30 = mul i64 %_29, 1
  %_31 = shl i64 %506, 1
  %_32 = sub i64 0, %506
  %gen33 = add i64 %_32, 1
  %507 = add nsw i64 %506, 1
  store i64 %507, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %508 = load i64, i64* @_ZN3pov17LightingPoolIndexE, align 8
  %509 = load i64, i64* @_ZN3pov17MaxLightPoolDepthE, align 8
  %510 = icmp sge i64 %508, %509
  br label %originalBB22

originalBB37alteredBB:                            ; preds = %originalBB37, %466
  %511 = load %"struct.pov::Ray_Struct"*, %"struct.pov::Ray_Struct"** %5, align 8
  %512 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %4, align 8
  %513 = load float*, float** %6, align 8
  call void @_ZN3povL23do_light_ray_atmosphereEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Ray_Struct"* %511, %"struct.pov::istk_entry"* %512, float* %513, i32 1)
  br label %originalBB37
}

declare zeroext i1 @_ZN3pov19Intersect_BBox_TreeEPNS_16BBox_Tree_StructEPNS_10Ray_StructEPNS_10istk_entryEPPNS_13Object_StructEb(%"struct.pov::BBox_Tree_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istk_entry"*, %"struct.pov::Object_Struct"**, i1 zeroext) #2

declare void @_ZN3pov20Do_Finite_AtmosphereEPNS_10Ray_StructEPNS_10istk_entryEPfi(%"struct.pov::Ray_Struct"*, %"struct.pov::istk_entry"*, float*, i32) #2

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
